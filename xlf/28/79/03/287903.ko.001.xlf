<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/287903">
    <body>
      <group id="287903">
        <trans-unit id="85d1a05474aae412f66b521ba2fe2da7735d81f3" translate="yes" xml:space="preserve">
          <source>(Length: 2,450 bytes)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(길이 : 2,450 바이트)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a3f2fe3a5c190057e66e59306dccce0339379df" translate="yes" xml:space="preserve">
          <source>(Length: 605 bytes)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(길이 : 605 바이트)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="916df6622c49f7c3dce28b0d3e68d53a73913e85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pastebin.com/embed_iframe/97K6XLdU&quot;&gt;Minified Without Using Enumerations&lt;/a&gt; (length: 843 bytes (238 bytes &lt;strong&gt;longer than enumerated code&lt;/strong&gt;))</source>
          <target state="translated">&lt;a href=&quot;https://pastebin.com/embed_iframe/97K6XLdU&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;열거를 사용하지 않고 축소&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (길이 : 843 바이트 ( &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;열거 된 코드보다&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 238 바이트 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 큼&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ))&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15903d83aa7d3c054873876c321d2c44489476af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pastebin.com/embed_iframe/fcX5fN2V&quot;&gt;Source Without Using Enumerations&lt;/a&gt; (length: 1,973 bytes (477 bytes shorter than enumerated code!))</source>
          <target state="translated">&lt;a href=&quot;https://pastebin.com/embed_iframe/fcX5fN2V&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;열거를 사용하지 않는 소스&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (길이 : 1,973 바이트 (열거 된 코드보다 477 바이트 짧음))&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6bab5d0196080fd4f4d8dd0ee6fc2d44f615a772" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Days&lt;/code&gt; now refers to the &lt;code&gt;Days&lt;/code&gt; enum:</source>
          <target state="translated">&lt;code&gt;Days&lt;/code&gt; 는&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이제 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Days&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 열거 형을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나타냅니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b14652ddd09ae4786388f077fc49e97e6d24224d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ASIDE: What the heck is a proxy?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ASIDE : 도대체 무엇입니까?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7eb616ba7601a967571a2d7206ed78f876b78d64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit 2&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;편집 2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a0e3f2feb92d1b5feba526fda2d2ab318506af4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Edit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fdb70bdeb6c6461411016970d0e0c7f8c2429b41" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Full Explanation:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전체 설명 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28654a518284c0826b734aad2a182c101d864712" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Simplest solution:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가장 간단한 해결책 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5c75984975b1168ad4ea11f7453dffad0b3f0ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TLDR:&lt;/strong&gt; Add this class to your utility methods and use it throughout your code, it mocks Enum behavior from traditional programming languages, and actually throws errors when you try to either access an enumerator that does not exist or add/update an enumerator. No need to rely on &lt;code&gt;Object.freeze()&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TLDR :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 클래스를 유틸리티 메소드에 추가하고 코드 전체에서 사용하면 기존 프로그래밍 언어의 Enum 동작을 조롱하며 존재하지 않는 열거 자에 액세스하거나 열거자를 추가 / 업데이트하려고하면 실제로 오류가 발생합니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.freeze()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 의존 할 필요가 없습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b06ed81ead54d582d15311d30f0cf292c3788e02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The advantage this method has over most other answers is that you can use it alongside a static type checker&lt;/strong&gt; (e.g. &lt;a href=&quot;https://flowtype.org/&quot;&gt;Flow&lt;/a&gt;) and you can assert, at development time using static type checking, that your variables, parameters, etc. are of the specific &lt;code&gt;CellState&lt;/code&gt; &quot;enum&quot; rather than some other enum (which would be impossible to distinguish if you used generic objects or symbols).</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 방법이 다른 대부분의 답변보다 이점은 정적 유형 검사기&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (예 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://flowtype.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Flow&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )와 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함께 사용할&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 수 있으며 개발시 정적 유형 검사를 사용하여 변수, 매개 변수 등이 특정 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;CellState&lt;/code&gt; 임을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 주장 할 수 있다는 것입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 열거 형이 아닌 &quot;enum&quot;(일반 객체 또는 기호를 사용하는 경우 구분할 수 없음).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99d8511e3225b22ac94b4026f42dc64491e67c9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Updates&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="880ce715326db9a5616661aef200e050e7d666d0" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;i&gt;After reading a helpful question, I thank the author for pouring time into their writing by clicking the top left up-arrow in the question box. Each answer box also has one of these up-arrows.&lt;/i&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;i&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유용한 질문을 읽은 후 질문 상자의 왼쪽 상단 화살표를 클릭하여 글에 시간을 쏟아 준 저자에게 감사합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;각 답변 상자에는 이러한 위쪽 화살표 중 하나가 있습니다.&lt;/font&gt;&lt;/font&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c03270912624feffacc426d10b87070cd7640f59" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;i&gt;wvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwv&lt;/i&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;i&gt;wvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwv&lt;/i&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="39383c35e2fe38f2660ca0cba9d2dd83df2c9fef" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;i&gt;wvwwvw wvwvwvw wvwxvw wvwvwv vwvwvw wvwvvw wvwwvw wvwvwvw wvwvw wvwvwv vwvxwvw wvwvvw wvwwvw wvwvxwvw wvwvw wvwvwv vwvwvw wvwvvw wvwwvw xwvwvwvw wvwvw&lt;/i&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;i&gt;wvwwvw wvwvwvw wvwxvw wvwvwv vwvwvw wvwvvw wvwwvw wvwvwvw wvwvw wvwvwv vwvxwvw wvwvvw wvwwvw wvwvxwvw wvwvw wvwvwv vwvwvw wvwvvw wvwwvw xwvwvwvw wvwvw&lt;/i&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="660441f3de24c7a6d25c2f3c42f087298efd38dd" translate="yes" xml:space="preserve">
          <source>A quick and simple way would be :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;빠르고 간단한 방법은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="41171634719c90ca1cc3c98aa8055c76e23359ac" translate="yes" xml:space="preserve">
          <source>Absolutely, &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/apps/ff806186%28v=vs.94%29.aspx&quot;&gt;&lt;code&gt;Object.freeze&lt;/code&gt;&lt;/a&gt; would totally fix the problem I complained about. I would like to remind everyone that when I wrote the above, &lt;code&gt;Object.freeze&lt;/code&gt; didn't really exist.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;물론 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/apps/ff806186%28v=vs.94%29.aspx&quot;&gt; &lt;code&gt;Object.freeze&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 내가 불평 한 문제를 완전히 해결합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 내용을 작성할 때 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.freeze&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 실제로 존재하지 않았다는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것을 모두에게 상기시키고 싶습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a25e151072b3d309b84843fabec6fb0de174f3cc" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;ENUMLENGTH_&lt;/code&gt;, &lt;code&gt;ENUMLEN_&lt;/code&gt;, &lt;code&gt;INDEXLENGTH_&lt;/code&gt;, or &lt;code&gt;INDEXLEN_&lt;/code&gt; (whether &lt;code&gt;LEN_&lt;/code&gt; or &lt;code&gt;LENGTH_&lt;/code&gt; is personal preference) enumerated variable at the very end. You should use this variable wherever possible in your code to ensure that adding an extra entry to the enumeration and incrementing this value won't break your code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUMLENGTH_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUMLEN_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;INDEXLENGTH_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;INDEXLEN_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (여부 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;LEN_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;LENGTH_&lt;/code&gt; 가&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 맨 끝에 변수를 열거를 개인적인 취향입니다). 열거 형에 추가 항목을 추가하고이 값을 늘리면 코드가 손상되지 않도록 코드에서 가능한 경우이 변수를 사용해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b88998e66d6f699ab23dd5f9ed7236059d981de0" translate="yes" xml:space="preserve">
          <source>Additionally, this syntax of enumerations allows for clear and concise class extending as seen below. To extend a class, add an incrementing number to the &lt;code&gt;LEN_&lt;/code&gt; entry of the parent class. Then, finish out the subclass with its own &lt;code&gt;LEN_&lt;/code&gt; entry so that the subclass may be extended further in the future.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한이 열거 구문을 사용하면 아래와 같이 명확하고 간결한 클래스 확장이 가능합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스를 확장하려면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;상위 클래스 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;LEN_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 항목에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;증분 번호를 추가하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 자체 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;LEN_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 항목으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서브 클래스를 완성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 서브 클래스가 나중에 더 확장 될 수 있도록하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e066ce81b2565725b8916297d8ad50eb91eff06a" translate="yes" xml:space="preserve">
          <source>Alerting the name is already possible:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이름을 알리는 것은 이미 가능합니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7de833501b70d8926b282dc8cbfec6659812704a" translate="yes" xml:space="preserve">
          <source>Alternatively, you could make the values objects, so you can have the cake and eat it too:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 값을 객체로 만들 수 있으므로 케이크를 먹고 먹을 수도 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="688028ae2229c15c937fb45027bb5173514d301d" translate="yes" xml:space="preserve">
          <source>And a test to illustrate what it gives you:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 그것이 당신에게주는 것을 설명하기위한 테스트 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba9666023f38c291bdd95a29496bc580155cef1e" translate="yes" xml:space="preserve">
          <source>And by the way, if you are interested in namespaces, you may want to have a look at my solution for simple but powerful namespace and dependency management for JavaScript: &lt;a href=&quot;http://packagesinjavascript.wordpress.com/&quot;&gt;Packages JS&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이 네임 스페이스에 관심이 있다면 그건 그렇고, 당신은 자바 스크립트에 대한 간단하지만 강력한 네임 스페이스와 의존성 관리에 대한 내 솔루션 좀보고 할 수 있습니다 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://packagesinjavascript.wordpress.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;패키지 JS를&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d92233f70b80f3ef9fa13e720a94e54c011c7ce" translate="yes" xml:space="preserve">
          <source>And here's a &lt;a href=&quot;https://lodash.com/docs#mixin&quot;&gt;lodash mixin&lt;/a&gt; to create an enum using a string. While this version is a little bit more involved, it does the numbering automatically for you. All the lodash methods used in this example have a regular JavaScript equivalent, so you can easily switch them out if you want.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 문자열을 사용하여 열거 형을 만드는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://lodash.com/docs#mixin&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lodash 믹스 인입니다&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 버전은 조금 더 복잡하지만 자동으로 번호를 매 깁니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 예제에서 사용 된 모든 lodash 메소드는 일반적인 JavaScript와 동일하므로 원하는 경우 쉽게 전환 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fa2162f9bcf563ddfd081d6565d0c3024ddc36e3" translate="yes" xml:space="preserve">
          <source>And this is how you access your enums:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 이것은 당신이 열거 형에 액세스하는 방법입니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67bfbd2a48a972350c161d742bfd4dafa41d1a75" translate="yes" xml:space="preserve">
          <source>And you define your enums like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 당신은 다음과 같이 열거 형을 정의합니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45b0c4f1b3a3685803d2bcd6d9002919abc40a91" translate="yes" xml:space="preserve">
          <source>Another advantage about this form of enumeration is that it can be used to easily manage large scale projects without sacrificing minified code size. When working on a large project with lots of other people, it might be beneficial to explicitly mark and label the variable names with who created the code so that the original creator of the code can be quickly identified for collaborative bug fixing.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 열거 형식의 또 다른 장점은 축소 된 코드 크기를 희생하지 않고도 대규모 프로젝트를 쉽게 관리하는 데 사용할 수 있다는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 많은 사람들과 함께 대규모 프로젝트를 작업 할 때 코드를 만든 사람으로 변수 이름을 명시 적으로 표시하고 레이블을 지정하면 코드의 원래 작성자를 공동 버그 수정을 위해 빠르게 식별 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d6aea25c6a029bf9f8f02bc3a9b4260e3190a55b" translate="yes" xml:space="preserve">
          <source>As defined in this library.
&lt;a href=&quot;https://github.com/webmodule/foo/blob/master/foo.js#L217&quot;&gt;https://github.com/webmodule/foo/blob/master/foo.js#L217&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 라이브러리에 정의 된대로. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/webmodule/foo/blob/master/foo.js#L217&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/webmodule/foo/blob/master/foo.js#L217&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="911bafc126f87b89da389293be4ecc05b7548552" translate="yes" xml:space="preserve">
          <source>As demonstrated in the chart above and example below, here are five easy steps to get started:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 차트와 아래 예제에서 알 수 있듯이 시작하기 쉬운 5 단계는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d667c51c9b32e9b1fcaf249982247b720235cbe" translate="yes" xml:space="preserve">
          <source>As of writing, &lt;strong&gt;October 2014&lt;/strong&gt; - so here is a contemporary solution. Am writing the solution as a Node Module, and have included a test using Mocha and Chai, as well as underscoreJS. You can easily ignore these, and just take the Enum code if preferred.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;글을 쓰고있는 현재, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2014 년 10 월&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -여기에 현대적인 솔루션이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;솔루션을 노드 모듈로 작성 중이며 밑줄 JS뿐만 아니라 Mocha와 Chai를 사용한 테스트가 포함되어 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;쉽게 무시할 수 있으며 원하는 경우 Enum 코드 만 사용하면됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="350faac54ea0f8928711b41090a13efd810c781b" translate="yes" xml:space="preserve">
          <source>As seen, without enumerations, the source code is shorter at the cost of a larger minified code. I do not know about you; but I know for sure that I do not incorporate source code into the end product. Thus, this form of enumerations is far superior insomuch that it results in smaller minified file sizes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;알 수 있듯이 열거가 없으면 축소 된 코드가 클수록 소스 코드가 짧아집니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 당신에 대해 모른다; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 나는 최종 제품에 소스 코드를 포함시키지 않는다는 것을 확실히 알고 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서이 형식의 열거 형은 파일 크기가 작을수록 훨씬 우수합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eab750e0c2354d3f9ea9d61be65f4f3133c3fa6b" translate="yes" xml:space="preserve">
          <source>As you are probably aware, accessing non-existing members in JavaScript simply returns &lt;code&gt;undefined&lt;/code&gt; and does not blow up your code. Since enumerators are predefined constants (i.e. days of the week), there should never be a case when an enumerator should be undefined.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아시다시피 JavaScript에서 존재 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지 않는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;멤버에 액세스하면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 반환 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되고 코드가 터지지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;열거자는 미리 정의 된 상수 (예 : 요일)이므로 열거자를 정의하지 않아야 할 경우가 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6fe8945f9992e81f1d8ab24ec2bacddf61272d22" translate="yes" xml:space="preserve">
          <source>As you can see, you get an Enum factory, you can get all the keys simply by calling enum.keys, and you can match the keys themselves to integer constants. And you can reuse the factory with different values, and export those generated Enums using Node's modular approach.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보시다시피 Enum 팩토리를 얻으면 enum.keys를 호출하여 모든 키를 얻을 수 있으며 키 자체를 정수 상수와 일치시킬 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 다른 값으로 팩토리를 재사용하고 노드의 모듈 식 접근 방식을 사용하여 생성 된 Enum을 내보낼 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fb694c76052425353b461a312cfd02cb5fa1ff59" translate="yes" xml:space="preserve">
          <source>Assignment:</source>
          <target state="translated">Assignment:</target>
        </trans-unit>
        <trans-unit id="fe9d3ad4f45811f3d8c8c5361ad1b047538e1610" translate="yes" xml:space="preserve">
          <source>At first I was confused why &lt;code&gt;obj[1]&lt;/code&gt; returns &lt;code&gt;'Active'&lt;/code&gt;, but then realised that its dead simple - &lt;strong&gt;Assignment operator&lt;/strong&gt; assigns value and then returns it:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;처음에는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;'Active'&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 반환하는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이유가 혼란 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스러웠지만&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 그 단순한 단순- &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;할당 연산자가&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 값을 할당 한 다음 반환 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한다는 것을 깨달았 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d53a0ab9c27417fcf3d19404c238eedb56027b1" translate="yes" xml:space="preserve">
          <source>Because of the attribute &lt;code&gt;writable:false&lt;/code&gt; this</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;writable:false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성으로 인해 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;: false&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; this&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="196d60684319b28936891eeec973d4041889781c" translate="yes" xml:space="preserve">
          <source>Besides freezing the mocked enum structure to prevent additional values from accidentally/maliciously being added, none of the other answers address that intrinsic feature of Enums.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추가 값이 실수로 / 악의적으로 추가되는 것을 방지하기 위해 조롱 된 열거 구조를 동결하는 것 외에도 다른 답변은 Enum의 본질적인 기능을 다루지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6c8d874e34ea1a192fc457cef856bf3936f84fd" translate="yes" xml:space="preserve">
          <source>Bottom line: You can't.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결론 : 할 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b9a49be8197ab205463652625b4b7f51605ec6e4" translate="yes" xml:space="preserve">
          <source>But, with continuous non-sparse integer-indexed &lt;a href=&quot;https://v8.dev/blog/elements-kinds#the-elements-kind-lattice&quot;&gt;PACKED_ELEMENTS&lt;/a&gt; arrays, the browser is able to skip much of that overhead because the index of the value in the internal array is already specified. Yes, according to the ECMAScript standard, all properties are supposed to be treated as strings. Nevertheless, this aspect of the ECMAScript standard is very misleading about performance because all browsers have special optimizations for numeric indexes in arrays.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 스파 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://v8.dev/blog/elements-kinds#the-elements-kind-lattice&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스가&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 아닌 정수 인덱싱 된 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PACKED_ELEMENTS&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 배열을 사용하면 내부 배열의 값 인덱스가 이미 지정되어 있으므로 브라우저에서 해당 오버 헤드를 대부분 건너 뛸 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예, ECMAScript 표준에 따르면 모든 속성은 문자열로 취급됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그럼에도 불구하고 ECMAScript 표준의 이러한 측면은 모든 브라우저가 배열의 숫자 인덱스에 대해 특별히 최적화되어 있기 때문에 성능에 대해 매우 오해의 소지가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fcaa5339e0f27244a6c90344e73691d2fd735eb2" translate="yes" xml:space="preserve">
          <source>By doing this, constants can be acessed in the usual way (YesNo.YES, Color.GREEN) and they get a sequential int value (NO = 0, YES = 1; RED = 0, GREEN = 1, BLUE = 2).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이렇게하면 상수를 일반적인 방식으로 액세스 할 수 있으며 (예, 예, 색, 녹색) 순차적 int 값 (NO = 0, YES = 1; RED = 0, GREEN = 1, BLUE = 2)을 얻습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bfab03fe06136b948abd2eaa7e0330445d1df5bd" translate="yes" xml:space="preserve">
          <source>Closure Compiler rewards you for coding smarter and organizing your code well because, whereas many minifiers punish organized code with a bigger minified file size, Closure Compiler is able to sift through all your cleanliness and sanity to output an even smaller file size if you use tricks like variable name enumerations. That, in this one mind, is the holy grail of coding: a tool that both assists your code with a smaller minified size and assists your mind by training better programming habits.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Closure Compiler는 더 축소 된 파일 크기로 체계화 된 코드를 처벌하는 반면, 많은 Minifier가 더 작은 파일 크기로 조직화 된 코드를 처벌하는 반면, Closure Compiler는 트릭을 사용하는 경우 더 작은 파일 크기를 출력하기 위해 모든 청결과 정성을 거칠 수 있습니다. 변수 이름 열거와 같습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 하나의 마음에 코딩의 성배입니다. 작은 크기로 코드를 지원하고 더 나은 프로그래밍 습관을 훈련함으로써 마음을 돕는 도구입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="658ac22936bc1964a2ddf51197e535da110d1077" translate="yes" xml:space="preserve">
          <source>Closure compiler is able to perform some pretty incredible optimizations via inferences that are way beyond the capacities of any other Javascript minifier. Closure Compiler is able to inline primitive variables set to a fixed value. Closure Compiler is also able to make inferences based upon these inlined values and eliminate unused blocks in if-statements and loops.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클로저 컴파일러는 다른 자바 스크립트 축소 기의 용량을 넘어서는 추론을 통해 매우 놀라운 최적화를 수행 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클로저 컴파일러는 기본 변수를 고정 값으로 인라인 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Closure Compiler는 이러한 인라인 된 값을 기반으로 추론 할 수 있으며 if 문 및 루프에서 사용되지 않는 블록을 제거 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0da387c6fad9b3b430037037cccd107e71d000a3" translate="yes" xml:space="preserve">
          <source>Compare the code above to the code below.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위 코드와 아래 코드를 비교하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="79b2cd845d9a1d042bfe0169baafc7b518a17c8e" translate="yes" xml:space="preserve">
          <source>Comparision:</source>
          <target state="translated">Comparision:</target>
        </trans-unit>
        <trans-unit id="1cdf4147bf4d9a958ecfa5b40ad2b3de1779a200" translate="yes" xml:space="preserve">
          <source>Complete example
&lt;a href=&quot;https://gist.github.com/lnt/bb13a2fd63cdb8bce85fd62965a20026&quot;&gt;https://gist.github.com/lnt/bb13a2fd63cdb8bce85fd62965a20026&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;완전한 예 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://gist.github.com/lnt/bb13a2fd63cdb8bce85fd62965a20026&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://gist.github.com/lnt/bb13a2fd63cdb8bce85fd62965a20026&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e157c5da4410b7e9de85f5c93026b9176e69064" translate="yes" xml:space="preserve">
          <source>Create</source>
          <target state="translated">Create</target>
        </trans-unit>
        <trans-unit id="cd5885c6b241174f0bbeeedf2260e1dabd3f285f" translate="yes" xml:space="preserve">
          <source>Create an object literal:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체 리터럴을 만듭니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a6bf4455b8a756f055431c0a18c5686838aec889" translate="yes" xml:space="preserve">
          <source>Decide whether enumerations in the group are mutually-exclusive or independent. If mutually-exclusive, start each enumerated variable name with &lt;code&gt;ENUM_&lt;/code&gt;. If independent or side-by-side, use &lt;code&gt;INDEX_&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그룹의 열거가 상호 배타적인지 독립적인지 결정합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;상호 배타적 인 경우 열거 된 각 변수 이름을 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUM_&lt;/code&gt; 로&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 시작 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하십시오&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;독립적이거나 나란히 있으면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;INDEX_&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하십시오&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65c9035fafbecc6952f659f88811fa7c0051c8c7" translate="yes" xml:space="preserve">
          <source>Determine a name for the enumeration group. Think of a noun that can describe the purpose of the enumeration or at least the entries in the enumeration. For example, a group of enumerations representing colors choosable by the user might be better named COLORCHOICES than COLORS.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;열거 그룹의 이름을 결정하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;열거의 목적 또는 열거의 항목을 설명 할 수있는 명사를 생각해보십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어, 사용자가 선택할 수있는 색상을 나타내는 열거 그룹은 COLORS보다 COLORCHOICES로 명명하는 것이 좋습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5ddffd1b10d68b50c76ae9746d5a8747c7ef8e4a" translate="yes" xml:space="preserve">
          <source>Don't get me wrong, JavaScript's behavior of returning &lt;code&gt;undefined&lt;/code&gt; when accessing undefined properties is actually a very powerful feature of language, but it's not a feature you want when you are trying to mock traditional Enum structures.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정의되지 않은 속성에 액세스 할 때 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 상태 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로 반환하는 JavaScript의 동작 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 실제로 매우 강력한 언어 기능이지만 전통적인 Enum 구조를 조롱하려고 할 때 원하는 기능은 아닙니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eb6b4a1271399bfe9ec378054e8ab2bcde9708d1" translate="yes" xml:space="preserve">
          <source>Easy to access your enums</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;열거 형에 쉽게 액세스&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0bcf3d9dab12c1fd6d7433968d2a187754c3930c" translate="yes" xml:space="preserve">
          <source>Easy to declare enums</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;열거 형을 쉽게 선언&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a5964f36e23edc327c0ba6df922a6d0dec847752" translate="yes" xml:space="preserve">
          <source>Edit - small improvement - now with varargs: (unfortunately it doesn't work properly on IE :S... should stick with previous version then)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;varargs를 사용하여 편집-작은 개선-이제 불행히도 IE에서 제대로 작동하지 않습니다 : S ... 이전 버전을 사용해야합니다)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4c668399fe5b43c7422bf83f563c110ecbf3290" translate="yes" xml:space="preserve">
          <source>Even though &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes&quot;&gt;only static methods&lt;/a&gt; (and not static properties) are supported in ES2015 (see &lt;a href=&quot;http://exploringjs.com/es6/ch_classes.html#_inside-the-body-of-a-class-definition&quot;&gt;here&lt;/a&gt; as well, &amp;sect;15.2.2.2), curiously you can use the below with Babel with the &lt;code&gt;es2015&lt;/code&gt; preset:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비록 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 방법&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (그리고 정적 속성) (참조 ES2015에서 지원됩니다 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://exploringjs.com/es6/ch_classes.html#_inside-the-body-of-a-class-definition&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 뿐만 아니라, &amp;sect;15.2.2.2), 호기심 당신은 함께 바벨과 아래를 사용할 수 있습니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;es2015&lt;/code&gt; 의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사전 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">스 니펫 확장</target>
        </trans-unit>
        <trans-unit id="71cfb5cd7ec68c82f31da02402da517468c2695f" translate="yes" xml:space="preserve">
          <source>File: enums.js</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파일 : enums.js&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eea2cac1f0d8facb5a53c61a746d1718d6958fc6" translate="yes" xml:space="preserve">
          <source>For each entry, create a new local variable whose name starts with &lt;code&gt;ENUM_&lt;/code&gt; or &lt;code&gt;INDEX_&lt;/code&gt;, then the name of the group, then an underscore, then a unique friendly name for the property</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;각 항목에 대해 이름이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUM_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;INDEX_&lt;/code&gt; 로&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 시작하는 새 로컬 변수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, 그룹 이름, 밑줄, 고유 한 특성 이름을 작성하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4718a0a58d03fe0cf29ebb99d890ba0db287a5c3" translate="yes" xml:space="preserve">
          <source>For more information please checkout &lt;a href=&quot;https://github.com/greenlaw110/enumjs&quot;&gt;https://github.com/greenlaw110/enumjs&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 내용은 &lt;/font&gt;&lt;a href=&quot;https://github.com/greenlaw110/enumjs&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/greenlaw110/enumjs&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 확인 &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fbe0511710444968bbbd8da79b85982888a5ac6a" translate="yes" xml:space="preserve">
          <source>Further, this form of enumeration is also much faster after minification. In normal named properties, the browser has to use hashmaps to look up where the property is on the object. Although JIT compilers intelligently cache this location on the object, there is still tremendous overhead due to special cases such as deleting a lower property from the object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한이 형식의 열거는 축소 후에도 훨씬 빠릅니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적인 명명 된 속성에서 브라우저는 해시 맵을 사용하여 속성이 객체의 어디에 있는지 찾아야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JIT 컴파일러는 객체에서이 위치를 지능적으로 캐시하지만 객체에서 낮은 속성을 삭제하는 등의 특수한 경우로 인해 여전히 오버 헤드가 여전히 큽니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3516facffcef873c433349a47e804cbf00f9a89a" translate="yes" xml:space="preserve">
          <source>Furthermore, this one's personal &lt;em&gt;cherry on the top&lt;/em&gt; is using this form of enumerations along with the &lt;a href=&quot;https://codemirror.net/&quot;&gt;CodeMirror&lt;/a&gt; text editor in Javascript mode. CodeMirror's Javascript syntax highlighting mode highlights local variables in the current scope. That way, you know instantly when you type in a variable name correctly because if the variable name was previously declared with the &lt;code&gt;var&lt;/code&gt; keyword, then the variable name turns a special color (cyan by default). Even if you do not use CodeMirror, then at least the browser throws a helpful &lt;code&gt;&lt;em&gt;[variable name]&lt;/em&gt; is not defined&lt;/code&gt; exception when executing code with mistyped enumeration names. Also, JavaScript tools such as JSLint and Closure Compiler are very loud about telling you when you mistype in an enumeration variable name. CodeMirror, the browser, and various Javascript tools put together make debugging this form of enumeration very simple and really easy.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한이 개인 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;체리&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 Javascript 모드에서 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://codemirror.net/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CodeMirror&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 텍스트 편집기 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;와 함께이 열거 형을 사용하고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다. CodeMirror의 Javascript 구문 강조 모드는 현재 범위에서 로컬 변수를 강조 표시합니다. 이렇게하면 변수 이름을 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 키워드로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선언 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한 경우 변수 이름이 특수한 색 (기본적으로 청록색)으로 바뀌 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;므로 변수 이름을 올바르게 입력하면 즉시 알 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. CodeMirror를 사용하지 않더라도 적어도 브라우저는 유용한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&lt;em&gt;[variable name]&lt;/em&gt; is not defined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;열거 형명이 잘못 입력 된 코드를 실행할 때 예외가 발생합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 JSLint 및 Closure Compiler와 같은 JavaScript 도구는 열거 변수 이름을 잘못 입력하면 알려줍니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CodeMirror, 브라우저 및 다양한 Javascript 도구를 함께 사용하면 이러한 열거 형식을 매우 간단하고 쉽게 디버깅 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e48fe29e48e6629f19183ecb41c2c83deaadc8f" translate="yes" xml:space="preserve">
          <source>Get Key</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;열쇠 받기&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a698b85749484a9efa36cfb7eae8368dd37eac64" translate="yes" xml:space="preserve">
          <source>Get Value</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가치 얻기&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="58ed9c7eef1acb695afce90a5ea6456432c27013" translate="yes" xml:space="preserve">
          <source>Give each successive enumerated variable a value one more than the last, starting at 0. There are comments on this page that say &lt;code&gt;0&lt;/code&gt; should not be used as an enumerated value because &lt;code&gt;0 == null&lt;/code&gt;, &lt;code&gt;0 == false&lt;/code&gt;, &lt;code&gt;0 == &quot;&quot;&lt;/code&gt;, and other JS craziness. I submit to you that, to avoid this problem and boost performance at the same time, always use &lt;code&gt;===&lt;/code&gt; and never let &lt;code&gt;==&lt;/code&gt; appear in your code except with &lt;code&gt;typeof&lt;/code&gt; (e.x. &lt;code&gt;typeof X == &quot;string&quot;&lt;/code&gt;). In all my years of using &lt;code&gt;===&lt;/code&gt;, I have never once had a problem with using 0 as an enumeration value. If you are still squeamish, then &lt;code&gt;1&lt;/code&gt; could be used as the starting value in &lt;code&gt;ENUM_&lt;/code&gt; enumerations (but not in &lt;code&gt;INDEX_&lt;/code&gt; enumerations) without performance penalty in many cases.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;말을이 페이지에 대한 의견이 있습니다 0에서 시작하여, 마지막으로보다 각 연속 열거 변수에 값을 부여 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 열거 값 때문으로 사용해서는 안가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0 == null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0 == false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0 == &quot;&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 기타 JS 크 래즌. 이 문제를 피하고 동시에 성능을 높이려면 항상 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고 &lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; (ex &lt;/font&gt; &lt;code&gt;typeof X == &quot;string&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; )를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;제외하고 코드에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 표시 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지 마십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 사용하는 모든 해에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;0을 열거 형 값으로 사용하는 데 문제가 없었습니다. 당신이 여전히 삐걱 거리면 &lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 시작 값으로 사용될 수 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUM_&lt;/code&gt; 의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 열거 (그러나에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;INDEX_&lt;/code&gt; 의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 많은 경우에 성능 저하없이 열거).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a5f9fcfc935a9a2e241a0e3889067de0c44bb4d8" translate="yes" xml:space="preserve">
          <source>Having said that, since it doesn't matter what the values are (you've used 0, 1, 2), I'd use a meaningful string in case you ever wanted to output the current value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값이 무엇이든 (0, 1, 2를 사용 했음) 중요하지 않기 때문에 현재 값을 출력하고 싶을 때 의미있는 문자열을 사용합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f7337daf8d2b33034cb8cbc7393e582599f78e2b" translate="yes" xml:space="preserve">
          <source>Here is how I remember when to use &lt;code&gt;INDEX_&lt;/code&gt; and when to use &lt;code&gt;ENUM_&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에 사용할 때 내가 기억하는 방법이다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;INDEX_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 때 사용하는 방법과 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUM_&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d079b5886969fabdb741390f7bc700a141c219d" translate="yes" xml:space="preserve">
          <source>Here's a contrived example that uses the Proxy object to mimic Enums. The enumerators in this example are standard HTTP Methods (i.e. &quot;GET&quot;, &quot;POST&quot;, etc.):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 Proxy 객체를 사용하여 Enum을 모방 한 고안된 예입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 예제의 열거자는 표준 HTTP 메소드 (예 : &quot;GET&quot;, &quot;POST&quot;등)입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fe947f6fc94d6ef92cead940cbdd1e7d448c4cfe" translate="yes" xml:space="preserve">
          <source>Here's a couple different ways to implement &lt;a href=&quot;http://www.typescriptlang.org/Handbook#basic-types-enum&quot;&gt;TypeScript enums&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.typescriptlang.org/Handbook#basic-types-enum&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TypeScript 열거 형&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 구현하는 몇 가지 방법 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9581e3190b121af445be76420bdf0dd3432617a" translate="yes" xml:space="preserve">
          <source>Here's a jsfiddle: &lt;a href=&quot;http://jsfiddle.net/ZV4A6/&quot;&gt;http://jsfiddle.net/ZV4A6/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 jsfiddle입니다. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/ZV4A6/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://jsfiddle.net/ZV4A6/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c099876d18c108d84183268fe5150f3115d7b33b" translate="yes" xml:space="preserve">
          <source>Here's a very good library for creating enums.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 열거 형을 만드는 데 유용한 라이브러리입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cec9bd7338c1bb74d7f9c1cbfe3b7aab8f168958" translate="yes" xml:space="preserve">
          <source>Here's what we all want:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리 모두가 원하는 것은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c93be7107d40850467cfddc2d30c738e35567a7" translate="yes" xml:space="preserve">
          <source>However, &lt;code&gt;ENUM_&lt;/code&gt; can, in certain circumstances, be appropriate as an index such as when counting the occurrences of each item.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUM_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 특정 상황에서 각 항목의 발생 횟수를 계산할 때와 같은 색인으로 적합 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a679b2543904e2e9b8834d198f0b746f019cbd02" translate="yes" xml:space="preserve">
          <source>However, this doesn't prevent you from assigning an undesired value to a variable, which is often the main goal of enums:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 이것이 바람직하지 않은 값을 변수에 할당하는 것을 방해하지는 않습니다. 이는 종종 열거 형의 주요 목표입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="61f70f46640af4c29d6674c5772e958addef276b" translate="yes" xml:space="preserve">
          <source>I came up with &lt;a href=&quot;https://github.com/vivin/enumjs&quot;&gt;this&lt;/a&gt; approach which is modeled after enums in Java. These are type-safe, and so you can perform &lt;code&gt;instanceof&lt;/code&gt; checks as well.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java에서 열거 형을 모델로 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/vivin/enumjs&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한이&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 접근법을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생각해 냈습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것들은 타입 안전하므로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;instanceof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 검사도 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수행 할 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77acc88d1c3b308e6f804802b03b1a513b950c99" translate="yes" xml:space="preserve">
          <source>I found this to be working as expected even across modules (e.g. importing the &lt;code&gt;CellState&lt;/code&gt; enum from another module) and also when I import a module using Webpack.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 모듈 전체 (예 : &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 모듈에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;CellState&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 열거 형 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가져 오기 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;)와 Webpack을 사용하여 모듈을 가져올 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;때에도 예상대로 작동하는 것으로 나타났습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="856e83448b6a486df1970740d4888ca6428840da" translate="yes" xml:space="preserve">
          <source>I obsolete &lt;code&gt;gen_enum&lt;/code&gt; package and merge the function into &lt;a href=&quot;https://www.npmjs.com/package/constjs&quot;&gt;constjs&lt;/a&gt; package, which provides more features including immutable objects, JSON string deserialization, string constants and bitmap generation etc. Checkout &lt;a href=&quot;https://www.npmjs.com/package/constjs&quot;&gt;https://www.npmjs.com/package/constjs&lt;/a&gt; for more information</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;gen_enum&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 패키지를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 이상 사용하지 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;않고&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수를 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.npmjs.com/package/constjs&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;constjs&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 패키지에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;병합 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 불변 객체, JSON 문자열 역 직렬화, 문자열 상수 및 비트 맵 생성 등 더 많은 기능을 제공합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 정보는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.npmjs.com/package/constjs&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://www.npmjs.com/package/constjs&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c50140ffc5acf6a4b4510fd859b13dc29634e89b" translate="yes" xml:space="preserve">
          <source>I remember when I first started seeing the word proxy everywhere, it definitely didn't make sense to me for a long time. If that's you right now, I think an easy way to generalize proxies is to think of them as software, institutions, or even people that act as intermediaries or middlemen between two servers, companies, or people.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 어디에서나 프록시라는 단어를 처음 보았을 때를 기억합니다. 그것은 오랫동안 저에게 의미가 없었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 바로 지금이라면 프록시를 일반화하는 쉬운 방법은 소프트웨어, 기관 또는 두 서버, 회사 또는 사람들 사이의 중개인 또는 중개인 역할을하는 사람들로 생각하는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f13f02eac1aa631ff08ae96dad48c5406e04fcce" translate="yes" xml:space="preserve">
          <source>I think its safe to say that this methodology of enumeration is indeed the best way to go not just for minified code size, but also for performance, debugging, and collaboration.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 열거 방법론은 실제로 최소화 된 코드 크기뿐만 아니라 성능, 디버깅 및 공동 작업을 수행하는 가장 좋은 방법이라고 말하는 것이 안전하다고 생각합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2603d330cbbedc0e73dd709d9f4eaa2fd9f68d53" translate="yes" xml:space="preserve">
          <source>I usually use the last 2 methods for mapping enums from message objects.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 보통 메시지 객체에서 열거 형을 매핑하기 위해 마지막 두 가지 방법을 사용합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d10e264bb9e9cca70328986c2acdf4ae6f981912" translate="yes" xml:space="preserve">
          <source>I've been playing around with this, as I love my enums. =)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 열거 형을 좋아하기 때문에 이것을 가지고 놀았습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;=)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a7e244f3f664f0ee7358a93ecaeb5ed59835a9fe" translate="yes" xml:space="preserve">
          <source>I've just published an NPM package &lt;a href=&quot;https://www.npmjs.com/package/gen_enum&quot;&gt;gen_enum&lt;/a&gt; allows you to create Enum data structure in Javascript quickly:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;방금 NPM 패키지를 게시했습니다. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.npmjs.com/package/gen_enum&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;gen_enum을&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하면 Javascript로 Enum 데이터 구조를 빠르게 만들 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4276a73195ef854d9c66aeb59514294b701ba3e1" translate="yes" xml:space="preserve">
          <source>I've made an Enum class that can fetch values AND names at O(1). It can also generate an Object Array containing all Names and Values.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;O (1)에서 값과 이름을 가져올 수있는 Enum 클래스를 만들었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 이름과 값을 포함하는 객체 배열을 생성 할 수도 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d0ce8865fc08817ef45b997ee71feac6e570ee76" translate="yes" xml:space="preserve">
          <source>I've modified the solution of Andre 'Fi':</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Andre 'Fi'의 솔루션을 수정했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="34c43aac23d94a0eeecaa0c817daf10d7a0835c6" translate="yes" xml:space="preserve">
          <source>IE8 does Not support freeze() method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;IE8은 freeze () 메소드를 지원하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3d6c1e65f65ce1efb62e2ec01527dc371faf2dbf" translate="yes" xml:space="preserve">
          <source>If you're using &lt;a href=&quot;http://documentcloud.github.com/backbone/&quot;&gt;Backbone&lt;/a&gt;, you can get full-blown enum functionality (find by id, name, custom members) for free using &lt;a href=&quot;http://documentcloud.github.com/backbone/#Collection&quot;&gt;Backbone.Collection&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이 사용하는 경우 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://documentcloud.github.com/backbone/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;백본을&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 당신은 완전한 열거 기능을 얻을 무료 사용 (ID, 이름, 사용자 지정 멤버에 의해 발견) 할 수 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://documentcloud.github.com/backbone/#Collection&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Backbone.Collection&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="46545b2a56d464e56cf74616bf03220db48514a0" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://babeljs.io/docs/plugins/transform-class-properties/&quot;&gt;ES7&lt;/a&gt; , you can do an elegant ENUM relying on static attributes:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://babeljs.io/docs/plugins/transform-class-properties/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES7&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 속성을 사용하여 우아한 ENUM을 수행 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a7da64be2efa787696d3339ef3c03fa1805f218" translate="yes" xml:space="preserve">
          <source>In JavaScript, as it is a dynamic language, it is even possible to add enum values to the set later:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript에서는 동적 언어이므로 나중에 세트에 열거 형 값을 추가 할 수도 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="86b90ed2d4e9e71fe9dba3a40b100d851376207b" translate="yes" xml:space="preserve">
          <source>In most modern browsers, there is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol&quot;&gt;symbol&lt;/a&gt; primitive data type which can be used to create an enumeration. It will ensure type safety of the enum as each symbol value is guaranteed by JavaScript to be unique, i.e. &lt;code&gt;Symbol() != Symbol()&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대부분의 최신 브라우저 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에는 열거 형을 만드는 데 사용할 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기호&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 기본 데이터 형식이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript가 각 기호 값을 고유하게 보장하므로 열거 형의 형식 안전성을 보장합니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Symbol() != Symbol()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 예 : &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Symbol ()! = Symbol ())&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들면 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0536e218af1de7dd63df9fd1954433d7fb839a53" translate="yes" xml:space="preserve">
          <source>In my current game project, I have used below, since few customers still use IE8:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;현재 게임 프로젝트에서 IE8을 사용하는 고객이 거의 없기 때문에 아래에서 사용했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6ca6bad9326a3dd9f548cf7b18f689e488c30c15" translate="yes" xml:space="preserve">
          <source>In the above snippet, you were alerted with an error because &lt;code&gt;ENUM_COLORENUM_DNE&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위 스 니펫에는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUM_COLORENUM_DNE&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 ( &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가) 없기 때문에 오류가 발생했습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5e20160973b46e9572ce97b13f7f5db3d6c080f4" translate="yes" xml:space="preserve">
          <source>It's easy to use, I think. &lt;a href=&quot;https://stackoverflow.com/a/32245370/4365315&quot;&gt;https://stackoverflow.com/a/32245370/4365315&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하기 쉽다고 생각합니다. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/32245370/4365315&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://stackoverflow.com/a/32245370/4365315&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3076217528346e059c63265a91af4988f03644dc" translate="yes" xml:space="preserve">
          <source>Let us cut straight to the problem: file size. Every other answer listed here bloats your code to the extreme. I present to you that for the best possible performance, readability of code, large scale project management, syntax hinting in many code editors, and reduction in code size by minification, this is the correct way to do enumerations: underscore-notation variables.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파일 크기 문제를 바로 잡겠습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에 나열된 다른 모든 답변은 코드를 극도로 부풀립니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;최상의 성능, 코드의 가독성, 대규모 프로젝트 관리, 많은 코드 편집기의 구문 힌트 및 축소로 코드 크기를 줄이려면 열거를 수행하는 올바른 방법 인 밑줄 표기법 변수를 제시합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="019ef5023f43c868428b166108509d4510643dd6" translate="yes" xml:space="preserve">
          <source>Now you can create your enums:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 열거 형을 만들 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad1e606581825d4652686b0dca7be71bf7b89cca" translate="yes" xml:space="preserve">
          <source>Now, let us see how big the equivalent file would be without any of these enumerations.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 열거 형이없는 등가 파일의 크기를 살펴 보겠습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4258f570e2f36a2cf3e43b2313a70607009a17f5" translate="yes" xml:space="preserve">
          <source>Now.... now it opens up some &lt;em&gt;very&lt;/em&gt; interesting possibilities.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자 .. 이제는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;매우&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 흥미로운 가능성을 열어줍니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a61d4e29999f717e20a2ffa02fda03db9cc09177" translate="yes" xml:space="preserve">
          <source>Now:</source>
          <target state="translated">Now:</target>
        </trans-unit>
        <trans-unit id="6777cdd3ceca7e36b8093e5c067858f590f80b47" translate="yes" xml:space="preserve">
          <source>Observe that, in the code above, it's really easy to add in a new kind of pet: you would just have to append a new entry after &lt;code&gt;ENUM_PET_RAT&lt;/code&gt; and update &lt;code&gt;ENUMLEN_PET&lt;/code&gt; accordingly. It might be more difficult and buggy to add a new entry in other systems of enumeration.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 코드에서 새로운 종류의 애완 동물을 추가하는 것이 매우 쉽습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt; &lt;code&gt;ENUMLEN_PET&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 뒤에 새로운 항목을 추가하고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그에&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 따라 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUM_PET_RAT&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 업데이트 &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 열거 형 시스템에 새 항목을 추가하는 것이 더 어려울 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27611a72d815f00faddab954a8bad60150d01333" translate="yes" xml:space="preserve">
          <source>Of course this means that some assumptions can no longer be made (that value represents the correct order for the size for example).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;물론 이것은 더 이상 가정을 할 수 없다는 것을 의미합니다 (예 : 값이 정확한 크기 순서를 나타냄).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2e2652d13092e5b74c5a956c801be67aa9e05920" translate="yes" xml:space="preserve">
          <source>Of course, now it's your duty to make sure there are no conflicts in the data (RE, EX, etc. must be unique, also 1, 2, etc. should be unique). Note that you need to maintain these forever for backward compatibility.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;물론 데이터에 충돌이 없는지 확인해야합니다 (RE, EX 등은 고유해야하고 1, 2 등은 고유해야 함). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이전 버전과의 호환성을 위해이 구성 요소를 영구적으로 유지해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ee406650e11da61af21bfbc6cbf739d7e95cecf" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;https://github.com/zhaber/symbol-enum&quot;&gt;GitHub&lt;/a&gt; you can find a wrapper that simplifies the code required to initialize the enum:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/zhaber/symbol-enum&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;GitHub의&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 당신은 열거를 초기화하는 데 필요한 코드를 단순화하는 래퍼를 찾을 수 있습니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b1645c067cea6891d49e0e88accd77add77a2459" translate="yes" xml:space="preserve">
          <source>Once again, if you are just a casual user, or in the browser etc, just take the factory part of the code, potentially removing underscore library too if you don't wish to use it in your code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다시 한 번, 일반 사용자이거나 브라우저 등에서 코드의 팩토리 부분을 가져 가면 코드에서 밑줄 라이브러리를 사용하지 않을 가능성도 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e8a8d88577dafbf2a70d34861ae2b090871737c" translate="yes" xml:space="preserve">
          <source>One might object to the code with enumerations seeming to be much longer than the code with ordinary objects, but looks can be deceiving. It is important to remember that source code size is not proportional to output size when using the epic Closure Compiler. Observe.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;열거 형이있는 코드에 일반 객체가있는 코드보다 훨씬 길어 보이는 것처럼 보일 수도 있지만 외모는 속일 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서사시 폐쇄 컴파일러를 사용할 때 소스 코드 크기가 출력 크기에 비례하지 않는다는 것을 기억해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;관찰하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3da9a28b4a8d49e5721e26f7dd37b5c894a32c29" translate="yes" xml:space="preserve">
          <source>One nice thing about this little tool is in modern environment (including nodejs and IE 9+ browsers) the returned Enum object is immutable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 작은 도구에 대한 한 가지 좋은 점은 현대 환경 (nodejs 및 IE 9 + 브라우저 포함)에 있습니다. 반환 된 Enum 객체는 변경할 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8af3c352714ee2b7aa8cca0acaf7ef03840953b9" translate="yes" xml:space="preserve">
          <source>One very beneficial feature of Enums that you get from traditional languages is that they blow up (throw a compile-time error) if you try to access an enumerator which does not exist.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기존 언어에서 얻을 수있는 매우 유용한 열거 형 기능 중 하나는 존재하지 않는 열거 자에 액세스하려고하면 컴파일 시간 오류가 발생한다는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cfbdd2a7bf53e592f5c5d242bf61f04e04bfc4ba" translate="yes" xml:space="preserve">
          <source>One way to ensure a stronger degree of type safety (with enums or otherwise) is to use a tool like &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; or &lt;a href=&quot;https://flow.org/&quot;&gt;Flow&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;열거 형 또는 기타 형식으로 강력한 형식 안전성을 보장하는 한 가지 방법은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TypeScript&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://flow.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Flow&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 같은 도구를 사용하는 것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f977b56599b7c5cc821b20dc938593868d273ea4" translate="yes" xml:space="preserve">
          <source>Or is there a more preferable idiom?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아니면 더 바람직한 관용구가 있습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9819d16018ce560bb5ff7c3d39f5e93f5c3192c6" translate="yes" xml:space="preserve">
          <source>Plunker demo</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;플 런커 데모&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63ca7a089d75be2226f3c45ea7652c8881fc3241" translate="yes" xml:space="preserve">
          <source>Quotes aren't needed but I kept them for consistency.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따옴표는 필요하지 않지만 일관성을 유지하기 위해 유지했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1df553327bda4a0a94cf83357067136fc88d6e76" translate="yes" xml:space="preserve">
          <source>Remember, in JavaScript an object is just like a &lt;em&gt;map&lt;/em&gt; or &lt;em&gt;hash table&lt;/em&gt;. A set of name-value pairs. You can loop through them or otherwise manipulate them without knowing much about them in advance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript에서 객체는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;map&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;hash table과 같습니다&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이름-값 쌍의 집합입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;미리 알지 못하고 반복하거나 조작 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99c080964befaf7bcee44feb0a91e7a8974af709" translate="yes" xml:space="preserve">
          <source>Remember, the fields of the enum (value, name and code in this example) are not needed for the identity check and are only there for convenience. Also the name of the size property itself does not need to be hard coded, but can also be set dynamically. So supposing you only know the name for your new enum value, you can still add it without problems:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;열거의 필드 (이 예에서는 값, 이름 및 코드)는 신원 확인에 필요하지 않으며 편의를 위해서만 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 size 속성 자체의 이름을 하드 코딩 할 필요는 없지만 동적으로 설정할 수도 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 새로운 열거 형 값의 이름 만 알고 있다고 가정하면 문제없이 계속 추가 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71ad5ea2656d253d975807cbedab98876e039c38" translate="yes" xml:space="preserve">
          <source>Seen a lot of posts with overly convoluted libraries etc. The solution to getting enum support in Javascript is so simple it really isn't needed. Here is the code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;지나치게 복잡한 라이브러리 등으로 많은 게시물을 보았습니다. Javascript에서 열거 형 지원을 얻는 솔루션은 너무 간단하여 실제로 필요하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4bcb4e163bf193fe874c35e7a1a754e4ed2bd51c" translate="yes" xml:space="preserve">
          <source>Show code snippet</source>
          <target state="translated">코드 스 니펫 표시</target>
        </trans-unit>
        <trans-unit id="ac91a4f2ac28dec5d46e9f4712639bd943a4941b" translate="yes" xml:space="preserve">
          <source>Similar to a web server proxy, JavaScript proxies are able to intercept operations on objects (with the use of &quot;traps&quot;, call them hooks if you like) and allow you to perform various checks, actions and/or manipulations before they complete (or in some cases stopping the operations altogether which is exactly what we want to do if and when we try to reference an enumerator which does not exist).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;웹 서버 프록시와 유사하게 JavaScript 프록시는 객체에 대한 작업을 가로 챌 수 있으며 ( &quot;트랩&quot;을 사용하여 원하는 경우 후크로 호출) 완료하기 전에 다양한 검사, 작업 및 / 또는 조작을 수행 할 수 있습니다. 어떤 경우에는 존재하지 않는 열거자를 참조하려고 할 때와 할 때 정확히 수행하려는 작업을 모두 중지합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="778b66baff626f6044bed0379a9470fc0bb63d17" translate="yes" xml:space="preserve">
          <source>Since 1.8.5 it's possible to seal and freeze the object, so define the above as:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1.8.5부터 객체를 밀봉하고 고정 할 수 있으므로 위와 같이 정의하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a2028fd26119637b3c384cc4f6ac6bb28a5eac53" translate="yes" xml:space="preserve">
          <source>So you should be able to create a custom object, then call &lt;code&gt;Enum()&lt;/code&gt; on it. The values assigned start at 0 and increment per item.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 사용자 정의 객체를 만든 다음 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Enum()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 호출 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;할당 된 값은 0에서 시작하여 항목마다 증가합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e9fab28025a4966face606231666907532bc5a86" translate="yes" xml:space="preserve">
          <source>Some advantages to this approach:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 방법의 장점은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="19e5819d6b756ba8454cf624b492a5a5a365d47d" translate="yes" xml:space="preserve">
          <source>Some disadvantages:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;몇 가지 단점 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="010a9a12a0567221f03dee57498a189a110055c0" translate="yes" xml:space="preserve">
          <source>Some may say that this is less practical than other solutions: it waists tons of space, it takes a long time to write, and it is not coated with sugar syntax. Those people would be right if they do not minify their code. However, no reasonable person would leave unminified code in the end product. For this minification, Closure Compiler is the best I have yet to find. Online access can be found &lt;a href=&quot;https://closure-compiler.appspot.com/&quot;&gt;here&lt;/a&gt;. Closure compiler is able to take all of this enumeration data and inline it, making your Javascript be super duper small and run super duper fast. Thus, Minify with Closure Compiler. Observe.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부는 이것이 다른 솔루션보다 실용적이지 않다고 말할 수 있습니다. 허리 톤 공간, 쓰기에 오랜 시간이 걸리며 설탕 구문으로 코팅되지 않았습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드를 축소하지 않으면 사람들이 옳을 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 합리적인 사람은 최종 제품에 축소되지 않은 코드를 남길 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 축소를 위해 클로저 컴파일러는 아직 찾지 못했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;온라인 액세스는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://closure-compiler.appspot.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 찾을 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클로저 컴파일러는이 열거 데이터를 모두 가져 와서 인라인 할 수 있으므로 자바 스크립트를 매우 작게 만들고 빠르게 듀퍼를 실행할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 폐쇄 컴파일러로 최소화하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;관찰하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4f2e968260777fc3c3e4c99be94a1ab7f0f3392f" translate="yes" xml:space="preserve">
          <source>Some messy memory management going on in there, as I keep the references to the enums</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;열거 형에 대한 참조를 유지하면서 지저분한 메모리 관리가 진행됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6da13addb000b67d42a6d66391713819e634149f" translate="yes" xml:space="preserve">
          <source>Source</source>
          <target state="translated">Source</target>
        </trans-unit>
        <trans-unit id="9e31c1a6b09a455d1ca7c4ca9bbc556f78a496de" translate="yes" xml:space="preserve">
          <source>Source: &lt;a href=&quot;http://kangax.github.io/compat-table/es5/&quot;&gt;http://kangax.github.io/compat-table/es5/&lt;/a&gt;, Click on &quot;Show obsolete browsers?&quot; on top, and check IE8 &amp;amp; freeze row col intersection.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;출처 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://kangax.github.io/compat-table/es5/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://kangax.github.io/compat-table/es5/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &quot;사용하지 않는 브라우저 표시?&quot; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위에서 IE8 및 고정 행 열 교차를 확인하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e60cf46c90d449a89f34d3989493d1eadc7b494b" translate="yes" xml:space="preserve">
          <source>Still no type safety</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여전히 타입 안전&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d3e2372695f63ce0c53a4f4135db20d5ae16db5" translate="yes" xml:space="preserve">
          <source>Test:</source>
          <target state="translated">Test:</target>
        </trans-unit>
        <trans-unit id="261a776295a7fe68febe54e17606829075e84388" translate="yes" xml:space="preserve">
          <source>Thanks for all the upvotes everyone, but I don't think my answer below is the best way to write enums in JavaScript anymore. See my blog post for more details: &lt;a href=&quot;https://stijndewitt.com/2014/01/26/enums-in-javascript/&quot;&gt;Enums in JavaScript&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 지지자들에게 감사하지만 아래 답변이 더 이상 JavaScript로 열거 형을 작성하는 가장 좋은 방법이라고 생각하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 내용은 내 블로그 게시물을 참조하십시오. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stijndewitt.com/2014/01/26/enums-in-javascript/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Enums in JavaScript&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="85562f06ffb96b6ce0f754599b5122e136034f1b" translate="yes" xml:space="preserve">
          <source>The Enum class has some associative caching if you are using getByValue a lot</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;getByValue를 많이 사용하는 경우 Enum 클래스에는 연관 캐싱이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00f1fe149219fb759c0c025124aa03876932a7fb" translate="yes" xml:space="preserve">
          <source>The Proxy object is used to define custom behavior for fundamental operations (e.g. property lookup, assignment, enumeration, function
  invocation, etc).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Proxy 객체는 기본 작업 (예 : 속성 조회, 할당, 열거, 함수 호출 등)에 대한 사용자 지정 동작을 정의하는 데 사용됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cf47bc008efb69f3d4b02b0361c4de5c8ae84245" translate="yes" xml:space="preserve">
          <source>The above code has a deficiency in that it allows one to create additional objects of type &lt;code&gt;CellState&lt;/code&gt; (even though one can't assign them to the static fields of &lt;code&gt;CellState&lt;/code&gt; since it's frozen). Still, the below more refined code offers the following advantages:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 코드는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;CellState&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유형의 추가 객체를 만들 수 있다는 단점이 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(단, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동결 된 이후 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;CellState&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 정적 필드에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 할당 할 수는 없지만 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그럼에도 불구하고 아래의 더 세련된 코드는 다음과 같은 장점을 제공합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="25bbe5ed45410c385740f04f427c99d3ec81a436" translate="yes" xml:space="preserve">
          <source>The advantage ( of using class instead of literal object) is to have a parent class &lt;code&gt;Enum&lt;/code&gt; then all your Enums will &lt;strong&gt;extends&lt;/strong&gt; that class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;리터럴 객체 대신 클래스를 사용하는 이점은 부모 클래스 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 갖는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것이므로 모든 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Enum&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 클래스 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;확장&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="73d650aed04c766e08f74eec98977b696cd0cc17" translate="yes" xml:space="preserve">
          <source>The easiest way is to just iterate over an object, adding inverted key-value pairs to the object. The only drawback is that you must manually set the value for each member.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가장 쉬운 방법은 객체에 반복 키-값 쌍을 추가하여 객체를 반복하는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유일한 단점은 각 멤버의 값을 수동으로 설정해야한다는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="58cf386d99abb4ca880f41dbd289cce127ca6bae" translate="yes" xml:space="preserve">
          <source>The example above demonstrates that, in addition to having superior performance, the enumerated code also results in a smaller minified file size.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 예는 성능이 우수 할뿐 아니라 열거 된 코드가 파일 크기를 최소화하는 것을 보여줍니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2175a6e3927481a5e9e2c86abbac9335b526d1e1" translate="yes" xml:space="preserve">
          <source>The implementation:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;구현 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1b4b18df021f0943935d3a23f176bae0c3c842e6" translate="yes" xml:space="preserve">
          <source>The last one, seems most efficient for string, it reduces your total bandwidth if you have server &amp;amp; client exchanging this data.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마지막은 문자열에 가장 효율적으로 보이며이 데이터를 교환하는 서버 및 클라이언트가있는 경우 총 대역폭을 줄입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="957a717108e675685afc1d790b57060cc21c186e" translate="yes" xml:space="preserve">
          <source>The minified code without enumerations is above and the minified code with enumerations is below.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;열거가없는 축소 된 코드는 위에 있고 열거가있는 축소 된 코드는 아래에 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e48b39c0d434d1683c2cb05f3cc046ff95bf4784" translate="yes" xml:space="preserve">
          <source>The problem with this approach? You can accidentally redefine your enumerant, or accidentally have duplicate enumerant values. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 접근법의 문제점? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실수로 열거자를 재정의하거나 실수로 중복 열거 값을 가질 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들면 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e20ff4352992825088e227db59d322a586887e06" translate="yes" xml:space="preserve">
          <source>Then create enums by instantiating the class:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 클래스를 인스턴스화하여 열거 형을 만듭니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6bcdccbe45577d56f67f3e30662bab10048d1dce" translate="yes" xml:space="preserve">
          <source>There is my helper codes(&lt;code&gt;TypeHelper&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 도우미 코드가 있습니다 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;TypeHelper&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6018a8d87b175eb682207e3a2279127c6566c850" translate="yes" xml:space="preserve">
          <source>This enables you to look up on both &lt;code&gt;MyEnum.Bar&lt;/code&gt; which returns 1, and &lt;code&gt;MyEnum[1]&lt;/code&gt; which returns &quot;Bar&quot; regardless of the order of declaration.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 당신이 모두에서 찾아 볼 수 있습니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyEnum.Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 1을 반환하고, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyEnum[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 어떤 관계없이 선언의 순서의 반환 &quot;바&quot;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="240fddc6872b1bcd33d31758c00233d8a3fad8d1" translate="yes" xml:space="preserve">
          <source>This is an old one I know, but the way it has since been implemented via the TypeScript interface is:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 내가 아는 오래된 것이지만 TypeScript 인터페이스를 통해 구현 된 방식은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c78cf4e2250683d273be3cc8fb92138e0f15b04f" translate="yes" xml:space="preserve">
          <source>This is how Typescript translates it's &lt;code&gt;enum&lt;/code&gt; into Javascript:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 Typescript가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;enum&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 Javascript로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변환하는 방법입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d593b6667faa54506d6186f02628e7b599f78e17" translate="yes" xml:space="preserve">
          <source>This is the solution that I use.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 내가 사용하는 솔루션입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7de899a839242b0f1fba72651832294419d73e4e" translate="yes" xml:space="preserve">
          <source>This is where Proxy objects shine. Proxies were standardized in the language with the introduction of ES6 (ES2015). Here's the description from MDN:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프록시 개체가 빛나는 곳입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6 (ES2015)가 도입되면서 프록시가 언어로 표준화되었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MDN의 설명은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c5bffbd2f0abf194528cabcb47d491dc00090d0f" translate="yes" xml:space="preserve">
          <source>This isn't much of an answer, but I'd say that works just fine, personally</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 많은 대답이 아니지만 개인적으로 잘 작동한다고 말하고 싶습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="392b08ece238bd0b061625f0f1ca0efe85905d6a" translate="yes" xml:space="preserve">
          <source>To fetch a name for a value (can be ambiguous when putting the same value for different names):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값의 이름을 가져 오려면 (다른 이름에 동일한 값을 넣을 때 모호 할 수 있음) :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e8d22e1abaab612cd9cb7081ceef01c32ec0e91" translate="yes" xml:space="preserve">
          <source>To fetch a value (like Enums in C#):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C #의 Enum과 같은 값을 가져 오려면 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1763aab6cea730d36ad16a7961af837c442cfa0b" translate="yes" xml:space="preserve">
          <source>To get an array with each name &amp;amp; value in an object:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체의 각 이름과 값을 가진 배열을 얻으려면 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec080fdc68337b4418fd75db8a11ff84161eb0d2" translate="yes" xml:space="preserve">
          <source>To simplify debugging, you can add a description to enum values:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;디버깅을 단순화하기 위해 열거 형 값에 설명을 추가 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="70f73550dc9257eb21af302fb1e0971791372584" translate="yes" xml:space="preserve">
          <source>To upgrade from &lt;code&gt;gen_enum&lt;/code&gt; to &lt;code&gt;constjs&lt;/code&gt; just change the statement</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 업그레이드하려면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;gen_enum&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;constjs&lt;/code&gt; 것은&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 바로 문을 변경&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="52c6c1812015585dc1092393a1f244f60d68c60a" translate="yes" xml:space="preserve">
          <source>UPDATE</source>
          <target state="translated">UPDATE</target>
        </trans-unit>
        <trans-unit id="edb1354a5a3b6c34a6bb991b3409997efcbac806" translate="yes" xml:space="preserve">
          <source>UPDATE:</source>
          <target state="translated">UPDATE:</target>
        </trans-unit>
        <trans-unit id="f058a6979e739f066b0fe12b629625f0d929d4b3" translate="yes" xml:space="preserve">
          <source>Use Javascript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy&quot;&gt;Proxies&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자바 스크립트 &lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프록시&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0b4eac1fdaee3a728ff13a8728f114e7c6d22a2" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;Object.defineProperty&lt;/code&gt; I think I came up with a somewhat viable solution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Object.defineProperty&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 다소 실용적인 솔루션을 생각해 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;냈습니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="98b775ef24ab95201c3b51eed5da404ac5d60674" translate="yes" xml:space="preserve">
          <source>Using this method.. you should (in theory) be able to call and define enum values for any object, without affecting other attributes of that object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 방법을 사용하면 이론상으로 해당 객체의 다른 속성에 영향을주지 않고 모든 객체에 대한 열거 형 값을 호출하고 정의 할 수 있어야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="934469af992ab71e3895dab4f299c5bdfa576fbc" translate="yes" xml:space="preserve">
          <source>We could also do:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 또한 할 수 있습니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="859b93a3e47601e04562820bf278f71df3938c2f" translate="yes" xml:space="preserve">
          <source>What about Artur Czajka's Object.freeze? Wouldn't that work to prevent you from setting monday to thursday? &amp;ndash; Fry Quad</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Artur Czajka의 Object.freeze는 어떻습니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;월요일에 목요일로 설정하는 것을 막기 위해 노력하지 않습니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ndash; 프라이 쿼드&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87ec9f42f703ce7dc478fe6edb3d4ecddc5ed7e2" translate="yes" xml:space="preserve">
          <source>What is the preferred syntax for defining enums in JavaScript</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript에서 열거 형을 정의하기 위해 선호되는 구문은 무엇입니까&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a6736a763ba4a9a59be294bc8f1a03dc14fc6585" translate="yes" xml:space="preserve">
          <source>What is the preferred syntax for defining enums in JavaScript? Something like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript에서 열거 형을 정의하기 위해 선호되는 구문은 무엇입니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같은 것 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="021975cc386a47b6d7f84f09ad80d86b337bbd5e" translate="yes" xml:space="preserve">
          <source>Which holds:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보유하고있는 것 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bb05bb27a4b189e505f76e468e416fb819c38bc0" translate="yes" xml:space="preserve">
          <source>While it probably doesn't fit every valid use of enums, it goes a very long way.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 유효한 열거 형 사용에 맞지는 않지만 매우 먼 길을갑니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49659e5a07d9ec9ddbc5ea2cded9dfed86235252" translate="yes" xml:space="preserve">
          <source>Will generate:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음을 생성합니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="88a4782155b94fbcad44245c2f365c3d9a1032d6" translate="yes" xml:space="preserve">
          <source>You can also add methods, by using Enum.prototype:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Enum.prototype을 사용하여 메소드를 추가 할 수도 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0519509a5976fcf51adc478e600cbffbc195ecee" translate="yes" xml:space="preserve">
          <source>You can also get the html select options readily:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;html 선택 옵션을 쉽게 얻을 수도 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a671c738791bb11768bead2d5a7e90155030bef" translate="yes" xml:space="preserve">
          <source>You can define enums like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같이 열거 형을 정의 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="25d7f4649ff6f2e5528a53a85b385845fcbb3e72" translate="yes" xml:space="preserve">
          <source>You can do something like this</source>
          <target state="translated">이런 식으로 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="2cc36b3243c9980b864e5d49924f7df0f2764b76" translate="yes" xml:space="preserve">
          <source>You can fake it, but you won't get type safety. Typically this is done by creating a simple dictionary of string values mapped to integer values. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 그것을 가짜 할 수 있지만 유형 안전을 얻지 못할 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적으로 이것은 정수 값에 매핑 된 문자열 값의 간단한 사전을 만들어서 수행됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들면 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5fe580e8ba8749cbf5431b53d3ad5b80340d6614" translate="yes" xml:space="preserve">
          <source>You can init'd it like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같이 초기화 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a98d6bda360fea5247e4644560f6b7e355fcd022" translate="yes" xml:space="preserve">
          <source>You don't need to make sure you don't assign duplicate numbers to different enum values this way. A new object gets instantiated and assigned to all enum values.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이런 식으로 다른 열거 형 값에 중복 숫자를 할당하지 않아도됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;새 객체가 인스턴스화되어 모든 열거 형 값에 할당됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3417bdae129afb733dd1b44e56e82770f97dc32c" translate="yes" xml:space="preserve">
          <source>Your enums can be complex types</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;열거 형은 복잡한 유형이 될 수 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a777b8e42181e692e5a2700fc1f5fd318240e8d1" translate="yes" xml:space="preserve">
          <source>and voila! JS enums.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 짜잔! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JS 열거 형.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4fc19dd49d67bc4ce99ea768a6c767c51047c281" translate="yes" xml:space="preserve">
          <source>code:</source>
          <target state="translated">code:</target>
        </trans-unit>
        <trans-unit id="eac3824791b636798d704daea4c23b9a78ea1fdc" translate="yes" xml:space="preserve">
          <source>es7 way, (iterator, freeze), usage:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;es7 방법, (반복자, 동결), 사용법 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ca81d0372f1fdebf852d75ec99ada2a919cb43d" translate="yes" xml:space="preserve">
          <source>file: enumsSpec.js</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파일 : enumsSpec.js&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="97eff15813ecb8c1af5c566c60c61d3456ba896a" translate="yes" xml:space="preserve">
          <source>make it type safe.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;안전하게 입력하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="66eafc2002287bd8bd0bdd673ad31ab9a5918faf" translate="yes" xml:space="preserve">
          <source>no more objects of type &lt;code&gt;CellState&lt;/code&gt; may be created</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;CellState&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유형의 객체를 더 이상 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;만들 수 없습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="152750d995ae37abe5e1b9d2ea4f29e16de61a28" translate="yes" xml:space="preserve">
          <source>or even this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 이것조차도 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c6dc9bc9f77b486a13b3f63ffb2ffd1cb3fef4db" translate="yes" xml:space="preserve">
          <source>should</source>
          <target state="translated">should</target>
        </trans-unit>
        <trans-unit id="68742b2d31849418d43d60980ca19a8e7eed2590" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;values&lt;/code&gt; function that returns all instances of the enum does not have to create the return value in the above, manual (and error-prone) way.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;열거 형의 모든 인스턴스를 반환 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;values&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수는 위의 수동 (및 오류가 발생하기 쉬운) 방식으로 반환 값을 만들 필요가 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f8f8e9f767353d846d34ea5a451c83849c1b01b" translate="yes" xml:space="preserve">
          <source>then</source>
          <target state="translated">then</target>
        </trans-unit>
        <trans-unit id="4374aaee247fb237ce6c97d5c8d64bbe474d16de" translate="yes" xml:space="preserve">
          <source>to</source>
          <target state="translated">to</target>
        </trans-unit>
        <trans-unit id="0a25ba5991316bdda4a9b3abcee2106016df28a0" translate="yes" xml:space="preserve">
          <source>update</source>
          <target state="translated">update</target>
        </trans-unit>
        <trans-unit id="9b240f2251f8ab3fa8c6ef1b2c21f422291df20a" translate="yes" xml:space="preserve">
          <source>utility method to get the enum back from a string representation</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;캐릭터 라인 표현으로부터 열거를 돌려주는 유틸리티 메소드&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fca73338233601027eca3ae2b412633ca04d0d94" translate="yes" xml:space="preserve">
          <source>you are guaranteed that no two enum instances are assigned the same code</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 개의 열거 형 인스턴스에 동일한 코드가 할당되지 않았 음을 보장합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc8f5180174e566c3f69fd4ab014e97f138bd431" translate="yes" xml:space="preserve">
          <source>your answers are far too complicated</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신의 대답은 너무 복잡합니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="350201357f9ebfbe91de49639430bf1190af7c2b" translate="yes" xml:space="preserve">
          <source>𝗖𝗼𝗻𝗰𝗹𝘂𝘀𝗶𝗼𝗻 ☑</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;𝗖𝗼𝗻𝗰𝗹𝘂𝘀𝗶𝗼𝗻 ☑&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4f6f4c2cb6fe94424330874e205eab10a91f05a2" translate="yes" xml:space="preserve">
          <source>𝗖𝗼𝗼𝗽𝗲𝗿𝗮𝘁𝗶𝘃𝗲 🤝 𝗕𝘂𝗴 𝗙𝗶𝘅𝗶𝗻𝗴</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;𝗖𝗼𝗼𝗽𝗲𝗿𝗮𝘁𝗶𝘃𝗲 🤝 𝗕𝘂𝗴 𝗙𝗶𝘅𝗶𝗻𝗴&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cdd0f8d965a84c5832f7a0ef8b4c1db022f061ac" translate="yes" xml:space="preserve">
          <source>𝗘𝗮𝘀𝘆 𝗗𝗲𝗯𝘂𝗴𝗴𝗶𝗻𝗴</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;𝗘𝗮𝘀𝘆 𝗗𝗲𝗯𝘂𝗴𝗴𝗶𝗻𝗴&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d2fbc1d9ff5ecf49c9403985f1bb5755c7d96ebe" translate="yes" xml:space="preserve">
          <source>𝗘𝘅𝘁𝗲𝗻𝗱 𝗨𝗽𝗽𝗲𝗿𝗰𝗮𝘀𝗲 𝗩𝗮𝗿𝗶𝗮𝗯𝗹𝗲𝘀 𝗪𝗶𝘁𝗵 𝗔𝗱𝗱𝗶𝘁𝗶𝗼𝗻</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;𝗘𝘅𝘁𝗲𝗻𝗱 𝗨𝗽𝗽𝗲𝗿𝗰𝗮𝘀𝗲 𝗩𝗮𝗿𝗶𝗮𝗯𝗹𝗲𝘀 𝗪𝗶𝘁𝗵 𝗔𝗱𝗱𝗶𝘁𝗶𝗼𝗻&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed71ee5ae311a7fec847c405fab1409c5c60bd81" translate="yes" xml:space="preserve">
          <source>𝗠𝗶𝗻𝗶𝗳𝘆 𝗪𝗶𝘁𝗵 &lt;a href=&quot;https://closure-compiler.appspot.com/&quot;&gt;𝗖𝗹𝗼𝘀𝘂𝗿𝗲 𝗖𝗼𝗺𝗽𝗶𝗹𝗲𝗿&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;𝗠𝗶𝗻𝗶𝗳𝘆 𝗪𝗶𝘁𝗵 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://closure-compiler.appspot.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;𝗖𝗹𝗼𝘀𝘂𝗿𝗲 𝗖𝗼𝗺𝗽𝗶𝗹𝗲𝗿&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4464bac1c36acf19178e93439a5c2de820d3429" translate="yes" xml:space="preserve">
          <source>𝗣𝗹𝗮𝗶𝗻 𝗩𝗮𝗻𝗶𝗹𝗹𝗮𝗝𝗦 𝗩𝗮𝗿𝗶𝗮𝗯𝗹𝗲 𝗡𝗮𝗺𝗲𝘀</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;𝗣𝗹𝗮𝗶𝗻 𝗩𝗮𝗻𝗶𝗹𝗹𝗮𝗝𝗦 𝗩𝗮𝗿𝗶𝗮𝗯𝗹𝗲 𝗡𝗮𝗺𝗲𝘀&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7e6086bccb11863d1afac36f713ff80c8ff70f47" translate="yes" xml:space="preserve">
          <source>𝗦𝗺𝗮𝗹𝗹𝗲𝗿 𝗖𝗼𝗱𝗲 𝗦𝗶𝘇𝗲</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;𝗦𝗺𝗮𝗹𝗹𝗲𝗿 𝗖𝗼𝗱𝗲 𝗦𝗶𝘇𝗲&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd543043142d858da8042a749e2fe4022abb49a1" translate="yes" xml:space="preserve">
          <source>𝗦𝘂𝗽𝗲𝗿𝗶𝗼𝗿 𝗣𝗲𝗿𝗳𝗼𝗿𝗺𝗮𝗻𝗰𝗲</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;𝗦𝘂𝗽𝗲𝗿𝗶𝗼𝗿 𝗣𝗲𝗿𝗳𝗼𝗿𝗺𝗮𝗻𝗰𝗲&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
