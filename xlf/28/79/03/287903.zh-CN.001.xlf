<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/287903">
    <body>
      <group id="287903">
        <trans-unit id="85d1a05474aae412f66b521ba2fe2da7735d81f3" translate="yes" xml:space="preserve">
          <source>(Length: 2,450 bytes)</source>
          <target state="translated">(长度:2,450字节)</target>
        </trans-unit>
        <trans-unit id="8a3f2fe3a5c190057e66e59306dccce0339379df" translate="yes" xml:space="preserve">
          <source>(Length: 605 bytes)</source>
          <target state="translated">(长度:605个字节)</target>
        </trans-unit>
        <trans-unit id="916df6622c49f7c3dce28b0d3e68d53a73913e85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pastebin.com/embed_iframe/97K6XLdU&quot;&gt;Minified Without Using Enumerations&lt;/a&gt; (length: 843 bytes (238 bytes &lt;strong&gt;longer than enumerated code&lt;/strong&gt;))</source>
          <target state="translated">&lt;a href=&quot;https://pastebin.com/embed_iframe/97K6XLdU&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在不使用枚举的情况下缩小&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（长度：843字节（&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比枚举代码长&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 238字节&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;））&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15903d83aa7d3c054873876c321d2c44489476af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pastebin.com/embed_iframe/fcX5fN2V&quot;&gt;Source Without Using Enumerations&lt;/a&gt; (length: 1,973 bytes (477 bytes shorter than enumerated code!))</source>
          <target state="translated">&lt;a href=&quot;https://pastebin.com/embed_iframe/fcX5fN2V&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不使用枚举的源&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（长度：1,973字节（比枚举代码短477字节！））&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6bab5d0196080fd4f4d8dd0ee6fc2d44f615a772" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Days&lt;/code&gt; now refers to the &lt;code&gt;Days&lt;/code&gt; enum:</source>
          <target state="translated">&lt;code&gt;Days&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Days&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是指&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;天数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;枚举：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b14652ddd09ae4786388f077fc49e97e6d24224d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ASIDE: What the heck is a proxy?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ASIDE：代理到底是什么？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7eb616ba7601a967571a2d7206ed78f876b78d64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit 2&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;编辑2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a0e3f2feb92d1b5feba526fda2d2ab318506af4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Edit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fdb70bdeb6c6461411016970d0e0c7f8c2429b41" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Full Explanation:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;完整说明：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28654a518284c0826b734aad2a182c101d864712" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Simplest solution:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最简单的解决方案：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5c75984975b1168ad4ea11f7453dffad0b3f0ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TLDR:&lt;/strong&gt; Add this class to your utility methods and use it throughout your code, it mocks Enum behavior from traditional programming languages, and actually throws errors when you try to either access an enumerator that does not exist or add/update an enumerator. No need to rely on &lt;code&gt;Object.freeze()&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TLDR：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将此类添加到实用程序方法中，并在整个代码中使用它，它可以模仿传统编程语言中的Enum行为，并且在您尝试访问不存在的枚举器或添加/更新枚举器时实际上会引发错误。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;无需依赖&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.freeze()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b06ed81ead54d582d15311d30f0cf292c3788e02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The advantage this method has over most other answers is that you can use it alongside a static type checker&lt;/strong&gt; (e.g. &lt;a href=&quot;https://flowtype.org/&quot;&gt;Flow&lt;/a&gt;) and you can assert, at development time using static type checking, that your variables, parameters, etc. are of the specific &lt;code&gt;CellState&lt;/code&gt; &quot;enum&quot; rather than some other enum (which would be impossible to distinguish if you used generic objects or symbols).</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与大多数其他答案相比，此方法的优势在于您可以将其与静态类型检查器&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（例如&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://flowtype.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Flow&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一起使用，&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并且可以在开发时使用静态类型检查断言您的变量，参数等具有特定的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;CellState&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;ldquo;枚举&amp;rdquo;而不是其他一些枚举（如果使用通用对象或符号，则无法区分）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99d8511e3225b22ac94b4026f42dc64491e67c9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Updates&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="880ce715326db9a5616661aef200e050e7d666d0" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;i&gt;After reading a helpful question, I thank the author for pouring time into their writing by clicking the top left up-arrow in the question box. Each answer box also has one of these up-arrows.&lt;/i&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;i&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;阅读了有用的问题后，我感谢作者通过在问题框中单击左上角的箭头花时间在他们的写作上。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个答案框也具有这些向上箭头之一。&lt;/font&gt;&lt;/font&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c03270912624feffacc426d10b87070cd7640f59" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;i&gt;wvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwv&lt;/i&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;i&gt;wvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwv&lt;/i&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="39383c35e2fe38f2660ca0cba9d2dd83df2c9fef" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;i&gt;wvwwvw wvwvwvw wvwxvw wvwvwv vwvwvw wvwvvw wvwwvw wvwvwvw wvwvw wvwvwv vwvxwvw wvwvvw wvwwvw wvwvxwvw wvwvw wvwvwv vwvwvw wvwvvw wvwwvw xwvwvwvw wvwvw&lt;/i&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;i&gt;wvwwvw wvwvwvw wvwxvw wvwvwv vwvwvw wvwvvw wvwwvw wvwvwvw wvwvw wvwvwv vwvxwvw wvwvvw wvwwvw wvwvxwvw wvwvw wvwvwv vwvwvw wvwvvw wvwwvw xwvwvwvw wvwvw&lt;/i&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="660441f3de24c7a6d25c2f3c42f087298efd38dd" translate="yes" xml:space="preserve">
          <source>A quick and simple way would be :</source>
          <target state="translated">一个快速而简单的方法是:</target>
        </trans-unit>
        <trans-unit id="41171634719c90ca1cc3c98aa8055c76e23359ac" translate="yes" xml:space="preserve">
          <source>Absolutely, &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/apps/ff806186%28v=vs.94%29.aspx&quot;&gt;&lt;code&gt;Object.freeze&lt;/code&gt;&lt;/a&gt; would totally fix the problem I complained about. I would like to remind everyone that when I wrote the above, &lt;code&gt;Object.freeze&lt;/code&gt; didn't really exist.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;绝对，&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/apps/ff806186%28v=vs.94%29.aspx&quot;&gt; &lt;code&gt;Object.freeze&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以完全解决我抱怨的问题。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我想提醒大家，当我写以上文章时，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.freeze&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并不真正存在。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a25e151072b3d309b84843fabec6fb0de174f3cc" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;ENUMLENGTH_&lt;/code&gt;, &lt;code&gt;ENUMLEN_&lt;/code&gt;, &lt;code&gt;INDEXLENGTH_&lt;/code&gt;, or &lt;code&gt;INDEXLEN_&lt;/code&gt; (whether &lt;code&gt;LEN_&lt;/code&gt; or &lt;code&gt;LENGTH_&lt;/code&gt; is personal preference) enumerated variable at the very end. You should use this variable wherever possible in your code to ensure that adding an extra entry to the enumeration and incrementing this value won't break your code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUMLENGTH_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;添加&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ENUMLENGTH_&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUMLEN_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;INDEXLENGTH_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;INDEXLEN_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（无论&lt;/font&gt;&lt;/font&gt; &lt;code&gt;LEN_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;还是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;LENGTH_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是个人喜好）枚举的变量。您应该在代码中尽可能使用此变量，以确保向枚举添加额外的条目并递增此值不会破坏您的代码。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b88998e66d6f699ab23dd5f9ed7236059d981de0" translate="yes" xml:space="preserve">
          <source>Additionally, this syntax of enumerations allows for clear and concise class extending as seen below. To extend a class, add an incrementing number to the &lt;code&gt;LEN_&lt;/code&gt; entry of the parent class. Then, finish out the subclass with its own &lt;code&gt;LEN_&lt;/code&gt; entry so that the subclass may be extended further in the future.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此外，这种枚举语法允许清晰简洁的类扩展，如下所示。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要扩展类，请&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;向父类&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;LEN_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;条目&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;添加一个递增数字&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;然后，使用其自己的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;LEN_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;条目&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;结束子类，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以便将来可以进一步扩展子类。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e066ce81b2565725b8916297d8ad50eb91eff06a" translate="yes" xml:space="preserve">
          <source>Alerting the name is already possible:</source>
          <target state="translated">提醒名字已经是可以的。</target>
        </trans-unit>
        <trans-unit id="7de833501b70d8926b282dc8cbfec6659812704a" translate="yes" xml:space="preserve">
          <source>Alternatively, you could make the values objects, so you can have the cake and eat it too:</source>
          <target state="translated">或者,你也可以做值的对象,这样你也可以吃到蛋糕,也可以吃到蛋糕。</target>
        </trans-unit>
        <trans-unit id="688028ae2229c15c937fb45027bb5173514d301d" translate="yes" xml:space="preserve">
          <source>And a test to illustrate what it gives you:</source>
          <target state="translated">还有一个测试,说明它给你什么。</target>
        </trans-unit>
        <trans-unit id="ba9666023f38c291bdd95a29496bc580155cef1e" translate="yes" xml:space="preserve">
          <source>And by the way, if you are interested in namespaces, you may want to have a look at my solution for simple but powerful namespace and dependency management for JavaScript: &lt;a href=&quot;http://packagesinjavascript.wordpress.com/&quot;&gt;Packages JS&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;顺便说一句，如果您对名称空间感兴趣，那么您可能想看看我的针对JavaScript的简单但功能强大的名称空间和依赖项管理的解决方案：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://packagesinjavascript.wordpress.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Packages JS&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d92233f70b80f3ef9fa13e720a94e54c011c7ce" translate="yes" xml:space="preserve">
          <source>And here's a &lt;a href=&quot;https://lodash.com/docs#mixin&quot;&gt;lodash mixin&lt;/a&gt; to create an enum using a string. While this version is a little bit more involved, it does the numbering automatically for you. All the lodash methods used in this example have a regular JavaScript equivalent, so you can easily switch them out if you want.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是一个&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://lodash.com/docs#mixin&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lodash mixin&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，用于使用字符串创建枚举。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;虽然此版本涉及更多点，但它会自动为您编号。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;本示例中使用的所有lodash方法都具有常规的JavaScript等效项，因此您可以根据需要轻松地将它们切换出来。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fa2162f9bcf563ddfd081d6565d0c3024ddc36e3" translate="yes" xml:space="preserve">
          <source>And this is how you access your enums:</source>
          <target state="translated">而这就是你如何访问你的enums。</target>
        </trans-unit>
        <trans-unit id="67bfbd2a48a972350c161d742bfd4dafa41d1a75" translate="yes" xml:space="preserve">
          <source>And you define your enums like this:</source>
          <target state="translated">而你是这样定义的</target>
        </trans-unit>
        <trans-unit id="45b0c4f1b3a3685803d2bcd6d9002919abc40a91" translate="yes" xml:space="preserve">
          <source>Another advantage about this form of enumeration is that it can be used to easily manage large scale projects without sacrificing minified code size. When working on a large project with lots of other people, it might be beneficial to explicitly mark and label the variable names with who created the code so that the original creator of the code can be quickly identified for collaborative bug fixing.</source>
          <target state="translated">这种形式的枚举的另一个好处是,它可以用来轻松地管理大型项目而不牺牲最小化的代码大小。当和很多其他人一起工作在一个大型项目中时,明确地标出变量名称并标注出创建代码的人,这样可以快速地识别出代码的原始创建者,以便于协作修复bug。</target>
        </trans-unit>
        <trans-unit id="d6aea25c6a029bf9f8f02bc3a9b4260e3190a55b" translate="yes" xml:space="preserve">
          <source>As defined in this library.
&lt;a href=&quot;https://github.com/webmodule/foo/blob/master/foo.js#L217&quot;&gt;https://github.com/webmodule/foo/blob/master/foo.js#L217&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如该库中所定义。 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/webmodule/foo/blob/master/foo.js#L217&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/webmodule/foo/blob/master/foo.js#L217&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="911bafc126f87b89da389293be4ecc05b7548552" translate="yes" xml:space="preserve">
          <source>As demonstrated in the chart above and example below, here are five easy steps to get started:</source>
          <target state="translated">正如上面的图表和下面的例子所示,这里有五个简单的步骤可以让你入门。</target>
        </trans-unit>
        <trans-unit id="4d667c51c9b32e9b1fcaf249982247b720235cbe" translate="yes" xml:space="preserve">
          <source>As of writing, &lt;strong&gt;October 2014&lt;/strong&gt; - so here is a contemporary solution. Am writing the solution as a Node Module, and have included a test using Mocha and Chai, as well as underscoreJS. You can easily ignore these, and just take the Enum code if preferred.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;撰写本文时，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2014&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;年&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;10月&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -这是一个当代的解决方案。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我正在将解决方案编写为节点模块，并且包括使用Mocha和Chai以及underscoreJS进行的测试。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以轻松地忽略它们，如果需要的话，可以使用Enum代码。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="350faac54ea0f8928711b41090a13efd810c781b" translate="yes" xml:space="preserve">
          <source>As seen, without enumerations, the source code is shorter at the cost of a larger minified code. I do not know about you; but I know for sure that I do not incorporate source code into the end product. Thus, this form of enumerations is far superior insomuch that it results in smaller minified file sizes.</source>
          <target state="translated">可以看出,如果没有枚举,源码的长度就会缩短,而代价是要有更大的减法代码。我不知道你是怎么想的,但我可以肯定的是,我不把源码纳入最终产品中。因此,这种形式的枚举的形式要优越得多,因为它导致了更小的文件尺寸。</target>
        </trans-unit>
        <trans-unit id="eab750e0c2354d3f9ea9d61be65f4f3133c3fa6b" translate="yes" xml:space="preserve">
          <source>As you are probably aware, accessing non-existing members in JavaScript simply returns &lt;code&gt;undefined&lt;/code&gt; and does not blow up your code. Since enumerators are predefined constants (i.e. days of the week), there should never be a case when an enumerator should be undefined.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可能已经知道，访问JavaScript中不存在的成员只会返回&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，不会破坏您的代码。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于枚举数是预定义的常量（即一周中的几天），因此永远都不会出现未定义枚举数的情况。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6fe8945f9992e81f1d8ab24ec2bacddf61272d22" translate="yes" xml:space="preserve">
          <source>As you can see, you get an Enum factory, you can get all the keys simply by calling enum.keys, and you can match the keys themselves to integer constants. And you can reuse the factory with different values, and export those generated Enums using Node's modular approach.</source>
          <target state="translated">如你所见,你可以得到一个Enum工厂,你只需调用enum.keys就可以得到所有的keys,并且你可以将keys本身与整数常量匹配。而且你可以用不同的值重用这个工厂,并使用Node的模块化方法导出这些生成的Enum。</target>
        </trans-unit>
        <trans-unit id="fb694c76052425353b461a312cfd02cb5fa1ff59" translate="yes" xml:space="preserve">
          <source>Assignment:</source>
          <target state="translated">Assignment:</target>
        </trans-unit>
        <trans-unit id="fe9d3ad4f45811f3d8c8c5361ad1b047538e1610" translate="yes" xml:space="preserve">
          <source>At first I was confused why &lt;code&gt;obj[1]&lt;/code&gt; returns &lt;code&gt;'Active'&lt;/code&gt;, but then realised that its dead simple - &lt;strong&gt;Assignment operator&lt;/strong&gt; assigns value and then returns it:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;起初，我很困惑&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为什么&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返回&lt;/font&gt;&lt;/font&gt; &lt;code&gt;'Active'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但后来意识到它很简单- &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;赋值运算符先&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;赋值然后返回：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d53a0ab9c27417fcf3d19404c238eedb56027b1" translate="yes" xml:space="preserve">
          <source>Because of the attribute &lt;code&gt;writable:false&lt;/code&gt; this</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于属性&lt;/font&gt;&lt;/font&gt; &lt;code&gt;writable:false&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="196d60684319b28936891eeec973d4041889781c" translate="yes" xml:space="preserve">
          <source>Besides freezing the mocked enum structure to prevent additional values from accidentally/maliciously being added, none of the other answers address that intrinsic feature of Enums.</source>
          <target state="translated">除了冻结模拟的enum结构以防止意外添加额外的值,其他的答案都没有解决Enums的这个本质特征。</target>
        </trans-unit>
        <trans-unit id="e6c8d874e34ea1a192fc457cef856bf3936f84fd" translate="yes" xml:space="preserve">
          <source>Bottom line: You can't.</source>
          <target state="translated">底线。你不能。</target>
        </trans-unit>
        <trans-unit id="b9a49be8197ab205463652625b4b7f51605ec6e4" translate="yes" xml:space="preserve">
          <source>But, with continuous non-sparse integer-indexed &lt;a href=&quot;https://v8.dev/blog/elements-kinds#the-elements-kind-lattice&quot;&gt;PACKED_ELEMENTS&lt;/a&gt; arrays, the browser is able to skip much of that overhead because the index of the value in the internal array is already specified. Yes, according to the ECMAScript standard, all properties are supposed to be treated as strings. Nevertheless, this aspect of the ECMAScript standard is very misleading about performance because all browsers have special optimizations for numeric indexes in arrays.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，使用连续的非稀疏整数索引的&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://v8.dev/blog/elements-kinds#the-elements-kind-lattice&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PACKED_ELEMENTS&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数组，由于已经指定了内部数组中值的索引，因此浏览器可以跳过很多开销。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是的，根据ECMAScript标准，所有属性都应视为字符串。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;尽管如此，ECMAScript标准的这一方面在性能上还是极具误导性，因为所有浏览器都对数组中的数字索引进行了特殊的优化。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fcaa5339e0f27244a6c90344e73691d2fd735eb2" translate="yes" xml:space="preserve">
          <source>By doing this, constants can be acessed in the usual way (YesNo.YES, Color.GREEN) and they get a sequential int value (NO = 0, YES = 1; RED = 0, GREEN = 1, BLUE = 2).</source>
          <target state="translated">通过这样做,常量可以用通常的方式(YesNo.YES,Color.GREEN)来访问,并且它们得到一个顺序的int值(NO=0,YES=1;RED=0,GREEN=1,BLUE=2)。</target>
        </trans-unit>
        <trans-unit id="bfab03fe06136b948abd2eaa7e0330445d1df5bd" translate="yes" xml:space="preserve">
          <source>Closure Compiler rewards you for coding smarter and organizing your code well because, whereas many minifiers punish organized code with a bigger minified file size, Closure Compiler is able to sift through all your cleanliness and sanity to output an even smaller file size if you use tricks like variable name enumerations. That, in this one mind, is the holy grail of coding: a tool that both assists your code with a smaller minified size and assists your mind by training better programming habits.</source>
          <target state="translated">Closure Compiler会奖励你更聪明地编码和组织好你的代码,因为,许多minifiers会用更大的minified文件大小来惩罚有组织的代码,而Closure Compiler能够通过你所有的清洁度和理智来筛选,如果你使用变量名枚举等技巧,输出更小的文件大小。这一点,在这一思想中,是编码的圣杯:一个既能帮助你的代码获得更小的最小化大小,又能通过训练更好的编程习惯来帮助你的头脑的工具。</target>
        </trans-unit>
        <trans-unit id="658ac22936bc1964a2ddf51197e535da110d1077" translate="yes" xml:space="preserve">
          <source>Closure compiler is able to perform some pretty incredible optimizations via inferences that are way beyond the capacities of any other Javascript minifier. Closure Compiler is able to inline primitive variables set to a fixed value. Closure Compiler is also able to make inferences based upon these inlined values and eliminate unused blocks in if-statements and loops.</source>
          <target state="translated">Closure 编译器能够通过推理来执行一些非常令人难以置信的优化,这远远超出了其他任何Javascript minifier的能力。Closure Compiler能够内联设置为固定值的基元变量。Closure Compiler还能够根据这些内联值进行推理,并消除if-statements和循环中未使用的块。</target>
        </trans-unit>
        <trans-unit id="0da387c6fad9b3b430037037cccd107e71d000a3" translate="yes" xml:space="preserve">
          <source>Compare the code above to the code below.</source>
          <target state="translated">将上面的代码与下面的代码进行对比。</target>
        </trans-unit>
        <trans-unit id="79b2cd845d9a1d042bfe0169baafc7b518a17c8e" translate="yes" xml:space="preserve">
          <source>Comparision:</source>
          <target state="translated">Comparision:</target>
        </trans-unit>
        <trans-unit id="1cdf4147bf4d9a958ecfa5b40ad2b3de1779a200" translate="yes" xml:space="preserve">
          <source>Complete example
&lt;a href=&quot;https://gist.github.com/lnt/bb13a2fd63cdb8bce85fd62965a20026&quot;&gt;https://gist.github.com/lnt/bb13a2fd63cdb8bce85fd62965a20026&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;完整示例 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://gist.github.com/lnt/bb13a2fd63cdb8bce85fd62965a20026&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://gist.github.com/lnt/bb13a2fd63cdb8bce85fd62965a20026&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e157c5da4410b7e9de85f5c93026b9176e69064" translate="yes" xml:space="preserve">
          <source>Create</source>
          <target state="translated">Create</target>
        </trans-unit>
        <trans-unit id="cd5885c6b241174f0bbeeedf2260e1dabd3f285f" translate="yes" xml:space="preserve">
          <source>Create an object literal:</source>
          <target state="translated">创建一个对象字面意义。</target>
        </trans-unit>
        <trans-unit id="a6bf4455b8a756f055431c0a18c5686838aec889" translate="yes" xml:space="preserve">
          <source>Decide whether enumerations in the group are mutually-exclusive or independent. If mutually-exclusive, start each enumerated variable name with &lt;code&gt;ENUM_&lt;/code&gt;. If independent or side-by-side, use &lt;code&gt;INDEX_&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;确定组中的枚举是互斥的还是独立的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果是互斥的，则以&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUM_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;开头每个枚举的变量名称&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果独立或并排使用，请使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;INDEX_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65c9035fafbecc6952f659f88811fa7c0051c8c7" translate="yes" xml:space="preserve">
          <source>Determine a name for the enumeration group. Think of a noun that can describe the purpose of the enumeration or at least the entries in the enumeration. For example, a group of enumerations representing colors choosable by the user might be better named COLORCHOICES than COLORS.</source>
          <target state="translated">为枚举组确定一个名称。想一个能描述枚举的目的的名词,或者至少是枚举中的条目。例如,一个代表用户可以选择的颜色的枚举组可能被命名为COLORCHOICES,而不是COLORS。</target>
        </trans-unit>
        <trans-unit id="5ddffd1b10d68b50c76ae9746d5a8747c7ef8e4a" translate="yes" xml:space="preserve">
          <source>Don't get me wrong, JavaScript's behavior of returning &lt;code&gt;undefined&lt;/code&gt; when accessing undefined properties is actually a very powerful feature of language, but it's not a feature you want when you are trying to mock traditional Enum structures.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;别误会，JavaScript &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在访问未定义属性时&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返回&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的行为&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实际上是语言的强大功能，但是当您尝试模拟传统Enum结构时，这并不是您想要的功能。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eb6b4a1271399bfe9ec378054e8ab2bcde9708d1" translate="yes" xml:space="preserve">
          <source>Easy to access your enums</source>
          <target state="translated">轻松访问你的枚举式</target>
        </trans-unit>
        <trans-unit id="0bcf3d9dab12c1fd6d7433968d2a187754c3930c" translate="yes" xml:space="preserve">
          <source>Easy to declare enums</source>
          <target state="translated">易于声明enums</target>
        </trans-unit>
        <trans-unit id="a5964f36e23edc327c0ba6df922a6d0dec847752" translate="yes" xml:space="preserve">
          <source>Edit - small improvement - now with varargs: (unfortunately it doesn't work properly on IE :S... should stick with previous version then)</source>
          <target state="translated">编辑-小的改进-现在有了varargs:(不幸的是,它在IE上不能正常工作:S...........那就应该坚持使用以前的版本</target>
        </trans-unit>
        <trans-unit id="b4c668399fe5b43c7422bf83f563c110ecbf3290" translate="yes" xml:space="preserve">
          <source>Even though &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes&quot;&gt;only static methods&lt;/a&gt; (and not static properties) are supported in ES2015 (see &lt;a href=&quot;http://exploringjs.com/es6/ch_classes.html#_inside-the-body-of-a-class-definition&quot;&gt;here&lt;/a&gt; as well, &amp;sect;15.2.2.2), curiously you can use the below with Babel with the &lt;code&gt;es2015&lt;/code&gt; preset:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;尽管&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;只有静态方法&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（而不是静态的属性）在ES2015（见支持&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://exploringjs.com/es6/ch_classes.html#_inside-the-body-of-a-class-definition&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这里&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为好，&amp;sect;15.2.2.2），奇怪的是您可以用使用下面巴贝尔&lt;/font&gt;&lt;/font&gt; &lt;code&gt;es2015&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;预设：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">扩展片段</target>
        </trans-unit>
        <trans-unit id="71cfb5cd7ec68c82f31da02402da517468c2695f" translate="yes" xml:space="preserve">
          <source>File: enums.js</source>
          <target state="translated">文件:enums.js</target>
        </trans-unit>
        <trans-unit id="eea2cac1f0d8facb5a53c61a746d1718d6958fc6" translate="yes" xml:space="preserve">
          <source>For each entry, create a new local variable whose name starts with &lt;code&gt;ENUM_&lt;/code&gt; or &lt;code&gt;INDEX_&lt;/code&gt;, then the name of the group, then an underscore, then a unique friendly name for the property</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于每个条目，创建一个新的本地变量，其名称以&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUM_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;INDEX_&lt;/code&gt; 开头&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，然后是组的名称，然后是下划线，然后是属性的唯一友好名称。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4718a0a58d03fe0cf29ebb99d890ba0db287a5c3" translate="yes" xml:space="preserve">
          <source>For more information please checkout &lt;a href=&quot;https://github.com/greenlaw110/enumjs&quot;&gt;https://github.com/greenlaw110/enumjs&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有关更多信息，请查看&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/greenlaw110/enumjs&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/greenlaw110/enumjs&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fbe0511710444968bbbd8da79b85982888a5ac6a" translate="yes" xml:space="preserve">
          <source>Further, this form of enumeration is also much faster after minification. In normal named properties, the browser has to use hashmaps to look up where the property is on the object. Although JIT compilers intelligently cache this location on the object, there is still tremendous overhead due to special cases such as deleting a lower property from the object.</source>
          <target state="translated">进一步说,这种形式的枚举也是减法后更快。在普通的命名属性中,浏览器必须使用哈希图来查找属性在对象上的位置。虽然JIT编译器智能地缓存了对象上的这个位置,但由于特殊情况,如删除对象上的低级属性等,仍有巨大的开销。</target>
        </trans-unit>
        <trans-unit id="3516facffcef873c433349a47e804cbf00f9a89a" translate="yes" xml:space="preserve">
          <source>Furthermore, this one's personal &lt;em&gt;cherry on the top&lt;/em&gt; is using this form of enumerations along with the &lt;a href=&quot;https://codemirror.net/&quot;&gt;CodeMirror&lt;/a&gt; text editor in Javascript mode. CodeMirror's Javascript syntax highlighting mode highlights local variables in the current scope. That way, you know instantly when you type in a variable name correctly because if the variable name was previously declared with the &lt;code&gt;var&lt;/code&gt; keyword, then the variable name turns a special color (cyan by default). Even if you do not use CodeMirror, then at least the browser throws a helpful &lt;code&gt;&lt;em&gt;[variable name]&lt;/em&gt; is not defined&lt;/code&gt; exception when executing code with mistyped enumeration names. Also, JavaScript tools such as JSLint and Closure Compiler are very loud about telling you when you mistype in an enumeration variable name. CodeMirror, the browser, and various Javascript tools put together make debugging this form of enumeration very simple and really easy.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此外，这种一个人的个人&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在上面的樱桃&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是用这种形式与沿枚举&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://codemirror.net/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CodeMirror&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在Javascript模式文本编辑器。 CodeMirror的Javascript语法突出显示模式突出显示当前作用域中的局部变量。这样，当您正确键入变量名称时，您会立即知道，因为如果以前使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关键字&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;了变量名称，则变量名称会变成特殊的颜色（默认为青色）。即使您不使用CodeMirror，也至少浏览器会抛出一个有用的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&lt;em&gt;[variable name]&lt;/em&gt; is not defined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在执行带有错误类型的枚举名称的代码时发生异常。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同样，JavaScript工具（例如JSLint和Closure Compiler）在告诉您何时键入枚举变量名称时会大声疾呼。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CodeMirror，浏览器和各种Javascript工具一起使调试这种枚举形式变得非常简单而且非常容易。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e48fe29e48e6629f19183ecb41c2c83deaadc8f" translate="yes" xml:space="preserve">
          <source>Get Key</source>
          <target state="translated">获取密钥</target>
        </trans-unit>
        <trans-unit id="a698b85749484a9efa36cfb7eae8368dd37eac64" translate="yes" xml:space="preserve">
          <source>Get Value</source>
          <target state="translated">获取价值</target>
        </trans-unit>
        <trans-unit id="58ed9c7eef1acb695afce90a5ea6456432c27013" translate="yes" xml:space="preserve">
          <source>Give each successive enumerated variable a value one more than the last, starting at 0. There are comments on this page that say &lt;code&gt;0&lt;/code&gt; should not be used as an enumerated value because &lt;code&gt;0 == null&lt;/code&gt;, &lt;code&gt;0 == false&lt;/code&gt;, &lt;code&gt;0 == &quot;&quot;&lt;/code&gt;, and other JS craziness. I submit to you that, to avoid this problem and boost performance at the same time, always use &lt;code&gt;===&lt;/code&gt; and never let &lt;code&gt;==&lt;/code&gt; appear in your code except with &lt;code&gt;typeof&lt;/code&gt; (e.x. &lt;code&gt;typeof X == &quot;string&quot;&lt;/code&gt;). In all my years of using &lt;code&gt;===&lt;/code&gt;, I have never once had a problem with using 0 as an enumeration value. If you are still squeamish, then &lt;code&gt;1&lt;/code&gt; could be used as the starting value in &lt;code&gt;ENUM_&lt;/code&gt; enumerations (but not in &lt;code&gt;INDEX_&lt;/code&gt; enumerations) without performance penalty in many cases.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从0开始，为每个连续的枚举变量赋予一个比最后一个大的值。此页面上有评论说，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不应将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用作枚举值，因为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0 == null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0 == false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0 == &quot;&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，以及其他JS的疯狂行为。我向您表示，为避免此问题并同时提高性能，请始终使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并且绝不要让&lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;出现在您的代码中，但&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;除外&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（例如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof X == &quot;string&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。在使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有年份中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，我从来没有遇到过使用0作为枚举值的问题。如果您仍然娇气，则&lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在许多情况下&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以用作&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUM_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;枚举（但不能用于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;INDEX_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;枚举）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;中的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;起始值，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而不会降低性能。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a5f9fcfc935a9a2e241a0e3889067de0c44bb4d8" translate="yes" xml:space="preserve">
          <source>Having said that, since it doesn't matter what the values are (you've used 0, 1, 2), I'd use a meaningful string in case you ever wanted to output the current value.</source>
          <target state="translated">说了这么多,既然值是什么并不重要(你用了0、1、2),那我就用一个有意义的字符串,以防你想输出当前值。</target>
        </trans-unit>
        <trans-unit id="f7337daf8d2b33034cb8cbc7393e582599f78e2b" translate="yes" xml:space="preserve">
          <source>Here is how I remember when to use &lt;code&gt;INDEX_&lt;/code&gt; and when to use &lt;code&gt;ENUM_&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这就是我记得何时使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;INDEX_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和何时使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUM_&lt;/code&gt; 的方式&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d079b5886969fabdb741390f7bc700a141c219d" translate="yes" xml:space="preserve">
          <source>Here's a contrived example that uses the Proxy object to mimic Enums. The enumerators in this example are standard HTTP Methods (i.e. &quot;GET&quot;, &quot;POST&quot;, etc.):</source>
          <target state="translated">这里有一个例子是用Proxy对象来模仿Enums。这个例子中的枚举器是标准的HTTP方法(即 &quot;GET&quot;、&quot;POST &quot;等)。</target>
        </trans-unit>
        <trans-unit id="fe947f6fc94d6ef92cead940cbdd1e7d448c4cfe" translate="yes" xml:space="preserve">
          <source>Here's a couple different ways to implement &lt;a href=&quot;http://www.typescriptlang.org/Handbook#basic-types-enum&quot;&gt;TypeScript enums&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是实现&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.typescriptlang.org/Handbook#basic-types-enum&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TypeScript枚举&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的几种不同方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9581e3190b121af445be76420bdf0dd3432617a" translate="yes" xml:space="preserve">
          <source>Here's a jsfiddle: &lt;a href=&quot;http://jsfiddle.net/ZV4A6/&quot;&gt;http://jsfiddle.net/ZV4A6/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是一个jsfiddle：&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/ZV4A6/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//jsfiddle.net/ZV4A6/&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c099876d18c108d84183268fe5150f3115d7b33b" translate="yes" xml:space="preserve">
          <source>Here's a very good library for creating enums.</source>
          <target state="translated">这里有一个很好的创建 enums 的库。</target>
        </trans-unit>
        <trans-unit id="cec9bd7338c1bb74d7f9c1cbfe3b7aab8f168958" translate="yes" xml:space="preserve">
          <source>Here's what we all want:</source>
          <target state="translated">大家都想的是这样的。</target>
        </trans-unit>
        <trans-unit id="6c93be7107d40850467cfddc2d30c738e35567a7" translate="yes" xml:space="preserve">
          <source>However, &lt;code&gt;ENUM_&lt;/code&gt; can, in certain circumstances, be appropriate as an index such as when counting the occurrences of each item.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在某些情况下，例如在计算每个项目的出现次数时&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUM_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可能适合作为索引。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a679b2543904e2e9b8834d198f0b746f019cbd02" translate="yes" xml:space="preserve">
          <source>However, this doesn't prevent you from assigning an undesired value to a variable, which is often the main goal of enums:</source>
          <target state="translated">但是,这并不妨碍你给一个变量赋一个不想要的值,这通常是枚举的主要目标。</target>
        </trans-unit>
        <trans-unit id="61f70f46640af4c29d6674c5772e958addef276b" translate="yes" xml:space="preserve">
          <source>I came up with &lt;a href=&quot;https://github.com/vivin/enumjs&quot;&gt;this&lt;/a&gt; approach which is modeled after enums in Java. These are type-safe, and so you can perform &lt;code&gt;instanceof&lt;/code&gt; checks as well.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我想出了&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/vivin/enumjs&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这种&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法以Java枚举为模型。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这些是类型安全的，因此您也可以执行&lt;/font&gt;&lt;/font&gt; &lt;code&gt;instanceof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;检查。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77acc88d1c3b308e6f804802b03b1a513b950c99" translate="yes" xml:space="preserve">
          <source>I found this to be working as expected even across modules (e.g. importing the &lt;code&gt;CellState&lt;/code&gt; enum from another module) and also when I import a module using Webpack.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我发现即使在各个模块之间（例如&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从另一个模块&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;导入&lt;/font&gt;&lt;/font&gt; &lt;code&gt;CellState&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;枚举），以及在使用Webpack导入模块时，它也都&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以按预期工作&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="856e83448b6a486df1970740d4888ca6428840da" translate="yes" xml:space="preserve">
          <source>I obsolete &lt;code&gt;gen_enum&lt;/code&gt; package and merge the function into &lt;a href=&quot;https://www.npmjs.com/package/constjs&quot;&gt;constjs&lt;/a&gt; package, which provides more features including immutable objects, JSON string deserialization, string constants and bitmap generation etc. Checkout &lt;a href=&quot;https://www.npmjs.com/package/constjs&quot;&gt;https://www.npmjs.com/package/constjs&lt;/a&gt; for more information</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我已淘汰&lt;/font&gt;&lt;/font&gt; &lt;code&gt;gen_enum&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;包，并将功能合并到&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.npmjs.com/package/constjs&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;constjs&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;包中，该包提供了更多功能，包括不可变的对象，JSON字符串反序列化，字符串常量和位图生成等。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有关更多信息&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，请&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参见&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.npmjs.com/package/constjs&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://www.npmjs.com/package/constjs&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c50140ffc5acf6a4b4510fd859b13dc29634e89b" translate="yes" xml:space="preserve">
          <source>I remember when I first started seeing the word proxy everywhere, it definitely didn't make sense to me for a long time. If that's you right now, I think an easy way to generalize proxies is to think of them as software, institutions, or even people that act as intermediaries or middlemen between two servers, companies, or people.</source>
          <target state="translated">我记得刚开始到处看到代理这个词的时候,在很长一段时间里,我肯定是觉得没有意义的。如果现在的你就是这样,我想一个简单的方法来概括代理,那就是把代理看成是软件、机构,甚至是作为两个服务器、公司或人之间的中介或中间人。</target>
        </trans-unit>
        <trans-unit id="f13f02eac1aa631ff08ae96dad48c5406e04fcce" translate="yes" xml:space="preserve">
          <source>I think its safe to say that this methodology of enumeration is indeed the best way to go not just for minified code size, but also for performance, debugging, and collaboration.</source>
          <target state="translated">我认为可以肯定地说,这种枚举的方法论确实是最好的方法,不仅是对代码规模的最小化,而且对性能、调试和协作也是最好的。</target>
        </trans-unit>
        <trans-unit id="2603d330cbbedc0e73dd709d9f4eaa2fd9f68d53" translate="yes" xml:space="preserve">
          <source>I usually use the last 2 methods for mapping enums from message objects.</source>
          <target state="translated">我通常使用最后2种方法来映射消息对象中的枚举法。</target>
        </trans-unit>
        <trans-unit id="d10e264bb9e9cca70328986c2acdf4ae6f981912" translate="yes" xml:space="preserve">
          <source>I've been playing around with this, as I love my enums. =)</source>
          <target state="translated">我一直在玩这个,因为我喜欢我的enums。)</target>
        </trans-unit>
        <trans-unit id="a7e244f3f664f0ee7358a93ecaeb5ed59835a9fe" translate="yes" xml:space="preserve">
          <source>I've just published an NPM package &lt;a href=&quot;https://www.npmjs.com/package/gen_enum&quot;&gt;gen_enum&lt;/a&gt; allows you to create Enum data structure in Javascript quickly:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我刚刚发布了一个NPM包&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.npmjs.com/package/gen_enum&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;gen_enum，它&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;允许您快速使用Javascript创建Enum数据结构：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4276a73195ef854d9c66aeb59514294b701ba3e1" translate="yes" xml:space="preserve">
          <source>I've made an Enum class that can fetch values AND names at O(1). It can also generate an Object Array containing all Names and Values.</source>
          <target state="translated">我做了一个Enum类,它可以在O(1)下获取值和名称。它还可以生成一个包含所有名称和值的对象阵列。</target>
        </trans-unit>
        <trans-unit id="d0ce8865fc08817ef45b997ee71feac6e570ee76" translate="yes" xml:space="preserve">
          <source>I've modified the solution of Andre 'Fi':</source>
          <target state="translated">我修改了Andre'Fi的解决方案。</target>
        </trans-unit>
        <trans-unit id="34c43aac23d94a0eeecaa0c817daf10d7a0835c6" translate="yes" xml:space="preserve">
          <source>IE8 does Not support freeze() method.</source>
          <target state="translated">IE8不支持freeze()方法。</target>
        </trans-unit>
        <trans-unit id="3d6c1e65f65ce1efb62e2ec01527dc371faf2dbf" translate="yes" xml:space="preserve">
          <source>If you're using &lt;a href=&quot;http://documentcloud.github.com/backbone/&quot;&gt;Backbone&lt;/a&gt;, you can get full-blown enum functionality (find by id, name, custom members) for free using &lt;a href=&quot;http://documentcloud.github.com/backbone/#Collection&quot;&gt;Backbone.Collection&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您使用的&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://documentcloud.github.com/backbone/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;骨干&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，你可以得到全面的枚举功能免费使用（通过ID，名称，自定义成员找到）&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://documentcloud.github.com/backbone/#Collection&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Backbone.Collection&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="46545b2a56d464e56cf74616bf03220db48514a0" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://babeljs.io/docs/plugins/transform-class-properties/&quot;&gt;ES7&lt;/a&gt; , you can do an elegant ENUM relying on static attributes:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://babeljs.io/docs/plugins/transform-class-properties/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES7中&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，您可以依靠静态属性进行优雅的ENUM：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a7da64be2efa787696d3339ef3c03fa1805f218" translate="yes" xml:space="preserve">
          <source>In JavaScript, as it is a dynamic language, it is even possible to add enum values to the set later:</source>
          <target state="translated">在JavaScript中,由于它是一种动态语言,甚至可以在以后添加枚举值到集中。</target>
        </trans-unit>
        <trans-unit id="86b90ed2d4e9e71fe9dba3a40b100d851376207b" translate="yes" xml:space="preserve">
          <source>In most modern browsers, there is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol&quot;&gt;symbol&lt;/a&gt; primitive data type which can be used to create an enumeration. It will ensure type safety of the enum as each symbol value is guaranteed by JavaScript to be unique, i.e. &lt;code&gt;Symbol() != Symbol()&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在大多数现代浏览器中，都有一种&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;符号&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原始数据类型可用于创建枚举。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这将确保枚举的类型安全，因为JavaScript保证每个符号值都是唯一的，即&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Symbol() != Symbol()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0536e218af1de7dd63df9fd1954433d7fb839a53" translate="yes" xml:space="preserve">
          <source>In my current game project, I have used below, since few customers still use IE8:</source>
          <target state="translated">在我目前的游戏项目中,由于很少有客户还在使用IE8,所以我用的是下面的方法。</target>
        </trans-unit>
        <trans-unit id="6ca6bad9326a3dd9f548cf7b18f689e488c30c15" translate="yes" xml:space="preserve">
          <source>In the above snippet, you were alerted with an error because &lt;code&gt;ENUM_COLORENUM_DNE&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在以上代码段中，由于&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不存在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUM_COLORENUM_DNE&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;收到&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;错误&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;提示&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5e20160973b46e9572ce97b13f7f5db3d6c080f4" translate="yes" xml:space="preserve">
          <source>It's easy to use, I think. &lt;a href=&quot;https://stackoverflow.com/a/32245370/4365315&quot;&gt;https://stackoverflow.com/a/32245370/4365315&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我认为它很容易使用。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/32245370/4365315&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://stackoverflow.com/a/32245370/4365315&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3076217528346e059c63265a91af4988f03644dc" translate="yes" xml:space="preserve">
          <source>Let us cut straight to the problem: file size. Every other answer listed here bloats your code to the extreme. I present to you that for the best possible performance, readability of code, large scale project management, syntax hinting in many code editors, and reduction in code size by minification, this is the correct way to do enumerations: underscore-notation variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="019ef5023f43c868428b166108509d4510643dd6" translate="yes" xml:space="preserve">
          <source>Now you can create your enums:</source>
          <target state="translated">现在你可以创建你的enums了。</target>
        </trans-unit>
        <trans-unit id="ad1e606581825d4652686b0dca7be71bf7b89cca" translate="yes" xml:space="preserve">
          <source>Now, let us see how big the equivalent file would be without any of these enumerations.</source>
          <target state="translated">现在,让我们来看看如果没有这些枚举,等价的文件会有多大。</target>
        </trans-unit>
        <trans-unit id="4258f570e2f36a2cf3e43b2313a70607009a17f5" translate="yes" xml:space="preserve">
          <source>Now.... now it opens up some &lt;em&gt;very&lt;/em&gt; interesting possibilities.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在....现在它提供了一些&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非常&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有趣的可能性。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a61d4e29999f717e20a2ffa02fda03db9cc09177" translate="yes" xml:space="preserve">
          <source>Now:</source>
          <target state="translated">Now:</target>
        </trans-unit>
        <trans-unit id="6777cdd3ceca7e36b8093e5c067858f590f80b47" translate="yes" xml:space="preserve">
          <source>Observe that, in the code above, it's really easy to add in a new kind of pet: you would just have to append a new entry after &lt;code&gt;ENUM_PET_RAT&lt;/code&gt; and update &lt;code&gt;ENUMLEN_PET&lt;/code&gt; accordingly. It might be more difficult and buggy to add a new entry in other systems of enumeration.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;观察一下，在上面的代码中，添加一种新的宠物真的很容易：您只需要在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUM_PET_RAT&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之后附加一个新条目&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并相应地更新&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUMLEN_PET&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在其他枚举系统中添加新条目可能会更加困难且容易出错。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27611a72d815f00faddab954a8bad60150d01333" translate="yes" xml:space="preserve">
          <source>Of course this means that some assumptions can no longer be made (that value represents the correct order for the size for example).</source>
          <target state="translated">当然,这意味着有些假设不能再做(比如说,这个值代表了尺寸的正确顺序)。</target>
        </trans-unit>
        <trans-unit id="2e2652d13092e5b74c5a956c801be67aa9e05920" translate="yes" xml:space="preserve">
          <source>Of course, now it's your duty to make sure there are no conflicts in the data (RE, EX, etc. must be unique, also 1, 2, etc. should be unique). Note that you need to maintain these forever for backward compatibility.</source>
          <target state="translated">当然,现在你的责任是确保数据中没有冲突(RE、EX等必须是唯一的,1、2等也应该是唯一的)。需要注意的是,你需要永远保留这些,以保证向后兼容。</target>
        </trans-unit>
        <trans-unit id="2ee406650e11da61af21bfbc6cbf739d7e95cecf" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;https://github.com/zhaber/symbol-enum&quot;&gt;GitHub&lt;/a&gt; you can find a wrapper that simplifies the code required to initialize the enum:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/zhaber/symbol-enum&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;GitHub上，&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以找到一个包装器，以简化初始化枚举所需的代码：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b1645c067cea6891d49e0e88accd77add77a2459" translate="yes" xml:space="preserve">
          <source>Once again, if you are just a casual user, or in the browser etc, just take the factory part of the code, potentially removing underscore library too if you don't wish to use it in your code.</source>
          <target state="translated">再次,如果你只是一个普通用户,或在浏览器等,只需将代码中的工厂部分拿出来,如果你不想在代码中使用下划线库,也有可能将下划线库也去掉。</target>
        </trans-unit>
        <trans-unit id="4e8a8d88577dafbf2a70d34861ae2b090871737c" translate="yes" xml:space="preserve">
          <source>One might object to the code with enumerations seeming to be much longer than the code with ordinary objects, but looks can be deceiving. It is important to remember that source code size is not proportional to output size when using the epic Closure Compiler. Observe.</source>
          <target state="translated">人们可能会反对使用枚举的代码似乎比使用普通对象的代码要长得多,但外观可能会有欺骗性。需要记住的是,使用史诗级的Closure编译器时,源代码的大小与输出的大小并不成正比。观察一下。</target>
        </trans-unit>
        <trans-unit id="3da9a28b4a8d49e5721e26f7dd37b5c894a32c29" translate="yes" xml:space="preserve">
          <source>One nice thing about this little tool is in modern environment (including nodejs and IE 9+ browsers) the returned Enum object is immutable.</source>
          <target state="translated">这个小工具的一个优点是在现代环境下(包括nodejs和IE 9+浏览器)返回的Enum对象是不可变的。</target>
        </trans-unit>
        <trans-unit id="8af3c352714ee2b7aa8cca0acaf7ef03840953b9" translate="yes" xml:space="preserve">
          <source>One very beneficial feature of Enums that you get from traditional languages is that they blow up (throw a compile-time error) if you try to access an enumerator which does not exist.</source>
          <target state="translated">你从传统语言中得到的Enums的一个非常有利的特点是,如果你试图访问一个不存在的枚举器,它们就会爆炸(抛出一个编译时错误)。</target>
        </trans-unit>
        <trans-unit id="cfbdd2a7bf53e592f5c5d242bf61f04e04bfc4ba" translate="yes" xml:space="preserve">
          <source>One way to ensure a stronger degree of type safety (with enums or otherwise) is to use a tool like &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; or &lt;a href=&quot;https://flow.org/&quot;&gt;Flow&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;确保类型安全性（使用枚举或其他方式）的程度更高的一种方法是使用诸如&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TypeScript&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://flow.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Flow之&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类的工具&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f977b56599b7c5cc821b20dc938593868d273ea4" translate="yes" xml:space="preserve">
          <source>Or is there a more preferable idiom?</source>
          <target state="translated">还是有一个更可取的成语?</target>
        </trans-unit>
        <trans-unit id="9819d16018ce560bb5ff7c3d39f5e93f5c3192c6" translate="yes" xml:space="preserve">
          <source>Plunker demo</source>
          <target state="translated">灌浆机演示</target>
        </trans-unit>
        <trans-unit id="63ca7a089d75be2226f3c45ea7652c8881fc3241" translate="yes" xml:space="preserve">
          <source>Quotes aren't needed but I kept them for consistency.</source>
          <target state="translated">引号是不需要的,但为了保持一致,我把它们保留了下来。</target>
        </trans-unit>
        <trans-unit id="1df553327bda4a0a94cf83357067136fc88d6e76" translate="yes" xml:space="preserve">
          <source>Remember, in JavaScript an object is just like a &lt;em&gt;map&lt;/em&gt; or &lt;em&gt;hash table&lt;/em&gt;. A set of name-value pairs. You can loop through them or otherwise manipulate them without knowing much about them in advance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请记住，在JavaScript中，对象就像是&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;map&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;hash table&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一组名称/值对。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以循环浏览它们或以其他方式操纵它们，而无需事先了解它们。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99c080964befaf7bcee44feb0a91e7a8974af709" translate="yes" xml:space="preserve">
          <source>Remember, the fields of the enum (value, name and code in this example) are not needed for the identity check and are only there for convenience. Also the name of the size property itself does not need to be hard coded, but can also be set dynamically. So supposing you only know the name for your new enum value, you can still add it without problems:</source>
          <target state="translated">请记住,enum的字段(值、名称和代码在这个例子中)并不是身份检查所需要的,只是为了方便。另外,大小属性本身的名称不需要硬编码,也可以动态设置。因此,假设你只知道新的enum值的名称,你仍然可以毫无问题地添加它。</target>
        </trans-unit>
        <trans-unit id="71ad5ea2656d253d975807cbedab98876e039c38" translate="yes" xml:space="preserve">
          <source>Seen a lot of posts with overly convoluted libraries etc. The solution to getting enum support in Javascript is so simple it really isn't needed. Here is the code:</source>
          <target state="translated">看过很多帖子,都是关于过于复杂的库等等。在Javascript中获得enum支持的解决方案非常简单,真的不需要。下面是代码。</target>
        </trans-unit>
        <trans-unit id="4bcb4e163bf193fe874c35e7a1a754e4ed2bd51c" translate="yes" xml:space="preserve">
          <source>Show code snippet</source>
          <target state="translated">显示代码片段</target>
        </trans-unit>
        <trans-unit id="ac91a4f2ac28dec5d46e9f4712639bd943a4941b" translate="yes" xml:space="preserve">
          <source>Similar to a web server proxy, JavaScript proxies are able to intercept operations on objects (with the use of &quot;traps&quot;, call them hooks if you like) and allow you to perform various checks, actions and/or manipulations before they complete (or in some cases stopping the operations altogether which is exactly what we want to do if and when we try to reference an enumerator which does not exist).</source>
          <target state="translated">类似于Web服务器代理,JavaScript代理能够拦截对象上的操作(使用 &quot;陷阱&quot;,如果你愿意,可以称之为钩子),并允许你在操作完成之前执行各种检查、操作和或操作(或者在某些情况下完全停止操作,这正是我们在引用一个不存在的枚举器时要做的事情)。</target>
        </trans-unit>
        <trans-unit id="778b66baff626f6044bed0379a9470fc0bb63d17" translate="yes" xml:space="preserve">
          <source>Since 1.8.5 it's possible to seal and freeze the object, so define the above as:</source>
          <target state="translated">自从1.8.5开始,就可以对对象进行封存和冻结,所以把上面定义为。</target>
        </trans-unit>
        <trans-unit id="a2028fd26119637b3c384cc4f6ac6bb28a5eac53" translate="yes" xml:space="preserve">
          <source>So you should be able to create a custom object, then call &lt;code&gt;Enum()&lt;/code&gt; on it. The values assigned start at 0 and increment per item.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，您应该能够创建一个自定义对象，然后&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在其上&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Enum()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;分配的值从0开始，每项递增。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e9fab28025a4966face606231666907532bc5a86" translate="yes" xml:space="preserve">
          <source>Some advantages to this approach:</source>
          <target state="translated">这种方法的一些优点:</target>
        </trans-unit>
        <trans-unit id="19e5819d6b756ba8454cf624b492a5a5a365d47d" translate="yes" xml:space="preserve">
          <source>Some disadvantages:</source>
          <target state="translated">一些缺点。</target>
        </trans-unit>
        <trans-unit id="010a9a12a0567221f03dee57498a189a110055c0" translate="yes" xml:space="preserve">
          <source>Some may say that this is less practical than other solutions: it waists tons of space, it takes a long time to write, and it is not coated with sugar syntax. Those people would be right if they do not minify their code. However, no reasonable person would leave unminified code in the end product. For this minification, Closure Compiler is the best I have yet to find. Online access can be found &lt;a href=&quot;https://closure-compiler.appspot.com/&quot;&gt;here&lt;/a&gt;. Closure compiler is able to take all of this enumeration data and inline it, making your Javascript be super duper small and run super duper fast. Thus, Minify with Closure Compiler. Observe.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有人可能会说这比其他解决方案不太实用：它占用了很多空间，需要花费很长时间来编写，并且没有使用糖语法。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果他们不缩减代码，那么这些人将是正确的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，没有理性的人会在最终产品中留下未缩小的代码。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于这种缩小，Closure Compiler是我尚未找到的最好的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在线访问可以在&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://closure-compiler.appspot.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这里&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;找到&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Closure编译器能够获取所有这些枚举数据并将其内联，从而使您的Javascript变得超级精简，并且运行速度更快。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，使用Closure Compiler进行压缩。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;观察一下。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4f2e968260777fc3c3e4c99be94a1ab7f0f3392f" translate="yes" xml:space="preserve">
          <source>Some messy memory management going on in there, as I keep the references to the enums</source>
          <target state="translated">里面有一些混乱的内存管理,因为我保留了对enums的引用。</target>
        </trans-unit>
        <trans-unit id="6da13addb000b67d42a6d66391713819e634149f" translate="yes" xml:space="preserve">
          <source>Source</source>
          <target state="translated">Source</target>
        </trans-unit>
        <trans-unit id="9e31c1a6b09a455d1ca7c4ca9bbc556f78a496de" translate="yes" xml:space="preserve">
          <source>Source: &lt;a href=&quot;http://kangax.github.io/compat-table/es5/&quot;&gt;http://kangax.github.io/compat-table/es5/&lt;/a&gt;, Click on &quot;Show obsolete browsers?&quot; on top, and check IE8 &amp;amp; freeze row col intersection.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来源：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://kangax.github.io/compat-table/es5/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//kangax.github.io/compat-table/es5/&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，单击&amp;ldquo;显示过时的浏览器？&amp;rdquo;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在顶部，并检查IE8和冻结行col交集。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e60cf46c90d449a89f34d3989493d1eadc7b494b" translate="yes" xml:space="preserve">
          <source>Still no type safety</source>
          <target state="translated">仍然没有类型安全</target>
        </trans-unit>
        <trans-unit id="5d3e2372695f63ce0c53a4f4135db20d5ae16db5" translate="yes" xml:space="preserve">
          <source>Test:</source>
          <target state="translated">Test:</target>
        </trans-unit>
        <trans-unit id="261a776295a7fe68febe54e17606829075e84388" translate="yes" xml:space="preserve">
          <source>Thanks for all the upvotes everyone, but I don't think my answer below is the best way to write enums in JavaScript anymore. See my blog post for more details: &lt;a href=&quot;https://stijndewitt.com/2014/01/26/enums-in-javascript/&quot;&gt;Enums in JavaScript&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;感谢大家的支持，但是我认为下面的答案不再是用JavaScript编写枚举的最佳方法。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有关更多详细信息，请参见我的博客文章：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stijndewitt.com/2014/01/26/enums-in-javascript/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript中的Enums&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="85562f06ffb96b6ce0f754599b5122e136034f1b" translate="yes" xml:space="preserve">
          <source>The Enum class has some associative caching if you are using getByValue a lot</source>
          <target state="translated">如果你经常使用getByValue,Enum类有一些关联缓存。</target>
        </trans-unit>
        <trans-unit id="00f1fe149219fb759c0c025124aa03876932a7fb" translate="yes" xml:space="preserve">
          <source>The Proxy object is used to define custom behavior for fundamental operations (e.g. property lookup, assignment, enumeration, function
  invocation, etc).</source>
          <target state="translated">代理对象用于定义基本操作(如属性查找、赋值、枚举、函数调用等)的自定义行为。</target>
        </trans-unit>
        <trans-unit id="cf47bc008efb69f3d4b02b0361c4de5c8ae84245" translate="yes" xml:space="preserve">
          <source>The above code has a deficiency in that it allows one to create additional objects of type &lt;code&gt;CellState&lt;/code&gt; (even though one can't assign them to the static fields of &lt;code&gt;CellState&lt;/code&gt; since it's frozen). Still, the below more refined code offers the following advantages:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上面的代码有一个缺陷，就是它允许人们创建&lt;/font&gt;&lt;/font&gt; &lt;code&gt;CellState&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类型的其他对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（即使&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于冻结&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而无法将它们分配给&lt;/font&gt;&lt;/font&gt; &lt;code&gt;CellState&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的静态字段&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;尽管如此，以下更完善的代码仍具有以下优点：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="25bbe5ed45410c385740f04f427c99d3ec81a436" translate="yes" xml:space="preserve">
          <source>The advantage ( of using class instead of literal object) is to have a parent class &lt;code&gt;Enum&lt;/code&gt; then all your Enums will &lt;strong&gt;extends&lt;/strong&gt; that class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;优点（使用类而不是文字对象）是拥有一个父类&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Enum&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;然后您所有的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Enum&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;都将&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;扩展&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该类。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="73d650aed04c766e08f74eec98977b696cd0cc17" translate="yes" xml:space="preserve">
          <source>The easiest way is to just iterate over an object, adding inverted key-value pairs to the object. The only drawback is that you must manually set the value for each member.</source>
          <target state="translated">最简单的方法就是对一个对象进行迭代,将倒置的键值对添加到对象中。唯一的缺点是,你必须为每个成员手动设置值。</target>
        </trans-unit>
        <trans-unit id="58cf386d99abb4ca880f41dbd289cce127ca6bae" translate="yes" xml:space="preserve">
          <source>The example above demonstrates that, in addition to having superior performance, the enumerated code also results in a smaller minified file size.</source>
          <target state="translated">上面的例子表明,除了性能优越外,枚举式代码还能使文件大小更小。</target>
        </trans-unit>
        <trans-unit id="2175a6e3927481a5e9e2c86abbac9335b526d1e1" translate="yes" xml:space="preserve">
          <source>The implementation:</source>
          <target state="translated">的执行情况。</target>
        </trans-unit>
        <trans-unit id="1b4b18df021f0943935d3a23f176bae0c3c842e6" translate="yes" xml:space="preserve">
          <source>The last one, seems most efficient for string, it reduces your total bandwidth if you have server &amp;amp; client exchanging this data.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最后一个似乎对字符串最有效，如果服务器和客户端交换此数据，它会减少总带宽。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="957a717108e675685afc1d790b57060cc21c186e" translate="yes" xml:space="preserve">
          <source>The minified code without enumerations is above and the minified code with enumerations is below.</source>
          <target state="translated">上面是没有枚举的最小化代码,下面是带枚举的最小化代码。</target>
        </trans-unit>
        <trans-unit id="e48b39c0d434d1683c2cb05f3cc046ff95bf4784" translate="yes" xml:space="preserve">
          <source>The problem with this approach? You can accidentally redefine your enumerant, or accidentally have duplicate enumerant values. For example:</source>
          <target state="translated">这种方法的问题是什么?你可以不小心重新定义你的枚举值,或者不小心出现重复的枚举值。比如说</target>
        </trans-unit>
        <trans-unit id="e20ff4352992825088e227db59d322a586887e06" translate="yes" xml:space="preserve">
          <source>Then create enums by instantiating the class:</source>
          <target state="translated">然后通过实例化类创建enums。</target>
        </trans-unit>
        <trans-unit id="6bcdccbe45577d56f67f3e30662bab10048d1dce" translate="yes" xml:space="preserve">
          <source>There is my helper codes(&lt;code&gt;TypeHelper&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有我的助手代码（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;TypeHelper&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6018a8d87b175eb682207e3a2279127c6566c850" translate="yes" xml:space="preserve">
          <source>This enables you to look up on both &lt;code&gt;MyEnum.Bar&lt;/code&gt; which returns 1, and &lt;code&gt;MyEnum[1]&lt;/code&gt; which returns &quot;Bar&quot; regardless of the order of declaration.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这使您可以查找两个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyEnum.Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返回1，和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyEnum[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返回&amp;ldquo;酒吧&amp;rdquo;，无论声明的顺序。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="240fddc6872b1bcd33d31758c00233d8a3fad8d1" translate="yes" xml:space="preserve">
          <source>This is an old one I know, but the way it has since been implemented via the TypeScript interface is:</source>
          <target state="translated">这是我知道的一个老问题,但后来通过TypeScript接口实现的方式是。</target>
        </trans-unit>
        <trans-unit id="c78cf4e2250683d273be3cc8fb92138e0f15b04f" translate="yes" xml:space="preserve">
          <source>This is how Typescript translates it's &lt;code&gt;enum&lt;/code&gt; into Javascript:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是Typescript将其&lt;/font&gt;&lt;/font&gt; &lt;code&gt;enum&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;转换为Javascript的方式：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d593b6667faa54506d6186f02628e7b599f78e17" translate="yes" xml:space="preserve">
          <source>This is the solution that I use.</source>
          <target state="translated">我用的就是这个方案。</target>
        </trans-unit>
        <trans-unit id="7de899a839242b0f1fba72651832294419d73e4e" translate="yes" xml:space="preserve">
          <source>This is where Proxy objects shine. Proxies were standardized in the language with the introduction of ES6 (ES2015). Here's the description from MDN:</source>
          <target state="translated">这就是Proxy对象大放异彩的地方。随着ES6(ES2015)的推出,Proxy对象在语言中得到了规范化。下面是MDN的描述。</target>
        </trans-unit>
        <trans-unit id="c5bffbd2f0abf194528cabcb47d491dc00090d0f" translate="yes" xml:space="preserve">
          <source>This isn't much of an answer, but I'd say that works just fine, personally</source>
          <target state="translated">这个答案不多,但我个人认为这很好。</target>
        </trans-unit>
        <trans-unit id="392b08ece238bd0b061625f0f1ca0efe85905d6a" translate="yes" xml:space="preserve">
          <source>To fetch a name for a value (can be ambiguous when putting the same value for different names):</source>
          <target state="translated">为一个值取一个名字(为不同的名字取相同的值时可能会有歧义)。</target>
        </trans-unit>
        <trans-unit id="3e8d22e1abaab612cd9cb7081ceef01c32ec0e91" translate="yes" xml:space="preserve">
          <source>To fetch a value (like Enums in C#):</source>
          <target state="translated">要获取一个值(像C#中的Enums一样)。</target>
        </trans-unit>
        <trans-unit id="1763aab6cea730d36ad16a7961af837c442cfa0b" translate="yes" xml:space="preserve">
          <source>To get an array with each name &amp;amp; value in an object:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要获取具有对象中每个名称和值的数组：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec080fdc68337b4418fd75db8a11ff84161eb0d2" translate="yes" xml:space="preserve">
          <source>To simplify debugging, you can add a description to enum values:</source>
          <target state="translated">为了简化调试,可以在enum值中添加一个描述。</target>
        </trans-unit>
        <trans-unit id="70f73550dc9257eb21af302fb1e0971791372584" translate="yes" xml:space="preserve">
          <source>To upgrade from &lt;code&gt;gen_enum&lt;/code&gt; to &lt;code&gt;constjs&lt;/code&gt; just change the statement</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要从&lt;/font&gt;&lt;/font&gt; &lt;code&gt;gen_enum&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;升级&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;constjs&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;只需更改以下语句&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="52c6c1812015585dc1092393a1f244f60d68c60a" translate="yes" xml:space="preserve">
          <source>UPDATE</source>
          <target state="translated">UPDATE</target>
        </trans-unit>
        <trans-unit id="edb1354a5a3b6c34a6bb991b3409997efcbac806" translate="yes" xml:space="preserve">
          <source>UPDATE:</source>
          <target state="translated">UPDATE:</target>
        </trans-unit>
        <trans-unit id="f058a6979e739f066b0fe12b629625f0d929d4b3" translate="yes" xml:space="preserve">
          <source>Use Javascript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy&quot;&gt;Proxies&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用Javascript &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代理&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0b4eac1fdaee3a728ff13a8728f114e7c6d22a2" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;Object.defineProperty&lt;/code&gt; I think I came up with a somewhat viable solution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我想&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.defineProperty&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;提出了一个可行的解决方案。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="98b775ef24ab95201c3b51eed5da404ac5d60674" translate="yes" xml:space="preserve">
          <source>Using this method.. you should (in theory) be able to call and define enum values for any object, without affecting other attributes of that object.</source>
          <target state="translated">使用这个方法....你应该(理论上)能够调用和定义任何对象的 enum 值,而不影响该对象的其他属性。</target>
        </trans-unit>
        <trans-unit id="934469af992ab71e3895dab4f299c5bdfa576fbc" translate="yes" xml:space="preserve">
          <source>We could also do:</source>
          <target state="translated">我们也可以做。</target>
        </trans-unit>
        <trans-unit id="859b93a3e47601e04562820bf278f71df3938c2f" translate="yes" xml:space="preserve">
          <source>What about Artur Czajka's Object.freeze? Wouldn't that work to prevent you from setting monday to thursday? &amp;ndash; Fry Quad</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;那么Artur Czajka的Object.freeze呢？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这样是否可以防止您将星期一设置为星期四？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ndash; Fry Quad&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87ec9f42f703ce7dc478fe6edb3d4ecddc5ed7e2" translate="yes" xml:space="preserve">
          <source>What is the preferred syntax for defining enums in JavaScript</source>
          <target state="translated">在JavaScript中定义enums的首选语法是什么?</target>
        </trans-unit>
        <trans-unit id="a6736a763ba4a9a59be294bc8f1a03dc14fc6585" translate="yes" xml:space="preserve">
          <source>What is the preferred syntax for defining enums in JavaScript? Something like:</source>
          <target state="translated">在JavaScript中定义enums的首选语法是什么?类似的东西。</target>
        </trans-unit>
        <trans-unit id="021975cc386a47b6d7f84f09ad80d86b337bbd5e" translate="yes" xml:space="preserve">
          <source>Which holds:</source>
          <target state="translated">这就对了。</target>
        </trans-unit>
        <trans-unit id="bb05bb27a4b189e505f76e468e416fb819c38bc0" translate="yes" xml:space="preserve">
          <source>While it probably doesn't fit every valid use of enums, it goes a very long way.</source>
          <target state="translated">虽然它可能并不适合每一个有效的enums的使用,但它的作用是非常大的。</target>
        </trans-unit>
        <trans-unit id="49659e5a07d9ec9ddbc5ea2cded9dfed86235252" translate="yes" xml:space="preserve">
          <source>Will generate:</source>
          <target state="translated">将产生。</target>
        </trans-unit>
        <trans-unit id="88a4782155b94fbcad44245c2f365c3d9a1032d6" translate="yes" xml:space="preserve">
          <source>You can also add methods, by using Enum.prototype:</source>
          <target state="translated">你也可以通过使用Enum.prototype添加方法。</target>
        </trans-unit>
        <trans-unit id="0519509a5976fcf51adc478e600cbffbc195ecee" translate="yes" xml:space="preserve">
          <source>You can also get the html select options readily:</source>
          <target state="translated">你也可以随时获得html选择选项。</target>
        </trans-unit>
        <trans-unit id="8a671c738791bb11768bead2d5a7e90155030bef" translate="yes" xml:space="preserve">
          <source>You can define enums like this:</source>
          <target state="translated">你可以这样定义enums。</target>
        </trans-unit>
        <trans-unit id="25d7f4649ff6f2e5528a53a85b385845fcbb3e72" translate="yes" xml:space="preserve">
          <source>You can do something like this</source>
          <target state="translated">你可以做这样的事情</target>
        </trans-unit>
        <trans-unit id="2cc36b3243c9980b864e5d49924f7df0f2764b76" translate="yes" xml:space="preserve">
          <source>You can fake it, but you won't get type safety. Typically this is done by creating a simple dictionary of string values mapped to integer values. For example:</source>
          <target state="translated">你可以伪造它,但你不会得到类型安全。通常是通过创建一个简单的字符串值映射到整数值的简单字典来实现的。比如说</target>
        </trans-unit>
        <trans-unit id="5fe580e8ba8749cbf5431b53d3ad5b80340d6614" translate="yes" xml:space="preserve">
          <source>You can init'd it like this:</source>
          <target state="translated">你可以这样启动它。</target>
        </trans-unit>
        <trans-unit id="a98d6bda360fea5247e4644560f6b7e355fcd022" translate="yes" xml:space="preserve">
          <source>You don't need to make sure you don't assign duplicate numbers to different enum values this way. A new object gets instantiated and assigned to all enum values.</source>
          <target state="translated">你不需要确保你不把重复的数字分配给不同的enum值。一个新对象会被实例化并分配给所有的enum值。</target>
        </trans-unit>
        <trans-unit id="3417bdae129afb733dd1b44e56e82770f97dc32c" translate="yes" xml:space="preserve">
          <source>Your enums can be complex types</source>
          <target state="translated">你的枚举可以是复杂的类型</target>
        </trans-unit>
        <trans-unit id="a777b8e42181e692e5a2700fc1f5fd318240e8d1" translate="yes" xml:space="preserve">
          <source>and voila! JS enums.</source>
          <target state="translated">然后就可以了! JS enums。</target>
        </trans-unit>
        <trans-unit id="4fc19dd49d67bc4ce99ea768a6c767c51047c281" translate="yes" xml:space="preserve">
          <source>code:</source>
          <target state="translated">code:</target>
        </trans-unit>
        <trans-unit id="eac3824791b636798d704daea4c23b9a78ea1fdc" translate="yes" xml:space="preserve">
          <source>es7 way, (iterator, freeze), usage:</source>
          <target state="translated">es7方式,(迭代器,定格),用法。</target>
        </trans-unit>
        <trans-unit id="1ca81d0372f1fdebf852d75ec99ada2a919cb43d" translate="yes" xml:space="preserve">
          <source>file: enumsSpec.js</source>
          <target state="translated">file:enumsSpec.js</target>
        </trans-unit>
        <trans-unit id="97eff15813ecb8c1af5c566c60c61d3456ba896a" translate="yes" xml:space="preserve">
          <source>make it type safe.</source>
          <target state="translated">使之成为安全类型。</target>
        </trans-unit>
        <trans-unit id="66eafc2002287bd8bd0bdd673ad31ab9a5918faf" translate="yes" xml:space="preserve">
          <source>no more objects of type &lt;code&gt;CellState&lt;/code&gt; may be created</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不能&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;再创建&lt;/font&gt;&lt;/font&gt; &lt;code&gt;CellState&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类型的对象&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="152750d995ae37abe5e1b9d2ea4f29e16de61a28" translate="yes" xml:space="preserve">
          <source>or even this:</source>
          <target state="translated">甚至是这样。</target>
        </trans-unit>
        <trans-unit id="c6dc9bc9f77b486a13b3f63ffb2ffd1cb3fef4db" translate="yes" xml:space="preserve">
          <source>should</source>
          <target state="translated">should</target>
        </trans-unit>
        <trans-unit id="68742b2d31849418d43d60980ca19a8e7eed2590" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;values&lt;/code&gt; function that returns all instances of the enum does not have to create the return value in the above, manual (and error-prone) way.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返回上述枚举的所有实例&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;values&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数不必以上述手动（且容易出错）的方式创建返回值。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f8f8e9f767353d846d34ea5a451c83849c1b01b" translate="yes" xml:space="preserve">
          <source>then</source>
          <target state="translated">then</target>
        </trans-unit>
        <trans-unit id="4374aaee247fb237ce6c97d5c8d64bbe474d16de" translate="yes" xml:space="preserve">
          <source>to</source>
          <target state="translated">to</target>
        </trans-unit>
        <trans-unit id="0a25ba5991316bdda4a9b3abcee2106016df28a0" translate="yes" xml:space="preserve">
          <source>update</source>
          <target state="translated">update</target>
        </trans-unit>
        <trans-unit id="9b240f2251f8ab3fa8c6ef1b2c21f422291df20a" translate="yes" xml:space="preserve">
          <source>utility method to get the enum back from a string representation</source>
          <target state="translated">从字符串表示法中获取enum的实用方法</target>
        </trans-unit>
        <trans-unit id="fca73338233601027eca3ae2b412633ca04d0d94" translate="yes" xml:space="preserve">
          <source>you are guaranteed that no two enum instances are assigned the same code</source>
          <target state="translated">你可以保证没有两个enum实例被分配相同的代码</target>
        </trans-unit>
        <trans-unit id="fc8f5180174e566c3f69fd4ab014e97f138bd431" translate="yes" xml:space="preserve">
          <source>your answers are far too complicated</source>
          <target state="translated">你的答案太复杂了</target>
        </trans-unit>
        <trans-unit id="350201357f9ebfbe91de49639430bf1190af7c2b" translate="yes" xml:space="preserve">
          <source>𝗖𝗼𝗻𝗰𝗹𝘂𝘀𝗶𝗼𝗻 ☑</source>
          <target state="translated">𝗖𝗼𝗻𝗰𝗹𝘂𝘀𝗶𝗼Ll_1D5FB&quot;☑</target>
        </trans-unit>
        <trans-unit id="4f6f4c2cb6fe94424330874e205eab10a91f05a2" translate="yes" xml:space="preserve">
          <source>𝗖𝗼𝗼𝗽𝗲𝗿𝗮𝘁𝗶𝘃𝗲 🤝 𝗕𝘂𝗴 𝗙𝗶𝘅𝗶𝗻𝗴</source>
          <target state="translated">𝗖𝗼𝗼𝗽𝗲𝗿𝗮𝘁𝗶𝗶𝘃𝗲 🤝 𝗕𝗕𝗴 𝗙𝗶𝘅𝗶𝗻𝗴</target>
        </trans-unit>
        <trans-unit id="cdd0f8d965a84c5832f7a0ef8b4c1db022f061ac" translate="yes" xml:space="preserve">
          <source>𝗘𝗮𝘀𝘆 𝗗𝗲𝗯𝘂𝗴𝗴𝗶𝗻𝗴</source>
          <target state="translated">𝗮𝘀𝘆 𝗗𝗗𝗲𝗯𝘂𝗴𝗴Ll_1D5F6𝗶𝗻Ll_1D5F4</target>
        </trans-unit>
        <trans-unit id="d2fbc1d9ff5ecf49c9403985f1bb5755c7d96ebe" translate="yes" xml:space="preserve">
          <source>𝗘𝘅𝘁𝗲𝗻𝗱 𝗨𝗽𝗽𝗲𝗿𝗰𝗮𝘀𝗲 𝗩𝗮𝗿𝗶𝗮𝗯𝗹𝗲𝘀 𝗪𝗶𝘁𝗵 𝗔𝗱𝗱𝗶𝘁𝗶𝗼𝗻</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed71ee5ae311a7fec847c405fab1409c5c60bd81" translate="yes" xml:space="preserve">
          <source>𝗠𝗶𝗻𝗶𝗳𝘆 𝗪𝗶𝘁𝗵 &lt;a href=&quot;https://closure-compiler.appspot.com/&quot;&gt;𝗖𝗹𝗼𝘀𝘂𝗿𝗲 𝗖𝗼𝗺𝗽𝗶𝗹𝗲𝗿&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;𝗪𝗶𝘁𝗵𝗠𝗶𝗻𝗶𝗳𝘆 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://closure-compiler.appspot.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;𝗖𝗹𝗼𝘀𝘂𝗿𝗲𝗖𝗼𝗺𝗽𝗶𝗹𝗲𝗿&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4464bac1c36acf19178e93439a5c2de820d3429" translate="yes" xml:space="preserve">
          <source>𝗣𝗹𝗮𝗶𝗻 𝗩𝗮𝗻𝗶𝗹𝗹𝗮𝗝𝗦 𝗩𝗮𝗿𝗶𝗮𝗯𝗹𝗲 𝗡𝗮𝗺𝗲𝘀</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6086bccb11863d1afac36f713ff80c8ff70f47" translate="yes" xml:space="preserve">
          <source>𝗦𝗺𝗮𝗹𝗹𝗲𝗿 𝗖𝗼𝗱𝗲 𝗦𝗶𝘇𝗲</source>
          <target state="translated">𝗦𝗺𝗮𝗹𝗹𝗹𝗲𝗿 𝗖𝗼𝗱𝗲 𝗦𝗶𝗶𝘇𝗲</target>
        </trans-unit>
        <trans-unit id="fd543043142d858da8042a749e2fe4022abb49a1" translate="yes" xml:space="preserve">
          <source>𝗦𝘂𝗽𝗲𝗿𝗶𝗼𝗿 𝗣𝗲𝗿𝗳𝗼𝗿𝗺𝗮𝗻𝗰𝗲</source>
          <target state="translated">𝗦𝘂𝗽𝗲𝗶𝗶𝗼𝗿𝗿𝗣Ll_1D5E3𝗲𝗳𝗼𝗿Ll_1D5FA𝗮𝗻𝗰𝗰𝗲</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
