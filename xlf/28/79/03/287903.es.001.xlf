<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/287903">
    <body>
      <group id="287903">
        <trans-unit id="85d1a05474aae412f66b521ba2fe2da7735d81f3" translate="yes" xml:space="preserve">
          <source>(Length: 2,450 bytes)</source>
          <target state="translated">(Longitud:2.450 bytes)</target>
        </trans-unit>
        <trans-unit id="8a3f2fe3a5c190057e66e59306dccce0339379df" translate="yes" xml:space="preserve">
          <source>(Length: 605 bytes)</source>
          <target state="translated">(Longitud:605 bytes)</target>
        </trans-unit>
        <trans-unit id="916df6622c49f7c3dce28b0d3e68d53a73913e85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pastebin.com/embed_iframe/97K6XLdU&quot;&gt;Minified Without Using Enumerations&lt;/a&gt; (length: 843 bytes (238 bytes &lt;strong&gt;longer than enumerated code&lt;/strong&gt;))</source>
          <target state="translated">&lt;a href=&quot;https://pastebin.com/embed_iframe/97K6XLdU&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Minificado sin usar enumeraciones&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (longitud: 843 bytes (238 bytes &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;aacute;s que el c&amp;oacute;digo enumerado&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ))&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15903d83aa7d3c054873876c321d2c44489476af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pastebin.com/embed_iframe/fcX5fN2V&quot;&gt;Source Without Using Enumerations&lt;/a&gt; (length: 1,973 bytes (477 bytes shorter than enumerated code!))</source>
          <target state="translated">&lt;a href=&quot;https://pastebin.com/embed_iframe/fcX5fN2V&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Fuente sin usar enumeraciones&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (longitud: 1,973 bytes (&amp;iexcl;477 bytes m&amp;aacute;s cortos que el c&amp;oacute;digo enumerado!))&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6bab5d0196080fd4f4d8dd0ee6fc2d44f615a772" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Days&lt;/code&gt; now refers to the &lt;code&gt;Days&lt;/code&gt; enum:</source>
          <target state="translated">&lt;code&gt;Days&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ahora se refiere a la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;enumeraci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Days&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b14652ddd09ae4786388f077fc49e97e6d24224d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ASIDE: What the heck is a proxy?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aparte: &amp;iquest;Qu&amp;eacute; diablos es un proxy?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7eb616ba7601a967571a2d7206ed78f876b78d64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit 2&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Editar 2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a0e3f2feb92d1b5feba526fda2d2ab318506af4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Edit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fdb70bdeb6c6461411016970d0e0c7f8c2429b41" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Full Explanation:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Explicaci&amp;oacute;n completa:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28654a518284c0826b734aad2a182c101d864712" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Simplest solution:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La soluci&amp;oacute;n m&amp;aacute;s simple:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5c75984975b1168ad4ea11f7453dffad0b3f0ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TLDR:&lt;/strong&gt; Add this class to your utility methods and use it throughout your code, it mocks Enum behavior from traditional programming languages, and actually throws errors when you try to either access an enumerator that does not exist or add/update an enumerator. No need to rely on &lt;code&gt;Object.freeze()&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TLDR:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; agregue esta clase a sus m&amp;eacute;todos de utilidad y &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;uacute;sela&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en todo su c&amp;oacute;digo, se burla del comportamiento de Enum de los lenguajes de programaci&amp;oacute;n tradicionales y en realidad arroja errores cuando intenta acceder a un enumerador que no existe o agrega / actualiza un enumerador. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No es necesario confiar en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.freeze()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b06ed81ead54d582d15311d30f0cf292c3788e02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The advantage this method has over most other answers is that you can use it alongside a static type checker&lt;/strong&gt; (e.g. &lt;a href=&quot;https://flowtype.org/&quot;&gt;Flow&lt;/a&gt;) and you can assert, at development time using static type checking, that your variables, parameters, etc. are of the specific &lt;code&gt;CellState&lt;/code&gt; &quot;enum&quot; rather than some other enum (which would be impossible to distinguish if you used generic objects or symbols).</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La ventaja que tiene este m&amp;eacute;todo sobre la mayor&amp;iacute;a de las otras respuestas es que puede usarlo junto con un verificador de tipo est&amp;aacute;tico&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (por ejemplo, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://flowtype.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Flow&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) y puede afirmar, en el momento del desarrollo usando la verificaci&amp;oacute;n de tipo est&amp;aacute;tico, que sus variables, par&amp;aacute;metros, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;CellState&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; espec&amp;iacute;fico &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;enum&quot; en lugar de alguna otra enumeraci&amp;oacute;n (que ser&amp;iacute;a imposible de distinguir si utilizara objetos o s&amp;iacute;mbolos gen&amp;eacute;ricos).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99d8511e3225b22ac94b4026f42dc64491e67c9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Updates&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="880ce715326db9a5616661aef200e050e7d666d0" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;i&gt;After reading a helpful question, I thank the author for pouring time into their writing by clicking the top left up-arrow in the question box. Each answer box also has one of these up-arrows.&lt;/i&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;i&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Despu&amp;eacute;s de leer una pregunta &amp;uacute;til, agradezco al autor por dedicar tiempo a su escritura haciendo clic en la flecha superior izquierda hacia arriba en el cuadro de preguntas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada cuadro de respuesta tambi&amp;eacute;n tiene una de estas flechas hacia arriba.&lt;/font&gt;&lt;/font&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c03270912624feffacc426d10b87070cd7640f59" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;i&gt;wvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwv&lt;/i&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;i&gt;wvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwvwv&lt;/i&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="39383c35e2fe38f2660ca0cba9d2dd83df2c9fef" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;i&gt;wvwwvw wvwvwvw wvwxvw wvwvwv vwvwvw wvwvvw wvwwvw wvwvwvw wvwvw wvwvwv vwvxwvw wvwvvw wvwwvw wvwvxwvw wvwvw wvwvwv vwvwvw wvwvvw wvwwvw xwvwvwvw wvwvw&lt;/i&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;sup&gt;&lt;i&gt;wvwwvw wvwvwvw wvwxvw wvwvwv vwvwvw wvwvvw wvwwvw wvwvwvw wvwvw wvwvwv vwvxwvw wvwvvw wvwwvw wvwvxwvw wvwvw wvwvwv vwvwvw wvwvvw wvwwvw xwvwvwvw wvwvw&lt;/i&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="660441f3de24c7a6d25c2f3c42f087298efd38dd" translate="yes" xml:space="preserve">
          <source>A quick and simple way would be :</source>
          <target state="translated">Una forma rápida y sencilla sería..:</target>
        </trans-unit>
        <trans-unit id="41171634719c90ca1cc3c98aa8055c76e23359ac" translate="yes" xml:space="preserve">
          <source>Absolutely, &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/apps/ff806186%28v=vs.94%29.aspx&quot;&gt;&lt;code&gt;Object.freeze&lt;/code&gt;&lt;/a&gt; would totally fix the problem I complained about. I would like to remind everyone that when I wrote the above, &lt;code&gt;Object.freeze&lt;/code&gt; didn't really exist.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Absolutamente, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/apps/ff806186%28v=vs.94%29.aspx&quot;&gt; &lt;code&gt;Object.freeze&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; solucionar&amp;iacute;a totalmente el problema del que me quej&amp;eacute;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Me gustar&amp;iacute;a recordarles a todos que cuando escrib&amp;iacute; lo anterior, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.freeze&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; realmente no exist&amp;iacute;a.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a25e151072b3d309b84843fabec6fb0de174f3cc" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;ENUMLENGTH_&lt;/code&gt;, &lt;code&gt;ENUMLEN_&lt;/code&gt;, &lt;code&gt;INDEXLENGTH_&lt;/code&gt;, or &lt;code&gt;INDEXLEN_&lt;/code&gt; (whether &lt;code&gt;LEN_&lt;/code&gt; or &lt;code&gt;LENGTH_&lt;/code&gt; is personal preference) enumerated variable at the very end. You should use this variable wherever possible in your code to ensure that adding an extra entry to the enumeration and incrementing this value won't break your code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Agregue una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUMLENGTH_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;ENUMLEN_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ENUMLENGTH_&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ENUMLEN_&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;INDEXLENGTH_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;INDEXLEN_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (si &lt;/font&gt;&lt;/font&gt; &lt;code&gt;LEN_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;LENGTH_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es preferencia personal) al final. Debe usar esta variable siempre que sea posible en su c&amp;oacute;digo para asegurarse de que agregar una entrada adicional a la enumeraci&amp;oacute;n e incrementar este valor no rompa su c&amp;oacute;digo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b88998e66d6f699ab23dd5f9ed7236059d981de0" translate="yes" xml:space="preserve">
          <source>Additionally, this syntax of enumerations allows for clear and concise class extending as seen below. To extend a class, add an incrementing number to the &lt;code&gt;LEN_&lt;/code&gt; entry of the parent class. Then, finish out the subclass with its own &lt;code&gt;LEN_&lt;/code&gt; entry so that the subclass may be extended further in the future.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s, esta sintaxis de enumeraciones permite una clase clara y concisa que se extiende como se ve a continuaci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para extender una clase, agregue un n&amp;uacute;mero incremental a la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;entrada &lt;/font&gt;&lt;/font&gt; &lt;code&gt;LEN_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de la clase primaria. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Luego, finalice la subclase con su propia &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;entrada &lt;/font&gt;&lt;/font&gt; &lt;code&gt;LEN_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para que la subclase se pueda extender a&amp;uacute;n m&amp;aacute;s en el futuro.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e066ce81b2565725b8916297d8ad50eb91eff06a" translate="yes" xml:space="preserve">
          <source>Alerting the name is already possible:</source>
          <target state="translated">Alertar el nombre ya es posible:</target>
        </trans-unit>
        <trans-unit id="7de833501b70d8926b282dc8cbfec6659812704a" translate="yes" xml:space="preserve">
          <source>Alternatively, you could make the values objects, so you can have the cake and eat it too:</source>
          <target state="translated">Alternativamente,podrías hacer los valores objetos,para que puedas tener el pastel y comértelo también:</target>
        </trans-unit>
        <trans-unit id="688028ae2229c15c937fb45027bb5173514d301d" translate="yes" xml:space="preserve">
          <source>And a test to illustrate what it gives you:</source>
          <target state="translated">Y una prueba para ilustrar lo que te da:</target>
        </trans-unit>
        <trans-unit id="ba9666023f38c291bdd95a29496bc580155cef1e" translate="yes" xml:space="preserve">
          <source>And by the way, if you are interested in namespaces, you may want to have a look at my solution for simple but powerful namespace and dependency management for JavaScript: &lt;a href=&quot;http://packagesinjavascript.wordpress.com/&quot;&gt;Packages JS&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y, por cierto, si est&amp;aacute; interesado en los espacios de nombres, puede echar un vistazo a mi soluci&amp;oacute;n para la administraci&amp;oacute;n de dependencias y espacios de nombres simples pero poderosos para JavaScript: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://packagesinjavascript.wordpress.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Paquetes JS&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d92233f70b80f3ef9fa13e720a94e54c011c7ce" translate="yes" xml:space="preserve">
          <source>And here's a &lt;a href=&quot;https://lodash.com/docs#mixin&quot;&gt;lodash mixin&lt;/a&gt; to create an enum using a string. While this version is a little bit more involved, it does the numbering automatically for you. All the lodash methods used in this example have a regular JavaScript equivalent, so you can easily switch them out if you want.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y aqu&amp;iacute; hay un &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://lodash.com/docs#mixin&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lodash mixin&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para crear una enumeraci&amp;oacute;n usando una cadena. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si bien esta versi&amp;oacute;n es un poco m&amp;aacute;s complicada, hace la numeraci&amp;oacute;n autom&amp;aacute;ticamente por usted. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Todos los m&amp;eacute;todos lodash utilizados en este ejemplo tienen un equivalente de JavaScript regular, por lo que puede cambiarlos f&amp;aacute;cilmente si lo desea.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fa2162f9bcf563ddfd081d6565d0c3024ddc36e3" translate="yes" xml:space="preserve">
          <source>And this is how you access your enums:</source>
          <target state="translated">Y así es como accedes a tus enums:</target>
        </trans-unit>
        <trans-unit id="67bfbd2a48a972350c161d742bfd4dafa41d1a75" translate="yes" xml:space="preserve">
          <source>And you define your enums like this:</source>
          <target state="translated">Y defines tus enums así:</target>
        </trans-unit>
        <trans-unit id="45b0c4f1b3a3685803d2bcd6d9002919abc40a91" translate="yes" xml:space="preserve">
          <source>Another advantage about this form of enumeration is that it can be used to easily manage large scale projects without sacrificing minified code size. When working on a large project with lots of other people, it might be beneficial to explicitly mark and label the variable names with who created the code so that the original creator of the code can be quickly identified for collaborative bug fixing.</source>
          <target state="translated">Otra ventaja de esta forma de enumeración es que puede utilizarse para gestionar fácilmente proyectos de gran escala sin sacrificar el tamaño del código minificado.Cuando se trabaja en un proyecto grande con muchas otras personas,podría ser beneficioso marcar y etiquetar explícitamente los nombres de las variables con quién creó el código,de manera que el creador original del código pueda ser identificado rápidamente para la corrección colaborativa de errores.</target>
        </trans-unit>
        <trans-unit id="d6aea25c6a029bf9f8f02bc3a9b4260e3190a55b" translate="yes" xml:space="preserve">
          <source>As defined in this library.
&lt;a href=&quot;https://github.com/webmodule/foo/blob/master/foo.js#L217&quot;&gt;https://github.com/webmodule/foo/blob/master/foo.js#L217&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como se define en esta biblioteca. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/webmodule/foo/blob/master/foo.js#L217&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/webmodule/foo/blob/master/foo.js#L217&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="911bafc126f87b89da389293be4ecc05b7548552" translate="yes" xml:space="preserve">
          <source>As demonstrated in the chart above and example below, here are five easy steps to get started:</source>
          <target state="translated">Como se demuestra en el cuadro anterior y en el ejemplo siguiente,aquí hay cinco pasos fáciles para empezar:</target>
        </trans-unit>
        <trans-unit id="4d667c51c9b32e9b1fcaf249982247b720235cbe" translate="yes" xml:space="preserve">
          <source>As of writing, &lt;strong&gt;October 2014&lt;/strong&gt; - so here is a contemporary solution. Am writing the solution as a Node Module, and have included a test using Mocha and Chai, as well as underscoreJS. You can easily ignore these, and just take the Enum code if preferred.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Al momento de escribir, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;octubre de 2014&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , aqu&amp;iacute; hay una soluci&amp;oacute;n contempor&amp;aacute;nea. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Estoy escribiendo la soluci&amp;oacute;n como un m&amp;oacute;dulo de nodo, y he incluido una prueba con Mocha y Chai, as&amp;iacute; como subrayar JS. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede ignorarlos f&amp;aacute;cilmente y simplemente tomar el c&amp;oacute;digo Enum si lo prefiere.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="350faac54ea0f8928711b41090a13efd810c781b" translate="yes" xml:space="preserve">
          <source>As seen, without enumerations, the source code is shorter at the cost of a larger minified code. I do not know about you; but I know for sure that I do not incorporate source code into the end product. Thus, this form of enumerations is far superior insomuch that it results in smaller minified file sizes.</source>
          <target state="translated">Como se ha visto,sin enumeraciones,el código fuente es más corto a costa de un código minificado más grande.No sé ustedes,pero yo sé con certeza que no incorporo el código fuente en el producto final.Por lo tanto,esta forma de enumeraciones es muy superior,ya que da lugar a tamaños de archivos minificados más pequeños.</target>
        </trans-unit>
        <trans-unit id="eab750e0c2354d3f9ea9d61be65f4f3133c3fa6b" translate="yes" xml:space="preserve">
          <source>As you are probably aware, accessing non-existing members in JavaScript simply returns &lt;code&gt;undefined&lt;/code&gt; and does not blow up your code. Since enumerators are predefined constants (i.e. days of the week), there should never be a case when an enumerator should be undefined.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como probablemente ya sepa, acceder a miembros no existentes en JavaScript simplemente devuelve &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y no explota su c&amp;oacute;digo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Dado que los enumeradores son constantes predefinidas (es decir, d&amp;iacute;as de la semana), nunca deber&amp;iacute;a haber un caso en el que un enumerador no est&amp;eacute; definido.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6fe8945f9992e81f1d8ab24ec2bacddf61272d22" translate="yes" xml:space="preserve">
          <source>As you can see, you get an Enum factory, you can get all the keys simply by calling enum.keys, and you can match the keys themselves to integer constants. And you can reuse the factory with different values, and export those generated Enums using Node's modular approach.</source>
          <target state="translated">Como puedes ver,tienes una fábrica de Enum,puedes obtener todas las claves simplemente llamando a enum.keys,y puedes hacer coincidir las claves mismas con constantes enteras.Y puedes reutilizar la fábrica con diferentes valores,y exportar los Enum generados usando el enfoque modular de Node.</target>
        </trans-unit>
        <trans-unit id="fb694c76052425353b461a312cfd02cb5fa1ff59" translate="yes" xml:space="preserve">
          <source>Assignment:</source>
          <target state="translated">Assignment:</target>
        </trans-unit>
        <trans-unit id="fe9d3ad4f45811f3d8c8c5361ad1b047538e1610" translate="yes" xml:space="preserve">
          <source>At first I was confused why &lt;code&gt;obj[1]&lt;/code&gt; returns &lt;code&gt;'Active'&lt;/code&gt;, but then realised that its dead simple - &lt;strong&gt;Assignment operator&lt;/strong&gt; assigns value and then returns it:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Al principio estaba confundido por qu&amp;eacute; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; devuelve &lt;/font&gt;&lt;/font&gt; &lt;code&gt;'Active'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero luego me di cuenta de que es muy simple: el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador de asignaci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; asigna un valor y luego lo devuelve:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d53a0ab9c27417fcf3d19404c238eedb56027b1" translate="yes" xml:space="preserve">
          <source>Because of the attribute &lt;code&gt;writable:false&lt;/code&gt; this</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Debido al atributo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;writable:false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; esto&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="196d60684319b28936891eeec973d4041889781c" translate="yes" xml:space="preserve">
          <source>Besides freezing the mocked enum structure to prevent additional values from accidentally/maliciously being added, none of the other answers address that intrinsic feature of Enums.</source>
          <target state="translated">Además de congelar la estructura de enumeración burlada para evitar que se añadan accidentalmente valores adicionales,ninguna de las otras respuestas aborda esa característica intrínseca de los Enums.</target>
        </trans-unit>
        <trans-unit id="e6c8d874e34ea1a192fc457cef856bf3936f84fd" translate="yes" xml:space="preserve">
          <source>Bottom line: You can't.</source>
          <target state="translated">En resumen:No se puede.</target>
        </trans-unit>
        <trans-unit id="b9a49be8197ab205463652625b4b7f51605ec6e4" translate="yes" xml:space="preserve">
          <source>But, with continuous non-sparse integer-indexed &lt;a href=&quot;https://v8.dev/blog/elements-kinds#the-elements-kind-lattice&quot;&gt;PACKED_ELEMENTS&lt;/a&gt; arrays, the browser is able to skip much of that overhead because the index of the value in the internal array is already specified. Yes, according to the ECMAScript standard, all properties are supposed to be treated as strings. Nevertheless, this aspect of the ECMAScript standard is very misleading about performance because all browsers have special optimizations for numeric indexes in arrays.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero, con los &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;arreglos &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://v8.dev/blog/elements-kinds#the-elements-kind-lattice&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;continuos PACKED_ELEMENTS&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; indexados sin &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;dispersi&amp;oacute;n&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , el navegador puede omitir gran parte de esa sobrecarga porque el &amp;iacute;ndice del valor en el arreglo interno ya est&amp;aacute; especificado. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;S&amp;iacute;, de acuerdo con el est&amp;aacute;ndar ECMAScript, se supone que todas las propiedades deben tratarse como cadenas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, este aspecto del est&amp;aacute;ndar ECMAScript es muy enga&amp;ntilde;oso sobre el rendimiento porque todos los navegadores tienen optimizaciones especiales para &amp;iacute;ndices num&amp;eacute;ricos en matrices.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fcaa5339e0f27244a6c90344e73691d2fd735eb2" translate="yes" xml:space="preserve">
          <source>By doing this, constants can be acessed in the usual way (YesNo.YES, Color.GREEN) and they get a sequential int value (NO = 0, YES = 1; RED = 0, GREEN = 1, BLUE = 2).</source>
          <target state="translated">Haciendo esto,se puede acceder a las constantes de la manera habitual (SíNo.SÍ,Color.VERDE)y obtienen un valor int secuencial (NO=0,SÍ=1;ROJO=0,VERDE=1,AZUL=2).</target>
        </trans-unit>
        <trans-unit id="bfab03fe06136b948abd2eaa7e0330445d1df5bd" translate="yes" xml:space="preserve">
          <source>Closure Compiler rewards you for coding smarter and organizing your code well because, whereas many minifiers punish organized code with a bigger minified file size, Closure Compiler is able to sift through all your cleanliness and sanity to output an even smaller file size if you use tricks like variable name enumerations. That, in this one mind, is the holy grail of coding: a tool that both assists your code with a smaller minified size and assists your mind by training better programming habits.</source>
          <target state="translated">Compilador de Cierre te recompensa por codificar más inteligentemente y organizar bien tu código porque,mientras que muchos minificadores castigan el código organizado con un tamaño de archivo minificado más grande,Compilador de Cierre es capaz de tamizar toda tu limpieza y cordura para producir un tamaño de archivo aún más pequeño si usas trucos como enumeraciones de nombres de variables.Eso,en esta mente,es el santo grial de la codificación:una herramienta que ayuda a su código con un tamaño minificado más pequeño y ayuda a su mente entrenando mejores hábitos de programación.</target>
        </trans-unit>
        <trans-unit id="658ac22936bc1964a2ddf51197e535da110d1077" translate="yes" xml:space="preserve">
          <source>Closure compiler is able to perform some pretty incredible optimizations via inferences that are way beyond the capacities of any other Javascript minifier. Closure Compiler is able to inline primitive variables set to a fixed value. Closure Compiler is also able to make inferences based upon these inlined values and eliminate unused blocks in if-statements and loops.</source>
          <target state="translated">El compilador de cierre es capaz de realizar algunas optimizaciones bastante increíbles a través de inferencias que están muy por encima de las capacidades de cualquier otro minificador de Javascript.El Compilador de Cierres es capaz de alinear variables primitivas establecidas a un valor fijo.Closure Compiler también es capaz de hacer inferencias basadas en estos valores alineados y eliminar los bloques no utilizados en declaraciones if y bucles.</target>
        </trans-unit>
        <trans-unit id="0da387c6fad9b3b430037037cccd107e71d000a3" translate="yes" xml:space="preserve">
          <source>Compare the code above to the code below.</source>
          <target state="translated">Compare el código de arriba con el de abajo.</target>
        </trans-unit>
        <trans-unit id="79b2cd845d9a1d042bfe0169baafc7b518a17c8e" translate="yes" xml:space="preserve">
          <source>Comparision:</source>
          <target state="translated">Comparision:</target>
        </trans-unit>
        <trans-unit id="1cdf4147bf4d9a958ecfa5b40ad2b3de1779a200" translate="yes" xml:space="preserve">
          <source>Complete example
&lt;a href=&quot;https://gist.github.com/lnt/bb13a2fd63cdb8bce85fd62965a20026&quot;&gt;https://gist.github.com/lnt/bb13a2fd63cdb8bce85fd62965a20026&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ejemplo completo &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://gist.github.com/lnt/bb13a2fd63cdb8bce85fd62965a20026&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://gist.github.com/lnt/bb13a2fd63cdb8bce85fd62965a20026&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e157c5da4410b7e9de85f5c93026b9176e69064" translate="yes" xml:space="preserve">
          <source>Create</source>
          <target state="translated">Create</target>
        </trans-unit>
        <trans-unit id="cd5885c6b241174f0bbeeedf2260e1dabd3f285f" translate="yes" xml:space="preserve">
          <source>Create an object literal:</source>
          <target state="translated">Crear un objeto literalmente:</target>
        </trans-unit>
        <trans-unit id="a6bf4455b8a756f055431c0a18c5686838aec889" translate="yes" xml:space="preserve">
          <source>Decide whether enumerations in the group are mutually-exclusive or independent. If mutually-exclusive, start each enumerated variable name with &lt;code&gt;ENUM_&lt;/code&gt;. If independent or side-by-side, use &lt;code&gt;INDEX_&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Decida si las enumeraciones en el grupo son mutuamente excluyentes o independientes. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si se excluyen mutuamente, comience cada nombre de variable enumerado con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUM_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si es independiente o de lado a lado, use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;INDEX_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65c9035fafbecc6952f659f88811fa7c0051c8c7" translate="yes" xml:space="preserve">
          <source>Determine a name for the enumeration group. Think of a noun that can describe the purpose of the enumeration or at least the entries in the enumeration. For example, a group of enumerations representing colors choosable by the user might be better named COLORCHOICES than COLORS.</source>
          <target state="translated">Determine un nombre para el grupo de enumeración.Piense en un sustantivo que pueda describir el propósito de la enumeración o al menos las entradas de la misma.Por ejemplo,un grupo de enumeraciones que representen colores elegibles por el usuario podría llamarse mejor COLORCHOICES que COLORES.</target>
        </trans-unit>
        <trans-unit id="5ddffd1b10d68b50c76ae9746d5a8747c7ef8e4a" translate="yes" xml:space="preserve">
          <source>Don't get me wrong, JavaScript's behavior of returning &lt;code&gt;undefined&lt;/code&gt; when accessing undefined properties is actually a very powerful feature of language, but it's not a feature you want when you are trying to mock traditional Enum structures.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No me malinterpreten, el comportamiento de JavaScript de regresar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; al acceder a propiedades indefinidas es en realidad una caracter&amp;iacute;stica muy poderosa del lenguaje, pero no es una caracter&amp;iacute;stica que desea cuando intenta burlarse de las estructuras tradicionales de Enum.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eb6b4a1271399bfe9ec378054e8ab2bcde9708d1" translate="yes" xml:space="preserve">
          <source>Easy to access your enums</source>
          <target state="translated">Fácil acceso a sus enums</target>
        </trans-unit>
        <trans-unit id="0bcf3d9dab12c1fd6d7433968d2a187754c3930c" translate="yes" xml:space="preserve">
          <source>Easy to declare enums</source>
          <target state="translated">Fácil de declarar enums</target>
        </trans-unit>
        <trans-unit id="a5964f36e23edc327c0ba6df922a6d0dec847752" translate="yes" xml:space="preserve">
          <source>Edit - small improvement - now with varargs: (unfortunately it doesn't work properly on IE :S... should stick with previous version then)</source>
          <target state="translated">Editar-pequeña mejora-ahora con varargs:(desafortunadamente no funciona correctamente en IE :S...debería seguir con la versión anterior entonces)</target>
        </trans-unit>
        <trans-unit id="b4c668399fe5b43c7422bf83f563c110ecbf3290" translate="yes" xml:space="preserve">
          <source>Even though &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes&quot;&gt;only static methods&lt;/a&gt; (and not static properties) are supported in ES2015 (see &lt;a href=&quot;http://exploringjs.com/es6/ch_classes.html#_inside-the-body-of-a-class-definition&quot;&gt;here&lt;/a&gt; as well, &amp;sect;15.2.2.2), curiously you can use the below with Babel with the &lt;code&gt;es2015&lt;/code&gt; preset:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aunque &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;solo los m&amp;eacute;todos est&amp;aacute;ticos&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (y no las propiedades est&amp;aacute;ticas) son compatibles con ES2015 (consulte &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://exploringjs.com/es6/ch_classes.html#_inside-the-body-of-a-class-definition&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aqu&amp;iacute;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tambi&amp;eacute;n, &amp;sect;15.2.2.2), curiosamente puede usar lo siguiente con Babel con el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;es2015&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; predeterminado &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;es2015&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Ampliar fragmento</target>
        </trans-unit>
        <trans-unit id="71cfb5cd7ec68c82f31da02402da517468c2695f" translate="yes" xml:space="preserve">
          <source>File: enums.js</source>
          <target state="translated">Archivo:enums.js</target>
        </trans-unit>
        <trans-unit id="eea2cac1f0d8facb5a53c61a746d1718d6958fc6" translate="yes" xml:space="preserve">
          <source>For each entry, create a new local variable whose name starts with &lt;code&gt;ENUM_&lt;/code&gt; or &lt;code&gt;INDEX_&lt;/code&gt;, then the name of the group, then an underscore, then a unique friendly name for the property</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para cada entrada, cree una nueva variable local cuyo nombre comience con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUM_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;INDEX_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , luego el nombre del grupo, luego un gui&amp;oacute;n bajo y luego un nombre &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;descriptivo&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;uacute;nico para la propiedad&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4718a0a58d03fe0cf29ebb99d890ba0db287a5c3" translate="yes" xml:space="preserve">
          <source>For more information please checkout &lt;a href=&quot;https://github.com/greenlaw110/enumjs&quot;&gt;https://github.com/greenlaw110/enumjs&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/greenlaw110/enumjs&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/greenlaw110/enumjs&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fbe0511710444968bbbd8da79b85982888a5ac6a" translate="yes" xml:space="preserve">
          <source>Further, this form of enumeration is also much faster after minification. In normal named properties, the browser has to use hashmaps to look up where the property is on the object. Although JIT compilers intelligently cache this location on the object, there is still tremendous overhead due to special cases such as deleting a lower property from the object.</source>
          <target state="translated">Además,esta forma de enumeración también es mucho más rápida después de la minificación.En las propiedades con nombre normal,el navegador tiene que usar mapas de hachís para buscar dónde está la propiedad en el objeto.Aunque los compiladores de JIT almacenan inteligentemente en caché esta ubicación en el objeto,todavía hay una tremenda sobrecarga debido a casos especiales como la eliminación de una propiedad inferior del objeto.</target>
        </trans-unit>
        <trans-unit id="3516facffcef873c433349a47e804cbf00f9a89a" translate="yes" xml:space="preserve">
          <source>Furthermore, this one's personal &lt;em&gt;cherry on the top&lt;/em&gt; is using this form of enumerations along with the &lt;a href=&quot;https://codemirror.net/&quot;&gt;CodeMirror&lt;/a&gt; text editor in Javascript mode. CodeMirror's Javascript syntax highlighting mode highlights local variables in the current scope. That way, you know instantly when you type in a variable name correctly because if the variable name was previously declared with the &lt;code&gt;var&lt;/code&gt; keyword, then the variable name turns a special color (cyan by default). Even if you do not use CodeMirror, then at least the browser throws a helpful &lt;code&gt;&lt;em&gt;[variable name]&lt;/em&gt; is not defined&lt;/code&gt; exception when executing code with mistyped enumeration names. Also, JavaScript tools such as JSLint and Closure Compiler are very loud about telling you when you mistype in an enumeration variable name. CodeMirror, the browser, and various Javascript tools put together make debugging this form of enumeration very simple and really easy.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s, la &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cereza&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; personal de este &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en la parte superior&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; est&amp;aacute; utilizando esta forma de enumeraciones junto con el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;editor de texto &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://codemirror.net/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CodeMirror&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en modo Javascript. El modo de resaltado de sintaxis Javascript de CodeMirror resalta las variables locales en el alcance actual. De esa manera, usted sabe instant&amp;aacute;neamente cuando escribe un nombre de variable correctamente porque si el nombre de la variable se declar&amp;oacute; previamente con la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;palabra clave &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , entonces el nombre de la variable cambiar&amp;aacute; a un color especial (cian por defecto). Incluso si no utiliza CodeMirror, al menos el navegador arroja un &amp;uacute;til &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&lt;em&gt;[variable name]&lt;/em&gt; is not defined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;excepci&amp;oacute;n al ejecutar c&amp;oacute;digo con nombres de enumeraci&amp;oacute;n mal escritos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s, las herramientas de JavaScript, como JSLint y Closure Compiler, son muy ruidosas al decirle cuando escribe incorrectamente en un nombre de variable de enumeraci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CodeMirror, el navegador y varias herramientas Javascript juntas hacen que la depuraci&amp;oacute;n de esta forma de enumeraci&amp;oacute;n sea muy simple y realmente f&amp;aacute;cil.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e48fe29e48e6629f19183ecb41c2c83deaadc8f" translate="yes" xml:space="preserve">
          <source>Get Key</source>
          <target state="translated">Obtener la llave</target>
        </trans-unit>
        <trans-unit id="a698b85749484a9efa36cfb7eae8368dd37eac64" translate="yes" xml:space="preserve">
          <source>Get Value</source>
          <target state="translated">Obtener valor</target>
        </trans-unit>
        <trans-unit id="58ed9c7eef1acb695afce90a5ea6456432c27013" translate="yes" xml:space="preserve">
          <source>Give each successive enumerated variable a value one more than the last, starting at 0. There are comments on this page that say &lt;code&gt;0&lt;/code&gt; should not be used as an enumerated value because &lt;code&gt;0 == null&lt;/code&gt;, &lt;code&gt;0 == false&lt;/code&gt;, &lt;code&gt;0 == &quot;&quot;&lt;/code&gt;, and other JS craziness. I submit to you that, to avoid this problem and boost performance at the same time, always use &lt;code&gt;===&lt;/code&gt; and never let &lt;code&gt;==&lt;/code&gt; appear in your code except with &lt;code&gt;typeof&lt;/code&gt; (e.x. &lt;code&gt;typeof X == &quot;string&quot;&lt;/code&gt;). In all my years of using &lt;code&gt;===&lt;/code&gt;, I have never once had a problem with using 0 as an enumeration value. If you are still squeamish, then &lt;code&gt;1&lt;/code&gt; could be used as the starting value in &lt;code&gt;ENUM_&lt;/code&gt; enumerations (but not in &lt;code&gt;INDEX_&lt;/code&gt; enumerations) without performance penalty in many cases.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Dele a cada variable enumerada sucesiva un valor uno m&amp;aacute;s que el anterior, comenzando en 0. Hay comentarios en esta p&amp;aacute;gina que dicen que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no debe usarse como un valor enumerado porque &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0 == null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0 == false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0 == &quot;&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y otras locuras de JS. Le presento que, para evitar este problema y aumentar el rendimiento al mismo tiempo, use siempre &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y nunca deje que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; aparezca en su c&amp;oacute;digo, excepto con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (ex &lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof X == &quot;string&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). En todos mis a&amp;ntilde;os de uso de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , nunca he tenido un problema con el uso de 0 como valor de enumeraci&amp;oacute;n. Si todav&amp;iacute;a eres aprensivo, entonces &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;podr&amp;iacute;a usarse como valor inicial en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUM_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; enumeraciones (pero no en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;INDEX_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; enumeraciones) sin penalizaci&amp;oacute;n de rendimiento en muchos casos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a5f9fcfc935a9a2e241a0e3889067de0c44bb4d8" translate="yes" xml:space="preserve">
          <source>Having said that, since it doesn't matter what the values are (you've used 0, 1, 2), I'd use a meaningful string in case you ever wanted to output the current value.</source>
          <target state="translated">Dicho esto,como no importa cuáles sean los valores (has usado 0,1,2),usaría una cadena significativa en caso de que quisieras dar el valor actual.</target>
        </trans-unit>
        <trans-unit id="f7337daf8d2b33034cb8cbc7393e582599f78e2b" translate="yes" xml:space="preserve">
          <source>Here is how I remember when to use &lt;code&gt;INDEX_&lt;/code&gt; and when to use &lt;code&gt;ENUM_&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;As&amp;iacute; es como recuerdo cu&amp;aacute;ndo usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;INDEX_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y cu&amp;aacute;ndo usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUM_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d079b5886969fabdb741390f7bc700a141c219d" translate="yes" xml:space="preserve">
          <source>Here's a contrived example that uses the Proxy object to mimic Enums. The enumerators in this example are standard HTTP Methods (i.e. &quot;GET&quot;, &quot;POST&quot;, etc.):</source>
          <target state="translated">Aquí hay un ejemplo inventado que usa el objeto Proxy para imitar a los Enums.Los enumeradores en este ejemplo son métodos HTTP estándar (es decir,&quot;GET&quot;,&quot;POST&quot;,etc.):</target>
        </trans-unit>
        <trans-unit id="fe947f6fc94d6ef92cead940cbdd1e7d448c4cfe" translate="yes" xml:space="preserve">
          <source>Here's a couple different ways to implement &lt;a href=&quot;http://www.typescriptlang.org/Handbook#basic-types-enum&quot;&gt;TypeScript enums&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; hay un par de formas diferentes de implementar &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.typescriptlang.org/Handbook#basic-types-enum&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;enumeraciones TypeScript&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9581e3190b121af445be76420bdf0dd3432617a" translate="yes" xml:space="preserve">
          <source>Here's a jsfiddle: &lt;a href=&quot;http://jsfiddle.net/ZV4A6/&quot;&gt;http://jsfiddle.net/ZV4A6/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; hay un jsfiddle: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/ZV4A6/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://jsfiddle.net/ZV4A6/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c099876d18c108d84183268fe5150f3115d7b33b" translate="yes" xml:space="preserve">
          <source>Here's a very good library for creating enums.</source>
          <target state="translated">Aquí hay una muy buena biblioteca para crear enums.</target>
        </trans-unit>
        <trans-unit id="cec9bd7338c1bb74d7f9c1cbfe3b7aab8f168958" translate="yes" xml:space="preserve">
          <source>Here's what we all want:</source>
          <target state="translated">Esto es lo que todos queremos:</target>
        </trans-unit>
        <trans-unit id="6c93be7107d40850467cfddc2d30c738e35567a7" translate="yes" xml:space="preserve">
          <source>However, &lt;code&gt;ENUM_&lt;/code&gt; can, in certain circumstances, be appropriate as an index such as when counting the occurrences of each item.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUM_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; puede, en ciertas circunstancias, ser apropiado como un &amp;iacute;ndice, como al contar las ocurrencias de cada elemento.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a679b2543904e2e9b8834d198f0b746f019cbd02" translate="yes" xml:space="preserve">
          <source>However, this doesn't prevent you from assigning an undesired value to a variable, which is often the main goal of enums:</source>
          <target state="translated">Sin embargo,esto no impide que se asigne un valor no deseado a una variable,que suele ser el objetivo principal de los enums:</target>
        </trans-unit>
        <trans-unit id="61f70f46640af4c29d6674c5772e958addef276b" translate="yes" xml:space="preserve">
          <source>I came up with &lt;a href=&quot;https://github.com/vivin/enumjs&quot;&gt;this&lt;/a&gt; approach which is modeled after enums in Java. These are type-safe, and so you can perform &lt;code&gt;instanceof&lt;/code&gt; checks as well.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se me ocurri&amp;oacute; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/vivin/enumjs&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;este&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; enfoque, que se basa en las enumeraciones en Java. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Estos son de tipo seguro, por lo que tambi&amp;eacute;n puede realizar &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;verificaciones de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;instanceof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77acc88d1c3b308e6f804802b03b1a513b950c99" translate="yes" xml:space="preserve">
          <source>I found this to be working as expected even across modules (e.g. importing the &lt;code&gt;CellState&lt;/code&gt; enum from another module) and also when I import a module using Webpack.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Descubr&amp;iacute; que esto funciona como se esperaba incluso en todos los m&amp;oacute;dulos (por ejemplo, importando la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;enumeraci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;CellState&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; desde otro m&amp;oacute;dulo) y tambi&amp;eacute;n cuando importo un m&amp;oacute;dulo usando Webpack.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="856e83448b6a486df1970740d4888ca6428840da" translate="yes" xml:space="preserve">
          <source>I obsolete &lt;code&gt;gen_enum&lt;/code&gt; package and merge the function into &lt;a href=&quot;https://www.npmjs.com/package/constjs&quot;&gt;constjs&lt;/a&gt; package, which provides more features including immutable objects, JSON string deserialization, string constants and bitmap generation etc. Checkout &lt;a href=&quot;https://www.npmjs.com/package/constjs&quot;&gt;https://www.npmjs.com/package/constjs&lt;/a&gt; for more information</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;gen_enum&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; paquete &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;gen_enum&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; obsoleto y &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;fusiono&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; la funci&amp;oacute;n en el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;paquete &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.npmjs.com/package/constjs&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;constjs&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que proporciona m&amp;aacute;s funciones, incluidos objetos inmutables, deserializaci&amp;oacute;n de cadenas JSON, constantes de cadenas y generaci&amp;oacute;n de mapas de bits, etc. Consulte &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.npmjs.com/package/constjs&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://www.npmjs.com/package/constjs&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c50140ffc5acf6a4b4510fd859b13dc29634e89b" translate="yes" xml:space="preserve">
          <source>I remember when I first started seeing the word proxy everywhere, it definitely didn't make sense to me for a long time. If that's you right now, I think an easy way to generalize proxies is to think of them as software, institutions, or even people that act as intermediaries or middlemen between two servers, companies, or people.</source>
          <target state="translated">Recuerdo que cuando empecé a ver la palabra &quot;proxy&quot; por todas partes,definitivamente no tuvo sentido para mí durante mucho tiempo.Si ese eres tú ahora,creo que una forma fácil de generalizar los proxies es pensar en ellos como software,instituciones,o incluso personas que actúan como intermediarios o intermediarios entre dos servidores,empresas o personas.</target>
        </trans-unit>
        <trans-unit id="f13f02eac1aa631ff08ae96dad48c5406e04fcce" translate="yes" xml:space="preserve">
          <source>I think its safe to say that this methodology of enumeration is indeed the best way to go not just for minified code size, but also for performance, debugging, and collaboration.</source>
          <target state="translated">Creo que se puede decir con seguridad que esta metodología de enumeración es,de hecho,la mejor manera de proceder,no sólo para el tamaño del código minificado,sino también para el rendimiento,la depuración y la colaboración.</target>
        </trans-unit>
        <trans-unit id="2603d330cbbedc0e73dd709d9f4eaa2fd9f68d53" translate="yes" xml:space="preserve">
          <source>I usually use the last 2 methods for mapping enums from message objects.</source>
          <target state="translated">Usualmente uso los dos últimos métodos para mapear los enums de los objetos de los mensajes.</target>
        </trans-unit>
        <trans-unit id="d10e264bb9e9cca70328986c2acdf4ae6f981912" translate="yes" xml:space="preserve">
          <source>I've been playing around with this, as I love my enums. =)</source>
          <target state="translated">He estado jugando con esto,ya que me encantan mis enums.=)</target>
        </trans-unit>
        <trans-unit id="a7e244f3f664f0ee7358a93ecaeb5ed59835a9fe" translate="yes" xml:space="preserve">
          <source>I've just published an NPM package &lt;a href=&quot;https://www.npmjs.com/package/gen_enum&quot;&gt;gen_enum&lt;/a&gt; allows you to create Enum data structure in Javascript quickly:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Acabo de publicar un paquete NPM &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.npmjs.com/package/gen_enum&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;gen_enum le&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; permite crear una estructura de datos de Enum en Javascript r&amp;aacute;pidamente:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4276a73195ef854d9c66aeb59514294b701ba3e1" translate="yes" xml:space="preserve">
          <source>I've made an Enum class that can fetch values AND names at O(1). It can also generate an Object Array containing all Names and Values.</source>
          <target state="translated">He hecho una clase de Enum que puede obtener valores Y nombres en O(1).También puede generar una Matriz de Objetos que contiene todos los Nombres y Valores.</target>
        </trans-unit>
        <trans-unit id="d0ce8865fc08817ef45b997ee71feac6e570ee76" translate="yes" xml:space="preserve">
          <source>I've modified the solution of Andre 'Fi':</source>
          <target state="translated">He modificado la solución de Andre 'Fi':</target>
        </trans-unit>
        <trans-unit id="34c43aac23d94a0eeecaa0c817daf10d7a0835c6" translate="yes" xml:space="preserve">
          <source>IE8 does Not support freeze() method.</source>
          <target state="translated">IE8 no admite el método freeze().</target>
        </trans-unit>
        <trans-unit id="3d6c1e65f65ce1efb62e2ec01527dc371faf2dbf" translate="yes" xml:space="preserve">
          <source>If you're using &lt;a href=&quot;http://documentcloud.github.com/backbone/&quot;&gt;Backbone&lt;/a&gt;, you can get full-blown enum functionality (find by id, name, custom members) for free using &lt;a href=&quot;http://documentcloud.github.com/backbone/#Collection&quot;&gt;Backbone.Collection&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si est&amp;aacute; utilizando &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://documentcloud.github.com/backbone/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Backbone&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , puede obtener una funcionalidad de enumeraci&amp;oacute;n completa (buscar por id, nombre, miembros personalizados) de forma gratuita utilizando &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://documentcloud.github.com/backbone/#Collection&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Backbone.Collection&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="46545b2a56d464e56cf74616bf03220db48514a0" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://babeljs.io/docs/plugins/transform-class-properties/&quot;&gt;ES7&lt;/a&gt; , you can do an elegant ENUM relying on static attributes:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://babeljs.io/docs/plugins/transform-class-properties/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES7&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , puede hacer un ENUM elegante bas&amp;aacute;ndose en atributos est&amp;aacute;ticos:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a7da64be2efa787696d3339ef3c03fa1805f218" translate="yes" xml:space="preserve">
          <source>In JavaScript, as it is a dynamic language, it is even possible to add enum values to the set later:</source>
          <target state="translated">En JavaScript,al ser un lenguaje dinámico,es incluso posible añadir valores numéricos al conjunto más tarde:</target>
        </trans-unit>
        <trans-unit id="86b90ed2d4e9e71fe9dba3a40b100d851376207b" translate="yes" xml:space="preserve">
          <source>In most modern browsers, there is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol&quot;&gt;symbol&lt;/a&gt; primitive data type which can be used to create an enumeration. It will ensure type safety of the enum as each symbol value is guaranteed by JavaScript to be unique, i.e. &lt;code&gt;Symbol() != Symbol()&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En la mayor&amp;iacute;a de los navegadores modernos, hay un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tipo de datos primitivo de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;s&amp;iacute;mbolo&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que se puede usar para crear una enumeraci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Garantizar&amp;aacute; la seguridad de tipo de la enumeraci&amp;oacute;n ya que JavaScript garantiza que cada valor de s&amp;iacute;mbolo sea &amp;uacute;nico, es decir, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Symbol() != Symbol()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0536e218af1de7dd63df9fd1954433d7fb839a53" translate="yes" xml:space="preserve">
          <source>In my current game project, I have used below, since few customers still use IE8:</source>
          <target state="translated">En mi actual proyecto de juego,he usado abajo,ya que pocos clientes todavía usan IE8:</target>
        </trans-unit>
        <trans-unit id="6ca6bad9326a3dd9f548cf7b18f689e488c30c15" translate="yes" xml:space="preserve">
          <source>In the above snippet, you were alerted with an error because &lt;code&gt;ENUM_COLORENUM_DNE&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En el fragmento anterior, se le alert&amp;oacute; con un error porque &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUM_COLORENUM_DNE&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no existe.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5e20160973b46e9572ce97b13f7f5db3d6c080f4" translate="yes" xml:space="preserve">
          <source>It's easy to use, I think. &lt;a href=&quot;https://stackoverflow.com/a/32245370/4365315&quot;&gt;https://stackoverflow.com/a/32245370/4365315&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es f&amp;aacute;cil de usar, creo. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/32245370/4365315&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://stackoverflow.com/a/32245370/4365315&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3076217528346e059c63265a91af4988f03644dc" translate="yes" xml:space="preserve">
          <source>Let us cut straight to the problem: file size. Every other answer listed here bloats your code to the extreme. I present to you that for the best possible performance, readability of code, large scale project management, syntax hinting in many code editors, and reduction in code size by minification, this is the correct way to do enumerations: underscore-notation variables.</source>
          <target state="translated">Vayamos directamente al problema:el tamaño de la carpeta.Todas las demás respuestas listadas aquí inflan tu código hasta el extremo.Les presento que para el mejor rendimiento posible,legibilidad del código,gestión de proyectos a gran escala,insinuación de sintaxis en muchos editores de código,y reducción del tamaño del código por minoración,esta es la forma correcta de hacer enumeraciones:variables de subrayado y anotación.</target>
        </trans-unit>
        <trans-unit id="019ef5023f43c868428b166108509d4510643dd6" translate="yes" xml:space="preserve">
          <source>Now you can create your enums:</source>
          <target state="translated">Ahora puedes crear tus enums:</target>
        </trans-unit>
        <trans-unit id="ad1e606581825d4652686b0dca7be71bf7b89cca" translate="yes" xml:space="preserve">
          <source>Now, let us see how big the equivalent file would be without any of these enumerations.</source>
          <target state="translated">Ahora,veamos cuán grande sería el archivo equivalente sin ninguna de estas enumeraciones.</target>
        </trans-unit>
        <trans-unit id="4258f570e2f36a2cf3e43b2313a70607009a17f5" translate="yes" xml:space="preserve">
          <source>Now.... now it opens up some &lt;em&gt;very&lt;/em&gt; interesting possibilities.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora ... ahora abre algunas &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;posibilidades &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;muy&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; interesantes.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a61d4e29999f717e20a2ffa02fda03db9cc09177" translate="yes" xml:space="preserve">
          <source>Now:</source>
          <target state="translated">Now:</target>
        </trans-unit>
        <trans-unit id="6777cdd3ceca7e36b8093e5c067858f590f80b47" translate="yes" xml:space="preserve">
          <source>Observe that, in the code above, it's really easy to add in a new kind of pet: you would just have to append a new entry after &lt;code&gt;ENUM_PET_RAT&lt;/code&gt; and update &lt;code&gt;ENUMLEN_PET&lt;/code&gt; accordingly. It might be more difficult and buggy to add a new entry in other systems of enumeration.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Observe que, en el c&amp;oacute;digo anterior, es realmente f&amp;aacute;cil agregar un nuevo tipo de mascota: solo tendr&amp;iacute;a que agregar una nueva entrada despu&amp;eacute;s de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUM_PET_RAT&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y actualizar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ENUMLEN_PET&lt;/code&gt; en&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; consecuencia. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede ser m&amp;aacute;s dif&amp;iacute;cil y con errores agregar una nueva entrada en otros sistemas de enumeraci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27611a72d815f00faddab954a8bad60150d01333" translate="yes" xml:space="preserve">
          <source>Of course this means that some assumptions can no longer be made (that value represents the correct order for the size for example).</source>
          <target state="translated">Por supuesto,esto significa que algunas suposiciones ya no pueden hacerse (ese valor representa el orden correcto para el tamaño,por ejemplo).</target>
        </trans-unit>
        <trans-unit id="2e2652d13092e5b74c5a956c801be67aa9e05920" translate="yes" xml:space="preserve">
          <source>Of course, now it's your duty to make sure there are no conflicts in the data (RE, EX, etc. must be unique, also 1, 2, etc. should be unique). Note that you need to maintain these forever for backward compatibility.</source>
          <target state="translated">Por supuesto,ahora es tu deber asegurarte de que no hay conflictos en los datos (RE,EX,etc.deben ser únicos,también 1,2,etc.deben ser únicos).Ten en cuenta que tienes que mantenerlos para siempre para la compatibilidad retroactiva.</target>
        </trans-unit>
        <trans-unit id="2ee406650e11da61af21bfbc6cbf739d7e95cecf" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;https://github.com/zhaber/symbol-enum&quot;&gt;GitHub&lt;/a&gt; you can find a wrapper that simplifies the code required to initialize the enum:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/zhaber/symbol-enum&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;GitHub&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; puede encontrar un contenedor que simplifica el c&amp;oacute;digo requerido para inicializar la enumeraci&amp;oacute;n:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b1645c067cea6891d49e0e88accd77add77a2459" translate="yes" xml:space="preserve">
          <source>Once again, if you are just a casual user, or in the browser etc, just take the factory part of the code, potentially removing underscore library too if you don't wish to use it in your code.</source>
          <target state="translated">Una vez más,si eres un usuario ocasional,o en el navegador,etc.,sólo toma la parte de fábrica del código,eliminando potencialmente la biblioteca de subrayado también si no deseas utilizarlo en tu código.</target>
        </trans-unit>
        <trans-unit id="4e8a8d88577dafbf2a70d34861ae2b090871737c" translate="yes" xml:space="preserve">
          <source>One might object to the code with enumerations seeming to be much longer than the code with ordinary objects, but looks can be deceiving. It is important to remember that source code size is not proportional to output size when using the epic Closure Compiler. Observe.</source>
          <target state="translated">Uno podría objetar al código con enumeraciones que parecen ser mucho más largas que el código con objetos ordinarios,pero las apariencias pueden ser engañosas.Es importante recordar que el tamaño del código fuente no es proporcional al tamaño de salida cuando se utiliza el épico Compilador de Cierres.Observa.</target>
        </trans-unit>
        <trans-unit id="3da9a28b4a8d49e5721e26f7dd37b5c894a32c29" translate="yes" xml:space="preserve">
          <source>One nice thing about this little tool is in modern environment (including nodejs and IE 9+ browsers) the returned Enum object is immutable.</source>
          <target state="translated">Una cosa buena de esta pequeña herramienta es que en un entorno moderno (incluyendo nodejs y navegadores IE 9+)el objeto Enum devuelto es inmutable.</target>
        </trans-unit>
        <trans-unit id="8af3c352714ee2b7aa8cca0acaf7ef03840953b9" translate="yes" xml:space="preserve">
          <source>One very beneficial feature of Enums that you get from traditional languages is that they blow up (throw a compile-time error) if you try to access an enumerator which does not exist.</source>
          <target state="translated">Una característica muy beneficiosa de los Enums que se obtienen de los lenguajes tradicionales es que explotan (lanzan un error en tiempo de compilación)si tratas de acceder a un enumerador que no existe.</target>
        </trans-unit>
        <trans-unit id="cfbdd2a7bf53e592f5c5d242bf61f04e04bfc4ba" translate="yes" xml:space="preserve">
          <source>One way to ensure a stronger degree of type safety (with enums or otherwise) is to use a tool like &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; or &lt;a href=&quot;https://flow.org/&quot;&gt;Flow&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una forma de garantizar un mayor grado de seguridad de tipos (con enumeraciones o de otro tipo) es utilizar una herramienta como &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TypeScript&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://flow.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Flow&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f977b56599b7c5cc821b20dc938593868d273ea4" translate="yes" xml:space="preserve">
          <source>Or is there a more preferable idiom?</source>
          <target state="translated">¿O hay un idioma más preferible?</target>
        </trans-unit>
        <trans-unit id="9819d16018ce560bb5ff7c3d39f5e93f5c3192c6" translate="yes" xml:space="preserve">
          <source>Plunker demo</source>
          <target state="translated">Demostración de la plunker</target>
        </trans-unit>
        <trans-unit id="63ca7a089d75be2226f3c45ea7652c8881fc3241" translate="yes" xml:space="preserve">
          <source>Quotes aren't needed but I kept them for consistency.</source>
          <target state="translated">Las citas no son necesarias pero las guardé por coherencia.</target>
        </trans-unit>
        <trans-unit id="1df553327bda4a0a94cf83357067136fc88d6e76" translate="yes" xml:space="preserve">
          <source>Remember, in JavaScript an object is just like a &lt;em&gt;map&lt;/em&gt; or &lt;em&gt;hash table&lt;/em&gt;. A set of name-value pairs. You can loop through them or otherwise manipulate them without knowing much about them in advance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Recuerde, en JavaScript, un objeto es como un &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mapa&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o una &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tabla hash&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un conjunto de pares nombre-valor. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede recorrerlos o manipularlos sin saber mucho de ellos por adelantado.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99c080964befaf7bcee44feb0a91e7a8974af709" translate="yes" xml:space="preserve">
          <source>Remember, the fields of the enum (value, name and code in this example) are not needed for the identity check and are only there for convenience. Also the name of the size property itself does not need to be hard coded, but can also be set dynamically. So supposing you only know the name for your new enum value, you can still add it without problems:</source>
          <target state="translated">Recuerde que los campos del enum (valor,nombre y código en este ejemplo)no son necesarios para la comprobación de la identidad y sólo están ahí por conveniencia.También el nombre de la propiedad de tamaño en sí mismo no necesita ser codificado,pero también puede ser configurado dinámicamente.Por lo tanto,suponiendo que sólo conozca el nombre para su nuevo valor enum,puede agregarlo sin problemas:</target>
        </trans-unit>
        <trans-unit id="71ad5ea2656d253d975807cbedab98876e039c38" translate="yes" xml:space="preserve">
          <source>Seen a lot of posts with overly convoluted libraries etc. The solution to getting enum support in Javascript is so simple it really isn't needed. Here is the code:</source>
          <target state="translated">He visto muchos mensajes con bibliotecas demasiado enrevesadas,etc.La solución para obtener soporte para enum en Javascript es tan simple que realmente no es necesaria.Aquí está el código:</target>
        </trans-unit>
        <trans-unit id="4bcb4e163bf193fe874c35e7a1a754e4ed2bd51c" translate="yes" xml:space="preserve">
          <source>Show code snippet</source>
          <target state="translated">Mostrar fragmento de código</target>
        </trans-unit>
        <trans-unit id="ac91a4f2ac28dec5d46e9f4712639bd943a4941b" translate="yes" xml:space="preserve">
          <source>Similar to a web server proxy, JavaScript proxies are able to intercept operations on objects (with the use of &quot;traps&quot;, call them hooks if you like) and allow you to perform various checks, actions and/or manipulations before they complete (or in some cases stopping the operations altogether which is exactly what we want to do if and when we try to reference an enumerator which does not exist).</source>
          <target state="translated">Al igual que un proxy de un servidor web,los proxies de JavaScript son capaces de interceptar operaciones en los objetos (con el uso de &quot;trampas&quot;,llámelos ganchos si lo desea)y permiten realizar diversas comprobaciones,acciones y/o manipulaciones antes de que se completen (o,en algunos casos,detener las operaciones por completo,que es exactamente lo que queremos hacer si y cuando intentamos referirnos a un enumerador que no existe).</target>
        </trans-unit>
        <trans-unit id="778b66baff626f6044bed0379a9470fc0bb63d17" translate="yes" xml:space="preserve">
          <source>Since 1.8.5 it's possible to seal and freeze the object, so define the above as:</source>
          <target state="translated">Desde 1.8.5 es posible sellar y congelar el objeto,así que define lo anterior como:</target>
        </trans-unit>
        <trans-unit id="a2028fd26119637b3c384cc4f6ac6bb28a5eac53" translate="yes" xml:space="preserve">
          <source>So you should be able to create a custom object, then call &lt;code&gt;Enum()&lt;/code&gt; on it. The values assigned start at 0 and increment per item.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, deber&amp;iacute;a poder crear un objeto personalizado y luego llamar a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Enum()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sobre &amp;eacute;l. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los valores asignados comienzan en 0 y se incrementan por elemento.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e9fab28025a4966face606231666907532bc5a86" translate="yes" xml:space="preserve">
          <source>Some advantages to this approach:</source>
          <target state="translated">Algunas ventajas de este enfoque:</target>
        </trans-unit>
        <trans-unit id="19e5819d6b756ba8454cf624b492a5a5a365d47d" translate="yes" xml:space="preserve">
          <source>Some disadvantages:</source>
          <target state="translated">Algunas desventajas:</target>
        </trans-unit>
        <trans-unit id="010a9a12a0567221f03dee57498a189a110055c0" translate="yes" xml:space="preserve">
          <source>Some may say that this is less practical than other solutions: it waists tons of space, it takes a long time to write, and it is not coated with sugar syntax. Those people would be right if they do not minify their code. However, no reasonable person would leave unminified code in the end product. For this minification, Closure Compiler is the best I have yet to find. Online access can be found &lt;a href=&quot;https://closure-compiler.appspot.com/&quot;&gt;here&lt;/a&gt;. Closure compiler is able to take all of this enumeration data and inline it, making your Javascript be super duper small and run super duper fast. Thus, Minify with Closure Compiler. Observe.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Algunos pueden decir que esto es menos pr&amp;aacute;ctico que otras soluciones: quita toneladas de espacio, lleva mucho tiempo escribir y no est&amp;aacute; recubierto con sintaxis de az&amp;uacute;car. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esas personas tendr&amp;iacute;an raz&amp;oacute;n si no minimizan su c&amp;oacute;digo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, ninguna persona razonable dejar&amp;iacute;a un c&amp;oacute;digo sin minificar en el producto final. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para esta minificaci&amp;oacute;n, Closure Compiler es lo mejor que todav&amp;iacute;a tengo que encontrar. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El acceso en l&amp;iacute;nea se puede encontrar &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://closure-compiler.appspot.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aqu&amp;iacute;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El compilador de cierre puede tomar todos estos datos de enumeraci&amp;oacute;n y en l&amp;iacute;nea, haciendo que su Javascript sea s&amp;uacute;per peque&amp;ntilde;o y se ejecute s&amp;uacute;per r&amp;aacute;pido. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, Minify with Closure Compiler. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Observar.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4f2e968260777fc3c3e4c99be94a1ab7f0f3392f" translate="yes" xml:space="preserve">
          <source>Some messy memory management going on in there, as I keep the references to the enums</source>
          <target state="translated">Algo de manejo de memoria desordenado está pasando ahí,ya que mantengo las referencias a los enums</target>
        </trans-unit>
        <trans-unit id="6da13addb000b67d42a6d66391713819e634149f" translate="yes" xml:space="preserve">
          <source>Source</source>
          <target state="translated">Source</target>
        </trans-unit>
        <trans-unit id="9e31c1a6b09a455d1ca7c4ca9bbc556f78a496de" translate="yes" xml:space="preserve">
          <source>Source: &lt;a href=&quot;http://kangax.github.io/compat-table/es5/&quot;&gt;http://kangax.github.io/compat-table/es5/&lt;/a&gt;, Click on &quot;Show obsolete browsers?&quot; on top, and check IE8 &amp;amp; freeze row col intersection.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Fuente: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://kangax.github.io/compat-table/es5/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://kangax.github.io/compat-table/es5/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , haga clic en &quot;&amp;iquest;Mostrar navegadores obsoletos?&quot; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en la parte superior y verifique IE8 y congele la intersecci&amp;oacute;n de la fila.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e60cf46c90d449a89f34d3989493d1eadc7b494b" translate="yes" xml:space="preserve">
          <source>Still no type safety</source>
          <target state="translated">Todavía no hay seguridad de tipo</target>
        </trans-unit>
        <trans-unit id="5d3e2372695f63ce0c53a4f4135db20d5ae16db5" translate="yes" xml:space="preserve">
          <source>Test:</source>
          <target state="translated">Test:</target>
        </trans-unit>
        <trans-unit id="261a776295a7fe68febe54e17606829075e84388" translate="yes" xml:space="preserve">
          <source>Thanks for all the upvotes everyone, but I don't think my answer below is the best way to write enums in JavaScript anymore. See my blog post for more details: &lt;a href=&quot;https://stijndewitt.com/2014/01/26/enums-in-javascript/&quot;&gt;Enums in JavaScript&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Gracias por todos los votos a favor de todos, pero no creo que mi respuesta a continuaci&amp;oacute;n sea la mejor manera de escribir enumeraciones en JavaScript. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vea mi publicaci&amp;oacute;n de blog para m&amp;aacute;s detalles: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stijndewitt.com/2014/01/26/enums-in-javascript/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Enums en JavaScript&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="85562f06ffb96b6ce0f754599b5122e136034f1b" translate="yes" xml:space="preserve">
          <source>The Enum class has some associative caching if you are using getByValue a lot</source>
          <target state="translated">La clase Enum tiene un poco de caching asociativo si estás usando mucho getByValue</target>
        </trans-unit>
        <trans-unit id="00f1fe149219fb759c0c025124aa03876932a7fb" translate="yes" xml:space="preserve">
          <source>The Proxy object is used to define custom behavior for fundamental operations (e.g. property lookup, assignment, enumeration, function
  invocation, etc).</source>
          <target state="translated">El objeto Proxy se utiliza para definir el comportamiento personalizado de las operaciones fundamentales (por ejemplo,búsqueda de propiedades,asignación,enumeración,invocación de funciones,etc.).</target>
        </trans-unit>
        <trans-unit id="cf47bc008efb69f3d4b02b0361c4de5c8ae84245" translate="yes" xml:space="preserve">
          <source>The above code has a deficiency in that it allows one to create additional objects of type &lt;code&gt;CellState&lt;/code&gt; (even though one can't assign them to the static fields of &lt;code&gt;CellState&lt;/code&gt; since it's frozen). Still, the below more refined code offers the following advantages:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El c&amp;oacute;digo anterior tiene una deficiencia, ya que le permite a uno crear objetos adicionales de tipo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;CellState&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (aunque uno no puede asignarlos a los campos est&amp;aacute;ticos de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;CellState&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ya que est&amp;aacute; congelado). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A&amp;uacute;n as&amp;iacute;, el siguiente c&amp;oacute;digo m&amp;aacute;s refinado ofrece las siguientes ventajas:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="25bbe5ed45410c385740f04f427c99d3ec81a436" translate="yes" xml:space="preserve">
          <source>The advantage ( of using class instead of literal object) is to have a parent class &lt;code&gt;Enum&lt;/code&gt; then all your Enums will &lt;strong&gt;extends&lt;/strong&gt; that class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La ventaja (de usar la clase en lugar del objeto literal) es tener una clase padre &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Enum&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; luego todas tus Enums &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;extender&amp;aacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; esa clase.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="73d650aed04c766e08f74eec98977b696cd0cc17" translate="yes" xml:space="preserve">
          <source>The easiest way is to just iterate over an object, adding inverted key-value pairs to the object. The only drawback is that you must manually set the value for each member.</source>
          <target state="translated">La forma más fácil es simplemente iterar sobre un objeto,agregando pares clave-valor invertidos al objeto.El único inconveniente es que hay que establecer manualmente el valor para cada miembro.</target>
        </trans-unit>
        <trans-unit id="58cf386d99abb4ca880f41dbd289cce127ca6bae" translate="yes" xml:space="preserve">
          <source>The example above demonstrates that, in addition to having superior performance, the enumerated code also results in a smaller minified file size.</source>
          <target state="translated">El ejemplo anterior demuestra que,además de tener un rendimiento superior,el código enumerado también da lugar a un tamaño de archivo minificado más pequeño.</target>
        </trans-unit>
        <trans-unit id="2175a6e3927481a5e9e2c86abbac9335b526d1e1" translate="yes" xml:space="preserve">
          <source>The implementation:</source>
          <target state="translated">La aplicación:</target>
        </trans-unit>
        <trans-unit id="1b4b18df021f0943935d3a23f176bae0c3c842e6" translate="yes" xml:space="preserve">
          <source>The last one, seems most efficient for string, it reduces your total bandwidth if you have server &amp;amp; client exchanging this data.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &amp;uacute;ltimo, parece m&amp;aacute;s eficiente para la cadena, reduce su ancho de banda total si tiene un servidor y un cliente que intercambian estos datos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="957a717108e675685afc1d790b57060cc21c186e" translate="yes" xml:space="preserve">
          <source>The minified code without enumerations is above and the minified code with enumerations is below.</source>
          <target state="translated">El código minificado sin enumeraciones está arriba y el código minificado con enumeraciones está abajo.</target>
        </trans-unit>
        <trans-unit id="e48b39c0d434d1683c2cb05f3cc046ff95bf4784" translate="yes" xml:space="preserve">
          <source>The problem with this approach? You can accidentally redefine your enumerant, or accidentally have duplicate enumerant values. For example:</source>
          <target state="translated">¿El problema con este enfoque? Puedes redefinir accidentalmente tu enumerante,o accidentalmente tener valores de enumerante duplicados.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="e20ff4352992825088e227db59d322a586887e06" translate="yes" xml:space="preserve">
          <source>Then create enums by instantiating the class:</source>
          <target state="translated">Entonces crea enums instanciando a la clase:</target>
        </trans-unit>
        <trans-unit id="6bcdccbe45577d56f67f3e30662bab10048d1dce" translate="yes" xml:space="preserve">
          <source>There is my helper codes(&lt;code&gt;TypeHelper&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hay mis c&amp;oacute;digos de ayuda ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;TypeHelper&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6018a8d87b175eb682207e3a2279127c6566c850" translate="yes" xml:space="preserve">
          <source>This enables you to look up on both &lt;code&gt;MyEnum.Bar&lt;/code&gt; which returns 1, and &lt;code&gt;MyEnum[1]&lt;/code&gt; which returns &quot;Bar&quot; regardless of the order of declaration.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto le permite buscar en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyEnum.Bar&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que devuelve 1, y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyEnum[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que devuelve &quot;Bar&quot;, independientemente del orden de la declaraci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="240fddc6872b1bcd33d31758c00233d8a3fad8d1" translate="yes" xml:space="preserve">
          <source>This is an old one I know, but the way it has since been implemented via the TypeScript interface is:</source>
          <target state="translated">Esta es una vieja que conozco,pero la forma en que se ha implementado desde entonces a través de la interfaz de TypeScript es:</target>
        </trans-unit>
        <trans-unit id="c78cf4e2250683d273be3cc8fb92138e0f15b04f" translate="yes" xml:space="preserve">
          <source>This is how Typescript translates it's &lt;code&gt;enum&lt;/code&gt; into Javascript:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;As&amp;iacute; es como TypeScript traduce su &lt;/font&gt;&lt;/font&gt; &lt;code&gt;enum&lt;/code&gt; eraci&amp;oacute;n&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en Javascript:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d593b6667faa54506d6186f02628e7b599f78e17" translate="yes" xml:space="preserve">
          <source>This is the solution that I use.</source>
          <target state="translated">Esta es la solución que uso.</target>
        </trans-unit>
        <trans-unit id="7de899a839242b0f1fba72651832294419d73e4e" translate="yes" xml:space="preserve">
          <source>This is where Proxy objects shine. Proxies were standardized in the language with the introduction of ES6 (ES2015). Here's the description from MDN:</source>
          <target state="translated">Aquí es donde brillan los objetos Proxy.Los proxies se estandarizaron en el lenguaje con la introducción de ES6 (ES2015).Aquí está la descripción de MDN:</target>
        </trans-unit>
        <trans-unit id="c5bffbd2f0abf194528cabcb47d491dc00090d0f" translate="yes" xml:space="preserve">
          <source>This isn't much of an answer, but I'd say that works just fine, personally</source>
          <target state="translated">No es una gran respuesta,pero yo diría que funciona muy bien,personalmente</target>
        </trans-unit>
        <trans-unit id="392b08ece238bd0b061625f0f1ca0efe85905d6a" translate="yes" xml:space="preserve">
          <source>To fetch a name for a value (can be ambiguous when putting the same value for different names):</source>
          <target state="translated">Para obtener un nombre para un valor (puede ser ambiguo cuando se pone el mismo valor para diferentes nombres):</target>
        </trans-unit>
        <trans-unit id="3e8d22e1abaab612cd9cb7081ceef01c32ec0e91" translate="yes" xml:space="preserve">
          <source>To fetch a value (like Enums in C#):</source>
          <target state="translated">Para obtener un valor (como Enums en C#):</target>
        </trans-unit>
        <trans-unit id="1763aab6cea730d36ad16a7961af837c442cfa0b" translate="yes" xml:space="preserve">
          <source>To get an array with each name &amp;amp; value in an object:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para obtener una matriz con cada nombre y valor en un objeto:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec080fdc68337b4418fd75db8a11ff84161eb0d2" translate="yes" xml:space="preserve">
          <source>To simplify debugging, you can add a description to enum values:</source>
          <target state="translated">Para simplificar la depuración,puede añadir una descripción a los valores de enumeración:</target>
        </trans-unit>
        <trans-unit id="70f73550dc9257eb21af302fb1e0971791372584" translate="yes" xml:space="preserve">
          <source>To upgrade from &lt;code&gt;gen_enum&lt;/code&gt; to &lt;code&gt;constjs&lt;/code&gt; just change the statement</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para actualizar de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;gen_enum&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;constjs&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; simplemente cambie la declaraci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="52c6c1812015585dc1092393a1f244f60d68c60a" translate="yes" xml:space="preserve">
          <source>UPDATE</source>
          <target state="translated">UPDATE</target>
        </trans-unit>
        <trans-unit id="edb1354a5a3b6c34a6bb991b3409997efcbac806" translate="yes" xml:space="preserve">
          <source>UPDATE:</source>
          <target state="translated">UPDATE:</target>
        </trans-unit>
        <trans-unit id="f058a6979e739f066b0fe12b629625f0d929d4b3" translate="yes" xml:space="preserve">
          <source>Use Javascript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy&quot;&gt;Proxies&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Usar &lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;proxies&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Javascript&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0b4eac1fdaee3a728ff13a8728f114e7c6d22a2" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;Object.defineProperty&lt;/code&gt; I think I came up with a somewhat viable solution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Usando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.defineProperty&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; creo que se me ocurri&amp;oacute; una soluci&amp;oacute;n algo viable.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="98b775ef24ab95201c3b51eed5da404ac5d60674" translate="yes" xml:space="preserve">
          <source>Using this method.. you should (in theory) be able to call and define enum values for any object, without affecting other attributes of that object.</source>
          <target state="translated">Utilizando este método...debería (en teoría)ser capaz de llamar y definir valores enum para cualquier objeto,sin afectar a otros atributos de ese objeto.</target>
        </trans-unit>
        <trans-unit id="934469af992ab71e3895dab4f299c5bdfa576fbc" translate="yes" xml:space="preserve">
          <source>We could also do:</source>
          <target state="translated">También podríamos hacerlo:</target>
        </trans-unit>
        <trans-unit id="859b93a3e47601e04562820bf278f71df3938c2f" translate="yes" xml:space="preserve">
          <source>What about Artur Czajka's Object.freeze? Wouldn't that work to prevent you from setting monday to thursday? &amp;ndash; Fry Quad</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Qu&amp;eacute; pasa con la congelaci&amp;oacute;n de objetos de Artur Czajka? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;No funcionar&amp;iacute;a eso para evitar que establezcas de lunes a jueves? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;- Fry Quad&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87ec9f42f703ce7dc478fe6edb3d4ecddc5ed7e2" translate="yes" xml:space="preserve">
          <source>What is the preferred syntax for defining enums in JavaScript</source>
          <target state="translated">¿Cuál es la sintaxis preferida para definir los enums en JavaScript</target>
        </trans-unit>
        <trans-unit id="a6736a763ba4a9a59be294bc8f1a03dc14fc6585" translate="yes" xml:space="preserve">
          <source>What is the preferred syntax for defining enums in JavaScript? Something like:</source>
          <target state="translated">¿Cuál es la sintaxis preferida para definir los enums en JavaScript? Algo así como:</target>
        </trans-unit>
        <trans-unit id="021975cc386a47b6d7f84f09ad80d86b337bbd5e" translate="yes" xml:space="preserve">
          <source>Which holds:</source>
          <target state="translated">Que se mantiene:</target>
        </trans-unit>
        <trans-unit id="bb05bb27a4b189e505f76e468e416fb819c38bc0" translate="yes" xml:space="preserve">
          <source>While it probably doesn't fit every valid use of enums, it goes a very long way.</source>
          <target state="translated">Aunque probablemente no encaje en todos los usos válidos de los enums,llega muy lejos.</target>
        </trans-unit>
        <trans-unit id="49659e5a07d9ec9ddbc5ea2cded9dfed86235252" translate="yes" xml:space="preserve">
          <source>Will generate:</source>
          <target state="translated">Se generará:</target>
        </trans-unit>
        <trans-unit id="88a4782155b94fbcad44245c2f365c3d9a1032d6" translate="yes" xml:space="preserve">
          <source>You can also add methods, by using Enum.prototype:</source>
          <target state="translated">También puedes añadir métodos,usando Enum.prototype:</target>
        </trans-unit>
        <trans-unit id="0519509a5976fcf51adc478e600cbffbc195ecee" translate="yes" xml:space="preserve">
          <source>You can also get the html select options readily:</source>
          <target state="translated">También puede obtener fácilmente las opciones de selección de html:</target>
        </trans-unit>
        <trans-unit id="8a671c738791bb11768bead2d5a7e90155030bef" translate="yes" xml:space="preserve">
          <source>You can define enums like this:</source>
          <target state="translated">Puedes definir los enums así:</target>
        </trans-unit>
        <trans-unit id="25d7f4649ff6f2e5528a53a85b385845fcbb3e72" translate="yes" xml:space="preserve">
          <source>You can do something like this</source>
          <target state="translated">Puedes hacer algo como esto</target>
        </trans-unit>
        <trans-unit id="2cc36b3243c9980b864e5d49924f7df0f2764b76" translate="yes" xml:space="preserve">
          <source>You can fake it, but you won't get type safety. Typically this is done by creating a simple dictionary of string values mapped to integer values. For example:</source>
          <target state="translated">Puedes fingirlo,pero no tendrás seguridad de tipo.Típicamente esto se hace creando un simple diccionario de valores de cadena mapeados a valores enteros.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="5fe580e8ba8749cbf5431b53d3ad5b80340d6614" translate="yes" xml:space="preserve">
          <source>You can init'd it like this:</source>
          <target state="translated">Puedes hacerlo así:</target>
        </trans-unit>
        <trans-unit id="a98d6bda360fea5247e4644560f6b7e355fcd022" translate="yes" xml:space="preserve">
          <source>You don't need to make sure you don't assign duplicate numbers to different enum values this way. A new object gets instantiated and assigned to all enum values.</source>
          <target state="translated">No necesitas asegurarte de que no asignas números duplicados a diferentes valores numéricos de esta manera.Un nuevo objeto es instanciado y asignado a todos los valores enum.</target>
        </trans-unit>
        <trans-unit id="3417bdae129afb733dd1b44e56e82770f97dc32c" translate="yes" xml:space="preserve">
          <source>Your enums can be complex types</source>
          <target state="translated">Sus enums pueden ser de tipos complejos</target>
        </trans-unit>
        <trans-unit id="a777b8e42181e692e5a2700fc1f5fd318240e8d1" translate="yes" xml:space="preserve">
          <source>and voila! JS enums.</source>
          <target state="translated">y voila! JS enums.</target>
        </trans-unit>
        <trans-unit id="4fc19dd49d67bc4ce99ea768a6c767c51047c281" translate="yes" xml:space="preserve">
          <source>code:</source>
          <target state="translated">code:</target>
        </trans-unit>
        <trans-unit id="eac3824791b636798d704daea4c23b9a78ea1fdc" translate="yes" xml:space="preserve">
          <source>es7 way, (iterator, freeze), usage:</source>
          <target state="translated">es7 way,(iterator,freeze),usage:</target>
        </trans-unit>
        <trans-unit id="1ca81d0372f1fdebf852d75ec99ada2a919cb43d" translate="yes" xml:space="preserve">
          <source>file: enumsSpec.js</source>
          <target state="translated">archivo:enumsSpec.js</target>
        </trans-unit>
        <trans-unit id="97eff15813ecb8c1af5c566c60c61d3456ba896a" translate="yes" xml:space="preserve">
          <source>make it type safe.</source>
          <target state="translated">hacer que sea de tipo seguro.</target>
        </trans-unit>
        <trans-unit id="66eafc2002287bd8bd0bdd673ad31ab9a5918faf" translate="yes" xml:space="preserve">
          <source>no more objects of type &lt;code&gt;CellState&lt;/code&gt; may be created</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se pueden crear &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;aacute;s objetos de tipo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;CellState&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="152750d995ae37abe5e1b9d2ea4f29e16de61a28" translate="yes" xml:space="preserve">
          <source>or even this:</source>
          <target state="translated">o incluso esto:</target>
        </trans-unit>
        <trans-unit id="c6dc9bc9f77b486a13b3f63ffb2ffd1cb3fef4db" translate="yes" xml:space="preserve">
          <source>should</source>
          <target state="translated">should</target>
        </trans-unit>
        <trans-unit id="68742b2d31849418d43d60980ca19a8e7eed2590" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;values&lt;/code&gt; function that returns all instances of the enum does not have to create the return value in the above, manual (and error-prone) way.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;values&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que devuelve todas las instancias de la enumeraci&amp;oacute;n no tiene que crear el valor de retorno de la manera anterior, manual (y propensa a errores).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f8f8e9f767353d846d34ea5a451c83849c1b01b" translate="yes" xml:space="preserve">
          <source>then</source>
          <target state="translated">then</target>
        </trans-unit>
        <trans-unit id="4374aaee247fb237ce6c97d5c8d64bbe474d16de" translate="yes" xml:space="preserve">
          <source>to</source>
          <target state="translated">to</target>
        </trans-unit>
        <trans-unit id="0a25ba5991316bdda4a9b3abcee2106016df28a0" translate="yes" xml:space="preserve">
          <source>update</source>
          <target state="translated">update</target>
        </trans-unit>
        <trans-unit id="9b240f2251f8ab3fa8c6ef1b2c21f422291df20a" translate="yes" xml:space="preserve">
          <source>utility method to get the enum back from a string representation</source>
          <target state="translated">método de utilidad para obtener el enum de una representación de cadena</target>
        </trans-unit>
        <trans-unit id="fca73338233601027eca3ae2b412633ca04d0d94" translate="yes" xml:space="preserve">
          <source>you are guaranteed that no two enum instances are assigned the same code</source>
          <target state="translated">se le garantiza que no se asignará el mismo código a dos instancias enumeradas</target>
        </trans-unit>
        <trans-unit id="fc8f5180174e566c3f69fd4ab014e97f138bd431" translate="yes" xml:space="preserve">
          <source>your answers are far too complicated</source>
          <target state="translated">tus respuestas son demasiado complicadas</target>
        </trans-unit>
        <trans-unit id="350201357f9ebfbe91de49639430bf1190af7c2b" translate="yes" xml:space="preserve">
          <source>𝗖𝗼𝗻𝗰𝗹𝘂𝘀𝗶𝗼𝗻 ☑</source>
          <target state="translated">𝗖𝗼𝗻𝗰𝗹𝘂𝘀𝗶𝗼𝗻 ☑</target>
        </trans-unit>
        <trans-unit id="4f6f4c2cb6fe94424330874e205eab10a91f05a2" translate="yes" xml:space="preserve">
          <source>𝗖𝗼𝗼𝗽𝗲𝗿𝗮𝘁𝗶𝘃𝗲 🤝 𝗕𝘂𝗴 𝗙𝗶𝘅𝗶𝗻𝗴</source>
          <target state="translated">𝗖𝗼𝗼𝗽𝗲𝗿𝗮𝘁𝗶𝘃𝗲 🤝 𝗕𝘂𝗴 𝗙𝗶𝘅𝗶𝗻𝗴</target>
        </trans-unit>
        <trans-unit id="cdd0f8d965a84c5832f7a0ef8b4c1db022f061ac" translate="yes" xml:space="preserve">
          <source>𝗘𝗮𝘀𝘆 𝗗𝗲𝗯𝘂𝗴𝗴𝗶𝗻𝗴</source>
          <target state="translated">𝗘𝗮𝘀𝘆 𝗗𝗲𝗯𝘂𝗴𝗴𝗶𝗻𝗴</target>
        </trans-unit>
        <trans-unit id="d2fbc1d9ff5ecf49c9403985f1bb5755c7d96ebe" translate="yes" xml:space="preserve">
          <source>𝗘𝘅𝘁𝗲𝗻𝗱 𝗨𝗽𝗽𝗲𝗿𝗰𝗮𝘀𝗲 𝗩𝗮𝗿𝗶𝗮𝗯𝗹𝗲𝘀 𝗪𝗶𝘁𝗵 𝗔𝗱𝗱𝗶𝘁𝗶𝗼𝗻</source>
          <target state="translated">𝗘𝘅𝘁𝗲𝗻𝗱 𝗨𝗽𝗽𝗲𝗿𝗰𝗮𝘀𝗲 𝗩𝗮𝗿𝗶𝗮𝗯𝗹𝗲𝘀 𝗪𝗶𝘁𝗵 𝗔𝗱𝗱𝗶𝘁𝗶𝗼𝗻</target>
        </trans-unit>
        <trans-unit id="ed71ee5ae311a7fec847c405fab1409c5c60bd81" translate="yes" xml:space="preserve">
          <source>𝗠𝗶𝗻𝗶𝗳𝘆 𝗪𝗶𝘁𝗵 &lt;a href=&quot;https://closure-compiler.appspot.com/&quot;&gt;𝗖𝗹𝗼𝘀𝘂𝗿𝗲 𝗖𝗼𝗺𝗽𝗶𝗹𝗲𝗿&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;𝗠𝗶𝗻𝗶𝗳𝘆 𝗪𝗶𝘁𝗵 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://closure-compiler.appspot.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;𝗖𝗹𝗼𝘀𝘂𝗿𝗲 𝗖𝗼𝗺𝗽𝗶𝗹𝗲𝗿&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4464bac1c36acf19178e93439a5c2de820d3429" translate="yes" xml:space="preserve">
          <source>𝗣𝗹𝗮𝗶𝗻 𝗩𝗮𝗻𝗶𝗹𝗹𝗮𝗝𝗦 𝗩𝗮𝗿𝗶𝗮𝗯𝗹𝗲 𝗡𝗮𝗺𝗲𝘀</source>
          <target state="translated">𝗣𝗹𝗮𝗶𝗻 𝗩𝗮𝗻𝗶𝗹𝗹𝗮𝗝𝗦 𝗩𝗮𝗿𝗶𝗮𝗯𝗹𝗲 𝗡𝗮𝗺𝗲𝘀</target>
        </trans-unit>
        <trans-unit id="7e6086bccb11863d1afac36f713ff80c8ff70f47" translate="yes" xml:space="preserve">
          <source>𝗦𝗺𝗮𝗹𝗹𝗲𝗿 𝗖𝗼𝗱𝗲 𝗦𝗶𝘇𝗲</source>
          <target state="translated">𝗦𝗺𝗮𝗹𝗹𝗲𝗿 𝗖𝗼𝗱𝗲 𝗦𝗶𝘇𝗲</target>
        </trans-unit>
        <trans-unit id="fd543043142d858da8042a749e2fe4022abb49a1" translate="yes" xml:space="preserve">
          <source>𝗦𝘂𝗽𝗲𝗿𝗶𝗼𝗿 𝗣𝗲𝗿𝗳𝗼𝗿𝗺𝗮𝗻𝗰𝗲</source>
          <target state="translated">𝗦𝘂𝗽𝗲𝗿𝗶𝗼𝗿 𝗣𝗲𝗿𝗳𝗼𝗿𝗺𝗮𝗻𝗰𝗲</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
