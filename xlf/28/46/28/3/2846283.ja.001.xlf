<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/2846283">
    <body>
      <group id="2846283">
        <trans-unit id="1e3f7aabc088978c78c9ce5815c002c5fcdceef0" translate="yes" xml:space="preserve">
          <source>(quoted again: If a line break appears after any of these words [such as &lt;code&gt;return&lt;/code&gt;] ... JavaScript will always interpret that line break as a semicolon)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（再度引用：改行がこれらの単語の後に表示された場合[ &lt;/font&gt;&lt;/font&gt; &lt;code&gt;return&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;など&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;] ... JavaScriptは常にその改行をセミコロンとして解釈します）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ddd6ddc25ab8c15890bcbc479b4eede46de798b3" translate="yes" xml:space="preserve">
          <source>... If a line break appears after any of these words ... JavaScript will always interpret that line break as a semicolon.</source>
          <target state="translated">...これらの単語の後に改行がある場合 ...JavaScriptは常にその改行をセミコロンと解釈します。</target>
        </trans-unit>
        <trans-unit id="c04572f7dc645bd60b810a9315b3bd0b59006e76" translate="yes" xml:space="preserve">
          <source>... The second exception involves the ++ and &amp;minus;&amp;minus; operators ... If you want to use either of these operators as postfix operators, they must appear on the same line as the expression they apply to. Otherwise, the line break will be treated as a semicolon, and the ++ or -- will be parsed as a prefix operator applied to the code that follows. Consider this code, for example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;... 2番目の例外には++および-演算子が含まれます...これらの演算子のいずれかを後置演算子として使用する場合は、それらが適用される式と同じ行に表示される必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それ以外の場合、改行はセミコロンとして扱われ、++または-は後続のコードに適用される前置演算子として解析されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、次のコードを考えてみます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a359e0cb9abdb0285eecf11df665134a89ca510" translate="yes" xml:space="preserve">
          <source>..which doesn't seem to follow this rule, since _a would be a valid token.</source>
          <target state="translated">...これはこのルールには当てはまらないようです。</target>
        </trans-unit>
        <trans-unit id="642e2c77d3a3e633690dc57a107f38f7086085dd" translate="yes" xml:space="preserve">
          <source>7.9.1 Rules of Automatic Semicolon Insertion</source>
          <target state="translated">7.9.1 セミコロン自動挿入のルール</target>
        </trans-unit>
        <trans-unit id="0b085c5032321f3b25263fd236bcde70fded27fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; statement</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ステートメント&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="19b3eededaaffbc7b76bb39990d6e921d8f463c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;continue&lt;/code&gt; statement</source>
          <target state="translated">&lt;code&gt;continue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ステートメント&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b68c9e44d5a051d9e870495f4220256e5115c71f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;do-while&lt;/code&gt; statement</source>
          <target state="translated">&lt;code&gt;do-while&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ステートメント&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e800db613e6429fc4be982f02c9ad10783e01efa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt; statement</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ステートメント&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="28548ae4ab11990b5597bbb7970adf32c63161e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;throw&lt;/code&gt; statement</source>
          <target state="translated">&lt;code&gt;throw&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ステートメント&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="66af0870e7457c37db0a55b5f9117a96c59fffe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var&lt;/code&gt; statement</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ステートメント&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc5dba302f7aad9e280729cafca869d4a9bc6e86" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;e.g.&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;e.g.&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="2606606f39c4c104423d96c327d73a02e0e30ded" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;However, the common example cited for bugs caused by semicolon insertion is:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、セミコロンの挿入が原因で発生するバグの一般的な例は次のとおりです。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec51f53b6b7207f575dd46d251806a9e15da2c54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In general, JavaScript will treat it as continuation of code as long as it makes sense -- except 2 cases:  (1) after some keywords like &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;break&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt;, and (2) if it sees &lt;code&gt;++&lt;/code&gt; or &lt;code&gt;--&lt;/code&gt; on a new line, then it will add the &lt;code&gt;;&lt;/code&gt; at the end of the previous line.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一般に、JavaScriptは、それが意味のある限り、コードの継続として扱います。ただし、（1）&lt;/font&gt;&lt;/font&gt; &lt;code&gt;return&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;break&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;continue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などのキーワードの後&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、（2）&lt;/font&gt;&lt;/font&gt; &lt;code&gt;++&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;--&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が新しい行、それが追加され&lt;/font&gt;&lt;/font&gt; &lt;code&gt;;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;前の行の終わり。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="34a09d55b048ebd3e4328b972adb76c7d716c5b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;On the other hand, breaking up call chains works as expected:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一方、コールチェーンの分割は期待どおりに機能します。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="57cce2117181b8849b9bbda634fd8e498354ba42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The part about &quot;treat it as continuation of code as long as it makes sense&quot; makes it feel like regular expression's greedy matching.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「意味のある限り、コードの継続として扱う」という部分は、正規表現の貪欲なマッチングのように感じさせます。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="db685a8092cc4880b3ba0814a60528a48d48b3f8" translate="yes" xml:space="preserve">
          <source>Another quote: for the code</source>
          <target state="translated">別の引用:コードのために</target>
        </trans-unit>
        <trans-unit id="d8956d79f45c6d4f7c88049479df5508c3d4316a" translate="yes" xml:space="preserve">
          <source>Does anyone have a more in-depth description of the rules?</source>
          <target state="translated">誰かもっと詳しいルールの説明をしてくれる人はいますか?</target>
        </trans-unit>
        <trans-unit id="557156e5f8ff8dfb5c014abd66d4e70a3ae2de88" translate="yes" xml:space="preserve">
          <source>First of all you should know which statements are affected by the automatic semicolon insertion (also known as ASI for brevity):</source>
          <target state="translated">まず最初に、どの文が自動セミコロン挿入の影響を受けるかを知っておく必要があります(簡潔さのためにASIとも呼ばれます)。</target>
        </trans-unit>
        <trans-unit id="925c59fcbcbfcf1d49ff01c32ce166f79f0e4e44" translate="yes" xml:space="preserve">
          <source>He goes on to describe it as you would &lt;a href=&quot;http://wiki.c2.com/?CodeSmell&quot;&gt;code smell&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたは&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://wiki.c2.com/?CodeSmell&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;匂い&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コード&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するように彼はそれを続けます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8fcc327f3a511b7f1ad9a3ab477536fc89de41cd" translate="yes" xml:space="preserve">
          <source>However, there is an additional overriding condition on  the preceding rules: a semicolon is never inserted automatically if the semicolon would then be parsed as an empty statement or if that semicolon would become one of the two semicolons in the header of a</source>
          <target state="translated">セミコロンが空の文として解析されたり、セミコロンが</target>
        </trans-unit>
        <trans-unit id="a4ee7f4d5fee721ea33f0eba24b86e26a1660f18" translate="yes" xml:space="preserve">
          <source>I could not understand those 3 rules in the specs too well -- hope to have something that is more plain English -- but here is what I gathered from JavaScript: The Definitive Guide, 6th Edition, David Flanagan, O'Reilly, 2011:</source>
          <target state="translated">私はあまりにもよく仕様書でこれらの3つのルールを理解することができませんでした-より平易な英語である何かを持っていることを願っています-しかし、ここでは私がJavaScriptから収集したものは次のとおりです。The Definitive Guide,6th Edition,David Flanagan,O'Reilly,2011.</target>
        </trans-unit>
        <trans-unit id="fdbecb20dbbcc8703235a97ef4af31c3b1718b03" translate="yes" xml:space="preserve">
          <source>I've read that if an invalid token is found, but the section of code is valid until that invalid token, a semicolon is inserted before the token if it is preceded by a line break.</source>
          <target state="translated">無効なトークンが見つかっても、その無効なトークンまではコードのセクションが有効な場合は、改行がある場合はトークンの前にセミコロンが挿入されると読んだことがあります。</target>
        </trans-unit>
        <trans-unit id="562182030467bca460296d9c057e6a5fac6b0208" translate="yes" xml:space="preserve">
          <source>It is parsed as &lt;code&gt;x; ++y;&lt;/code&gt;, not as &lt;code&gt;x++; y&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;x; ++y;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;として解析され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;++ y; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;x++; y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ではありません&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;y&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a150e5731a9adacd14278f44f5ded3b1572ac237" translate="yes" xml:space="preserve">
          <source>It ran but the effect was that the srcIds declaration/assignment was global because the local declaration with var on the previous line no longer applied as that statement was considered finished due to automatic semi-colon insertion.</source>
          <target state="translated">これは実行されましたが、前の行の var を含むローカル宣言がセミコロンの自動挿入により終了したとみなされたため、その文が適用されなくなったため、srcIds 宣言の割り当てがグローバルになったという影響がありました。</target>
        </trans-unit>
        <trans-unit id="b417ceeca151fecbbe38e09070dddd82dce2f93a" translate="yes" xml:space="preserve">
          <source>JavaScript does not treat every line break as a semicolon: it usually treats line breaks as semicolons only if it can&amp;rsquo;t parse the code without the semicolons.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptはすべての改行をセミコロンとして扱いません。通常、セミコロンなしでコードを解析できない場合にのみ、改行をセミコロンとして扱います。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c63d4f71ba82fe93d610376447964f606bd85307" translate="yes" xml:space="preserve">
          <source>JavaScript does not treat the second line break as a semicolon because it can continue parsing the longer statement a = 3;</source>
          <target state="translated">JavaScript は、より長いステートメント a=3 の解析を続けることができるので、2 番目の改行をセミコロンとして扱いません。</target>
        </trans-unit>
        <trans-unit id="864e71707ada3b929db6262276bb46c299ccab14" translate="yes" xml:space="preserve">
          <source>JavaScript&amp;rsquo;s &amp;ldquo;automatic semicolon insertion&amp;rdquo; rule is the odd one. Where other languages assume most newlines are meaningful and only a few should be ignored in multi-line statements, JS assumes the opposite. It treats all of your newlines as meaningless whitespace unless it encounters a parse error. If it does, it goes back and tries turning the previous newline into a semicolon to get something grammatically valid.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptの「セミコロンの自動挿入」ルールは奇妙なものです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他の言語がほとんどの改行は意味があり、複数行のステートメントで無視する必要があるのはほんのわずかであると想定している場合、JSはその逆を想定します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;解析エラーが発生しない限り、すべての改行は無意味な空白として扱われます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;含まれている場合は、戻って前の改行をセミコロンに変えて、文法的に有効なものを取得します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f1e35209e5cafe89eaf64be5fa913b6b24b9416" translate="yes" xml:space="preserve">
          <source>Just to add,</source>
          <target state="translated">追記しておきます。</target>
        </trans-unit>
        <trans-unit id="4fdab791c55acf9a286b8d34ee4caeba316012ac" translate="yes" xml:space="preserve">
          <source>Quote:</source>
          <target state="translated">Quote:</target>
        </trans-unit>
        <trans-unit id="d922d0a9d10c30c535c85b9132258d8707bcdd8c" translate="yes" xml:space="preserve">
          <source>Regarding semicolon insertion and the var statement, beware forgetting the comma when using var but spanning multiple lines.  Somebody found this in my code yesterday:</source>
          <target state="translated">セミコロンの挿入とvar文については、varを使用していますが、複数行にまたがっているときにカンマを忘れることに注意してください。昨日、誰かが私のコードでこれを発見しました。</target>
        </trans-unit>
        <trans-unit id="0e3c9636b428f58a4da55eb57be9a06804ef589b" translate="yes" xml:space="preserve">
          <source>Restricted productions:</source>
          <target state="translated">制限された生産。</target>
        </trans-unit>
        <trans-unit id="4a6d2ae0fddc7ed5fd50f12a377ded79da23f502" translate="yes" xml:space="preserve">
          <source>So I think to simplify it, that means:</source>
          <target state="translated">簡略化するということは、ということだと思います。</target>
        </trans-unit>
        <trans-unit id="a301fe941a5bd8d4a3523d11bb448c075e135271" translate="yes" xml:space="preserve">
          <source>Straight from the &lt;a href=&quot;http://WWW.ECMA-International.Org/publications/standards/Ecma-262.htm&quot;&gt;ECMA-262, Fifth Edition ECMAScript Specification&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://WWW.ECMA-International.Org/publications/standards/Ecma-262.htm&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMA-262第5版ECMAScript仕様&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;直接&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e002c94e81b9b7a7a831fd819f7e42ed210ee587" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;2&lt;/code&gt; meets the second condition, the following token is &lt;code&gt;}&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;第二の条件は、次のトークンを満たします&lt;/font&gt;&lt;/font&gt; &lt;code&gt;}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d323af44f21e45e27ddd1236cf6449ecc5e3b139" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NumericLiteral&lt;/code&gt;&lt;code&gt;1&lt;/code&gt; meets the first condition, the following token is a line terminator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;NumericLiteral&lt;/code&gt; &lt;code&gt;1&lt;/code&gt; は、&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下のトークンは、ラインターミネータである、最初の条件を満たしています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f6fb06a471f52d6193e8998f4b1e9ade636fc435" translate="yes" xml:space="preserve">
          <source>The classic example, with the &lt;code&gt;ReturnStatement&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;ReturnStatement&lt;/code&gt; を使用&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;した古典的な例&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="744ccb75aeb8e0203c9cfde8cf1cc42c13fc3b4e" translate="yes" xml:space="preserve">
          <source>The concrete rules of ASI, are described in the specification &lt;a href=&quot;http://www.ecma-international.org/ecma-262/7.0/index.html#sec-rules-of-automatic-semicolon-insertion&quot;&gt;&amp;sect;11.9.1 Rules of Automatic Semicolon Insertion&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ASIの具体的な規則は、仕様&lt;/font&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/7.0/index.html#sec-rules-of-automatic-semicolon-insertion&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;sect;11.9.1に&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;記載されています。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自動セミコロン挿入の規則&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="888a598128f183711b5867a6a192831c542772df" translate="yes" xml:space="preserve">
          <source>The most contextual description of JavaScript's &lt;a href=&quot;http://www.ecma-international.org/ecma-262/10.0/index.html#sec-automatic-semicolon-insertion&quot;&gt;Automatic Semicolon Insertion&lt;/a&gt; I have found comes from a book about &lt;a href=&quot;http://www.craftinginterpreters.com/scanning.html&quot;&gt;Crafting Interpreters&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私が見つけた&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptの&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/10.0/index.html#sec-automatic-semicolon-insertion&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自動セミコロン挿入&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の最も文脈的な説明は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.craftinginterpreters.com/scanning.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Crafting Interpreters&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に関する本から来てい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d623172089095c8e353443ff6e25eab37e2a1c5" translate="yes" xml:space="preserve">
          <source>The offending token is</source>
          <target state="translated">違反トークンは</target>
        </trans-unit>
        <trans-unit id="6a36da448d2a7836708068f91394d0e60b2434a5" translate="yes" xml:space="preserve">
          <source>The offending token is separated from the previous token by at least one &lt;code&gt;LineTerminator&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;問題のトークンは、少なくとも1つの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;LineTerminator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;によって前のトークンから分離されます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dce3255e117e7344e14a3b5957ee08656b7f1d21" translate="yes" xml:space="preserve">
          <source>The token is &lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;トークンは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;}&lt;/code&gt; です</target>
        </trans-unit>
        <trans-unit id="1011a7ba7c18b4f6bcbc5a253168e8e3e74a3a5e" translate="yes" xml:space="preserve">
          <source>The token is separated from the previous token by at least one &lt;code&gt;LineTerminator&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;トークンは、少なくとも1つの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;LineTerminator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;によって前のトークンから分離されます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5e00fc24127d3979359d2f6ffb2a455909cd8a83" translate="yes" xml:space="preserve">
          <source>There are three basic rules of semicolon insertion:</source>
          <target state="translated">セミコロン挿入の基本的なルールは3つあります。</target>
        </trans-unit>
        <trans-unit id="20d6b75b0753982a917d4de221974f22165171e9" translate="yes" xml:space="preserve">
          <source>There has to be no line-break immediately after the &lt;code&gt;return&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;return&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;直後に改行しないで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="78455fd16e0c2e1cbde8556f636b2e75f04ad1ac" translate="yes" xml:space="preserve">
          <source>This case occurs when a token is allowed by some production of the grammar, but the production is a &lt;em&gt;restricted production&lt;/em&gt;, a semicolon is automatically inserted before the restricted token.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このケースは、トークンが文法の生成によって許可されているが、生成が&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;制限付き生成&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;である&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合に発生し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。制限付きトークンの前にセミコロンが自動的に挿入されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b25a4c9435aa7596dcd67cc6eef76d7cef7461a3" translate="yes" xml:space="preserve">
          <source>This design note would turn into a design diatribe if I went into complete detail about how that even works, much less all the various ways that that is a bad idea. It&amp;rsquo;s a mess. JavaScript is the only language I know where many style guides demand explicit semicolons after every statement even though the language theoretically lets you elide them.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このデザインノートは、それがどのように機能するかについて完全に詳細に説明すると、デザインダイアトリブになります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それは混乱です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptは私が知っている唯一の言語であり、多くのスタイルガイドは理論的にそれらを省略できるにもかかわらず、すべてのステートメントの後に明示的なセミコロンを要求します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="05a13530ba113c61b81427efd7d9496b9143c775" translate="yes" xml:space="preserve">
          <source>Three cases are described:</source>
          <target state="translated">3つのケースを記載しています。</target>
        </trans-unit>
        <trans-unit id="fa054375303fab0a1a01e8955145ffabe480d027" translate="yes" xml:space="preserve">
          <source>Well, first I should probably ask if this is browser dependent.</source>
          <target state="translated">まず、これがブラウザに依存しているかどうかを聞くべきでしょうね。</target>
        </trans-unit>
        <trans-unit id="733486fe41041dceff8f19d4cadae2af3c183e54" translate="yes" xml:space="preserve">
          <source>What are the rules for JavaScript's automatic semicolon insertion (ASI)</source>
          <target state="translated">JavaScriptの自動セミコロン挿入(ASI)のルールは?</target>
        </trans-unit>
        <trans-unit id="55f114e4f3d2b921443027992cbfad5bde780f84" translate="yes" xml:space="preserve">
          <source>When a token (&lt;code&gt;LineTerminator&lt;/code&gt; or &lt;code&gt;}&lt;/code&gt;) is encountered that is not allowed by the grammar, a semicolon is inserted before it if:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文法で許可されていない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;トークン（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;LineTerminator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）が検出されると、次の場合にその前にセミコロンが挿入されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d721682445c25a7402ef706ca04abbd67e2f4d79" translate="yes" xml:space="preserve">
          <source>When the end of the input stream of tokens is encountered and the parser is unable to parse the input token stream as a single complete Program, then a semicolon is automatically inserted at the end of the input stream.</source>
          <target state="translated">トークンの入力ストリームの終わりに遭遇し、パーサが入力されたトークンストリームを一つの完全なプログラムとして解析できない場合、入力ストリームの最後にセミコロンが自動的に挿入されます。</target>
        </trans-unit>
        <trans-unit id="79f84c17494ad194455834d2a71f113f0f0f1984" translate="yes" xml:space="preserve">
          <source>When, as the program is parsed from left to right,  the end of the input stream of tokens is encountered and the parser is unable to parse the input token stream as a single complete ECMAScript &lt;code&gt;Program&lt;/code&gt;, then a semicolon is automatically inserted at the end of the input stream.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プログラムが左から右に解析されるときに、トークンの入力ストリームの終わりが検出され、パーサーが単一の完全なECMAScript &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Program&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;として入力トークンストリームを解析できない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合、セミコロンが最後に自動的に挿入されます。入力ストリーム。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="997faf8a6d4604ee9afaaefcfea16925025c143d" translate="yes" xml:space="preserve">
          <source>When, as the program is parsed from left to right, a token (called the &lt;em&gt;offending token&lt;/em&gt;) is encountered that is not allowed by any production of the grammar,  then a semicolon is automatically inserted before the offending token if one or more of the following conditions is true:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プログラムが左から右に解析されるときに、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文法の生成で許可されていない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;トークン（&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;違反トークン&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれる&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）が検出された場合、次の1つ以上の場合、違反トークンの前にセミコロンが自動的に挿入されます。条件は真です：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f94e04410ad692e601b928129bbbdb47f102596" translate="yes" xml:space="preserve">
          <source>When, as the program is parsed from left to right, a token is encountered that is allowed by some production of the grammar, but the production is a &lt;em&gt;restricted production&lt;/em&gt; and the token would be the first token for a terminal or nonterminal immediately following the annotation &quot;&lt;sub&gt;[no &lt;code&gt;LineTerminator&lt;/code&gt; here]&lt;/sub&gt;&quot; within the restricted production (and therefore such a token is called a restricted token), and the restricted token is separated from the previous token by at least one &lt;strong&gt;LineTerminator&lt;/strong&gt;, then a semicolon is automatically inserted before the restricted token.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プログラムが左から右に解析されるときに、文法の生成によって許可されているトークンが検出されたが、生成が&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;制限された生成で&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あり、トークンが注釈の直後の端末または非端末の最初のトークンになる場合&quot; &lt;/font&gt;&lt;/font&gt;&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[ &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;LineTerminator&lt;/code&gt; は&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;]&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;が制限されたプロダクション内にあり（したがって、そのようなトークンは制限付きトークンと呼ばれます）、制限付きトークンは、少なくとも1つの&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;LineTerminator&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;によって前のトークンから分離され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、セミコロンが制限付きトークンの前に自動的に挿入されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71d19a91587de3cd09846eb68d0f193c851e3fd9" translate="yes" xml:space="preserve">
          <source>With the above said, that means for &lt;code&gt;return&lt;/code&gt; with a line break, the JavaScript interpreter will insert a &lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記のように、それは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;改行で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;return&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことを意味し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、JavaScriptインタープリターはを挿入し&lt;/font&gt;&lt;/font&gt; &lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f9f6f32c2e2afcb8aa94e4e17d084eeb168cfa69" translate="yes" xml:space="preserve">
          <source>and due to this reason, the classic example of</source>
          <target state="translated">という古典的な例があります。</target>
        </trans-unit>
        <trans-unit id="a5230bf3ac1fc697c044aa12dc9e2fb2c6ea3dcf" translate="yes" xml:space="preserve">
          <source>and:</source>
          <target state="translated">and:</target>
        </trans-unit>
        <trans-unit id="5aa8824fe58ca9c24499eb9a0d21e84b27b32c4f" translate="yes" xml:space="preserve">
          <source>empty statement</source>
          <target state="translated">空文</target>
        </trans-unit>
        <trans-unit id="078bff011369814b7c548fe280a43ec21817acc3" translate="yes" xml:space="preserve">
          <source>expression statement</source>
          <target state="translated">式文</target>
        </trans-unit>
        <trans-unit id="43eef9a62abb8b1e1654f8a890aae054abffa82b" translate="yes" xml:space="preserve">
          <source>for</source>
          <target state="translated">for</target>
        </trans-unit>
        <trans-unit id="4b3960b3c44d0fc5c83e75be11139806d0cd728a" translate="yes" xml:space="preserve">
          <source>for it to work properly.  And you may insert a &lt;code&gt;;&lt;/code&gt; yourself if you were to follow the rule of using a &lt;code&gt;;&lt;/code&gt; after any statement:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それが正しく機能するために。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そして、あなたは挿入するかもしれません&lt;/font&gt;&lt;/font&gt; &lt;code&gt;;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用するというルールに従う場合は、自分自身&lt;/font&gt;&lt;/font&gt; &lt;code&gt;;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ステートメントの後：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5834a6c6e966c1e3f747cbc67e6efa64d69a6a54" translate="yes" xml:space="preserve">
          <source>is transformed to</source>
          <target state="translated">に変換されます。</target>
        </trans-unit>
        <trans-unit id="3f330a2a2ae928da2f8f807c3edb97f9b3cba570" translate="yes" xml:space="preserve">
          <source>is transformed to:</source>
          <target state="translated">に変換されます。</target>
        </trans-unit>
        <trans-unit id="8b2b7711febb0711ffc2fb0c37c980f691391c32" translate="yes" xml:space="preserve">
          <source>see this, &lt;a href=&quot;https://stackoverflow.com/questions/59208059/using-immediately-invoked-function-expressioniife&quot;&gt;using immediately invoked function expression(IIFE)&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;https://stackoverflow.com/questions/59208059/using-immediately-invoked-function-expressioniife&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すぐに呼び出される関数式（IIFE）を使用して&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを参照してください&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ca2c1cecb4309036d20aea58a380fd6c7e5d5d7f" translate="yes" xml:space="preserve">
          <source>statement (see 12.6.3).</source>
          <target state="translated">ステートメント(12.6.3参照)。</target>
        </trans-unit>
        <trans-unit id="71b529bc8be77e128d0c9a64fdd929ba200b26b3" translate="yes" xml:space="preserve">
          <source>two exceptions to the general rule that JavaScript interprets line breaks as semicolons when it cannot parse the second line as a continuation of the statement on the first line. The first exception involves the return, break, and continue statements</source>
          <target state="translated">JavaScript は、2 行目が 1 行目の文の続きとして解析できない場合、改行をセミコロンとして解釈するという一般的なルールに対して、2 つの例外があります。最初の例外は return 文、break 文、continue 文です。</target>
        </trans-unit>
        <trans-unit id="ce07420db36fc91698063621898c0213eb3d6430" translate="yes" xml:space="preserve">
          <source>will not work as expected, because the JavaScript interpreter will treat it as:</source>
          <target state="translated">としてJavaScriptインタープリタが扱うため、期待通りには動作しません。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
