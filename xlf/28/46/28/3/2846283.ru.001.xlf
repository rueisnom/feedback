<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/2846283">
    <body>
      <group id="2846283">
        <trans-unit id="1e3f7aabc088978c78c9ce5815c002c5fcdceef0" translate="yes" xml:space="preserve">
          <source>(quoted again: If a line break appears after any of these words [such as &lt;code&gt;return&lt;/code&gt;] ... JavaScript will always interpret that line break as a semicolon)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(цитируем еще раз: если после любого из этих слов появляется [разрыв строки &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;] &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[например, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;return&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ] ... JavaScript всегда будет интерпретировать разрыв строки как точку с запятой)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ddd6ddc25ab8c15890bcbc479b4eede46de798b3" translate="yes" xml:space="preserve">
          <source>... If a line break appears after any of these words ... JavaScript will always interpret that line break as a semicolon.</source>
          <target state="translated">...Если после любого из этих слов появляется разрыв строки ...JavaScript всегда будет интерпретировать этот разрыв строки как точку с запятой.</target>
        </trans-unit>
        <trans-unit id="c04572f7dc645bd60b810a9315b3bd0b59006e76" translate="yes" xml:space="preserve">
          <source>... The second exception involves the ++ and &amp;minus;&amp;minus; operators ... If you want to use either of these operators as postfix operators, they must appear on the same line as the expression they apply to. Otherwise, the line break will be treated as a semicolon, and the ++ or -- will be parsed as a prefix operator applied to the code that follows. Consider this code, for example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;... Второе исключение включает операторы ++ и &amp;minus;&amp;minus; ... Если вы хотите использовать любой из этих операторов в качестве постфиксных операторов, они должны отображаться в той же строке, что и выражение, к которому они применяются. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В противном случае разрыв строки будет рассматриваться как точка с запятой, а ++ или - будет анализироваться как префиксный оператор, применяемый к следующему коду. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Рассмотрим этот код, например:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a359e0cb9abdb0285eecf11df665134a89ca510" translate="yes" xml:space="preserve">
          <source>..which doesn't seem to follow this rule, since _a would be a valid token.</source>
          <target state="translated">...который,похоже,не следует этому правилу,так как _a был бы действительным жетоном.</target>
        </trans-unit>
        <trans-unit id="642e2c77d3a3e633690dc57a107f38f7086085dd" translate="yes" xml:space="preserve">
          <source>7.9.1 Rules of Automatic Semicolon Insertion</source>
          <target state="translated">7.9.1 Правила автоматической установки точки с запятой</target>
        </trans-unit>
        <trans-unit id="0b085c5032321f3b25263fd236bcde70fded27fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; statement</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;заявление о &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;нарушении&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="19b3eededaaffbc7b76bb39990d6e921d8f463c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;continue&lt;/code&gt; statement</source>
          <target state="translated">&lt;code&gt;continue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; заявление&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b68c9e44d5a051d9e870495f4220256e5115c71f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;do-while&lt;/code&gt; statement</source>
          <target state="translated">&lt;code&gt;do-while&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;заявление на &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;время&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e800db613e6429fc4be982f02c9ad10783e01efa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt; statement</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;заявление о &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;возврате&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="28548ae4ab11990b5597bbb7970adf32c63161e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;throw&lt;/code&gt; statement</source>
          <target state="translated">&lt;code&gt;throw&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; заявление&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="66af0870e7457c37db0a55b5f9117a96c59fffe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var&lt;/code&gt; statement</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; заявление&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc5dba302f7aad9e280729cafca869d4a9bc6e86" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;e.g.&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;e.g.&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="2606606f39c4c104423d96c327d73a02e0e30ded" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;However, the common example cited for bugs caused by semicolon insertion is:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Тем не менее, общий пример, процитированный для ошибок, вызванных вставкой точки с запятой:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec51f53b6b7207f575dd46d251806a9e15da2c54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In general, JavaScript will treat it as continuation of code as long as it makes sense -- except 2 cases:  (1) after some keywords like &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;break&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt;, and (2) if it sees &lt;code&gt;++&lt;/code&gt; or &lt;code&gt;--&lt;/code&gt; on a new line, then it will add the &lt;code&gt;;&lt;/code&gt; at the end of the previous line.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В общем случае JavaScript будет воспринимать его как продолжение кода, если это имеет смысл - за исключением двух случаев: (1) после некоторых ключевых слов, таких как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;return&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;break&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;continue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и (2), если он видит &lt;/font&gt;&lt;/font&gt; &lt;code&gt;++&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;--&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; на новая строка, тогда она добавит &lt;/font&gt;&lt;/font&gt; &lt;code&gt;;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;в конце предыдущей строки.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="34a09d55b048ebd3e4328b972adb76c7d716c5b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;On the other hand, breaking up call chains works as expected:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;С другой стороны, разрыв цепочек вызовов работает, как и ожидалось:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="57cce2117181b8849b9bbda634fd8e498354ba42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The part about &quot;treat it as continuation of code as long as it makes sense&quot; makes it feel like regular expression's greedy matching.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Часть о &amp;laquo;трактовать его как продолжение кода до тех пор, пока он имеет смысл&amp;raquo; заставляет его чувствовать себя как жадное сопоставление регулярного выражения.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="db685a8092cc4880b3ba0814a60528a48d48b3f8" translate="yes" xml:space="preserve">
          <source>Another quote: for the code</source>
          <target state="translated">Другая цитата:для кода</target>
        </trans-unit>
        <trans-unit id="d8956d79f45c6d4f7c88049479df5508c3d4316a" translate="yes" xml:space="preserve">
          <source>Does anyone have a more in-depth description of the rules?</source>
          <target state="translated">Есть ли у кого-нибудь более подробное описание правил?</target>
        </trans-unit>
        <trans-unit id="557156e5f8ff8dfb5c014abd66d4e70a3ae2de88" translate="yes" xml:space="preserve">
          <source>First of all you should know which statements are affected by the automatic semicolon insertion (also known as ASI for brevity):</source>
          <target state="translated">Прежде всего,вы должны знать,на какие утверждения влияет автоматическая вставка точки с запятой (также известная как ASI для краткости):</target>
        </trans-unit>
        <trans-unit id="925c59fcbcbfcf1d49ff01c32ce166f79f0e4e44" translate="yes" xml:space="preserve">
          <source>He goes on to describe it as you would &lt;a href=&quot;http://wiki.c2.com/?CodeSmell&quot;&gt;code smell&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он продолжает описывать это так, как вы бы &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://wiki.c2.com/?CodeSmell&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;кодировали запах&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8fcc327f3a511b7f1ad9a3ab477536fc89de41cd" translate="yes" xml:space="preserve">
          <source>However, there is an additional overriding condition on  the preceding rules: a semicolon is never inserted automatically if the semicolon would then be parsed as an empty statement or if that semicolon would become one of the two semicolons in the header of a</source>
          <target state="translated">Однако в предыдущих правилах есть дополнительное переопределяющее условие:точка с запятой никогда не вставляется автоматически,если точка с запятой затем анализируется как пустое утверждение или если эта точка с запятой становится одной из двух точек с запятой в заголовке a</target>
        </trans-unit>
        <trans-unit id="a4ee7f4d5fee721ea33f0eba24b86e26a1660f18" translate="yes" xml:space="preserve">
          <source>I could not understand those 3 rules in the specs too well -- hope to have something that is more plain English -- but here is what I gathered from JavaScript: The Definitive Guide, 6th Edition, David Flanagan, O'Reilly, 2011:</source>
          <target state="translated">Я не смог понять эти 3 правила в спецификациях слишком хорошо-надеюсь,что у меня будет что-то более простое на английском языке-но вот что я собрал из JavaScript:Definitive Guide,6-е издание,David Flanagan,O'Reilly,2011:</target>
        </trans-unit>
        <trans-unit id="fdbecb20dbbcc8703235a97ef4af31c3b1718b03" translate="yes" xml:space="preserve">
          <source>I've read that if an invalid token is found, but the section of code is valid until that invalid token, a semicolon is inserted before the token if it is preceded by a line break.</source>
          <target state="translated">Я читал,что если найдена недействительная лексема,но часть кода действительна до тех пор,пока эта недействительная лексема не будет найдена,перед лексемой вставляется точка с запятой,если ей предшествует разрыв строки.</target>
        </trans-unit>
        <trans-unit id="562182030467bca460296d9c057e6a5fac6b0208" translate="yes" xml:space="preserve">
          <source>It is parsed as &lt;code&gt;x; ++y;&lt;/code&gt;, not as &lt;code&gt;x++; y&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он анализируется как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x; ++y;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;не как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x++; y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a150e5731a9adacd14278f44f5ded3b1572ac237" translate="yes" xml:space="preserve">
          <source>It ran but the effect was that the srcIds declaration/assignment was global because the local declaration with var on the previous line no longer applied as that statement was considered finished due to automatic semi-colon insertion.</source>
          <target state="translated">Это было сделано,но в результате было решено,что объявление srcIds было глобальным,потому что локальное объявление с var на предыдущей строке больше не применялось,так как это объявление считалось законченным из-за автоматической вставки полуколонок.</target>
        </trans-unit>
        <trans-unit id="b417ceeca151fecbbe38e09070dddd82dce2f93a" translate="yes" xml:space="preserve">
          <source>JavaScript does not treat every line break as a semicolon: it usually treats line breaks as semicolons only if it can&amp;rsquo;t parse the code without the semicolons.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript не обрабатывает каждый разрыв строки как точку с запятой: он обычно обрабатывает разрывы строки как точки с запятой, только если он не может проанализировать код без точек с запятой.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c63d4f71ba82fe93d610376447964f606bd85307" translate="yes" xml:space="preserve">
          <source>JavaScript does not treat the second line break as a semicolon because it can continue parsing the longer statement a = 3;</source>
          <target state="translated">JavaScript не рассматривает разрыв второй строки как точку с запятой,так как он может продолжить разбиение более длинного выражения a=3;</target>
        </trans-unit>
        <trans-unit id="864e71707ada3b929db6262276bb46c299ccab14" translate="yes" xml:space="preserve">
          <source>JavaScript&amp;rsquo;s &amp;ldquo;automatic semicolon insertion&amp;rdquo; rule is the odd one. Where other languages assume most newlines are meaningful and only a few should be ignored in multi-line statements, JS assumes the opposite. It treats all of your newlines as meaningless whitespace unless it encounters a parse error. If it does, it goes back and tries turning the previous newline into a semicolon to get something grammatically valid.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Правило JavaScript &amp;laquo;автоматическая вставка точек с запятой&amp;raquo; является странным. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В тех случаях, когда другие языки предполагают, что большинство символов новой строки имеют смысл, а в многострочных операторах следует игнорировать только несколько, JS предполагает обратное. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он обрабатывает все ваши переводы строк как бессмысленные пробелы, если только он не сталкивается с ошибкой разбора. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если это так, он возвращается и пытается превратить предыдущий символ новой строки в точку с запятой, чтобы получить что-то грамматически правильное.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f1e35209e5cafe89eaf64be5fa913b6b24b9416" translate="yes" xml:space="preserve">
          <source>Just to add,</source>
          <target state="translated">Просто добавлю,</target>
        </trans-unit>
        <trans-unit id="4fdab791c55acf9a286b8d34ee4caeba316012ac" translate="yes" xml:space="preserve">
          <source>Quote:</source>
          <target state="translated">Quote:</target>
        </trans-unit>
        <trans-unit id="d922d0a9d10c30c535c85b9132258d8707bcdd8c" translate="yes" xml:space="preserve">
          <source>Regarding semicolon insertion and the var statement, beware forgetting the comma when using var but spanning multiple lines.  Somebody found this in my code yesterday:</source>
          <target state="translated">Что касается вставки точки с запятой и оператора var,следует остерегаться забывать запятую при использовании var,но в несколько строк.Кто-то нашел это в моем коде вчера:</target>
        </trans-unit>
        <trans-unit id="0e3c9636b428f58a4da55eb57be9a06804ef589b" translate="yes" xml:space="preserve">
          <source>Restricted productions:</source>
          <target state="translated">Ограниченное производство:</target>
        </trans-unit>
        <trans-unit id="4a6d2ae0fddc7ed5fd50f12a377ded79da23f502" translate="yes" xml:space="preserve">
          <source>So I think to simplify it, that means:</source>
          <target state="translated">Так что я думаю,чтобы упростить это,это значит:</target>
        </trans-unit>
        <trans-unit id="a301fe941a5bd8d4a3523d11bb448c075e135271" translate="yes" xml:space="preserve">
          <source>Straight from the &lt;a href=&quot;http://WWW.ECMA-International.Org/publications/standards/Ecma-262.htm&quot;&gt;ECMA-262, Fifth Edition ECMAScript Specification&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Прямо из &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://WWW.ECMA-International.Org/publications/standards/Ecma-262.htm&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMA-262, спецификация ECMAScript пятого издания&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e002c94e81b9b7a7a831fd819f7e42ed210ee587" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;2&lt;/code&gt; meets the second condition, the following token is &lt;code&gt;}&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; удовлетворяет второе условие, следующий маркер &lt;/font&gt;&lt;/font&gt; &lt;code&gt;}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d323af44f21e45e27ddd1236cf6449ecc5e3b139" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NumericLiteral&lt;/code&gt;&lt;code&gt;1&lt;/code&gt; meets the first condition, the following token is a line terminator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;NumericLiteral&lt;/code&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; удовлетворяет первое условие, следующую лексема является линией терминатора.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f6fb06a471f52d6193e8998f4b1e9ade636fc435" translate="yes" xml:space="preserve">
          <source>The classic example, with the &lt;code&gt;ReturnStatement&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Классический пример с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ReturnStatement&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="744ccb75aeb8e0203c9cfde8cf1cc42c13fc3b4e" translate="yes" xml:space="preserve">
          <source>The concrete rules of ASI, are described in the specification &lt;a href=&quot;http://www.ecma-international.org/ecma-262/7.0/index.html#sec-rules-of-automatic-semicolon-insertion&quot;&gt;&amp;sect;11.9.1 Rules of Automatic Semicolon Insertion&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Конкретные правила ASI описаны в спецификации &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/7.0/index.html#sec-rules-of-automatic-semicolon-insertion&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;sect;11.9.1 Правила автоматической вставки точек с запятой&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="888a598128f183711b5867a6a192831c542772df" translate="yes" xml:space="preserve">
          <source>The most contextual description of JavaScript's &lt;a href=&quot;http://www.ecma-international.org/ecma-262/10.0/index.html#sec-automatic-semicolon-insertion&quot;&gt;Automatic Semicolon Insertion&lt;/a&gt; I have found comes from a book about &lt;a href=&quot;http://www.craftinginterpreters.com/scanning.html&quot;&gt;Crafting Interpreters&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Самое контекстное описание &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/10.0/index.html#sec-automatic-semicolon-insertion&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;автоматической вставки точек с запятой&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в JavaScript, которое &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;я нашел, взято из книги о &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.craftinginterpreters.com/scanning.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;крафт-интерпретаторах&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d623172089095c8e353443ff6e25eab37e2a1c5" translate="yes" xml:space="preserve">
          <source>The offending token is</source>
          <target state="translated">Оскорбительный жетон</target>
        </trans-unit>
        <trans-unit id="6a36da448d2a7836708068f91394d0e60b2434a5" translate="yes" xml:space="preserve">
          <source>The offending token is separated from the previous token by at least one &lt;code&gt;LineTerminator&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Токен-нарушитель отделен от предыдущего токена хотя бы одним &lt;/font&gt;&lt;/font&gt; &lt;code&gt;LineTerminator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dce3255e117e7344e14a3b5957ee08656b7f1d21" translate="yes" xml:space="preserve">
          <source>The token is &lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Токен &lt;/font&gt;&lt;/font&gt; &lt;code&gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1011a7ba7c18b4f6bcbc5a253168e8e3e74a3a5e" translate="yes" xml:space="preserve">
          <source>The token is separated from the previous token by at least one &lt;code&gt;LineTerminator&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Токен отделен от предыдущего токена хотя бы одним &lt;/font&gt;&lt;/font&gt; &lt;code&gt;LineTerminator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5e00fc24127d3979359d2f6ffb2a455909cd8a83" translate="yes" xml:space="preserve">
          <source>There are three basic rules of semicolon insertion:</source>
          <target state="translated">Есть три основных правила вставки точки с запятой:</target>
        </trans-unit>
        <trans-unit id="20d6b75b0753982a917d4de221974f22165171e9" translate="yes" xml:space="preserve">
          <source>There has to be no line-break immediately after the &lt;code&gt;return&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Не должно быть разрыва строки сразу после &lt;/font&gt;&lt;/font&gt; &lt;code&gt;return&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="78455fd16e0c2e1cbde8556f636b2e75f04ad1ac" translate="yes" xml:space="preserve">
          <source>This case occurs when a token is allowed by some production of the grammar, but the production is a &lt;em&gt;restricted production&lt;/em&gt;, a semicolon is automatically inserted before the restricted token.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Этот случай возникает, когда токен разрешен некоторым производством грамматики, но производство является &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ограниченным производством&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , точка с запятой автоматически вставляется перед ограниченным токеном.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b25a4c9435aa7596dcd67cc6eef76d7cef7461a3" translate="yes" xml:space="preserve">
          <source>This design note would turn into a design diatribe if I went into complete detail about how that even works, much less all the various ways that that is a bad idea. It&amp;rsquo;s a mess. JavaScript is the only language I know where many style guides demand explicit semicolons after every statement even though the language theoretically lets you elide them.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Эта заметка о дизайне превратилась бы в дизайн-диатриб, если бы я подробно рассказал о том, как это работает, и тем более о том, что это плохая идея. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это беспорядок. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript - единственный из известных мне языков, где многие руководства по стилю требуют явных точек с запятой после каждого оператора, хотя язык теоретически позволяет их исключить.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="05a13530ba113c61b81427efd7d9496b9143c775" translate="yes" xml:space="preserve">
          <source>Three cases are described:</source>
          <target state="translated">Описаны три случая:</target>
        </trans-unit>
        <trans-unit id="fa054375303fab0a1a01e8955145ffabe480d027" translate="yes" xml:space="preserve">
          <source>Well, first I should probably ask if this is browser dependent.</source>
          <target state="translated">Ну,сначала я,наверное,должен спросить,зависит ли это от браузера.</target>
        </trans-unit>
        <trans-unit id="733486fe41041dceff8f19d4cadae2af3c183e54" translate="yes" xml:space="preserve">
          <source>What are the rules for JavaScript's automatic semicolon insertion (ASI)</source>
          <target state="translated">Каковы правила автоматической установки точки с запятой (ASI)в JavaScript?</target>
        </trans-unit>
        <trans-unit id="55f114e4f3d2b921443027992cbfad5bde780f84" translate="yes" xml:space="preserve">
          <source>When a token (&lt;code&gt;LineTerminator&lt;/code&gt; or &lt;code&gt;}&lt;/code&gt;) is encountered that is not allowed by the grammar, a semicolon is inserted before it if:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда встречается токен ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;LineTerminator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), который не разрешен грамматикой, перед ним вставляется точка с запятой, если:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d721682445c25a7402ef706ca04abbd67e2f4d79" translate="yes" xml:space="preserve">
          <source>When the end of the input stream of tokens is encountered and the parser is unable to parse the input token stream as a single complete Program, then a semicolon is automatically inserted at the end of the input stream.</source>
          <target state="translated">Когда встречается конец входного потока маркеров и парсер не может разобрать входной поток маркеров как одну полную Программу,то в конец входного потока автоматически вставляется точка с запятой.</target>
        </trans-unit>
        <trans-unit id="79f84c17494ad194455834d2a71f113f0f0f1984" translate="yes" xml:space="preserve">
          <source>When, as the program is parsed from left to right,  the end of the input stream of tokens is encountered and the parser is unable to parse the input token stream as a single complete ECMAScript &lt;code&gt;Program&lt;/code&gt;, then a semicolon is automatically inserted at the end of the input stream.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда, когда программа анализируется слева направо, встречается конец входного потока токенов, и анализатор не может проанализировать входной поток токенов как одну завершенную &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Program&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ECMAScript &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, тогда точка с запятой автоматически вставляется в конце входной поток.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="997faf8a6d4604ee9afaaefcfea16925025c143d" translate="yes" xml:space="preserve">
          <source>When, as the program is parsed from left to right, a token (called the &lt;em&gt;offending token&lt;/em&gt;) is encountered that is not allowed by any production of the grammar,  then a semicolon is automatically inserted before the offending token if one or more of the following conditions is true:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда при синтаксическом анализе программы слева направо обнаруживается токен (называемый &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;токеном-нарушителем&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), который не допускается никаким производством грамматики, тогда точка с запятой автоматически вставляется перед токеном-нарушителем, если один или несколько из следующих условия верны:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f94e04410ad692e601b928129bbbdb47f102596" translate="yes" xml:space="preserve">
          <source>When, as the program is parsed from left to right, a token is encountered that is allowed by some production of the grammar, but the production is a &lt;em&gt;restricted production&lt;/em&gt; and the token would be the first token for a terminal or nonterminal immediately following the annotation &quot;&lt;sub&gt;[no &lt;code&gt;LineTerminator&lt;/code&gt; here]&lt;/sub&gt;&quot; within the restricted production (and therefore such a token is called a restricted token), and the restricted token is separated from the previous token by at least one &lt;strong&gt;LineTerminator&lt;/strong&gt;, then a semicolon is automatically inserted before the restricted token.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда, когда программа анализируется слева направо, встречается токен, который допускается некоторым производством грамматики, но производство является &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ограниченным производством,&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и токен будет первым токеном для терминала или нетерминала, следующего сразу за аннотацией. &amp;laquo; &lt;/font&gt;&lt;/font&gt;&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[ &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;здесь &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;нет &lt;/font&gt;&lt;/font&gt; &lt;code&gt;LineTerminator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ]&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;raquo; внутри ограниченного производства (и поэтому такой токен называется ограниченным токеном), и ограниченный токен отделяется от предыдущего токена хотя бы одним &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;LineTerminator&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , после чего точка с запятой автоматически вставляется перед ограниченным токеном ,&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71d19a91587de3cd09846eb68d0f193c851e3fd9" translate="yes" xml:space="preserve">
          <source>With the above said, that means for &lt;code&gt;return&lt;/code&gt; with a line break, the JavaScript interpreter will insert a &lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;С учетом вышесказанного, что означает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;return&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; с разрывом строки, интерпретатор JavaScript вставит a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f9f6f32c2e2afcb8aa94e4e17d084eeb168cfa69" translate="yes" xml:space="preserve">
          <source>and due to this reason, the classic example of</source>
          <target state="translated">и по этой причине,классический пример</target>
        </trans-unit>
        <trans-unit id="a5230bf3ac1fc697c044aa12dc9e2fb2c6ea3dcf" translate="yes" xml:space="preserve">
          <source>and:</source>
          <target state="translated">and:</target>
        </trans-unit>
        <trans-unit id="5aa8824fe58ca9c24499eb9a0d21e84b27b32c4f" translate="yes" xml:space="preserve">
          <source>empty statement</source>
          <target state="translated">пустое заявление</target>
        </trans-unit>
        <trans-unit id="078bff011369814b7c548fe280a43ec21817acc3" translate="yes" xml:space="preserve">
          <source>expression statement</source>
          <target state="translated">заявление о выражении</target>
        </trans-unit>
        <trans-unit id="43eef9a62abb8b1e1654f8a890aae054abffa82b" translate="yes" xml:space="preserve">
          <source>for</source>
          <target state="translated">for</target>
        </trans-unit>
        <trans-unit id="4b3960b3c44d0fc5c83e75be11139806d0cd728a" translate="yes" xml:space="preserve">
          <source>for it to work properly.  And you may insert a &lt;code&gt;;&lt;/code&gt; yourself if you were to follow the rule of using a &lt;code&gt;;&lt;/code&gt; after any statement:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;чтобы он работал правильно. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;И вы можете вставить &lt;/font&gt;&lt;/font&gt; &lt;code&gt;;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;себя, если вы будете следовать правилу использования &lt;/font&gt;&lt;/font&gt; &lt;code&gt;;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;после любого заявления:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5834a6c6e966c1e3f747cbc67e6efa64d69a6a54" translate="yes" xml:space="preserve">
          <source>is transformed to</source>
          <target state="translated">трансформируется в</target>
        </trans-unit>
        <trans-unit id="3f330a2a2ae928da2f8f807c3edb97f9b3cba570" translate="yes" xml:space="preserve">
          <source>is transformed to:</source>
          <target state="translated">трансформируется в</target>
        </trans-unit>
        <trans-unit id="8b2b7711febb0711ffc2fb0c37c980f691391c32" translate="yes" xml:space="preserve">
          <source>see this, &lt;a href=&quot;https://stackoverflow.com/questions/59208059/using-immediately-invoked-function-expressioniife&quot;&gt;using immediately invoked function expression(IIFE)&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;увидеть это, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/59208059/using-immediately-invoked-function-expressioniife&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;используя немедленно вызванную функцию выражения (IIFE)&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ca2c1cecb4309036d20aea58a380fd6c7e5d5d7f" translate="yes" xml:space="preserve">
          <source>statement (see 12.6.3).</source>
          <target state="translated">заявление (см.12.6.3).</target>
        </trans-unit>
        <trans-unit id="71b529bc8be77e128d0c9a64fdd929ba200b26b3" translate="yes" xml:space="preserve">
          <source>two exceptions to the general rule that JavaScript interprets line breaks as semicolons when it cannot parse the second line as a continuation of the statement on the first line. The first exception involves the return, break, and continue statements</source>
          <target state="translated">два исключения из общего правила,что JavaScript интерпретирует разрывы строк как точки с запятой,когда он не может разобрать вторую строку как продолжение оператора в первой строке.Первое исключение включает в себя операторы return,break и continue</target>
        </trans-unit>
        <trans-unit id="ce07420db36fc91698063621898c0213eb3d6430" translate="yes" xml:space="preserve">
          <source>will not work as expected, because the JavaScript interpreter will treat it as:</source>
          <target state="translated">будет работать не так,как ожидалось,потому что интерпретатор JavaScript будет относиться к нему так,как ожидалось:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
