<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/134845">
    <body>
      <group id="134845">
        <trans-unit id="bd9a05fc79dc919ee8f37187136cd170c86ec000" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#&lt;/code&gt; is better than &lt;code&gt;javascript:anything&lt;/code&gt;, but the following is even better:</source>
          <target state="translated">&lt;code&gt;#&lt;/code&gt; лучше &lt;code&gt;javascript:anything&lt;/code&gt; , но следующее даже лучше:</target>
        </trans-unit>
        <trans-unit id="d13303585dad04c88853285805c96d301ae351ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;a [routerLink]=&quot;&quot; (click)=&quot;passTheSalt()&quot;&amp;gt;Click me&amp;lt;/a&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;a [routerLink]=&quot;&quot; (click)=&quot;passTheSalt()&quot;&amp;gt;Click me&amp;lt;/a&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66098ba4c05ecdfacd9f658027335da408922dd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'#'&lt;/code&gt; will take the user back to the top of the page, so I usually go with &lt;code&gt;void(0)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'#'&lt;/code&gt; вернет пользователя в начало страницы, поэтому я обычно использую &lt;code&gt;void(0)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="312f97c5a58e6153e44c36e633daf36e3ba7f7a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;javascript:;&lt;/code&gt; also behaves like &lt;code&gt;javascript:void(0);&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;javascript:;&lt;/code&gt; также ведет себя как &lt;code&gt;javascript:void(0);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d630050255eb1447bf20aa08fa1d2d8f3b9370be" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Or you can change the &lt;strong&gt;href&lt;/strong&gt; attribute with JavaScript like:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Или вы можете изменить атрибут &lt;strong&gt;href&lt;/strong&gt; с помощью JavaScript, например:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a1b67b7d55d05fa470b042c000c35c102854a70a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;*Note:&lt;/strong&gt; For dynamically created elements, use:</source>
          <target state="translated">&lt;strong&gt;* Примечание:&lt;/strong&gt; для динамически создаваемых элементов используйте:</target>
        </trans-unit>
        <trans-unit id="dd18ad4d12234247b1086240c340527f7ff571a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Don't use links for the sole purpose of running JavaScript.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Не используйте ссылки с единственной целью запуска JavaScript.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1ed559f58d1012098e76aa02f5987633940fcf2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTML&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;HTML&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45565dc2a4e38dfb88e321711fd07ae8f3e420e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JavaScript&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;JavaScript&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b423dbffd6212f2c51f0b1683e68068ddc8f1493" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reasons:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Reasons:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="279e0a0c57b48964447c3c7b49cb421013744ca1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;or&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;or&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="64a36367510a74320eeb73e9f7eb07284507c67a" translate="yes" xml:space="preserve">
          <source>A blackboxed &lt;em&gt;&lt;a href=&quot;http://documentcloud.github.com/backbone/&quot;&gt;Backbone.js&lt;/a&gt;&lt;/em&gt; example</source>
          <target state="translated">Пример &lt;em&gt;&lt;a href=&quot;http://documentcloud.github.com/backbone/&quot;&gt;Backbone.js,&lt;/a&gt;&lt;/em&gt; помещенный в черный &lt;em&gt;ящик&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="37a8070f7c88e3349acd823f028acbc805037eb6" translate="yes" xml:space="preserve">
          <source>A second reason for avoiding &lt;code&gt;#&lt;/code&gt; is that the final &lt;code&gt;return false;&lt;/code&gt; will not execute if the called function throws an error. Hence the developers have to also remember to handle any error appropriately in the called function.</source>
          <target state="translated">Вторая причина, по которой следует избегать &lt;code&gt;#&lt;/code&gt; , заключается в том, что окончательное &lt;code&gt;return false;&lt;/code&gt; не будет выполняться, если вызванная функция выдает ошибку. Следовательно, разработчики также должны помнить, чтобы обрабатывать любую ошибку соответствующим образом в вызываемой функции.</target>
        </trans-unit>
        <trans-unit id="21105a7cdd1e4d498a450d175c3236a8e1dd36cd" translate="yes" xml:space="preserve">
          <source>A third reason is that there are cases where the &lt;code&gt;onclick&lt;/code&gt; event property is assigned dynamically.  I prefer to be able to call a function or assign it dynamically without having to code the function specifically for one method of attachment or another. Hence my &lt;code&gt;onclick&lt;/code&gt; (or on anything) in HTML markup look like this:</source>
          <target state="translated">Третья причина заключается в том, что в некоторых случаях свойство события &lt;code&gt;onclick&lt;/code&gt; назначается динамически. Я предпочитаю иметь возможность вызывать функцию или назначать ее динамически, без необходимости кодировать функцию специально для того или иного метода вложения. Следовательно, мой &lt;code&gt;onclick&lt;/code&gt; (или что-нибудь еще) в HTML-разметке выглядит так:</target>
        </trans-unit>
        <trans-unit id="a4ed08c4c6145cdd2af098012bc4d6243908855f" translate="yes" xml:space="preserve">
          <source>And at the end, if you are binding the event from the JavaScript code itself, there you can do &lt;code&gt;event.preventDefault()&lt;/code&gt; to achieve this if you are using &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag, but if you are not using a &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag for this, there you get an advantage, you don't need to do this.</source>
          <target state="translated">И, &lt;code&gt;event.preventDefault()&lt;/code&gt; , если вы связываете событие с самим кодом JavaScript, вы можете выполнить event.preventDefault (), чтобы добиться этого, если вы используете тег &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; , но если вы не используете тег &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; для это, там вы получаете преимущество, вам не нужно это делать.</target>
        </trans-unit>
        <trans-unit id="6d47584a657f22627c286c065b01ef0eec3ff30e" translate="yes" xml:space="preserve">
          <source>And for dynamically created elements which are created with dynamically created elements, use:</source>
          <target state="translated">А для динамически создаваемых элементов,которые создаются с помощью динамически создаваемых элементов,используйте:</target>
        </trans-unit>
        <trans-unit id="453026dc796aeb6d29ddf8df59d8b46fa665a396" translate="yes" xml:space="preserve">
          <source>And for the HTML, the link is simply</source>
          <target state="translated">А для HTML,ссылка это просто</target>
        </trans-unit>
        <trans-unit id="95f5aa76b12c67b525c77c3e75be466cc937bf2c" translate="yes" xml:space="preserve">
          <source>And for users with JavaScript disabled: if there isn't a fallback (for example, an alternative &lt;code&gt;href&lt;/code&gt;), they should at least not be able to see and interact with that element at all, whatever it is an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; or a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">А для пользователей с отключенным JavaScript: если нет запасного варианта (например, альтернативного &lt;code&gt;href&lt;/code&gt; ), они должны, по крайней мере, вообще не иметь возможности видеть и взаимодействовать с этим элементом, независимо от того, является ли он &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag.</target>
        </trans-unit>
        <trans-unit id="e88eec5c27cba3632c0d40e5cbd3edd4fd8e378c" translate="yes" xml:space="preserve">
          <source>And style it with CSS:</source>
          <target state="translated">И стилизовать его с помощью CSS:</target>
        </trans-unit>
        <trans-unit id="35a844c6a80cfc07cc920daac48c12d3b58f5465" translate="yes" xml:space="preserve">
          <source>But I'm using that just for preventing the page jumping to the top when the user clicks on an empty anchor. I'm rarely using onClick and other &lt;code&gt;on&lt;/code&gt; events directly in HTML.</source>
          <target state="translated">Но я использую это только для предотвращения перехода страницы наверх, когда пользователь нажимает на пустой якорь. Я редко использую onClick и другие &lt;code&gt;on&lt;/code&gt; событий непосредственно в HTML.</target>
        </trans-unit>
        <trans-unit id="99a146f23e49914b10a58de2f533ddb845149264" translate="yes" xml:space="preserve">
          <source>But semantically, all the above ways to achieve this are wrong &lt;em&gt;(it works fine though)&lt;/em&gt;. If any element is not created to navigate the page and that have some JavaScript things associated with it, then it should not be a &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">Но с семантической точки зрения все вышеперечисленные способы достижения этого неверны &lt;em&gt;(хотя он работает нормально)&lt;/em&gt; . Если какой-либо элемент не создан для навигации по странице и с ней связаны некоторые вещи JavaScript, то он не должен быть тегом &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbd07b5abfd55cfe055cb14acc954e5ad57b454b" translate="yes" xml:space="preserve">
          <source>But then they forget to use &lt;code&gt;return doSomething()&lt;/code&gt; in the onclick and just use &lt;code&gt;doSomething()&lt;/code&gt;.</source>
          <target state="translated">Но затем они забывают использовать &lt;code&gt;return doSomething()&lt;/code&gt; в onclick и просто используют &lt;code&gt;doSomething()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b42a1500b25c0660b57181b19c01d4b3eb7c6fbf" translate="yes" xml:space="preserve">
          <source>By using &lt;code&gt;return false;&lt;/code&gt;, the page doesn't jump to the top or break the &lt;code&gt;back&lt;/code&gt; button.</source>
          <target state="translated">Используя &lt;code&gt;return false;&lt;/code&gt; , страница не перепрыгивает наверх и не ломает кнопку &lt;code&gt;back&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fdc74074ca47c21bd3b21b6aeb8f256f90c8e2c9" translate="yes" xml:space="preserve">
          <source>Check out &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Unobtrusive_JavaScript&quot;&gt;Unobtrusive JavaScript&lt;/a&gt;&lt;/em&gt; and &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Progressive_enhancement&quot;&gt;Progressive enhancement&lt;/a&gt;&lt;/em&gt; (both Wikipedia).</source>
          <target state="translated">Ознакомьтесь с &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Unobtrusive_JavaScript&quot;&gt;ненавязчивым JavaScript&lt;/a&gt;&lt;/em&gt; и &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Progressive_enhancement&quot;&gt;прогрессивным улучшением&lt;/a&gt;&lt;/em&gt; (обе из Википедии).</target>
        </trans-unit>
        <trans-unit id="a2b39636986a25ff8379e8d673a9d2a172edde07" translate="yes" xml:space="preserve">
          <source>Definitely hash (&lt;code&gt;#&lt;/code&gt;) is better because in JavaScript it is a pseudoscheme:</source>
          <target state="translated">Определенно хеш ( &lt;code&gt;#&lt;/code&gt; ) лучше, потому что в JavaScript это псевдосхема:</target>
        </trans-unit>
        <trans-unit id="ab225a03db28555ac74d12a43409554a8e1d0685" translate="yes" xml:space="preserve">
          <source>Depending on what you want to accomplish, you could forget the onclick and just use the href:</source>
          <target state="translated">В зависимости от того,чего вы хотите достичь,вы можете забыть о клике и просто использовать href:</target>
        </trans-unit>
        <trans-unit id="ccfb7f94fd7eac312a70ee0ec8cd7a643243d3cf" translate="yes" xml:space="preserve">
          <source>Doing &lt;code&gt;&amp;lt;a href=&quot;#&quot; onclick=&quot;myJsFunc();&quot;&amp;gt;Link&amp;lt;/a&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;myJsFunc();&quot;&amp;gt;Link&amp;lt;/a&amp;gt;&lt;/code&gt; or whatever else that contains an &lt;code&gt;onclick&lt;/code&gt; attribute - was okay back five years ago, though now it can be a bad practice. Here's why:</source>
          <target state="translated">Выполнение &lt;code&gt;&amp;lt;a href=&quot;#&quot; onclick=&quot;myJsFunc();&quot;&amp;gt;Link&amp;lt;/a&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;myJsFunc();&quot;&amp;gt;Link&amp;lt;/a&amp;gt;&lt;/code&gt; или все, что содержит атрибут &lt;code&gt;onclick&lt;/code&gt; - было хорошо пять лет назад, хотя сейчас это может быть плохой практикой. Вот почему:</target>
        </trans-unit>
        <trans-unit id="d7e4b16f963f46e303d8129da25ee4fda74df07e" translate="yes" xml:space="preserve">
          <source>Example... Let's say you have the following search link:</source>
          <target state="translated">Пример...Допустим,у вас есть следующая ссылка на поиск:</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Расширить фрагмент</target>
        </trans-unit>
        <trans-unit id="256b34ae5bf64fd1e7c412983943787c254f3234" translate="yes" xml:space="preserve">
          <source>For a scalable, blackboxed, Backbone.js component example - &lt;em&gt;&lt;a href=&quot;http://jsfiddle.net/balupton/sTzdD/&quot;&gt;see this working jsfiddle example here&lt;/a&gt;&lt;/em&gt;. Notice how we utilize unobtrusive JavaScript practices, and in a tiny amount of code have a component that can be repeated across the page multiple times without side-effects or conflicts between the different component instances. Amazing!</source>
          <target state="translated">Для масштабируемого примера компонента &lt;em&gt;&lt;a href=&quot;http://jsfiddle.net/balupton/sTzdD/&quot;&gt;Blackbed&lt;/a&gt;&lt;/em&gt; Backbone.js - &lt;em&gt;см. Этот рабочий пример jsfiddle здесь&lt;/em&gt; . Обратите внимание, как мы используем ненавязчивые практики JavaScript, и в крошечном объеме кода есть компонент, который можно повторять по всей странице несколько раз без побочных эффектов или конфликтов между различными экземплярами компонента. Удивительно!</target>
        </trans-unit>
        <trans-unit id="9f738ce8457f291b18ee47e665e96baa84f38fcd" translate="yes" xml:space="preserve">
          <source>HTML</source>
          <target state="translated">HTML</target>
        </trans-unit>
        <trans-unit id="11dc542c0ffeed8b41bad901e2044f438e4ab0e5" translate="yes" xml:space="preserve">
          <source>HTML:</source>
          <target state="translated">HTML:</target>
        </trans-unit>
        <trans-unit id="bfe5704ee66566a95b73c5b240c85d48233a0c03" translate="yes" xml:space="preserve">
          <source>Here is a sample. Home/ChangePicture is a working link to a form on a page complete with user interface and standard HTML submit buttons, but it looks nicer injected into a modal dialog with jQueryUI buttons. Either way works, depending on the browser, which satisfies mobile first development.</source>
          <target state="translated">Вот образец.HomeChangePicture-это рабочая ссылка на форму на странице с пользовательским интерфейсом и стандартными кнопками отправки HTML,но она выглядит более красиво вставленной в модальный диалог с кнопками jQueryUI.В любом случае работает,в зависимости от браузера,который удовлетворяет мобильной первой разработки.</target>
        </trans-unit>
        <trans-unit id="48a45ae35adf7aefdc4234047465cfabe67b39db" translate="yes" xml:space="preserve">
          <source>Here's &lt;strong&gt;&lt;a href=&quot;http://jsFiddle.net/mdesdev/Dn8YT/&quot;&gt;a jsFiddle&lt;/a&gt;&lt;/strong&gt; example of above aforementioned.</source>
          <target state="translated">Вот пример вышеупомянутого &lt;strong&gt;&lt;a href=&quot;http://jsFiddle.net/mdesdev/Dn8YT/&quot;&gt;jsFiddle&lt;/a&gt;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="af0f247bdfb76d39157de73b38f8c569f1bed9c5" translate="yes" xml:space="preserve">
          <source>I agree with Mr. D4V360 who suggested that, even though you are using the anchor tag, you do not truly have an anchor here. All you have is a special section of a document that should behave slightly different. A &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag is far more appropriate.</source>
          <target state="translated">Я согласен с г-ном D4V360, который предположил, что, даже если вы используете тег привязки, у вас здесь действительно нет привязки. Все, что у вас есть, это специальный раздел документа, который должен вести себя немного иначе. Тег &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; гораздо более уместен.</target>
        </trans-unit>
        <trans-unit id="8b66ccf07b47db554765f27b6c481f900714e083" translate="yes" xml:space="preserve">
          <source>I agree with suggestions elsewhere stating that you should use regular URL in &lt;code&gt;href&lt;/code&gt; attribute, then call some JavaScript function in onclick. The flaw is, that they automaticaly add &lt;code&gt;return false&lt;/code&gt; after the call.</source>
          <target state="translated">Я согласен с предложениями в другом месте, утверждающими, что вы должны использовать обычный URL в атрибуте &lt;code&gt;href&lt;/code&gt; , а затем вызывать какую-то функцию JavaScript в onclick. Недостаток в том, что они автоматически добавляют &lt;code&gt;return false&lt;/code&gt; после вызова.</target>
        </trans-unit>
        <trans-unit id="a380124779a6a974fd92f45c584ebee1075ab8a7" translate="yes" xml:space="preserve">
          <source>I believe you are presenting a false dichotomy. These are not the only two options.</source>
          <target state="translated">Полагаю,вы представляете ложную дихотомию.Это не единственные два варианта.</target>
        </trans-unit>
        <trans-unit id="a95f583000a6d6471c45baf0530d2dddf28a9013" translate="yes" xml:space="preserve">
          <source>I choose use &lt;code&gt;javascript:void(0)&lt;/code&gt;, because use this could prevent right click to open the content menu. But &lt;code&gt;javascript:;&lt;/code&gt; is shorter and does the same thing.</source>
          <target state="translated">Я выбираю использовать &lt;code&gt;javascript:void(0)&lt;/code&gt; , потому что это может помешать щелкнуть правой кнопкой мыши, чтобы открыть меню контента. Но &lt;code&gt;javascript:;&lt;/code&gt; короче и делает то же самое.</target>
        </trans-unit>
        <trans-unit id="96087e21f2dbf7911c372442be487eb14f5a264d" translate="yes" xml:space="preserve">
          <source>I don't like using Hash-Tags unless they're used for anchors, and I only do the above when I've got more than two faux-links, otherwise I go with javascript:void(0).</source>
          <target state="translated">Я не люблю использовать Hash-теги,если они не используются для якорей,и я делаю это только тогда,когда у меня больше двух фальшивых ссылок,в противном случае я иду с javascript:void(0).</target>
        </trans-unit>
        <trans-unit id="e1768468b361fab43f929b120179e50e5000f5c3" translate="yes" xml:space="preserve">
          <source>I personally use them in combination. For example:</source>
          <target state="translated">Я лично использую их в комбинации.Например:</target>
        </trans-unit>
        <trans-unit id="1f0983da23d5be03a8b645a4411ddd3ac7bc75ec" translate="yes" xml:space="preserve">
          <source>I realize this isn't always possible, but in my opinion it should be striven for in developing any public website.</source>
          <target state="translated">Я понимаю,что это не всегда возможно,но,на мой взгляд,к этому нужно стремиться при разработке любого публичного сайта.</target>
        </trans-unit>
        <trans-unit id="58b87b45b40fd41bb411d996f2114853bdb955b8" translate="yes" xml:space="preserve">
          <source>I recommend using a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; element instead, &lt;em&gt;especially&lt;/em&gt; if the control is supposed to produce a change in the data. (Something like a POST.)</source>
          <target state="translated">Вместо этого я рекомендую использовать элемент &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; , &lt;em&gt;особенно&lt;/em&gt; если предполагается, что элемент управления произведет изменение в данных. (Что-то вроде ПОЧТЫ.)</target>
        </trans-unit>
        <trans-unit id="0659955dd4df5923a30ee6d5913674dc5d8e2b01" translate="yes" xml:space="preserve">
          <source>I tried both in google chrome with the developer tools, and the &lt;code&gt;id=&quot;#&quot;&lt;/code&gt; took 0.32 seconds. While the &lt;code&gt;javascript:void(0)&lt;/code&gt; method took only 0.18 seconds. So in google chrome, &lt;code&gt;javascript:void(0)&lt;/code&gt; works better and faster.</source>
          <target state="translated">Я пробовал оба в Google Chrome с инструментами разработчика, и &lt;code&gt;id=&quot;#&quot;&lt;/code&gt; заняла 0,32 секунды. &lt;code&gt;javascript:void(0)&lt;/code&gt; как метод javascript: void (0) занял всего 0,18 секунды. Так в google chrome &lt;code&gt;javascript:void(0)&lt;/code&gt; работает лучше и быстрее.</target>
        </trans-unit>
        <trans-unit id="5109866b7d3389f201821ad19d4d064cc956b926" translate="yes" xml:space="preserve">
          <source>I use &lt;code&gt;javascript:void(0)&lt;/code&gt;.</source>
          <target state="translated">Я использую &lt;code&gt;javascript:void(0)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c172eebb89e95daca91530697b9af96397c94df8" translate="yes" xml:space="preserve">
          <source>I use the following</source>
          <target state="translated">Я использую следующее</target>
        </trans-unit>
        <trans-unit id="57cf8845fa007adeab3a5acc415f45fd1bb1846a" translate="yes" xml:space="preserve">
          <source>I usually go for</source>
          <target state="translated">Обычно я иду на</target>
        </trans-unit>
        <trans-unit id="eb7c88cfddb1e942897629653e455a623a4de90f" translate="yes" xml:space="preserve">
          <source>I would honestly suggest neither.  I would use a stylized &lt;code&gt;&amp;lt;button&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt; for that behavior.</source>
          <target state="translated">Я бы честно не предложил ни того, ни другого. Я бы использовал стилизованную &lt;code&gt;&amp;lt;button&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt; для такого поведения.</target>
        </trans-unit>
        <trans-unit id="3abe3dddf2b07b6bfdae8fdc108601add56c4f34" translate="yes" xml:space="preserve">
          <source>I would use:</source>
          <target state="translated">Я бы воспользовался:</target>
        </trans-unit>
        <trans-unit id="804270c45f2c120a3a97bbb1e763a5eaffcbd795" translate="yes" xml:space="preserve">
          <source>I'm basically paraphrasing from &lt;a href=&quot;http://www.matthidinger.com/archive/2011/02/22/Progressive-enhancement-tutorial-with-ASP-NET-MVC-3-and-jQuery.aspx&quot;&gt;this practical article using progressive enhancement&lt;/a&gt;. &lt;strong&gt;The short answer is that you never use &lt;code&gt;javascript:void(0);&lt;/code&gt; or &lt;code&gt;#&lt;/code&gt; unless your user interface has already inferred that JavaScript is enabled, in which case you should use &lt;code&gt;javascript:void(0);&lt;/code&gt;&lt;/strong&gt;. Also, do not use span as links, since that is semantically false to begin with.</source>
          <target state="translated">Я в основном перефразирую &lt;a href=&quot;http://www.matthidinger.com/archive/2011/02/22/Progressive-enhancement-tutorial-with-ASP-NET-MVC-3-and-jQuery.aspx&quot;&gt;эту практическую статью, используя прогрессивное улучшение&lt;/a&gt; . &lt;strong&gt;Краткий ответ: вы никогда не используете &lt;code&gt;javascript:void(0);&lt;/code&gt; &lt;/strong&gt; &lt;strong&gt;или &lt;code&gt;#&lt;/code&gt; , если ваш пользовательский интерфейс уже не сделал вывод, что JavaScript включен, и в этом случае вы должны использовать &lt;code&gt;javascript:void(0);&lt;/code&gt; &lt;/strong&gt; , Кроме того, не используйте span в качестве ссылок, поскольку это семантически неверно для начала.</target>
        </trans-unit>
        <trans-unit id="6d5d36429acbb4b8b2f395fbbdf6acc6a3c38a0b" translate="yes" xml:space="preserve">
          <source>Ideally you'd do this:</source>
          <target state="translated">В идеале ты бы сделал это:</target>
        </trans-unit>
        <trans-unit id="00d2f854e6bdeb1c870bd9dbb5045f67d2c0bbe3" translate="yes" xml:space="preserve">
          <source>If that is not possible, then you should at least inject the anchor tag into the document with JavaScript and the appropriate click event handlers.</source>
          <target state="translated">Если это невозможно,то вы должны,по крайней мере,вставить якорный тег в документ с помощью JavaScript и соответствующих обработчиков событий щелчка.</target>
        </trans-unit>
        <trans-unit id="212472301315975ffd2e37b699dd3653d5d7ab0b" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;href&lt;/code&gt; maybe there is no reason to use an anchor tag.</source>
          <target state="translated">Если &lt;code&gt;href&lt;/code&gt; отсутствует, возможно, нет причин использовать тег привязки.</target>
        </trans-unit>
        <trans-unit id="3fbd40c242c40cb0b3c6722827bfd1390a74dc28" translate="yes" xml:space="preserve">
          <source>If you &lt;em&gt;MUST&lt;/em&gt; use an A element, use &lt;code&gt;javascript:void(0);&lt;/code&gt; for reasons already mentioned.</source>
          <target state="translated">Если вы &lt;em&gt;ДОЛЖНЫ&lt;/em&gt; использовать элемент A, используйте &lt;code&gt;javascript:void(0);&lt;/code&gt; по причинам, уже упомянутым.</target>
        </trans-unit>
        <trans-unit id="28d7882ac4e01aeaa34e02649f7788fc7aad6938" translate="yes" xml:space="preserve">
          <source>If you can have an actual URL that makes sense use that as the HREF.  The onclick won't fire if someone middle-clicks on your link to open a new tab or if they have JavaScript disabled.</source>
          <target state="translated">Если у вас есть реальный URL,который имеет смысл использовать в качестве HREF.Клик на ссылку не будет запускаться,если кто-то щелкнет по вашей ссылке посередине,чтобы открыть новую вкладку,или если у него отключен JavaScript.</target>
        </trans-unit>
        <trans-unit id="de669b86638dcf73ae3668a5c38687eddd030088" translate="yes" xml:space="preserve">
          <source>If you happen to be using &lt;a href=&quot;http://angularjs.org/&quot;&gt;&lt;strong&gt;AngularJS&lt;/strong&gt;&lt;/a&gt;, you can use the following:</source>
          <target state="translated">Если вы используете &lt;a href=&quot;http://angularjs.org/&quot;&gt;&lt;strong&gt;AngularJS&lt;/strong&gt;&lt;/a&gt; , вы можете использовать следующее:</target>
        </trans-unit>
        <trans-unit id="804f3288dea9da73c4359b16a93c611d804ee543" translate="yes" xml:space="preserve">
          <source>If you use Angular2, this way works:</source>
          <target state="translated">Если вы используете Angular2,этот способ работает:</target>
        </trans-unit>
        <trans-unit id="ad5929b44b8b9854ce64c2375d1bc9cc7608ddf0" translate="yes" xml:space="preserve">
          <source>If you want your action to still work with JavaScript disabled, then using an &lt;code&gt;a&lt;/code&gt; element with a &lt;code&gt;href&lt;/code&gt; attribute that goes to some URL that will perform the action manually instead of via an Ajax request or whatever should be the way to go. If you are doing this, then you want to ensure you do an &lt;code&gt;event.preventDefault()&lt;/code&gt; on your click call to make sure when the button is clicked it does not follow the link. This option is called graceful degradation.</source>
          <target state="translated">Если вы хотите, чтобы ваше действие по-прежнему работало с отключенным JavaScript, то используйте элемент с атрибутом &lt;code&gt;href&lt;/code&gt; , который идет по какому-то URL-адресу, который выполнит действие вручную, а не через Ajax-запрос, или каким-либо другим способом. Если вы делаете это, то вы хотите убедиться, что вы &lt;code&gt;event.preventDefault()&lt;/code&gt; при вызове, чтобы убедиться, что при нажатии кнопки она не переходит по ссылке. Этот вариант называется изящной деградацией.</target>
        </trans-unit>
        <trans-unit id="32737c28e056736b9f71e199ea71ce66c890d6e0" translate="yes" xml:space="preserve">
          <source>If your &quot;link&quot; has the sole purpose of running some JavaScript code it doesn't qualify as a link; rather a piece of text with a JavaScript function coupled to it. I would recommend to use a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag with an &lt;code&gt;onclick handler&lt;/code&gt; attached to it and some basic CSS to immitate a link. Links are made for navigation, and if your JavaScript code isn't for navigation it should not be an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">Если ваша &amp;laquo;ссылка&amp;raquo; имеет единственную цель - запустить какой-либо код JavaScript, она не может рассматриваться как ссылка; скорее кусок текста с функцией JavaScript, связанной с ним. Я бы порекомендовал использовать &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; с прикрепленным к нему &lt;code&gt;onclick handler&lt;/code&gt; и некоторым базовым CSS для имитации ссылки. Ссылки сделаны для навигации, и если ваш код JavaScript не для навигации, это не должен быть тег &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46e3a38016d86ba7214b26757c2cfc95f05dd8d8" translate="yes" xml:space="preserve">
          <source>In addition</source>
          <target state="translated">Кроме того</target>
        </trans-unit>
        <trans-unit id="de626ba3c47bd3e6c70f8fa7b92ad16e7ab1df22" translate="yes" xml:space="preserve">
          <source>In addition, regarding cowgod's suggestion, particularly this: &lt;code&gt;...href=&quot;javascript_required.html&quot; onclick=&quot;...&lt;/code&gt; This is good approach, but it doesn't distinguish between &quot;JavaScript disabled&quot; and &quot;onclick fails&quot; scenarios.</source>
          <target state="translated">Кроме того, в отношении предложения cowgod, в частности: &lt;code&gt;...href=&quot;javascript_required.html&quot; onclick=&quot;...&lt;/code&gt; Это хороший подход, но он не различает сценарии&amp;laquo; JavaScript отключен &amp;raquo;и&amp;laquo; onclick fails &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="5f4095b56e1965992a00ffe2c85250cb05dcfc85" translate="yes" xml:space="preserve">
          <source>Instead, use an element other than a link:</source>
          <target state="translated">Вместо этого используйте элемент,отличный от ссылки:</target>
        </trans-unit>
        <trans-unit id="3a64ed76369a90aa5c918a8b11d861c017006fa9" translate="yes" xml:space="preserve">
          <source>It gets around the need to return false. I don't like the &lt;code&gt;#&lt;/code&gt; option because, as mentioned, it will take the user to the top of the page. If you have somewhere else to send the user if they don't have JavaScript enabled (which is rare where I work, but a very good idea), then Steve's proposed method works great.</source>
          <target state="translated">Обходит необходимость вернуть ложь. Мне не нравится опция &lt;code&gt;#&lt;/code&gt; , потому что, как уже упоминалось, она выведет пользователя наверх страницы. Если вам нужно куда-нибудь отправить пользователя, если у него не включен JavaScript (что редко случается, когда я работаю, но очень хорошая идея), то предложенный Стивом метод отлично работает.</target>
        </trans-unit>
        <trans-unit id="4aba6ab3ebf5c70f336816f81bd49cb9be79da3b" translate="yes" xml:space="preserve">
          <source>It is short an concise</source>
          <target state="translated">Коротко и лаконично</target>
        </trans-unit>
        <trans-unit id="05d248935f7dfb7c2986856b90ff8132ad46390c" translate="yes" xml:space="preserve">
          <source>It promotes the practice of obtrusive JavaScript - which has turned out to be difficult to maintain and difficult to scale. More on this in &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Unobtrusive_JavaScript&quot;&gt;Unobtrusive JavaScript&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">Он продвигает практику навязчивого JavaScript - который оказался сложным в обслуживании и трудно масштабируемым. Подробнее об этом в &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Unobtrusive_JavaScript&quot;&gt;ненавязчивом JavaScript&lt;/a&gt;&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="78ab3661fb4274583e571731590054b5ccbe8d86" translate="yes" xml:space="preserve">
          <source>It will not take you to the top of the page, as with (#)</source>
          <target state="translated">Это не приведет вас к верхней части страницы,как в случае с (#).</target>
        </trans-unit>
        <trans-unit id="ee0a7d8c1d6e41002b515104d36b8e33adec0a88" translate="yes" xml:space="preserve">
          <source>It would be better to use jQuery,</source>
          <target state="translated">Было бы лучше использовать JQuery,</target>
        </trans-unit>
        <trans-unit id="c7829ed128c64788f09241792585b6b6ca508330" translate="yes" xml:space="preserve">
          <source>It's even better if you inject the elements unobtrusively, a type of progressive enhancement. (See &lt;a href=&quot;https://stackoverflow.com/questions/134845/href-for-javascript-links-or-javascriptvoid0#134957&quot;&gt;this comment&lt;/a&gt;.)</source>
          <target state="translated">Еще лучше, если вы будете вводить элементы незаметно, что является прогрессивным улучшением. (Смотрите &lt;a href=&quot;https://stackoverflow.com/questions/134845/href-for-javascript-links-or-javascriptvoid0#134957&quot;&gt;этот комментарий&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="d7a3fa77b0b23097c1a73962b4a6a268909df9fd" translate="yes" xml:space="preserve">
          <source>It's shorter than javascript:void(0) and does the same.</source>
          <target state="translated">Он короче,чем javascript:void(0)и делает то же самое.</target>
        </trans-unit>
        <trans-unit id="cfb6fdf6dd9570afa354dfcf688c4ee6c87c5367" translate="yes" xml:space="preserve">
          <source>JavaScript:</source>
          <target state="translated">JavaScript:</target>
        </trans-unit>
        <trans-unit id="027d0cca50d0abcf3c970c19a2fc5d77ab3580f5" translate="yes" xml:space="preserve">
          <source>Just don't have a &lt;code&gt;href&lt;/code&gt; attribute at all! Any good CSS reset would take care of the missing default cursor style, so that is a non-issue. Then attach your JavaScript functionality using graceful and unobtrusive  best practices - which are more maintainable as your JavaScript logic stays in JavaScript, instead of in your markup - which is essential when you start developing large scale JavaScript applications which require your logic to be split up into blackboxed components and templates. More on this in &lt;em&gt;&lt;a href=&quot;http://speakerdeck.com/u/addyosmani/p/large-scale-javascript-application-architecture&quot;&gt;Large-scale JavaScript Application Architecture&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">Просто не имеет атрибута &lt;code&gt;href&lt;/code&gt; вообще! Любой хороший сброс CSS позаботится о отсутствующем стиле курсора по умолчанию, так что это не проблема. Затем добавьте свою функциональность JavaScript, используя изящные и ненавязчивые передовые практики, которые более удобны в обслуживании, поскольку ваша логика JavaScript остается в JavaScript, а не в разметке, что важно, когда вы начинаете разрабатывать крупномасштабные приложения JavaScript, которые требуют, чтобы ваша логика была разбита на черные компоненты и шаблоны. Подробнее об этом в &lt;em&gt;&lt;a href=&quot;http://speakerdeck.com/u/addyosmani/p/large-scale-javascript-application-architecture&quot;&gt;крупномасштабной архитектуре приложений JavaScript&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e79d804ae4c4d2418313f51b0a6c22f6469d32c6" translate="yes" xml:space="preserve">
          <source>Lastly, you can use &lt;code&gt;javascript:void(0)&lt;/code&gt; if you do not want anyone to go anywhere and if you don't want to call a JavaScript function. It works great if you have an image you want a mouseover event to happen with, but there's not anything for the user to click on.</source>
          <target state="translated">Наконец, вы можете использовать &lt;code&gt;javascript:void(0)&lt;/code&gt; если вы не хотите, чтобы кто-то куда-то шел, и если вы не хотите вызывать функцию JavaScript. Это прекрасно работает, если у вас есть изображение, с которым вы хотите, чтобы происходило событие наведения мыши, но пользователю нечего нажимать.</target>
        </trans-unit>
        <trans-unit id="98be2b1aaa56ea07d84773c494e9efaa717f0c18" translate="yes" xml:space="preserve">
          <source>My suggestion would be to use &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; element with the &lt;code&gt;class&lt;/code&gt; attribute instead of
an anchor. For example:</source>
          <target state="translated">Мое предложение было бы использовать элемент &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; с атрибутом &lt;code&gt;class&lt;/code&gt; вместо якоря. Например:</target>
        </trans-unit>
        <trans-unit id="1859e04da42645894d4f5a8456f449d16a579623" translate="yes" xml:space="preserve">
          <source>NOTE: You can replace the &lt;code&gt;0&lt;/code&gt; with a string such as &lt;code&gt;javascript:void('Delete record 123')&lt;/code&gt; which can serve as an extra indicator that will show what the click will actually do.</source>
          <target state="translated">ПРИМЕЧАНИЕ. Вы можете заменить &lt;code&gt;0&lt;/code&gt; на строку, такую ​​как &lt;code&gt;javascript:void('Delete record 123')&lt;/code&gt; которая может служить дополнительным индикатором, который покажет, что на самом деле будет делать щелчок.</target>
        </trans-unit>
        <trans-unit id="7d64ff37b1b1bbb318463de427a0b3e65aad1b34" translate="yes" xml:space="preserve">
          <source>Neither if you ask me;</source>
          <target state="translated">Ни то,ни другое,если ты спросишь меня;</target>
        </trans-unit>
        <trans-unit id="6408fac84dc551a699a1e0a8a0ec23490893a171" translate="yes" xml:space="preserve">
          <source>Neither.</source>
          <target state="translated">Neither.</target>
        </trans-unit>
        <trans-unit id="a4fe7b7b3fdc67415aec63114e067b36a0e3da5d" translate="yes" xml:space="preserve">
          <source>Note, that I negate the result of the &lt;code&gt;doSomething()&lt;/code&gt; function. If it works, it will return &lt;code&gt;true&lt;/code&gt;, so it will be negated (&lt;code&gt;false&lt;/code&gt;) and the &lt;code&gt;path/to/some/URL&lt;/code&gt; will not be called. If the function will return &lt;code&gt;false&lt;/code&gt; (for example, the browser doesn't support something used within the function or anything else goes wrong), it is negated to &lt;code&gt;true&lt;/code&gt; and the &lt;code&gt;path/to/some/URL&lt;/code&gt; is called.</source>
          <target state="translated">Обратите внимание, что я &lt;code&gt;doSomething()&lt;/code&gt; результат функции doSomething () . Если это работает, он вернет &lt;code&gt;true&lt;/code&gt; , поэтому он будет отменен ( &lt;code&gt;false&lt;/code&gt; ) и &lt;code&gt;path/to/some/URL&lt;/code&gt; не будет вызван. Если функция вернет &lt;code&gt;false&lt;/code&gt; (например, браузер не поддерживает что-то используемое внутри функции или что-то еще идет не так), она сводится к &lt;code&gt;true&lt;/code&gt; и вызывается &lt;code&gt;path/to/some/URL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="b4b28229212dbfad05165a5bcaa2d9543543dc27" translate="yes" xml:space="preserve">
          <source>Of course &quot;#&quot; with an onclick handler which prevents default action is [much] better. Moreover, a link that has the sole purpose to run JavaScript is not really &quot;a link&quot; unless you are sending user to some sensible anchor on the page (just # will send to top) when something goes wrong. You can simply simulate look and feel of link with stylesheet and forget about href at all.</source>
          <target state="translated">Конечно,&quot;#&quot; с обработчиком кликов,который предотвращает действия по умолчанию лучше [гораздо].Более того,ссылка,которая имеет единственную цель запуска JavaScript,на самом деле не является &quot;ссылкой&quot;,если только вы не посылаете пользователя на какой-нибудь разумный якорь на странице (просто#будет посылать вверх),когда что-то пойдет не так.Вы можете просто имитировать внешний вид ссылки с помощью таблицы стилей и вообще забыть о href.</target>
        </trans-unit>
        <trans-unit id="3f89a0eec1da10518de63068696e628968159d46" translate="yes" xml:space="preserve">
          <source>Omitting the &lt;code&gt;href&lt;/code&gt; attribute on the &lt;code&gt;a&lt;/code&gt; element will cause &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_6&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;6&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_7&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;7&lt;/a&gt; to not take on the &lt;code&gt;a:hover&lt;/code&gt; styling, which is why we have added a simple JavaScript shim to accomplish this via &lt;code&gt;a.hover&lt;/code&gt; instead. Which is perfectly okay, as if you don't have a href attribute and no graceful degradation then your link won't work anyway - and you'll have bigger issues to worry about.</source>
          <target state="translated">Отсутствие атрибута &lt;code&gt;href&lt;/code&gt; в элементе &lt;code&gt;a&lt;/code&gt; приведет к тому, что &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_6&quot;&gt;Internet Explorer 6&lt;/a&gt; и &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_7&quot;&gt;Internet Explorer 7&lt;/a&gt; не примут &lt;code&gt;a:hover&lt;/code&gt; оформление a: hover , поэтому мы добавили простую &lt;code&gt;a.hover&lt;/code&gt; JavaScript для выполнения этого через a.hover . Это совершенно нормально, так как если у вас нет атрибута href и нет постепенного ухудшения качества, ваша ссылка все равно не будет работать - и у вас возникнут большие проблемы, о которых нужно беспокоиться.</target>
        </trans-unit>
        <trans-unit id="79d90211195df24c07a1f39be84dcafb2c0c0cff" translate="yes" xml:space="preserve">
          <source>Omitting the &lt;code&gt;href&lt;/code&gt; attribute on the &lt;code&gt;a&lt;/code&gt; element will cause the element to not be accessible using &lt;code&gt;tab&lt;/code&gt; key navigation. If you wish for those elements to be accessible via the &lt;code&gt;tab&lt;/code&gt; key, you can set the &lt;code&gt;tabindex&lt;/code&gt; attribute, or use &lt;code&gt;button&lt;/code&gt; elements instead. You can easily style button elements to look like normal links as mentioned in &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/a/8525002/130638&quot;&gt;Tracker1's answer&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">Отсутствие атрибута &lt;code&gt;href&lt;/code&gt; в элементе &lt;code&gt;a&lt;/code&gt; приведет к тому, что элемент будет недоступен с помощью навигации по клавише &lt;code&gt;tab&lt;/code&gt; . Если вы хотите, чтобы эти элементы были доступны через клавишу &lt;code&gt;tab&lt;/code&gt; , вы можете установить атрибут &lt;code&gt;tabindex&lt;/code&gt; или использовать вместо него элементы &lt;code&gt;button&lt;/code&gt; . Вы можете легко &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/a/8525002/130638&quot;&gt;стилизовать&lt;/a&gt;&lt;/em&gt; элементы кнопок, чтобы они выглядели как обычные ссылки, как указано в &lt;em&gt;ответе Tracker1&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="fd9e05ef7026ea1d31a3a27b1cbc509e85605be2" translate="yes" xml:space="preserve">
          <source>Or, even better, you'd have the default action link in the HTML, and you'd add the onclick event to the element unobtrusively via JavaScript after the DOM renders, thus ensuring that if JavaScript is not present/utilized you don't have useless event handlers riddling your code and potentially obfuscating (or at least distracting from) your actual content.</source>
          <target state="translated">Или,что еще лучше,у вас будет ссылка по умолчанию в HTML,и вы добавите событие щелчка мыши к элементу ненавязчиво через JavaScript после вывода DOM,таким образом гарантируя,что если JavaScript не используется заранее,у вас не будет бесполезных обработчиков событий,разбрасывающих ваш код и потенциально отвлекающих (или,по крайней мере,отвлекающих)ваше фактическое содержимое.</target>
        </trans-unit>
        <trans-unit id="03c75c5ce96ade25b0a822150e4ade9ee3d0f56d" translate="yes" xml:space="preserve">
          <source>See here &lt;a href=&quot;https://stackoverflow.com/a/45465728/2803344&quot;&gt;https://stackoverflow.com/a/45465728/2803344&lt;/a&gt;</source>
          <target state="translated">Смотрите здесь &lt;a href=&quot;https://stackoverflow.com/a/45465728/2803344&quot;&gt;https://stackoverflow.com/a/45465728/2803344&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48f1019bcb9fa24ea0f76248ea083a4c0cd02134" translate="yes" xml:space="preserve">
          <source>Simple code example</source>
          <target state="translated">Простой пример кода</target>
        </trans-unit>
        <trans-unit id="6badb4f47fa2047e5ad167fd7ff402e1d9f4868c" translate="yes" xml:space="preserve">
          <source>Simple enough!</source>
          <target state="translated">Всё просто!</target>
        </trans-unit>
        <trans-unit id="49478b0f42b3a3835f22e0884382200e0c658115" translate="yes" xml:space="preserve">
          <source>So if you're a lone developer then you can clearly make your own choice, but if you work as a team you have to either state:</source>
          <target state="translated">Так что если вы одинокий разработчик,то вы,безусловно,можете сделать свой собственный выбор,но если вы работаете как команда,то вы должны либо заявить об этом:</target>
        </trans-unit>
        <trans-unit id="1ac335dc215eec9b9f35bf9b20acd9ed338242ca" translate="yes" xml:space="preserve">
          <source>So, &lt;strong&gt;there is one benefit&lt;/strong&gt; to use &lt;code&gt;&amp;lt;a href=&quot;#&quot;&amp;gt;&lt;/code&gt;. You get the cursor pointer by default on that element when you do &lt;code&gt;a href=&quot;#&quot;&lt;/code&gt;. For that, I think you can use CSS for this like &lt;code&gt;cursor:pointer;&lt;/code&gt; which solves this problem also.</source>
          <target state="translated">Таким образом, &lt;strong&gt;есть одно преимущество:&lt;/strong&gt; &lt;code&gt;&amp;lt;a href=&quot;#&quot;&amp;gt;&lt;/code&gt; . Вы получаете указатель курсора по умолчанию на этом элементе, когда делаете &lt;code&gt;a href=&quot;#&quot;&lt;/code&gt; . Для этого, я думаю, вы можете использовать CSS для этого, как &lt;code&gt;cursor:pointer;&lt;/code&gt; которая решает эту проблему также.</target>
        </trans-unit>
        <trans-unit id="4a70586a9842b7d5401479afaec3f0a019fa6c2c" translate="yes" xml:space="preserve">
          <source>So, if you see, it's better not to use a tag for this kind of stuff.</source>
          <target state="translated">Так что,если вы видите,лучше не использовать метку для таких вещей.</target>
        </trans-unit>
        <trans-unit id="d2627d25180adeafcf0f79b745b4905945e14598" translate="yes" xml:space="preserve">
          <source>So, when you are doing some JavaScript things with an &lt;code&gt;&amp;lt;a /&amp;gt;&lt;/code&gt; tag and if you put &lt;code&gt;href=&quot;#&quot;&lt;/code&gt; as well, you can add &lt;strong&gt;return false&lt;/strong&gt; at the end of the event &lt;em&gt;(in case of inline event binding)&lt;/em&gt; like:</source>
          <target state="translated">Таким образом, когда вы делаете некоторые вещи JavaScript с тегом &lt;code&gt;&amp;lt;a /&amp;gt;&lt;/code&gt; , и если вы также добавили &lt;code&gt;href=&quot;#&quot;&lt;/code&gt; , вы можете добавить &lt;strong&gt;return false&lt;/strong&gt; в конце события &lt;em&gt;(в случае связывания встроенного события),&lt;/em&gt; например:</target>
        </trans-unit>
        <trans-unit id="7abfe43b1386b494fd45872b2cc6943e02d94ab9" translate="yes" xml:space="preserve">
          <source>That way, people with JavaScript disabled are directed to &lt;code&gt;search.php&lt;/code&gt; while your viewers with JavaScript view your enhanced functionality.</source>
          <target state="translated">Таким образом, люди с отключенным JavaScript направляются на &lt;code&gt;search.php&lt;/code&gt; ,в то время как ваши зрители с JavaScript видят вашу расширенную функциональность.</target>
        </trans-unit>
        <trans-unit id="f0ea564302a451fd2f0c6f42304e263314f68d81" translate="yes" xml:space="preserve">
          <source>The anchor tag markup will be like</source>
          <target state="translated">Разметка якорного тега будет похожа на</target>
        </trans-unit>
        <trans-unit id="1fa21ff042ee48d76e87bfc5b42429623407e190" translate="yes" xml:space="preserve">
          <source>The first one, ideally with a real link to follow in case the user has JavaScript disabled. Just make sure to return false to prevent the click event from firing if the JavaScript executes.</source>
          <target state="translated">Первый,в идеале с реальной ссылкой на случай,если у пользователя отключен JavaScript.Просто убедитесь,что возвращается false,чтобы предотвратить обстрел события клика,если JavaScript выполняется.</target>
        </trans-unit>
        <trans-unit id="1daf7431c85ba11ffd7dc6ff69bf824dd7a20830" translate="yes" xml:space="preserve">
          <source>The following are two methods of building a link that has the sole purpose of running JavaScript code. Which is better, in terms of functionality, page load speed, validation purposes, etc.?</source>
          <target state="translated">Ниже приведены два метода построения ссылки,единственной целью которой является запуск JavaScript-кода.Что лучше с точки зрения функциональности,скорости загрузки страницы,целей проверки и т.д.?</target>
        </trans-unit>
        <trans-unit id="269c0d128dd6aa15c46409249e0cb329a40beab5" translate="yes" xml:space="preserve">
          <source>The hash tag can cause unexpected behavior if the click falls through (onclick throws), avoid it unless it's an appropriate fall-through behavior, and you want to change the navigation history.</source>
          <target state="translated">Хэш-тег может привести к неожиданному поведению,если щелчок выпадает (щелчок бросает),избегайте его,если только это не является подходящим поведением при падении,и вы хотите изменить историю навигации.</target>
        </trans-unit>
        <trans-unit id="c4494667d2a969ff9ab74b014574747d77306b24" translate="yes" xml:space="preserve">
          <source>The problem with this approach is, that if the function will not work or if there will be any problem, the link will become unclickable. Onclick event will always return &lt;code&gt;false&lt;/code&gt;, so the normal URL will not be called.</source>
          <target state="translated">Проблема этого подхода заключается в том, что если функция не будет работать или возникнут какие-либо проблемы, ссылка станет неактивной. Событие Onclick всегда будет возвращать &lt;code&gt;false&lt;/code&gt; , поэтому обычный URL не будет вызываться.</target>
        </trans-unit>
        <trans-unit id="4b58746c8c626555acaac41aff5e2ead214c95fe" translate="yes" xml:space="preserve">
          <source>The second is clearly much easier to communicate.</source>
          <target state="translated">Очевидно,что второй гораздо проще в общении.</target>
        </trans-unit>
        <trans-unit id="482e865b307b47aa297b58a84ea961e535f68ee1" translate="yes" xml:space="preserve">
          <source>The unobtrusive JavaScript way</source>
          <target state="translated">Ненавязчивый метод JavaScript.</target>
        </trans-unit>
        <trans-unit id="a9ff79e11576caa15996b6365f7cd93425fd9adc" translate="yes" xml:space="preserve">
          <source>The use of href=&quot;#&quot; scrolls the page to the top; the use of void(0) creates navigational problems within the browser.</source>
          <target state="translated">Использование href=&quot;#&quot; прокручивает страницу вверх;использование void(0)создает проблемы навигации внутри браузера.</target>
        </trans-unit>
        <trans-unit id="614fa21c604f3659b02c8f778f1538fdd087da29" translate="yes" xml:space="preserve">
          <source>Then assign the function to &lt;code&gt;.link&lt;/code&gt; with a script wrapped in the body and just before the &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; tag or in an external JavaScript document.</source>
          <target state="translated">Затем назначьте функцию &lt;code&gt;.link&lt;/code&gt; со сценарием, заключенным в тело и непосредственно перед &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; или во внешний документ JavaScript.</target>
        </trans-unit>
        <trans-unit id="b20f1b8c943debdc2004de3e35bd0bd8eee1f28c" translate="yes" xml:space="preserve">
          <source>Then in jQuery, I add the following code:</source>
          <target state="translated">Затем в jQuery я добавляю следующий код:</target>
        </trans-unit>
        <trans-unit id="17feadbe346f495f0e3d2b51a1ff2d982ff5b7a1" translate="yes" xml:space="preserve">
          <source>Then you can style the span element to look like an anchor with a little CSS:</source>
          <target state="translated">Тогда вы можете стилизовать элемент span,чтобы выглядеть как якорь с небольшим CSS:</target>
        </trans-unit>
        <trans-unit id="f0bf07952005c3ec2fcb4e80a0427801536e162e" translate="yes" xml:space="preserve">
          <source>There are now better, easier, and more maintainable and scalable ways of accomplishing the desired result.</source>
          <target state="translated">В настоящее время существуют лучшие,более простые и более ремонтопригодные и масштабируемые способы достижения желаемого результата.</target>
        </trans-unit>
        <trans-unit id="6735f9d73a2577bbd369c3fd2c10bf6b092a89df" translate="yes" xml:space="preserve">
          <source>There's very simple solution. Let function return &lt;code&gt;true&lt;/code&gt; if it works correctly. Then use the returned value to determine if the click should be cancelled or not:</source>
          <target state="translated">Там очень простое решение. Пусть функция вернет &lt;code&gt;true&lt;/code&gt; , если она работает правильно. Затем используйте возвращенное значение, чтобы определить, следует ли отменить щелчок или нет:</target>
        </trans-unit>
        <trans-unit id="98a9fb4ccab373e333dbb2ff3a74f3cae1e4513a" translate="yes" xml:space="preserve">
          <source>Therefore, you don't need to explicitly return &lt;code&gt;false&lt;/code&gt; with JavaScript</source>
          <target state="translated">Поэтому вам не нужно явно возвращать &lt;code&gt;false&lt;/code&gt; с JavaScript</target>
        </trans-unit>
        <trans-unit id="1d7c8da4b8b4ff05efe2ee43a1441aa8483e5da0" translate="yes" xml:space="preserve">
          <source>This makes the &lt;code&gt;href&lt;/code&gt; simple, search engines need it. If you use anything else ( such as a string), it may cause a &lt;code&gt;404 not found&lt;/code&gt; error.</source>
          <target state="translated">Это делает &lt;code&gt;href&lt;/code&gt; простым, это нужно поисковым системам. Если вы используете что-то еще (например, строку), это может вызвать ошибку &lt;code&gt;404 not found&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ebabe065f2e6d6d97bdcb17d4b76aeefaaba9ae" translate="yes" xml:space="preserve">
          <source>This way you can assign your onclick.  I also suggest binding via script, not using the &lt;code&gt;onclick&lt;/code&gt; attribute on the element tag.  The only gotcha is the psuedo 3d text effect in older IEs that cannot be disabled.</source>
          <target state="translated">Таким образом, вы можете назначить свой клик. Я также предлагаю связывать через скрипт, не используя атрибут &lt;code&gt;onclick&lt;/code&gt; в теге element. Единственный недостаток - это текстовый эффект psuedo в старых IE, который нельзя отключить.</target>
        </trans-unit>
        <trans-unit id="702b86d5b5cbacb5b92c4fcf82a98463957cc2d0" translate="yes" xml:space="preserve">
          <source>Three reasons. Encouraging the use of &lt;code&gt;#&lt;/code&gt; amongst a team of developers inevitably leads to some using the return value of the function called like this:</source>
          <target state="translated">Три причины Поощрение использования &lt;code&gt;#&lt;/code&gt; среди команды разработчиков неизбежно приводит к тому, что некоторые используют возвращаемое значение функции, называемой так:</target>
        </trans-unit>
        <trans-unit id="20772c2b98562800fba03c386b95e46f651eaba2" translate="yes" xml:space="preserve">
          <source>Typically, I like to just avoid using a link at all and just wrap something around in a span and use that as a way to active some JavaScript code, like a pop-up or a content-reveal.</source>
          <target state="translated">Обычно мне нравится просто избегать использования ссылки вообще и просто обернуть что-нибудь вокруг и использовать это как способ активировать некоторый JavaScript-код,например,всплывающее окно или контент-раскрытие.</target>
        </trans-unit>
        <trans-unit id="7cb22bdab3f97840c6388285c6c482bb1dd83b0e" translate="yes" xml:space="preserve">
          <source>Unless you're writing out the link using JavaScript (so that you know it's enabled in the browser), you should ideally be providing a proper link for people who are browsing with JavaScript disabled and then prevent the default action of the link in your onclick event handler. This way those with JavaScript enabled will run the function and those with JavaScript disabled will jump to an appropriate page (or location within the same page) rather than just clicking on the link and having nothing happen.</source>
          <target state="translated">Если вы не выписываете ссылку с помощью JavaScript (чтобы вы знали,что она включена в браузере),в идеале вы должны предоставить правильную ссылку для людей,которые просматривают страницы с отключенным JavaScript,а затем предотвратить действие ссылки по умолчанию в вашем обработчике событий щелчка по кнопке мыши.Таким образом,те,у кого JavaScript включен,будут запускать функцию,а те,у кого JavaScript отключен,перейдут на соответствующую страницу (или местоположение внутри одной страницы),а не просто нажимать на ссылку и ничего не произойдет.</target>
        </trans-unit>
        <trans-unit id="7b8695724e414bfa1bb582fecd14c6afe7795c3e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;href=&quot;#&quot;&lt;/code&gt;, make sure &lt;code&gt;onclick&lt;/code&gt; always contains &lt;code&gt;return false;&lt;/code&gt; at the end, that any called function does not throw an error and if you attach a function dynamically to the &lt;code&gt;onclick&lt;/code&gt; property make sure that as well as not throwing an error it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Используйте &lt;code&gt;href=&quot;#&quot;&lt;/code&gt; , убедитесь, что &lt;code&gt;onclick&lt;/code&gt; всегда содержит &lt;code&gt;return false;&lt;/code&gt; в конце концов, любая вызываемая функция не выдает ошибку, и если вы динамически присоединяете функцию к свойству &lt;code&gt;onclick&lt;/code&gt; , убедитесь, что она не выдает ошибку, а возвращает &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0128b97172aa885ce9e934954b105231cdc32b48" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;href=&quot;javascript:void(0)&quot;&lt;/code&gt;</source>
          <target state="translated">Используйте &lt;code&gt;href=&quot;javascript:void(0)&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a12a5998cd4a1a292c19fd32f9761fd034d7d9f0" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;http://en.wikipedia.org/wiki/Search_engine_optimization&quot;&gt;SEO&lt;/a&gt; friendly URL routes in your application, such as /Home/Action/Parameters is a good practice as well. If you have a link to a page that works without JavaScript first, you can enhance the experience afterward. Use a real link to a working page, then add an onlick event to enhance the presentation.</source>
          <target state="translated">Использование &lt;a href=&quot;http://en.wikipedia.org/wiki/Search_engine_optimization&quot;&gt;SEO-&lt;/a&gt; дружественных URL-маршрутов в вашем приложении, таких как / Home / Action / Parameters, также является хорошей практикой. Если у вас есть ссылка на страницу, которая сначала работает без JavaScript, вы можете улучшить работу с ней позже. Используйте реальную ссылку на рабочую страницу, затем добавьте событие onlick, чтобы улучшить презентацию.</target>
        </trans-unit>
        <trans-unit id="c4dbe03c8c4b7cfc862655b2cc0c5360e6012dab" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;javascript:void(0)&lt;/code&gt; avoids all of the above headaches, and I haven't found any examples of a downside.</source>
          <target state="translated">Использование &lt;code&gt;javascript:void(0)&lt;/code&gt; позволяет избежать всех вышеперечисленных головных болей, и я не нашел примеров недостатков.</target>
        </trans-unit>
        <trans-unit id="db11279fac943ad89d6f69763bf7811bca9ce6c9" translate="yes" xml:space="preserve">
          <source>Using just &lt;code&gt;#&lt;/code&gt; makes some funny movements, so I would recommend to use &lt;code&gt;#self&lt;/code&gt; if you would like to save on typing efforts of &lt;code&gt;JavaScript bla, bla,&lt;/code&gt;.</source>
          <target state="translated">Использование просто &lt;code&gt;#&lt;/code&gt; делает несколько забавных движений, поэтому я бы порекомендовал использовать &lt;code&gt;#self&lt;/code&gt; , если вы хотите сэкономить на наборе текста в &lt;code&gt;JavaScript bla, bla,&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc1cda1dd2ead613cec7da19ef5d6a915ebf4f35" translate="yes" xml:space="preserve">
          <source>Usually, you should always have a fall back link to make sure that clients with JavaScript disabled still has some functionality. This concept is called unobtrusive JavaScript.</source>
          <target state="translated">Обычно,вы всегда должны иметь обратную ссылку,чтобы убедиться,что клиенты с отключенным JavaScript все еще имеют некоторую функциональность.Эта концепция называется ненавязчивым JavaScript.</target>
        </trans-unit>
        <trans-unit id="6954c3bbb0379e79fe70bcb4796810ec355f4b94" translate="yes" xml:space="preserve">
          <source>When I've got several faux-links, I prefer to give them a class of 'no-link'.</source>
          <target state="translated">Когда у меня есть несколько фальшивых ссылок,я предпочитаю дать им класс &quot;без ссылок&quot;.</target>
        </trans-unit>
        <trans-unit id="f8e2369b8d99375a6e5639486043b3d2146e4b56" translate="yes" xml:space="preserve">
          <source>When mouse hovers over the link, it doesn't show that it is a script.</source>
          <target state="translated">Когда мышь наведет курсор на ссылку,это не покажет,что это скрипт.</target>
        </trans-unit>
        <trans-unit id="61b44bbc89b917fa7c30a0f1a3f58894ad655538" translate="yes" xml:space="preserve">
          <source>Which will not do anything.</source>
          <target state="translated">Который ничего не сделает.</target>
        </trans-unit>
        <trans-unit id="a314a0ef6189eb65d5b3e4debee37ac4fae3168f" translate="yes" xml:space="preserve">
          <source>Which “href” value should I use for JavaScript links, “#” or “javascript:void(0)”</source>
          <target state="translated">Какое значение &quot;href&quot; я должен использовать для JavaScript ссылок,&quot;#&quot; или &quot;javascript:void(0)&quot;.</target>
        </trans-unit>
        <trans-unit id="2a61d37d475e6b6597176eb106fb6d1c59b1e618" translate="yes" xml:space="preserve">
          <source>Will always intercept in case your onclick event fails.</source>
          <target state="translated">Всегда будет перехватывать на случай,если ваше событие клика не удастся.</target>
        </trans-unit>
        <trans-unit id="731d0ff294ec0c3887a1f04959fba2a5602adff4" translate="yes" xml:space="preserve">
          <source>Will not have errant load calls happen, or trigger other events based on a hash change</source>
          <target state="translated">Не будут происходить ошибочные вызовы загрузки или вызывать другие события,основанные на изменении хэш-функции.</target>
        </trans-unit>
        <trans-unit id="3738d55a9cad1f32952968ee8cbc0cf807b6e3f9" translate="yes" xml:space="preserve">
          <source>You can always do the following:</source>
          <target state="translated">Вы всегда можете сделать следующее:</target>
        </trans-unit>
        <trans-unit id="da7531d336c39a47e5eaed5fa94893126500dc7d" translate="yes" xml:space="preserve">
          <source>You can attach events (click, hover, etc.) on almost every element, so why not just use a &lt;code&gt;span&lt;/code&gt;or a &lt;code&gt;div&lt;/code&gt;?</source>
          <target state="translated">Вы можете прикрепить события (щелчок, наведение и т. Д.) Практически к каждому элементу, так почему бы просто не использовать &lt;code&gt;span&lt;/code&gt; или &lt;code&gt;div&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="ab971355f6658d7288c950fff818ea0aa5ea9f9b" translate="yes" xml:space="preserve">
          <source>You can simply use a &lt;code&gt;&amp;lt;button /&amp;gt;&lt;/code&gt; instead to do things or any other element like b, span or whatever fits there as per your need, because you are allowed to add events on all the elements.</source>
          <target state="translated">Вместо этого вы можете просто использовать &lt;code&gt;&amp;lt;button /&amp;gt;&lt;/code&gt; для выполнения каких-либо действий или любых других элементов, таких как b, span или что-то еще, что вам нужно, потому что вам разрешено добавлять события на все элементы.</target>
        </trans-unit>
        <trans-unit id="e7a36ec7a3315f07240fb3666b9b0045b809b1ef" translate="yes" xml:space="preserve">
          <source>You should always strive for graceful degradation (in the event that the user doesn't have JavaScript enabled...and when it is with specs. and budget).  Also, it is considered bad form to use JavaScript attributes and protocol directly in HTML.</source>
          <target state="translated">Вы всегда должны стремиться к изящной деградации (в случае,если у пользователя не включен JavaScript...и когда он имеет спецификации и бюджет).Также плохой формой считается использование JavaScript атрибутов и протокола непосредственно в HTML.</target>
        </trans-unit>
        <trans-unit id="619ece4847838fa5df03de55dd03cce3f3c0a698" translate="yes" xml:space="preserve">
          <source>You're spending your time writing incredibly overly verbose code - which has very little (if any) benefit to your codebase.</source>
          <target state="translated">Вы тратите свое время на написание невероятно многословного кода,который имеет очень мало (если таковой вообще есть)пользы для вашей кодовой базы.</target>
        </trans-unit>
        <trans-unit id="8699b249c4dcf2e85dacd055f92f3fd58667de39" translate="yes" xml:space="preserve">
          <source>and omit both &lt;code&gt;href=&quot;#&quot;&lt;/code&gt; and &lt;code&gt;href=&quot;javascript:void(0)&quot;&lt;/code&gt;.</source>
          <target state="translated">и опустите &lt;code&gt;href=&quot;#&quot;&lt;/code&gt; и &lt;code&gt;href=&quot;javascript:void(0)&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b54c9fdd392c0c6c0634d55188bd5d64387083d8" translate="yes" xml:space="preserve">
          <source>instantiates new copy of engine</source>
          <target state="translated">инстанцирует новую копию движка</target>
        </trans-unit>
        <trans-unit id="571d5bc739cc9f7bbab15b2de12fe6c2903c98a9" translate="yes" xml:space="preserve">
          <source>instead</source>
          <target state="translated">instead</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="dc07658cb62d9aef55e874007ead4934d0b9c2bc" translate="yes" xml:space="preserve">
          <source>pollutes history</source>
          <target state="translated">история загрязнений</target>
        </trans-unit>
        <trans-unit id="5b0a43ff2ce4a480c6dd584e5f5cc50c43071f56" translate="yes" xml:space="preserve">
          <source>runs in global scope and doesn't respect event system.</source>
          <target state="translated">работает в глобальном масштабе и не уважает систему событий.</target>
        </trans-unit>
        <trans-unit id="ab7fd42e195f24dca7b841f1fff928b3bf815ee3" translate="yes" xml:space="preserve">
          <source>with little bit of jQuery</source>
          <target state="translated">с небольшим количеством jQuery</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
