<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/134845">
    <body>
      <group id="134845">
        <trans-unit id="bd9a05fc79dc919ee8f37187136cd170c86ec000" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#&lt;/code&gt; is better than &lt;code&gt;javascript:anything&lt;/code&gt;, but the following is even better:</source>
          <target state="translated">&lt;code&gt;#&lt;/code&gt; es mejor que &lt;code&gt;javascript:anything&lt;/code&gt; , pero lo siguiente es a&amp;uacute;n mejor:</target>
        </trans-unit>
        <trans-unit id="d13303585dad04c88853285805c96d301ae351ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;a [routerLink]=&quot;&quot; (click)=&quot;passTheSalt()&quot;&amp;gt;Click me&amp;lt;/a&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;a [routerLink]=&quot;&quot; (click)=&quot;passTheSalt()&quot;&amp;gt;Click me&amp;lt;/a&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66098ba4c05ecdfacd9f658027335da408922dd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'#'&lt;/code&gt; will take the user back to the top of the page, so I usually go with &lt;code&gt;void(0)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'#'&lt;/code&gt; llevar&amp;aacute; al usuario de regreso a la parte superior de la p&amp;aacute;gina, por lo que generalmente uso &lt;code&gt;void(0)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="312f97c5a58e6153e44c36e633daf36e3ba7f7a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;javascript:;&lt;/code&gt; also behaves like &lt;code&gt;javascript:void(0);&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;javascript:;&lt;/code&gt; tambi&amp;eacute;n se comporta como &lt;code&gt;javascript:void(0);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d630050255eb1447bf20aa08fa1d2d8f3b9370be" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Or you can change the &lt;strong&gt;href&lt;/strong&gt; attribute with JavaScript like:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;O puede cambiar el atributo &lt;strong&gt;href&lt;/strong&gt; con JavaScript como:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a1b67b7d55d05fa470b042c000c35c102854a70a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;*Note:&lt;/strong&gt; For dynamically created elements, use:</source>
          <target state="translated">&lt;strong&gt;* Nota:&lt;/strong&gt; Para elementos creados din&amp;aacute;micamente, use:</target>
        </trans-unit>
        <trans-unit id="dd18ad4d12234247b1086240c340527f7ff571a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Don't use links for the sole purpose of running JavaScript.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;No use enlaces con el &amp;uacute;nico prop&amp;oacute;sito de ejecutar JavaScript.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1ed559f58d1012098e76aa02f5987633940fcf2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTML&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;HTML&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45565dc2a4e38dfb88e321711fd07ae8f3e420e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JavaScript&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;JavaScript&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b423dbffd6212f2c51f0b1683e68068ddc8f1493" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reasons:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Reasons:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="279e0a0c57b48964447c3c7b49cb421013744ca1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;or&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;or&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="64a36367510a74320eeb73e9f7eb07284507c67a" translate="yes" xml:space="preserve">
          <source>A blackboxed &lt;em&gt;&lt;a href=&quot;http://documentcloud.github.com/backbone/&quot;&gt;Backbone.js&lt;/a&gt;&lt;/em&gt; example</source>
          <target state="translated">Un ejemplo de &lt;em&gt;&lt;a href=&quot;http://documentcloud.github.com/backbone/&quot;&gt;Backbone.js en&lt;/a&gt;&lt;/em&gt; caja negra</target>
        </trans-unit>
        <trans-unit id="37a8070f7c88e3349acd823f028acbc805037eb6" translate="yes" xml:space="preserve">
          <source>A second reason for avoiding &lt;code&gt;#&lt;/code&gt; is that the final &lt;code&gt;return false;&lt;/code&gt; will not execute if the called function throws an error. Hence the developers have to also remember to handle any error appropriately in the called function.</source>
          <target state="translated">Una segunda raz&amp;oacute;n para evitar &lt;code&gt;#&lt;/code&gt; es que el &lt;code&gt;return false;&lt;/code&gt; final es falso; no se ejecutar&amp;aacute; si la funci&amp;oacute;n llamada arroja un error. Por lo tanto, los desarrolladores tambi&amp;eacute;n deben recordar manejar cualquier error adecuadamente en la funci&amp;oacute;n llamada.</target>
        </trans-unit>
        <trans-unit id="21105a7cdd1e4d498a450d175c3236a8e1dd36cd" translate="yes" xml:space="preserve">
          <source>A third reason is that there are cases where the &lt;code&gt;onclick&lt;/code&gt; event property is assigned dynamically.  I prefer to be able to call a function or assign it dynamically without having to code the function specifically for one method of attachment or another. Hence my &lt;code&gt;onclick&lt;/code&gt; (or on anything) in HTML markup look like this:</source>
          <target state="translated">Una tercera raz&amp;oacute;n es que hay casos en los que la propiedad del evento &lt;code&gt;onclick&lt;/code&gt; se asigna din&amp;aacute;micamente. Prefiero poder llamar a una funci&amp;oacute;n o asignarla din&amp;aacute;micamente sin tener que codificar la funci&amp;oacute;n espec&amp;iacute;ficamente para un m&amp;eacute;todo de conexi&amp;oacute;n u otro. Por lo tanto, mi &lt;code&gt;onclick&lt;/code&gt; (o cualquier cosa) en el marcado HTML se ve as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="a4ed08c4c6145cdd2af098012bc4d6243908855f" translate="yes" xml:space="preserve">
          <source>And at the end, if you are binding the event from the JavaScript code itself, there you can do &lt;code&gt;event.preventDefault()&lt;/code&gt; to achieve this if you are using &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag, but if you are not using a &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag for this, there you get an advantage, you don't need to do this.</source>
          <target state="translated">Y al final, si est&amp;aacute; vinculando el evento desde el c&amp;oacute;digo JavaScript, puede hacer &lt;code&gt;event.preventDefault()&lt;/code&gt; para lograr esto si est&amp;aacute; usando la etiqueta &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; , pero si no est&amp;aacute; usando una etiqueta &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; para esto, all&amp;iacute; obtienes una ventaja, no necesitas hacer esto.</target>
        </trans-unit>
        <trans-unit id="6d47584a657f22627c286c065b01ef0eec3ff30e" translate="yes" xml:space="preserve">
          <source>And for dynamically created elements which are created with dynamically created elements, use:</source>
          <target state="translated">Y para los elementos creados dinámicamente que son creados con elementos creados dinámicamente,use:</target>
        </trans-unit>
        <trans-unit id="453026dc796aeb6d29ddf8df59d8b46fa665a396" translate="yes" xml:space="preserve">
          <source>And for the HTML, the link is simply</source>
          <target state="translated">Y para el HTML,el enlace es simplemente</target>
        </trans-unit>
        <trans-unit id="95f5aa76b12c67b525c77c3e75be466cc937bf2c" translate="yes" xml:space="preserve">
          <source>And for users with JavaScript disabled: if there isn't a fallback (for example, an alternative &lt;code&gt;href&lt;/code&gt;), they should at least not be able to see and interact with that element at all, whatever it is an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; or a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">Y para los usuarios con JavaScript deshabilitado: si no hay una reserva (por ejemplo, una alternativa &lt;code&gt;href&lt;/code&gt; ), al menos no deber&amp;iacute;an poder ver e interactuar con ese elemento, sea lo que sea un &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; o un &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; etiqueta.</target>
        </trans-unit>
        <trans-unit id="e88eec5c27cba3632c0d40e5cbd3edd4fd8e378c" translate="yes" xml:space="preserve">
          <source>And style it with CSS:</source>
          <target state="translated">Y darle estilo con el CSS:</target>
        </trans-unit>
        <trans-unit id="35a844c6a80cfc07cc920daac48c12d3b58f5465" translate="yes" xml:space="preserve">
          <source>But I'm using that just for preventing the page jumping to the top when the user clicks on an empty anchor. I'm rarely using onClick and other &lt;code&gt;on&lt;/code&gt; events directly in HTML.</source>
          <target state="translated">Pero estoy usando eso solo para evitar que la p&amp;aacute;gina salte a la parte superior cuando el usuario hace clic en un ancla vac&amp;iacute;a. Raramente uso onClick y otros eventos directamente en HTML.</target>
        </trans-unit>
        <trans-unit id="99a146f23e49914b10a58de2f533ddb845149264" translate="yes" xml:space="preserve">
          <source>But semantically, all the above ways to achieve this are wrong &lt;em&gt;(it works fine though)&lt;/em&gt;. If any element is not created to navigate the page and that have some JavaScript things associated with it, then it should not be a &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">Pero sem&amp;aacute;nticamente, todas las formas anteriores para lograr esto est&amp;aacute;n mal &lt;em&gt;(aunque funciona bien)&lt;/em&gt; . Si alg&amp;uacute;n elemento no se crea para navegar por la p&amp;aacute;gina y tiene algunas cosas de JavaScript asociadas, entonces no deber&amp;iacute;a ser una etiqueta &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbd07b5abfd55cfe055cb14acc954e5ad57b454b" translate="yes" xml:space="preserve">
          <source>But then they forget to use &lt;code&gt;return doSomething()&lt;/code&gt; in the onclick and just use &lt;code&gt;doSomething()&lt;/code&gt;.</source>
          <target state="translated">Pero luego se olvidan de usar &lt;code&gt;return doSomething()&lt;/code&gt; en el onclick y simplemente usan &lt;code&gt;doSomething()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b42a1500b25c0660b57181b19c01d4b3eb7c6fbf" translate="yes" xml:space="preserve">
          <source>By using &lt;code&gt;return false;&lt;/code&gt;, the page doesn't jump to the top or break the &lt;code&gt;back&lt;/code&gt; button.</source>
          <target state="translated">Al usar &lt;code&gt;return false;&lt;/code&gt; , la p&amp;aacute;gina no salta a la parte superior ni rompe el bot&amp;oacute;n &lt;code&gt;back&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fdc74074ca47c21bd3b21b6aeb8f256f90c8e2c9" translate="yes" xml:space="preserve">
          <source>Check out &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Unobtrusive_JavaScript&quot;&gt;Unobtrusive JavaScript&lt;/a&gt;&lt;/em&gt; and &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Progressive_enhancement&quot;&gt;Progressive enhancement&lt;/a&gt;&lt;/em&gt; (both Wikipedia).</source>
          <target state="translated">Consulte &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Unobtrusive_JavaScript&quot;&gt;JavaScript discreto&lt;/a&gt;&lt;/em&gt; y &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Progressive_enhancement&quot;&gt;mejora progresiva&lt;/a&gt;&lt;/em&gt; (ambos Wikipedia).</target>
        </trans-unit>
        <trans-unit id="a2b39636986a25ff8379e8d673a9d2a172edde07" translate="yes" xml:space="preserve">
          <source>Definitely hash (&lt;code&gt;#&lt;/code&gt;) is better because in JavaScript it is a pseudoscheme:</source>
          <target state="translated">Definitivamente el hash ( &lt;code&gt;#&lt;/code&gt; ) es mejor porque en JavaScript es un pseudoesquema:</target>
        </trans-unit>
        <trans-unit id="ab225a03db28555ac74d12a43409554a8e1d0685" translate="yes" xml:space="preserve">
          <source>Depending on what you want to accomplish, you could forget the onclick and just use the href:</source>
          <target state="translated">Dependiendo de lo que quieras lograr,podrías olvidarte del onclick y usar el href:</target>
        </trans-unit>
        <trans-unit id="ccfb7f94fd7eac312a70ee0ec8cd7a643243d3cf" translate="yes" xml:space="preserve">
          <source>Doing &lt;code&gt;&amp;lt;a href=&quot;#&quot; onclick=&quot;myJsFunc();&quot;&amp;gt;Link&amp;lt;/a&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;myJsFunc();&quot;&amp;gt;Link&amp;lt;/a&amp;gt;&lt;/code&gt; or whatever else that contains an &lt;code&gt;onclick&lt;/code&gt; attribute - was okay back five years ago, though now it can be a bad practice. Here's why:</source>
          <target state="translated">Haciendo &lt;code&gt;&amp;lt;a href=&quot;#&quot; onclick=&quot;myJsFunc();&quot;&amp;gt;Link&amp;lt;/a&amp;gt;&lt;/code&gt; o &lt;code&gt;&amp;lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;myJsFunc();&quot;&amp;gt;Link&amp;lt;/a&amp;gt;&lt;/code&gt; o cualquier otra cosa que contenga un atributo &lt;code&gt;onclick&lt;/code&gt; estaba bien hace cinco a&amp;ntilde;os, aunque ahora puede ser una mala pr&amp;aacute;ctica. Este es el por qu&amp;eacute;:</target>
        </trans-unit>
        <trans-unit id="d7e4b16f963f46e303d8129da25ee4fda74df07e" translate="yes" xml:space="preserve">
          <source>Example... Let's say you have the following search link:</source>
          <target state="translated">Ejemplo...Digamos que tienes el siguiente enlace de búsqueda:</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Ampliar fragmento</target>
        </trans-unit>
        <trans-unit id="256b34ae5bf64fd1e7c412983943787c254f3234" translate="yes" xml:space="preserve">
          <source>For a scalable, blackboxed, Backbone.js component example - &lt;em&gt;&lt;a href=&quot;http://jsfiddle.net/balupton/sTzdD/&quot;&gt;see this working jsfiddle example here&lt;/a&gt;&lt;/em&gt;. Notice how we utilize unobtrusive JavaScript practices, and in a tiny amount of code have a component that can be repeated across the page multiple times without side-effects or conflicts between the different component instances. Amazing!</source>
          <target state="translated">Para ver un ejemplo de componente de Backbone.js escalable y en caja negra, &lt;em&gt;&lt;a href=&quot;http://jsfiddle.net/balupton/sTzdD/&quot;&gt;vea este ejemplo de jsfiddle que funciona aqu&amp;iacute;&lt;/a&gt;&lt;/em&gt; . Observe c&amp;oacute;mo utilizamos pr&amp;aacute;cticas discretas de JavaScript, y en una peque&amp;ntilde;a cantidad de c&amp;oacute;digo tenemos un componente que puede repetirse en la p&amp;aacute;gina varias veces sin efectos secundarios o conflictos entre las diferentes instancias de componentes. &amp;iexcl;Asombroso!</target>
        </trans-unit>
        <trans-unit id="9f738ce8457f291b18ee47e665e96baa84f38fcd" translate="yes" xml:space="preserve">
          <source>HTML</source>
          <target state="translated">HTML</target>
        </trans-unit>
        <trans-unit id="11dc542c0ffeed8b41bad901e2044f438e4ab0e5" translate="yes" xml:space="preserve">
          <source>HTML:</source>
          <target state="translated">HTML:</target>
        </trans-unit>
        <trans-unit id="bfe5704ee66566a95b73c5b240c85d48233a0c03" translate="yes" xml:space="preserve">
          <source>Here is a sample. Home/ChangePicture is a working link to a form on a page complete with user interface and standard HTML submit buttons, but it looks nicer injected into a modal dialog with jQueryUI buttons. Either way works, depending on the browser, which satisfies mobile first development.</source>
          <target state="translated">Aquí hay una muestra.HomeChangePicture es un enlace de trabajo a un formulario en una página completa con interfaz de usuario y botones de envío HTML estándar,pero se ve mejor inyectado en un diálogo modal con botones jQueryUI.Cualquiera de los dos modos funciona,dependiendo del navegador,que satisfaga el primer desarrollo móvil.</target>
        </trans-unit>
        <trans-unit id="48a45ae35adf7aefdc4234047465cfabe67b39db" translate="yes" xml:space="preserve">
          <source>Here's &lt;strong&gt;&lt;a href=&quot;http://jsFiddle.net/mdesdev/Dn8YT/&quot;&gt;a jsFiddle&lt;/a&gt;&lt;/strong&gt; example of above aforementioned.</source>
          <target state="translated">Aqu&amp;iacute; hay &lt;strong&gt;&lt;a href=&quot;http://jsFiddle.net/mdesdev/Dn8YT/&quot;&gt;un&lt;/a&gt;&lt;/strong&gt; ejemplo de &lt;strong&gt;jsFiddle&lt;/strong&gt; de lo mencionado anteriormente.</target>
        </trans-unit>
        <trans-unit id="af0f247bdfb76d39157de73b38f8c569f1bed9c5" translate="yes" xml:space="preserve">
          <source>I agree with Mr. D4V360 who suggested that, even though you are using the anchor tag, you do not truly have an anchor here. All you have is a special section of a document that should behave slightly different. A &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag is far more appropriate.</source>
          <target state="translated">Estoy de acuerdo con el Sr. D4V360 que sugiri&amp;oacute; que, aunque est&amp;eacute; utilizando la etiqueta de anclaje, realmente no tiene un ancla aqu&amp;iacute;. Todo lo que tiene es una secci&amp;oacute;n especial de un documento que deber&amp;iacute;a comportarse de manera ligeramente diferente. Una etiqueta &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; es mucho m&amp;aacute;s apropiada.</target>
        </trans-unit>
        <trans-unit id="8b66ccf07b47db554765f27b6c481f900714e083" translate="yes" xml:space="preserve">
          <source>I agree with suggestions elsewhere stating that you should use regular URL in &lt;code&gt;href&lt;/code&gt; attribute, then call some JavaScript function in onclick. The flaw is, that they automaticaly add &lt;code&gt;return false&lt;/code&gt; after the call.</source>
          <target state="translated">Estoy de acuerdo con las sugerencias en otros lugares que indican que debe usar URL normal en el atributo &lt;code&gt;href&lt;/code&gt; , luego llamar a alguna funci&amp;oacute;n de JavaScript en onclick. La falla es que agregan autom&amp;aacute;ticamente &lt;code&gt;return false&lt;/code&gt; despu&amp;eacute;s de la llamada.</target>
        </trans-unit>
        <trans-unit id="a380124779a6a974fd92f45c584ebee1075ab8a7" translate="yes" xml:space="preserve">
          <source>I believe you are presenting a false dichotomy. These are not the only two options.</source>
          <target state="translated">Creo que estás presentando una falsa dicotomía.Estas no son las únicas dos opciones.</target>
        </trans-unit>
        <trans-unit id="a95f583000a6d6471c45baf0530d2dddf28a9013" translate="yes" xml:space="preserve">
          <source>I choose use &lt;code&gt;javascript:void(0)&lt;/code&gt;, because use this could prevent right click to open the content menu. But &lt;code&gt;javascript:;&lt;/code&gt; is shorter and does the same thing.</source>
          <target state="translated">Elijo usar &lt;code&gt;javascript:void(0)&lt;/code&gt; , porque usar esto podr&amp;iacute;a evitar el clic derecho para abrir el men&amp;uacute; de contenido. Pero &lt;code&gt;javascript:;&lt;/code&gt; Es m&amp;aacute;s corto y hace lo mismo.</target>
        </trans-unit>
        <trans-unit id="96087e21f2dbf7911c372442be487eb14f5a264d" translate="yes" xml:space="preserve">
          <source>I don't like using Hash-Tags unless they're used for anchors, and I only do the above when I've got more than two faux-links, otherwise I go with javascript:void(0).</source>
          <target state="translated">No me gusta usar Hash-Tags a menos que se usen como anclas,y sólo hago lo anterior cuando tengo más de dos enlaces falsos,de lo contrario voy con javascript:void(0).</target>
        </trans-unit>
        <trans-unit id="e1768468b361fab43f929b120179e50e5000f5c3" translate="yes" xml:space="preserve">
          <source>I personally use them in combination. For example:</source>
          <target state="translated">Yo personalmente los uso en combinación.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="1f0983da23d5be03a8b645a4411ddd3ac7bc75ec" translate="yes" xml:space="preserve">
          <source>I realize this isn't always possible, but in my opinion it should be striven for in developing any public website.</source>
          <target state="translated">Me doy cuenta de que esto no siempre es posible,pero en mi opinión debería esforzarse en desarrollar cualquier sitio web público.</target>
        </trans-unit>
        <trans-unit id="58b87b45b40fd41bb411d996f2114853bdb955b8" translate="yes" xml:space="preserve">
          <source>I recommend using a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; element instead, &lt;em&gt;especially&lt;/em&gt; if the control is supposed to produce a change in the data. (Something like a POST.)</source>
          <target state="translated">Recomiendo usar un elemento &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; en su lugar, &lt;em&gt;especialmente&lt;/em&gt; si se supone que el control produce un cambio en los datos. (Algo as&amp;iacute; como un POST).</target>
        </trans-unit>
        <trans-unit id="0659955dd4df5923a30ee6d5913674dc5d8e2b01" translate="yes" xml:space="preserve">
          <source>I tried both in google chrome with the developer tools, and the &lt;code&gt;id=&quot;#&quot;&lt;/code&gt; took 0.32 seconds. While the &lt;code&gt;javascript:void(0)&lt;/code&gt; method took only 0.18 seconds. So in google chrome, &lt;code&gt;javascript:void(0)&lt;/code&gt; works better and faster.</source>
          <target state="translated">Prob&amp;eacute; ambos en google chrome con las herramientas de desarrollo, y el &lt;code&gt;id=&quot;#&quot;&lt;/code&gt; tard&amp;oacute; 0.32 segundos. Mientras que el m&amp;eacute;todo &lt;code&gt;javascript:void(0)&lt;/code&gt; tom&amp;oacute; solo 0.18 segundos. Entonces, en google chrome, &lt;code&gt;javascript:void(0)&lt;/code&gt; funciona mejor y m&amp;aacute;s r&amp;aacute;pido.</target>
        </trans-unit>
        <trans-unit id="5109866b7d3389f201821ad19d4d064cc956b926" translate="yes" xml:space="preserve">
          <source>I use &lt;code&gt;javascript:void(0)&lt;/code&gt;.</source>
          <target state="translated">Yo uso &lt;code&gt;javascript:void(0)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c172eebb89e95daca91530697b9af96397c94df8" translate="yes" xml:space="preserve">
          <source>I use the following</source>
          <target state="translated">Utilizo lo siguiente</target>
        </trans-unit>
        <trans-unit id="57cf8845fa007adeab3a5acc415f45fd1bb1846a" translate="yes" xml:space="preserve">
          <source>I usually go for</source>
          <target state="translated">Normalmente voy por</target>
        </trans-unit>
        <trans-unit id="eb7c88cfddb1e942897629653e455a623a4de90f" translate="yes" xml:space="preserve">
          <source>I would honestly suggest neither.  I would use a stylized &lt;code&gt;&amp;lt;button&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt; for that behavior.</source>
          <target state="translated">Yo sinceramente sugerir&amp;iacute;a que ninguno. Usar&amp;iacute;a un &lt;code&gt;&amp;lt;button&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt; estilizado para ese comportamiento.</target>
        </trans-unit>
        <trans-unit id="3abe3dddf2b07b6bfdae8fdc108601add56c4f34" translate="yes" xml:space="preserve">
          <source>I would use:</source>
          <target state="translated">Yo lo usaría:</target>
        </trans-unit>
        <trans-unit id="804270c45f2c120a3a97bbb1e763a5eaffcbd795" translate="yes" xml:space="preserve">
          <source>I'm basically paraphrasing from &lt;a href=&quot;http://www.matthidinger.com/archive/2011/02/22/Progressive-enhancement-tutorial-with-ASP-NET-MVC-3-and-jQuery.aspx&quot;&gt;this practical article using progressive enhancement&lt;/a&gt;. &lt;strong&gt;The short answer is that you never use &lt;code&gt;javascript:void(0);&lt;/code&gt; or &lt;code&gt;#&lt;/code&gt; unless your user interface has already inferred that JavaScript is enabled, in which case you should use &lt;code&gt;javascript:void(0);&lt;/code&gt;&lt;/strong&gt;. Also, do not use span as links, since that is semantically false to begin with.</source>
          <target state="translated">B&amp;aacute;sicamente, estoy parafraseando de &lt;a href=&quot;http://www.matthidinger.com/archive/2011/02/22/Progressive-enhancement-tutorial-with-ASP-NET-MVC-3-and-jQuery.aspx&quot;&gt;este art&amp;iacute;culo pr&amp;aacute;ctico usando una mejora progresiva&lt;/a&gt; . &lt;strong&gt;La respuesta corta es que nunca usa &lt;code&gt;javascript:void(0);&lt;/code&gt; &lt;/strong&gt; &lt;strong&gt;o &lt;code&gt;#&lt;/code&gt; a menos que su interfaz de usuario ya haya inferido que JavaScript est&amp;aacute; habilitado, en cuyo caso debe usar &lt;code&gt;javascript:void(0);&lt;/code&gt; &lt;/strong&gt; . Adem&amp;aacute;s, no use span como enlaces, ya que eso es sem&amp;aacute;nticamente falso para empezar.</target>
        </trans-unit>
        <trans-unit id="6d5d36429acbb4b8b2f395fbbdf6acc6a3c38a0b" translate="yes" xml:space="preserve">
          <source>Ideally you'd do this:</source>
          <target state="translated">Lo ideal sería que hicieras esto:</target>
        </trans-unit>
        <trans-unit id="00d2f854e6bdeb1c870bd9dbb5045f67d2c0bbe3" translate="yes" xml:space="preserve">
          <source>If that is not possible, then you should at least inject the anchor tag into the document with JavaScript and the appropriate click event handlers.</source>
          <target state="translated">Si eso no es posible,al menos debería inyectar la etiqueta de anclaje en el documento con JavaScript y los manejadores de eventos de click apropiados.</target>
        </trans-unit>
        <trans-unit id="212472301315975ffd2e37b699dd3653d5d7ab0b" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;href&lt;/code&gt; maybe there is no reason to use an anchor tag.</source>
          <target state="translated">Si no hay &lt;code&gt;href&lt;/code&gt; , tal vez no haya raz&amp;oacute;n para usar una etiqueta de anclaje.</target>
        </trans-unit>
        <trans-unit id="3fbd40c242c40cb0b3c6722827bfd1390a74dc28" translate="yes" xml:space="preserve">
          <source>If you &lt;em&gt;MUST&lt;/em&gt; use an A element, use &lt;code&gt;javascript:void(0);&lt;/code&gt; for reasons already mentioned.</source>
          <target state="translated">Si &lt;em&gt;DEBE&lt;/em&gt; usar un elemento A, use &lt;code&gt;javascript:void(0);&lt;/code&gt; por razones ya mencionadas.</target>
        </trans-unit>
        <trans-unit id="28d7882ac4e01aeaa34e02649f7788fc7aad6938" translate="yes" xml:space="preserve">
          <source>If you can have an actual URL that makes sense use that as the HREF.  The onclick won't fire if someone middle-clicks on your link to open a new tab or if they have JavaScript disabled.</source>
          <target state="translated">Si puedes tener una URL real que tenga sentido,úsala como la HREF.El onclick no se disparará si alguien hace un click medio en tu enlace para abrir una nueva pestaña o si tiene el JavaScript desactivado.</target>
        </trans-unit>
        <trans-unit id="de669b86638dcf73ae3668a5c38687eddd030088" translate="yes" xml:space="preserve">
          <source>If you happen to be using &lt;a href=&quot;http://angularjs.org/&quot;&gt;&lt;strong&gt;AngularJS&lt;/strong&gt;&lt;/a&gt;, you can use the following:</source>
          <target state="translated">Si est&amp;aacute; utilizando &lt;a href=&quot;http://angularjs.org/&quot;&gt;&lt;strong&gt;AngularJS&lt;/strong&gt;&lt;/a&gt; , puede utilizar lo siguiente:</target>
        </trans-unit>
        <trans-unit id="804f3288dea9da73c4359b16a93c611d804ee543" translate="yes" xml:space="preserve">
          <source>If you use Angular2, this way works:</source>
          <target state="translated">Si usas Angular2,esta forma funciona:</target>
        </trans-unit>
        <trans-unit id="ad5929b44b8b9854ce64c2375d1bc9cc7608ddf0" translate="yes" xml:space="preserve">
          <source>If you want your action to still work with JavaScript disabled, then using an &lt;code&gt;a&lt;/code&gt; element with a &lt;code&gt;href&lt;/code&gt; attribute that goes to some URL that will perform the action manually instead of via an Ajax request or whatever should be the way to go. If you are doing this, then you want to ensure you do an &lt;code&gt;event.preventDefault()&lt;/code&gt; on your click call to make sure when the button is clicked it does not follow the link. This option is called graceful degradation.</source>
          <target state="translated">Si desea que su acci&amp;oacute;n siga funcionando con JavaScript deshabilitado, utilice un elemento con un atributo &lt;code&gt;href&lt;/code&gt; que vaya a alguna URL que realice la acci&amp;oacute;n manualmente en lugar de a trav&amp;eacute;s de una solicitud de Ajax o lo que sea el camino a seguir. Si est&amp;aacute; haciendo esto, entonces quiere asegurarse de hacer un &lt;code&gt;event.preventDefault()&lt;/code&gt; en su llamada de clic para asegurarse de que cuando se hace clic en el bot&amp;oacute;n no siga el enlace. Esta opci&amp;oacute;n se llama degradaci&amp;oacute;n elegante.</target>
        </trans-unit>
        <trans-unit id="32737c28e056736b9f71e199ea71ce66c890d6e0" translate="yes" xml:space="preserve">
          <source>If your &quot;link&quot; has the sole purpose of running some JavaScript code it doesn't qualify as a link; rather a piece of text with a JavaScript function coupled to it. I would recommend to use a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag with an &lt;code&gt;onclick handler&lt;/code&gt; attached to it and some basic CSS to immitate a link. Links are made for navigation, and if your JavaScript code isn't for navigation it should not be an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">Si su &quot;enlace&quot; tiene el &amp;uacute;nico prop&amp;oacute;sito de ejecutar alg&amp;uacute;n c&amp;oacute;digo JavaScript, no califica como enlace; m&amp;aacute;s bien un fragmento de texto con una funci&amp;oacute;n de JavaScript acoplada. Recomendar&amp;iacute;a usar una etiqueta &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; con un &lt;code&gt;onclick handler&lt;/code&gt; adjunto y algo de CSS b&amp;aacute;sico para imitar un enlace. Los enlaces est&amp;aacute;n hechos para la navegaci&amp;oacute;n, y si su c&amp;oacute;digo JavaScript no es para la navegaci&amp;oacute;n, no deber&amp;iacute;a ser una etiqueta &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46e3a38016d86ba7214b26757c2cfc95f05dd8d8" translate="yes" xml:space="preserve">
          <source>In addition</source>
          <target state="translated">Además...</target>
        </trans-unit>
        <trans-unit id="de626ba3c47bd3e6c70f8fa7b92ad16e7ab1df22" translate="yes" xml:space="preserve">
          <source>In addition, regarding cowgod's suggestion, particularly this: &lt;code&gt;...href=&quot;javascript_required.html&quot; onclick=&quot;...&lt;/code&gt; This is good approach, but it doesn't distinguish between &quot;JavaScript disabled&quot; and &quot;onclick fails&quot; scenarios.</source>
          <target state="translated">Adem&amp;aacute;s, con respecto a la sugerencia de cowgod, particularmente esto: &lt;code&gt;...href=&quot;javascript_required.html&quot; onclick=&quot;...&lt;/code&gt; Este es un buen enfoque, pero no distingue entre los escenarios&quot; JavaScript deshabilitado &quot;y&quot; onclick falla &quot;.</target>
        </trans-unit>
        <trans-unit id="5f4095b56e1965992a00ffe2c85250cb05dcfc85" translate="yes" xml:space="preserve">
          <source>Instead, use an element other than a link:</source>
          <target state="translated">En lugar de eso,usa un elemento que no sea un enlace:</target>
        </trans-unit>
        <trans-unit id="3a64ed76369a90aa5c918a8b11d861c017006fa9" translate="yes" xml:space="preserve">
          <source>It gets around the need to return false. I don't like the &lt;code&gt;#&lt;/code&gt; option because, as mentioned, it will take the user to the top of the page. If you have somewhere else to send the user if they don't have JavaScript enabled (which is rare where I work, but a very good idea), then Steve's proposed method works great.</source>
          <target state="translated">Evita la necesidad de devolver falso. No me gusta la opci&amp;oacute;n &lt;code&gt;#&lt;/code&gt; porque, como se mencion&amp;oacute;, llevar&amp;aacute; al usuario a la parte superior de la p&amp;aacute;gina. Si tiene otro lugar para enviar al usuario si no tiene JavaScript habilitado (lo cual es raro donde trabajo, pero es una muy buena idea), entonces el m&amp;eacute;todo propuesto por Steve funciona muy bien.</target>
        </trans-unit>
        <trans-unit id="4aba6ab3ebf5c70f336816f81bd49cb9be79da3b" translate="yes" xml:space="preserve">
          <source>It is short an concise</source>
          <target state="translated">Es breve y conciso</target>
        </trans-unit>
        <trans-unit id="05d248935f7dfb7c2986856b90ff8132ad46390c" translate="yes" xml:space="preserve">
          <source>It promotes the practice of obtrusive JavaScript - which has turned out to be difficult to maintain and difficult to scale. More on this in &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Unobtrusive_JavaScript&quot;&gt;Unobtrusive JavaScript&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">Promueve la pr&amp;aacute;ctica de JavaScript intrusivo, que result&amp;oacute; ser dif&amp;iacute;cil de mantener y dif&amp;iacute;cil de escalar. M&amp;aacute;s sobre esto en &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Unobtrusive_JavaScript&quot;&gt;JavaScript discreto&lt;/a&gt;&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="78ab3661fb4274583e571731590054b5ccbe8d86" translate="yes" xml:space="preserve">
          <source>It will not take you to the top of the page, as with (#)</source>
          <target state="translated">No te llevará al principio de la página,como con (#)</target>
        </trans-unit>
        <trans-unit id="ee0a7d8c1d6e41002b515104d36b8e33adec0a88" translate="yes" xml:space="preserve">
          <source>It would be better to use jQuery,</source>
          <target state="translated">Sería mejor usar jQuery,</target>
        </trans-unit>
        <trans-unit id="c7829ed128c64788f09241792585b6b6ca508330" translate="yes" xml:space="preserve">
          <source>It's even better if you inject the elements unobtrusively, a type of progressive enhancement. (See &lt;a href=&quot;https://stackoverflow.com/questions/134845/href-for-javascript-links-or-javascriptvoid0#134957&quot;&gt;this comment&lt;/a&gt;.)</source>
          <target state="translated">Es incluso mejor si inyecta los elementos discretamente, un tipo de mejora progresiva. (Ver &lt;a href=&quot;https://stackoverflow.com/questions/134845/href-for-javascript-links-or-javascriptvoid0#134957&quot;&gt;este comentario&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="d7a3fa77b0b23097c1a73962b4a6a268909df9fd" translate="yes" xml:space="preserve">
          <source>It's shorter than javascript:void(0) and does the same.</source>
          <target state="translated">Es más corto que javascript:void(0)y hace lo mismo.</target>
        </trans-unit>
        <trans-unit id="cfb6fdf6dd9570afa354dfcf688c4ee6c87c5367" translate="yes" xml:space="preserve">
          <source>JavaScript:</source>
          <target state="translated">JavaScript:</target>
        </trans-unit>
        <trans-unit id="027d0cca50d0abcf3c970c19a2fc5d77ab3580f5" translate="yes" xml:space="preserve">
          <source>Just don't have a &lt;code&gt;href&lt;/code&gt; attribute at all! Any good CSS reset would take care of the missing default cursor style, so that is a non-issue. Then attach your JavaScript functionality using graceful and unobtrusive  best practices - which are more maintainable as your JavaScript logic stays in JavaScript, instead of in your markup - which is essential when you start developing large scale JavaScript applications which require your logic to be split up into blackboxed components and templates. More on this in &lt;em&gt;&lt;a href=&quot;http://speakerdeck.com/u/addyosmani/p/large-scale-javascript-application-architecture&quot;&gt;Large-scale JavaScript Application Architecture&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">&amp;iexcl;Simplemente no tengo un atributo &lt;code&gt;href&lt;/code&gt; en absoluto! Cualquier buen restablecimiento de CSS se encargar&amp;iacute;a del estilo de cursor predeterminado que falta, por lo que no es un problema. Luego, adjunte su funcionalidad de JavaScript utilizando pr&amp;aacute;cticas recomendadas elegantes y discretas, que son m&amp;aacute;s f&amp;aacute;ciles de mantener ya que su l&amp;oacute;gica de JavaScript permanece en JavaScript, en lugar de en su marcado, lo cual es esencial cuando comienza a desarrollar aplicaciones de JavaScript a gran escala que requieren que su l&amp;oacute;gica se divida en componentes y plantillas en caja negra. M&amp;aacute;s sobre esto en &lt;em&gt;&lt;a href=&quot;http://speakerdeck.com/u/addyosmani/p/large-scale-javascript-application-architecture&quot;&gt;Arquitectura de aplicaciones JavaScript a gran escala&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e79d804ae4c4d2418313f51b0a6c22f6469d32c6" translate="yes" xml:space="preserve">
          <source>Lastly, you can use &lt;code&gt;javascript:void(0)&lt;/code&gt; if you do not want anyone to go anywhere and if you don't want to call a JavaScript function. It works great if you have an image you want a mouseover event to happen with, but there's not anything for the user to click on.</source>
          <target state="translated">Por &amp;uacute;ltimo, puede usar &lt;code&gt;javascript:void(0)&lt;/code&gt; si no desea que nadie vaya a ning&amp;uacute;n lado y si no desea llamar a una funci&amp;oacute;n de JavaScript. Funciona muy bien si tiene una imagen con la que desea que ocurra un evento de mouseover, pero no hay nada en lo que el usuario pueda hacer clic.</target>
        </trans-unit>
        <trans-unit id="98be2b1aaa56ea07d84773c494e9efaa717f0c18" translate="yes" xml:space="preserve">
          <source>My suggestion would be to use &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; element with the &lt;code&gt;class&lt;/code&gt; attribute instead of
an anchor. For example:</source>
          <target state="translated">Mi sugerencia ser&amp;iacute;a usar el elemento &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; con el atributo de &lt;code&gt;class&lt;/code&gt; lugar de un ancla. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="1859e04da42645894d4f5a8456f449d16a579623" translate="yes" xml:space="preserve">
          <source>NOTE: You can replace the &lt;code&gt;0&lt;/code&gt; with a string such as &lt;code&gt;javascript:void('Delete record 123')&lt;/code&gt; which can serve as an extra indicator that will show what the click will actually do.</source>
          <target state="translated">NOTA: Puede reemplazar el &lt;code&gt;0&lt;/code&gt; con una cadena como &lt;code&gt;javascript:void('Delete record 123')&lt;/code&gt; que puede servir como un indicador adicional que mostrar&amp;aacute; lo que realmente har&amp;aacute; el clic.</target>
        </trans-unit>
        <trans-unit id="7d64ff37b1b1bbb318463de427a0b3e65aad1b34" translate="yes" xml:space="preserve">
          <source>Neither if you ask me;</source>
          <target state="translated">Tampoco si me preguntas a mí;</target>
        </trans-unit>
        <trans-unit id="6408fac84dc551a699a1e0a8a0ec23490893a171" translate="yes" xml:space="preserve">
          <source>Neither.</source>
          <target state="translated">Neither.</target>
        </trans-unit>
        <trans-unit id="a4fe7b7b3fdc67415aec63114e067b36a0e3da5d" translate="yes" xml:space="preserve">
          <source>Note, that I negate the result of the &lt;code&gt;doSomething()&lt;/code&gt; function. If it works, it will return &lt;code&gt;true&lt;/code&gt;, so it will be negated (&lt;code&gt;false&lt;/code&gt;) and the &lt;code&gt;path/to/some/URL&lt;/code&gt; will not be called. If the function will return &lt;code&gt;false&lt;/code&gt; (for example, the browser doesn't support something used within the function or anything else goes wrong), it is negated to &lt;code&gt;true&lt;/code&gt; and the &lt;code&gt;path/to/some/URL&lt;/code&gt; is called.</source>
          <target state="translated">Tenga en cuenta que niego el resultado de la funci&amp;oacute;n &lt;code&gt;doSomething()&lt;/code&gt; . Si funciona, devolver&amp;aacute; &lt;code&gt;true&lt;/code&gt; , por lo que se negar&amp;aacute; ( &lt;code&gt;false&lt;/code&gt; ) y no se llamar&amp;aacute; a la &lt;code&gt;path/to/some/URL&lt;/code&gt; . Si la funci&amp;oacute;n devuelve &lt;code&gt;false&lt;/code&gt; (por ejemplo, el navegador no admite algo utilizado dentro de la funci&amp;oacute;n o cualquier otra cosa sale mal), se niega a &lt;code&gt;true&lt;/code&gt; y se llama a la &lt;code&gt;path/to/some/URL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="b4b28229212dbfad05165a5bcaa2d9543543dc27" translate="yes" xml:space="preserve">
          <source>Of course &quot;#&quot; with an onclick handler which prevents default action is [much] better. Moreover, a link that has the sole purpose to run JavaScript is not really &quot;a link&quot; unless you are sending user to some sensible anchor on the page (just # will send to top) when something goes wrong. You can simply simulate look and feel of link with stylesheet and forget about href at all.</source>
          <target state="translated">Por supuesto &quot;#&quot; con un manejador de onclick que previene la acción por defecto es [mucho]mejor.Además,un enlace que tiene el único propósito de ejecutar JavaScript no es realmente &quot;un enlace&quot; a menos que estés enviando al usuario a algún ancla sensata de la página (sólo#enviará a la parte superior)cuando algo va mal.Puedes simplemente simular el aspecto de un enlace con la hoja de estilos y olvidarte de href en absoluto.</target>
        </trans-unit>
        <trans-unit id="3f89a0eec1da10518de63068696e628968159d46" translate="yes" xml:space="preserve">
          <source>Omitting the &lt;code&gt;href&lt;/code&gt; attribute on the &lt;code&gt;a&lt;/code&gt; element will cause &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_6&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;6&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_7&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;7&lt;/a&gt; to not take on the &lt;code&gt;a:hover&lt;/code&gt; styling, which is why we have added a simple JavaScript shim to accomplish this via &lt;code&gt;a.hover&lt;/code&gt; instead. Which is perfectly okay, as if you don't have a href attribute and no graceful degradation then your link won't work anyway - and you'll have bigger issues to worry about.</source>
          <target state="translated">Omitir el atributo &lt;code&gt;href&lt;/code&gt; en el elemento a har&amp;aacute; que &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_6&quot;&gt;Internet Explorer 6&lt;/a&gt; e &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_7&quot;&gt;Internet Explorer 7&lt;/a&gt; no adopten el estilo a &lt;code&gt;a:hover&lt;/code&gt; , por lo que hemos agregado un shim JavaScript simple para lograr esto a trav&amp;eacute;s de &lt;code&gt;a.hover&lt;/code&gt; . Lo cual est&amp;aacute; perfectamente bien, ya que si no tiene un atributo href y no hay degradaci&amp;oacute;n elegante, su enlace no funcionar&amp;aacute; de todos modos, y tendr&amp;aacute; problemas m&amp;aacute;s importantes por los que preocuparse.</target>
        </trans-unit>
        <trans-unit id="79d90211195df24c07a1f39be84dcafb2c0c0cff" translate="yes" xml:space="preserve">
          <source>Omitting the &lt;code&gt;href&lt;/code&gt; attribute on the &lt;code&gt;a&lt;/code&gt; element will cause the element to not be accessible using &lt;code&gt;tab&lt;/code&gt; key navigation. If you wish for those elements to be accessible via the &lt;code&gt;tab&lt;/code&gt; key, you can set the &lt;code&gt;tabindex&lt;/code&gt; attribute, or use &lt;code&gt;button&lt;/code&gt; elements instead. You can easily style button elements to look like normal links as mentioned in &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/a/8525002/130638&quot;&gt;Tracker1's answer&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">Omitir el atributo &lt;code&gt;href&lt;/code&gt; en &lt;code&gt;a&lt;/code&gt; elemento har&amp;aacute; que no se pueda acceder al elemento utilizando la navegaci&amp;oacute;n con tecla de &lt;code&gt;tab&lt;/code&gt; ulaci&amp;oacute;n . Si desea que se pueda acceder a esos elementos mediante la tecla de &lt;code&gt;tab&lt;/code&gt; ulaci&amp;oacute;n , puede establecer el atributo &lt;code&gt;tabindex&lt;/code&gt; o utilizar elementos de &lt;code&gt;button&lt;/code&gt; lugar. Puede &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/a/8525002/130638&quot;&gt;dise&amp;ntilde;ar&lt;/a&gt;&lt;/em&gt; f&amp;aacute;cilmente elementos de bot&amp;oacute;n para que se vean como enlaces normales como se menciona en &lt;em&gt;la respuesta de Tracker1&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="fd9e05ef7026ea1d31a3a27b1cbc509e85605be2" translate="yes" xml:space="preserve">
          <source>Or, even better, you'd have the default action link in the HTML, and you'd add the onclick event to the element unobtrusively via JavaScript after the DOM renders, thus ensuring that if JavaScript is not present/utilized you don't have useless event handlers riddling your code and potentially obfuscating (or at least distracting from) your actual content.</source>
          <target state="translated">O,aún mejor,tendrías el enlace de acción por defecto en el HTML,y añadirías el evento onclick al elemento de forma discreta a través de JavaScript después de los renders DOM,asegurando así que si JavaScript no está presentutizado no tendrás manejadores de eventos inútiles acribillando tu código y potencialmente ofuscando (o al menos distrayendo)tu contenido real.</target>
        </trans-unit>
        <trans-unit id="03c75c5ce96ade25b0a822150e4ade9ee3d0f56d" translate="yes" xml:space="preserve">
          <source>See here &lt;a href=&quot;https://stackoverflow.com/a/45465728/2803344&quot;&gt;https://stackoverflow.com/a/45465728/2803344&lt;/a&gt;</source>
          <target state="translated">Ver aqu&amp;iacute; &lt;a href=&quot;https://stackoverflow.com/a/45465728/2803344&quot;&gt;https://stackoverflow.com/a/45465728/2803344&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48f1019bcb9fa24ea0f76248ea083a4c0cd02134" translate="yes" xml:space="preserve">
          <source>Simple code example</source>
          <target state="translated">Ejemplo de código simple</target>
        </trans-unit>
        <trans-unit id="6badb4f47fa2047e5ad167fd7ff402e1d9f4868c" translate="yes" xml:space="preserve">
          <source>Simple enough!</source>
          <target state="translated">¡Bastante simple!</target>
        </trans-unit>
        <trans-unit id="49478b0f42b3a3835f22e0884382200e0c658115" translate="yes" xml:space="preserve">
          <source>So if you're a lone developer then you can clearly make your own choice, but if you work as a team you have to either state:</source>
          <target state="translated">Así que si eres un desarrollador solitario entonces puedes claramente hacer tu propia elección,pero si trabajas como un equipo tienes que hacer cualquiera de los dos estados:</target>
        </trans-unit>
        <trans-unit id="1ac335dc215eec9b9f35bf9b20acd9ed338242ca" translate="yes" xml:space="preserve">
          <source>So, &lt;strong&gt;there is one benefit&lt;/strong&gt; to use &lt;code&gt;&amp;lt;a href=&quot;#&quot;&amp;gt;&lt;/code&gt;. You get the cursor pointer by default on that element when you do &lt;code&gt;a href=&quot;#&quot;&lt;/code&gt;. For that, I think you can use CSS for this like &lt;code&gt;cursor:pointer;&lt;/code&gt; which solves this problem also.</source>
          <target state="translated">Por lo tanto, &lt;strong&gt;hay un beneficio&lt;/strong&gt; para usar &lt;code&gt;&amp;lt;a href=&quot;#&quot;&amp;gt;&lt;/code&gt; . Obtiene el puntero del cursor de forma predeterminada en ese elemento cuando hace &lt;code&gt;a href=&quot;#&quot;&lt;/code&gt; . Para eso, creo que puedes usar CSS para esto como &lt;code&gt;cursor:pointer;&lt;/code&gt; que resuelve este problema tambi&amp;eacute;n.</target>
        </trans-unit>
        <trans-unit id="4a70586a9842b7d5401479afaec3f0a019fa6c2c" translate="yes" xml:space="preserve">
          <source>So, if you see, it's better not to use a tag for this kind of stuff.</source>
          <target state="translated">Así que,si ves,es mejor no usar una etiqueta para este tipo de cosas.</target>
        </trans-unit>
        <trans-unit id="d2627d25180adeafcf0f79b745b4905945e14598" translate="yes" xml:space="preserve">
          <source>So, when you are doing some JavaScript things with an &lt;code&gt;&amp;lt;a /&amp;gt;&lt;/code&gt; tag and if you put &lt;code&gt;href=&quot;#&quot;&lt;/code&gt; as well, you can add &lt;strong&gt;return false&lt;/strong&gt; at the end of the event &lt;em&gt;(in case of inline event binding)&lt;/em&gt; like:</source>
          <target state="translated">Entonces, cuando est&amp;aacute; haciendo algunas cosas de JavaScript con una etiqueta &lt;code&gt;&amp;lt;a /&amp;gt;&lt;/code&gt; y si tambi&amp;eacute;n coloca &lt;code&gt;href=&quot;#&quot;&lt;/code&gt; , puede agregar &lt;strong&gt;return false&lt;/strong&gt; al final del evento &lt;em&gt;(en caso de enlace de evento en l&amp;iacute;nea)&lt;/em&gt; como:</target>
        </trans-unit>
        <trans-unit id="7abfe43b1386b494fd45872b2cc6943e02d94ab9" translate="yes" xml:space="preserve">
          <source>That way, people with JavaScript disabled are directed to &lt;code&gt;search.php&lt;/code&gt; while your viewers with JavaScript view your enhanced functionality.</source>
          <target state="translated">De esa manera, las personas con JavaScript deshabilitado son dirigidas a &lt;code&gt;search.php&lt;/code&gt; mientras que los espectadores con JavaScript ven su funcionalidad mejorada.</target>
        </trans-unit>
        <trans-unit id="f0ea564302a451fd2f0c6f42304e263314f68d81" translate="yes" xml:space="preserve">
          <source>The anchor tag markup will be like</source>
          <target state="translated">El marcado de la etiqueta del ancla será como</target>
        </trans-unit>
        <trans-unit id="1fa21ff042ee48d76e87bfc5b42429623407e190" translate="yes" xml:space="preserve">
          <source>The first one, ideally with a real link to follow in case the user has JavaScript disabled. Just make sure to return false to prevent the click event from firing if the JavaScript executes.</source>
          <target state="translated">El primero,idealmente con un enlace real a seguir en caso de que el usuario tenga el JavaScript desactivado.Sólo asegúrate de devolver falso para evitar que el evento de clic se dispare si el JavaScript se ejecuta.</target>
        </trans-unit>
        <trans-unit id="1daf7431c85ba11ffd7dc6ff69bf824dd7a20830" translate="yes" xml:space="preserve">
          <source>The following are two methods of building a link that has the sole purpose of running JavaScript code. Which is better, in terms of functionality, page load speed, validation purposes, etc.?</source>
          <target state="translated">Los siguientes son dos métodos para construir un enlace que tiene el único propósito de ejecutar código JavaScript.¿Cuál es mejor,en términos de funcionalidad,velocidad de carga de la página,propósitos de validación,etc.?</target>
        </trans-unit>
        <trans-unit id="269c0d128dd6aa15c46409249e0cb329a40beab5" translate="yes" xml:space="preserve">
          <source>The hash tag can cause unexpected behavior if the click falls through (onclick throws), avoid it unless it's an appropriate fall-through behavior, and you want to change the navigation history.</source>
          <target state="translated">La etiqueta hash puede causar un comportamiento inesperado si el clic se cae (onclick lanza),evítalo a menos que sea un comportamiento de caída apropiado,y quieras cambiar el historial de navegación.</target>
        </trans-unit>
        <trans-unit id="c4494667d2a969ff9ab74b014574747d77306b24" translate="yes" xml:space="preserve">
          <source>The problem with this approach is, that if the function will not work or if there will be any problem, the link will become unclickable. Onclick event will always return &lt;code&gt;false&lt;/code&gt;, so the normal URL will not be called.</source>
          <target state="translated">El problema con este enfoque es que si la funci&amp;oacute;n no funcionar&amp;aacute; o si habr&amp;aacute; alg&amp;uacute;n problema, el enlace no se podr&amp;aacute; hacer clic. El evento Onclick siempre devolver&amp;aacute; &lt;code&gt;false&lt;/code&gt; , por lo que no se llamar&amp;aacute; a la URL normal.</target>
        </trans-unit>
        <trans-unit id="4b58746c8c626555acaac41aff5e2ead214c95fe" translate="yes" xml:space="preserve">
          <source>The second is clearly much easier to communicate.</source>
          <target state="translated">La segunda es claramente mucho más fácil de comunicar.</target>
        </trans-unit>
        <trans-unit id="482e865b307b47aa297b58a84ea961e535f68ee1" translate="yes" xml:space="preserve">
          <source>The unobtrusive JavaScript way</source>
          <target state="translated">La manera discreta de JavaScript</target>
        </trans-unit>
        <trans-unit id="a9ff79e11576caa15996b6365f7cd93425fd9adc" translate="yes" xml:space="preserve">
          <source>The use of href=&quot;#&quot; scrolls the page to the top; the use of void(0) creates navigational problems within the browser.</source>
          <target state="translated">El uso de href=&quot;#&quot; desplaza la página hasta la parte superior;el uso de void(0)crea problemas de navegación dentro del navegador.</target>
        </trans-unit>
        <trans-unit id="614fa21c604f3659b02c8f778f1538fdd087da29" translate="yes" xml:space="preserve">
          <source>Then assign the function to &lt;code&gt;.link&lt;/code&gt; with a script wrapped in the body and just before the &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; tag or in an external JavaScript document.</source>
          <target state="translated">Luego asigne la funci&amp;oacute;n a &lt;code&gt;.link&lt;/code&gt; con un script envuelto en el cuerpo y justo antes de la etiqueta &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; o en un documento externo de JavaScript.</target>
        </trans-unit>
        <trans-unit id="b20f1b8c943debdc2004de3e35bd0bd8eee1f28c" translate="yes" xml:space="preserve">
          <source>Then in jQuery, I add the following code:</source>
          <target state="translated">Luego en jQuery,añado el siguiente código:</target>
        </trans-unit>
        <trans-unit id="17feadbe346f495f0e3d2b51a1ff2d982ff5b7a1" translate="yes" xml:space="preserve">
          <source>Then you can style the span element to look like an anchor with a little CSS:</source>
          <target state="translated">Entonces puedes estilizar el elemento span para que parezca un ancla con un poco de CSS:</target>
        </trans-unit>
        <trans-unit id="f0bf07952005c3ec2fcb4e80a0427801536e162e" translate="yes" xml:space="preserve">
          <source>There are now better, easier, and more maintainable and scalable ways of accomplishing the desired result.</source>
          <target state="translated">Ahora hay formas mejores,más fáciles y más sostenibles y escalables de lograr el resultado deseado.</target>
        </trans-unit>
        <trans-unit id="6735f9d73a2577bbd369c3fd2c10bf6b092a89df" translate="yes" xml:space="preserve">
          <source>There's very simple solution. Let function return &lt;code&gt;true&lt;/code&gt; if it works correctly. Then use the returned value to determine if the click should be cancelled or not:</source>
          <target state="translated">Hay una soluci&amp;oacute;n muy simple. Deje que la funci&amp;oacute;n devuelva &lt;code&gt;true&lt;/code&gt; si funciona correctamente. Luego use el valor devuelto para determinar si el clic debe cancelarse o no:</target>
        </trans-unit>
        <trans-unit id="98a9fb4ccab373e333dbb2ff3a74f3cae1e4513a" translate="yes" xml:space="preserve">
          <source>Therefore, you don't need to explicitly return &lt;code&gt;false&lt;/code&gt; with JavaScript</source>
          <target state="translated">Por lo tanto, no necesita devolver expl&amp;iacute;citamente &lt;code&gt;false&lt;/code&gt; con JavaScript</target>
        </trans-unit>
        <trans-unit id="1d7c8da4b8b4ff05efe2ee43a1441aa8483e5da0" translate="yes" xml:space="preserve">
          <source>This makes the &lt;code&gt;href&lt;/code&gt; simple, search engines need it. If you use anything else ( such as a string), it may cause a &lt;code&gt;404 not found&lt;/code&gt; error.</source>
          <target state="translated">Esto hace que &lt;code&gt;href&lt;/code&gt; sea simple, los motores de b&amp;uacute;squeda lo necesitan. Si usa algo m&amp;aacute;s (como una cadena), puede causar un error &lt;code&gt;404 not found&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ebabe065f2e6d6d97bdcb17d4b76aeefaaba9ae" translate="yes" xml:space="preserve">
          <source>This way you can assign your onclick.  I also suggest binding via script, not using the &lt;code&gt;onclick&lt;/code&gt; attribute on the element tag.  The only gotcha is the psuedo 3d text effect in older IEs that cannot be disabled.</source>
          <target state="translated">De esta manera puede asignar su onclick. Tambi&amp;eacute;n sugiero vincular mediante script, no usar el atributo &lt;code&gt;onclick&lt;/code&gt; en la etiqueta del elemento. El &amp;uacute;nico problema es el efecto de texto psuedo 3d en los IE m&amp;aacute;s antiguos que no se pueden deshabilitar.</target>
        </trans-unit>
        <trans-unit id="702b86d5b5cbacb5b92c4fcf82a98463957cc2d0" translate="yes" xml:space="preserve">
          <source>Three reasons. Encouraging the use of &lt;code&gt;#&lt;/code&gt; amongst a team of developers inevitably leads to some using the return value of the function called like this:</source>
          <target state="translated">Tres razones Fomentar el uso de &lt;code&gt;#&lt;/code&gt; entre un equipo de desarrolladores conduce inevitablemente a que algunos usen el valor de retorno de la funci&amp;oacute;n llamada as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="20772c2b98562800fba03c386b95e46f651eaba2" translate="yes" xml:space="preserve">
          <source>Typically, I like to just avoid using a link at all and just wrap something around in a span and use that as a way to active some JavaScript code, like a pop-up or a content-reveal.</source>
          <target state="translated">Típicamente,me gusta evitar el uso de un enlace y envolver algo en un lapso y usarlo como una forma de activar algún código JavaScript,como un pop-up o una revelación de contenido.</target>
        </trans-unit>
        <trans-unit id="7cb22bdab3f97840c6388285c6c482bb1dd83b0e" translate="yes" xml:space="preserve">
          <source>Unless you're writing out the link using JavaScript (so that you know it's enabled in the browser), you should ideally be providing a proper link for people who are browsing with JavaScript disabled and then prevent the default action of the link in your onclick event handler. This way those with JavaScript enabled will run the function and those with JavaScript disabled will jump to an appropriate page (or location within the same page) rather than just clicking on the link and having nothing happen.</source>
          <target state="translated">A menos que estés escribiendo el enlace usando JavaScript (para que sepas que está habilitado en el navegador),lo ideal sería que proporcionaras un enlace adecuado para las personas que están navegando con JavaScript deshabilitado y así evitar la acción por defecto del enlace en tu manejador de eventos onclick.De esta manera,aquellos con JavaScript habilitado ejecutarán la función y aquellos con JavaScript deshabilitado saltarán a una página apropiada (o a una ubicación dentro de la misma página)en lugar de simplemente hacer clic en el enlace y que no pase nada.</target>
        </trans-unit>
        <trans-unit id="7b8695724e414bfa1bb582fecd14c6afe7795c3e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;href=&quot;#&quot;&lt;/code&gt;, make sure &lt;code&gt;onclick&lt;/code&gt; always contains &lt;code&gt;return false;&lt;/code&gt; at the end, that any called function does not throw an error and if you attach a function dynamically to the &lt;code&gt;onclick&lt;/code&gt; property make sure that as well as not throwing an error it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Use &lt;code&gt;href=&quot;#&quot;&lt;/code&gt; , aseg&amp;uacute;rese de que &lt;code&gt;onclick&lt;/code&gt; siempre contenga &lt;code&gt;return false;&lt;/code&gt; al final, cualquier funci&amp;oacute;n llamada no arroja un error y si adjunta una funci&amp;oacute;n din&amp;aacute;micamente a la propiedad &lt;code&gt;onclick&lt;/code&gt; aseg&amp;uacute;rese de que, adem&amp;aacute;s de no arrojar un error, devuelva &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0128b97172aa885ce9e934954b105231cdc32b48" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;href=&quot;javascript:void(0)&quot;&lt;/code&gt;</source>
          <target state="translated">Utilice &lt;code&gt;href=&quot;javascript:void(0)&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a12a5998cd4a1a292c19fd32f9761fd034d7d9f0" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;http://en.wikipedia.org/wiki/Search_engine_optimization&quot;&gt;SEO&lt;/a&gt; friendly URL routes in your application, such as /Home/Action/Parameters is a good practice as well. If you have a link to a page that works without JavaScript first, you can enhance the experience afterward. Use a real link to a working page, then add an onlick event to enhance the presentation.</source>
          <target state="translated">Tambi&amp;eacute;n es una buena pr&amp;aacute;ctica utilizar rutas de URL amigables con &lt;a href=&quot;http://en.wikipedia.org/wiki/Search_engine_optimization&quot;&gt;SEO&lt;/a&gt; en su aplicaci&amp;oacute;n, como / Home / Action / Parameters. Si primero tiene un enlace a una p&amp;aacute;gina que funciona sin JavaScript, puede mejorar la experiencia despu&amp;eacute;s. Use un enlace real a una p&amp;aacute;gina de trabajo, luego agregue un evento onlick para mejorar la presentaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c4dbe03c8c4b7cfc862655b2cc0c5360e6012dab" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;javascript:void(0)&lt;/code&gt; avoids all of the above headaches, and I haven't found any examples of a downside.</source>
          <target state="translated">Usar &lt;code&gt;javascript:void(0)&lt;/code&gt; evita todos los dolores de cabeza anteriores, y no he encontrado ning&amp;uacute;n ejemplo de un inconveniente.</target>
        </trans-unit>
        <trans-unit id="db11279fac943ad89d6f69763bf7811bca9ce6c9" translate="yes" xml:space="preserve">
          <source>Using just &lt;code&gt;#&lt;/code&gt; makes some funny movements, so I would recommend to use &lt;code&gt;#self&lt;/code&gt; if you would like to save on typing efforts of &lt;code&gt;JavaScript bla, bla,&lt;/code&gt;.</source>
          <target state="translated">Usar solo &lt;code&gt;#&lt;/code&gt; hace algunos movimientos divertidos, por lo que recomendar&amp;iacute;a usar &lt;code&gt;#self&lt;/code&gt; si desea ahorrar en los esfuerzos de tipeo de &lt;code&gt;JavaScript bla, bla,&lt;/code&gt; ,.</target>
        </trans-unit>
        <trans-unit id="dc1cda1dd2ead613cec7da19ef5d6a915ebf4f35" translate="yes" xml:space="preserve">
          <source>Usually, you should always have a fall back link to make sure that clients with JavaScript disabled still has some functionality. This concept is called unobtrusive JavaScript.</source>
          <target state="translated">Por lo general,siempre debes tener un enlace de retroceso para asegurarte de que los clientes con JavaScript desactivado todavía tienen alguna funcionalidad.Este concepto se llama JavaScript discreto.</target>
        </trans-unit>
        <trans-unit id="6954c3bbb0379e79fe70bcb4796810ec355f4b94" translate="yes" xml:space="preserve">
          <source>When I've got several faux-links, I prefer to give them a class of 'no-link'.</source>
          <target state="translated">Cuando tengo varios enlaces falsos,prefiero darles una clase de &quot;no-enlace&quot;.</target>
        </trans-unit>
        <trans-unit id="f8e2369b8d99375a6e5639486043b3d2146e4b56" translate="yes" xml:space="preserve">
          <source>When mouse hovers over the link, it doesn't show that it is a script.</source>
          <target state="translated">Cuando el ratón pasa por encima del enlace,no muestra que es un guión.</target>
        </trans-unit>
        <trans-unit id="61b44bbc89b917fa7c30a0f1a3f58894ad655538" translate="yes" xml:space="preserve">
          <source>Which will not do anything.</source>
          <target state="translated">Que no hará nada.</target>
        </trans-unit>
        <trans-unit id="a314a0ef6189eb65d5b3e4debee37ac4fae3168f" translate="yes" xml:space="preserve">
          <source>Which “href” value should I use for JavaScript links, “#” or “javascript:void(0)”</source>
          <target state="translated">¿Qué valor de &quot;href&quot; debo usar para los enlaces de JavaScript,&quot;#&quot; o &quot;javascript:void(0)&quot;</target>
        </trans-unit>
        <trans-unit id="2a61d37d475e6b6597176eb106fb6d1c59b1e618" translate="yes" xml:space="preserve">
          <source>Will always intercept in case your onclick event fails.</source>
          <target state="translated">Siempre se interceptará en caso de que su evento onclick falle.</target>
        </trans-unit>
        <trans-unit id="731d0ff294ec0c3887a1f04959fba2a5602adff4" translate="yes" xml:space="preserve">
          <source>Will not have errant load calls happen, or trigger other events based on a hash change</source>
          <target state="translated">No se producirán llamadas de carga errantes,ni se desencadenarán otros eventos basados en un cambio de hachís</target>
        </trans-unit>
        <trans-unit id="3738d55a9cad1f32952968ee8cbc0cf807b6e3f9" translate="yes" xml:space="preserve">
          <source>You can always do the following:</source>
          <target state="translated">Siempre puedes hacer lo siguiente:</target>
        </trans-unit>
        <trans-unit id="da7531d336c39a47e5eaed5fa94893126500dc7d" translate="yes" xml:space="preserve">
          <source>You can attach events (click, hover, etc.) on almost every element, so why not just use a &lt;code&gt;span&lt;/code&gt;or a &lt;code&gt;div&lt;/code&gt;?</source>
          <target state="translated">Puede adjuntar eventos (clic, desplazamiento, etc.) en casi todos los elementos, entonces, &amp;iquest;por qu&amp;eacute; no solo usar un &lt;code&gt;span&lt;/code&gt; o un &lt;code&gt;div&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="ab971355f6658d7288c950fff818ea0aa5ea9f9b" translate="yes" xml:space="preserve">
          <source>You can simply use a &lt;code&gt;&amp;lt;button /&amp;gt;&lt;/code&gt; instead to do things or any other element like b, span or whatever fits there as per your need, because you are allowed to add events on all the elements.</source>
          <target state="translated">Simplemente puede usar un &lt;code&gt;&amp;lt;button /&amp;gt;&lt;/code&gt; lugar para hacer cosas o cualquier otro elemento como b, span o lo que se ajuste seg&amp;uacute;n sus necesidades, ya que puede agregar eventos en todos los elementos.</target>
        </trans-unit>
        <trans-unit id="e7a36ec7a3315f07240fb3666b9b0045b809b1ef" translate="yes" xml:space="preserve">
          <source>You should always strive for graceful degradation (in the event that the user doesn't have JavaScript enabled...and when it is with specs. and budget).  Also, it is considered bad form to use JavaScript attributes and protocol directly in HTML.</source>
          <target state="translated">Siempre debes esforzarte por una degradación grácil (en el caso de que el usuario no tenga activado el Javascript...y cuando sea con las especificaciones y el presupuesto).Además,se considera mala forma el uso de atributos y protocolo de JavaScript directamente en HTML.</target>
        </trans-unit>
        <trans-unit id="619ece4847838fa5df03de55dd03cce3f3c0a698" translate="yes" xml:space="preserve">
          <source>You're spending your time writing incredibly overly verbose code - which has very little (if any) benefit to your codebase.</source>
          <target state="translated">Pasas tu tiempo escribiendo un código increíblemente excesivo,que tiene muy poco (si es que tiene alguno)beneficio para tu base de código.</target>
        </trans-unit>
        <trans-unit id="8699b249c4dcf2e85dacd055f92f3fd58667de39" translate="yes" xml:space="preserve">
          <source>and omit both &lt;code&gt;href=&quot;#&quot;&lt;/code&gt; and &lt;code&gt;href=&quot;javascript:void(0)&quot;&lt;/code&gt;.</source>
          <target state="translated">y omita &lt;code&gt;href=&quot;#&quot;&lt;/code&gt; y &lt;code&gt;href=&quot;javascript:void(0)&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b54c9fdd392c0c6c0634d55188bd5d64387083d8" translate="yes" xml:space="preserve">
          <source>instantiates new copy of engine</source>
          <target state="translated">instanciando una nueva copia del motor</target>
        </trans-unit>
        <trans-unit id="571d5bc739cc9f7bbab15b2de12fe6c2903c98a9" translate="yes" xml:space="preserve">
          <source>instead</source>
          <target state="translated">instead</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="dc07658cb62d9aef55e874007ead4934d0b9c2bc" translate="yes" xml:space="preserve">
          <source>pollutes history</source>
          <target state="translated">contamina la historia</target>
        </trans-unit>
        <trans-unit id="5b0a43ff2ce4a480c6dd584e5f5cc50c43071f56" translate="yes" xml:space="preserve">
          <source>runs in global scope and doesn't respect event system.</source>
          <target state="translated">tiene un alcance global y no respeta el sistema de eventos.</target>
        </trans-unit>
        <trans-unit id="ab7fd42e195f24dca7b841f1fff928b3bf815ee3" translate="yes" xml:space="preserve">
          <source>with little bit of jQuery</source>
          <target state="translated">con un poco de jQuery</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
