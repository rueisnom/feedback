<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/134845">
    <body>
      <group id="134845">
        <trans-unit id="bd9a05fc79dc919ee8f37187136cd170c86ec000" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#&lt;/code&gt; is better than &lt;code&gt;javascript:anything&lt;/code&gt;, but the following is even better:</source>
          <target state="translated">&lt;code&gt;#&lt;/code&gt; 比 &lt;code&gt;javascript:anything&lt;/code&gt; 更好，但以下内容甚至更好：</target>
        </trans-unit>
        <trans-unit id="d13303585dad04c88853285805c96d301ae351ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;a [routerLink]=&quot;&quot; (click)=&quot;passTheSalt()&quot;&amp;gt;Click me&amp;lt;/a&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;a [routerLink]=&quot;&quot; (click)=&quot;passTheSalt()&quot;&amp;gt;Click me&amp;lt;/a&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66098ba4c05ecdfacd9f658027335da408922dd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'#'&lt;/code&gt; will take the user back to the top of the page, so I usually go with &lt;code&gt;void(0)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'#'&lt;/code&gt; 会将用户带回到页面顶部，因此我通常选择 &lt;code&gt;void(0)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="312f97c5a58e6153e44c36e633daf36e3ba7f7a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;javascript:;&lt;/code&gt; also behaves like &lt;code&gt;javascript:void(0);&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;javascript:;&lt;/code&gt; 也表现得像 &lt;code&gt;javascript:void(0);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d630050255eb1447bf20aa08fa1d2d8f3b9370be" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Or you can change the &lt;strong&gt;href&lt;/strong&gt; attribute with JavaScript like:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;或者，您可以使用JavaScript更改&lt;strong&gt;href&lt;/strong&gt;属性，例如：&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a1b67b7d55d05fa470b042c000c35c102854a70a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;*Note:&lt;/strong&gt; For dynamically created elements, use:</source>
          <target state="translated">&lt;strong&gt;*注意：&lt;/strong&gt;对于动态创建的元素，请使用：</target>
        </trans-unit>
        <trans-unit id="dd18ad4d12234247b1086240c340527f7ff571a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Don't use links for the sole purpose of running JavaScript.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;不要仅出于运行JavaScript的目的而使用链接。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1ed559f58d1012098e76aa02f5987633940fcf2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTML&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;HTML&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45565dc2a4e38dfb88e321711fd07ae8f3e420e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JavaScript&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;JavaScript&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b423dbffd6212f2c51f0b1683e68068ddc8f1493" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reasons:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Reasons:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="279e0a0c57b48964447c3c7b49cb421013744ca1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;or&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;or&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="64a36367510a74320eeb73e9f7eb07284507c67a" translate="yes" xml:space="preserve">
          <source>A blackboxed &lt;em&gt;&lt;a href=&quot;http://documentcloud.github.com/backbone/&quot;&gt;Backbone.js&lt;/a&gt;&lt;/em&gt; example</source>
          <target state="translated">黑盒&lt;em&gt;&lt;a href=&quot;http://documentcloud.github.com/backbone/&quot;&gt;Backbone.js&lt;/a&gt;&lt;/em&gt;示例</target>
        </trans-unit>
        <trans-unit id="37a8070f7c88e3349acd823f028acbc805037eb6" translate="yes" xml:space="preserve">
          <source>A second reason for avoiding &lt;code&gt;#&lt;/code&gt; is that the final &lt;code&gt;return false;&lt;/code&gt; will not execute if the called function throws an error. Hence the developers have to also remember to handle any error appropriately in the called function.</source>
          <target state="translated">避免使用 &lt;code&gt;#&lt;/code&gt; 的第二个原因是最终 &lt;code&gt;return false;&lt;/code&gt; 如果被调用的函数抛出错误，将不会执行。 因此，开发人员还必须记住在调用的函数中适当地处理任何错误。</target>
        </trans-unit>
        <trans-unit id="21105a7cdd1e4d498a450d175c3236a8e1dd36cd" translate="yes" xml:space="preserve">
          <source>A third reason is that there are cases where the &lt;code&gt;onclick&lt;/code&gt; event property is assigned dynamically.  I prefer to be able to call a function or assign it dynamically without having to code the function specifically for one method of attachment or another. Hence my &lt;code&gt;onclick&lt;/code&gt; (or on anything) in HTML markup look like this:</source>
          <target state="translated">第三个原因是在某些情况下 &lt;code&gt;onclick&lt;/code&gt; 事件属性是动态分配的。 我更喜欢能够调用一个函数或动态分配它，而不必专门为一种附加方法或另一种附加方法编写函数。 因此，HTML标记中的 &lt;code&gt;onclick&lt;/code&gt; （或其他任何内容）如下所示：</target>
        </trans-unit>
        <trans-unit id="a4ed08c4c6145cdd2af098012bc4d6243908855f" translate="yes" xml:space="preserve">
          <source>And at the end, if you are binding the event from the JavaScript code itself, there you can do &lt;code&gt;event.preventDefault()&lt;/code&gt; to achieve this if you are using &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag, but if you are not using a &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag for this, there you get an advantage, you don't need to do this.</source>
          <target state="translated">最后，如果您要绑定JavaScript代码本身中的事件，则可以使用 &lt;code&gt;event.preventDefault()&lt;/code&gt; 来实现（如果您使用的是 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 标记，但是如果您没有使用 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 标记）这样，您就可以获得优势，而您不需要这样做。</target>
        </trans-unit>
        <trans-unit id="6d47584a657f22627c286c065b01ef0eec3ff30e" translate="yes" xml:space="preserve">
          <source>And for dynamically created elements which are created with dynamically created elements, use:</source>
          <target state="translated">而对于用动态创建的元素,用动态创建的元素,用。</target>
        </trans-unit>
        <trans-unit id="453026dc796aeb6d29ddf8df59d8b46fa665a396" translate="yes" xml:space="preserve">
          <source>And for the HTML, the link is simply</source>
          <target state="translated">而对于HTML,链接简单来说就是</target>
        </trans-unit>
        <trans-unit id="95f5aa76b12c67b525c77c3e75be466cc937bf2c" translate="yes" xml:space="preserve">
          <source>And for users with JavaScript disabled: if there isn't a fallback (for example, an alternative &lt;code&gt;href&lt;/code&gt;), they should at least not be able to see and interact with that element at all, whatever it is an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; or a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">对于禁用了JavaScript的用户：如果没有后备（例如，替代 &lt;code&gt;href&lt;/code&gt; ），则他们至少应该完全看不到该元素并与之交互，无论它是 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 还是 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 标记。</target>
        </trans-unit>
        <trans-unit id="e88eec5c27cba3632c0d40e5cbd3edd4fd8e378c" translate="yes" xml:space="preserve">
          <source>And style it with CSS:</source>
          <target state="translated">并用CSS进行样式化。</target>
        </trans-unit>
        <trans-unit id="35a844c6a80cfc07cc920daac48c12d3b58f5465" translate="yes" xml:space="preserve">
          <source>But I'm using that just for preventing the page jumping to the top when the user clicks on an empty anchor. I'm rarely using onClick and other &lt;code&gt;on&lt;/code&gt; events directly in HTML.</source>
          <target state="translated">但是我使用它只是为了防止用户单击空锚点时页面跳到顶部。 我很少在HTML中直接使用onClick和其他 &lt;code&gt;on&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="99a146f23e49914b10a58de2f533ddb845149264" translate="yes" xml:space="preserve">
          <source>But semantically, all the above ways to achieve this are wrong &lt;em&gt;(it works fine though)&lt;/em&gt;. If any element is not created to navigate the page and that have some JavaScript things associated with it, then it should not be a &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">但是从语义上讲，以上所有实现此目的的方法都是错误的&lt;em&gt;（尽管效果很好）&lt;/em&gt; 。 如果未创建任何元素来导航页面并且具有与之关联的一些JavaScript东西，则该元素不应为 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 标记。</target>
        </trans-unit>
        <trans-unit id="fbd07b5abfd55cfe055cb14acc954e5ad57b454b" translate="yes" xml:space="preserve">
          <source>But then they forget to use &lt;code&gt;return doSomething()&lt;/code&gt; in the onclick and just use &lt;code&gt;doSomething()&lt;/code&gt;.</source>
          <target state="translated">但是后来他们忘记在onclick中使用 &lt;code&gt;return doSomething()&lt;/code&gt; ，而仅使用 &lt;code&gt;doSomething()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b42a1500b25c0660b57181b19c01d4b3eb7c6fbf" translate="yes" xml:space="preserve">
          <source>By using &lt;code&gt;return false;&lt;/code&gt;, the page doesn't jump to the top or break the &lt;code&gt;back&lt;/code&gt; button.</source>
          <target state="translated">通过使用 &lt;code&gt;return false;&lt;/code&gt; ，页面不会跳到顶部或中断 &lt;code&gt;back&lt;/code&gt; 按钮。</target>
        </trans-unit>
        <trans-unit id="fdc74074ca47c21bd3b21b6aeb8f256f90c8e2c9" translate="yes" xml:space="preserve">
          <source>Check out &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Unobtrusive_JavaScript&quot;&gt;Unobtrusive JavaScript&lt;/a&gt;&lt;/em&gt; and &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Progressive_enhancement&quot;&gt;Progressive enhancement&lt;/a&gt;&lt;/em&gt; (both Wikipedia).</source>
          <target state="translated">查看&lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Unobtrusive_JavaScript&quot;&gt;Unobtrusive JavaScript&lt;/a&gt;&lt;/em&gt;和&lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Progressive_enhancement&quot;&gt;Progressive增强功能&lt;/a&gt;&lt;/em&gt; （均为Wikipedia）。</target>
        </trans-unit>
        <trans-unit id="a2b39636986a25ff8379e8d673a9d2a172edde07" translate="yes" xml:space="preserve">
          <source>Definitely hash (&lt;code&gt;#&lt;/code&gt;) is better because in JavaScript it is a pseudoscheme:</source>
          <target state="translated">绝对哈希（ &lt;code&gt;#&lt;/code&gt; ）更好，因为在JavaScript中它是一个伪方案：</target>
        </trans-unit>
        <trans-unit id="ab225a03db28555ac74d12a43409554a8e1d0685" translate="yes" xml:space="preserve">
          <source>Depending on what you want to accomplish, you could forget the onclick and just use the href:</source>
          <target state="translated">根据你想达到的目的,你可以忘记onclick,直接使用href。</target>
        </trans-unit>
        <trans-unit id="ccfb7f94fd7eac312a70ee0ec8cd7a643243d3cf" translate="yes" xml:space="preserve">
          <source>Doing &lt;code&gt;&amp;lt;a href=&quot;#&quot; onclick=&quot;myJsFunc();&quot;&amp;gt;Link&amp;lt;/a&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;myJsFunc();&quot;&amp;gt;Link&amp;lt;/a&amp;gt;&lt;/code&gt; or whatever else that contains an &lt;code&gt;onclick&lt;/code&gt; attribute - was okay back five years ago, though now it can be a bad practice. Here's why:</source>
          <target state="translated">进行 &lt;code&gt;&amp;lt;a href=&quot;#&quot; onclick=&quot;myJsFunc();&quot;&amp;gt;Link&amp;lt;/a&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;myJsFunc();&quot;&amp;gt;Link&amp;lt;/a&amp;gt;&lt;/code&gt; 或包含 &lt;code&gt;onclick&lt;/code&gt; 属性的所有其他内容-早在5年前都是可以的，尽管现在这可能是个坏习惯。 原因如下：</target>
        </trans-unit>
        <trans-unit id="d7e4b16f963f46e303d8129da25ee4fda74df07e" translate="yes" xml:space="preserve">
          <source>Example... Let's say you have the following search link:</source>
          <target state="translated">例子.....。假设你有下面的搜索链接。</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">扩展片段</target>
        </trans-unit>
        <trans-unit id="256b34ae5bf64fd1e7c412983943787c254f3234" translate="yes" xml:space="preserve">
          <source>For a scalable, blackboxed, Backbone.js component example - &lt;em&gt;&lt;a href=&quot;http://jsfiddle.net/balupton/sTzdD/&quot;&gt;see this working jsfiddle example here&lt;/a&gt;&lt;/em&gt;. Notice how we utilize unobtrusive JavaScript practices, and in a tiny amount of code have a component that can be repeated across the page multiple times without side-effects or conflicts between the different component instances. Amazing!</source>
          <target state="translated">有关可伸缩的，黑盒的Backbone.js组件示例， &lt;em&gt;&lt;a href=&quot;http://jsfiddle.net/balupton/sTzdD/&quot;&gt;请参见此处的jsfiddle示例&lt;/a&gt;&lt;/em&gt; 。 请注意，我们是如何利用不干扰JavaScript的做法，并且在很少的代码中，一个组件可以在页面上重复多次，而不会在不同组件实例之间产生副作用或冲突。 惊人！</target>
        </trans-unit>
        <trans-unit id="9f738ce8457f291b18ee47e665e96baa84f38fcd" translate="yes" xml:space="preserve">
          <source>HTML</source>
          <target state="translated">HTML</target>
        </trans-unit>
        <trans-unit id="11dc542c0ffeed8b41bad901e2044f438e4ab0e5" translate="yes" xml:space="preserve">
          <source>HTML:</source>
          <target state="translated">HTML:</target>
        </trans-unit>
        <trans-unit id="bfe5704ee66566a95b73c5b240c85d48233a0c03" translate="yes" xml:space="preserve">
          <source>Here is a sample. Home/ChangePicture is a working link to a form on a page complete with user interface and standard HTML submit buttons, but it looks nicer injected into a modal dialog with jQueryUI buttons. Either way works, depending on the browser, which satisfies mobile first development.</source>
          <target state="translated">这里有一个示例。HomeChangePicture是一个工作链接到一个页面上的表单的链接,带有完整的用户界面和标准的HTML提交按钮,但它被注入到一个带有jQueryUI按钮的模态对话框中看起来更好。无论哪种方式都可以,这取决于浏览器,满足了移动端开发的需求。</target>
        </trans-unit>
        <trans-unit id="48a45ae35adf7aefdc4234047465cfabe67b39db" translate="yes" xml:space="preserve">
          <source>Here's &lt;strong&gt;&lt;a href=&quot;http://jsFiddle.net/mdesdev/Dn8YT/&quot;&gt;a jsFiddle&lt;/a&gt;&lt;/strong&gt; example of above aforementioned.</source>
          <target state="translated">这是上面提到&lt;strong&gt;&lt;a href=&quot;http://jsFiddle.net/mdesdev/Dn8YT/&quot;&gt;的jsFiddle&lt;/a&gt;&lt;/strong&gt;示例。</target>
        </trans-unit>
        <trans-unit id="af0f247bdfb76d39157de73b38f8c569f1bed9c5" translate="yes" xml:space="preserve">
          <source>I agree with Mr. D4V360 who suggested that, even though you are using the anchor tag, you do not truly have an anchor here. All you have is a special section of a document that should behave slightly different. A &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag is far more appropriate.</source>
          <target state="translated">我同意D4V360先生的意见，他建议，即使您使用的是定位标记，也没有真正的定位标记。 您所拥有的只是文档的特殊部分，其行为应略有不同。 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 标记更合适。</target>
        </trans-unit>
        <trans-unit id="8b66ccf07b47db554765f27b6c481f900714e083" translate="yes" xml:space="preserve">
          <source>I agree with suggestions elsewhere stating that you should use regular URL in &lt;code&gt;href&lt;/code&gt; attribute, then call some JavaScript function in onclick. The flaw is, that they automaticaly add &lt;code&gt;return false&lt;/code&gt; after the call.</source>
          <target state="translated">我同意其他地方的建议，即应该在 &lt;code&gt;href&lt;/code&gt; 属性中使用常规URL，然后在onclick中调用一些JavaScript函数。 缺陷在于，它们会在调用后自动添加 &lt;code&gt;return false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a380124779a6a974fd92f45c584ebee1075ab8a7" translate="yes" xml:space="preserve">
          <source>I believe you are presenting a false dichotomy. These are not the only two options.</source>
          <target state="translated">我相信你提出了一个错误的二分法。这不是唯一的两个选择。</target>
        </trans-unit>
        <trans-unit id="a95f583000a6d6471c45baf0530d2dddf28a9013" translate="yes" xml:space="preserve">
          <source>I choose use &lt;code&gt;javascript:void(0)&lt;/code&gt;, because use this could prevent right click to open the content menu. But &lt;code&gt;javascript:;&lt;/code&gt; is shorter and does the same thing.</source>
          <target state="translated">我选择使用 &lt;code&gt;javascript:void(0)&lt;/code&gt; ，因为使用此选项可能会阻止右键单击以打开内容菜单。 但是 &lt;code&gt;javascript:;&lt;/code&gt; 较短，并且执行相同的操作。</target>
        </trans-unit>
        <trans-unit id="96087e21f2dbf7911c372442be487eb14f5a264d" translate="yes" xml:space="preserve">
          <source>I don't like using Hash-Tags unless they're used for anchors, and I only do the above when I've got more than two faux-links, otherwise I go with javascript:void(0).</source>
          <target state="translated">我不喜欢使用Hash-Tags,除非是用来做锚,而且我只在有两个以上的假链接的时候才会用上面的方法,否则我会用javascript:void(0)。</target>
        </trans-unit>
        <trans-unit id="e1768468b361fab43f929b120179e50e5000f5c3" translate="yes" xml:space="preserve">
          <source>I personally use them in combination. For example:</source>
          <target state="translated">我个人认为两者结合使用。比如说。</target>
        </trans-unit>
        <trans-unit id="1f0983da23d5be03a8b645a4411ddd3ac7bc75ec" translate="yes" xml:space="preserve">
          <source>I realize this isn't always possible, but in my opinion it should be striven for in developing any public website.</source>
          <target state="translated">我知道这并不总是可能的,但在我看来,在开发任何公共网站时都应该争取做到这一点。</target>
        </trans-unit>
        <trans-unit id="58b87b45b40fd41bb411d996f2114853bdb955b8" translate="yes" xml:space="preserve">
          <source>I recommend using a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; element instead, &lt;em&gt;especially&lt;/em&gt; if the control is supposed to produce a change in the data. (Something like a POST.)</source>
          <target state="translated">我建议改为使用 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 元素， &lt;em&gt;尤其是&lt;/em&gt;在控件应该对数据进行更改的情况下。 （有点像POST。）</target>
        </trans-unit>
        <trans-unit id="0659955dd4df5923a30ee6d5913674dc5d8e2b01" translate="yes" xml:space="preserve">
          <source>I tried both in google chrome with the developer tools, and the &lt;code&gt;id=&quot;#&quot;&lt;/code&gt; took 0.32 seconds. While the &lt;code&gt;javascript:void(0)&lt;/code&gt; method took only 0.18 seconds. So in google chrome, &lt;code&gt;javascript:void(0)&lt;/code&gt; works better and faster.</source>
          <target state="translated">我在Google Chrome浏览器中使用开发者工具进行了尝试，而 &lt;code&gt;id=&quot;#&quot;&lt;/code&gt; 花费了0.32秒。 而 &lt;code&gt;javascript:void(0)&lt;/code&gt; 方法仅需0.18秒。 因此在谷歌浏览器中， &lt;code&gt;javascript:void(0)&lt;/code&gt; 会更好，更快地工作。</target>
        </trans-unit>
        <trans-unit id="5109866b7d3389f201821ad19d4d064cc956b926" translate="yes" xml:space="preserve">
          <source>I use &lt;code&gt;javascript:void(0)&lt;/code&gt;.</source>
          <target state="translated">我使用 &lt;code&gt;javascript:void(0)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c172eebb89e95daca91530697b9af96397c94df8" translate="yes" xml:space="preserve">
          <source>I use the following</source>
          <target state="translated">我使用的方法如下</target>
        </trans-unit>
        <trans-unit id="57cf8845fa007adeab3a5acc415f45fd1bb1846a" translate="yes" xml:space="preserve">
          <source>I usually go for</source>
          <target state="translated">我一般都会选择</target>
        </trans-unit>
        <trans-unit id="eb7c88cfddb1e942897629653e455a623a4de90f" translate="yes" xml:space="preserve">
          <source>I would honestly suggest neither.  I would use a stylized &lt;code&gt;&amp;lt;button&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt; for that behavior.</source>
          <target state="translated">老实说，我都不建议。 对于该行为，我将使用风格化的 &lt;code&gt;&amp;lt;button&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3abe3dddf2b07b6bfdae8fdc108601add56c4f34" translate="yes" xml:space="preserve">
          <source>I would use:</source>
          <target state="translated">我会用。</target>
        </trans-unit>
        <trans-unit id="804270c45f2c120a3a97bbb1e763a5eaffcbd795" translate="yes" xml:space="preserve">
          <source>I'm basically paraphrasing from &lt;a href=&quot;http://www.matthidinger.com/archive/2011/02/22/Progressive-enhancement-tutorial-with-ASP-NET-MVC-3-and-jQuery.aspx&quot;&gt;this practical article using progressive enhancement&lt;/a&gt;. &lt;strong&gt;The short answer is that you never use &lt;code&gt;javascript:void(0);&lt;/code&gt; or &lt;code&gt;#&lt;/code&gt; unless your user interface has already inferred that JavaScript is enabled, in which case you should use &lt;code&gt;javascript:void(0);&lt;/code&gt;&lt;/strong&gt;. Also, do not use span as links, since that is semantically false to begin with.</source>
          <target state="translated">我基本上是从&lt;a href=&quot;http://www.matthidinger.com/archive/2011/02/22/Progressive-enhancement-tutorial-with-ASP-NET-MVC-3-and-jQuery.aspx&quot;&gt;这篇使用渐进增强的实用文章来&lt;/a&gt;解释的。 &lt;strong&gt;简短的答案是，您永远不要使用 &lt;code&gt;javascript:void(0);&lt;/code&gt; &lt;/strong&gt; &lt;strong&gt;或 &lt;code&gt;#&lt;/code&gt; ,除非您的用户界面已经推断出已启用JavaScript，在这种情况下，您应该使用 &lt;code&gt;javascript:void(0);&lt;/code&gt; &lt;/strong&gt; 。 另外，请勿将span用作链接，因为一开始它在语义上是错误的。</target>
        </trans-unit>
        <trans-unit id="6d5d36429acbb4b8b2f395fbbdf6acc6a3c38a0b" translate="yes" xml:space="preserve">
          <source>Ideally you'd do this:</source>
          <target state="translated">理想情况下,你会这样做。</target>
        </trans-unit>
        <trans-unit id="00d2f854e6bdeb1c870bd9dbb5045f67d2c0bbe3" translate="yes" xml:space="preserve">
          <source>If that is not possible, then you should at least inject the anchor tag into the document with JavaScript and the appropriate click event handlers.</source>
          <target state="translated">如果无法做到这一点,那么你至少应该在文档中注入锚标记,并使用JavaScript和适当的点击事件处理程序。</target>
        </trans-unit>
        <trans-unit id="212472301315975ffd2e37b699dd3653d5d7ab0b" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;href&lt;/code&gt; maybe there is no reason to use an anchor tag.</source>
          <target state="translated">如果没有 &lt;code&gt;href&lt;/code&gt; ,也许没有理由使用定位标记。</target>
        </trans-unit>
        <trans-unit id="3fbd40c242c40cb0b3c6722827bfd1390a74dc28" translate="yes" xml:space="preserve">
          <source>If you &lt;em&gt;MUST&lt;/em&gt; use an A element, use &lt;code&gt;javascript:void(0);&lt;/code&gt; for reasons already mentioned.</source>
          <target state="translated">如果&lt;em&gt;必须&lt;/em&gt;使用A元素，请使用 &lt;code&gt;javascript:void(0);&lt;/code&gt; 由于已经提到的原因。</target>
        </trans-unit>
        <trans-unit id="28d7882ac4e01aeaa34e02649f7788fc7aad6938" translate="yes" xml:space="preserve">
          <source>If you can have an actual URL that makes sense use that as the HREF.  The onclick won't fire if someone middle-clicks on your link to open a new tab or if they have JavaScript disabled.</source>
          <target state="translated">如果你有一个实际的URL,可以用它作为HREF。如果有人中键点击你的链接打开一个新的标签,或者他们已经禁用了JavaScript,那么onclick就不会启动。</target>
        </trans-unit>
        <trans-unit id="de669b86638dcf73ae3668a5c38687eddd030088" translate="yes" xml:space="preserve">
          <source>If you happen to be using &lt;a href=&quot;http://angularjs.org/&quot;&gt;&lt;strong&gt;AngularJS&lt;/strong&gt;&lt;/a&gt;, you can use the following:</source>
          <target state="translated">如果碰巧正在使用&lt;a href=&quot;http://angularjs.org/&quot;&gt;&lt;strong&gt;AngularJS&lt;/strong&gt;&lt;/a&gt; ，则可以使用以下代码：</target>
        </trans-unit>
        <trans-unit id="804f3288dea9da73c4359b16a93c611d804ee543" translate="yes" xml:space="preserve">
          <source>If you use Angular2, this way works:</source>
          <target state="translated">如果你用的是Angular2,这种方式也可以。</target>
        </trans-unit>
        <trans-unit id="ad5929b44b8b9854ce64c2375d1bc9cc7608ddf0" translate="yes" xml:space="preserve">
          <source>If you want your action to still work with JavaScript disabled, then using an &lt;code&gt;a&lt;/code&gt; element with a &lt;code&gt;href&lt;/code&gt; attribute that goes to some URL that will perform the action manually instead of via an Ajax request or whatever should be the way to go. If you are doing this, then you want to ensure you do an &lt;code&gt;event.preventDefault()&lt;/code&gt; on your click call to make sure when the button is clicked it does not follow the link. This option is called graceful degradation.</source>
          <target state="translated">如果您希望您的操作在禁用JavaScript的情况下仍能正常工作，则可以使用具有 &lt;code&gt;href&lt;/code&gt; 属性 &lt;code&gt;a&lt;/code&gt; 元素， 该元素具有一些URL，该URL将手动执行操作，而不是通过Ajax请求或应采取的任何方式。 如果执行此操作，那么您要确保对click调用执行 &lt;code&gt;event.preventDefault()&lt;/code&gt; ，以确保单击按钮时它不会跟随链接。 此选项称为正常降级。</target>
        </trans-unit>
        <trans-unit id="32737c28e056736b9f71e199ea71ce66c890d6e0" translate="yes" xml:space="preserve">
          <source>If your &quot;link&quot; has the sole purpose of running some JavaScript code it doesn't qualify as a link; rather a piece of text with a JavaScript function coupled to it. I would recommend to use a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag with an &lt;code&gt;onclick handler&lt;/code&gt; attached to it and some basic CSS to immitate a link. Links are made for navigation, and if your JavaScript code isn't for navigation it should not be an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">如果您的&amp;ldquo;链接&amp;rdquo;的唯一目的是运行一些JavaScript代码，则该链接不符合链接的条件； 而是一段带有JavaScript函数的文本。 我建议使用 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 标记以及附加的 &lt;code&gt;onclick handler&lt;/code&gt; 和一些基本CSS来模仿链接。 链接用于导航，如果您的JavaScript代码不用于导航，则不应将其作为 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 标记。</target>
        </trans-unit>
        <trans-unit id="46e3a38016d86ba7214b26757c2cfc95f05dd8d8" translate="yes" xml:space="preserve">
          <source>In addition</source>
          <target state="translated">此外</target>
        </trans-unit>
        <trans-unit id="de626ba3c47bd3e6c70f8fa7b92ad16e7ab1df22" translate="yes" xml:space="preserve">
          <source>In addition, regarding cowgod's suggestion, particularly this: &lt;code&gt;...href=&quot;javascript_required.html&quot; onclick=&quot;...&lt;/code&gt; This is good approach, but it doesn't distinguish between &quot;JavaScript disabled&quot; and &quot;onclick fails&quot; scenarios.</source>
          <target state="translated">另外，关于Cowgod的建议，尤其是这样： &lt;code&gt;...href=&quot;javascript_required.html&quot; onclick=&quot;...&lt;/code&gt; 这是一个好方法，但是不能区分&amp;ldquo; JavaScript禁用&amp;rdquo;和&amp;ldquo; onclick失败&amp;rdquo;两种情况。</target>
        </trans-unit>
        <trans-unit id="5f4095b56e1965992a00ffe2c85250cb05dcfc85" translate="yes" xml:space="preserve">
          <source>Instead, use an element other than a link:</source>
          <target state="translated">相反,使用链接以外的元素。</target>
        </trans-unit>
        <trans-unit id="3a64ed76369a90aa5c918a8b11d861c017006fa9" translate="yes" xml:space="preserve">
          <source>It gets around the need to return false. I don't like the &lt;code&gt;#&lt;/code&gt; option because, as mentioned, it will take the user to the top of the page. If you have somewhere else to send the user if they don't have JavaScript enabled (which is rare where I work, but a very good idea), then Steve's proposed method works great.</source>
          <target state="translated">它绕过了返回false的需要。 我不喜欢 &lt;code&gt;#&lt;/code&gt; 选项，因为如上所述，它将带用户到页面顶部。 如果您在其他地方未启用JavaScript来发送用户（这在我工作的地方很少见，但这是一个很好的主意），那么Steve提出的方法非常有用。</target>
        </trans-unit>
        <trans-unit id="4aba6ab3ebf5c70f336816f81bd49cb9be79da3b" translate="yes" xml:space="preserve">
          <source>It is short an concise</source>
          <target state="translated">它是一个简明扼要的</target>
        </trans-unit>
        <trans-unit id="05d248935f7dfb7c2986856b90ff8132ad46390c" translate="yes" xml:space="preserve">
          <source>It promotes the practice of obtrusive JavaScript - which has turned out to be difficult to maintain and difficult to scale. More on this in &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Unobtrusive_JavaScript&quot;&gt;Unobtrusive JavaScript&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">它促进了侵入性JavaScript的实践-事实证明，JavaScript难以维护且难以扩展。 &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Unobtrusive_JavaScript&quot;&gt;Unobtrusive JavaScript中的&lt;/a&gt;&lt;/em&gt;更多内容。</target>
        </trans-unit>
        <trans-unit id="78ab3661fb4274583e571731590054b5ccbe8d86" translate="yes" xml:space="preserve">
          <source>It will not take you to the top of the page, as with (#)</source>
          <target state="translated">它不会带你到页面的顶部,就像(#)</target>
        </trans-unit>
        <trans-unit id="ee0a7d8c1d6e41002b515104d36b8e33adec0a88" translate="yes" xml:space="preserve">
          <source>It would be better to use jQuery,</source>
          <target state="translated">最好是用jQuery。</target>
        </trans-unit>
        <trans-unit id="c7829ed128c64788f09241792585b6b6ca508330" translate="yes" xml:space="preserve">
          <source>It's even better if you inject the elements unobtrusively, a type of progressive enhancement. (See &lt;a href=&quot;https://stackoverflow.com/questions/134845/href-for-javascript-links-or-javascriptvoid0#134957&quot;&gt;this comment&lt;/a&gt;.)</source>
          <target state="translated">如果不加干扰地注入元素（一种渐进增强），那就更好了。 （请参阅&lt;a href=&quot;https://stackoverflow.com/questions/134845/href-for-javascript-links-or-javascriptvoid0#134957&quot;&gt;此评论&lt;/a&gt; 。）</target>
        </trans-unit>
        <trans-unit id="d7a3fa77b0b23097c1a73962b4a6a268909df9fd" translate="yes" xml:space="preserve">
          <source>It's shorter than javascript:void(0) and does the same.</source>
          <target state="translated">它比javascript:void(0)更短,作用相同。</target>
        </trans-unit>
        <trans-unit id="cfb6fdf6dd9570afa354dfcf688c4ee6c87c5367" translate="yes" xml:space="preserve">
          <source>JavaScript:</source>
          <target state="translated">JavaScript:</target>
        </trans-unit>
        <trans-unit id="027d0cca50d0abcf3c970c19a2fc5d77ab3580f5" translate="yes" xml:space="preserve">
          <source>Just don't have a &lt;code&gt;href&lt;/code&gt; attribute at all! Any good CSS reset would take care of the missing default cursor style, so that is a non-issue. Then attach your JavaScript functionality using graceful and unobtrusive  best practices - which are more maintainable as your JavaScript logic stays in JavaScript, instead of in your markup - which is essential when you start developing large scale JavaScript applications which require your logic to be split up into blackboxed components and templates. More on this in &lt;em&gt;&lt;a href=&quot;http://speakerdeck.com/u/addyosmani/p/large-scale-javascript-application-architecture&quot;&gt;Large-scale JavaScript Application Architecture&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">只是根本没有 &lt;code&gt;href&lt;/code&gt; 属性！ 任何好的CSS重置都会照顾到缺少的默认光标样式，因此这不是问题。 然后，使用优美而毫不费力的最佳做法附加JavaScript功能-当您的JavaScript逻辑停留在JavaScript中而不是在标记中时，这些做法将更具可维护性-当您开始开发大规模JavaScript应用程序时，这是必不可少的，而这需要将您的逻辑分解为黑盒的组件和模板。 &lt;em&gt;&lt;a href=&quot;http://speakerdeck.com/u/addyosmani/p/large-scale-javascript-application-architecture&quot;&gt;大规模JavaScript应用程序体系结构中的更多内容&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e79d804ae4c4d2418313f51b0a6c22f6469d32c6" translate="yes" xml:space="preserve">
          <source>Lastly, you can use &lt;code&gt;javascript:void(0)&lt;/code&gt; if you do not want anyone to go anywhere and if you don't want to call a JavaScript function. It works great if you have an image you want a mouseover event to happen with, but there's not anything for the user to click on.</source>
          <target state="translated">最后，如果您不希望任何人去任何地方并且不想调用JavaScript函数，则可以使用 &lt;code&gt;javascript:void(0)&lt;/code&gt; 。 如果您有想要发生鼠标悬停事件的图像，则效果很好，但是用户没有任何可单击的东西。</target>
        </trans-unit>
        <trans-unit id="98be2b1aaa56ea07d84773c494e9efaa717f0c18" translate="yes" xml:space="preserve">
          <source>My suggestion would be to use &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; element with the &lt;code&gt;class&lt;/code&gt; attribute instead of
an anchor. For example:</source>
          <target state="translated">我的建议是将 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 元素与 &lt;code&gt;class&lt;/code&gt; 属性一起使用，而不要使用锚点。 例如：</target>
        </trans-unit>
        <trans-unit id="1859e04da42645894d4f5a8456f449d16a579623" translate="yes" xml:space="preserve">
          <source>NOTE: You can replace the &lt;code&gt;0&lt;/code&gt; with a string such as &lt;code&gt;javascript:void('Delete record 123')&lt;/code&gt; which can serve as an extra indicator that will show what the click will actually do.</source>
          <target state="translated">注意：您可以将 &lt;code&gt;0&lt;/code&gt; 替换为诸如 &lt;code&gt;javascript:void('Delete record 123')&lt;/code&gt; 之类的字符串，该字符串可以用作额外的指示器，用于显示点击实际执行的操作。</target>
        </trans-unit>
        <trans-unit id="7d64ff37b1b1bbb318463de427a0b3e65aad1b34" translate="yes" xml:space="preserve">
          <source>Neither if you ask me;</source>
          <target state="translated">如果你问我,也不是。</target>
        </trans-unit>
        <trans-unit id="6408fac84dc551a699a1e0a8a0ec23490893a171" translate="yes" xml:space="preserve">
          <source>Neither.</source>
          <target state="translated">Neither.</target>
        </trans-unit>
        <trans-unit id="a4fe7b7b3fdc67415aec63114e067b36a0e3da5d" translate="yes" xml:space="preserve">
          <source>Note, that I negate the result of the &lt;code&gt;doSomething()&lt;/code&gt; function. If it works, it will return &lt;code&gt;true&lt;/code&gt;, so it will be negated (&lt;code&gt;false&lt;/code&gt;) and the &lt;code&gt;path/to/some/URL&lt;/code&gt; will not be called. If the function will return &lt;code&gt;false&lt;/code&gt; (for example, the browser doesn't support something used within the function or anything else goes wrong), it is negated to &lt;code&gt;true&lt;/code&gt; and the &lt;code&gt;path/to/some/URL&lt;/code&gt; is called.</source>
          <target state="translated">请注意，我否定了 &lt;code&gt;doSomething()&lt;/code&gt; 函数的结果。 如果有效，它将返回 &lt;code&gt;true&lt;/code&gt; ，因此将被否定（ &lt;code&gt;false&lt;/code&gt; ），并且不会调用 &lt;code&gt;path/to/some/URL&lt;/code&gt; 。 如果该函数将返回 &lt;code&gt;false&lt;/code&gt; （例如，浏览器不支持该函数中使用的某些内容或发生其他任何错误），则将其否定为 &lt;code&gt;true&lt;/code&gt; ,并调用 &lt;code&gt;path/to/some/URL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="b4b28229212dbfad05165a5bcaa2d9543543dc27" translate="yes" xml:space="preserve">
          <source>Of course &quot;#&quot; with an onclick handler which prevents default action is [much] better. Moreover, a link that has the sole purpose to run JavaScript is not really &quot;a link&quot; unless you are sending user to some sensible anchor on the page (just # will send to top) when something goes wrong. You can simply simulate look and feel of link with stylesheet and forget about href at all.</source>
          <target state="translated">当然,&quot;#&quot;有一个onclick处理程序,可以防止默认操作的 &quot;#&quot;会更好。此外,一个链接的唯一目的是运行JavaScript的链接并不是真正的 &quot;链接&quot;,除非你把用户发送到页面上的一些合理的锚点(只需将#发送到顶部),否则当出现问题时,你就可以把它发送到顶部。你可以简单地用样式表来模拟链接的外观和感觉,完全不用考虑href。</target>
        </trans-unit>
        <trans-unit id="3f89a0eec1da10518de63068696e628968159d46" translate="yes" xml:space="preserve">
          <source>Omitting the &lt;code&gt;href&lt;/code&gt; attribute on the &lt;code&gt;a&lt;/code&gt; element will cause &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_6&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;6&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_7&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;7&lt;/a&gt; to not take on the &lt;code&gt;a:hover&lt;/code&gt; styling, which is why we have added a simple JavaScript shim to accomplish this via &lt;code&gt;a.hover&lt;/code&gt; instead. Which is perfectly okay, as if you don't have a href attribute and no graceful degradation then your link won't work anyway - and you'll have bigger issues to worry about.</source>
          <target state="translated">在 &lt;code&gt;a&lt;/code&gt; 元素上省略 &lt;code&gt;href&lt;/code&gt; 属性将导致&lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_6&quot;&gt;Internet Explorer 6&lt;/a&gt;和&lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_7&quot;&gt;Internet Explorer 7&lt;/a&gt;不采用 &lt;code&gt;a:hover&lt;/code&gt; 样式，这就是为什么我们添加了一个简单的JavaScript shim来通过 &lt;code&gt;a.hover&lt;/code&gt; 来实现此目的的原因 。 完全可以，就像您没有href属性且没有正常降级一样，您的链接也将无法正常工作-您将有更大的问题要担心。</target>
        </trans-unit>
        <trans-unit id="79d90211195df24c07a1f39be84dcafb2c0c0cff" translate="yes" xml:space="preserve">
          <source>Omitting the &lt;code&gt;href&lt;/code&gt; attribute on the &lt;code&gt;a&lt;/code&gt; element will cause the element to not be accessible using &lt;code&gt;tab&lt;/code&gt; key navigation. If you wish for those elements to be accessible via the &lt;code&gt;tab&lt;/code&gt; key, you can set the &lt;code&gt;tabindex&lt;/code&gt; attribute, or use &lt;code&gt;button&lt;/code&gt; elements instead. You can easily style button elements to look like normal links as mentioned in &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/a/8525002/130638&quot;&gt;Tracker1's answer&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">在 &lt;code&gt;a&lt;/code&gt; 元素上省略 &lt;code&gt;href&lt;/code&gt; 属性将导致使用 &lt;code&gt;tab&lt;/code&gt; 键导航无法访问该元素。 如果希望通过 &lt;code&gt;tab&lt;/code&gt; 键可访问这些元素，则可以设置 &lt;code&gt;tabindex&lt;/code&gt; 属性，或改用 &lt;code&gt;button&lt;/code&gt; 元素。 您可以轻松设置按钮元素的样式，使其看起来像&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/a/8525002/130638&quot;&gt;Tracker1的answer中&lt;/a&gt;&lt;/em&gt;提到的普通链接。</target>
        </trans-unit>
        <trans-unit id="fd9e05ef7026ea1d31a3a27b1cbc509e85605be2" translate="yes" xml:space="preserve">
          <source>Or, even better, you'd have the default action link in the HTML, and you'd add the onclick event to the element unobtrusively via JavaScript after the DOM renders, thus ensuring that if JavaScript is not present/utilized you don't have useless event handlers riddling your code and potentially obfuscating (or at least distracting from) your actual content.</source>
          <target state="translated">或者,甚至更好,你可以在HTML中使用默认的动作链接,然后在DOM渲染后通过JavaScript将onclick事件添加到元素中,这样就可以确保如果JavaScript没有被使用,你就不会有无用的事件处理程序在你的代码中混淆你的代码,并有可能混淆(或至少是分散你的实际内容的注意力)。</target>
        </trans-unit>
        <trans-unit id="03c75c5ce96ade25b0a822150e4ade9ee3d0f56d" translate="yes" xml:space="preserve">
          <source>See here &lt;a href=&quot;https://stackoverflow.com/a/45465728/2803344&quot;&gt;https://stackoverflow.com/a/45465728/2803344&lt;/a&gt;</source>
          <target state="translated">看到这里&lt;a href=&quot;https://stackoverflow.com/a/45465728/2803344&quot;&gt;https://stackoverflow.com/a/45465728/2803344&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48f1019bcb9fa24ea0f76248ea083a4c0cd02134" translate="yes" xml:space="preserve">
          <source>Simple code example</source>
          <target state="translated">简单的代码示例</target>
        </trans-unit>
        <trans-unit id="6badb4f47fa2047e5ad167fd7ff402e1d9f4868c" translate="yes" xml:space="preserve">
          <source>Simple enough!</source>
          <target state="translated">很简单!</target>
        </trans-unit>
        <trans-unit id="49478b0f42b3a3835f22e0884382200e0c658115" translate="yes" xml:space="preserve">
          <source>So if you're a lone developer then you can clearly make your own choice, but if you work as a team you have to either state:</source>
          <target state="translated">所以,如果你是一个孤独的开发者,那么你可以明确地做出自己的选择,但如果你是作为一个团队的工作,那么你必须要有两种状态。</target>
        </trans-unit>
        <trans-unit id="1ac335dc215eec9b9f35bf9b20acd9ed338242ca" translate="yes" xml:space="preserve">
          <source>So, &lt;strong&gt;there is one benefit&lt;/strong&gt; to use &lt;code&gt;&amp;lt;a href=&quot;#&quot;&amp;gt;&lt;/code&gt;. You get the cursor pointer by default on that element when you do &lt;code&gt;a href=&quot;#&quot;&lt;/code&gt;. For that, I think you can use CSS for this like &lt;code&gt;cursor:pointer;&lt;/code&gt; which solves this problem also.</source>
          <target state="translated">因此，使用 &lt;code&gt;&amp;lt;a href=&quot;#&quot;&amp;gt;&lt;/code&gt; &lt;strong&gt;有一个好处&lt;/strong&gt; 。 当您执行 &lt;code&gt;a href=&quot;#&quot;&lt;/code&gt; 时，默认情况下会在该元素上获得光标指针。 为此，我认为您可以像使用 &lt;code&gt;cursor:pointer;&lt;/code&gt; 这样使用CSS 。 这也解决了这个问题。</target>
        </trans-unit>
        <trans-unit id="4a70586a9842b7d5401479afaec3f0a019fa6c2c" translate="yes" xml:space="preserve">
          <source>So, if you see, it's better not to use a tag for this kind of stuff.</source>
          <target state="translated">所以,如果你看到了,这种东西最好不要用标签的方式来做。</target>
        </trans-unit>
        <trans-unit id="d2627d25180adeafcf0f79b745b4905945e14598" translate="yes" xml:space="preserve">
          <source>So, when you are doing some JavaScript things with an &lt;code&gt;&amp;lt;a /&amp;gt;&lt;/code&gt; tag and if you put &lt;code&gt;href=&quot;#&quot;&lt;/code&gt; as well, you can add &lt;strong&gt;return false&lt;/strong&gt; at the end of the event &lt;em&gt;(in case of inline event binding)&lt;/em&gt; like:</source>
          <target state="translated">因此，当您使用 &lt;code&gt;&amp;lt;a /&amp;gt;&lt;/code&gt; 标记执行一些JavaScript事情时，如果还加上 &lt;code&gt;href=&quot;#&quot;&lt;/code&gt; ，则可以在事件结束时添加&lt;strong&gt;return false&lt;/strong&gt; &lt;em&gt;（如果是内联事件绑定），&lt;/em&gt;例如：</target>
        </trans-unit>
        <trans-unit id="7abfe43b1386b494fd45872b2cc6943e02d94ab9" translate="yes" xml:space="preserve">
          <source>That way, people with JavaScript disabled are directed to &lt;code&gt;search.php&lt;/code&gt; while your viewers with JavaScript view your enhanced functionality.</source>
          <target state="translated">这样，禁用JavaScript的人将被定向到 &lt;code&gt;search.php&lt;/code&gt; ,而使用JavaScript的查看者则可以查看您的增强功能。</target>
        </trans-unit>
        <trans-unit id="f0ea564302a451fd2f0c6f42304e263314f68d81" translate="yes" xml:space="preserve">
          <source>The anchor tag markup will be like</source>
          <target state="translated">锚标签的标记将是这样的</target>
        </trans-unit>
        <trans-unit id="1fa21ff042ee48d76e87bfc5b42429623407e190" translate="yes" xml:space="preserve">
          <source>The first one, ideally with a real link to follow in case the user has JavaScript disabled. Just make sure to return false to prevent the click event from firing if the JavaScript executes.</source>
          <target state="translated">第一个,最好有一个真实的链接,以防用户禁用了JavaScript。只要确保返回false就可以了,以防止在JavaScript执行的情况下,点击事件被触发。</target>
        </trans-unit>
        <trans-unit id="1daf7431c85ba11ffd7dc6ff69bf824dd7a20830" translate="yes" xml:space="preserve">
          <source>The following are two methods of building a link that has the sole purpose of running JavaScript code. Which is better, in terms of functionality, page load speed, validation purposes, etc.?</source>
          <target state="translated">以下是两种建立链接的方法,其唯一目的是运行JavaScript代码。从功能、页面加载速度、验证目的等方面来看,哪个更好?</target>
        </trans-unit>
        <trans-unit id="269c0d128dd6aa15c46409249e0cb329a40beab5" translate="yes" xml:space="preserve">
          <source>The hash tag can cause unexpected behavior if the click falls through (onclick throws), avoid it unless it's an appropriate fall-through behavior, and you want to change the navigation history.</source>
          <target state="translated">哈希标签会导致点击掉线(onclick抛出),除非是适当的掉线行为,否则要避免掉线行为,而且你要改变导航历史记录,否则哈希标签会造成意想不到的行为。</target>
        </trans-unit>
        <trans-unit id="c4494667d2a969ff9ab74b014574747d77306b24" translate="yes" xml:space="preserve">
          <source>The problem with this approach is, that if the function will not work or if there will be any problem, the link will become unclickable. Onclick event will always return &lt;code&gt;false&lt;/code&gt;, so the normal URL will not be called.</source>
          <target state="translated">这种方法的问题是，如果该功能不起作用或出现任何问题，则该链接将变得不可单击。 Onclick事件将始终返回 &lt;code&gt;false&lt;/code&gt; ，因此不会调用普通URL。</target>
        </trans-unit>
        <trans-unit id="4b58746c8c626555acaac41aff5e2ead214c95fe" translate="yes" xml:space="preserve">
          <source>The second is clearly much easier to communicate.</source>
          <target state="translated">第二种显然更容易沟通。</target>
        </trans-unit>
        <trans-unit id="482e865b307b47aa297b58a84ea961e535f68ee1" translate="yes" xml:space="preserve">
          <source>The unobtrusive JavaScript way</source>
          <target state="translated">毫不含糊的JavaScript方式</target>
        </trans-unit>
        <trans-unit id="a9ff79e11576caa15996b6365f7cd93425fd9adc" translate="yes" xml:space="preserve">
          <source>The use of href=&quot;#&quot; scrolls the page to the top; the use of void(0) creates navigational problems within the browser.</source>
          <target state="translated">使用href=&quot;#&quot;会将页面滚动到顶部;使用void(0)会在浏览器中产生导航问题。</target>
        </trans-unit>
        <trans-unit id="614fa21c604f3659b02c8f778f1538fdd087da29" translate="yes" xml:space="preserve">
          <source>Then assign the function to &lt;code&gt;.link&lt;/code&gt; with a script wrapped in the body and just before the &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; tag or in an external JavaScript document.</source>
          <target state="translated">然后，使用包裹在主体中且位于 &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; 标记之前或外部JavaScript文档中的脚本将函数分配给 &lt;code&gt;.link&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b20f1b8c943debdc2004de3e35bd0bd8eee1f28c" translate="yes" xml:space="preserve">
          <source>Then in jQuery, I add the following code:</source>
          <target state="translated">然后在jQuery中,我添加以下代码。</target>
        </trans-unit>
        <trans-unit id="17feadbe346f495f0e3d2b51a1ff2d982ff5b7a1" translate="yes" xml:space="preserve">
          <source>Then you can style the span element to look like an anchor with a little CSS:</source>
          <target state="translated">然后,你可以用一点CSS将span元素样式化,使其看起来像一个锚。</target>
        </trans-unit>
        <trans-unit id="f0bf07952005c3ec2fcb4e80a0427801536e162e" translate="yes" xml:space="preserve">
          <source>There are now better, easier, and more maintainable and scalable ways of accomplishing the desired result.</source>
          <target state="translated">现在有更好、更容易、更可维护、更可扩展的方式来实现预期的结果。</target>
        </trans-unit>
        <trans-unit id="6735f9d73a2577bbd369c3fd2c10bf6b092a89df" translate="yes" xml:space="preserve">
          <source>There's very simple solution. Let function return &lt;code&gt;true&lt;/code&gt; if it works correctly. Then use the returned value to determine if the click should be cancelled or not:</source>
          <target state="translated">有一个非常简单的解决方案。 如果函数正常工作，则使它返回 &lt;code&gt;true&lt;/code&gt; 。 然后使用返回的值确定是否应取消点击：</target>
        </trans-unit>
        <trans-unit id="98a9fb4ccab373e333dbb2ff3a74f3cae1e4513a" translate="yes" xml:space="preserve">
          <source>Therefore, you don't need to explicitly return &lt;code&gt;false&lt;/code&gt; with JavaScript</source>
          <target state="translated">因此，您不需要使用JavaScript显式地返回 &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d7c8da4b8b4ff05efe2ee43a1441aa8483e5da0" translate="yes" xml:space="preserve">
          <source>This makes the &lt;code&gt;href&lt;/code&gt; simple, search engines need it. If you use anything else ( such as a string), it may cause a &lt;code&gt;404 not found&lt;/code&gt; error.</source>
          <target state="translated">这使 &lt;code&gt;href&lt;/code&gt; 很简单，搜索引擎需要它。 如果使用其他任何内容（例如字符串），则可能会导致 &lt;code&gt;404 not found&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="6ebabe065f2e6d6d97bdcb17d4b76aeefaaba9ae" translate="yes" xml:space="preserve">
          <source>This way you can assign your onclick.  I also suggest binding via script, not using the &lt;code&gt;onclick&lt;/code&gt; attribute on the element tag.  The only gotcha is the psuedo 3d text effect in older IEs that cannot be disabled.</source>
          <target state="translated">这样，您可以分配onclick。 我还建议通过脚本进行绑定，而不要使用element标签上的 &lt;code&gt;onclick&lt;/code&gt; 属性。 唯一的难题是无法禁用的较旧IE中的伪3d文本效果。</target>
        </trans-unit>
        <trans-unit id="702b86d5b5cbacb5b92c4fcf82a98463957cc2d0" translate="yes" xml:space="preserve">
          <source>Three reasons. Encouraging the use of &lt;code&gt;#&lt;/code&gt; amongst a team of developers inevitably leads to some using the return value of the function called like this:</source>
          <target state="translated">三个原因。 鼓励在开发人员团队中使用 &lt;code&gt;#&lt;/code&gt; 不可避免地会导致某些人使用这样的函数的返回值：</target>
        </trans-unit>
        <trans-unit id="20772c2b98562800fba03c386b95e46f651eaba2" translate="yes" xml:space="preserve">
          <source>Typically, I like to just avoid using a link at all and just wrap something around in a span and use that as a way to active some JavaScript code, like a pop-up or a content-reveal.</source>
          <target state="translated">通常情况下,我喜欢完全避免使用链接,而只是在一个跨度中包裹一些东西,用它来激活一些JavaScript代码,比如弹出窗口或内容展示。</target>
        </trans-unit>
        <trans-unit id="7cb22bdab3f97840c6388285c6c482bb1dd83b0e" translate="yes" xml:space="preserve">
          <source>Unless you're writing out the link using JavaScript (so that you know it's enabled in the browser), you should ideally be providing a proper link for people who are browsing with JavaScript disabled and then prevent the default action of the link in your onclick event handler. This way those with JavaScript enabled will run the function and those with JavaScript disabled will jump to an appropriate page (or location within the same page) rather than just clicking on the link and having nothing happen.</source>
          <target state="translated">除非你使用JavaScript写出链接(这样你就知道它在浏览器中被启用了),否则你最好为那些禁用了JavaScript的人提供一个适当的链接,然后在你的onclick事件处理程序中阻止链接的默认操作。这样一来,那些启用了JavaScript的人就会运行该功能,而那些禁用了JavaScript的人则会跳转到一个合适的页面(或同一页面中的位置),而不是直接点击链接就什么也没发生。</target>
        </trans-unit>
        <trans-unit id="7b8695724e414bfa1bb582fecd14c6afe7795c3e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;href=&quot;#&quot;&lt;/code&gt;, make sure &lt;code&gt;onclick&lt;/code&gt; always contains &lt;code&gt;return false;&lt;/code&gt; at the end, that any called function does not throw an error and if you attach a function dynamically to the &lt;code&gt;onclick&lt;/code&gt; property make sure that as well as not throwing an error it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;href=&quot;#&quot;&lt;/code&gt; ，确保 &lt;code&gt;onclick&lt;/code&gt; 始终包含 &lt;code&gt;return false;&lt;/code&gt; 最后，任何调用的函数都不会引发错误，并且如果您将函数动态地附加到 &lt;code&gt;onclick&lt;/code&gt; 属性，请确保不引发错误也返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0128b97172aa885ce9e934954b105231cdc32b48" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;href=&quot;javascript:void(0)&quot;&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;href=&quot;javascript:void(0)&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a12a5998cd4a1a292c19fd32f9761fd034d7d9f0" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;http://en.wikipedia.org/wiki/Search_engine_optimization&quot;&gt;SEO&lt;/a&gt; friendly URL routes in your application, such as /Home/Action/Parameters is a good practice as well. If you have a link to a page that works without JavaScript first, you can enhance the experience afterward. Use a real link to a working page, then add an onlick event to enhance the presentation.</source>
          <target state="translated">在您的应用程序中使用&lt;a href=&quot;http://en.wikipedia.org/wiki/Search_engine_optimization&quot;&gt;SEO&lt;/a&gt;友好的URL路由（例如/ Home / Action / Parameters）也是一种好习惯。 如果您有一个指向页面的链接，该页面首先在没有JavaScript的情况下运行，则可以在以后增强体验。 使用指向工作页面的真实链接，然后添加onlick事件以增强演示效果。</target>
        </trans-unit>
        <trans-unit id="c4dbe03c8c4b7cfc862655b2cc0c5360e6012dab" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;javascript:void(0)&lt;/code&gt; avoids all of the above headaches, and I haven't found any examples of a downside.</source>
          <target state="translated">使用 &lt;code&gt;javascript:void(0)&lt;/code&gt; 可以避免上述所有麻烦，而且我还没有发现任何不利方面的例子。</target>
        </trans-unit>
        <trans-unit id="db11279fac943ad89d6f69763bf7811bca9ce6c9" translate="yes" xml:space="preserve">
          <source>Using just &lt;code&gt;#&lt;/code&gt; makes some funny movements, so I would recommend to use &lt;code&gt;#self&lt;/code&gt; if you would like to save on typing efforts of &lt;code&gt;JavaScript bla, bla,&lt;/code&gt;.</source>
          <target state="translated">仅使用 &lt;code&gt;#&lt;/code&gt; 会产生一些有趣的动作，因此如果您希望节省 &lt;code&gt;JavaScript bla, bla,&lt;/code&gt; 键入工作，我建议使用 &lt;code&gt;#self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc1cda1dd2ead613cec7da19ef5d6a915ebf4f35" translate="yes" xml:space="preserve">
          <source>Usually, you should always have a fall back link to make sure that clients with JavaScript disabled still has some functionality. This concept is called unobtrusive JavaScript.</source>
          <target state="translated">通常情况下,你应该总是有一个后退链接,以确保禁用了JavaScript的客户端仍然有一些功能。这个概念被称为无障碍的JavaScript。</target>
        </trans-unit>
        <trans-unit id="6954c3bbb0379e79fe70bcb4796810ec355f4b94" translate="yes" xml:space="preserve">
          <source>When I've got several faux-links, I prefer to give them a class of 'no-link'.</source>
          <target state="translated">当我有几个假链接的时候,我更喜欢给他们一个类 &quot;无链接&quot;。</target>
        </trans-unit>
        <trans-unit id="f8e2369b8d99375a6e5639486043b3d2146e4b56" translate="yes" xml:space="preserve">
          <source>When mouse hovers over the link, it doesn't show that it is a script.</source>
          <target state="translated">当鼠标悬停在链接上时,并没有显示是脚本。</target>
        </trans-unit>
        <trans-unit id="61b44bbc89b917fa7c30a0f1a3f58894ad655538" translate="yes" xml:space="preserve">
          <source>Which will not do anything.</source>
          <target state="translated">这不会有任何作用。</target>
        </trans-unit>
        <trans-unit id="a314a0ef6189eb65d5b3e4debee37ac4fae3168f" translate="yes" xml:space="preserve">
          <source>Which “href” value should I use for JavaScript links, “#” or “javascript:void(0)”</source>
          <target state="translated">对于JavaScript链接,我应该使用哪个 &quot;href &quot;值,&quot;#&quot;还是 &quot;javascript:void(0)&quot;</target>
        </trans-unit>
        <trans-unit id="2a61d37d475e6b6597176eb106fb6d1c59b1e618" translate="yes" xml:space="preserve">
          <source>Will always intercept in case your onclick event fails.</source>
          <target state="translated">将在你的onclick事件失败的情况下随时拦截。</target>
        </trans-unit>
        <trans-unit id="731d0ff294ec0c3887a1f04959fba2a5602adff4" translate="yes" xml:space="preserve">
          <source>Will not have errant load calls happen, or trigger other events based on a hash change</source>
          <target state="translated">不会发生错误的加载调用,或基于哈希变化触发其他事件。</target>
        </trans-unit>
        <trans-unit id="3738d55a9cad1f32952968ee8cbc0cf807b6e3f9" translate="yes" xml:space="preserve">
          <source>You can always do the following:</source>
          <target state="translated">你可以经常做以下几点。</target>
        </trans-unit>
        <trans-unit id="da7531d336c39a47e5eaed5fa94893126500dc7d" translate="yes" xml:space="preserve">
          <source>You can attach events (click, hover, etc.) on almost every element, so why not just use a &lt;code&gt;span&lt;/code&gt;or a &lt;code&gt;div&lt;/code&gt;?</source>
          <target state="translated">您几乎可以在每个元素上附加事件（单击，悬停等），那么为什么不只使用 &lt;code&gt;span&lt;/code&gt; 或 &lt;code&gt;div&lt;/code&gt; 呢？</target>
        </trans-unit>
        <trans-unit id="ab971355f6658d7288c950fff818ea0aa5ea9f9b" translate="yes" xml:space="preserve">
          <source>You can simply use a &lt;code&gt;&amp;lt;button /&amp;gt;&lt;/code&gt; instead to do things or any other element like b, span or whatever fits there as per your need, because you are allowed to add events on all the elements.</source>
          <target state="translated">您可以简单地使用 &lt;code&gt;&amp;lt;button /&amp;gt;&lt;/code&gt; 来做事，也可以根据需要使用b，span或其他适合的其他元素，因为您可以在所有元素上添加事件。</target>
        </trans-unit>
        <trans-unit id="e7a36ec7a3315f07240fb3666b9b0045b809b1ef" translate="yes" xml:space="preserve">
          <source>You should always strive for graceful degradation (in the event that the user doesn't have JavaScript enabled...and when it is with specs. and budget).  Also, it is considered bad form to use JavaScript attributes and protocol directly in HTML.</source>
          <target state="translated">你应该始终努力实现优雅的降级(在用户没有启用JavaScript的情况下...........当它与规格和预算有关时)。另外,在HTML中直接使用JavaScript属性和协议被认为是不好的形式。</target>
        </trans-unit>
        <trans-unit id="619ece4847838fa5df03de55dd03cce3f3c0a698" translate="yes" xml:space="preserve">
          <source>You're spending your time writing incredibly overly verbose code - which has very little (if any) benefit to your codebase.</source>
          <target state="translated">你把时间花在编写过于冗长的代码上,这对你的代码库几乎没有什么好处(如果有的话)。</target>
        </trans-unit>
        <trans-unit id="8699b249c4dcf2e85dacd055f92f3fd58667de39" translate="yes" xml:space="preserve">
          <source>and omit both &lt;code&gt;href=&quot;#&quot;&lt;/code&gt; and &lt;code&gt;href=&quot;javascript:void(0)&quot;&lt;/code&gt;.</source>
          <target state="translated">并同时省略 &lt;code&gt;href=&quot;#&quot;&lt;/code&gt; 和 &lt;code&gt;href=&quot;javascript:void(0)&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b54c9fdd392c0c6c0634d55188bd5d64387083d8" translate="yes" xml:space="preserve">
          <source>instantiates new copy of engine</source>
          <target state="translated">实例化引擎的新副本</target>
        </trans-unit>
        <trans-unit id="571d5bc739cc9f7bbab15b2de12fe6c2903c98a9" translate="yes" xml:space="preserve">
          <source>instead</source>
          <target state="translated">instead</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="dc07658cb62d9aef55e874007ead4934d0b9c2bc" translate="yes" xml:space="preserve">
          <source>pollutes history</source>
          <target state="translated">污染历史</target>
        </trans-unit>
        <trans-unit id="5b0a43ff2ce4a480c6dd584e5f5cc50c43071f56" translate="yes" xml:space="preserve">
          <source>runs in global scope and doesn't respect event system.</source>
          <target state="translated">在全局范围内运行,不尊重事件系统。</target>
        </trans-unit>
        <trans-unit id="ab7fd42e195f24dca7b841f1fff928b3bf815ee3" translate="yes" xml:space="preserve">
          <source>with little bit of jQuery</source>
          <target state="translated">带点jQuery</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
