<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/1338728">
    <body>
      <group id="1338728">
        <trans-unit id="4b92db3c051e1421ad23f595e0b864d8a5eb9028" translate="yes" xml:space="preserve">
          <source>(note that this would also remove all uncommitted changes; use with care).</source>
          <target state="translated">(obsérvese que esto también eliminaría todos los cambios no comprometidos;utilícese con cuidado).</target>
        </trans-unit>
        <trans-unit id="4d66258691d869e688c0d1ce20c8a6d85f3f6ed9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git checkout -b repair&lt;/code&gt; Create a new branch to work on.</source>
          <target state="translated">&lt;code&gt;git checkout -b repair&lt;/code&gt; Crea una nueva rama para trabajar.</target>
        </trans-unit>
        <trans-unit id="cc0a041da6998107b8f422c5ecdd2a6991c833cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git checkout b3d92c5&lt;/code&gt; Checkout the last usable commit.</source>
          <target state="translated">&lt;code&gt;git checkout b3d92c5&lt;/code&gt; Checkout el &amp;uacute;ltimo commit utilizable.</target>
        </trans-unit>
        <trans-unit id="f58b8eb8c6bea1a4abfff7e2fa2fd6d4eea2d46b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git checkout master&lt;/code&gt; Checkout master.</source>
          <target state="translated">&lt;code&gt;git checkout master&lt;/code&gt; Checkout master.</target>
        </trans-unit>
        <trans-unit id="f15e563d231c47acefbd9580d8fb4931e1128c83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git cherry-pick 2c6a45b&lt;/code&gt; Run through commit 1.</source>
          <target state="translated">&lt;code&gt;git cherry-pick 2c6a45b&lt;/code&gt; Ejecutar a trav&amp;eacute;s de commit 1.</target>
        </trans-unit>
        <trans-unit id="554d1cd55ccf7fd5dd6f20cc20ec676c1a516165" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git cherry-pick 77b9b82&lt;/code&gt; Run through commit 3.</source>
          <target state="translated">&lt;code&gt;git cherry-pick 77b9b82&lt;/code&gt; Ejecutar a trav&amp;eacute;s de commit 3.</target>
        </trans-unit>
        <trans-unit id="6ed969f23e403fd1147715d25e47a7d950b421ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git merge repair&lt;/code&gt; Merge our new branch onto master.</source>
          <target state="translated">&lt;code&gt;git merge repair&lt;/code&gt; Combina nuestra nueva sucursal en master.</target>
        </trans-unit>
        <trans-unit id="1fbccc102745b24ee753fc23ea7e04a8e56e518b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git push -f origin master&lt;/code&gt; Push master to the remote repo.</source>
          <target state="translated">&lt;code&gt;git push -f origin master&lt;/code&gt; Empuje master al repositorio remoto.</target>
        </trans-unit>
        <trans-unit id="ce5fd19917054cca0118039fd5145c2aed7e62c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git rebase -i &amp;lt;SHA&amp;gt;&lt;/code&gt; then &lt;code&gt;d, drop = remove commit&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;git rebase -i &amp;lt;SHA&amp;gt;&lt;/code&gt; luego &lt;code&gt;d, drop = remove commit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84ad08b586243d597501c10ed40c455bc0ef53c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git rebase -i HEAD~&amp;lt;number of commits to go back&amp;gt;&lt;/code&gt;, so &lt;code&gt;git rebase -i HEAD~5&lt;/code&gt; if you want to see the last five commits.</source>
          <target state="translated">&lt;code&gt;git rebase -i HEAD~&amp;lt;number of commits to go back&amp;gt;&lt;/code&gt; , as&amp;iacute; que &lt;code&gt;git rebase -i HEAD~5&lt;/code&gt; si desea ver las &amp;uacute;ltimas cinco confirmaciones.</target>
        </trans-unit>
        <trans-unit id="6110a7a552be36804d2e897ff30ba9fba0e4d6e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git reset --hard 515b5220c50e3dfbb1063f23789d92ae1d3481a2&lt;/code&gt; //it back-up you to that commit (SHA1 ID of &lt;strong&gt;test change 4&lt;/strong&gt; commit is &lt;strong&gt;515b5220c50e3dfbb1063f23789d92ae1d3481a2&lt;/strong&gt;)</source>
          <target state="translated">&lt;code&gt;git reset --hard 515b5220c50e3dfbb1063f23789d92ae1d3481a2&lt;/code&gt; // te respalda en ese commit (SHA1 ID del &lt;strong&gt;cambio&lt;/strong&gt; de &lt;strong&gt;prueba 4&lt;/strong&gt; commit es &lt;strong&gt;515b5220c50e3dfbb1063f23789d92ae1d3481a2&lt;/strong&gt; )</target>
        </trans-unit>
        <trans-unit id="c302cd2729880ee9adb4f39b42c71974525d6556" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git reset --hard HEAD&lt;/code&gt; did nothing, after checking the &lt;code&gt;reflog&lt;/code&gt;, the last and only &lt;code&gt;HEAD&lt;/code&gt; was the clone - Git wins.</source>
          <target state="translated">&lt;code&gt;git reset --hard HEAD&lt;/code&gt; no hizo nada, despu&amp;eacute;s de revisar el &lt;code&gt;reflog&lt;/code&gt; , el &amp;uacute;ltimo y &amp;uacute;nico &lt;code&gt;HEAD&lt;/code&gt; fue el clon-- Git gana.</target>
        </trans-unit>
        <trans-unit id="65bd7116511c0fc5e1b026f4f6de8cc5251d6c28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git reset --hard HEAD^&lt;/code&gt;  // To remove the last commit from git</source>
          <target state="translated">&lt;code&gt;git reset --hard HEAD^&lt;/code&gt; // Para eliminar la &amp;uacute;ltima confirmaci&amp;oacute;n de git</target>
        </trans-unit>
        <trans-unit id="eee048dfe8481e0e432511119986a2e6e4439857" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git reset --hard HEAD~1&lt;/code&gt; // it back-up you before one commit.</source>
          <target state="translated">&lt;code&gt;git reset --hard HEAD~1&lt;/code&gt; // lo respalda antes de una confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="df43558e6fcdc45b79eec16ab3918f9058dc0452" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git reset --hard b3d92c5&lt;/code&gt; Reset master to last usable commit.</source>
          <target state="translated">&lt;code&gt;git reset --hard b3d92c5&lt;/code&gt; Restablece el maestro a la &amp;uacute;ltima confirmaci&amp;oacute;n utilizable.</target>
        </trans-unit>
        <trans-unit id="e071e0410fc5a9a852474de92fc2ce44d4484d6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Additively Change History&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Historial de cambios aditivos&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bfda979ff53aa098e25ebd6adbc959213dfd764c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Alternative 1:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Alternativa 1:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="da1d6c31b84914b16d8c82b7f81952a610dc1534" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Alternative 2:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Alternativa 2:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="823817763684eacd218f2a670d4ed17902c1c5e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Alternative 3:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Alternativa 3:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d49b14b1cd4650d48dddd898758d69fcb0cccbca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Careful:&lt;/strong&gt;&lt;code&gt;git reset --hard&lt;/code&gt;&lt;em&gt;WILL DELETE YOUR WORKING DIRECTORY CHANGES&lt;/em&gt;. Be sure to &lt;strong&gt;stash any local changes you want to keep&lt;/strong&gt; before running this command.</source>
          <target state="translated">&lt;strong&gt;Cuidado:&lt;/strong&gt; &lt;code&gt;git reset --hard&lt;/code&gt; &lt;em&gt;ELIMINAR&amp;Aacute; SUS CAMBIOS&lt;/em&gt; EN &lt;em&gt;EL DIRECTORIO DE TRABAJO&lt;/em&gt; . Aseg&amp;uacute;rese de &lt;strong&gt;guardar los cambios locales que desee conservar&lt;/strong&gt; antes de ejecutar este comando.</target>
        </trans-unit>
        <trans-unit id="8bc4f8569935adfd09345856a1757d198d1260cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do not use the --hard&lt;/strong&gt; flag unless you want to destroy your work in progress since the last commit.</source>
          <target state="translated">&lt;strong&gt;No use la&lt;/strong&gt; bandera &lt;strong&gt;--hard a&lt;/strong&gt; menos que quiera destruir su trabajo en progreso desde la &amp;uacute;ltima confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b2e16c3d0ac5f55fa41f8954ea31ddce74bab961" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For example  your last  commit&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Por ejemplo, tu &amp;uacute;ltimo commit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f355d7997f9571abdeb599d74dffa72eb117c846" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Forcefully Change History&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Cambiar con fuerza la historia&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5fc0a7064847214666d4fbc9c01850f402b35de3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;However&lt;/strong&gt;, if others may have pulled it, then you would be better off starting a new branch.  Because when they pull, it will just merge it into their work, and you will get it pushed back up again.</source>
          <target state="translated">&lt;strong&gt;Sin embargo&lt;/strong&gt; , si otros pueden haberlo extra&amp;iacute;do, entonces ser&amp;iacute;a mejor comenzar una nueva rama. Porque cuando tiran, simplemente lo fusionar&amp;aacute; en su trabajo, y lo volver&amp;aacute;s a empujar de nuevo.</target>
        </trans-unit>
        <trans-unit id="102e9d3a053cbe193ad5aadd2237284dfdf09e7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;I'm appending this answer because I don't see why anyone who has just tried to commit work would want to delete all that work because of some mistake using Git!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&amp;iexcl;Estoy agregando esta respuesta porque no veo por qu&amp;eacute; alguien que acaba de intentar comprometerse a trabajar querr&amp;iacute;a eliminar todo ese trabajo debido a alg&amp;uacute;n error al usar Git!&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a144d31fdbb59147f96380723e8fe59f0d8dc33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If one or more of the commits is tagged, delete the tag(s) first.&lt;/strong&gt; Otherwise the tagged commit is not removed.</source>
          <target state="translated">&lt;strong&gt;Si una o m&amp;aacute;s de las confirmaciones est&amp;aacute; etiquetada, elimine primero la (s) etiqueta (s).&lt;/strong&gt; De lo contrario, la confirmaci&amp;oacute;n etiquetada no se elimina.</target>
        </trans-unit>
        <trans-unit id="267f535bafa2062fe7f1cc5c47b4dc046be2261f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Removing an entire commit&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Eliminar una confirmaci&amp;oacute;n completa&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c6b0c87e53ab5e1a1aa1757f8f61a440b5c2105c" translate="yes" xml:space="preserve">
          <source>After thinking &lt;code&gt;git reset --hard &amp;lt;SHA&amp;gt;&lt;/code&gt; had worked, I updated another branch to master and 1... 2... poof! the commit was back - Git wins.</source>
          <target state="translated">Despu&amp;eacute;s de pensar que &lt;code&gt;git reset --hard &amp;lt;SHA&amp;gt;&lt;/code&gt; hab&amp;iacute;a funcionado, actualic&amp;eacute; otra rama a master y 1 ... 2 ... &amp;iexcl;puf! el compromiso hab&amp;iacute;a regresado: Git gana.</target>
        </trans-unit>
        <trans-unit id="81466f23699e8691eafccf330632db08ef7f3469" translate="yes" xml:space="preserve">
          <source>All the commands above restore the state of your work tree and index as they were before making the commit, but do not restore the state of the repository. If you look at it, the &quot;removed&quot; commit is not actually removed, it is simply not the one on the tip of the current branch.</source>
          <target state="translated">Todos los comandos anteriores restauran el estado de su árbol de trabajo e índice como estaban antes de hacer la confirmación,pero no restauran el estado del repositorio.Si lo miras,la confirmación &quot;eliminada&quot; no es realmente eliminada,simplemente no es la que está en la punta de la rama actual.</target>
        </trans-unit>
        <trans-unit id="b0a31a2991db503bf45da2505d24fac790378032" translate="yes" xml:space="preserve">
          <source>Another possibility is one of my personal favorite commands:</source>
          <target state="translated">Otra posibilidad es uno de mis comandos favoritos:</target>
        </trans-unit>
        <trans-unit id="d5b2ded364518b9bbe3354018d3e9b9abd7c0e88" translate="yes" xml:space="preserve">
          <source>As you can see on above image i want to delete revert&quot;test change 2&quot; commit(SHA1 ID: &lt;strong&gt;015b5220c50e3dfbb1063f23789d92ae1d3481a2&lt;/strong&gt;(you can get SHA1 ID by using &lt;code&gt;gitk&lt;/code&gt; command in git bash)).</source>
          <target state="translated">Como puede ver en la imagen de arriba, quiero eliminar la confirmaci&amp;oacute;n revertir &quot;test change 2&quot; (ID SHA1: &lt;strong&gt;015b5220c50e3dfbb1063f23789d92ae1d3481a2&lt;/strong&gt; (puede obtener la ID SHA1 usando el comando &lt;code&gt;gitk&lt;/code&gt; en git bash)).</target>
        </trans-unit>
        <trans-unit id="6d33c17d47e5901787b7055709de852457aa698f" translate="yes" xml:space="preserve">
          <source>Assuming you are sitting on that commit, then this command will wack it...</source>
          <target state="translated">Asumiendo que usted está sentado en ese compromiso,entonces este comando lo arruinará...</target>
        </trans-unit>
        <trans-unit id="d1f704896e66cc5e62cd0bf64a834372ff4eeefe" translate="yes" xml:space="preserve">
          <source>Assuming you don't just want to delete the last commit, but you want to delete specific commits of the last n commits, go with:</source>
          <target state="translated">Asumiendo que no sólo quieres borrar la última confirmación,sino que quieres borrar las confirmaciones específicas de las últimas n confirmaciones,ve con:</target>
        </trans-unit>
        <trans-unit id="2b7ec0a27be98d1eff7652f4789af7c6f8bbf4fc" translate="yes" xml:space="preserve">
          <source>Be careful with this though, because if you change something that you &lt;em&gt;have&lt;/em&gt; pushed elsewhere, another approach will be needed unless you are planning to do a force push.</source>
          <target state="translated">Sin embargo, tenga cuidado con esto, porque si cambia algo que &lt;em&gt;ha&lt;/em&gt; empujado a otra parte, se necesitar&amp;aacute; otro enfoque a menos que est&amp;eacute; planeando hacer un empuje forzado.</target>
        </trans-unit>
        <trans-unit id="c4829627a5bf1e018d5ff182570c84e24753c4ee" translate="yes" xml:space="preserve">
          <source>By &lt;code&gt;delete&lt;/code&gt;, I mean it is as if I didn't make that commit, and when I do a push in the future, my changes will not push to the remote branch.</source>
          <target state="translated">Por &lt;code&gt;delete&lt;/code&gt; , quiero decir que es como si no hubiera realizado esa confirmaci&amp;oacute;n, y cuando hago un empuje en el futuro, mis cambios no se enviar&amp;aacute;n a la rama remota.</target>
        </trans-unit>
        <trans-unit id="a109c4c6d15b70f25adc62e372803842fdd9b7b2" translate="yes" xml:space="preserve">
          <source>Change YourCommitId for the number of the commit which you want to revert back to.</source>
          <target state="translated">Cambie su compromiso por el número del compromiso al que quiere volver.</target>
        </trans-unit>
        <trans-unit id="20933acd191fe84e954af4e111df5ddf77524155" translate="yes" xml:space="preserve">
          <source>Checking back out to master, time to try &lt;code&gt;git rebase -i &amp;lt;SHA&amp;gt;&lt;/code&gt;, then remove the line... to no avail, sad to say. &quot;&lt;em&gt;If you remove a line here THAT COMMIT WILL BE LOST&lt;/em&gt;&quot;. Ah...glossed over new feature &lt;em&gt;troll the n00b&lt;/em&gt; in the &lt;a href=&quot;https://www.dropbox.com/s/swukg8jqui0wc69/2.8.3.txt&quot;&gt;2.8.3 release notes&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;git rebase -i &amp;lt;SHA&amp;gt;&lt;/code&gt; al maestro, es hora de probar git rebase -i &amp;lt;SHA&amp;gt; , luego elimine la l&amp;iacute;nea ... en vano, es triste decirlo. &quot; &lt;em&gt;Si elimina una l&amp;iacute;nea aqu&amp;iacute;, ESTE COMIT&amp;Eacute; SE PERDER&amp;Aacute;&lt;/em&gt; &quot;. Ah ... pas&amp;oacute; por alto la nueva funci&amp;oacute;n &lt;em&gt;troll n00b&lt;/em&gt; en las &lt;a href=&quot;https://www.dropbox.com/s/swukg8jqui0wc69/2.8.3.txt&quot;&gt;notas de la versi&amp;oacute;n 2.8.3&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="985c2265c8fc21f04f4202af59fd7f9496062d5c" translate="yes" xml:space="preserve">
          <source>Checkout the branch you want to revert, then reset your local working copy back to the commit that you want to be the latest one on the remote server (everything after it will go bye-bye). To do this, in SourceTree I right-clicked on the and selected &quot;Reset BRANCHNAME to this commit&quot;. I think the command line is:</source>
          <target state="translated">Revise la rama que desea revertir,luego restablezca su copia de trabajo local a la confirmación que desea sea la última en el servidor remoto (todo lo que siga después de eso se irá adiós).Para hacer esto,en SourceTree hice click con el botón derecho en el y seleccioné &quot;Reset BRANCHNAME to this commit&quot;.Creo que la línea de comandos es:</target>
        </trans-unit>
        <trans-unit id="1501dad19c952215680d5337162bbf7d77f0f856" translate="yes" xml:space="preserve">
          <source>Delete commits from a branch in Git</source>
          <target state="translated">Borrar confirmaciones de una rama en Git</target>
        </trans-unit>
        <trans-unit id="d5288292067476ab19a14b904b49b343a8fbfbe9" translate="yes" xml:space="preserve">
          <source>Delete the last commit</source>
          <target state="translated">Borrar el último compromiso</target>
        </trans-unit>
        <trans-unit id="cfbfdb050621082eae60e284b13d1df8a93cd081" translate="yes" xml:space="preserve">
          <source>Determined to beat Git and preserve the original times, I deleted this local repository and re-cloned from the remote.</source>
          <target state="translated">Decidido a vencer a Git y preservar los tiempos originales,borré este repositorio local y lo volví a clonar desde el remoto.</target>
        </trans-unit>
        <trans-unit id="ba2205e4720b9c4875b2063795e768edc9f65654" translate="yes" xml:space="preserve">
          <source>Docs:
&lt;a href=&quot;http://git-scm.com/docs/git-commit.html&quot;&gt;http://git-scm.com/docs/git-commit.html&lt;/a&gt;</source>
          <target state="translated">Docs:
&lt;a href=&quot;http://git-scm.com/docs/git-commit.html&quot;&gt;http://git-scm.com/docs/git-commit.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="482252fa8b6026a7b480156441f6d58f4ba9fafb" translate="yes" xml:space="preserve">
          <source>Exhausting the options:</source>
          <target state="translated">Agotamiento de las opciones:</target>
        </trans-unit>
        <trans-unit id="d1b30321a67a8f34a339a84c1b5fad05da1ebaa9" translate="yes" xml:space="preserve">
          <source>FYI -- &lt;code&gt;git reset --hard HEAD&lt;/code&gt; is great if you want to get rid of WORK IN PROGRESS.  It will reset you back to the most recent commit, and erase all the changes in your working tree and index.</source>
          <target state="translated">FYI - &lt;code&gt;git reset --hard HEAD&lt;/code&gt; es genial si quieres deshacerte de WORK IN PROGRESS. Lo restablecer&amp;aacute; a la confirmaci&amp;oacute;n m&amp;aacute;s reciente y borrar&amp;aacute; todos los cambios en su &amp;aacute;rbol de trabajo e &amp;iacute;ndice.</target>
        </trans-unit>
        <trans-unit id="42bee27f352ee20ccde1028ba1bf775b9ac94daa" translate="yes" xml:space="preserve">
          <source>First reset the branch to the parent of the current commit</source>
          <target state="translated">Primero reinicie la rama al padre de la confirmación actual</target>
        </trans-unit>
        <trans-unit id="af9f98aaf43ec1375f9bc58d58816e48e4eefdf0" translate="yes" xml:space="preserve">
          <source>For particular commit, you want to reset is following</source>
          <target state="translated">Para un compromiso particular,lo que quieres resetear es lo siguiente</target>
        </trans-unit>
        <trans-unit id="51c5fcfcfa3641e63c6c280da649bcc906af0b0d" translate="yes" xml:space="preserve">
          <source>For that i can use(all below command work on local only. you need to push after delete):</source>
          <target state="translated">Para eso puedo usar (todos los comandos de abajo funcionan sólo en local.Necesitas presionar después de borrar):</target>
        </trans-unit>
        <trans-unit id="05460aa43345a06bbc6ec3e0766b7a4e0c113223" translate="yes" xml:space="preserve">
          <source>Force push to origin</source>
          <target state="translated">Fuerza de empuje hacia el origen</target>
        </trans-unit>
        <trans-unit id="9aeb9051871c7a92edee9dcf95ab0fa565db1da5" translate="yes" xml:space="preserve">
          <source>Force-push it to the remote.</source>
          <target state="translated">Empújalo por la fuerza hasta el mando a distancia.</target>
        </trans-unit>
        <trans-unit id="44afab30eb10c33911f37c56300b43abcdf0a5ec" translate="yes" xml:space="preserve">
          <source>Good day to you.</source>
          <target state="translated">Que tenga un buen día.</target>
        </trans-unit>
        <trans-unit id="5660456bd2342d41572b61d084667a86f2c38463" translate="yes" xml:space="preserve">
          <source>Here '2' is the number of commits you want to rebase.</source>
          <target state="translated">Aquí el &quot;2&quot; es el número de compromisos que quieres rebajar.</target>
        </trans-unit>
        <trans-unit id="88db40b7afb17b19823267284ee78d7675a1f99b" translate="yes" xml:space="preserve">
          <source>Here's another way to do this:</source>
          <target state="translated">Aquí hay otra forma de hacer esto:</target>
        </trans-unit>
        <trans-unit id="5b78e98e04fb956744bb28ffe75c6a82b9a8643e" translate="yes" xml:space="preserve">
          <source>I &lt;code&gt;git rebase -i --root&lt;/code&gt;'ed my branch, ignorantly thinking I could reword the first commit differing from the master (the &lt;em&gt;GitHub for Windows&lt;/em&gt; default view is the comparison to master, hiding it's entirety).</source>
          <target state="translated">&lt;code&gt;git rebase -i --root&lt;/code&gt; mi rama, pensando ignorantemente que podr&amp;iacute;a reformular el primer commit diferente al maestro (la vista predeterminada de &lt;em&gt;GitHub para Windows&lt;/em&gt; es la comparaci&amp;oacute;n con el maestro, ocultando su totalidad).</target>
        </trans-unit>
        <trans-unit id="2e20cff6091dd4a880af140b6004fe0ebe00283b" translate="yes" xml:space="preserve">
          <source>I didn't wish to &lt;code&gt;git revert&lt;/code&gt; - it would create an additional commit, giving Git the upper hand.</source>
          <target state="translated">No deseaba &lt;code&gt;git revert&lt;/code&gt; : crear&amp;iacute;a una confirmaci&amp;oacute;n adicional, dando a Git la ventaja.</target>
        </trans-unit>
        <trans-unit id="9b59023fbb67854f01d98a0ef51c81c5894eb6a9" translate="yes" xml:space="preserve">
          <source>I don't recommend this option because you can lost your work in progress.</source>
          <target state="translated">No recomiendo esta opción porque puede perder su trabajo en curso.</target>
        </trans-unit>
        <trans-unit id="6c9130bb59308d64b23913d997a9d183f2a1e46e" translate="yes" xml:space="preserve">
          <source>I grew a Silicon Valley beard while 900+ commits loaded themselves into Sublime. Exiting with no changes, I charged my battery then proceeded to shave, as all 900+ individual commits nonchalantly rebased - resetting their commit times to now.</source>
          <target state="translated">Me dejé crecer la barba en Silicon Valley mientras más de 900 compromisos se cargaron en Sublime.Salí sin cambios,cargué mi batería y luego procedí a afeitarme,ya que todos los más de 900 individuos se han cambiado de base sin problemas,reajustando sus tiempos de compromiso a ahora.</target>
        </trans-unit>
        <trans-unit id="7d07e5f7968a37231c185b24027cff07a1a00418" translate="yes" xml:space="preserve">
          <source>I have already pushed. Need to return some commits back remotly.
Have tried many variations, 
but only &lt;a href=&quot;https://stackoverflow.com/a/41927515/6352712&quot;&gt;this&lt;/a&gt; from &lt;a href=&quot;https://stackoverflow.com/users/425964/justin&quot;&gt;Justin&lt;/a&gt; via git bush is working fine for me:</source>
          <target state="translated">Ya he empujado. Necesito devolver algunas confirmaciones de forma remota. He intentado muchas variaciones, pero solo &lt;a href=&quot;https://stackoverflow.com/a/41927515/6352712&quot;&gt;esto&lt;/a&gt; de &lt;a href=&quot;https://stackoverflow.com/users/425964/justin&quot;&gt;Justin a&lt;/a&gt; trav&amp;eacute;s de git bush est&amp;aacute; funcionando bien para m&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="8c2ad913b00d698cd501b1274ea40f311d53f466" translate="yes" xml:space="preserve">
          <source>I read git help, and I think the command I should use is &lt;code&gt;git reset --hard HEAD&lt;/code&gt;.  Is this correct?</source>
          <target state="translated">Le&amp;iacute; git help, y creo que el comando que deber&amp;iacute;a usar es &lt;code&gt;git reset --hard HEAD&lt;/code&gt; . &amp;iquest;Es esto correcto?</target>
        </trans-unit>
        <trans-unit id="1f41015da060e52bc94556b3266212aff73b498d" translate="yes" xml:space="preserve">
          <source>I think that there are no means to remove a commit with &lt;a href=&quot;http://git-scm.com/book/ch9-1.html&quot;&gt;porcelain commands&lt;/a&gt;. The only way is to remove it from the log and reflog and then to execute a &lt;code&gt;git prune --expire -now&lt;/code&gt;.</source>
          <target state="translated">Creo que no hay medios para eliminar un commit con &lt;a href=&quot;http://git-scm.com/book/ch9-1.html&quot;&gt;comandos de porcelana&lt;/a&gt; . La &amp;uacute;nica forma es eliminarlo del registro y volver a registrar y luego ejecutar una &lt;code&gt;git prune --expire -now&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cfcd243fcaee3b80f71f49eee86f1b93195df385" translate="yes" xml:space="preserve">
          <source>I would like to know how to delete a commit.</source>
          <target state="translated">Me gustaría saber cómo borrar un compromiso.</target>
        </trans-unit>
        <trans-unit id="96a571367d9898610f47cd20328876141d8b243f" translate="yes" xml:space="preserve">
          <source>If you already published to-be-deleted commit, use &lt;a href=&quot;http://www.kernel.org/pub/software/scm/git/docs/git-revert.html&quot;&gt;git revert&lt;/a&gt;</source>
          <target state="translated">Si ya ha publicado commit para ser eliminado, use &lt;a href=&quot;http://www.kernel.org/pub/software/scm/git/docs/git-revert.html&quot;&gt;git revert&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8dbbfe77bb076a97a774b516e7a0174e822682a7" translate="yes" xml:space="preserve">
          <source>If you already pushed it, you will need to do a force push to get rid of it...</source>
          <target state="translated">Si ya lo has empujado,tendrás que hacer un empujón de fuerza para deshacerte de él...</target>
        </trans-unit>
        <trans-unit id="5f07f69ee2b374010d7f438229e6cab7e9178928" translate="yes" xml:space="preserve">
          <source>If you already pushed, it may be better to use &lt;code&gt;git revert&lt;/code&gt;, to create a &quot;mirror image&quot; commit that will undo the changes.  However, both commits will be in the log.</source>
          <target state="translated">Si ya presion&amp;oacute;, puede ser mejor usar &lt;code&gt;git revert&lt;/code&gt; , para crear una confirmaci&amp;oacute;n de &quot;imagen espejo&quot; que deshacer&amp;aacute; los cambios. Sin embargo, ambas confirmaciones estar&amp;aacute;n en el registro.</target>
        </trans-unit>
        <trans-unit id="9ca680c57e79eebe8faffd40434ec200390d75eb" translate="yes" xml:space="preserve">
          <source>If you didn't publish changes, to remove latest commit, you can do</source>
          <target state="translated">Si no has publicado los cambios,para eliminar el último compromiso,puedes hacer</target>
        </trans-unit>
        <trans-unit id="d0d81f5f4aa174a01caed9744d7ae3997de0bc6c" translate="yes" xml:space="preserve">
          <source>If you have newly staged changes they'll be combined with the last commit (that you're trying to get rid of) and will replace that commit.</source>
          <target state="translated">Si tienes cambios recién hechos,se combinarán con el último commit (del que intentas deshacerte)y reemplazarán a ese commit.</target>
        </trans-unit>
        <trans-unit id="6596b4ac72d240b0ed2aa62ebeda6c452c1506fe" translate="yes" xml:space="preserve">
          <source>If you have not yet pushed the commit anywhere, you can use &lt;a href=&quot;http://git-scm.com/docs/git-rebase&quot;&gt;&lt;code&gt;git rebase -i&lt;/code&gt;&lt;/a&gt; to remove that commit. First, find out how far back that commit is (approximately). Then do:</source>
          <target state="translated">Si a&amp;uacute;n no ha empujado el commit a ninguna parte, puede usar &lt;a href=&quot;http://git-scm.com/docs/git-rebase&quot;&gt; &lt;code&gt;git rebase -i&lt;/code&gt; &lt;/a&gt; para eliminar ese commit. Primero, descubra qu&amp;eacute; tan atr&amp;aacute;s est&amp;aacute; esa confirmaci&amp;oacute;n (aproximadamente). Entonces hazlo:</target>
        </trans-unit>
        <trans-unit id="44e3e3f8146c430375da4ee5925227356f44dc40" translate="yes" xml:space="preserve">
          <source>If you just messed up your last commit (wrong message, forgot to add some changes) and want to fix it before pushing it to a public repo why not use:</source>
          <target state="translated">Si acabas de estropear tu último commit (mensaje equivocado,olvidaste añadir algunos cambios)y quieres arreglarlo antes de empujarlo a un repositorio público,¿por qué no lo usas?</target>
        </trans-unit>
        <trans-unit id="40e1570206d278903e87bb0fcce50d747d648271" translate="yes" xml:space="preserve">
          <source>If you want to fix up your latest commit, you can undo the commit, and unstage the files in it, by doing:</source>
          <target state="translated">Si quieres arreglar tu última confirmación,puedes deshacer la confirmación,y desensamblar los archivos en ella,haciendo:</target>
        </trans-unit>
        <trans-unit id="c32e117464727f0450f94b5cd20d85260abcabf9" translate="yes" xml:space="preserve">
          <source>If you want to get rid of your latest commit, and do not want to keep the code changes, you can do a &quot;hard&quot; reset.</source>
          <target state="translated">Si quieres deshacerte de tu último compromiso,y no quieres mantener los cambios de código,puedes hacer un reinicio &quot;duro&quot;.</target>
        </trans-unit>
        <trans-unit id="68f21e507db554f3b7a22808df6f609e9a72b5df" translate="yes" xml:space="preserve">
          <source>If you want to keep the history, showing the commit and the revert, you should use:</source>
          <target state="translated">Si quieres mantener la historia,mostrando el compromiso y la reversión,deberías usar:</target>
        </trans-unit>
        <trans-unit id="87a8f8872c341d5920414f07785aad472c8d093b" translate="yes" xml:space="preserve">
          <source>If you want to keep your changes , and remove recent commits</source>
          <target state="translated">Si quieres mantener tus cambios,y eliminar los compromisos recientes</target>
        </trans-unit>
        <trans-unit id="8c8bfe5072413014db38c85be5dce3bc7e9daaf5" translate="yes" xml:space="preserve">
          <source>If you want to keep your work and just 'undo' that commit command (you caught before pushing to repo):</source>
          <target state="translated">Si quieres mantener tu trabajo y simplemente &quot;deshacer&quot; esa orden de cometer (que atrapaste antes de empujar a repo):</target>
        </trans-unit>
        <trans-unit id="e6f5eba4582d5bcee12bca1ae8b4787e484c1768" translate="yes" xml:space="preserve">
          <source>If you want to uncommit N commits, but keep the code changes in your working directory:</source>
          <target state="translated">Si quieres descomprometer N commits,pero mantener los cambios de código en tu directorio de trabajo:</target>
        </trans-unit>
        <trans-unit id="03d853e9fff6c7aee87d2ac84282fbe4e68e5784" translate="yes" xml:space="preserve">
          <source>If you've already pushed, first find the commit you want to be at HEAD &lt;em&gt;($GIT_COMMIT_HASH_HERE)&lt;/em&gt;, then run the following:</source>
          <target state="translated">Si ya presion&amp;oacute;, primero encuentre la confirmaci&amp;oacute;n que desea estar en HEAD &lt;em&gt;($ GIT_COMMIT_HASH_HERE)&lt;/em&gt; , luego ejecute lo siguiente:</target>
        </trans-unit>
        <trans-unit id="d24215566781e2696f7f247fac57197b8e0de6fb" translate="yes" xml:space="preserve">
          <source>In my case, my magic code for this pupose is this one:</source>
          <target state="translated">En mi caso,mi código mágico para esta marioneta es éste:</target>
        </trans-unit>
        <trans-unit id="f0dba4d1c4b202c5ee3e3e686a01d606a7437de1" translate="yes" xml:space="preserve">
          <source>Lastly, if you need to find a commit that you &quot;deleted&quot;, it is typically present in &lt;code&gt;git reflog&lt;/code&gt; unless you have garbage collected your repository.</source>
          <target state="translated">Por &amp;uacute;ltimo, si necesita encontrar una confirmaci&amp;oacute;n que &quot;elimin&amp;oacute;&quot;, generalmente est&amp;aacute; presente en &lt;code&gt;git reflog&lt;/code&gt; a menos que haya recogido basura en su repositorio.</target>
        </trans-unit>
        <trans-unit id="e9cd9f6a58ba27481ffff39cc43119f0d5e65dd2" translate="yes" xml:space="preserve">
          <source>Likewise, if you want to discard the last N commits, and do not want to keep the code changes:</source>
          <target state="translated">De la misma manera,si quieres descartar los últimos N commits,y no quieres mantener los cambios de código:</target>
        </trans-unit>
        <trans-unit id="745b91d049d82bd095df62bde9f98633b90f4e8c" translate="yes" xml:space="preserve">
          <source>Note: &lt;strong&gt;You need to have admin rights over the repo&lt;/strong&gt; since you are using &lt;code&gt;--hard&lt;/code&gt; and &lt;code&gt;-f&lt;/code&gt;.</source>
          <target state="translated">Nota: &lt;code&gt;--hard&lt;/code&gt; &lt;strong&gt;tener derechos de administrador sobre el repositorio&lt;/strong&gt; ya que est&amp;aacute; usando --hard y &lt;code&gt;-f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a474912ab0caa8c6bc8338cc8e30575ef75e301f" translate="yes" xml:space="preserve">
          <source>Now it had re-added a most recent unneeded commit to master I wished to remove, so proceeded like so.</source>
          <target state="translated">Ahora había vuelto a añadir un compromiso innecesario más reciente con el maestro que deseaba eliminar,así que procedió así.</target>
        </trans-unit>
        <trans-unit id="ae9e14aa8bb8834d2e265c5824898ea78b888b59" translate="yes" xml:space="preserve">
          <source>Now you want to delete this commit then an Easy way to do this following</source>
          <target state="translated">Ahora quieres borrar este compromiso,entonces una manera fácil de hacerlo es</target>
        </trans-unit>
        <trans-unit id="953810e2426fca2698e571670180a9ecf83be959" translate="yes" xml:space="preserve">
          <source>Obviously replace &quot;SHA&quot; with the reference you want to get rid of. The &quot;^&quot; in that command is literal.</source>
          <target state="translated">Obviamente sustituye &quot;SHA&quot; por la referencia de la que quieres deshacerte.La &quot;^&quot; en ese comando es literal.</target>
        </trans-unit>
        <trans-unit id="6060a8ba587122239361c1b3752e10cbb1237ea2" translate="yes" xml:space="preserve">
          <source>Of course if you amend a commit after you've pushed it, you're rewriting history so if you do that be sure to understand the implications.</source>
          <target state="translated">Por supuesto,si se modifica un compromiso después de haberlo impulsado,se está reescribiendo la historia,así que si lo hace asegúrese de entender las implicaciones.</target>
        </trans-unit>
        <trans-unit id="b35e70c607d6e4773828839da8a4ddf1a611d431" translate="yes" xml:space="preserve">
          <source>Or, you could look at the output of &lt;code&gt;git log&lt;/code&gt;, find the commit id of the commit you want to back up to, and then do this:</source>
          <target state="translated">O bien, puede mirar la salida del &lt;code&gt;git log&lt;/code&gt; de git , encontrar la identificaci&amp;oacute;n de confirmaci&amp;oacute;n de la confirmaci&amp;oacute;n de la que desea hacer una copia de seguridad y luego hacer esto:</target>
        </trans-unit>
        <trans-unit id="5e0feea6b064c5e1d9ee6b932b0af838d9a11bbf" translate="yes" xml:space="preserve">
          <source>PS: CommitId refers the one which you want to revert back to</source>
          <target state="translated">P.D.:El compromiso se refiere a aquel al que quieres volver...</target>
        </trans-unit>
        <trans-unit id="0066fef5eabf90f9eda22966ce542417a292a5e3" translate="yes" xml:space="preserve">
          <source>Reference: &lt;a href=&quot;https://ncona.com/2011/07/how-to-delete-a-commit-in-git-local-and-remote/&quot;&gt;How to delete a commit in git, local and remote&lt;/a&gt;</source>
          <target state="translated">Referencia: &lt;a href=&quot;https://ncona.com/2011/07/how-to-delete-a-commit-in-git-local-and-remote/&quot;&gt;C&amp;oacute;mo eliminar un commit en git, local y remoto&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a38c53ffb5c282ba793e916879e175c8a183753f" translate="yes" xml:space="preserve">
          <source>Reset on local branch</source>
          <target state="translated">Reajuste en la sucursal local</target>
        </trans-unit>
        <trans-unit id="f531bce04c421096a7c9624ebdf7459ce4c4989a" translate="yes" xml:space="preserve">
          <source>Say we want to remove commits 2 &amp;amp; 4 from the repo.</source>
          <target state="translated">Digamos que queremos eliminar los commits 2 y 4 del repositorio.</target>
        </trans-unit>
        <trans-unit id="e1905f336b926873eafad9091e256f8012bc4da6" translate="yes" xml:space="preserve">
          <source>Since you just checked out your branch from remote, you're not going to have any local changes to worry about losing. But this would lose them if you did.</source>
          <target state="translated">Como acabas de ver tu sucursal desde lejos,no tendrás ningún cambio local para preocuparte de perder.Pero esto los perdería si lo hiciera.</target>
        </trans-unit>
        <trans-unit id="257b9b08a37fd673e243e933ff17b8c88000b929" translate="yes" xml:space="preserve">
          <source>Source: &lt;a href=&quot;https://gist.github.com/sagarjethi/c07723b2f4fa74ad8bdf229166cf79d8&quot;&gt;https://gist.github.com/sagarjethi/c07723b2f4fa74ad8bdf229166cf79d8&lt;/a&gt;</source>
          <target state="translated">Fuente: &lt;a href=&quot;https://gist.github.com/sagarjethi/c07723b2f4fa74ad8bdf229166cf79d8&quot;&gt;https://gist.github.com/sagarjethi/c07723b2f4fa74ad8bdf229166cf79d8&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cdde4f20ba31a24db2cc7ae71135c8353631907b" translate="yes" xml:space="preserve">
          <source>Steps</source>
          <target state="translated">Steps</target>
        </trans-unit>
        <trans-unit id="58c53edf5f4bb3ba6e15b6687d6604d277815434" translate="yes" xml:space="preserve">
          <source>Take backup of your code in to temp folder. Following command will reset same as server.</source>
          <target state="translated">Lleva la copia de seguridad de tu código a la carpeta temporal.El siguiente comando se reiniciará igual que el servidor.</target>
        </trans-unit>
        <trans-unit id="14f22d4e6824c3b684660bd71774043dba5eb8ea" translate="yes" xml:space="preserve">
          <source>Test it and tell me. I have tried a few different ones, but this one was the only that helped me.</source>
          <target state="translated">Pruébalo y dime.He probado varios diferentes,pero este fue el único que me ayudó.</target>
        </trans-unit>
        <trans-unit id="33e692e2551ca39d58666652cf0cea9528957f81" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HEAD~1&lt;/code&gt; means the commit before head.</source>
          <target state="translated">El &lt;code&gt;HEAD~1&lt;/code&gt; significa el commit antes del head.</target>
        </trans-unit>
        <trans-unit id="67c69d80b3797000a83f9fa877c8ff4eb0653030" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;~N&lt;/code&gt; means rebase the last &lt;code&gt;N&lt;/code&gt; commits (&lt;code&gt;N&lt;/code&gt; must be a number, for example &lt;code&gt;HEAD~10&lt;/code&gt;). Then, you can edit the file that Git presents to you to delete the offending commit. On saving that file, Git will then rewrite all the following commits as if the one you deleted didn't exist.</source>
          <target state="translated">El &lt;code&gt;~N&lt;/code&gt; significa rebase los &amp;uacute;ltimos &lt;code&gt;N&lt;/code&gt; commits ( &lt;code&gt;N&lt;/code&gt; debe ser un n&amp;uacute;mero, por ejemplo &lt;code&gt;HEAD~10&lt;/code&gt; ). Luego, puede editar el archivo que Git le presenta para eliminar el commit ofensivo. Al guardar ese archivo, Git reescribir&amp;aacute; todas las confirmaciones siguientes como si la que elimin&amp;oacute; no existiera.</target>
        </trans-unit>
        <trans-unit id="c9ad62906f0511afd79d671adfae9e83a883953f" translate="yes" xml:space="preserve">
          <source>The Git Book has a good &lt;a href=&quot;http://git-scm.com/book/en/Git-Branching-Rebasing&quot;&gt;section on rebasing&lt;/a&gt; with pictures and examples.</source>
          <target state="translated">The Git Book tiene una buena &lt;a href=&quot;http://git-scm.com/book/en/Git-Branching-Rebasing&quot;&gt;secci&amp;oacute;n sobre rebase&lt;/a&gt; con im&amp;aacute;genes y ejemplos.</target>
        </trans-unit>
        <trans-unit id="c9e118ff0c6703e901391e677dd298a0e7bd733f" translate="yes" xml:space="preserve">
          <source>The mistake:</source>
          <target state="translated">El error:</target>
        </trans-unit>
        <trans-unit id="df7e72c4e856ebdeb027f94638db8e9c29d13a3b" translate="yes" xml:space="preserve">
          <source>The solution:</source>
          <target state="translated">La solución:</target>
        </trans-unit>
        <trans-unit id="5c1a0b46dd2a77265585885a3310d98ffc47632b" translate="yes" xml:space="preserve">
          <source>Then each place the repo has been cloned, run:</source>
          <target state="translated">Entonces cada lugar donde el repo ha sido clonado,corre:</target>
        </trans-unit>
        <trans-unit id="516a65a8d341e713504da0b68d69ea30f2df23ad" translate="yes" xml:space="preserve">
          <source>Then in the text editor change the word &lt;code&gt;pick&lt;/code&gt; to &lt;code&gt;drop&lt;/code&gt; next to every commit you would like to remove. Save and quit the editor. Voila!</source>
          <target state="translated">Luego, en el editor de texto, cambie la &lt;code&gt;pick&lt;/code&gt; palabra para &lt;code&gt;drop&lt;/code&gt; junto a cada confirmaci&amp;oacute;n que desea eliminar. Guarde y salga del editor. Voila!</target>
        </trans-unit>
        <trans-unit id="57bc2c81ed066050c0080e31433ade12c1fafb8c" translate="yes" xml:space="preserve">
          <source>Then navigate to your repository's local directory and run this command:</source>
          <target state="translated">Luego navegue al directorio local de su repositorio y ejecute este comando:</target>
        </trans-unit>
        <trans-unit id="b099ac28c4326ac570f4d9c1956512f65cc8f977" translate="yes" xml:space="preserve">
          <source>Then you will be able to choose one of these options.</source>
          <target state="translated">Entonces podrás elegir una de estas opciones.</target>
        </trans-unit>
        <trans-unit id="dd2c142717faff37fd8bb94acc2747332ff26df0" translate="yes" xml:space="preserve">
          <source>These lines can be re-ordered; they are executed from top to bottom.
 If you remove a line here THAT COMMIT WILL BE LOST.
 However, if you remove everything, the rebase will be aborted.
 Note that empty commits are commented out</source>
          <target state="translated">Estas líneas pueden ser reordenadas;se ejecutan de arriba a abajo.Si eliminas una línea aquí,ese compromiso se perderá.Sin embargo,si eliminas todo,la rebase será abortada.Ten en cuenta que las confirmaciones vacías están comentadas</target>
        </trans-unit>
        <trans-unit id="1c68f6f7024438aa3046a481d2c1addaf9440e70" translate="yes" xml:space="preserve">
          <source>This will erase all commits after the current one in your local repository but only for that one branch.</source>
          <target state="translated">Esto borrará todas las confirmaciones después de la actual en su repositorio local,pero sólo para esa rama.</target>
        </trans-unit>
        <trans-unit id="d502420e26f879a1469087bb42f5c742bb32479b" translate="yes" xml:space="preserve">
          <source>This will return your repository to its state before the git add commands that staged the files. Your changes will be in your working directory. HEAD~1 refers to the commit below the current tip of the branch.</source>
          <target state="translated">Esto devolverá tu repositorio a su estado antes de que el git añada los comandos que pusieron en escena los archivos.Tus cambios estarán en tu directorio de trabajo.HEAD~1 se refiere a la confirmación debajo de la punta actual de la rama.</target>
        </trans-unit>
        <trans-unit id="f4900beac84b86412a7d07e64c8e44534ecb3c2e" translate="yes" xml:space="preserve">
          <source>This will start the rebase in interactive mode &lt;code&gt;-i&lt;/code&gt; at the point just before the commit you want to whack. The editor will start up listing all of the commits since then. Delete the line containing the commit you want to obliterate and save the file. Rebase will do the rest of the work, deleting only that commit, and replaying all of the others back into the log.</source>
          <target state="translated">Esto iniciar&amp;aacute; el rebase en modo interactivo &lt;code&gt;-i&lt;/code&gt; en el punto justo antes de la confirmaci&amp;oacute;n que quieres golpear. El editor comenzar&amp;aacute; a enumerar todas las confirmaciones desde entonces. Elimine la l&amp;iacute;nea que contiene la confirmaci&amp;oacute;n que desea eliminar y guarde el archivo. Rebase har&amp;aacute; el resto del trabajo, eliminando solo esa confirmaci&amp;oacute;n y volviendo a reproducir todos los dem&amp;aacute;s en el registro.</target>
        </trans-unit>
        <trans-unit id="30fb09222b0f7ce00eb0523b723c5e3ee83290ef" translate="yes" xml:space="preserve">
          <source>To delete in a remote branch, use</source>
          <target state="translated">Para borrar en una sucursal remota,utilice</target>
        </trans-unit>
        <trans-unit id="701868dd44030892fc04d71748a312bb7139bcc4" translate="yes" xml:space="preserve">
          <source>To delete in local branch, use</source>
          <target state="translated">Para borrar en la sucursal local,utilice</target>
        </trans-unit>
        <trans-unit id="39365a8d6dab7b0a2f600f4608fd40e8fb368108" translate="yes" xml:space="preserve">
          <source>To get the most recent SHA, I checked the remote repository on github.com - minor win.</source>
          <target state="translated">Para obtener el SHA más reciente,revisé el repositorio remoto en github.com-una pequeña victoria.</target>
        </trans-unit>
        <trans-unit id="ef1eb937d57e41d2e2093fa3da5c3197276eb45f" translate="yes" xml:space="preserve">
          <source>To verify, I checked out to another branch, and voila - no hiding commit to fetch/pull from the master.</source>
          <target state="translated">Para verificarlo,me fui a otra sucursal,y voilà...no hay que ocultar el compromiso de ir a buscar al maestro.</target>
        </trans-unit>
        <trans-unit id="889cb33078f93d7d9254fd399e6526d844221110" translate="yes" xml:space="preserve">
          <source>Try &lt;code&gt;git revert &amp;lt;commit hash&amp;gt;&lt;/code&gt;. &lt;a href=&quot;https://www.atlassian.com/git/tutorials/undoing-changes/git-revert&quot;&gt;Revert&lt;/a&gt; will create a &lt;em&gt;new&lt;/em&gt; commit that undoes the specified commit.</source>
          <target state="translated">Prueba &lt;code&gt;git revert &amp;lt;commit hash&amp;gt;&lt;/code&gt; . &lt;a href=&quot;https://www.atlassian.com/git/tutorials/undoing-changes/git-revert&quot;&gt;Revertir&lt;/a&gt; crear&amp;aacute; una &lt;em&gt;nueva&lt;/em&gt; confirmaci&amp;oacute;n que deshace la confirmaci&amp;oacute;n especificada.</target>
        </trans-unit>
        <trans-unit id="19d02bc12c1e811c9be9a24fe184d2d6c6e700a3" translate="yes" xml:space="preserve">
          <source>What I do usually when I commit and push (if anyone pushed his commit this solve the problem):</source>
          <target state="translated">Lo que hago normalmente cuando me comprometo y presiono (si alguien presionó su compromiso esto resuelve el problema):</target>
        </trans-unit>
        <trans-unit id="2a70b7832ea9f846685043972515efa0bdb8f748" translate="yes" xml:space="preserve">
          <source>When you issue &lt;code&gt;git log&lt;/code&gt; you'll see both the &quot;wrong&quot; commit and revert log messages.</source>
          <target state="translated">Cuando emita el &lt;code&gt;git log&lt;/code&gt; , ver&amp;aacute; los mensajes de confirmaci&amp;oacute;n y revertir &quot;incorrectos&quot;.</target>
        </trans-unit>
        <trans-unit id="03923623bf2bef6b881c7670f54c3f6df241fa11" translate="yes" xml:space="preserve">
          <source>You can also pass the '--no-edit' option instead of '-m' if you would prefer to use the previous commit's message.</source>
          <target state="translated">También puedes pasar la opción &quot;--no-edit&quot; en lugar de &quot;-m&quot; si prefieres usar el mensaje de la confirmación anterior.</target>
        </trans-unit>
        <trans-unit id="9c9a202954ee7cae9dd55fa60d9beb9f7c9033b3" translate="yes" xml:space="preserve">
          <source>You can keep your work and only undo the commit.</source>
          <target state="translated">Puedes mantener tu trabajo y sólo deshacer el compromiso.</target>
        </trans-unit>
        <trans-unit id="93b39e19f453fced94de248d0efbd662da9694e6" translate="yes" xml:space="preserve">
          <source>You can simply remove that commit using option &quot;d&quot; or Removing a line that has your commit.</source>
          <target state="translated">Puedes simplemente eliminar esa confirmación usando la opción &quot;d&quot; o eliminando una línea que tenga tu confirmación.</target>
        </trans-unit>
        <trans-unit id="54dc32946de529fdad9d8c6bca91633f24297121" translate="yes" xml:space="preserve">
          <source>You have many alternatives, for example:</source>
          <target state="translated">Tienes muchas alternativas,por ejemplo:</target>
        </trans-unit>
        <trans-unit id="fb5936a817bd4c6ea21a209ba29761c28ac16ecd" translate="yes" xml:space="preserve">
          <source>You will be now at previous head. Pull the branch. Push new code. Commit will be removed from git</source>
          <target state="translated">Ahora estarás en la cabeza anterior.Tire de la rama.Presiona el nuevo código.El compromiso será removido del git</target>
        </trans-unit>
        <trans-unit id="1a586f7ddbd3e680eded7fab979c565199ef8b24" translate="yes" xml:space="preserve">
          <source>after delete:</source>
          <target state="translated">después de la eliminación:</target>
        </trans-unit>
        <trans-unit id="f0c68644aad61f3f96935569eed5547ae4b983ba" translate="yes" xml:space="preserve">
          <source>enter the message explaining why are you reverting and then:</source>
          <target state="translated">introduce el mensaje explicando por qué estás revirtiendo y luego:</target>
        </trans-unit>
        <trans-unit id="ddb31e750e6c1c908dfac98ac2f2ecf6698b4d20" translate="yes" xml:space="preserve">
          <source>git push origin +aa61ab32^:master</source>
          <target state="translated">git push origin +aa61ab32^:master</target>
        </trans-unit>
        <trans-unit id="103c1fac527e557fea4472b037eddbdd31cbda77" translate="yes" xml:space="preserve">
          <source>git push origin HEAD --force</source>
          <target state="translated">git push origen CABEZA-fuerza</target>
        </trans-unit>
        <trans-unit id="cf136d60baf6dbfd88ddc6f362f5619f4ffa9281" translate="yes" xml:space="preserve">
          <source>git reset --hard</source>
          <target state="translated">git reset --difícil</target>
        </trans-unit>
        <trans-unit id="0a2ffabb6c1b23361a8f6cd6fc1a09fea3dc19d6" translate="yes" xml:space="preserve">
          <source>hope this help</source>
          <target state="translated">Espero que esto ayude</target>
        </trans-unit>
        <trans-unit id="caa1f6c46e6e29f9f4a967617d593bff1ebd8b86" translate="yes" xml:space="preserve">
          <source>if you want to rebase all the commits.</source>
          <target state="translated">si quieres rebajar todos los compromisos.</target>
        </trans-unit>
        <trans-unit id="f569834b9f4ecb47276ea40f8ab2653abae05051" translate="yes" xml:space="preserve">
          <source>use git revert  &lt;a href=&quot;https://git-scm.com/docs/git-revert&quot;&gt;https://git-scm.com/docs/git-revert&lt;/a&gt; .It will revert all code then you can do next commit.Then head will point to that last commit. reverted commits never delete but it will not affect on you last commit.</source>
          <target state="translated">use git revert &lt;a href=&quot;https://git-scm.com/docs/git-revert&quot;&gt;https://git-scm.com/docs/git-revert&lt;/a&gt; . Revertir&amp;aacute; todo el c&amp;oacute;digo, entonces puede hacer el pr&amp;oacute;ximo commit. Luego, la cabeza apuntar&amp;aacute; a ese &amp;uacute;ltimo commit. las confirmaciones revertidas nunca se eliminan, pero no afectar&amp;aacute; su &amp;uacute;ltima confirmaci&amp;oacute;n.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
