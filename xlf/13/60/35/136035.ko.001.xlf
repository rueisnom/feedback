<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/136035">
    <body>
      <group id="136035">
        <trans-unit id="5aaf15b051a125920955bd69c723d28dfb1dc6e9" translate="yes" xml:space="preserve">
          <source>...with some crazy variation of this next code smell, I mean example, only to pretend that you're saving a few keystrokes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;...이 다음 코드 냄새의 미친 변형으로, 예를 들어, 몇 번의 키 입력을 저장하고 있다고 가정합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c8d3c34755a48a88bcc07da0a84528f3d86616bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.guid.tryparse.aspx&quot;&gt;TryParse&lt;/a&gt; never throws exceptions and returns false if format is wrong, setting WebId to &lt;code&gt;Guid.Empty&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.guid.tryparse.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TryParse&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 예외가 발생하지 않으며 형식이 잘못된 경우 WebId를 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Guid.Empty&lt;/code&gt; 로&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 설정하여 false를 반환합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6a520e492fbc31afda2a4ca2670d6f40c2c2beb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/questions/136035/catch-multiple-exceptions-at-once/136092#136092&quot;&gt;Joseph Daigle's Answer&lt;/a&gt; is a good solution, but I found the following structure to be a bit tidier and less error prone.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/136035/catch-multiple-exceptions-at-once/136092#136092&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Joseph Daigle의 답변&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 좋은 해결책이지만 다음 구조는 약간 깔끔하고 오류가 적은 경향이 있음을 알았습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e3308c299b7c14b6f16899d7f58eff6d125a522" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Basically provide another empty &lt;code&gt;Catch&lt;/code&gt; overload which returns itself)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(기본적으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자체 리턴되는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;빈 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과부하를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;제공 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다)&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3aaed97268833a9918a2ba771f9d165a93561908" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms182271.aspx&quot;&gt;CA1800: Do not cast unnecessarily&lt;/a&gt;&lt;/em&gt; says to &quot;consider testing the result of the 'as' operator instead&quot;, but if you do that, you'll be writing more code than if you catch each exception separately.</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms182271.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CA1800 :&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;대신 'as'연산자의 결과 테스트를&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 불필요하게 캐스트하지 말아라.&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 그러나 그렇게하면 각 예외를 개별적으로 잡는 것보다 더 많은 코드를 작성하게된다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c2ba87e75a77003d169867541b8e1d7b0dbe538c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Also, specifically &lt;code&gt;Guid&lt;/code&gt; has the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.guid.tryparse(v=vs.110).aspx&quot;&gt;&lt;code&gt;Guid.TryParse&lt;/code&gt;&lt;/a&gt; method.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Guid&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.guid.tryparse(v=vs.110).aspx&quot;&gt; &lt;code&gt;Guid.TryParse&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메서드가 있습니다.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ab87e8771981891dc3537b561271b84c06af8064" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Can I catch multiple exceptions at once?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한 번에 여러 예외를 잡을 수 있습니까?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a5c15139e290a34ffa9e286ddfe7f8c968c4f93f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT:&lt;/strong&gt; I do concur with others who are saying that, as of C# 6.0, exception filters are now a perfectly fine way to go: &lt;code&gt;catch (Exception ex) when (ex is ... || ex is ... )&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;편집 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 나는 C # 6.0에서 예외 필터가 이제 완벽하게 갈 수있는 좋은 방법이라고 말하는 다른 사람들과 동의합니다 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;catch (Exception ex) when (ex is ... || ex is ... )&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52eee279cccac78795d9bd9b538cdd8748c99dc0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit:&lt;/strong&gt; 
The &lt;a href=&quot;http://www.codeproject.com/Articles/853207/What-s-new-in-Csharp-Exception-Filters&quot;&gt;exception filtering&lt;/a&gt; in C# 6.0 will make the syntax a bit cleaner and comes with a &lt;a href=&quot;https://stackoverflow.com/a/27082164/2802543&quot;&gt;number of other benefits&lt;/a&gt; over any current solution. (most notably leaving the stack unharmed)</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;편집 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; C # 6.0 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.codeproject.com/Articles/853207/What-s-new-in-Csharp-Exception-Filters&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예외 필터링&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 구문을 조금 더 깔끔하게 만들고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;현재 솔루션에 비해 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/27082164/2802543&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여러 가지 다른 이점&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 제공합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(주로 스택을 손상시키지 않은 채로 둡니다)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="feb4ca963f08224ee8b4571f84c00c0036a54d42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Full Error Handling Example (Copy-Paste to new Console app)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전체 오류 처리 예 (새 콘솔 앱에 복사하여 붙여 넣기)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3b3141404e1e36c9cdf3d5f38083a4df531a0430" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How do I avoid writing duplicate code given that I can't catch multiple exception types in the same catch() block?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동일한 catch () 블록에서 여러 예외 유형을 잡을 수 없으므로 중복 코드를 작성하지 않으려면 어떻게합니까?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="850301d4e8188e719ad5b1ae8a67aef29261306f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IsAnyOf.cs Extension (See Full Error Handling Example for Dependancies)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;IsAnyOf.cs 확장 (종속성에 대한 전체 오류 처리 예 참조)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="542b69fedc4d99881098791ff30ae7adef1bcd67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ORIGINAL:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ORIGINAL:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a5181d2939565f52ceafa914e74e4bfb90a7f80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Two Sample NUnit Unit Tests&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 개의 샘플 NUnit 단위 테스트&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="372f60334aa5d8918e891d52c780ab816ff7ba23" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Usage&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="06d054af62aba5965b1c775157b32a35d2c79e1d" translate="yes" xml:space="preserve">
          <source>@Micheal</source>
          <target state="translated">@Micheal</target>
        </trans-unit>
        <trans-unit id="3389e9e3d38bd01137e197e890e0a7791c71610c" translate="yes" xml:space="preserve">
          <source>A return statement is not necessary</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;반환 진술은 필요하지 않습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b65d43af93dde5ad9ef5b8514f0df207615395e0" translate="yes" xml:space="preserve">
          <source>Actually, you can put basically any condition inside that &lt;code&gt;when&lt;/code&gt; clause:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;when&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 절 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;안에 기본적으로 모든 조건을 넣을 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cca8d2a8a73470cc7df126300c74b7f20e4a6720" translate="yes" xml:space="preserve">
          <source>Also, it seems the &quot;is&quot; operator might degrade performance slightly.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 &quot;is&quot;연산자는 성능을 약간 저하시킬 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="caf67b064a82111165779047a0bb4a5990dbbf9a" translate="yes" xml:space="preserve">
          <source>Alternatively, this can be all done inline (the right hand side of the when statement just has to be a boolean expression).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 이것은 모두 인라인으로 수행 될 수 있습니다 (when 문의 오른쪽은 부울 표현식이어야합니다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="347c0c93fde8f4ac618ed62172bad2761087e0f6" translate="yes" xml:space="preserve">
          <source>And CatchMany implementation:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 CatchMany 구현 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d53cb30e5dd50782f910c1090f2fcd20924a8cd3" translate="yes" xml:space="preserve">
          <source>And as you can see in the &lt;code&gt;MSIL&lt;/code&gt; the code is not translated to &lt;code&gt;if&lt;/code&gt; statements, but to &lt;code&gt;Filters&lt;/code&gt;, and &lt;code&gt;Exceptions&lt;/code&gt; cannot be throw from within the areas marked with &lt;code&gt;Filter 1&lt;/code&gt; and &lt;code&gt;Filter 2&lt;/code&gt; but the filter throwing the &lt;code&gt;Exception&lt;/code&gt; will fail instead, also the last comparison value pushed to the stack before the &lt;code&gt;endfilter&lt;/code&gt; command will determine the success/failure of the filter (&lt;code&gt;Catch 1&lt;/code&gt;&lt;strong&gt;&lt;em&gt;XOR&lt;/em&gt;&lt;/strong&gt;&lt;code&gt;Catch 2&lt;/code&gt; will execute accordingly):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이 볼 수 있듯이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MSIL&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 코드가 번역되지 않은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 문, 이에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Filters&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Exceptions&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 표시된 영역 내에서 던져 수 없습니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Filter 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Filter 2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 만 던지는 필터 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 도 대신 마지막을 실패합니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;endfilter&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 명령이 필터의 성공 / 실패를 결정 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하기 전에 스택에 푸시 된 비교 값 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Catch 1&lt;/code&gt; &lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;XOR&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt; &lt;code&gt;Catch 2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 그에 따라 실행 됨) :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea816fd8da8992b183fbc63d106dea153a991102" translate="yes" xml:space="preserve">
          <source>And of course FxCop barks at you and so you have to &lt;strong&gt;&lt;em&gt;also&lt;/em&gt;&lt;/strong&gt; add an attribute to your code that has precisely zip to do with the running program, and is only there to tell FxCop to ignore an issue that in 99.9% of cases it is totally correct in flagging. And, sorry, I might be mistaken, but doesn't that &quot;ignore&quot; attribute end up actually compiled into your app?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 물론의 FxCop 당신의 당신이 할 필요가 있으므로 껍질 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;도&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 정확하게 실행중인 프로그램을 할 압축 한 코드에 속성을 추가 한 경우 99.9 %에 완전히이라고 문제를 무시의 FxCop 말씀 만이 신고가 정확합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고, 죄송합니다, 착각 할 수도 있지만, 그 &quot;무시&quot;속성이 실제로 앱에 컴파일되지 않습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="84d00784eb2e326dac15d825625d91a29b5bfea5" translate="yes" xml:space="preserve">
          <source>And the other solution is to catch the Exception object and handle it accordingly. The most literal translation for this, based on the context above is this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 다른 해결책은 Exception 객체를 잡아서 적절히 처리하는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 맥락에 따라 가장 문자 그대로의 번역은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e23465a9f88e5b869b70e2eda4aabcd1e17d5bdd" translate="yes" xml:space="preserve">
          <source>And use them like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 이것을 다음과 같이 사용하십시오 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="83dc80cdafbb6519dd31ddbbe7cea338e549d4df" translate="yes" xml:space="preserve">
          <source>Any other exceptions will be thrown and the code &lt;code&gt;WebId = Guid.Empty;&lt;/code&gt; won't be hit. If you don't want other exceptions to crash your program, just add this AFTER the other two catches:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 예외는 발생하며 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;WebId = Guid.Empty;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;맞지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 예외로 인해 프로그램이 중단되는 것을 원하지 않으면 다른 두 가지 캐치 후에 이것을 추가하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="418a5b88f6ef7fc8db59855e34f953b266c56327" translate="yes" xml:space="preserve">
          <source>Anyhow, here's what I would do:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어쨌든, 여기 내가 할 일이 있습니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2cebdf89c9ac259fa1d1b505d0ff6182557aed9a" translate="yes" xml:space="preserve">
          <source>As others have pointed out, you can have an &lt;code&gt;if&lt;/code&gt; statement inside your catch block to determine what is going on. C#6 supports Exception Filters, so the following will work:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 사람들이 지적했듯이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;catch 블록 내에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 문을 사용하여 진행중인 작업을 결정할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 6은 예외 필터를 지원하므로 다음이 작동합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9017051d440936e5b5db7f09088015fd98c38bfa" translate="yes" xml:space="preserve">
          <source>At this point, we can add a separate function that handles the different types of Exceptions using overload resolution, or to handle the Exception. Both have disadvantages. To start, here's the way to do it with a helper function:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 시점에서 우리는 과부하 해결을 사용하여 다른 유형의 예외를 처리하거나 예외를 처리하는 별도의 함수를 추가 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;둘 다 단점이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;시작하려면 다음은 도우미 기능으로 수행하는 방법입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="44f53e52ca0613c4c3dd6af286140722dd6c32b8" translate="yes" xml:space="preserve">
          <source>At time of writing, this will include support for C# 6.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작성 당시에는 C # 6에 대한 지원이 포함됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0c105894787df0d666b778b4e7e827a820c0c625" translate="yes" xml:space="preserve">
          <source>Because it certainly isn't automatically more readable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;확실히 자동으로 더 읽기 쉽지 않기 때문입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="84ec264cf702058749562c6d952f580cc6f0e0e8" translate="yes" xml:space="preserve">
          <source>But it&amp;acute;s not. Actually this is the only new feature in C# 6 that is not possible to emulate in prior versions. First, a re-throw means more overhead than skipping the catch. Second, it is not semantically equivalent. The new feature preserves the stack intact when you are debugging your code. Without this feature the crash dump is less useful or even useless.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 그렇지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로 이것은 C # 6의 유일한 새로운 기능으로 이전 버전에서는 에뮬레이션 할 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우선, 다시 던지기는 캐치를 건너 뛰는 것보다 더 많은 오버 헤드를 의미합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;둘째, 의미 상 동등하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;새로운 기능은 코드를 디버깅 할 때 스택을 그대로 유지합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 기능이 없으면 크래시 덤프는 덜 유용하거나 쓸모가 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8968328136575f096f276fca672f5d7a0e341da4" translate="yes" xml:space="preserve">
          <source>But that's sort of my point.  Y'all have heard of functions/methods, right?  Seriously.  Write a common &lt;code&gt;ErrorHandler&lt;/code&gt; function and, like, call it from each catch block.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 그것은 내 요점입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여러분은 기능 / 방법에 대해 들어 보았습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;진심으로. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적인 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ErrorHandler&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작성하고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;각 catch 블록에서 호출하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="73907b0eca8f7445628e3ca07e7e04aa2be2d3f5" translate="yes" xml:space="preserve">
          <source>Catch &lt;code&gt;System.Exception&lt;/code&gt; and switch on the types</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;캐치 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Exception&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유형에 및 스위치&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f1008bdf611d7679d3c3f840c1b061398509ab0" translate="yes" xml:space="preserve">
          <source>Catch multiple exceptions at once</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여러 예외를 한 번에 잡기&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ff92d3d845f125e73f3f4eef6ab12da2f07a6ec" translate="yes" xml:space="preserve">
          <source>Cautioned and Warned: &lt;a href=&quot;http://community.bartdesmet.net/blogs/bart/archive/2008/01/06/exception-handling-in-functional-style.aspx&quot;&gt;Yet another kind, functional style.&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주의와 경고 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://community.bartdesmet.net/blogs/bart/archive/2008/01/06/exception-handling-in-functional-style.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또 다른 종류의 기능적 스타일.&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0d008cb4b49a7d4f44a21a4a3014d343569f652e" translate="yes" xml:space="preserve">
          <source>Construct a new Guid in a temporary variable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;임시 변수에 새 Guid를 구성하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8d84823db6b97f3970612fd253baf121c346100a" translate="yes" xml:space="preserve">
          <source>Cutting straight to the chase, this kind of duplicates an earlier answer, but if you really want to perform a common action for several exception types and keep the whole thing neat and tidy within the scope of the one method, why not just use a lambda/closure/inline function to do something like the following?  I mean, chances are pretty good that you'll end up realizing that you just want to make that closure a separate method that you can utilize all over the place. But then it will be super easy to do that without actually changing the rest of the code structurally.  Right?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추격을 바로 잡기 위해이 종류의 이전 답변을 복제하지만 실제로 여러 예외 유형에 대해 공통 작업을 수행하고 한 방법의 범위 내에서 모든 것을 깔끔하고 깔끔하게 유지하려면 람다를 사용하는 것이 어떻습니까? / closure / inline 함수는 다음과 같은 작업을 수행합니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 말은, 당신은 당신이 그 폐쇄를 당신이 모든 곳에서 활용할 수있는 별도의 방법으로 만들고 싶다는 것을 깨닫게 될 가능성이 꽤 있다는 것을 의미합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 나머지 코드를 실제로 구조적으로 변경하지 않고도 그렇게하는 것이 매우 쉽습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;권리?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e9656fda095be85a55c47e88f0f2142837377331" translate="yes" xml:space="preserve">
          <source>E.g.:</source>
          <target state="translated">E.g.:</target>
        </trans-unit>
        <trans-unit id="5de063f97315c5b8e6e1dc2ce35e02b2a46ba4c4" translate="yes" xml:space="preserve">
          <source>Except that I still kind of hate the one-long-line layout and would personally lay the code out like the following. I think this is as functional as it is aesthetic, since I believe it improves comprehension. Some may disagree:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 여전히 한 줄짜리 레이아웃을 싫어하고 개인적으로 다음과 같이 코드를 배치한다는 것을 제외하고. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 이것이 이해력을 향상 시킨다고 믿기 때문에 그것이 미학적 인 것처럼 기능적이라고 생각한다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부는 동의하지 않을 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75ea838be7539f75e44812538c146599e6015083" translate="yes" xml:space="preserve">
          <source>Exception Hierarchy</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예외 계층&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="527e4c0d8a347a6d284b98967bd45b476920144c" translate="yes" xml:space="preserve">
          <source>Exception filters are now available in c# 6+. You can do</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예외 필터는 이제 C # 6+에서 사용할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;넌 할 수있어&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="539f0ec3011bd70cde17e4ba28046cf7608d24cc" translate="yes" xml:space="preserve">
          <source>For example if you use a &quot;catch-all&quot; exception as &lt;strong&gt;Exception&lt;/strong&gt; it will preceed all other catch statements and you will obviously get compiler errors however if you reverse the order you can chain up your catch statements (bit of an anti-pattern I think) you can put the catch-all &lt;strong&gt;Exception&lt;/strong&gt; type at the bottom and this will be capture any exceptions that didn't cater for higher up in your try..catch block:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 &quot;catch-all&quot;예외를 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Exception&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 으로 사용하면 다른 모든 catch 문보다 우선하고 분명히 컴파일러 오류가 발생하지만 순서를 반대로 바꾸면 catch 문을 연결할 수 있습니다 (반 패턴의 일부는 생각합니다) ) catch-all &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Exception&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유형을 맨 아래에 놓을 수 있으며 try..catch 블록에서 상위를 충족시키지 않은 예외를 캡처합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="244c23113ec704871d9cee9221d63c34f391fadd" translate="yes" xml:space="preserve">
          <source>For the sake of completeness, since &lt;strong&gt;.NET 4.0&lt;/strong&gt; the code can rewritten as:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;완전성을 위해 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.NET 4.0&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이후 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드는 다음과 같이 다시 작성할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dd09ef4377932d2b4de7f67104a8aadaf92c5594" translate="yes" xml:space="preserve">
          <source>For this you need to create several &quot;Catch&quot; method overloads, similar to System.Action:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이를 위해 System.Action과 유사한 몇 가지 &quot;캐치&quot;메서드 오버로드를 만들어야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e509265720b9dd33023c62eb25685529d8bfc817" translate="yes" xml:space="preserve">
          <source>From C#6 you furthermore have the &lt;a href=&quot;https://stackoverflow.com/questions/4268223/c-sharp-exception-filter&quot;&gt;exception-filters&lt;/a&gt; as already mentioned by others. So you can modify the code above to this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 6부터는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이미 다른 사람들이 언급 한 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/4268223/c-sharp-exception-filter&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예외 필터&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 위 코드를 다음과 같이 수정할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c2a061516ad58558a806faed3e12641e9f86898b" translate="yes" xml:space="preserve">
          <source>Geared for people that want a &lt;a href=&quot;https://stackoverflow.com/q/791390/1718702&quot;&gt;more elegant solution&lt;/a&gt; to catch once and filter exceptions, I use an extension method as demonstrated below.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한 번만 포착하고 예외를 필터링 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/q/791390/1718702&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보다 우아한 솔루션&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;원하는 사람들 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 위해 아래에 설명 된 확장 방법을 사용합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b1295f86f1d7cbf0ad091e0bccf7386af51e9b2a" translate="yes" xml:space="preserve">
          <source>Given your specific sample, where the fall-back value is cheap to construct, I like to follow these steps:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;폴백 값이 구성하기에 저렴한 특정 샘플을 고려할 때 다음 단계를 따르고 싶습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="36f3882107998a3ab41cc38fab92f798f8b2efce" translate="yes" xml:space="preserve">
          <source>Granted, I left the three identical instances of &lt;code&gt;/* write to a log, whatever... */ return;&lt;/code&gt; out of the first example.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;물론, 나는 3 개의 동일한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;/* write to a log, whatever... */ return;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인스턴스를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로그에&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 남겨 두었다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 예에서&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5a13352f633c78630c9980aff67adb5108712346" translate="yes" xml:space="preserve">
          <source>Here is how the same problem would look using C# 6.0 syntax:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 C # 6.0 구문을 사용하여 동일한 문제가 어떻게 보이는지 보여줍니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="73f9549a89eef322c33bad695cd89bf59a3fdef1" translate="yes" xml:space="preserve">
          <source>How about</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어때요?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7b0dde9db8bb974802ff2df14397ad3d3f6ccd4" translate="yes" xml:space="preserve">
          <source>How much &lt;em&gt;less&lt;/em&gt; readable does this get when you add three more exception types, a month or two from now?  (Answer: it gets a &lt;strong&gt;&lt;em&gt;lot&lt;/em&gt;&lt;/strong&gt; less readable).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한 달에서 두 달 사이에 예외 유형을 세 개 더 추가하면 읽기가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;훨씬 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어려워&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 집니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(답 : &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;읽기 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;훨씬&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 어렵습니다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="720545802c225e5d12bd7f9c93865e5a5357bf85" translate="yes" xml:space="preserve">
          <source>I already had this extension in my library, originally written for other purposes, but it worked just perfectly for &lt;code&gt;type&lt;/code&gt; checking on exceptions.  Plus, imho, it looks cleaner than a bunch of &lt;code&gt;||&lt;/code&gt; statements.  Also, unlike the accepted answer, I prefer explicit exception handling so &lt;code&gt;ex is ...&lt;/code&gt; had undesireable behaviour as derrived classes are assignable to there parent types).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 이미 다른 목적으로 작성된 내 라이브러리 에이 확장 기능을 가지고 있지만 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예외 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;type&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 검사에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;완벽하게 작동했습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;게다가, imho, 그것은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;||&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;진술. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 허용되는 답변과 달리 명시 적 예외 처리를 선호하므로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ex is ...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 파생 클래스가 부모 유형에 할당 될 수 있으므로 바람직하지 않은 동작을했습니다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="74240835cd4bc17fc57bd86b1e86aefb93174327" translate="yes" xml:space="preserve">
          <source>I can't help but wonder (&lt;strong&gt;warning:&lt;/strong&gt; a little irony/sarcasm ahead) why on earth go to all this effort to basically just replace the following:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;지구상에서 기본적으로 다음을 대체하기 위해이 모든 노력을 기울이는 이유를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;궁금해 할 수는 없습니다 ( &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경고 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 약간 아이러니 / 풍자).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c37622ab80f15e89d47339306984a3ac95887a9c" translate="yes" xml:space="preserve">
          <source>I highly recommend folks review this MSDN document:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 MSDN 문서를 검토하는 것이 좋습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="780d1495b265f4e9a8ecee31bb027832a5d2a8b2" translate="yes" xml:space="preserve">
          <source>I know I'm a little late to the party here, but holy smoke...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 여기서 파티에 조금 늦었지만 성스러운 연기는 ...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3d961e357d56d34ad823fd113e2f28765f420089" translate="yes" xml:space="preserve">
          <source>I ran into a use case scenario when trying to cast control object in a datagrid, with either content as TextBox, TextBlock or CheckBox. In this case the returned Exception was the same, but the message varied.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TextBox, TextBlock 또는 CheckBox와 같은 내용으로 데이터 그리드에서 컨트롤 개체를 캐스팅하려고 할 때 유스 케이스 시나리오가 발생했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우 반환 된 Exception은 동일하지만 메시지가 다양합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="02f94d544750bdf98fc7f9f1023ba56f6ab0aa09" translate="yes" xml:space="preserve">
          <source>I want to suggest shortest answer (one more &lt;strong&gt;functional style&lt;/strong&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가장 짧은 답변을 제안하고 싶습니다 (하나 이상의 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기능적 스타일&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0e9dc59e2c3a11b47ed9d2537dbaa8971253f1b1" translate="yes" xml:space="preserve">
          <source>I wonder why no-one noticed that code-duplication.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아무도 왜 그 코드 중복을 알아 차리지 못했는지 궁금합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c50b41ab335674d6bc828e30c341ae79ecd94048" translate="yes" xml:space="preserve">
          <source>I wonder: Is there a way to catch both exceptions and only call the &lt;code&gt;WebId = Guid.Empty&lt;/code&gt; call once?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;궁금합니다 : 두 예외를 모두 포착하고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;WebId = Guid.Empty&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 호출을 한 번만 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;호출하는 방법이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f1c7b599accd0b406b2572bdd7a7f519b38d34b0" translate="yes" xml:space="preserve">
          <source>If any exception is thrown, then WebId is never set to the half-constructed value, and remains Guid.Empty.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예외가 발생하면 WebId는 반으로 구성된 값으로 설정되지 않으며 Guid.Empty로 유지됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f538280fc4add5df1e61ddb0c8c7aaba59a637ea" translate="yes" xml:space="preserve">
          <source>If constructing the fall-back value is expensive, and resetting a value is much cheaper, then I would move the reset code into its own function:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;폴백 값을 구성하는 것이 비싸고 값을 재설정하는 것이 훨씬 저렴하다면 재설정 코드를 자체 기능으로 옮길 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f8ad4319bb16a812c6324b95e9c2ebe07f4bf57b" translate="yes" xml:space="preserve">
          <source>If the handler is simple, and we want to re-use code, the best solution is probably to introduce a helper function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;핸들러가 단순하고 코드를 재사용하려는 경우 가장 좋은 해결책은 아마도 도우미 함수를 도입하는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e330682406f1c4b3a85e106c7382d74887afe47" translate="yes" xml:space="preserve">
          <source>If we don't want to re-throw, we might consider catching the right exceptions, and storing them in a temporary.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다시 던지기를 원하지 않으면 올바른 예외를 잡아 임시로 저장하는 것을 고려할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c11db494a0490dce6a9e17bcd6addd3e6e0d163a" translate="yes" xml:space="preserve">
          <source>If we look at the code, what we really would like to do is forward the call. However, according to the MS Partition II, IL exception handler blocks won't work like this, which in this case makes sense because that would imply that the 'exception' object can have different types.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드를 살펴보면 실제로 전화를 걸어야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 MS Partition II에 따르면 IL 예외 처리기 블록은 이와 같이 작동하지 않습니다.이 경우 '예외'개체가 다른 유형을 가질 수 있기 때문에 의미가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8d8207558989db2e7dfee1091e9a9bd5c52a907d" translate="yes" xml:space="preserve">
          <source>If we want to re-throw, we have no choice but to put the code in a 'Exception' catch handler, which will break FxCop and your debugger's uncaught exceptions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다시 던지기를 원한다면 FxCop과 디버거의 포착되지 않은 예외를 중단시키는 '예외'캐치 핸들러에 코드를 넣는 것 외에는 선택의 여지가 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f0396f3fe0933634437e4d13efa9b48318f3803" translate="yes" xml:space="preserve">
          <source>If you ask me, the second example (with the &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;is&lt;/code&gt; keywords) is both significantly less readable, and simultaneously significantly more error-prone during the maintenance phase of your project.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나에게 묻는다면 두 번째 예제 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; and &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 키워드 포함)는 프로젝트의 유지 보수 단계에서 읽기가 쉽지 않으며 오류가 발생하기 쉽습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d147073ec9d1be11df42ab43bd63f496ba553b9" translate="yes" xml:space="preserve">
          <source>If you can upgrade your application to C# 6 you are lucky. The new C# version has implemented Exception filters. So you can write this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;응용 프로그램을 C # 6으로 업그레이드 할 수 있다면 운이 좋습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;새로운 C # 버전은 예외 필터를 구현했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래서 당신은 이것을 쓸 수 있습니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d552cdbb82e4cf6a4940a80e3f2e1be834c498e" translate="yes" xml:space="preserve">
          <source>If you don't want to use an &lt;code&gt;if&lt;/code&gt; statement within the &lt;code&gt;catch&lt;/code&gt; scopes, &lt;strong&gt;&lt;em&gt;in &lt;code&gt;C# 6.0&lt;/code&gt; you can use &lt;code&gt;Exception Filters&lt;/code&gt; syntax&lt;/em&gt;&lt;/strong&gt; which was already supported by the CLR in previews versions but existed only in &lt;code&gt;VB.NET&lt;/code&gt;/&lt;code&gt;MSIL&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이를 사용하지 않을 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 내에서 문 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 범위 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C# 6.0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 당신이 사용할 수있는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Exception Filters&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구문&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이미 미리보기 버전의 CLR에 의해 지원 만 존재했다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;VB.NET&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MSIL&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71674352e64f530a61439601f02e7464c8b3b848" translate="yes" xml:space="preserve">
          <source>If you want to continue using Visual Studio 2013, you can install the following nuget package:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Visual Studio 2013을 계속 사용하려면 다음과 같은 너겟 패키지를 설치할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dfbebe9c28406d73a5cb8384408c1032f57b8c46" translate="yes" xml:space="preserve">
          <source>In C# 7.0+, you can combine this with pattern matching too</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 7.0 이상에서는이를 패턴 일치와 결합 할 수도 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="026fae3457299735b784df3c5b5d4a008f86ea57" translate="yes" xml:space="preserve">
          <source>In c# 6.0,Exception Filters is improvements for exception handling</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 6.0에서 예외 필터는 예외 처리를 개선 한 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ca4b4baab3be903a2c5a12429ced4eab9894b0f5" translate="yes" xml:space="preserve">
          <source>In short, no.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;요컨대&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bad182dce85964009f99188e3387cec999f8a81b" translate="yes" xml:space="preserve">
          <source>Initialize WebId to the fall-back value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대체 값으로 WebId를 초기화하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="21c6170e81cf52460da0fc2b6b268b15204775ca" translate="yes" xml:space="preserve">
          <source>Install-Package Microsoft.Net.Compilers</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;설치 패키지 Microsoft.Net.Compilers&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65101af96bc9264e39ad9b42429b60c89bda3dca" translate="yes" xml:space="preserve">
          <source>It can even be compacted to a single line (though not very pretty)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;심지어 한 줄로 압축 할 수도 있습니다 (매우 예쁘지는 않지만)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee03e87bc255456e61aebe03ef23230147a58f5d" translate="yes" xml:space="preserve">
          <source>It is discouraged to simply catch &lt;code&gt;System.Exception&lt;/code&gt;. Instead, only the &quot;known&quot; exceptions should be caught.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;단순히 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Exception&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 잡는 것은 좋지 않습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대신 &quot;알려진&quot;예외 만 포착해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2729d160bb79005beca2084b5df0a3f38c86bb26" translate="yes" xml:space="preserve">
          <source>It is just that Simple!!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그냥 간단합니다!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0e7007b6b6aab9e8c438cca232b2755efd880ff" translate="yes" xml:space="preserve">
          <source>It is worth mentioning here. You can respond to the multiple combinations (Exception error and exception.message).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 언급 할 가치가 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여러 조합 (예외 오류 및 예외. 메시지)에 응답 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90f5902bc1a319f8953809309388ae151bffc367" translate="yes" xml:space="preserve">
          <source>Just call the try and catch twice.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;시도하고 두 번 잡으십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ebe9b7ab107b293b672019c2bf62a545d09cdda" translate="yes" xml:space="preserve">
          <source>Just how I would do it, trying to find the &lt;em&gt;simple is beautiful&lt;/em&gt; pattern</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 어떻게 할 것인가, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;단순함&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 찾으려고 노력하는 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것은 아름다운&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 패턴입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3de8e13f2d58751d17f79ba82916bddcf4930db9" translate="yes" xml:space="preserve">
          <source>Just saying...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그냥 ...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f654315c2642f6686f15e838fb9cfaef4a30f5c6" translate="yes" xml:space="preserve">
          <source>Let me break your question into 2 questions.  The first,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;질문을 두 가지 질문으로 나누겠습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫번째,&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="277d463ead616f9c9e3a25bac2ef07c11f92c5ef" translate="yes" xml:space="preserve">
          <source>Matching behaviour for &lt;code&gt;Exception&lt;/code&gt; types is exact (ie. A child IS NOT a match for any of its parent types).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유형에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대한 일치 동작 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 정확합니다 (예 : 하위 유형이 부모 유형과 일치하지 않음).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="50f1c5e1d73fc644c699b6519af102026e9072e7" translate="yes" xml:space="preserve">
          <source>Maybe try to keep your code simple such as putting the common code in a method, as you would do in any other part of the code that is not inside a catch clause?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;catch 절에없는 코드의 다른 부분에서와 같이 메소드에 공통 코드를 넣는 것과 같이 코드를 단순하게 유지하려고 시도하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f129e30c19fc94a60bf892f96e6f7cc1c93ac303" translate="yes" xml:space="preserve">
          <source>Next useless update to this useless answer comes when deconstruction of out-parameters is implemented in C# 12. :)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 쓸모없는 답변에 대한 다음 쓸모없는 업데이트는 C # 12에서 매개 변수의 해체가 구현 될 때 발생합니다. :)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff3606b31e07f3a5fe0e676990944aadfec5d0d5" translate="yes" xml:space="preserve">
          <source>Not in C# unfortunately, as you'd need an exception filter to do it and C# doesn't expose that feature of MSIL. VB.NET does have this capability though, e.g.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;불행히도 C #에는 그렇지 않습니다. 예외 필터가 필요하고 C #은 MSIL의 해당 기능을 노출하지 않기 때문입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;VB.NET은이 기능을 가지고 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="387204d2ecb9509b33590cf8b44afd14a24010d1" translate="yes" xml:space="preserve">
          <source>Note that I did find one way to do it, but this looks more like material for &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Daily_WTF&quot;&gt;The Daily WTF&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한 가지 방법을 찾았지만 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/The_Daily_WTF&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Daily WTF의&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 자료와 비슷합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8b5338876c5a2c0e9ee51235aebc5eed5d58b7b" translate="yes" xml:space="preserve">
          <source>Note that as opposed to an &lt;code&gt;if&lt;/code&gt; statement inside the &lt;code&gt;catch&lt;/code&gt;'s scope, &lt;code&gt;Exception Filters&lt;/code&gt; cannot throw &lt;code&gt;Exceptions&lt;/code&gt;, and when they do, or when the condition is not &lt;code&gt;true&lt;/code&gt;, the next &lt;code&gt;catch&lt;/code&gt; condition will be evaluated instead:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 범위 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 문과 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;달리 &lt;/font&gt; &lt;code&gt;Exception Filters&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt; &lt;code&gt;Exceptions&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; throw 할 수 없으며 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예외가&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 발생하거나 조건이 &lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 아닌 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 다음 &lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 조건이 대신 평가됩니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="307da8d59df79d213bf1937c633e591c2d7b1f47" translate="yes" xml:space="preserve">
          <source>Now, this sometimes leads to unneccessary repetitive code, for example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제는 때때로 불필요한 반복 코드로 이어집니다. 예를 들면 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c38182e25f1f4e2e680c0985dd7c98b38942c400" translate="yes" xml:space="preserve">
          <source>One of the major points, really, is that most of the point of formatting the textual source code that we're all looking at every day is to make it really, really obvious to other human beings what is actually happening when the code runs.  Because the compiler turns the source code into something totally different and couldn't care less about your code formatting style.  So all-on-one-line totally sucks, too.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로 중요한 점 중 하나는 우리가 매일보고있는 텍스트 소스 코드를 형식화하는 대부분의 포인트가 코드 실행시 실제로 발생하는 일을 다른 사람에게 실제로 분명하게 만드는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컴파일러는 소스 코드를 완전히 다른 것으로 변환하고 코드 서식 스타일에 대해서는 신경 쓰지 않기 때문입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 올인원 라인도 완전히 짜증납니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c2798cf70d9db202201ca1f462f0a7aa390a26de" translate="yes" xml:space="preserve">
          <source>Or to write it in code, we ask the compiler to do something like this (well it's not entirely correct, but it's the closest possible thing I guess):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 코드로 작성하려면 컴파일러에게 다음과 같은 작업을 수행하도록 요청하십시오 (전적으로 정확하지는 않지만 가장 가까운 것으로 생각됩니다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c16777d24367e3f298e7a67a4bfda81a4d9675f" translate="yes" xml:space="preserve">
          <source>Output: Catch.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;출력 : 캐치.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3c0e4355b62280b3263546bae6eb0a516c472868" translate="yes" xml:space="preserve">
          <source>Output: General catch.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;출력 : 일반 캐치.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ecc3cfb9af571c4404afc45fdc1346391cba3878" translate="yes" xml:space="preserve">
          <source>Referencing this package will cause the project to be built using the
  specific version of the C# and Visual Basic compilers contained in the
  package, as opposed to any system installed version.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 패키지를 참조하면 시스템에 설치된 모든 버전과 달리 패키지에 포함 된 특정 버전의 C # 및 Visual Basic 컴파일러를 사용하여 프로젝트가 빌드됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9889f134527432dcbe02f9a4e26a1566fa481e1d" translate="yes" xml:space="preserve">
          <source>See a &lt;a href=&quot;https://roslyn.codeplex.com/discussions/541301&quot;&gt;discussion about this on CodePlex&lt;/a&gt;. And an &lt;a href=&quot;http://www.volatileread.com/Wiki/Index?id=1087&quot;&gt;example showing the difference&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://roslyn.codeplex.com/discussions/541301&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CodePlex에 대한 논의를&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 참조하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.volatileread.com/Wiki/Index?id=1087&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;차이점을 보여주는 예&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a0f044dd5ba573faa03180c7cb9425085f563062" translate="yes" xml:space="preserve">
          <source>Set WebId to the fully constructed temporary variable.  Make this the final statement of the try{} block.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;WebId를 완전히 구성된 임시 변수로 설정하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것을 try {} 블록의 최종 문장으로 만드십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c209d0a5eace88efaaedde48c3ad7c2f70ca081" translate="yes" xml:space="preserve">
          <source>Since &lt;strong&gt;C# 7&lt;/strong&gt; you can avoid introducing a variable on a separate line:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 7&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 부터는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;별도의 행에 변수를 도입하지 않아도됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc2791091b2e77f5c8e25ff45eeded0171a350f8" translate="yes" xml:space="preserve">
          <source>Since I felt like these answers just touched the surface, I attempted to dig a bit deeper.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 답변이 표면에 닿는 것처럼 느껴지므로 조금 더 깊이 파고 들었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff984b756a47a0896f0f17221cd64b0b91c34398" translate="yes" xml:space="preserve">
          <source>Slightly revised version of your code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;약간 수정 된 코드 버전 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a347d294b31f0747c0d427b69390320d40eb5848" translate="yes" xml:space="preserve">
          <source>So the code looks like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 코드는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5ebe26a1976d35b403686baa594965c8a21ec1d" translate="yes" xml:space="preserve">
          <source>So to conclude:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결론적으로 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fba6c3dd6bfcb0f8599df48543715d028146b9e2" translate="yes" xml:space="preserve">
          <source>So what we would really want to do is something that doesn't compile, say:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래서 우리가 정말로하고 싶은 것은 컴파일되지 않는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0b2999dc55eadeb32a8eea7837711256935984c0" translate="yes" xml:space="preserve">
          <source>So why won't this code compile - and how can we hack it in such a way that it will?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇다면이 코드가 컴파일되지 않는 이유는 무엇이며 어떻게 그렇게 해킹 할 수 있습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="59d5b84e463ffda163b9c20671002ba7bede5835" translate="yes" xml:space="preserve">
          <source>So you&amp;acute;re repeating lots of code within every exception-switch? Sounds like extracting a method would be god idea, doesn&amp;acute;t it?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 예외 스위치 내에서 많은 코드를 반복하고 있습니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;방법을 추출하는 것과 같은 소리는 신의 생각일까요?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="28aad4ec99b5934be9e01f44169ee4a3c9b2b75b" translate="yes" xml:space="preserve">
          <source>So your code comes down to this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 코드는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ef13ab8ec9dd166e5d867d7fbbb39bb73cd543e4" translate="yes" xml:space="preserve">
          <source>Some people think this code is the same as</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어떤 사람들은이 코드가&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7341f6385aceb3a37913d3cc72774b078a8510f0" translate="yes" xml:space="preserve">
          <source>String comparisons are ugly and slow.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자열 비교는 추악하고 느립니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c302bfb8c6ca9631e91e2a7e11fcb4a4304b008c" translate="yes" xml:space="preserve">
          <source>That leaves just the 're-throw'. For this to work, we need to be able to perform the handling inside the 'catch' block - and the only way to make this work is by an catching 'Exception' object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 단지 '다시 던지기'만 남습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 작업을 수행하려면 'catch'블록 내부에서 처리를 수행 할 수 있어야합니다.이 작업을 수행하는 유일한 방법은 'Exception'개체를 잡는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5224130c9b85acc029bcb32616a1b11cc5806f7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MyFilter&lt;/code&gt; method could then look something like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;MyFilter&lt;/code&gt; 의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 방법은 다음과 같을 수 있습니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5ece06866e04ad9203ab4d537beecbf110f7d9a8" translate="yes" xml:space="preserve">
          <source>The accepted answer seems acceptable, except that CodeAnalysis/&lt;a href=&quot;http://en.wikipedia.org/wiki/FxCop&quot;&gt;FxCop&lt;/a&gt; will complain about the fact that it's catching a general exception type.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CodeAnalysis / &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/FxCop&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;FxCop&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 일반적인 예외 유형을 포착하고 있다는 사실에 대해 불만을 제기 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한다는 점을 제외하고는 허용 된 답변으로 받아 들일 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4781fc70c4345a21044d116b1280161a2c9956c1" translate="yes" xml:space="preserve">
          <source>The bigger question to this is &lt;em&gt;why&lt;/em&gt;. I do not think the cost outweighs the gain here :)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것에 대한 더 큰 질문은 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이유&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 비용이 이익보다 크다고 생각하지 않습니다. :)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f58cc981739315748cd319c85046ccdfa234e3cd" translate="yes" xml:space="preserve">
          <source>The code isn't nested</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드가 중첩되지 않았습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b8b76967a2caca71316d6dcba09aade5b7149fb" translate="yes" xml:space="preserve">
          <source>The given example is rather simple, as it's only a &lt;a href=&quot;http://en.wikipedia.org/wiki/Globally_unique_identifier&quot;&gt;&lt;code&gt;GUID&lt;/code&gt;&lt;/a&gt;. But imagine code where you modify an object multiple times, and if one of the manipulations fail in an expected way, you want to &quot;reset&quot; the &lt;code&gt;object&lt;/code&gt;. However, if there is an unexpected exception, I still want to throw that higher.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주어진 예제는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Globally_unique_identifier&quot;&gt; &lt;code&gt;GUID&lt;/code&gt; 일&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 뿐이므로 다소 간단 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 객체를 여러 번 수정하는 코드를 상상하고 조작 중 하나가 예상대로 실패하는 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &quot;재설정&quot;하려고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 예기치 않은 예외가있는 경우 여전히 더 높이 던지고 싶습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d50d11a893fba32da9b37c41ce8ed5904f8bc553" translate="yes" xml:space="preserve">
          <source>The maintenance phase, for anyone who might be relatively new to programming, is going to comprise 98.7% or more of the overall lifetime of your project, and the poor schmuck doing the maintenance is almost certainly going to be someone other than you. And there is a very good chance they will spend 50% of their time on the job cursing your name.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유지 보수 단계는 프로그래밍에 익숙하지 않은 사용자를 위해 프로젝트 전체 수명의 98.7 % 이상을 차지할 것이며 유지 보수를 수행하는 불량 Schmuck은 다른 사람이 될 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 그들이 당신의 이름을 저주하는 일에 그들의 시간의 50 %를 소비 할 가능성이 매우 높습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f61c0731b8f8a19c626811dc48dad3864d3e64a0" translate="yes" xml:space="preserve">
          <source>The obvious disadvantages for this are that we cannot re-throw properly, and -well let's be honest- that it's quite the ugly solution. The uglyness can be fixed a bit by performing branch elimination, which makes the solution slightly better:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것에 대한 명백한 단점은 우리가 올바르게 다시 던질 수 없다는 것입니다. 솔직히 말해서 그것이 그것이 못생긴 해결책이라는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;분기 제거를 수행하여 추악함을 약간 수정하여 솔루션을 약간 향상시킬 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b53b26658767f7dd6c482127876a53fe82bf3174" translate="yes" xml:space="preserve">
          <source>The reason that this won't compile is quite obvious: what type and value would the '$exception' object have (which are here stored in the variables 'e')? The way we want the compiler to handle this is to note that the common base type of both exceptions is 'Exception', use that for a variable to contain both exceptions, and then handle only the two exceptions that are caught. The way this is implemented in IL is as 'filter', which is available in VB.Net.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 컴파일되지 않는 이유는 분명합니다. '$ exception'객체가 갖는 유형과 값 (여기서 변수 'e'에 저장 됨)은 무엇입니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컴파일러가 이것을 처리하도록하는 방법은 두 예외의 공통 기본 유형이 '예외'라는 점에 유의하고 변수에 두 예외를 모두 포함시킨 다음 포착 된 두 예외 만 처리하는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 IL에서 구현되는 방식은 VB.Net에서 사용할 수있는 '필터'입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c628a163cc1b537d3685215329c5d7321e035cc" translate="yes" xml:space="preserve">
          <source>The reason we want this is because we don't want the exception handler to catch things that we need later on in the process. Sure, we can catch an Exception and check with an 'if' what to do, but let's be honest, we don't really want that. (FxCop, debugger issues, uglyness)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리가 원하는 이유는 예외 처리기가 프로세스에서 나중에 필요한 것을 포착하지 않기 때문입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;물론, 예외를 잡아서해야 할 일을 'if'로 확인할 수 있지만, 솔직히 말하면 실제로는 원하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(FxCop, 디버거 문제, 못생긴)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="38cf9971eeb919703b567eb892ae4463f4a39305" translate="yes" xml:space="preserve">
          <source>There are a few advantages of inverting the expression:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;식을 반전 시키면 몇 가지 장점이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2805d8052ac54e828feb8e44e99582c2fc025010" translate="yes" xml:space="preserve">
          <source>There's no risk of forgetting the 'throw' or 'return' statements that in Joseph's solution are separated from the expression.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;조셉의 해결책에서 표현과 분리되어있는 '투구'또는 '반품'진술을 잊어 버릴 위험이 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5952b23f46d9b0270fef53d9264d1c1c54c042f0" translate="yes" xml:space="preserve">
          <source>This code will catch the &lt;code&gt;Exception&lt;/code&gt; only when it's a &lt;code&gt;InvalidDataException&lt;/code&gt; or &lt;code&gt;ArgumentNullException&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 코드는 &lt;/font&gt; &lt;code&gt;InvalidDataException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt; &lt;code&gt;ArgumentNullException&lt;/code&gt; 인&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 경우에만 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 포착합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a00e29090c2c1e94dc2959e6bfe7c8589784d0c" translate="yes" xml:space="preserve">
          <source>This is a classic problem every C# developer faces eventually.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 모든 C # 개발자가 결국 직면하는 고전적인 문제입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c7097eacdf2ef8cb7152d26b733053d7d356d8ad" translate="yes" xml:space="preserve">
          <source>This is a variant of Matt's answer (I feel that this is a bit cleaner)...use a method:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 Matt의 대답의 변형입니다 (이것이 조금 더 깨끗하다고 ​​생각합니다) ... 방법을 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d064d3721c19dbe49384f0cc083a7d861381bfc2" translate="yes" xml:space="preserve">
          <source>This is different from using an &lt;code&gt;if&lt;/code&gt; statement from within the &lt;code&gt;catch&lt;/code&gt; block, using exception filters &lt;strong&gt;will not&lt;/strong&gt; unwind the stack.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 &lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 블록 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 문 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 사용하는 것과 다릅니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예외 필터 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 스택이 풀리지 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;않습니다&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac3d44b1b396d47e05b659d56060dba602f9ef49" translate="yes" xml:space="preserve">
          <source>To make it work in C#, we need a temporary variable with the correct 'Exception' base type. To control the flow of the code, we can add some branches. Here goes:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C #에서 작동하려면 올바른 '예외'기본 유형의 임시 변수가 필요합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드 흐름을 제어하기 위해 분기를 추가 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;간다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c51fe20cce0d7eb3f5f99f34d3c1e5b5aba580ac" translate="yes" xml:space="preserve">
          <source>Update 2015-12-15: See &lt;a href=&quot;https://stackoverflow.com/a/22864936/1718702&quot;&gt;https://stackoverflow.com/a/22864936/1718702&lt;/a&gt; for C#6. It's a cleaner and now standard in the language.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2015-12-15 업데이트 : &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 6에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대해서는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/22864936/1718702&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://stackoverflow.com/a/22864936/1718702&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하십시오&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;언어가 더 깨끗하고 표준입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ef54e2ab9573a1dc779ebbc0d5c7ab555e163fd5" translate="yes" xml:space="preserve">
          <source>Wanted to added my short answer to this already long thread.  Something that hasn't been mentioned is the order of precedence of the catch statements, more specifically you need to be aware of the scope of each type of exception you are trying to catch.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 긴 스레드에 짧은 대답을 추가하고 싶었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;언급되지 않은 것은 catch 문의 우선 순위이며,보다 구체적으로 파악하려는 각 예외 유형의 범위를 알고 있어야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f657cff0d5b3756ec384f3714196cff6006b0a71" translate="yes" xml:space="preserve">
          <source>What is in the link doesn't answer your question directly, but it's trivial to extend it to look like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;링크에있는 내용이 귀하의 질문에 직접 답변하지는 않지만 다음과 같이 확장하기는 쉽지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99943cfb5ecf002e5e9ae5a52b8b28cf24b0de74" translate="yes" xml:space="preserve">
          <source>What you could do is use an anonymous function to encapsulate your on-error code, and then call it in those specific catch blocks:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이 할 수있는 일은 익명 함수를 사용하여 오류가 발생한 코드를 캡슐화 한 다음 특정 catch 블록에서 호출하는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ca80db7575742b27fde65b854b945355d61acbf1" translate="yes" xml:space="preserve">
          <source>When there is more then one &lt;code&gt;true&lt;/code&gt;&lt;code&gt;Exception Filter&lt;/code&gt; - the first one will be accepted:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하나 이상의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;code&gt;Exception Filter&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가있는 경우 첫 번째 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예외 필터&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 승인됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a7a09fc641433a64a134033646f75d56fd17522d" translate="yes" xml:space="preserve">
          <source>Which leads to the next question,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 질문으로 이어지는&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eae36f0ce3daef78241f69b2133207bcf3a34e61" translate="yes" xml:space="preserve">
          <source>With C# 7 &lt;a href=&quot;https://stackoverflow.com/a/136038&quot;&gt;the answer from Michael Stum&lt;/a&gt; can be improved while keeping the readability of a switch statement:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 7 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 사용하면 스위치 명령문의 가독성을 유지하면서 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/136038&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Michael Stum의 답변을&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 향상시킬 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="528302a0747104d2be1351ddb8503984852db552" translate="yes" xml:space="preserve">
          <source>Would putting the entire &lt;code&gt;if&lt;/code&gt; test on one line make it more readable? I don't think so.  I mean, I did have another programmer vehemently argue once long ago that putting more code on one line would make it &quot;run faster.&quot;  But of course he was stark raving nuts. Trying to explain to him (with a straight face--which was challenging) how the interpreter or compiler would break that long line apart into discrete one-instruction-per-line statements--essentially identical to the result if he had gone ahead and just made the code readable instead of trying to out-clever the compiler--had no effect on him whatsoever.  But I digress.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;겠습니까 전체 두는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 한 줄에 테스트가 더 읽기 쉽게 만들 수 있습니까? 나는 그렇게 생각하지 않습니다. 한 번에 한 줄에 더 많은 코드를 넣으면 &quot;더 빨리 실행&quot;될 것이라고 한 번도 다른 프로그래머가 격렬하게 주장했음을 의미합니다. 그러나 물론 그는 굶주린 견과였다. 통역사 또는 컴파일러가 어떻게 긴 줄을 별개의 한 줄에 한 줄로 나누는 방법을 그에게 설명하려고 노력했지만 본질적으로 결과가 동일한 경우 컴파일러를 능숙하게 만들지 않고 코드를 읽을 수있게 만들었습니다. 그러나 나는 산만하다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="131f753f0d5bbeaa4b9a7cad82488c60f2611438" translate="yes" xml:space="preserve">
          <source>You can also create methods for parsing returning tuples, which aren't available in .NET Framework yet as of version 4.6:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.NET Framework에서는 아직 버전 4.6에서는 사용할 수없는 반환 튜플을 구문 분석하는 메서드를 만들 수도 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f61fac0758d9e743bebe99080ec29731f9ec5c60" translate="yes" xml:space="preserve">
          <source>You can download &lt;a href=&quot;http://www.visualstudio.com/en-us/downloads/visual-studio-2015-downloads-vs.aspx&quot;&gt;Visual Studio 2015&lt;/a&gt; to check this out.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://www.visualstudio.com/en-us/downloads/visual-studio-2015-downloads-vs.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Visual Studio 2015&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다운로드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 확인할 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1e5e031fbb8dbee194806a598096e8bbb6e5cc91" translate="yes" xml:space="preserve">
          <source>and so on as many as you wish. But you need to do it once and you can use it in all your projects (or, if you created a nuget package we could use it too).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이 원하는대로 등등. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 한 번만 수행하면 모든 프로젝트에서 사용할 수 있습니다 (또는 너겟 패키지를 만들면 사용할 수도 있습니다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="139bc28d7f6f0cb680c67b97d63cee5a0af93231" translate="yes" xml:space="preserve">
          <source>in C# 6 the recommended approach is to use Exception Filters, here is an example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 6에서 권장되는 접근 방식은 예외 필터를 사용하는 것입니다. 예는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e163cb1fcc4cf94d0647fa5057c3c5055217b4d7" translate="yes" xml:space="preserve">
          <source>p.s. I haven't put null checks for code simplicity, consider to add parameter validations.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추신 : 코드 단순성을 위해 null 검사를하지 않았으므로 매개 변수 유효성 검사를 추가하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b52463a5170e012e085593425db69ddae475562f" translate="yes" xml:space="preserve">
          <source>p.s.2 
If you want to return a value from the catch, it's necessary to do same Catch methods, but with returns and Func instead of Action in parameters.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ps2 catch에서 값을 반환하려면 동일한 Catch 메서드를 수행해야하지만 매개 변수의 Action 대신 return 및 Func를 사용해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
