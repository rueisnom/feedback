<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/1335851">
    <body>
      <group id="1335851">
        <trans-unit id="59655149a5150c3ca8c39faa908f2d6163ff8a16" translate="yes" xml:space="preserve">
          <source>&quot;Use Strict&quot;; is an insurance that programmer will not use the loose or the bad properties of JavaScript. It is a guide, just like a ruler will help you make straight lines. &quot;Use Strict&quot; will help you do &quot;Straight coding&quot;.</source>
          <target state="translated">&quot;Use Strict&quot;;es un seguro de que el programador no usará las flojas o las malas propiedades de JavaScript.Es una guía,al igual que una regla te ayudará a hacer líneas rectas.&quot;Usar Estricto&quot; te ayudará a hacer &quot;Codificación recta&quot;.</target>
        </trans-unit>
        <trans-unit id="3004d681862814bd492c00f298f79de8546a16e3" translate="yes" xml:space="preserve">
          <source>&quot;use strict&quot;; is the ECMA effort to make JavaScript a little bit more robust. It brings in JS an attempt to make it at least a little &quot;strict&quot; (other languages implement strict rules since the 90s). It actually &quot;forces&quot; JavaScript developers to follow some sort of coding best practices.
Still, JavaScript is very fragile. There is no such thing as typed variables, typed methods, etc.
I strongly recommend JavaScript developers to learn a more robust language such as Java or ActionScript3, and implement the same best practices in your JavaScript code, it will work better and be easier to debug.</source>
          <target state="translated">&quot;use strict&quot;;es el esfuerzo de la ECMA para hacer el JavaScript un poco más robusto.Trae en JS un intento de hacerlo al menos un poco &quot;estricto&quot; (otros lenguajes implementan reglas estrictas desde los 90).En realidad &quot;obliga&quot; a los desarrolladores de JavaScript a seguir algún tipo de mejores prácticas de codificación.Aún así,JavaScript es muy frágil.No hay tal cosa como variables escritas,métodos escritos,etc.Recomiendo fuertemente a los desarrolladores de JavaScript que aprendan un lenguaje más robusto como Java o ActionScript3,e implementen las mismas mejores prácticas en su código JavaScript,funcionará mejor y será más fácil de depurar.</target>
        </trans-unit>
        <trans-unit id="a890ef5e6862668a8f388386b332421857c3174b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://web.archive.org/web/20170707015027/http://cjihrig.com/blog/javascripts-strict-mode-and-why-you-should-use-it/&quot;&gt;JavaScript&amp;rsquo;s Strict Mode and Why You Should Use It&lt;/a&gt; on Colin J. Ihrig's blog (archived version)</source>
          <target state="translated">&lt;a href=&quot;http://web.archive.org/web/20170707015027/http://cjihrig.com/blog/javascripts-strict-mode-and-why-you-should-use-it/&quot;&gt;Modo estricto de JavaScript y por qu&amp;eacute; debe usarlo&lt;/a&gt; en el blog de Colin J. Ihrig (versi&amp;oacute;n archivada)</target>
        </trans-unit>
        <trans-unit id="d3d3727e7b6567159e7a102fb614c67f67805b58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.jslint.com/&quot;&gt;JSLint&lt;/a&gt; is a debugger written by Douglas Crockford. Simply paste in your script, and it&amp;rsquo;ll quickly scan for any noticeable issues and errors in your code.</source>
          <target state="translated">&lt;a href=&quot;http://www.jslint.com/&quot;&gt;JSLint&lt;/a&gt; es un depurador escrito por Douglas Crockford. Simplemente pegue su script, y escanear&amp;aacute; r&amp;aacute;pidamente en busca de problemas y errores notables en su c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="78bf625f7b5e03664c59d7ee51dc7af02310b85e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.w3schools.com/js/js_strict.asp&quot;&gt;Quoting from w3schools&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3schools.com/js/js_strict.asp&quot;&gt;Citando de w3schools&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="b5af4e0174180b8a2c7208d7edf82d109f9cd5e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;Strict mode&lt;/a&gt; on MDN</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;Modo estricto&lt;/a&gt; en MDN</target>
        </trans-unit>
        <trans-unit id="b5bcc7d75cb8e736baf64db945995c8b9a3a60be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode&quot;&gt;Transitioning to strict mode&lt;/a&gt; on MDN</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode&quot;&gt;Transici&amp;oacute;n al modo estricto&lt;/a&gt; en MDN</target>
        </trans-unit>
        <trans-unit id="6e939affa70685384b45a4a4e094772a28124974" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;use strict&quot;&lt;/code&gt; a directive introduced in ECMAScript 5.</source>
          <target state="translated">&lt;code&gt;&quot;use strict&quot;&lt;/code&gt; una directiva introducida en ECMAScript 5.</target>
        </trans-unit>
        <trans-unit id="643a6e9cb02c410968fee48edd499efb7b160711" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;use strict&quot;&lt;/code&gt; is widely needed to be used in ECMA5, &lt;strong&gt;in ECMA6 it's part of JavaScript by default&lt;/strong&gt;, so it doesn't need to be added if you're using ES6.</source>
          <target state="translated">&lt;code&gt;&quot;use strict&quot;&lt;/code&gt; es muy necesario para ser usado en ECMA5, &lt;strong&gt;en ECMA6 es parte de JavaScript por defecto&lt;/strong&gt; , por lo que no es necesario agregarlo si est&amp;aacute; usando ES6.</target>
        </trans-unit>
        <trans-unit id="42f94653c815af9a0a66db63daf88a106628f565" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;use strict&quot;&lt;/code&gt; makes JavaScript code to run in &lt;em&gt;strict mode&lt;/em&gt;, which basically means everything needs to be defined before use. The main reason for using strict mode is to avoid accidental global uses of undefined methods.</source>
          <target state="translated">&lt;code&gt;&quot;use strict&quot;&lt;/code&gt; hace que el c&amp;oacute;digo JavaScript se ejecute en &lt;em&gt;modo estricto&lt;/em&gt; , lo que b&amp;aacute;sicamente significa que todo debe definirse antes de su uso. La raz&amp;oacute;n principal para usar el modo estricto es evitar usos globales accidentales de m&amp;eacute;todos indefinidos.</target>
        </trans-unit>
        <trans-unit id="b2700ddb133085373ac38f09a3f5d0bf79811178" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arguments.callee&lt;/code&gt; is not supported</source>
          <target state="translated">&lt;code&gt;arguments.callee&lt;/code&gt; no es compatible</target>
        </trans-unit>
        <trans-unit id="f8d48d4465392e0aa08ee8ea840aa1b3f23996fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval&lt;/code&gt; in strict mode does not introduce new variables</source>
          <target state="translated">&lt;code&gt;eval&lt;/code&gt; en modo estricto no introduce nuevas variables</target>
        </trans-unit>
        <trans-unit id="3ab7533dde427ea5d6492eae8a3125e8afc3cfaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;implements&lt;/code&gt;, &lt;code&gt;interface&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;package&lt;/code&gt;, &lt;code&gt;private&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt;, &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;static&lt;/code&gt;, and &lt;code&gt;yield&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;implements&lt;/code&gt; , &lt;code&gt;interface&lt;/code&gt; , &lt;code&gt;let&lt;/code&gt; , &lt;code&gt;package&lt;/code&gt; , &lt;code&gt;private&lt;/code&gt; , &lt;code&gt;protected&lt;/code&gt; , &lt;code&gt;public&lt;/code&gt; , &lt;code&gt;static&lt;/code&gt; y &lt;code&gt;yield&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec53e46b9a64ec466cbf3b9f2ea170c32991ddb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this&lt;/code&gt; point to the global object.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; punto al objeto global.</target>
        </trans-unit>
        <trans-unit id="ff636551fe7d26c196cc6753f1ecb44215346d16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use strict&lt;/code&gt; also works inside of individual functions. It is always a better practice to include &lt;code&gt;use strict&lt;/code&gt; in your code.</source>
          <target state="translated">&lt;code&gt;use strict&lt;/code&gt; tambi&amp;eacute;n funciona dentro de las funciones individuales. Siempre es una mejor pr&amp;aacute;ctica incluir el &lt;code&gt;use strict&lt;/code&gt; en su c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="189bf0e21b07dc936d1f4023bde32e80cf254249" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use strict&lt;/code&gt; can be used only at the beginning of a script or of a function, i.e. it must precede every other (real) statement. It does not have to be the first instruction in a script of function: it can be preceded by other statement expressions that consist of string literals ( and JavaScript implementations can treat them as implementation specific directives). String literals statements, which follow a first real statement (in a script or function) are simple expression statements. Interpreters must not interpret them as directives and they have no effect.</source>
          <target state="translated">&lt;code&gt;use strict&lt;/code&gt; se puede usar al comienzo de un script o de una funci&amp;oacute;n, es decir, debe preceder a cualquier otra declaraci&amp;oacute;n (real). No tiene que ser la primera instrucci&amp;oacute;n en un script de funci&amp;oacute;n: puede estar precedido por otras expresiones de declaraci&amp;oacute;n que consisten en literales de cadena (y las implementaciones de JavaScript pueden tratarlas como directivas espec&amp;iacute;ficas de implementaci&amp;oacute;n). Las declaraciones de literales de cadena, que siguen a una primera declaraci&amp;oacute;n real (en un script o funci&amp;oacute;n) son declaraciones de expresi&amp;oacute;n simple. Los int&amp;eacute;rpretes no deben interpretarlos como directivas y no tienen ning&amp;uacute;n efecto.</target>
        </trans-unit>
        <trans-unit id="c8a24ea46f8167baca5ea7c30a696dde06bff8b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use strict&lt;/code&gt; does not contain key words: The directive is a simple expression statement, which consists of a special string literal (in single or double quotes). JavaScript engines, that do not implement ECMAScript 5, merely see an expression statement without side effects. It is expected that future versions of ECMAScript standards introduce &lt;code&gt;use&lt;/code&gt; as a real key word; the quotes would thereby become obsolete.</source>
          <target state="translated">&lt;code&gt;use strict&lt;/code&gt; no contiene palabras clave: la directiva es una declaraci&amp;oacute;n de expresi&amp;oacute;n simple, que consiste en un literal de cadena especial (entre comillas simples o dobles). Los motores de JavaScript, que no implementan ECMAScript 5, simplemente ven una declaraci&amp;oacute;n de expresi&amp;oacute;n sin efectos secundarios. Se espera que las futuras versiones de los est&amp;aacute;ndares ECMAScript introduzcan el &lt;code&gt;use&lt;/code&gt; como una palabra clave real; las citas se volver&amp;iacute;an obsoletas.</target>
        </trans-unit>
        <trans-unit id="93d83abef028d4a348358ca66f7d7b8d130ab13f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use strict&lt;/code&gt; is a way to make your code safer, because you can't use dangerous features that can work not as you expect. And, as was written before, it makes code more strict.</source>
          <target state="translated">&lt;code&gt;use strict&lt;/code&gt; es una forma de hacer que su c&amp;oacute;digo sea m&amp;aacute;s seguro, ya que no puede usar caracter&amp;iacute;sticas peligrosas que pueden funcionar de la manera no esperada. Y, como se escribi&amp;oacute; anteriormente, hace que el c&amp;oacute;digo sea m&amp;aacute;s estricto.</target>
        </trans-unit>
        <trans-unit id="02f9e1a9c89babe3794e548d1c031c3a106b1dc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;with&lt;/code&gt; statements can't be minified using tools like &lt;a href=&quot;http://marijnhaverbeke.nl/uglifyjs&quot;&gt;uglify-js&lt;/a&gt;. They're also &lt;a href=&quot;http://www.2ality.com/2011/06/with-statement.html&quot;&gt;deprecated&lt;/a&gt; and removed from future JavaScript versions.</source>
          <target state="translated">&lt;code&gt;with&lt;/code&gt; declaraciones no se pueden minimizar utilizando herramientas como &lt;a href=&quot;http://marijnhaverbeke.nl/uglifyjs&quot;&gt;uglify-js&lt;/a&gt; . Tambi&amp;eacute;n est&amp;aacute;n en &lt;a href=&quot;http://www.2ality.com/2011/06/with-statement.html&quot;&gt;desuso&lt;/a&gt; y se eliminan de futuras versiones de JavaScript.</target>
        </trans-unit>
        <trans-unit id="0f478c9cf6e945f9f4d68899a9b247c36f3d43c0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;My two cents:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Mis dos centavos:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b6ab9835d91deb98705b1f3c514957269bbf6e08" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NovoGeek.com - Krishna's weblog&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;NovoGeek.com - el weblog de Krishna&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8816eb841c341fc968650270e2dd8daff581dcd3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Paving the way for future ECMAScript versions&lt;/em&gt;, using one of the newly reserved keywords (in prevision for &lt;em&gt;ECMAScript 6&lt;/em&gt;): &lt;code&gt;implements&lt;/code&gt;, &lt;code&gt;interface&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;package&lt;/code&gt;, &lt;code&gt;private&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt;, &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;static&lt;/code&gt;, and &lt;code&gt;yield&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;Allanando el camino para futuras versiones de ECMAScript&lt;/em&gt; , utilizando una de las palabras clave recientemente reservadas (en previsi&amp;oacute;n para &lt;em&gt;ECMAScript 6&lt;/em&gt; ): &lt;code&gt;implements&lt;/code&gt; , &lt;code&gt;interface&lt;/code&gt; , &lt;code&gt;let&lt;/code&gt; , &lt;code&gt;package&lt;/code&gt; , &lt;code&gt;private&lt;/code&gt; , &lt;code&gt;protected&lt;/code&gt; , &lt;code&gt;public&lt;/code&gt; , &lt;code&gt;static&lt;/code&gt; y &lt;code&gt;yield&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52f29c68d91653f44d8533c880c63c94e3e9dcf9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&quot;use strict&quot;; Defines that JavaScript code should be executed in
   &quot;strict mode&quot;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&quot;uso estricto&quot;;&lt;/strong&gt; &lt;strong&gt;Define que el c&amp;oacute;digo JavaScript debe ejecutarse en &quot;modo estricto&quot;.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="09cd3a0fa55f56bac5040bfc18287c80994ace0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1) strict mode in functions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;1) modo estricto en funciones&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e089472c5ade8f427379cbfba941de4da55d3013" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2) whole-script strict mode&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;2) modo estricto de script completo&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6b57044be78a581d58d23dca3de27afea5b94cd7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;3) Assignment to a non-writable global&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;3) Asignaci&amp;oacute;n a un global no grabable&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="52c10b26b568d358a2c9ff43b75af0bbd5a03c51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Eliminates &lt;code&gt;with&lt;/code&gt; statement :&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Elimina &lt;code&gt;with&lt;/code&gt; declaraci&amp;oacute;n:&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b530f16cb2cdcb16e6f7fae19819d91e97699f28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Prevents Duplicates :&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Previene duplicados:&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="006313eaf6ed1ef228bc9756401cadce71d77bf0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Prevents Global Variable Declaration:&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Impide la declaraci&amp;oacute;n de variable global:&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="44a2e98717969ad732e7c5e16b7d1aae416b7dda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Disadvantage&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Disadvantage&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ccc562ed44c4f818dcfeca5bfa62cf8a988e432f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Examples of using &quot;use strict&quot;:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplos de uso de &quot;uso estricto&quot;:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="32305f493625f6db39745d253e553217cacc1727" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For basic example and for reference go through :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Para obtener un ejemplo b&amp;aacute;sico y para referencia, consulte:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3d1cedec098132288882de2701536c454db45920" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Modern JavaScript practice should always evoke the &quot;Use Strict&quot;; pragma.&lt;/strong&gt; The only reason that the ECMA Group has made the &quot;Strict&quot; mode optional &lt;em&gt;is to permit less experienced coders access to JavaScript and give then time to adapt to the new and safer coding practices.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;La pr&amp;aacute;ctica moderna de JavaScript siempre debe evocar el &quot;Uso estricto&quot;;&lt;/strong&gt; &lt;strong&gt;pragma&lt;/strong&gt; La &amp;uacute;nica raz&amp;oacute;n por la que el Grupo ECMA ha hecho que el modo &quot;Estricto&quot; sea opcional &lt;em&gt;es permitir que los codificadores con menos experiencia tengan acceso a JavaScript y darles tiempo para adaptarse a las nuevas y m&amp;aacute;s seguras pr&amp;aacute;cticas de codificaci&amp;oacute;n.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6733430d33b7d3b1398536a80cb90975b34194ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Strict mode can prevent memory leaks.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;El modo estricto puede evitar p&amp;eacute;rdidas de memoria.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f944ee70b14fb3dd9fca1ed2e2bdaf3550fc90e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The &quot;use strict&quot; Directive&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;La directiva de &quot;uso estricto&quot;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="606ab5905d1c2d5a8327c6d7ed46db7c3e80503c" translate="yes" xml:space="preserve">
          <source>A word of caution, all you hard-charging programmers:  applying &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; to existing code can be hazardous!  This thing is not some feel-good, happy-face sticker that you can slap on the code to make it 'better'.  With the &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; pragma, the browser will suddenly THROW exceptions in random places that it never threw before just because at that spot you are doing something that default/loose JavaScript happily allows but strict JavaScript abhors!  You may have strictness violations hiding in seldom used calls in your code that will only throw an exception when they do eventually get run - say, in the production environment that your paying customers use!</source>
          <target state="translated">Una advertencia, todos ustedes, programadores de carga dura: &amp;iexcl;aplicar &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; al c&amp;oacute;digo existente puede ser peligroso! Esta cosa no es una calcoman&amp;iacute;a para sentirse feliz y feliz que puede colocar en el c&amp;oacute;digo para que sea 'mejor'. Con el pragma de &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; , el navegador de repente LANZAR&amp;Aacute; excepciones en lugares aleatorios que nunca arroj&amp;oacute; antes solo porque en ese punto est&amp;aacute;s haciendo algo que el JavaScript predeterminado / suelto permite felizmente, &amp;iexcl;pero el JavaScript estricto aborrece! Es posible que tenga infracciones de rigurosidad ocultas en llamadas poco utilizadas en su c&amp;oacute;digo que solo arrojar&amp;aacute;n una excepci&amp;oacute;n cuando finalmente se ejecuten, por ejemplo, en el entorno de producci&amp;oacute;n que usan sus clientes de pago.</target>
        </trans-unit>
        <trans-unit id="93bdd3af6ffad7ab4f106dd14cd1a4e23ee208e6" translate="yes" xml:space="preserve">
          <source>All modern browsers support &quot;use strict&quot; except &lt;em&gt;Internet Explorer 9 and lower&lt;/em&gt;.</source>
          <target state="translated">Todos los navegadores modernos admiten &quot;uso estricto&quot;, excepto &lt;em&gt;Internet Explorer 9 y versiones inferiores&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="2343885cdd0e3c22f513cc0ca57ce37cc20a84a5" translate="yes" xml:space="preserve">
          <source>All parts of a &lt;em&gt;ClassDeclaration&lt;/em&gt; or a &lt;em&gt;ClassExpression&lt;/em&gt; are strict mode    code.</source>
          <target state="translated">Todas las partes de una &lt;em&gt;declaraci&amp;oacute;n&lt;/em&gt; de &lt;em&gt;clase&lt;/em&gt; o una &lt;em&gt;expresi&amp;oacute;n de clase&lt;/em&gt; son c&amp;oacute;digos de modo estrictos.</target>
        </trans-unit>
        <trans-unit id="289ffdbd1f800570bced2d458ea2e61545122c4a" translate="yes" xml:space="preserve">
          <source>Also in strict mode, things run faster, some warnings or silent warnings throw fatal errors, it's better to always use it to make a neater code.</source>
          <target state="translated">También en el modo estricto,las cosas funcionan más rápido,algunas advertencias o avisos silenciosos arrojan errores fatales,es mejor siempre usarlo para hacer un código más ordenado.</target>
        </trans-unit>
        <trans-unit id="da06e553d0eb67ac4244ee6f5298f173e41be07e" translate="yes" xml:space="preserve">
          <source>Also note you can apply &quot;strict mode&quot; to the whole file... Or you can use it only for a specific function &lt;em&gt;(still quoting from John Resig's article)&lt;/em&gt;:</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que puede aplicar el &quot;modo estricto&quot; a todo el archivo ... O puede usarlo solo para una funci&amp;oacute;n espec&amp;iacute;fica &lt;em&gt;(todav&amp;iacute;a citando el art&amp;iacute;culo de John Resig)&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="d73300c7892262287c245360c5af86d15a6a13f4" translate="yes" xml:space="preserve">
          <source>Also when a function is invoked with &lt;code&gt;call()&lt;/code&gt; or &lt;code&gt;apply&lt;/code&gt; in strict mode, then &lt;code&gt;this&lt;/code&gt; is exactly the value of the first argument of the &lt;code&gt;call()&lt;/code&gt;or &lt;code&gt;apply()&lt;/code&gt; invocation. (In normal mode &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; are replaced by the global &lt;code&gt;Object&lt;/code&gt; and values, which are not objects, are cast into objects.)</source>
          <target state="translated">Adem&amp;aacute;s, cuando se invoca una funci&amp;oacute;n con &lt;code&gt;call()&lt;/code&gt; o se &lt;code&gt;apply&lt;/code&gt; en modo estricto, &lt;code&gt;this&lt;/code&gt; es exactamente el valor del primer argumento de la &lt;code&gt;call()&lt;/code&gt; o &lt;code&gt;apply()&lt;/code&gt; . (En modo normal, &lt;code&gt;null&lt;/code&gt; e &lt;code&gt;undefined&lt;/code&gt; se reemplazan por el &lt;code&gt;Object&lt;/code&gt; global y los valores, que no son objetos, se convierten en objetos).</target>
        </trans-unit>
        <trans-unit id="b93fcc8b812303345005a85b6a1b344c558d79a2" translate="yes" xml:space="preserve">
          <source>Also, as listed above, strict mode stops you from doing certain things.</source>
          <target state="translated">Además,como se mencionó anteriormente,el modo estricto le impide hacer ciertas cosas.</target>
        </trans-unit>
        <trans-unit id="f29a859de34d8206276e4fbe86c78577ef463680" translate="yes" xml:space="preserve">
          <source>And:</source>
          <target state="translated">And:</target>
        </trans-unit>
        <trans-unit id="e2abd0d44e964816aa501cf23404b343505b9d60" translate="yes" xml:space="preserve">
          <source>Another scenario is that, say, the variable is declared in a child function. In that case, the compiler checks the validity of that variable in the outer scope, i.e., the parent function. Only then it will check in the global space and create a variable for us there.
That means additional checks need to be done. This will affect the performance of the application.</source>
          <target state="translated">Otro escenario es que,digamos,la variable se declara en una función infantil.En ese caso,el compilador comprueba la validez de esa variable en el ámbito externo,es decir,en la función madre.Sólo entonces comprobará en el espacio global y creará una variable para nosotros allí.Eso significa que hay que hacer comprobaciones adicionales.Esto afectará al rendimiento de la aplicación.</target>
        </trans-unit>
        <trans-unit id="0ce5379811a96887a1d3f16ab89d89d7711a7375" translate="yes" xml:space="preserve">
          <source>Apparently, at the initial stage there will be errors we have never encountered before. To get the full benefit, we need to do proper testing after switching to strict mode to make sure we have caught everything. Definitely we don&amp;rsquo;t just throw &lt;code&gt;use strict&lt;/code&gt; in our code and assume there are no errors. So the churn is that it&amp;rsquo;s time to start using this incredibly useful language feature to write better code.</source>
          <target state="translated">Aparentemente, en la etapa inicial habr&amp;aacute; errores que nunca hemos encontrado antes. Para obtener el beneficio completo, debemos hacer las pruebas adecuadas despu&amp;eacute;s de cambiar al modo estricto para asegurarnos de que hemos captado todo. Definitivamente no solo &lt;code&gt;use strict&lt;/code&gt; nuestro c&amp;oacute;digo y asumimos que no hay errores. Entonces, el abandono es que es hora de comenzar a usar esta funci&amp;oacute;n de lenguaje incre&amp;iacute;blemente &amp;uacute;til para escribir un mejor c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="23c13738c7207b9f6d81bccd86fb3f5f24fbc321" translate="yes" xml:space="preserve">
          <source>As an example, in normal JavaScript, mistyping a variable name creates
  a new global variable. In strict mode, this will throw an error,
  making it impossible to accidentally create a global variable.</source>
          <target state="translated">Por ejemplo,en JavaScript normal,al escribir mal el nombre de una variable se crea una nueva variable global.En modo estricto,esto arrojará un error,haciendo imposible crear accidentalmente una variable global.</target>
        </trans-unit>
        <trans-unit id="2c40cd067423f60a47c31129f8f11cc9df0347a6" translate="yes" xml:space="preserve">
          <source>Attempts to delete undeletable properties will throw (&lt;code&gt;delete Object.prototype&lt;/code&gt;)</source>
          <target state="translated">Los intentos de eliminar propiedades no recuperables arrojar&amp;aacute;n ( &lt;code&gt;delete Object.prototype&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9b6df8c6d28fca843574fe8424266b77eefb28e0" translate="yes" xml:space="preserve">
          <source>Believe me. The overhead is negligible compared to poorly designed code. &lt;a href=&quot;http://www.yuiblog.com/blog/2010/12/14/strict-mode-is-coming-to-town/&quot;&gt;Doug Crockford, who has been a senior JavaScript developer for several years, has a very interesting post here&lt;/a&gt;. Personally, I like to return to his site all the time to make sure I don't forget my good practice.</source>
          <target state="translated">Cr&amp;eacute;ame. La sobrecarga es insignificante en comparaci&amp;oacute;n con el c&amp;oacute;digo mal dise&amp;ntilde;ado. &lt;a href=&quot;http://www.yuiblog.com/blog/2010/12/14/strict-mode-is-coming-to-town/&quot;&gt;Doug Crockford, quien ha sido desarrollador senior de JavaScript durante varios a&amp;ntilde;os, tiene una publicaci&amp;oacute;n muy interesante aqu&amp;iacute;&lt;/a&gt; . Personalmente, me gusta volver a su sitio todo el tiempo para asegurarme de no olvidar mi buena pr&amp;aacute;ctica.</target>
        </trans-unit>
        <trans-unit id="a1ddd7f39e440d9be6e057065c68fec0776269ba" translate="yes" xml:space="preserve">
          <source>Below are the conditions to trigger strict mode in &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-strict-mode-code&quot;&gt;ES6&lt;/a&gt; and &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-strict-mode-code&quot;&gt;ES7&lt;/a&gt;:</source>
          <target state="translated">A continuaci&amp;oacute;n se detallan las condiciones para activar el modo estricto en &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-strict-mode-code&quot;&gt;ES6&lt;/a&gt; y &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-strict-mode-code&quot;&gt;ES7&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="1928a98ad81a0a2fb8810d43513549e8510e1221" translate="yes" xml:space="preserve">
          <source>Browser compatibility issue: 
The &quot;use&quot; directives are meant to be backwards-compatible. Browsers that do not support them will just see a string literal that isn't referenced further. So, they will pass over it and move on.</source>
          <target state="translated">Problema de compatibilidad del navegador:Las directivas de &quot;uso&quot; están pensadas para ser compatibles hacia atrás.Los navegadores que no las soporten sólo verán una cadena literal que no es referenciada más allá.Así que la pasarán por alto y seguirán adelante.</target>
        </trans-unit>
        <trans-unit id="0a7fb1b9a52cbb2e017378cb1f11854e33a814a7" translate="yes" xml:space="preserve">
          <source>Browser support for strict mode</source>
          <target state="translated">Soporte del navegador para el modo estricto</target>
        </trans-unit>
        <trans-unit id="565e25b1be863570aa48357d4e37a3cb9b1014a4" translate="yes" xml:space="preserve">
          <source>Consider this example:</source>
          <target state="translated">Considere este ejemplo:</target>
        </trans-unit>
        <trans-unit id="baa2c64bbbada534ed6075e89a55128be8090417" translate="yes" xml:space="preserve">
          <source>Declaring function in blocks</source>
          <target state="translated">Declarando la función en bloques</target>
        </trans-unit>
        <trans-unit id="38996e986e93e308076d27bc04e168330b4535b3" translate="yes" xml:space="preserve">
          <source>Declaring twice the same name for a property name in an object literal</source>
          <target state="translated">Declarar dos veces el mismo nombre para un nombre de propiedad en un objeto literal</target>
        </trans-unit>
        <trans-unit id="29ac6062865d40d043be78b3c36ccdeeec441106" translate="yes" xml:space="preserve">
          <source>Declaring two function arguments with the same name function</source>
          <target state="translated">Declarando dos argumentos de función con el mismo nombre de función</target>
        </trans-unit>
        <trans-unit id="5c4d6e11f66aa0a3fdd7d4a8816581873a8955ae" translate="yes" xml:space="preserve">
          <source>Directives are similar to statements, yet different.</source>
          <target state="translated">Las directivas son similares a las declaraciones,pero diferentes.</target>
        </trans-unit>
        <trans-unit id="b8f87df5829d8a168c7e799e5c216af27378f943" translate="yes" xml:space="preserve">
          <source>Disallows global variables. (Catches missing &lt;code&gt;var&lt;/code&gt; declarations and typos in variable names)</source>
          <target state="translated">No permite variables globales. (Captura declaraciones &lt;code&gt;var&lt;/code&gt; y errores tipogr&amp;aacute;ficos en nombres de variables)</target>
        </trans-unit>
        <trans-unit id="273671e9ae03a9235fcaa5ba2170f1974218b666" translate="yes" xml:space="preserve">
          <source>Do any of the current browsers respond to the &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; string or is it for future use?</source>
          <target state="translated">&amp;iquest;Alguno de los navegadores actuales responde al &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; cadena o es para uso futuro?</target>
        </trans-unit>
        <trans-unit id="e4d1d77242da906971270be245172a570ee8b0fb" translate="yes" xml:space="preserve">
          <source>Doing some searching, I realized that some people add &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; into their JavaScript code. Once I added the statement, the error stopped appearing. Unfortunately, Google did not reveal much of the history behind this string statement. Certainly it must have something to do with how the JavaScript is interpreted by the browser, but I have no idea what the effect would be.</source>
          <target state="translated">Al hacer algunas b&amp;uacute;squedas, me di cuenta de que algunas personas agregan &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; en su c&amp;oacute;digo JavaScript. Una vez que agregu&amp;eacute; la declaraci&amp;oacute;n, el error dej&amp;oacute; de aparecer. Desafortunadamente, Google no revel&amp;oacute; gran parte de la historia detr&amp;aacute;s de esta declaraci&amp;oacute;n de cadena. Ciertamente debe tener algo que ver con la forma en que el navegador interpreta el JavaScript, pero no tengo idea de cu&amp;aacute;l ser&amp;iacute;a el efecto.</target>
        </trans-unit>
        <trans-unit id="48af85fc915d01a4202f28354202609ebabc9352" translate="yes" xml:space="preserve">
          <source>ECMAScript 5 'Strict mode' support in browsers. What does this mean?</source>
          <target state="translated">Soporte de ECMAScript 5 'Modo estricto' en los navegadores.¿Qué significa esto?</target>
        </trans-unit>
        <trans-unit id="9fc854e7ec3ef2a462edaa98d116548946d2673f" translate="yes" xml:space="preserve">
          <source>ECMAScript 5 adds a list of reserved words. If you use them as variables or arguments, strict mode will throw an error. The reserved words are:</source>
          <target state="translated">ECMAScript 5 añade una lista de palabras reservadas.Si las usas como variables o argumentos,el modo estricto arrojará un error.Las palabras reservadas son:</target>
        </trans-unit>
        <trans-unit id="ebcaa1421d2e09e7ea9eec47fe05b48861d7705e" translate="yes" xml:space="preserve">
          <source>Eliminates this coercion</source>
          <target state="translated">Elimina esta coacción</target>
        </trans-unit>
        <trans-unit id="ed326f039ef104d9ba966135c56dac8bf600657a" translate="yes" xml:space="preserve">
          <source>Eliminates with</source>
          <target state="translated">Elimina con</target>
        </trans-unit>
        <trans-unit id="0c26b81d89bbb54118dbce8cd05504fa17f8b5c2" translate="yes" xml:space="preserve">
          <source>Errors for immutables</source>
          <target state="translated">Errores para inmutables</target>
        </trans-unit>
        <trans-unit id="efa60700d7b2ed517f9d3d0229490278c5d94c97" translate="yes" xml:space="preserve">
          <source>Et cetera</source>
          <target state="translated">Etcétera</target>
        </trans-unit>
        <trans-unit id="e5356a0a78fcc2f6a59293d5076e50a82279173b" translate="yes" xml:space="preserve">
          <source>Eval code is strict mode code if it begins with a Directive Prologue    that contains a Use Strict Directive or if the call to eval is a direct eval (see 12.3.4.1) that is contained in strict mode code.</source>
          <target state="translated">El código Eval es un código de modo estricto si comienza con un prólogo de la directiva que contiene una directiva de uso estricto o si la llamada a evaluar es una evaluación directa (véase 12.3.4.1)que está contenida en un código de modo estricto.</target>
        </trans-unit>
        <trans-unit id="89ce572ad2c6a69c00995dd23c773545b3d69731" translate="yes" xml:space="preserve">
          <source>Everything in the &lt;em&gt;lexical scope&lt;/em&gt; of function &lt;code&gt;doSomething&lt;/code&gt; will be interpreted in strict mode. The word &lt;em&gt;lexical scope&lt;/em&gt; is important here. For example, if your &lt;em&gt;strict&lt;/em&gt; code calls a function of a library that is &lt;em&gt;not strict&lt;/em&gt;, only your code is executed in strict mode, and not the called function. See &lt;a href=&quot;https://stackoverflow.com/a/6039163/1461424&quot;&gt;this answer&lt;/a&gt; for a better explanation.</source>
          <target state="translated">Todo en el &lt;em&gt;&amp;aacute;mbito l&amp;eacute;xico&lt;/em&gt; de la funci&amp;oacute;n &lt;code&gt;doSomething&lt;/code&gt; se interpretar&amp;aacute; en modo estricto. La palabra &lt;em&gt;alcance l&amp;eacute;xico&lt;/em&gt; es importante aqu&amp;iacute;. Por ejemplo, si su c&amp;oacute;digo &lt;em&gt;estricto&lt;/em&gt; llama a una funci&amp;oacute;n de una biblioteca que &lt;em&gt;no&lt;/em&gt; es &lt;em&gt;estricta&lt;/em&gt; , solo su c&amp;oacute;digo se ejecuta en modo estricto, y no la funci&amp;oacute;n llamada. Vea &lt;a href=&quot;https://stackoverflow.com/a/6039163/1461424&quot;&gt;esta respuesta&lt;/a&gt; para una mejor explicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Ampliar fragmento</target>
        </trans-unit>
        <trans-unit id="4daa46b47ce88ea7b35fb3d45a4029cb54de2f47" translate="yes" xml:space="preserve">
          <source>Few important things which I have learned after using &lt;code&gt;use strict&lt;/code&gt; :</source>
          <target state="translated">Pocas cosas importantes que he aprendido despu&amp;eacute;s de &lt;code&gt;use strict&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b80e966415fec4b14584eef46091cc1f5fed8c7a" translate="yes" xml:space="preserve">
          <source>For a non-exhaustive list of specialties in strict mode, see &lt;a href=&quot;https://stackoverflow.com/a/27114400/1461424&quot;&gt;this answer&lt;/a&gt;.</source>
          <target state="translated">Para obtener una lista no exhaustiva de especialidades en modo estricto, consulte &lt;a href=&quot;https://stackoverflow.com/a/27114400/1461424&quot;&gt;esta respuesta&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="59a44288386a492ebd014862dd175b15ca71076a" translate="yes" xml:space="preserve">
          <source>Forbids binding or assignment of the names &lt;code&gt;eval&lt;/code&gt; and &lt;code&gt;arguments&lt;/code&gt; in any form</source>
          <target state="translated">Proh&amp;iacute;be la vinculaci&amp;oacute;n o asignaci&amp;oacute;n de los nombres &lt;code&gt;eval&lt;/code&gt; y &lt;code&gt;arguments&lt;/code&gt; en cualquier forma</target>
        </trans-unit>
        <trans-unit id="85882ed43f947d20ab023a241c16a0839507bff1" translate="yes" xml:space="preserve">
          <source>Forbids deleting plain names (&lt;code&gt;delete x;&lt;/code&gt;)</source>
          <target state="translated">Proh&amp;iacute;be eliminar nombres simples ( &lt;code&gt;delete x;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="932069b68ebf7d6e48537be78e32212e3699abcd" translate="yes" xml:space="preserve">
          <source>Forbids octal syntax (&lt;code&gt;var x = 023;&lt;/code&gt; some devs assume wrongly that a preceding zero does nothing to change the number.)</source>
          <target state="translated">Proh&amp;iacute;be la sintaxis octal ( &lt;code&gt;var x = 023;&lt;/code&gt; algunos desarrolladores suponen err&amp;oacute;neamente que un cero anterior no hace nada para cambiar el n&amp;uacute;mero).</target>
        </trans-unit>
        <trans-unit id="3799c98240f4cdb7b40c5e3fdcb7c5e4f2f10c8b" translate="yes" xml:space="preserve">
          <source>Forbids the &lt;code&gt;with&lt;/code&gt; keyword</source>
          <target state="translated">Proh&amp;iacute;be la palabra clave &lt;code&gt;with&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b458948cb359c5a3bdb7d06c0c0102f9e79964a1" translate="yes" xml:space="preserve">
          <source>Function code is strict mode code if the associated &lt;em&gt;FunctionDeclaration, FunctionExpression, GeneratorDeclaration, GeneratorExpression, MethodDefinition, or ArrowFunction&lt;/em&gt; is contained in strict mode code or if the code that produces the value of the function&amp;rsquo;s [[ECMAScriptCode]] internal slot begins with a Directive Prologue that contains a Use Strict Directive.</source>
          <target state="translated">El c&amp;oacute;digo de funci&amp;oacute;n es c&amp;oacute;digo de modo estricto si la &lt;em&gt;Declaraci&amp;oacute;n de funci&amp;oacute;n, Expresi&amp;oacute;n de funci&amp;oacute;n, Declaraci&amp;oacute;n de generador, Expresi&amp;oacute;n de generador, Definici&amp;oacute;n de m&amp;eacute;todo o Flechafunci&amp;oacute;n asociada&lt;/em&gt; est&amp;aacute; contenida en el c&amp;oacute;digo de modo estricto o si el c&amp;oacute;digo que produce el valor del intervalo interno [[ECMAScriptCode]] de la funci&amp;oacute;n comienza con un Pr&amp;oacute;logo directivo que contiene una Directiva de uso estricto.</target>
        </trans-unit>
        <trans-unit id="3c282a4f93e31f632be83929715796e01490e87f" translate="yes" xml:space="preserve">
          <source>Function code that is supplied as the arguments to the built-in    Function and Generator constructors is strict mode code if the last argument is a String that when processed is a &lt;em&gt;FunctionBody&lt;/em&gt; that begins with a Directive Prologue that contains a Use Strict Directive.</source>
          <target state="translated">El c&amp;oacute;digo de funci&amp;oacute;n que se proporciona como argumentos para los constructores integrados de funciones y generadores es un c&amp;oacute;digo de modo estricto si el &amp;uacute;ltimo argumento es una Cadena que, cuando se procesa, es un &lt;em&gt;FunctionBody&lt;/em&gt; que comienza con un Pr&amp;oacute;logo de directiva que contiene una Directiva de uso estricto.</target>
        </trans-unit>
        <trans-unit id="1847e9a8ccc9abd72f714eab1618108a4c8cbe08" translate="yes" xml:space="preserve">
          <source>Function parameter names must be unique (&lt;code&gt;function sum (x, x) {...}&lt;/code&gt;)</source>
          <target state="translated">Los nombres de los par&amp;aacute;metros de funciones deben ser &amp;uacute;nicos ( &lt;code&gt;function sum (x, x) {...}&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="bafd4b54282745a2bed1442852b73f4b3189a77a" translate="yes" xml:space="preserve">
          <source>Further Reading</source>
          <target state="translated">Más lecturas</target>
        </trans-unit>
        <trans-unit id="e311ed625506e39cf4918abdd75a8aaa56e4dfc8" translate="yes" xml:space="preserve">
          <source>Global Leakage</source>
          <target state="translated">Fuga global</target>
        </trans-unit>
        <trans-unit id="eead7b84869b7d6893ff5ea59fd12d29fc73671a" translate="yes" xml:space="preserve">
          <source>Global code is strict mode code if it begins with a Directive    Prologue that contains a Use Strict Directive (see 14.1.1).</source>
          <target state="translated">El código global es un código de modo estricto si comienza con un Prólogo de Directiva que contiene una Directiva de Uso Estricto (ver 14.1.1).</target>
        </trans-unit>
        <trans-unit id="6304fe8539e56d461068a240f624db35fe5dca0a" translate="yes" xml:space="preserve">
          <source>Here, the compiler throws the reference error. In strict mode, the compiler does not allow us to use the variable without declaring it. So memory leaks can be prevented. In addition, we can write more optimized code.</source>
          <target state="translated">Aquí,el compilador arroja el error de referencia.En modo estricto,el compilador no nos permite usar la variable sin declararla.Así que las fugas de memoria pueden ser prevenidas.Además,podemos escribir un código más optimizado.</target>
        </trans-unit>
        <trans-unit id="78d2172dcc5510adbb4b052a53b0f1eaf23d08d5" translate="yes" xml:space="preserve">
          <source>Historically, JavaScript has been confused about how functions
  are scoped. Sometimes they seem to be statically scoped, but some
  features make them behave like they are dynamically scoped. This is
  confusing, making programs difficult to read and understand.
  Misunderstanding causes bugs. It also is a problem for performance.
  Static scoping would permit variable binding to happen at compile
  time, but the requirement for dynamic scope means the binding must be
  deferred to runtime, which comes with a significant performance
  penalty.</source>
          <target state="translated">Históricamente,JavaScript se ha confundido acerca de cómo las funciones son de alcance.A veces parecen tener un alcance estático,pero algunas características hacen que se comporten como si tuvieran un alcance dinámico.Esto es confuso,haciendo que los programas sean difíciles de leer y entender.Los malentendidos provocan errores.También es un problema para el rendimiento.El alcance estático permitiría que se produjera un enlace variable en el momento de la compilación,pero el requisito de alcance dinámico significa que el enlace debe aplazarse hasta el tiempo de ejecución,lo que conlleva una importante penalización en el rendimiento.</target>
        </trans-unit>
        <trans-unit id="ff46ea9bef3c6d32c8a1ad7bb317595dd80cf361" translate="yes" xml:space="preserve">
          <source>How do I use strict mode?</source>
          <target state="translated">¿Cómo utilizo el modo estricto?</target>
        </trans-unit>
        <trans-unit id="cc9be850e0a7084a9595e60ae16f023125baaa52" translate="yes" xml:space="preserve">
          <source>I found a &lt;a href=&quot;http://yuiblog.com/blog/2010/12/14/strict-mode-is-coming-to-town/&quot;&gt;nice article&lt;/a&gt; describing several things that are prohibited in strict mode (note that this is not an exclusive list):</source>
          <target state="translated">Encontr&amp;eacute; un &lt;a href=&quot;http://yuiblog.com/blog/2010/12/14/strict-mode-is-coming-to-town/&quot;&gt;buen art&amp;iacute;culo que&lt;/a&gt; describe varias cosas que est&amp;aacute;n prohibidas en modo estricto (tenga en cuenta que esta no es una lista exclusiva):</target>
        </trans-unit>
        <trans-unit id="dc8952723c45fe0a5695d3b38a7da82ec0f08130" translate="yes" xml:space="preserve">
          <source>I strongly recommend every developer to start using strict mode now. There are enough browsers supporting it that strict mode will legitimately help save us from errors we didn&amp;rsquo;t even know were in your code.</source>
          <target state="translated">Recomiendo encarecidamente a cada desarrollador que comience a usar el modo estricto ahora. Hay suficientes navegadores que lo admiten que el modo estricto leg&amp;iacute;timamente nos ayudar&amp;aacute; a salvarnos de errores que ni siquiera sab&amp;iacute;amos que estaban en su c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="469b8c44f76024a66385d6b7d25b2e82c43551eb" translate="yes" xml:space="preserve">
          <source>I think even though it is a deadly caged animal, &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; can be good stuff, but you have to do it right.  The best time to go strict is when your project is greenfield and you are starting from scratch. Configure &lt;code&gt;JSHint/JSLint&lt;/code&gt; with all the warnings and options cranked up as tight as your team can stomach, get a good build/test/assert system du jour rigged like &lt;code&gt;Grunt+Karma+Chai&lt;/code&gt;, and only THEN start marking all your new modules as &lt;code&gt;&quot;use strict&quot;&lt;/code&gt;.  Be prepared to cure lots of niggly errors and warnings.  Make sure everyone understands the gravity by configuring the build to FAIL if &lt;code&gt;JSHint/JSLint&lt;/code&gt; produces any violations.</source>
          <target state="translated">Creo que aunque es un animal enjaulado mortal, &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; puede ser algo bueno, pero hay que hacerlo bien. El mejor momento para ser estricto es cuando su proyecto es totalmente nuevo y comienza desde cero. Configure &lt;code&gt;JSHint/JSLint&lt;/code&gt; con todas las advertencias y opciones tan ajustadas como su equipo pueda soportar, obtenga un buen sistema de construcci&amp;oacute;n / prueba / afirmaci&amp;oacute;n del d&amp;iacute;a como &lt;code&gt;Grunt+Karma+Chai&lt;/code&gt; , y solo ENTONCES comience a marcar todos sus m&amp;oacute;dulos nuevos como &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; . Est&amp;eacute; preparado para curar muchos errores y advertencias molestos. Aseg&amp;uacute;rese de que todos entiendan la gravedad configurando la compilaci&amp;oacute;n para FALLAR si &lt;code&gt;JSHint/JSLint&lt;/code&gt; produce alguna violaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="fe9be0949ff68bb7e46ceee0fc5d7b1234fe99fe" translate="yes" xml:space="preserve">
          <source>I would like to offer a somewhat more founded answer complementing the other answers. I was hoping to edit the most popular answer, but failed. I tried to make it as comprehensive and complete as I could.</source>
          <target state="translated">Me gustaría ofrecer una respuesta algo más fundada que complemente las otras respuestas.Esperaba editar la respuesta más popular,pero no lo logré.Intenté hacerla tan completa y exhaustiva como pude.</target>
        </trans-unit>
        <trans-unit id="412701d63b5068562cc4090f3741aedcbe4b4488" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; is used, the code should be written by following a strict set of rules, hence decreasing the chances of errors and ambiguities.</source>
          <target state="translated">Si se &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; , el c&amp;oacute;digo debe escribirse siguiendo un conjunto estricto de reglas, lo que disminuye las posibilidades de errores y ambig&amp;uuml;edades.</target>
        </trans-unit>
        <trans-unit id="becf61a07fb9b6bce75ee86403b6a44cc4230a2d" translate="yes" xml:space="preserve">
          <source>If a developer used a library that was in strict mode, but the developer was used to working in normal mode, they might call some actions on the library that wouldn&amp;rsquo;t work as expected.</source>
          <target state="translated">Si un desarrollador usa una biblioteca que estaba en modo estricto, pero el desarrollador estaba acostumbrado a trabajar en modo normal, podr&amp;iacute;a llamar a algunas acciones en la biblioteca que no funcionar&amp;iacute;an como se esperaba.</target>
        </trans-unit>
        <trans-unit id="73b348a017ce42f08ddfcc1a55aa16726529e7db" translate="yes" xml:space="preserve">
          <source>If people are worried about using &lt;code&gt;use strict&lt;/code&gt; it might be worth checking out this article:</source>
          <target state="translated">Si las personas est&amp;aacute;n preocupadas por el &lt;code&gt;use strict&lt;/code&gt; , puede valer la pena leer este art&amp;iacute;culo:</target>
        </trans-unit>
        <trans-unit id="fa6ab3ff8e0221431d8c26a934a3e66ae5341150" translate="yes" xml:space="preserve">
          <source>If you are going to take the plunge, it is a good idea to apply &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; alongside comprehensive unit tests and a strictly configured JSHint build task that will give you some confidence that there is no dark corner of your module that will blow up horribly just because you've turned on Strict Mode.  Or, hey, here's another option:  just don't add &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; to any of your legacy code, it's probably safer that way, honestly.  &lt;strong&gt;DEFINITELY DO NOT&lt;/strong&gt; add &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; to any modules you do not own or maintain, like third party modules.</source>
          <target state="translated">Si va a dar el paso, es una buena idea aplicar &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; junto con pruebas unitarias completas y una tarea de compilaci&amp;oacute;n JSHint estrictamente configurada que le dar&amp;aacute; cierta confianza de que no hay un rinc&amp;oacute;n oscuro de su m&amp;oacute;dulo que explotar&amp;aacute; horriblemente solo porque has activado el modo estricto. O, hey, aqu&amp;iacute; hay otra opci&amp;oacute;n: simplemente no agregue &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; a ninguno de sus c&amp;oacute;digos heredados, probablemente sea m&amp;aacute;s seguro de esa manera, honestamente. &lt;strong&gt;DEFINITIVAMENTE NO&lt;/strong&gt; agregue &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; a ning&amp;uacute;n m&amp;oacute;dulo que no posea o mantenga, como los m&amp;oacute;dulos de terceros.</target>
        </trans-unit>
        <trans-unit id="bf2b000cc3982bb988fd19b404d2df442c39ee61" translate="yes" xml:space="preserve">
          <source>If you use a browser released in the last year or so then it most likely supports JavaScript Strict mode. Only older browsers around before ECMAScript 5 became the current standard don't support it.</source>
          <target state="translated">Si usas un navegador lanzado en el último año más o menos,entonces lo más probable es que soporte el modo JavaScript Strict.Sólo los navegadores más antiguos que existían antes de que ECMAScript 5 se convirtiera en el estándar actual no lo soportan.</target>
        </trans-unit>
        <trans-unit id="a61d4fd4d403e4d13959975f3c5f54da73790ed8" translate="yes" xml:space="preserve">
          <source>Implied Global Variables</source>
          <target state="translated">Variables globales implícitas</target>
        </trans-unit>
        <trans-unit id="d3431d0f279fa8fa3e8a6d6d9667d24dcf95f4a3" translate="yes" xml:space="preserve">
          <source>In C, an extremely unfortunate representation of octalness was
  selected: Leading zero. So in C, &lt;code&gt;0100&lt;/code&gt; means 64, not 100, and &lt;code&gt;08&lt;/code&gt; is an
  error, not 8. Even more unfortunately, this anachronism has been
  copied into nearly all modern languages, including JavaScript, where
  it is only used to create errors. It has no other purpose. So in
  strict mode, octal forms are no longer allowed.</source>
          <target state="translated">En C, se seleccion&amp;oacute; una representaci&amp;oacute;n extremadamente desafortunada de octalidad: cero inicial. Entonces, en C, &lt;code&gt;0100&lt;/code&gt; significa 64, no 100, y &lt;code&gt;08&lt;/code&gt; es un error, no 8. A&amp;uacute;n m&amp;aacute;s desafortunadamente, este anacronismo se ha copiado en casi todos los lenguajes modernos, incluido JavaScript, donde solo se usa para crear errores. No tiene otro prop&amp;oacute;sito. Entonces, en modo estricto, las formas octales ya no est&amp;aacute;n permitidas.</target>
        </trans-unit>
        <trans-unit id="16b4064635890ddd67afa5ee74230310465108e6" translate="yes" xml:space="preserve">
          <source>In my &lt;em&gt;existing&lt;/em&gt; JavaScript code: &lt;strong&gt;Probably not!&lt;/strong&gt; If your existing JavaScript code has statements that are prohibited in strict-mode, the application will simply break. If you want strict mode, you should be prepared to debug and correct your existing code. This is why &lt;em&gt;using &lt;code&gt;'use strict';&lt;/code&gt; does not suddenly make your code better&lt;/em&gt;.</source>
          <target state="translated">En mi c&amp;oacute;digo JavaScript &lt;em&gt;existente&lt;/em&gt; : &amp;iexcl; &lt;strong&gt;Probablemente no!&lt;/strong&gt; Si su c&amp;oacute;digo JavaScript existente tiene declaraciones que est&amp;aacute;n prohibidas en modo estricto, la aplicaci&amp;oacute;n simplemente se interrumpir&amp;aacute;. Si desea un modo estricto, debe estar preparado para depurar y corregir su c&amp;oacute;digo existente. Es por eso que &lt;em&gt;usa &lt;code&gt;'use strict';&lt;/code&gt; &lt;/em&gt; &lt;em&gt;no mejora de repente tu c&amp;oacute;digo&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="0c29f3552537c30fb2098c4a96f0030e9e96ee78" translate="yes" xml:space="preserve">
          <source>In my &lt;em&gt;new&lt;/em&gt; JavaScript application: &lt;strong&gt;Absolutely!&lt;/strong&gt; Strict mode can be used as a whistleblower when you are doing something stupid with your code.</source>
          <target state="translated">En mi &lt;em&gt;nueva&lt;/em&gt; aplicaci&amp;oacute;n de JavaScript: &lt;strong&gt;&amp;iexcl;Absolutamente!&lt;/strong&gt; El modo estricto se puede utilizar como denunciante cuando est&amp;aacute;s haciendo algo est&amp;uacute;pido con tu c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="3634f14a41df1f551fd64c581da9a12e76201cd6" translate="yes" xml:space="preserve">
          <source>In normal JavaScript, a developer will not receive any error feedback
  assigning values to non-writable properties.</source>
          <target state="translated">En un JavaScript normal,un desarrollador no recibirá ningún error de retroalimentación asignando valores a propiedades no escritas.</target>
        </trans-unit>
        <trans-unit id="d1c4997af91ea1824f16708d431766bae6358c7a" translate="yes" xml:space="preserve">
          <source>In short will make your code less error prone and in turn will make you write good code.</source>
          <target state="translated">En resumen,hará que su código sea menos propenso a errores y a su vez le hará escribir un buen código.</target>
        </trans-unit>
        <trans-unit id="d1a158933baae4e76b4d77171e82fba2ab4d99d9" translate="yes" xml:space="preserve">
          <source>In strict mode all variables have to be declared: if you assign a value to an identifier that has not been declared as variable, function, function parameter, catch-clause parameter or property of the global &lt;code&gt;Object&lt;/code&gt;, then you will get a &lt;code&gt;ReferenceError&lt;/code&gt;. In normal mode the identifier is implicitly declared as a global variable (as a property of the global &lt;code&gt;Object&lt;/code&gt;)</source>
          <target state="translated">En modo estricto, todas las variables deben declararse: si asigna un valor a un identificador que no ha sido declarado como variable, funci&amp;oacute;n, par&amp;aacute;metro de funci&amp;oacute;n, par&amp;aacute;metro de cl&amp;aacute;usula catch o propiedad del &lt;code&gt;Object&lt;/code&gt; global, obtendr&amp;aacute; un &lt;code&gt;ReferenceError&lt;/code&gt; . En modo normal, el identificador se declara impl&amp;iacute;citamente como una variable global (como una propiedad del &lt;code&gt;Object&lt;/code&gt; global)</target>
        </trans-unit>
        <trans-unit id="f9069656fdcbb8041857c4d722a72e7658151a0c" translate="yes" xml:space="preserve">
          <source>In strict mode are more restrictions on the possibilities to examine the call stack. &lt;code&gt;arguments.caller&lt;/code&gt; and &lt;code&gt;arguments.callee&lt;/code&gt; cause a &lt;code&gt;TypeError&lt;/code&gt; in a function in strict mode. Furthermore, some caller- and arguments properties of functions in strict mode cause a &lt;code&gt;TypeError&lt;/code&gt; when you try to read them.</source>
          <target state="translated">En modo estricto hay m&amp;aacute;s restricciones sobre las posibilidades de examinar la pila de llamadas. &lt;code&gt;arguments.caller&lt;/code&gt; y &lt;code&gt;arguments.callee&lt;/code&gt; provocan un &lt;code&gt;TypeError&lt;/code&gt; en una funci&amp;oacute;n en modo estricto. Adem&amp;aacute;s, algunas propiedades de llamadas y argumentos de las funciones en modo estricto provocan un &lt;code&gt;TypeError&lt;/code&gt; cuando intenta leerlas.</target>
        </trans-unit>
        <trans-unit id="b5c0423fd33ef61899aaaab9c15cc303390184f6" translate="yes" xml:space="preserve">
          <source>In strict mode it is considered a syntactical error when a function declaration has multiple parameters with the same name. (In normal mode there is no error.)</source>
          <target state="translated">En modo estricto se considera un error sintáctico cuando una declaración de función tiene múltiples parámetros con el mismo nombre.(En el modo normal no hay ningún error).</target>
        </trans-unit>
        <trans-unit id="ad8a374a0ecffbb86ab61cd3fbd81734ca7e9123" translate="yes" xml:space="preserve">
          <source>In strict mode it is considered a syntactical error when you try to define several properties with the same name for an object literal. (In normal mode there is no error.)</source>
          <target state="translated">En modo estricto se considera un error sintáctico cuando se intenta definir varias propiedades con el mismo nombre para un objeto literal.(En el modo normal no hay ningún error).</target>
        </trans-unit>
        <trans-unit id="6e88e83d9825a17cda0546c6144bf263c3be4fd7" translate="yes" xml:space="preserve">
          <source>In strict mode octal literals are not allowed (these are literals that start with &lt;code&gt;0x&lt;/code&gt;. (In normal mode some implementations do allow octal literals.)</source>
          <target state="translated">En modo estricto, los literales octales no est&amp;aacute;n permitidos (estos son literales que comienzan con &lt;code&gt;0x&lt;/code&gt; . (En modo normal, algunas implementaciones permiten literales octales).</target>
        </trans-unit>
        <trans-unit id="ada7b6efb898cb90db8476a67881c7168d01d3c2" translate="yes" xml:space="preserve">
          <source>In strict mode the arguments-object of a function contains a static copy of the values, which are passed to that function. In normal mode the arguments-object has a somewhat &quot;magical&quot; behaviour: The elements of the array and the named function parameters reference both the same value.</source>
          <target state="translated">En modo estricto,el argumento-objeto de una función contiene una copia estática de los valores,que se pasan a esa función.En el modo normal el argumento-objeto tiene un comportamiento algo &quot;mágico&quot;:Los elementos de la matriz y los parámetros de la función nombrada hacen referencia al mismo valor.</target>
        </trans-unit>
        <trans-unit id="7045fbdd229530fd0f1b40aa6038b589b411e771" translate="yes" xml:space="preserve">
          <source>In strict mode the identifiers &lt;code&gt;eval&lt;/code&gt; and &lt;code&gt;arguments&lt;/code&gt; are treated like keywords. You cannot change their value, cannot assign a value to them, and you cannot use them as names for variables, functions, function parameters or identifiers of a catch block.</source>
          <target state="translated">En modo estricto, los identificadores &lt;code&gt;eval&lt;/code&gt; y los &lt;code&gt;arguments&lt;/code&gt; se tratan como palabras clave. No puede cambiar su valor, no puede asignarles un valor y no puede usarlos como nombres para variables, funciones, par&amp;aacute;metros de funci&amp;oacute;n o identificadores de un bloque catch.</target>
        </trans-unit>
        <trans-unit id="84f9e027f80dc82cfbcc02dc7ceec363aaaa0369" translate="yes" xml:space="preserve">
          <source>In strict mode the keyword &lt;code&gt;this&lt;/code&gt; has the value &lt;code&gt;undefined&lt;/code&gt; in functions that were invoked as functions (not as methods). (In normal mode &lt;code&gt;this&lt;/code&gt; always points to the global &lt;code&gt;Object&lt;/code&gt;). This difference can be used to test if an implementation supports the strict mode:</source>
          <target state="translated">En modo estricto, la palabra clave tiene el valor &lt;code&gt;undefined&lt;/code&gt; en funciones que se invocaron como funciones (no como m&amp;eacute;todos). (En modo normal, &lt;code&gt;this&lt;/code&gt; siempre apunta al &lt;code&gt;Object&lt;/code&gt; global). Esta diferencia se puede usar para probar si una implementaci&amp;oacute;n admite el modo estricto:</target>
        </trans-unit>
        <trans-unit id="590bf1e232e9ab23ec1128befcc7fba6b47df466" translate="yes" xml:space="preserve">
          <source>In strict mode you will get a &lt;code&gt;SyntaxError&lt;/code&gt; when the &lt;code&gt;delete&lt;/code&gt; operator is followed by a non qualified identifier (a variable, function or function parameter). In normal mode the &lt;code&gt;delete&lt;/code&gt; expression would do nothing and is evaluated to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">En modo estricto, obtendr&amp;aacute; un &lt;code&gt;SyntaxError&lt;/code&gt; cuando el operador de &lt;code&gt;delete&lt;/code&gt; sea ​​seguido por un identificador no calificado (una variable, funci&amp;oacute;n o par&amp;aacute;metro de funci&amp;oacute;n). En modo normal, la expresi&amp;oacute;n de &lt;code&gt;delete&lt;/code&gt; no har&amp;iacute;a nada y se eval&amp;uacute;a como &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85d415079a470edeb131eb3614bacfeeedb08d6e" translate="yes" xml:space="preserve">
          <source>In strict mode you will get a &lt;code&gt;TypeError&lt;/code&gt; when you try to delete a non configurable property. (In normal mode the attempt simply fails and the &lt;code&gt;delete&lt;/code&gt; expression is evaluated to &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">En modo estricto, obtendr&amp;aacute; un &lt;code&gt;TypeError&lt;/code&gt; cuando intente eliminar una propiedad no configurable. (En modo normal, el intento simplemente falla y la expresi&amp;oacute;n de &lt;code&gt;delete&lt;/code&gt; se eval&amp;uacute;a como &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b36659c0c4c3212e959b1c3409c8e84af48a58ca" translate="yes" xml:space="preserve">
          <source>In strict mode you will get a &lt;code&gt;TypeError&lt;/code&gt;, when you try to assign to readonly properties or to define new properties for a non extensible object. (In normal mode both simply fail without error message.)</source>
          <target state="translated">En modo estricto, obtendr&amp;aacute; un &lt;code&gt;TypeError&lt;/code&gt; cuando intente asignar propiedades de solo lectura o definir nuevas propiedades para un objeto no extensible. (En modo normal, ambos simplemente fallan sin mensaje de error).</target>
        </trans-unit>
        <trans-unit id="779a188a15eeeb75cd33dabaef5f5607b5e7df04" translate="yes" xml:space="preserve">
          <source>In strict mode, any assignment to a non-writable property, a
  getter-only property, a non-existing property, a non-existing
  variable, or a non-existing object, will throw an error.</source>
          <target state="translated">En modo estricto,cualquier asignación a una propiedad no escribible,una propiedad sólo para obtener,una propiedad no existente,una variable no existente o un objeto no existente,arrojará un error.</target>
        </trans-unit>
        <trans-unit id="34660b8b97e8c589b1780bcb0a3ad7df23ae6ebe" translate="yes" xml:space="preserve">
          <source>In strict mode, duplicate keys in a function literal will produce a
  syntax error. A function can&amp;rsquo;t have two parameters with the same name.
  A function can&amp;rsquo;t have a variable with the same name as one of its
  parameters. A function can&amp;rsquo;t &lt;code&gt;delete&lt;/code&gt; its own variables. An attempt to
  &lt;code&gt;delete&lt;/code&gt; a non-configurable property now throws an exception. Primitive
  values are not implicitly wrapped.</source>
          <target state="translated">En modo estricto, las claves duplicadas en un literal de funci&amp;oacute;n producir&amp;aacute;n un error de sintaxis. Una funci&amp;oacute;n no puede tener dos par&amp;aacute;metros con el mismo nombre. Una funci&amp;oacute;n no puede tener una variable con el mismo nombre que uno de sus par&amp;aacute;metros. Una funci&amp;oacute;n no puede &lt;code&gt;delete&lt;/code&gt; sus propias variables. Un intento de &lt;code&gt;delete&lt;/code&gt; una propiedad no configurable ahora arroja una excepci&amp;oacute;n. Los valores primitivos no est&amp;aacute;n impl&amp;iacute;citamente envueltos.</target>
        </trans-unit>
        <trans-unit id="1277d69296a283f503d1a6c94d74f75f1d3e36bd" translate="yes" xml:space="preserve">
          <source>In strict mode, when passing code to &lt;code&gt;eval()&lt;/code&gt;, you cannot declare or define variables or functions in the scope of the caller (as you can do it in normal mode). Instead, a new scope is created for &lt;code&gt;eval()&lt;/code&gt; and the variables and functions are within that scope. That scope is destroyed after &lt;code&gt;eval()&lt;/code&gt; finishes execution.</source>
          <target state="translated">En modo estricto, al pasar c&amp;oacute;digo a &lt;code&gt;eval()&lt;/code&gt; , no puede declarar o definir variables o funciones en el &amp;aacute;mbito del llamador (como puede hacerlo en modo normal). En cambio, se crea un nuevo alcance para &lt;code&gt;eval()&lt;/code&gt; y las variables y funciones est&amp;aacute;n dentro de ese alcance. Ese alcance se destruye despu&amp;eacute;s de que &lt;code&gt;eval()&lt;/code&gt; finalice la ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3b9445116c4c7387170dcadef8c31c50c662cba8" translate="yes" xml:space="preserve">
          <source>In their obsession to line up the numeric literals, the developer has inadvertently initialized variable &lt;code&gt;b&lt;/code&gt; with an octal literal. Non-strict mode will interpret this as a numeric literal with value &lt;code&gt;24&lt;/code&gt; (in base 10). However, strict mode will throw an error.</source>
          <target state="translated">En su obsesi&amp;oacute;n por alinear los literales num&amp;eacute;ricos, el desarrollador ha inicializado inadvertidamente la variable &lt;code&gt;b&lt;/code&gt; con un literal octal. El modo no estricto interpretar&amp;aacute; esto como un literal num&amp;eacute;rico con valor &lt;code&gt;24&lt;/code&gt; (en base 10). Sin embargo, el modo estricto arrojar&amp;aacute; un error.</target>
        </trans-unit>
        <trans-unit id="9831e3ee257b8570017d5e3cbd952bf7d9110f05" translate="yes" xml:space="preserve">
          <source>In this function, we are using a variable called &lt;code&gt;name&lt;/code&gt; inside the function. Internally, the compiler will first check if there is any variable declared with that particular name in that particular function scope. Since the compiler understood that there is no such variable, it will check in the outer scope. In our case, it is the global scope. Again, the compiler understood that there is also no variable declared in the global space with that name, so it creates such a variable for us in the global space. Conceptually, this variable will be created in the global scope and will be available in the entire application.</source>
          <target state="translated">En esta funci&amp;oacute;n, estamos usando una variable llamada &lt;code&gt;name&lt;/code&gt; dentro de la funci&amp;oacute;n. Internamente, el compilador primero verificar&amp;aacute; si hay alguna variable declarada con ese nombre en particular en ese &amp;aacute;mbito de funci&amp;oacute;n en particular. Como el compilador entendi&amp;oacute; que no existe tal variable, verificar&amp;aacute; en el &amp;aacute;mbito externo. En nuestro caso, es el alcance global. Nuevamente, el compilador entendi&amp;oacute; que tampoco hay una variable declarada en el espacio global con ese nombre, por lo que crea una variable para nosotros en el espacio global. Conceptualmente, esta variable se crear&amp;aacute; en el &amp;aacute;mbito global y estar&amp;aacute; disponible en toda la aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="29d176e51afc8cfe92995728f708273a3dba6e2b" translate="yes" xml:space="preserve">
          <source>Including &lt;code&gt;use strict&lt;/code&gt; in the beginning of your all sensitive JavaScript files from this point is a small way to be a better JavaScript programmer and avoid random variables becoming global and things change silently.</source>
          <target state="translated">Incluir un &lt;code&gt;use strict&lt;/code&gt; al comienzo de todos sus archivos JavaScript sensibles desde este punto es una peque&amp;ntilde;a forma de ser un mejor programador de JavaScript y evitar que las variables aleatorias se vuelvan globales y las cosas cambien en silencio.</target>
        </trans-unit>
        <trans-unit id="025fb56c42e573032fb397fd3868bcc2c6bb5ce7" translate="yes" xml:space="preserve">
          <source>Insert a &lt;code&gt;'use strict';&lt;/code&gt; statement on top of your script:</source>
          <target state="translated">Inserte un &lt;code&gt;'use strict';&lt;/code&gt; declaraci&amp;oacute;n en la parte superior de su script:</target>
        </trans-unit>
        <trans-unit id="9c8d780490a36100dba6e751d2b2cef05a32cfe4" translate="yes" xml:space="preserve">
          <source>Inside &lt;a href=&quot;https://caniuse.com/#feat=es6-module&quot;&gt;native ECMAScript modules&lt;/a&gt; (with &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; statements) and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes&quot;&gt;ES6 classes&lt;/a&gt;, strict mode is always enabled and cannot be disabled.</source>
          <target state="translated">Dentro de &lt;a href=&quot;https://caniuse.com/#feat=es6-module&quot;&gt;los m&amp;oacute;dulos ECMAScript nativos&lt;/a&gt; (con declaraciones de &lt;code&gt;import&lt;/code&gt; aci&amp;oacute;n y &lt;code&gt;export&lt;/code&gt; aci&amp;oacute;n ) y &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes&quot;&gt;clases ES6&lt;/a&gt; , el modo estricto siempre est&amp;aacute; habilitado y no se puede deshabilitar.</target>
        </trans-unit>
        <trans-unit id="7e171a04a4eeaf5a9849e77b87c64e070643b7ba" translate="yes" xml:space="preserve">
          <source>It catches some common coding bloopers, throwing exceptions.</source>
          <target state="translated">Atrapa algunos errores comunes de codificación,lanzando excepciones.</target>
        </trans-unit>
        <trans-unit id="9dcb0c3ef0d34afe87dadacc330eb172ee25f066" translate="yes" xml:space="preserve">
          <source>It disables features that are confusing or poorly thought out.</source>
          <target state="translated">Desactiva las características que son confusas o mal pensadas.</target>
        </trans-unit>
        <trans-unit id="49b8baaa6a095c3eb48ab5966d9e83454f6ec304" translate="yes" xml:space="preserve">
          <source>It is not a statement, but a literal expression, ignored by earlier
versions of JavaScript.</source>
          <target state="translated">No es una declaración,sino una expresión literal,ignorada por las versiones anteriores de JavaScript.</target>
        </trans-unit>
        <trans-unit id="f332558e8f07c24532551cb466729913fd5cd0e9" translate="yes" xml:space="preserve">
          <source>It prevents, or throws errors, when relatively &quot;unsafe&quot; actions are taken (such as gaining access to the global object).</source>
          <target state="translated">Previene,o arroja errores,cuando se toman medidas relativamente &quot;inseguras&quot; (como el acceso al objeto global).</target>
        </trans-unit>
        <trans-unit id="8cba967f49d817c496f0e2267da26d8c35639e1d" translate="yes" xml:space="preserve">
          <source>It talks about browser support, but more importantly how to deal with it safely:</source>
          <target state="translated">Habla del soporte de los navegadores,pero sobre todo de cómo manejarlo con seguridad:</target>
        </trans-unit>
        <trans-unit id="a7db968114d988709a73f4b2145447f7be94164f" translate="yes" xml:space="preserve">
          <source>It's a new feature of ECMAScript 5. John Resig wrote up &lt;a href=&quot;http://ejohn.org/blog/ecmascript-5-strict-mode-json-and-more/&quot;&gt;a nice summary&lt;/a&gt; of it.</source>
          <target state="translated">Es una nueva caracter&amp;iacute;stica de ECMAScript 5. John Resig escribi&amp;oacute; &lt;a href=&quot;http://ejohn.org/blog/ecmascript-5-strict-mode-json-and-more/&quot;&gt;un buen resumen&lt;/a&gt; del mismo.</target>
        </trans-unit>
        <trans-unit id="e32f416964e370d5e5ee36f3cd35416da4dbe41b" translate="yes" xml:space="preserve">
          <source>It's just a string you put in your JavaScript files (either at the top of your file or inside of a function) that looks like this:</source>
          <target state="translated">Es sólo una cadena que pones en tus archivos JavaScript (ya sea en la parte superior de tu archivo o dentro de una función)que se ve así:</target>
        </trans-unit>
        <trans-unit id="817c8652ad34e116e5811fa2935033d7b0db3d3f" translate="yes" xml:space="preserve">
          <source>JavaScript &amp;ldquo;strict&amp;rdquo; mode was introduced in ECMAScript 5.</source>
          <target state="translated">El modo &quot;estricto&quot; de JavaScript se introdujo en ECMAScript 5.</target>
        </trans-unit>
        <trans-unit id="2b940df5bba00944ecb478eabe69d76ab720b74a" translate="yes" xml:space="preserve">
          <source>JavaScript has always had read-only properties, but you
  could not create them yourself until ES5&amp;rsquo;s &lt;code&gt;Object.createProperty&lt;/code&gt;
  function exposed that capability. If you attempted to assign a value
  to a read-only property, it would fail silently. The assignment would
  not change the property&amp;rsquo;s value, but your program would proceed as
  though it had. This is an integrity hazard that can cause programs to
  go into an inconsistent state. In strict mode, attempting to change a
  read-only property will throw an exception.</source>
          <target state="translated">JavaScript siempre ha tenido propiedades de solo lectura, pero no puede crearlas usted mismo hasta que la funci&amp;oacute;n &lt;code&gt;Object.createProperty&lt;/code&gt; de ES5 exponga esa capacidad. Si intent&amp;oacute; asignar un valor a una propiedad de solo lectura, fallar&amp;iacute;a en silencio. La asignaci&amp;oacute;n no cambiar&amp;iacute;a el valor de la propiedad, pero su programa proceder&amp;iacute;a como si lo hubiera hecho. Este es un peligro de integridad que puede hacer que los programas entren en un estado inconsistente. En modo estricto, intentar cambiar una propiedad de solo lectura generar&amp;aacute; una excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ddb6e2a5aa8c17476d0875f1a887b8d5ae8365ff" translate="yes" xml:space="preserve">
          <source>JavaScript has implied global variables. If
  you do not explicitly declare a variable, a global variable is
  implicitly declared for you. This makes programming easier for
  beginners because they can neglect some of their basic housekeeping
  chores. But it makes the management of larger programs much more
  difficult and it significantly degrades reliability. So in strict
  mode, implied global variables are no longer created. You should
  explicitly declare all of your variables.</source>
          <target state="translated">JavaScript ha implicado variables globales.Si no declaras explícitamente una variable,una variable global es declarada implícitamente para ti.Esto facilita la programación a los principiantes porque pueden descuidar algunas de sus tareas domésticas básicas.Pero hace que la gestión de programas más grandes sea mucho más difícil y degrada significativamente la fiabilidad.Así que en el modo estricto,las variables globales implícitas ya no se crean.Debes declarar explícitamente todas tus variables.</target>
        </trans-unit>
        <trans-unit id="e2d7eb3c95183e015ef939a2a91a64f282eb81f9" translate="yes" xml:space="preserve">
          <source>List of features (non-exhaustive)</source>
          <target state="translated">Lista de características (no exhaustiva)</target>
        </trans-unit>
        <trans-unit id="9c7b40e6928a432a1ec3f4bfbac791071ab83c89" translate="yes" xml:space="preserve">
          <source>Look at these statements and examples from MDN:</source>
          <target state="translated">Mira estas declaraciones y ejemplos de MDN:</target>
        </trans-unit>
        <trans-unit id="5469b8b61ffe448f41a3cf81a23966ddb0f980b6" translate="yes" xml:space="preserve">
          <source>Module code is always strict mode code.</source>
          <target state="translated">El código del módulo es siempre un código de modo estricto.</target>
        </trans-unit>
        <trans-unit id="c5e07b85564bd88aae754a962908532c8c0e4b6d" translate="yes" xml:space="preserve">
          <source>My project was not a greenfield project when I adopted &lt;code&gt;&quot;use strict&quot;&lt;/code&gt;.  As a result, my IDE is full of red marks because I don't have &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; on half my modules, and JSHint complains about that.  It's a reminder to me about what refactoring I should do in the future.  My goal is to be red mark free due to all of my missing &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; statements, but that is years away now.</source>
          <target state="translated">Mi proyecto no era un proyecto nuevo cuando adopt&amp;eacute; &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; . Como resultado, mi IDE est&amp;aacute; lleno de marcas rojas porque no tengo &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; en la mitad de mis m&amp;oacute;dulos, y JSHint se queja de eso. Es un recordatorio para m&amp;iacute; sobre la refactorizaci&amp;oacute;n que debo hacer en el futuro. Mi objetivo es estar libre de marcas rojas debido a todas mis declaraciones de &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; faltan, pero eso est&amp;aacute; a a&amp;ntilde;os de distancia.</target>
        </trans-unit>
        <trans-unit id="44085a42d6cb5c69ac3619d4793a1d1371ccfcfa" translate="yes" xml:space="preserve">
          <source>N.B: The &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; directive is only recognized at the beginning of a script or a function.</source>
          <target state="translated">NB: La directiva &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; solo se reconoce al comienzo de un script o una funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ae74c50e67b3cccd367e03333a64b86a6bddcf67" translate="yes" xml:space="preserve">
          <source>No duplicates</source>
          <target state="translated">No hay duplicados</target>
        </trans-unit>
        <trans-unit id="10b58a0a8940ea2e58dbffa20044c150b681b579" translate="yes" xml:space="preserve">
          <source>Noisy Failure</source>
          <target state="translated">Fallo ruidoso</target>
        </trans-unit>
        <trans-unit id="5de14d9134cba90071dacb30ddfcb3e147447382" translate="yes" xml:space="preserve">
          <source>Non-strict mode:</source>
          <target state="translated">Modo no estricto:</target>
        </trans-unit>
        <trans-unit id="8d36800f9bf0d59a3c2d2c533771cdf6c89406de" translate="yes" xml:space="preserve">
          <source>Normally, JavaScript does not follow strict rules, hence increasing chances of errors. After using &lt;code&gt;&quot;use strict&quot;&lt;/code&gt;, the JavaScript code should follow strict set of rules as in other programming languages such as use of terminators, declaration before initialization, etc.</source>
          <target state="translated">Normalmente, JavaScript no sigue reglas estrictas, por lo tanto, aumenta las posibilidades de errores. Despu&amp;eacute;s de usar &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; , el c&amp;oacute;digo JavaScript debe seguir un conjunto estricto de reglas como en otros lenguajes de programaci&amp;oacute;n como el uso de terminadores, declaraci&amp;oacute;n antes de la inicializaci&amp;oacute;n, etc.</target>
        </trans-unit>
        <trans-unit id="19034d503e754b80c9af82f89e91b77bf8089b78" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;use strict&lt;/code&gt; was introduced in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;EcmaScript 5&lt;/a&gt; and was kept since then.</source>
          <target state="translated">Tenga en cuenta que el &lt;code&gt;use strict&lt;/code&gt; se introdujo en &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;EcmaScript 5&lt;/a&gt; y se mantuvo desde entonces.</target>
        </trans-unit>
        <trans-unit id="f92b62c5cd55600499e3b2fcbabc790595cffe51" translate="yes" xml:space="preserve">
          <source>Note that everything in the file &lt;code&gt;myscript.js&lt;/code&gt; will be interpreted in strict mode.</source>
          <target state="translated">Tenga en cuenta que todo en el archivo &lt;code&gt;myscript.js&lt;/code&gt; se interpretar&amp;aacute; en modo estricto.</target>
        </trans-unit>
        <trans-unit id="0498bcc5326f24110adbf8018626105327647e5c" translate="yes" xml:space="preserve">
          <source>Now let's write the same function in strict mode.</source>
          <target state="translated">Ahora escribamos la misma función en modo estricto.</target>
        </trans-unit>
        <trans-unit id="7ca0bcad832ba95a89c297b2ceac7cc9fc126660" translate="yes" xml:space="preserve">
          <source>Now,this code creates &lt;code&gt;nameoftree&lt;/code&gt; in global scope which could be accessed using &lt;code&gt;window.nameoftree&lt;/code&gt;. When we implement &lt;code&gt;use strict&lt;/code&gt; the code would throw error.</source>
          <target state="translated">Ahora, este c&amp;oacute;digo crea &lt;code&gt;nameoftree&lt;/code&gt; en alcance global al que se puede acceder usando &lt;code&gt;window.nameoftree&lt;/code&gt; . Cuando implementamos el &lt;code&gt;use strict&lt;/code&gt; el c&amp;oacute;digo arrojar&amp;iacute;a un error.</target>
        </trans-unit>
        <trans-unit id="10500e54805775e3d661be35724e87f0b1dbc4c9" translate="yes" xml:space="preserve">
          <source>Octal</source>
          <target state="translated">Octal</target>
        </trans-unit>
        <trans-unit id="fc48827db54649898f715056ea3b1540dc1d9231" translate="yes" xml:space="preserve">
          <source>Octal syntax</source>
          <target state="translated">Sintaxis octal</target>
        </trans-unit>
        <trans-unit id="dc4532f060ff3aae00b84dcf89567e87053d969d" translate="yes" xml:space="preserve">
          <source>Of course it also talks about just what a lot of those misfeatures are (were) and how ECMAScript 5 fixes them.</source>
          <target state="translated">Por supuesto,también habla de lo que muchos de esos errores son (eran)y cómo ECMAScript 5 los corrige.</target>
        </trans-unit>
        <trans-unit id="a9c8e2b60591d63bee27d639f4a20c27d766869f" translate="yes" xml:space="preserve">
          <source>One of the benefits of strict code is that tools like &lt;a href=&quot;http://developer.yahoo.com/yui/compressor/&quot;&gt;YUI Compressor&lt;/a&gt;
  can do a better job when processing it.</source>
          <target state="translated">Uno de los beneficios del c&amp;oacute;digo estricto es que herramientas como &lt;a href=&quot;http://developer.yahoo.com/yui/compressor/&quot;&gt;YUI Compressor&lt;/a&gt; pueden hacer un mejor trabajo al procesarlo.</target>
        </trans-unit>
        <trans-unit id="6441d22a368af55c21ee62c9b9e951bc296104eb" translate="yes" xml:space="preserve">
          <source>One of the goals of strict mode is to allow for faster debugging of issues. It helps the developers by throwing exception when certain wrong things occur that can cause silent &amp;amp; strange behaviour of your webpage. The moment we use &lt;code&gt;use strict&lt;/code&gt;, the code will throw out errors which helps developer to fix it in advance.</source>
          <target state="translated">Uno de los objetivos del modo estricto es permitir una depuraci&amp;oacute;n m&amp;aacute;s r&amp;aacute;pida de los problemas. Ayuda a los desarrolladores lanzando excepciones cuando ocurren ciertas cosas incorrectas que pueden causar un comportamiento silencioso y extra&amp;ntilde;o de su p&amp;aacute;gina web. En el momento en que usemos el &lt;code&gt;use strict&lt;/code&gt; , el c&amp;oacute;digo arrojar&amp;aacute; errores que ayudar&amp;aacute;n al desarrollador a solucionarlo por adelantado.</target>
        </trans-unit>
        <trans-unit id="a0456e473032cec369aace45ac22933c75e5b022" translate="yes" xml:space="preserve">
          <source>Or, insert a &lt;code&gt;'use strict';&lt;/code&gt; statement on top of your function body:</source>
          <target state="translated">O inserte un &lt;code&gt;'use strict';&lt;/code&gt; declaraci&amp;oacute;n en la parte superior de su cuerpo de funci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="5bfc0f97dcb02767913e44123d36722a2485178e" translate="yes" xml:space="preserve">
          <source>People generally think that you shouldn&amp;rsquo;t use those things in the first place, but some developers don&amp;rsquo;t like the constraint and want to use all the features of the language.</source>
          <target state="translated">La gente generalmente piensa que no deber&amp;iacute;as usar esas cosas en primer lugar, pero a algunos desarrolladores no les gusta la restricci&amp;oacute;n y quieren usar todas las caracter&amp;iacute;sticas del lenguaje.</target>
        </trans-unit>
        <trans-unit id="f73ad56101ddb20a046ef96d3b285d9ee896e394" translate="yes" xml:space="preserve">
          <source>Please check the function below written in non-strict mode:</source>
          <target state="translated">Por favor,compruebe la función de abajo escrita en modo no estricto:</target>
        </trans-unit>
        <trans-unit id="ea0e96af85e42105da55a87738dffc05d9c4b8aa" translate="yes" xml:space="preserve">
          <source>Please refer to &lt;a href=&quot;http://www.w3schools.com/js/js_strict.asp&quot;&gt;http://www.w3schools.com/js/js_strict.asp&lt;/a&gt; to know more</source>
          <target state="translated">Consulte &lt;a href=&quot;http://www.w3schools.com/js/js_strict.asp&quot;&gt;http://www.w3schools.com/js/js_strict.asp&lt;/a&gt; para saber m&amp;aacute;s</target>
        </trans-unit>
        <trans-unit id="73834459f6254152ddd4773c32f68818b0dbafff" translate="yes" xml:space="preserve">
          <source>Prevents accidental declaration of global variables.Using &lt;code&gt;&quot;use strict()&quot;&lt;/code&gt; will make sure that variables are declared with &lt;code&gt;var&lt;/code&gt; before use. 
Eg:</source>
          <target state="translated">Evita la declaraci&amp;oacute;n accidental de variables globales. El &lt;code&gt;&quot;use strict()&quot;&lt;/code&gt; asegurar&amp;aacute; que las variables se declaren con &lt;code&gt;var&lt;/code&gt; antes de su uso. P.ej:</target>
        </trans-unit>
        <trans-unit id="d19ef64a263f6819272bad8f55d25e26eaca089d" translate="yes" xml:space="preserve">
          <source>Prevents accidental globals</source>
          <target state="translated">Evita los globos accidentales</target>
        </trans-unit>
        <trans-unit id="74d06b24393fc0bc828f7990084cc04f0d92db56" translate="yes" xml:space="preserve">
          <source>Problem at line 1 character 1: Missing &quot;use strict&quot; statement.</source>
          <target state="translated">Problema en la línea 1 carácter 1:Falta la declaración de &quot;usar estrictamente&quot;.</target>
        </trans-unit>
        <trans-unit id="313048df06e5e26643dc1670c345e8164e9763eb" translate="yes" xml:space="preserve">
          <source>Putting it in your code now shouldn't cause any problems with current browsers as it's just a string. It may cause problems with your code in the future if your code violates the pragma.  For instance, if you currently have &lt;code&gt;foo = &quot;bar&quot;&lt;/code&gt; without defining &lt;code&gt;foo&lt;/code&gt; first, your code will start failing...which is a good thing in my opinion.</source>
          <target state="translated">Ponerlo en su c&amp;oacute;digo ahora no deber&amp;iacute;a causar ning&amp;uacute;n problema con los navegadores actuales, ya que es solo una cadena. Puede causar problemas con su c&amp;oacute;digo en el futuro si su c&amp;oacute;digo viola el pragma. Por ejemplo, si actualmente tiene &lt;code&gt;foo = &quot;bar&quot;&lt;/code&gt; sin definir primero &lt;code&gt;foo&lt;/code&gt; , su c&amp;oacute;digo comenzar&amp;aacute; a fallar ... lo cual es algo bueno en mi opini&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="136f357105c51a569118fd5e9a4b2d1dc183c426" translate="yes" xml:space="preserve">
          <source>Recently, I ran some of my JavaScript code through Crockford's &lt;a href=&quot;http://www.jslint.com/&quot;&gt;JSLint&lt;/a&gt;, and it gave the following error:</source>
          <target state="translated">Recientemente, ejecut&amp;eacute; parte de mi c&amp;oacute;digo JavaScript a trav&amp;eacute;s de &lt;a href=&quot;http://www.jslint.com/&quot;&gt;JSLint&lt;/a&gt; de Crockford, y me dio el siguiente error:</target>
        </trans-unit>
        <trans-unit id="86a7a25b3cd35a1d2197e94d964ad1f2752ed5ee" translate="yes" xml:space="preserve">
          <source>Requires all property names in an object literal to be unique (&lt;code&gt;var x = {x1: &quot;1&quot;, x1: &quot;2&quot;}&lt;/code&gt;)</source>
          <target state="translated">Requiere que todos los nombres de propiedad en un objeto literal sean &amp;uacute;nicos ( &lt;code&gt;var x = {x1: &quot;1&quot;, x1: &quot;2&quot;}&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b82277b8027feee64c843902b18fa2f0eaf9f6f9" translate="yes" xml:space="preserve">
          <source>Reserved words for future JavaScript versions</source>
          <target state="translated">Palabras reservadas para futuras versiones de JavaScript</target>
        </trans-unit>
        <trans-unit id="00fe32fa055c05b65cba3aa264fdbb5e9ec51640" translate="yes" xml:space="preserve">
          <source>Safer eval()</source>
          <target state="translated">Evaluación más segura</target>
        </trans-unit>
        <trans-unit id="4651a34e4df9619783ad372f905d6d3b84e9d76d" translate="yes" xml:space="preserve">
          <source>Scope</source>
          <target state="translated">Scope</target>
        </trans-unit>
        <trans-unit id="c5ed7ad12df1fb5c64372abffb2e9c638c2000fd" translate="yes" xml:space="preserve">
          <source>Setting a value to an undeclared variable</source>
          <target state="translated">Fijar un valor a una variable no declarada</target>
        </trans-unit>
        <trans-unit id="158a5623a22ae074fb939328027da4313300684f" translate="yes" xml:space="preserve">
          <source>Silent failing assignments will throw error in strict mode (assigning &lt;code&gt;NaN = 5;&lt;/code&gt;)</source>
          <target state="translated">Las tareas fallidas silenciosas arrojar&amp;aacute;n errores en modo estricto (asignando &lt;code&gt;NaN = 5;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a249bbd654c1ea670a1ce21638e02e4758f365f8" translate="yes" xml:space="preserve">
          <source>Small examples to compare:</source>
          <target state="translated">Pequeños ejemplos para comparar:</target>
        </trans-unit>
        <trans-unit id="4a4f135a79bb2ffe4e6528781a0caca54f5e9001" translate="yes" xml:space="preserve">
          <source>So what is &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; all about, what does it imply, and is it still relevant?</source>
          <target state="translated">Entonces, &amp;iquest;qu&amp;eacute; es &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; &amp;iquest;Qu&amp;eacute; implica y sigue siendo relevante?</target>
        </trans-unit>
        <trans-unit id="efdeaaeb5cef631181f2b0b6615ca443336cee21" translate="yes" xml:space="preserve">
          <source>So, I suppose it's a bit like the &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; you can use in Perl &lt;em&gt;(hence the name?)&lt;/em&gt;: it helps you make fewer errors, by detecting more things that could lead to breakages.</source>
          <target state="translated">Entonces, supongo que es un poco como el &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; que puedes usar en Perl &lt;em&gt;(&amp;iquest;de ah&amp;iacute; el nombre?)&lt;/em&gt; : Te ayuda a cometer menos errores al detectar m&amp;aacute;s cosas que podr&amp;iacute;an provocar roturas.</target>
        </trans-unit>
        <trans-unit id="ada52d888ccf16d2711b8a6377768a782af5c30e" translate="yes" xml:space="preserve">
          <source>Sources:</source>
          <target state="translated">Sources:</target>
        </trans-unit>
        <trans-unit id="56888f9c90a484f01fdab9bff41f2251fdd72944" translate="yes" xml:space="preserve">
          <source>Strict Mode - JavaScript | MDN</source>
          <target state="translated">Modo estricto-JavaScript</target>
        </trans-unit>
        <trans-unit id="4c97b7a3fcb78ad7a4d70823a936a41e3b32a18f" translate="yes" xml:space="preserve">
          <source>Strict Mode is a new feature in ECMAScript 5 that allows you to place a program, or a function, in a &quot;strict&quot; operating context. This strict context prevents certain actions from being taken and throws more exceptions.</source>
          <target state="translated">El Modo Estricto es una nueva característica en ECMAScript 5 que permite colocar un programa,o una función,en un contexto operativo &quot;estricto&quot;.Este contexto estricto evita que se realicen ciertas acciones y lanza más excepciones.</target>
        </trans-unit>
        <trans-unit id="0925c525a403588f0be5f281195e7ab1228e41ce" translate="yes" xml:space="preserve">
          <source>Strict mode changes previously accepted &quot;bad syntax&quot; into real errors.</source>
          <target state="translated">El modo estricto cambia la &quot;mala sintaxis&quot; previamente aceptada en errores reales.</target>
        </trans-unit>
        <trans-unit id="dfa23d0a0c1ade7fa039058260fbdf2a088763e0" translate="yes" xml:space="preserve">
          <source>Strict mode does not alias properties of the &lt;code&gt;arguments&lt;/code&gt; object with the formal parameters. (i.e. in &lt;code&gt;function sum (a,b) { return arguments[0] + b;}&lt;/code&gt; This works because &lt;code&gt;arguments[0]&lt;/code&gt; is bound to &lt;code&gt;a&lt;/code&gt; and so on. )</source>
          <target state="translated">El modo estricto no alias las propiedades de los &lt;code&gt;arguments&lt;/code&gt; objeto con los par&amp;aacute;metros formales. (es decir, en la &lt;code&gt;function sum (a,b) { return arguments[0] + b;}&lt;/code&gt; Esto funciona porque los &lt;code&gt;arguments[0]&lt;/code&gt; est&amp;aacute;n vinculados a ay as&amp;iacute; sucesivamente).</target>
        </trans-unit>
        <trans-unit id="1e7b5b22d16bdb8a5476e2e6c1fdc04bffef1ee0" translate="yes" xml:space="preserve">
          <source>Strict mode for functions: Likewise, to invoke strict mode for a
  function, put the exact statement &quot;use strict&quot;; (or 'use strict';) in
  the function's body before any other statements.</source>
          <target state="translated">Modo estricto para las funciones:De la misma manera,para invocar el modo estricto para una función,ponga la declaración exacta &quot;use strict&quot;;(o &quot;use strict&quot;;)en el cuerpo de la función antes de cualquier otra declaración.</target>
        </trans-unit>
        <trans-unit id="aba1aed4e7b22cf2830dc704dbcbc7728a024ed8" translate="yes" xml:space="preserve">
          <source>Strict mode helps out in a couple ways:</source>
          <target state="translated">El modo estricto ayuda de un par de maneras:</target>
        </trans-unit>
        <trans-unit id="a1071c6d144e305f80fc9cb060b9efe833597dc7" translate="yes" xml:space="preserve">
          <source>Strict mode is now &lt;a href=&quot;http://caniuse.com/#use-strict&quot;&gt;supported by all major browsers&lt;/a&gt;.</source>
          <target state="translated">El modo estricto ahora es &lt;a href=&quot;http://caniuse.com/#use-strict&quot;&gt;compatible con todos los principales navegadores&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fecd3bae551b0fe9196f1a9e57dd72fde9f330a3" translate="yes" xml:space="preserve">
          <source>Strict mode makes it easier to write &quot;secure&quot; JavaScript.</source>
          <target state="translated">El modo estricto facilita la escritura de JavaScript &quot;seguro&quot;.</target>
        </trans-unit>
        <trans-unit id="ffd44cb0172afba4c6ad8d00101e96f6c2f1ced4" translate="yes" xml:space="preserve">
          <source>Strict mode makes several changes to normal JavaScript semantics:</source>
          <target state="translated">El modo estricto hace varios cambios en la semántica normal de JavaScript:</target>
        </trans-unit>
        <trans-unit id="42aae285b68e8a7fe6a0256e8acb1b55fb12a44f" translate="yes" xml:space="preserve">
          <source>Strict mode requires that all variable binding be done statically.
  That means that the features that previously required dynamic binding
  must be eliminated or modified. Specifically, the with statement is
  eliminated, and the eval function&amp;rsquo;s ability to tamper with the
  environment of its caller is severely restricted.</source>
          <target state="translated">El modo estricto requiere que todo el enlace variable se realice de forma est&amp;aacute;tica. Eso significa que las caracter&amp;iacute;sticas que anteriormente requer&amp;iacute;an enlace din&amp;aacute;mico deben eliminarse o modificarse. Espec&amp;iacute;ficamente, se elimina la instrucci&amp;oacute;n with, y la capacidad de la funci&amp;oacute;n eval de alterar el entorno de su interlocutor est&amp;aacute; severamente restringida.</target>
        </trans-unit>
        <trans-unit id="981037f259f5ec994dd978355da84261730db94d" translate="yes" xml:space="preserve">
          <source>Strict mode:</source>
          <target state="translated">Modo estricto:</target>
        </trans-unit>
        <trans-unit id="73600aa2e4bc7bac1a44ca2049803b7ae131c09a" translate="yes" xml:space="preserve">
          <source>The &quot;use strict&quot; directive is new in
  JavaScript 1.8.5 (ECMAScript version 5). It is not a statement, but a
  literal expression, ignored by earlier versions of JavaScript. The
  purpose of &quot;use strict&quot; is to indicate that the code should be
  executed in &quot;strict mode&quot;. With strict mode, you can not, for example,
  use undeclared variables.</source>
          <target state="translated">La directiva &quot;use strict&quot; es nueva en JavaScript 1.8.5 (ECMAScript versión 5).No es una declaración,sino una expresión literal,ignorada por las versiones anteriores de JavaScript.El propósito de &quot;use strict&quot; es indicar que el código debe ser ejecutado en &quot;modo estricto&quot;.Con el modo estricto,no se pueden,por ejemplo,usar variables no declaradas.</target>
        </trans-unit>
        <trans-unit id="da414cbc8191e02ce23dc8839e8f655afd89e64c" translate="yes" xml:space="preserve">
          <source>The &quot;use strict&quot; directive is new in JavaScript 1.8.5 (ECMAScript
  version 5).</source>
          <target state="translated">La directiva &quot;use strict&quot; es nueva en JavaScript 1.8.5 (ECMAScript versión 5).</target>
        </trans-unit>
        <trans-unit id="871bf0916612bf268e233d62d36329c75cb6843d" translate="yes" xml:space="preserve">
          <source>The &quot;use strict&quot; directive was new in ECMAScript version 5.</source>
          <target state="translated">La directiva de &quot;uso estricto&quot; era nueva en la versión 5 de ECMAScript.</target>
        </trans-unit>
        <trans-unit id="bc3dd2b1ab543df882ca1a48ca20880937f9ee29" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;JavaScript strict mode&lt;/a&gt; is a feature in &lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-262.htm&quot;&gt;ECMAScript 5&lt;/a&gt;. You can enable the strict mode by declaring this in the top of your script/function.</source>
          <target state="translated">El &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;modo estricto de JavaScript&lt;/a&gt; es una caracter&amp;iacute;stica de &lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-262.htm&quot;&gt;ECMAScript 5&lt;/a&gt; . Puede habilitar el modo estricto declarando esto en la parte superior de su script / funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c3ab9d9f8d23f7bf773bc9224e29ab32c41301a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;use strict&lt;/code&gt; directive indicates that the following code (in a script or a function) is strict code.
The code in the highest level of a script (code that is not in a function) is considered strict code when the script contains a &lt;code&gt;use strict&lt;/code&gt; directive.
The content of a function is considered strict code when the function itself is defined in a strict code or when the function contains a &lt;code&gt;use strict&lt;/code&gt; directive.
Code that is passed to an &lt;code&gt;eval()&lt;/code&gt; method is considered strict code when &lt;code&gt;eval()&lt;/code&gt; was called from a strict code or contains the &lt;code&gt;use strict&lt;/code&gt; directive itself.</source>
          <target state="translated">La directiva &lt;code&gt;use strict&lt;/code&gt; indica que el siguiente c&amp;oacute;digo (en un script o una funci&amp;oacute;n) es un c&amp;oacute;digo estricto. El c&amp;oacute;digo en el nivel m&amp;aacute;s alto de un script (c&amp;oacute;digo que no est&amp;aacute; en una funci&amp;oacute;n) se considera c&amp;oacute;digo estricto cuando el script contiene una directiva de &lt;code&gt;use strict&lt;/code&gt; . El contenido de una funci&amp;oacute;n se considera c&amp;oacute;digo estricto cuando la funci&amp;oacute;n en s&amp;iacute; misma se define en un c&amp;oacute;digo estricto o cuando la funci&amp;oacute;n contiene una directiva &lt;code&gt;use strict&lt;/code&gt; . El c&amp;oacute;digo que se pasa a un m&amp;eacute;todo &lt;code&gt;eval()&lt;/code&gt; se considera un c&amp;oacute;digo estricto cuando se llam&amp;oacute; a &lt;code&gt;eval()&lt;/code&gt; desde un c&amp;oacute;digo estricto o contiene la propia directiva &lt;code&gt;use strict&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e02035bfd1451179fb6fa7438f433460a260f654" translate="yes" xml:space="preserve">
          <source>The arguments pseudo array becomes a little bit more
  array-like in ES5. In strict mode, it loses its &lt;code&gt;callee&lt;/code&gt; and &lt;code&gt;caller&lt;/code&gt;
  properties. This makes it possible to pass your &lt;code&gt;arguments&lt;/code&gt; to untrusted
  code without giving up a lot of confidential context. Also, the
  &lt;code&gt;arguments&lt;/code&gt; property of functions is eliminated.</source>
          <target state="translated">Los argumentos pseudo array se vuelven un poco m&amp;aacute;s parecidos a un array en ES5. En modo estricto, pierde sus propiedades de &lt;code&gt;caller&lt;/code&gt; y de llamada . Esto hace posible pasar sus &lt;code&gt;arguments&lt;/code&gt; a c&amp;oacute;digo no confiable sin renunciar a mucho contexto confidencial. Adem&amp;aacute;s, se elimina la propiedad de &lt;code&gt;arguments&lt;/code&gt; de las funciones.</target>
        </trans-unit>
        <trans-unit id="a01550b956584e50c573534903412b194d39ea38" translate="yes" xml:space="preserve">
          <source>The main reasons why developers should use &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; are:</source>
          <target state="translated">Las razones principales por las que los desarrolladores deber&amp;iacute;an usar &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; son:</target>
        </trans-unit>
        <trans-unit id="e11cb88feedf1f50b774d7918351ac724492485e" translate="yes" xml:space="preserve">
          <source>The octal (or base 8) representation of numbers was extremely
  useful when doing machine-level programming on machines whose word
  sizes were a multiple of 3. You needed octal when working with the CDC
  6600 mainframe, which had a word size of 60 bits. If you could read
  octal, you could look at a word as 20 digits. Two digits represented
  the op code, and one digit identified one of 8 registers. During the
  slow transition from machine codes to high level languages, it was
  thought to be useful to provide octal forms in programming languages.</source>
          <target state="translated">La representación octal (o base 8)de los números era extremadamente útil cuando se hacía programación a nivel de máquina en máquinas cuyo tamaño de palabra era un múltiplo de 3.Necesitabas el octal cuando trabajabas con el ordenador central CDC 6600,que tenía un tamaño de palabra de 60 bits.Si podías leer octal,podías mirar una palabra como 20 dígitos.Dos dígitos representaban el código de operación,y un dígito identificaba uno de los 8 registros.Durante la lenta transición de los códigos de máquina a los lenguajes de alto nivel,se pensó que era útil proporcionar formas octales en los lenguajes de programación.</target>
        </trans-unit>
        <trans-unit id="1b9d97e5a3c8f84f9eca85dd8d59d37bf769eaf4" translate="yes" xml:space="preserve">
          <source>The purpose of &quot;use strict&quot; is to indicate that the code should be
executed in &quot;strict mode&quot;.</source>
          <target state="translated">El propósito del &quot;uso estricto&quot; es indicar que el código debe ser ejecutado en &quot;modo estricto&quot;.</target>
        </trans-unit>
        <trans-unit id="50e416e7691b94ac73a19329e3d0d84aa7766f77" translate="yes" xml:space="preserve">
          <source>The quotes around the command make sure that the code will still work in older browsers as well (although the things that generate a syntax error in strict mode will generally just cause the script to malfunction in some hard to detect way in those older browsers).</source>
          <target state="translated">Las comillas alrededor del comando aseguran que el código seguirá funcionando también en los navegadores más antiguos (aunque las cosas que generan un error de sintaxis en modo estricto generalmente sólo causarán que el script funcione mal de alguna manera difícil de detectar en esos navegadores más antiguos).</target>
        </trans-unit>
        <trans-unit id="fef18bab467b7c8273c3132a626d92c3771e553a" translate="yes" xml:space="preserve">
          <source>The statement &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; instructs the browser to use the Strict mode, which is a reduced and safer feature set of JavaScript.</source>
          <target state="translated">La declaraci&amp;oacute;n &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; indica al navegador que use el modo Estricto, que es un conjunto de funciones reducido y m&amp;aacute;s seguro de JavaScript.</target>
        </trans-unit>
        <trans-unit id="092a4db52edff1b55719897e8c31aebfe3163802" translate="yes" xml:space="preserve">
          <source>The strict mode of ECMAScript 5 is a restricted subset of the JavaScript language, which eliminates relevant deficits of the language and features more stringent error checking and higher security. The following lists the differences between strict mode and normal mode (of which the first three are particularly important):</source>
          <target state="translated">El modo estricto de ECMAScript 5 es un subconjunto restringido del lenguaje JavaScript,que elimina los déficits relevantes del lenguaje y presenta un control de errores más riguroso y una mayor seguridad.A continuación se enumeran las diferencias entre el modo estricto y el modo normal (de las cuales las tres primeras son especialmente importantes):</target>
        </trans-unit>
        <trans-unit id="35a411c4b982908019ab5ca4beff69a7f8222678" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;&quot;arguments&quot;&lt;/code&gt; cannot be used as a variable:</source>
          <target state="translated">La cadena &lt;code&gt;&quot;arguments&quot;&lt;/code&gt; no se puede utilizar como una variable:</target>
        </trans-unit>
        <trans-unit id="ceeec8e70875ba0392801d9dae48808cf2b43044" translate="yes" xml:space="preserve">
          <source>There are a number of situations that could cause &lt;code&gt;this&lt;/code&gt;
  to be bound to the global object. For example, if you forget to
  provide the &lt;code&gt;new&lt;/code&gt; prefix when calling a constructor function, the
  constructor's &lt;code&gt;this&lt;/code&gt; will be bound unexpectedly to the global object, so
  instead of initializing a new object, it will instead be silently
  tampering with global variables. In these situations, strict mode will
  instead bind &lt;code&gt;this&lt;/code&gt; to &lt;code&gt;undefined&lt;/code&gt;, which will cause the constructor to
  throw an exception instead, allowing the error to be detected much
  sooner.</source>
          <target state="translated">Hay una serie de situaciones que podr&amp;iacute;an hacer que &lt;code&gt;this&lt;/code&gt; se vincule al objeto global. Por ejemplo, si olvida proporcionar el &lt;code&gt;new&lt;/code&gt; prefijo al llamar a una funci&amp;oacute;n de constructor, el constructor se vincular&amp;aacute; inesperadamente al objeto global, por lo que en lugar de inicializar un nuevo objeto, alterar&amp;aacute; en silencio las variables globales. En estas situaciones, el modo estricto lo asociar&amp;aacute; a &lt;code&gt;undefined&lt;/code&gt; , lo que har&amp;aacute; que el constructor arroje una excepci&amp;oacute;n, permitiendo que el error se detecte mucho antes.</target>
        </trans-unit>
        <trans-unit id="2b08b8743bda54c101d135ee7a32c07df9257bf6" translate="yes" xml:space="preserve">
          <source>There are few more but I need to gain more knowledge on that.</source>
          <target state="translated">Hay unos pocos más,pero necesito adquirir más conocimientos sobre eso.</target>
        </trans-unit>
        <trans-unit id="048399442f3a5673fb36ae4b92a85ca20458e560" translate="yes" xml:space="preserve">
          <source>There's a good talk by some people who were on the ECMAScript committee: &lt;a href=&quot;http://www.youtube.com/watch?v=Kq4FpMe6cRs&quot;&gt;Changes to JavaScript, Part 1: ECMAScript 5&quot;&lt;/a&gt; about how incremental use of the &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; switch allows JavaScript implementers to clean up a lot of the dangerous features of JavaScript without suddenly breaking every website in the world.</source>
          <target state="translated">Hay una buena charla de algunas personas que estaban en el comit&amp;eacute; ECMAScript: &lt;a href=&quot;http://www.youtube.com/watch?v=Kq4FpMe6cRs&quot;&gt;Cambios a JavaScript, Parte 1: ECMAScript 5 &quot;&lt;/a&gt; sobre c&amp;oacute;mo el uso incremental del interruptor &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; permite a los implementadores de JavaScript limpiar muchas de las caracter&amp;iacute;sticas peligrosas de JavaScript sin De repente rompiendo todos los sitios web del mundo.</target>
        </trans-unit>
        <trans-unit id="3e37513efc84c83ee98db8c100f7f728f1063cb3" translate="yes" xml:space="preserve">
          <source>This article about Javascript Strict Mode might interest you: &lt;a href=&quot;http://ejohn.org/blog/ecmascript-5-strict-mode-json-and-more/&quot;&gt;John Resig - ECMAScript 5 Strict Mode, JSON, and More&lt;/a&gt;</source>
          <target state="translated">Este art&amp;iacute;culo sobre Javascript Strict Mode puede interesarle: &lt;a href=&quot;http://ejohn.org/blog/ecmascript-5-strict-mode-json-and-more/&quot;&gt;John Resig - ECMAScript 5 Strict Mode, JSON y m&amp;aacute;s&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9da1eab3a2754c07bf853818048cf86ef9a8bc1" translate="yes" xml:space="preserve">
          <source>This is no longer the case in ECMAScript 6 (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1041128&quot;&gt;bug 1041128&lt;/a&gt;).</source>
          <target state="translated">Este ya no es el caso en ECMAScript 6 ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1041128&quot;&gt;error 1041128&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="dd413d88ab98b532770fd5f2fc9d3f7ef62c23ce" translate="yes" xml:space="preserve">
          <source>Those that prefer not to use rulers to do their lines straight usually end up in those pages asking for others to debug their code.</source>
          <target state="translated">Los que prefieren no usar reglas para hacer sus líneas rectas suelen terminar en esas páginas pidiendo a otros que depuren su código.</target>
        </trans-unit>
        <trans-unit id="a7fd2f79041e08e0c8925669b484de4ed27bacfa" translate="yes" xml:space="preserve">
          <source>To quote some interesting parts:</source>
          <target state="translated">Para citar algunas partes interesantes:</target>
        </trans-unit>
        <trans-unit id="18959bdb468277df6861dc45265096e4e03b934c" translate="yes" xml:space="preserve">
          <source>To read more about it you can refer &lt;a href=&quot;http://www.w3schools.com/js/js_strict.asp&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Para leer m&amp;aacute;s sobre esto, puede consultar &lt;a href=&quot;http://www.w3schools.com/js/js_strict.asp&quot;&gt;aqu&amp;iacute;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="42a3bb278c71efefd64c79603bbd7e4b085a3e13" translate="yes" xml:space="preserve">
          <source>Transitioning to strict mode</source>
          <target state="translated">La transición al modo estricto</target>
        </trans-unit>
        <trans-unit id="a036c9d3bcde8686731beb5eb26de106ef7784ed" translate="yes" xml:space="preserve">
          <source>Uncaught ReferenceError: nameoftree is not defined</source>
          <target state="translated">Referencia no capturadaError:el nombre del árbol no está definido</target>
        </trans-unit>
        <trans-unit id="4c156a916f8a6f9574955750b2a1451326982d3f" translate="yes" xml:space="preserve">
          <source>Uncaught SyntaxError: Duplicate data property in object literal not
  allowed in strict mode</source>
          <target state="translated">Sintaxis-Error no capturado:La propiedad de datos duplicados en el objeto literal no está permitida en modo estricto</target>
        </trans-unit>
        <trans-unit id="7aaa011136ee898447ada0c1377720eb7677dcbb" translate="yes" xml:space="preserve">
          <source>Use Strict is used to show common and repeated errors so that it is handled differently , and changes the way java script runs , such changes are :</source>
          <target state="translated">Use Strict se utiliza para mostrar los errores comunes y repetidos para que se maneje de manera diferente,y cambia la forma en que se ejecuta java script,tales cambios son :</target>
        </trans-unit>
        <trans-unit id="e6a2b8c9600130299cd64c46f5748d992d100d46" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;'use strict';&lt;/code&gt; does not suddenly make your code better.</source>
          <target state="translated">Usando &lt;code&gt;'use strict';&lt;/code&gt; no mejora de repente tu c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="d4d6e1571c87c5715f5b1379bfd5792f9c941414" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;delete&lt;/code&gt; on a variable name &lt;code&gt;delete myVariable;&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;delete&lt;/code&gt; en un nombre de variable &lt;code&gt;delete myVariable;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="21daefad12ef11f96031aa365048e01337e377ba" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;eval&lt;/code&gt; or &lt;code&gt;arguments&lt;/code&gt; as variable or function argument name</source>
          <target state="translated">Usando &lt;code&gt;eval&lt;/code&gt; o &lt;code&gt;arguments&lt;/code&gt; como variable o nombre de argumento de funci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="e4d9563de300edd23fd7c3850db04036a25d79ee" translate="yes" xml:space="preserve">
          <source>We will get the following error.</source>
          <target state="translated">Nos dará el siguiente error.</target>
        </trans-unit>
        <trans-unit id="4dbef12467da7f5817c1305f1e396998d11eafa3" translate="yes" xml:space="preserve">
          <source>What does “use strict” do in JavaScript, and what is the reasoning behind it</source>
          <target state="translated">¿Qué hace &quot;use strict&quot; en JavaScript,y cuál es el razonamiento detrás de ello</target>
        </trans-unit>
        <trans-unit id="4c18ac01741b6780a43048c77a24b5e2c0540bae" translate="yes" xml:space="preserve">
          <source>What things are prohibited in strict mode?</source>
          <target state="translated">¿Qué cosas están prohibidas en modo estricto?</target>
        </trans-unit>
        <trans-unit id="a48ab950c2dd3afad682dd72baa410b63bc6e0a1" translate="yes" xml:space="preserve">
          <source>When a JavaScript engine sees this &lt;em&gt;directive&lt;/em&gt;, it will start to interpret the code in a special mode. In this mode, errors are thrown up when certain coding practices that could end up being potential bugs are detected (which is the reasoning behind the strict mode).</source>
          <target state="translated">Cuando un motor de JavaScript ve esta &lt;em&gt;directiva&lt;/em&gt; , comenzar&amp;aacute; a interpretar el c&amp;oacute;digo en un modo especial. En este modo, se producen errores cuando se detectan ciertas pr&amp;aacute;cticas de codificaci&amp;oacute;n que podr&amp;iacute;an terminar siendo posibles errores (que es el razonamiento detr&amp;aacute;s del modo estricto).</target>
        </trans-unit>
        <trans-unit id="c300272a821d8e78995c84df72b42286f65185e1" translate="yes" xml:space="preserve">
          <source>When adding &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt;, the following cases will throw a &lt;strong&gt;SyntaxError&lt;/strong&gt; before the script is executing:</source>
          <target state="translated">Al agregar &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; , los siguientes casos arrojar&amp;aacute;n un &lt;strong&gt;SyntaxError&lt;/strong&gt; antes de que se ejecute el script:</target>
        </trans-unit>
        <trans-unit id="1027ddb2af687a000e1f43ee83be4b6c15b8e572" translate="yes" xml:space="preserve">
          <source>When we have duplicate property, it throws an exception</source>
          <target state="translated">Cuando tenemos una propiedad duplicada,lanza una excepción</target>
        </trans-unit>
        <trans-unit id="9786db102e0c8271479dae448d90367999358652" translate="yes" xml:space="preserve">
          <source>Where should I use &lt;code&gt;'use strict';&lt;/code&gt;?</source>
          <target state="translated">&amp;iquest;D&amp;oacute;nde debo usar &lt;code&gt;'use strict';&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="f5501718d21e44942c25ce38f65fbb4d2ea2d9e5" translate="yes" xml:space="preserve">
          <source>Which might be helpful if you have to mix old and new code ;-)</source>
          <target state="translated">Lo que podría ser útil si tienes que mezclar el código antiguo y el nuevo ;-)</target>
        </trans-unit>
        <trans-unit id="184e2f1b60c365bdbd0ab8e43df510d15bccc6c0" translate="yes" xml:space="preserve">
          <source>Why Strict Mode?</source>
          <target state="translated">¿Por qué el modo estricto?</target>
        </trans-unit>
        <trans-unit id="2e23b3df3a20138c20d2c8e491ee2570ddf50bfb" translate="yes" xml:space="preserve">
          <source>Will restrict uses of keywords as variables. Trying to use them will throw errors.</source>
          <target state="translated">Restringirá el uso de palabras clave como variables.Tratar de usarlas arrojará errores.</target>
        </trans-unit>
        <trans-unit id="a71ea5c1e3ada42c1b0d204b7398947c063f4a74" translate="yes" xml:space="preserve">
          <source>With strict mode, you can not, for example, use undeclared variables.</source>
          <target state="translated">Con el modo estricto,no se pueden,por ejemplo,utilizar variables no declaradas.</target>
        </trans-unit>
        <trans-unit id="161190f164917a24616c94f2e53483ba35c86211" translate="yes" xml:space="preserve">
          <source>Worse, since the developer is in normal mode, they don&amp;rsquo;t have the advantages of extra errors being thrown, so the error might fail silently.</source>
          <target state="translated">Peor a&amp;uacute;n, dado que el desarrollador est&amp;aacute; en modo normal, no tienen las ventajas de que se generen errores adicionales, por lo que el error puede fallar en silencio.</target>
        </trans-unit>
        <trans-unit id="20bd93de5e3a15e93016dccea88cc98f2d1f95ed" translate="yes" xml:space="preserve">
          <source>Writing &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; at the very top of your JS file turns on strict
syntax checking. It does the following tasks for us:</source>
          <target state="translated">Escribir &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; en la parte superior de su archivo JS activa la comprobaci&amp;oacute;n estricta de sintaxis. Realiza las siguientes tareas para nosotros:</target>
        </trans-unit>
        <trans-unit id="290c3178ac3f676c45b24cb8690955d39c8b4d14" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;read more on MDN&lt;/a&gt;.</source>
          <target state="translated">Puedes &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;leer m&amp;aacute;s sobre MDN&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f7487ef619ee058617d220fbdcb1ff71b70d7e8" translate="yes" xml:space="preserve">
          <source>You can refer to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;MDN documentation&lt;/a&gt; for more information.</source>
          <target state="translated">Puede consultar la &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;documentaci&amp;oacute;n de MDN&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5b84b03d930a95b32ff7fff301afe23652a22474" translate="yes" xml:space="preserve">
          <source>You cannot use the &lt;code&gt;with&lt;/code&gt;-statement in strict mode.</source>
          <target state="translated">No se puede usar la declaraci&amp;oacute;n &lt;code&gt;with&lt;/code&gt; en modo estricto.</target>
        </trans-unit>
        <trans-unit id="dd707966b9d71560d8d3c73a2fd4a8e76a284eb2" translate="yes" xml:space="preserve">
          <source>[Ref: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;Strict mode&lt;/a&gt;, &lt;em&gt;Mozilla Developer Network&lt;/em&gt;]</source>
          <target state="translated">[Ref: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;Modo estricto&lt;/a&gt; , &lt;em&gt;Red de desarrolladores de Mozilla&lt;/em&gt; ]</target>
        </trans-unit>
        <trans-unit id="5640892492b3a140a15198eb7f173e54896999fc" translate="yes" xml:space="preserve">
          <source>eliminates some JavaScript silent errors by changing them
to throw errors.</source>
          <target state="translated">elimina algunos errores silenciosos de JavaScript cambiándolos para lanzar errores.</target>
        </trans-unit>
        <trans-unit id="16de3f2d338913f29c8f9f128d32ba48cbb95641" translate="yes" xml:space="preserve">
          <source>fixes mistakes that make it difficult for JavaScript
engines to perform optimizations.</source>
          <target state="translated">corrige los errores que dificultan que los motores de JavaScript realicen optimizaciones.</target>
        </trans-unit>
        <trans-unit id="0364811af40b95fa72a60403bfe331e1a6c30201" translate="yes" xml:space="preserve">
          <source>for more information vistit &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions_and_function_scope/Strict_mode&quot;&gt;Strict Mode- Javascript&lt;/a&gt;</source>
          <target state="translated">para m&amp;aacute;s informaci&amp;oacute;n vistit &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions_and_function_scope/Strict_mode&quot;&gt;Strict&lt;/a&gt; Mode- Javascript</target>
        </trans-unit>
        <trans-unit id="db0b8b9b231300c663125ba290de7d8ad030cebe" translate="yes" xml:space="preserve">
          <source>forbids some unsafe or error-prone language features</source>
          <target state="translated">prohíbe algunas características de lenguaje inseguras o propensas a errores</target>
        </trans-unit>
        <trans-unit id="01f927911ed04f070c42384b5acdb1eaa080798c" translate="yes" xml:space="preserve">
          <source>prohibits some syntax likely to be defined in future
versions of ECMAScript.</source>
          <target state="translated">prohíbe alguna sintaxis que pueda ser definida en futuras versiones de ECMAScript.</target>
        </trans-unit>
        <trans-unit id="fee36c7820652167ca4505a5dcd195808ce9cfe0" translate="yes" xml:space="preserve">
          <source>shows an error if you try to assign to an undeclared variable</source>
          <target state="translated">muestra un error si se intenta asignar a una variable no declarada</target>
        </trans-unit>
        <trans-unit id="65b524cf6d7ace1ef4955efb2c2c0f3cea4f4878" translate="yes" xml:space="preserve">
          <source>stops you from overwriting key JS system libraries</source>
          <target state="translated">le impide sobrescribir las bibliotecas clave del sistema JS</target>
        </trans-unit>
        <trans-unit id="118ad7cd18fd1f4ce16961837b121bd93511a087" translate="yes" xml:space="preserve">
          <source>you can also read this &lt;a href=&quot;https://www.nczonline.net/blog/2012/03/13/its-time-to-start-using-javascript-strict-mode/&quot;&gt;article&lt;/a&gt; for the details</source>
          <target state="translated">tambi&amp;eacute;n puedes leer este &lt;a href=&quot;https://www.nczonline.net/blog/2012/03/13/its-time-to-start-using-javascript-strict-mode/&quot;&gt;art&amp;iacute;culo&lt;/a&gt; para m&amp;aacute;s detalles</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
