<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/13840429">
    <body>
      <group id="13840429">
        <trans-unit id="35fc179c620909e3dff6f0c8506afa41277a1af1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Server-side languages (PHP etc.)&lt;/em&gt;:  They retrieve records from databases, maintain state over the &lt;a href=&quot;https://stackoverflow.com/questions/4913763/what-does-it-mean-when-they-say-http-is-stateless&quot;&gt;stateless &lt;em&gt;HTTP&lt;/em&gt; connection&lt;/a&gt;, and do a lot of things that require  security. They reside on the server, these programs never have their source code exposed to the user.</source>
          <target state="translated">&lt;em&gt;サーバーサイド言語（PHPなど）&lt;/em&gt; ：データベースからレコードを取得し、 &lt;a href=&quot;https://stackoverflow.com/questions/4913763/what-does-it-mean-when-they-say-http-is-stateless&quot;&gt;ステートレス&lt;em&gt;HTTP&lt;/em&gt;接続を&lt;/a&gt;介して状態を維持し、セキュリティを必要とする多くのことを行います。 これらはサーバーに常駐し、これらのプログラムはソースコードをユーザーに公開しません。</target>
        </trans-unit>
        <trans-unit id="e1de13368a38299d9e645467441fa0ee1d9bfc2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;All PHP code is executed on the server before the client even starts executing any of the JavaScript. There's no PHP code left in the response that JavaScript could interact with.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;すべてのPHPコードは、クライアントがJavaScriptの実行を開始する前にサーバーで実行されます。&lt;/strong&gt; &lt;strong&gt;JavaScriptがやり取りできる応答にPHPコードが残っていません。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a6da202b5650d0e7e90648a5068869792f6704c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Good Read:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;良い読み：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bb244851e06b58086743ab92674a8868a9e6b936" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/File:Scheme_dynamic_page_en.svg&quot;&gt;image attr&lt;/a&gt;&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/File:Scheme_dynamic_page_en.svg&quot;&gt;画像属性&lt;/a&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="3945294794e5e84674525044f79c7e0cd936926a" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;&lt;a href=&quot;http://www.html.net/tutorials/php/lesson1.php&quot;&gt;Image source &lt;/a&gt;&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;a href=&quot;http://www.html.net/tutorials/php/lesson1.php&quot;&gt;画像ソース&lt;/a&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="01839c02220ca3e601e10608b959cd541fea14fe" translate="yes" xml:space="preserve">
          <source>A form submission, which submits data to the server and loads a new page.</source>
          <target state="translated">サーバーにデータを送信し、新しいページを読み込むフォーム送信。</target>
        </trans-unit>
        <trans-unit id="5a88dd5bb49b317874e99fe19d245f6f6f89188a" translate="yes" xml:space="preserve">
          <source>A link, which causes the browser to load a new page.</source>
          <target state="translated">ブラウザに新しいページを読み込ませるリンクです。</target>
        </trans-unit>
        <trans-unit id="39c17177b0651d5cd2b29d3f2631906d35b58c6c" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;http://en.wikipedia.org/wiki/Ajax_%28programming%29&quot;&gt;AJAX&lt;/a&gt; request, which is a Javascript technique to make a regular HTTP request to the server (like 1. and 2. will), but without leaving the current page.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Ajax_%28programming%29&quot;&gt;AJAX&lt;/a&gt;要求。これは、現在のページを離れることなく、サーバーに通常のHTTP要求（1や2.のように）を行うJavascript手法です。</target>
        </trans-unit>
        <trans-unit id="3ed82b87ce819031ab8b3a1fbe51781db2e51f98" translate="yes" xml:space="preserve">
          <source>By the way, making a habit of embedding random pieces of PHP logic in HTML or Javascript can lead to seriously convoluted code. I speak from painful experience.</source>
          <target state="translated">ところで、HTMLやJavascriptにPHPのロジックのランダムな部分を埋め込むことを習慣にすると、非常に複雑なコードになってしまうことがあります。私は苦しい経験から話しています。</target>
        </trans-unit>
        <trans-unit id="1e74bac1c0ce10521914ea4ab6e0183fee6126bd" translate="yes" xml:space="preserve">
          <source>Client side programming is with html code  with Java script and its frameworks, libraries executes in the internet explorer, Mozilla, chrome browsers.
In the java scenario
server side programming servlets executes in the Tomcat, web-logic , j boss, WebSphere severs</source>
          <target state="translated">クライアント側のプログラミングは、JavaスクリプトとそのフレームワークとHTMLコードであり、ライブラリは、インターネットエクスプローラ、Mozilla、クロームブラウザで実行されます。Javaのシナリオではサーバー側のプログラミングサーブレットは、Tomcat、web-logic、jボス、WebSphereのセバースで実行されます。</target>
        </trans-unit>
        <trans-unit id="c5efec7dab4343a37f586b84f537de23e2a3347e" translate="yes" xml:space="preserve">
          <source>Here's a question outlining these method in greater detail</source>
          <target state="translated">これらの方法をより詳しく説明するための質問です。</target>
        </trans-unit>
        <trans-unit id="30816d164754f70ea949dd5f3aca5ba28e455b3b" translate="yes" xml:space="preserve">
          <source>I have this code:</source>
          <target state="translated">私はこのコードを持っています。</target>
        </trans-unit>
        <trans-unit id="5e4cdfc595e894946d2c86c14e3f40d764322c53" translate="yes" xml:space="preserve">
          <source>In web application every task execute in a manner of request and response.</source>
          <target state="translated">Webアプリケーションでは、すべてのタスクがリクエストとレスポンスの形で実行されます。</target>
        </trans-unit>
        <trans-unit id="f4551b611f73cfed80baa87c32294e6e091dd174" translate="yes" xml:space="preserve">
          <source>JavaScript is visible to the user and can be easily modified, so for security stuff we must not rely on JavaScript.</source>
          <target state="translated">JavaScriptはユーザーから見えていて、簡単に変更できるので、セキュリティのためにはJavaScriptに頼ってはいけません。</target>
        </trans-unit>
        <trans-unit id="a1a6e5f240ddc8a8cd9c64e95dd60e94282dc0d1" translate="yes" xml:space="preserve">
          <source>Madara Uchiha : Difference between client side and server side programming</source>
          <target state="translated">内葉まだら:クライアントサイドとサーバーサイドのプログラミングの違い</target>
        </trans-unit>
        <trans-unit id="12b3071e9c70c33c91d4afebb4ccf4277f8f2e34" translate="yes" xml:space="preserve">
          <source>NB: Earlier revisions of this question were explicitly about PHP on the server and JavaScript on the client. The essential nature of the problem and solutions is the same for &lt;em&gt;any&lt;/em&gt; pair of languages when one is running on the client and the other on the server (even if they are the same language). Please take this in to account when you see answers talking about specific languages.</source>
          <target state="translated">注意：この質問の以前の改訂は、サーバー上のPHPとクライアント上のJavaScriptについて明示的に行われていました。 問題と解決策の本質的な性質は、一方がクライアントで実行され、もう一方がサーバーで実行されている場合、同じ言語であっても、 &lt;em&gt;どの&lt;/em&gt;言語ペアでも同じです。 特定の言語について話している回答が表示された場合は、このことを考慮に入れてください。</target>
        </trans-unit>
        <trans-unit id="8f5e5f786f8578dcdb312ec67a7e87f75ec79c7b" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;em&gt;Client Side Languages (like JavaScript)&lt;/em&gt; reside in browser and run in the browser. &lt;em&gt;Client-side scripting&lt;/em&gt; generally refers to the class of computer programs on the web that are executed client-side, by the user's web browser, instead of &lt;em&gt;server-side&lt;/em&gt;.</source>
          <target state="translated">一方、 &lt;em&gt;クライアント側言語（JavaScriptなど）&lt;/em&gt;はブラウザーに常駐し、ブラウザーで実行されます。 &lt;em&gt;クライアントサイドスクリプティング&lt;/em&gt;とは、通常、 &lt;em&gt;サーバーサイド&lt;/em&gt;ではなく、ユーザーのウェブブラウザによってクライアントサイドで実行されるウェブ上のコンピュータープログラムのクラスを指し&lt;em&gt;ます&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="4891613fad6f56f2f9ab60dc6febe3b894c92d9b" translate="yes" xml:space="preserve">
          <source>So now what can I do if I need to call PHP? It depends how you need to do it: either by reloading the page or by using an AJAX call.</source>
          <target state="translated">では、PHPを呼び出す必要がある場合はどうすればいいのでしょうか?ページをリロードするかAJAXコールを使用するかのどちらかです。</target>
        </trans-unit>
        <trans-unit id="fe6b2db06c0843cdcda3103d865e06bde30e329c" translate="yes" xml:space="preserve">
          <source>So when you make a &lt;em&gt;HTTP&lt;/em&gt; request on server, the server first reads the PHP file carefully to see if there are any tasks that need to be executed, and sends a response to the client side. Again, as @deceze said, *Once PHP has finished outputting the response, the script ends and nothing will happen on the server until a new &lt;em&gt;HTTP&lt;/em&gt; request comes in.*</source>
          <target state="translated">したがって、サーバーで&lt;em&gt;HTTP&lt;/em&gt;要求を行うと、サーバーはまずPHPファイルを注意深く読み取り、実行する必要のあるタスクがあるかどうかを確認し、クライアント側に応答を送信します。 繰り返しますが、@ decezeが言ったように、* PHPが応答の出力を完了すると、スクリプトは終了し、新しい&lt;em&gt;HTTP&lt;/em&gt;リクエストが着信するまでサーバー上で何も起こりません。*</target>
        </trans-unit>
        <trans-unit id="ebd1b121c1665984c2f627601f32619b8a802be5" translate="yes" xml:space="preserve">
          <source>So you can easily see that server side languages handle HTTP requests and process them, and, as @deceze said, &lt;em&gt;PHP is executed on the server and outputs some HTML, and maybe JavaScript code, which is sent as a response to the client, where the HTML is interpreted and JavaScript is executed.&lt;/em&gt;</source>
          <target state="translated">したがって、サーバー側の言語がHTTPリクエストを処理して処理することを簡単に確認できます。@ decezeが言ったように、 &lt;em&gt;PHPはサーバー上で実行され、クライアントに応答として送信されるHTMLとJavaScriptコードを出力します。 HTMLが解釈され、JavaScriptが実行されます。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="671fac470b66029fb2d067c3e5f762d9d9b7734b" translate="yes" xml:space="preserve">
          <source>Step 1, PHP executes all code between &lt;code&gt;&amp;lt;?php ?&amp;gt;&lt;/code&gt; tags. The result is this:</source>
          <target state="translated">ステップ1、PHPは &lt;code&gt;&amp;lt;?php ?&amp;gt;&lt;/code&gt; タグの間のすべてのコードを実行します。 結果はこれです：</target>
        </trans-unit>
        <trans-unit id="d0bf4c060bf6e4b4dad05efef8b0168eeac72f11" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;file_put_contents&lt;/code&gt; call did not result in anything, it just wrote &quot; + foo + &quot; into a file. The &lt;code&gt;&amp;lt;?php echo 42; ?&amp;gt;&lt;/code&gt; call resulted in the output &quot;42&quot;, which is now in the spot where that code used to be.</source>
          <target state="translated">&lt;code&gt;file_put_contents&lt;/code&gt; の呼び出しでは何も発生せず、「+ foo +」がファイルに書き込まれただけです。 &lt;code&gt;&amp;lt;?php echo 42; ?&amp;gt;&lt;/code&gt; ？&amp;gt;呼び出しの結果、出力 &quot;42&quot;が返されました。これは、そのコードが以前あった場所にあります。</target>
        </trans-unit>
        <trans-unit id="bc42cc757b5d275301bcafeb8168ffef54520314" translate="yes" xml:space="preserve">
          <source>The best way to think about this process is as if you're generating a text file dynamically. The text you're generating only becomes executable code once the browser interprets it. Only what you place between &lt;code&gt;&amp;lt;?php&lt;/code&gt; tags is evaluated on the server.</source>
          <target state="translated">このプロセスについて考える最良の方法は、テキストファイルを動的に生成する場合と同じです。 生成するテキストは、ブラウザーが解釈した後にのみ実行可能コードになります。 &lt;code&gt;&amp;lt;?php&lt;/code&gt; タグの間に配置したものだけがサーバーで評価されます。</target>
        </trans-unit>
        <trans-unit id="332a70846dfd8514be84993609d4fb228f272248" translate="yes" xml:space="preserve">
          <source>The example code executes like this:</source>
          <target state="translated">例のコードは次のように実行されます。</target>
        </trans-unit>
        <trans-unit id="84a58ea20eb10550bce98c3eb628295ad5006c92" translate="yes" xml:space="preserve">
          <source>The two sides communicate via HTTP requests and responses. PHP is executed on the server and outputs some HTML and maybe JavaScript code which is sent as response to the client where the HTML is interpreted and the JavaScript is executed. Once PHP has finished outputting the response, the script ends and nothing will happen on the server until a new HTTP request comes in.</source>
          <target state="translated">両者はHTTPリクエストとレスポンスを介して通信します。PHPはサーバー上で実行され、HTMLとJavaScriptのコードを出力します。PHPがレスポンスの出力を終えると、スクリプトは終了し、新しいHTTPリクエストが来るまでサーバー上では何も起こりません。</target>
        </trans-unit>
        <trans-unit id="143dadb19c9858e2316ab1dcf96b0e3ce589b1ee" translate="yes" xml:space="preserve">
          <source>This resulting HTML/JavaScript code is now sent to the client, where it gets evaluated. The &lt;code&gt;alert&lt;/code&gt; call works, while the &lt;code&gt;foo&lt;/code&gt; variable is not used anywhere.</source>
          <target state="translated">この結果のHTML / JavaScriptコードはクライアントに送信され、そこで評価されます。 &lt;code&gt;alert&lt;/code&gt; 呼び出しは機能しますが、 &lt;code&gt;foo&lt;/code&gt; 変数はどこでも使用されません。</target>
        </trans-unit>
        <trans-unit id="92cb952945b14081a17ccec6ff7b7dae7448cc2c" translate="yes" xml:space="preserve">
          <source>To call some PHP code, the client will have to send a new HTTP request to the server. This can happen using one of three possible methods:</source>
          <target state="translated">PHP のコードを呼び出すには、クライアントはサーバーに新しい HTTP リクエストを送信しなければなりません。これには、3 つのメソッドのうちの 1 つを使用します。</target>
        </trans-unit>
        <trans-unit id="219e9d71e0c9311f4a2d137d1ce6949496cce56a" translate="yes" xml:space="preserve">
          <source>To determine why &lt;em&gt;PHP&lt;/em&gt; code doesn't work in &lt;em&gt;JavaScript&lt;/em&gt; code we need to understand what &lt;strong&gt;client side&lt;/strong&gt; and &lt;strong&gt;server side&lt;/strong&gt; languages are, and how they work.</source>
          <target state="translated">&lt;em&gt;PHP&lt;/em&gt;コードが&lt;em&gt;JavaScript&lt;/em&gt;コードで機能しない理由を判別するには、 &lt;strong&gt;クライアント側&lt;/strong&gt;および&lt;strong&gt;サーバー側の&lt;/strong&gt;言語とは何か、およびそれらがどのように機能するかを理解する必要があり&lt;strong&gt;ます&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="fe3465d24edc631cfacd5acba244f977c6342e04" translate="yes" xml:space="preserve">
          <source>What is the difference between client-side and server-side programming</source>
          <target state="translated">クライアントサイドとサーバーサイドのプログラミングの違いは?</target>
        </trans-unit>
        <trans-unit id="436fb7c75c73f0a0f3d129eb51cb7e833cc213d5" translate="yes" xml:space="preserve">
          <source>Why does this not write &quot;bar&quot; into my text file, but alerts &quot;42&quot;?</source>
          <target state="translated">なぜこれは私のテキストファイルに「バー」を書き込まず、「42」を警告するのですか?</target>
        </trans-unit>
        <trans-unit id="6464c26ffe8e689b0206ec6771b8b7c97f1ecf6b" translate="yes" xml:space="preserve">
          <source>Wikipedia : Client-side scripting</source>
          <target state="translated">ウィキペディア:クライアント側スクリプト</target>
        </trans-unit>
        <trans-unit id="ff7e4768c5141f7d3dfe30f4ce5df6cba3b99007" translate="yes" xml:space="preserve">
          <source>Wikipedia : Server-side scripting</source>
          <target state="translated">ウィキペディア.サーバーサイドスクリプト</target>
        </trans-unit>
        <trans-unit id="605f24065f7d7c03e3aaed03c170562f92c9c40b" translate="yes" xml:space="preserve">
          <source>You can also use JavaScript to make the browser open a new page using &lt;code&gt;window.location&lt;/code&gt; or submit a form, emulating possibilities 1. and 2.</source>
          <target state="translated">JavaScriptを使用して、 &lt;code&gt;window.location&lt;/code&gt; を使用してブラウザーに新しいページを開くか、フォームを送信して、可能性1および2をエミュレートすることもできます。</target>
        </trans-unit>
        <trans-unit id="86d44096fbca262e83dcb4696787444f41dc1a33" translate="yes" xml:space="preserve">
          <source>You can do so by reloading the page and sending a &lt;em&gt;HTTP&lt;/em&gt; request</source>
          <target state="translated">これを行うには、ページをリロードして&lt;em&gt;HTTP&lt;/em&gt;リクエストを送信し&lt;em&gt;ます&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="759135f33c66cbf2df7aa5acdbe818c32b129389" translate="yes" xml:space="preserve">
          <source>You can make an AJAX call with JavaScript - this does not require reloading page</source>
          <target state="translated">JavaScriptでAJAX呼び出しを行うことができます-これはページをリロードする必要はありません。</target>
        </trans-unit>
        <trans-unit id="a915169ded5c93aa1d56a6cd7c6bae3a5552d5d4" translate="yes" xml:space="preserve">
          <source>Your Javascript will execute on the client, not on the server. This means that &lt;code&gt;foo&lt;/code&gt; is not evaluated on the server side and therefore its value can't be written to a file on the server.</source>
          <target state="translated">JavaScriptはサーバーではなくクライアントで実行されます。 これは、 &lt;code&gt;foo&lt;/code&gt; がサーバー側で評価されないため、その値をサーバー上のファイルに書き込むことができないことを意味します。</target>
        </trans-unit>
        <trans-unit id="4457c88591bb46fd4553625619b4c8de5f3d7615" translate="yes" xml:space="preserve">
          <source>Your code is split into two entirely separate parts, the &lt;em&gt;server side&lt;/em&gt; and the &lt;em&gt;client side&lt;/em&gt;.</source>
          <target state="translated">コードは、 &lt;em&gt;サーバー側&lt;/em&gt;と&lt;em&gt;クライアント側の&lt;/em&gt; 2つの完全に異なる部分に分割され&lt;em&gt;ます&lt;/em&gt; 。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
