<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/13840429">
    <body>
      <group id="13840429">
        <trans-unit id="35fc179c620909e3dff6f0c8506afa41277a1af1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Server-side languages (PHP etc.)&lt;/em&gt;:  They retrieve records from databases, maintain state over the &lt;a href=&quot;https://stackoverflow.com/questions/4913763/what-does-it-mean-when-they-say-http-is-stateless&quot;&gt;stateless &lt;em&gt;HTTP&lt;/em&gt; connection&lt;/a&gt;, and do a lot of things that require  security. They reside on the server, these programs never have their source code exposed to the user.</source>
          <target state="translated">&lt;em&gt;服务器端语言（PHP等）&lt;/em&gt; ：它们从数据库检索记录，通过&lt;a href=&quot;https://stackoverflow.com/questions/4913763/what-does-it-mean-when-they-say-http-is-stateless&quot;&gt;无状态&lt;em&gt;HTTP&lt;/em&gt;连接&lt;/a&gt;维护状态，并执行许多需要安全性的操作。 它们驻留在服务器上，这些程序永远不会向用户公开其源代码。</target>
        </trans-unit>
        <trans-unit id="e1de13368a38299d9e645467441fa0ee1d9bfc2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;All PHP code is executed on the server before the client even starts executing any of the JavaScript. There's no PHP code left in the response that JavaScript could interact with.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;在客户端甚至开始执行任何JavaScript之前，所有PHP代码都在服务器上执行。&lt;/strong&gt; &lt;strong&gt;JavaScript可以与之交互的响应中没有剩下PHP代码。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a6da202b5650d0e7e90648a5068869792f6704c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Good Read:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;读得好：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bb244851e06b58086743ab92674a8868a9e6b936" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/File:Scheme_dynamic_page_en.svg&quot;&gt;image attr&lt;/a&gt;&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/File:Scheme_dynamic_page_en.svg&quot;&gt;图像属性&lt;/a&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="3945294794e5e84674525044f79c7e0cd936926a" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;&lt;a href=&quot;http://www.html.net/tutorials/php/lesson1.php&quot;&gt;Image source &lt;/a&gt;&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;a href=&quot;http://www.html.net/tutorials/php/lesson1.php&quot;&gt;图片来源&lt;/a&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="01839c02220ca3e601e10608b959cd541fea14fe" translate="yes" xml:space="preserve">
          <source>A form submission, which submits data to the server and loads a new page.</source>
          <target state="translated">表格提交,将数据提交到服务器,并加载一个新页面。</target>
        </trans-unit>
        <trans-unit id="5a88dd5bb49b317874e99fe19d245f6f6f89188a" translate="yes" xml:space="preserve">
          <source>A link, which causes the browser to load a new page.</source>
          <target state="translated">一个链接,导致浏览器加载一个新页面。</target>
        </trans-unit>
        <trans-unit id="39c17177b0651d5cd2b29d3f2631906d35b58c6c" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;http://en.wikipedia.org/wiki/Ajax_%28programming%29&quot;&gt;AJAX&lt;/a&gt; request, which is a Javascript technique to make a regular HTTP request to the server (like 1. and 2. will), but without leaving the current page.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Ajax_%28programming%29&quot;&gt;AJAX&lt;/a&gt;请求，这是一种向服务器发出常规HTTP请求的Javascript技术（如1.和2.将），但不离开当前页面。</target>
        </trans-unit>
        <trans-unit id="3ed82b87ce819031ab8b3a1fbe51781db2e51f98" translate="yes" xml:space="preserve">
          <source>By the way, making a habit of embedding random pieces of PHP logic in HTML or Javascript can lead to seriously convoluted code. I speak from painful experience.</source>
          <target state="translated">顺便说一下,习惯于在HTML或Javascript中嵌入随机的PHP逻辑,会导致代码严重混乱。我说的是痛苦的经验。</target>
        </trans-unit>
        <trans-unit id="1e74bac1c0ce10521914ea4ab6e0183fee6126bd" translate="yes" xml:space="preserve">
          <source>Client side programming is with html code  with Java script and its frameworks, libraries executes in the internet explorer, Mozilla, chrome browsers.
In the java scenario
server side programming servlets executes in the Tomcat, web-logic , j boss, WebSphere severs</source>
          <target state="translated">客户端编程是用html代码与Java脚本及其框架、库在互联网浏览器、Mozilla、chrome浏览器中执行。在java场景下,服务器端编程servlets在Tomcat、web-logic、j boss、WebSphere severs中执行。</target>
        </trans-unit>
        <trans-unit id="c5efec7dab4343a37f586b84f537de23e2a3347e" translate="yes" xml:space="preserve">
          <source>Here's a question outlining these method in greater detail</source>
          <target state="translated">下面是一个问题,详细介绍一下这些方法。</target>
        </trans-unit>
        <trans-unit id="30816d164754f70ea949dd5f3aca5ba28e455b3b" translate="yes" xml:space="preserve">
          <source>I have this code:</source>
          <target state="translated">我有这个代码。</target>
        </trans-unit>
        <trans-unit id="5e4cdfc595e894946d2c86c14e3f40d764322c53" translate="yes" xml:space="preserve">
          <source>In web application every task execute in a manner of request and response.</source>
          <target state="translated">在Web应用中,每个任务都是以请求和响应的方式执行。</target>
        </trans-unit>
        <trans-unit id="f4551b611f73cfed80baa87c32294e6e091dd174" translate="yes" xml:space="preserve">
          <source>JavaScript is visible to the user and can be easily modified, so for security stuff we must not rely on JavaScript.</source>
          <target state="translated">JavaScript对用户来说是可见的,可以很容易被修改,所以对于安全的东西,我们一定不能依赖JavaScript。</target>
        </trans-unit>
        <trans-unit id="a1a6e5f240ddc8a8cd9c64e95dd60e94282dc0d1" translate="yes" xml:space="preserve">
          <source>Madara Uchiha : Difference between client side and server side programming</source>
          <target state="translated">Madara Uchiha:客户端和服务器端编程的区别</target>
        </trans-unit>
        <trans-unit id="12b3071e9c70c33c91d4afebb4ccf4277f8f2e34" translate="yes" xml:space="preserve">
          <source>NB: Earlier revisions of this question were explicitly about PHP on the server and JavaScript on the client. The essential nature of the problem and solutions is the same for &lt;em&gt;any&lt;/em&gt; pair of languages when one is running on the client and the other on the server (even if they are the same language). Please take this in to account when you see answers talking about specific languages.</source>
          <target state="translated">注意：此问题的早期修订版本明确涉及服务器上的PHP和客户端上的JavaScript。 当一种语言在客户端上运行而另一种语言在服务器上运行时，问题和解决方案的本质对于&lt;em&gt;任何&lt;/em&gt;一对语言都是相同的（即使它们是相同的语言）。 当您看到有关特定语言的答案时，请考虑到这一点。</target>
        </trans-unit>
        <trans-unit id="8f5e5f786f8578dcdb312ec67a7e87f75ec79c7b" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;em&gt;Client Side Languages (like JavaScript)&lt;/em&gt; reside in browser and run in the browser. &lt;em&gt;Client-side scripting&lt;/em&gt; generally refers to the class of computer programs on the web that are executed client-side, by the user's web browser, instead of &lt;em&gt;server-side&lt;/em&gt;.</source>
          <target state="translated">另一方面， &lt;em&gt;客户端语言（如JavaScript）&lt;/em&gt;驻留在浏览器中并在浏览器中运行。 &lt;em&gt;客户端脚本&lt;/em&gt;通常是指网络上由用户的Web浏览器而不是&lt;em&gt;服务器&lt;/em&gt;端在客户端执行的计算机程序的类。</target>
        </trans-unit>
        <trans-unit id="4891613fad6f56f2f9ab60dc6febe3b894c92d9b" translate="yes" xml:space="preserve">
          <source>So now what can I do if I need to call PHP? It depends how you need to do it: either by reloading the page or by using an AJAX call.</source>
          <target state="translated">那么现在,如果我需要调用PHP,该怎么做呢?这要看你需要怎么做了:通过重载页面或者使用AJAX调用。</target>
        </trans-unit>
        <trans-unit id="fe6b2db06c0843cdcda3103d865e06bde30e329c" translate="yes" xml:space="preserve">
          <source>So when you make a &lt;em&gt;HTTP&lt;/em&gt; request on server, the server first reads the PHP file carefully to see if there are any tasks that need to be executed, and sends a response to the client side. Again, as @deceze said, *Once PHP has finished outputting the response, the script ends and nothing will happen on the server until a new &lt;em&gt;HTTP&lt;/em&gt; request comes in.*</source>
          <target state="translated">因此，当您在服务器上发出&lt;em&gt;HTTP&lt;/em&gt;请求时，服务器首先会仔细读取PHP文件，以查看是否需要执行任何任务，然后将响应发送到客户端。 再次，如@deceze所说，*一旦PHP完成输出响应，脚本便会结束，并且在服务器上什么也不会发生，直到有一个新的&lt;em&gt;HTTP&lt;/em&gt;请求进入为止。</target>
        </trans-unit>
        <trans-unit id="ebd1b121c1665984c2f627601f32619b8a802be5" translate="yes" xml:space="preserve">
          <source>So you can easily see that server side languages handle HTTP requests and process them, and, as @deceze said, &lt;em&gt;PHP is executed on the server and outputs some HTML, and maybe JavaScript code, which is sent as a response to the client, where the HTML is interpreted and JavaScript is executed.&lt;/em&gt;</source>
          <target state="translated">因此，您可以轻松地看到服务器端语言处理HTTP请求并处理它们，正如@deceze所说， &lt;em&gt;PHP在服务器上执行，并输出一些HTML（也许是JavaScript代码），并作为响应发送给客户端。 HTML被解释并执行JavaScript。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="671fac470b66029fb2d067c3e5f762d9d9b7734b" translate="yes" xml:space="preserve">
          <source>Step 1, PHP executes all code between &lt;code&gt;&amp;lt;?php ?&amp;gt;&lt;/code&gt; tags. The result is this:</source>
          <target state="translated">步骤1，PHP执行 &lt;code&gt;&amp;lt;?php ?&amp;gt;&lt;/code&gt; 标记之间的所有代码。 结果是这样的：</target>
        </trans-unit>
        <trans-unit id="d0bf4c060bf6e4b4dad05efef8b0168eeac72f11" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;file_put_contents&lt;/code&gt; call did not result in anything, it just wrote &quot; + foo + &quot; into a file. The &lt;code&gt;&amp;lt;?php echo 42; ?&amp;gt;&lt;/code&gt; call resulted in the output &quot;42&quot;, which is now in the spot where that code used to be.</source>
          <target state="translated">&lt;code&gt;file_put_contents&lt;/code&gt; 调用没有任何结果，它只是在文件中写入了&amp;ldquo; + foo +&amp;rdquo;。 &lt;code&gt;&amp;lt;?php echo 42; ?&amp;gt;&lt;/code&gt; ？&amp;gt;调用导致输出&amp;ldquo; 42&amp;rdquo;，该输出现在位于该代码以前所在的位置。</target>
        </trans-unit>
        <trans-unit id="bc42cc757b5d275301bcafeb8168ffef54520314" translate="yes" xml:space="preserve">
          <source>The best way to think about this process is as if you're generating a text file dynamically. The text you're generating only becomes executable code once the browser interprets it. Only what you place between &lt;code&gt;&amp;lt;?php&lt;/code&gt; tags is evaluated on the server.</source>
          <target state="translated">考虑此过程的最佳方法是好像正在动态生成文本文件。 您生成的文本仅在浏览器解释后成为可执行代码。 服务器上仅评估您在 &lt;code&gt;&amp;lt;?php&lt;/code&gt; 标记之间放置的内容。</target>
        </trans-unit>
        <trans-unit id="332a70846dfd8514be84993609d4fb228f272248" translate="yes" xml:space="preserve">
          <source>The example code executes like this:</source>
          <target state="translated">示例代码的执行方式是这样的。</target>
        </trans-unit>
        <trans-unit id="84a58ea20eb10550bce98c3eb628295ad5006c92" translate="yes" xml:space="preserve">
          <source>The two sides communicate via HTTP requests and responses. PHP is executed on the server and outputs some HTML and maybe JavaScript code which is sent as response to the client where the HTML is interpreted and the JavaScript is executed. Once PHP has finished outputting the response, the script ends and nothing will happen on the server until a new HTTP request comes in.</source>
          <target state="translated">双方通过HTTP请求和响应进行通信。PHP在服务器上执行,并输出一些HTML和JavaScript代码,作为响应发送给客户端,HTML被解释,JavaScript被执行。一旦PHP完成输出响应后,脚本就结束了,在新的HTTP请求进来之前,服务器上不会发生任何事情。</target>
        </trans-unit>
        <trans-unit id="143dadb19c9858e2316ab1dcf96b0e3ce589b1ee" translate="yes" xml:space="preserve">
          <source>This resulting HTML/JavaScript code is now sent to the client, where it gets evaluated. The &lt;code&gt;alert&lt;/code&gt; call works, while the &lt;code&gt;foo&lt;/code&gt; variable is not used anywhere.</source>
          <target state="translated">现在，此生成的HTML / JavaScript代码将发送到客户端，并在客户端进行评估。 &lt;code&gt;alert&lt;/code&gt; 调用有效，而 &lt;code&gt;foo&lt;/code&gt; 变量未在任何地方使用。</target>
        </trans-unit>
        <trans-unit id="92cb952945b14081a17ccec6ff7b7dae7448cc2c" translate="yes" xml:space="preserve">
          <source>To call some PHP code, the client will have to send a new HTTP request to the server. This can happen using one of three possible methods:</source>
          <target state="translated">要调用一些PHP代码,客户端必须向服务器发送一个新的HTTP请求。这可以通过三种可能的方法之一来实现。</target>
        </trans-unit>
        <trans-unit id="219e9d71e0c9311f4a2d137d1ce6949496cce56a" translate="yes" xml:space="preserve">
          <source>To determine why &lt;em&gt;PHP&lt;/em&gt; code doesn't work in &lt;em&gt;JavaScript&lt;/em&gt; code we need to understand what &lt;strong&gt;client side&lt;/strong&gt; and &lt;strong&gt;server side&lt;/strong&gt; languages are, and how they work.</source>
          <target state="translated">为了确定&lt;em&gt;PHP&lt;/em&gt;代码为什么不能在&lt;em&gt;JavaScript&lt;/em&gt;代码中运行，我们需要了解什么是&lt;strong&gt;客户端&lt;/strong&gt;和&lt;strong&gt;服务器端&lt;/strong&gt;语言，以及它们如何工作。</target>
        </trans-unit>
        <trans-unit id="fe3465d24edc631cfacd5acba244f977c6342e04" translate="yes" xml:space="preserve">
          <source>What is the difference between client-side and server-side programming</source>
          <target state="translated">客户端和服务器端编程有什么区别?</target>
        </trans-unit>
        <trans-unit id="436fb7c75c73f0a0f3d129eb51cb7e833cc213d5" translate="yes" xml:space="preserve">
          <source>Why does this not write &quot;bar&quot; into my text file, but alerts &quot;42&quot;?</source>
          <target state="translated">为什么我的文本文件中不写 &quot;bar&quot;,而是提示 &quot;42&quot;?</target>
        </trans-unit>
        <trans-unit id="6464c26ffe8e689b0206ec6771b8b7c97f1ecf6b" translate="yes" xml:space="preserve">
          <source>Wikipedia : Client-side scripting</source>
          <target state="translated">维基百科:客户端脚本</target>
        </trans-unit>
        <trans-unit id="ff7e4768c5141f7d3dfe30f4ce5df6cba3b99007" translate="yes" xml:space="preserve">
          <source>Wikipedia : Server-side scripting</source>
          <target state="translated">维基百科。服务器端脚本</target>
        </trans-unit>
        <trans-unit id="605f24065f7d7c03e3aaed03c170562f92c9c40b" translate="yes" xml:space="preserve">
          <source>You can also use JavaScript to make the browser open a new page using &lt;code&gt;window.location&lt;/code&gt; or submit a form, emulating possibilities 1. and 2.</source>
          <target state="translated">您还可以使用JavaScript使浏览器使用 &lt;code&gt;window.location&lt;/code&gt; 打开新页面或提交表单，以模拟可能性1.和2。</target>
        </trans-unit>
        <trans-unit id="86d44096fbca262e83dcb4696787444f41dc1a33" translate="yes" xml:space="preserve">
          <source>You can do so by reloading the page and sending a &lt;em&gt;HTTP&lt;/em&gt; request</source>
          <target state="translated">您可以通过重新加载页面并发送&lt;em&gt;HTTP&lt;/em&gt;请求来实现</target>
        </trans-unit>
        <trans-unit id="759135f33c66cbf2df7aa5acdbe818c32b129389" translate="yes" xml:space="preserve">
          <source>You can make an AJAX call with JavaScript - this does not require reloading page</source>
          <target state="translated">您可以使用JavaScript进行AJAX调用-这不需要重新加载页面。</target>
        </trans-unit>
        <trans-unit id="a915169ded5c93aa1d56a6cd7c6bae3a5552d5d4" translate="yes" xml:space="preserve">
          <source>Your Javascript will execute on the client, not on the server. This means that &lt;code&gt;foo&lt;/code&gt; is not evaluated on the server side and therefore its value can't be written to a file on the server.</source>
          <target state="translated">您的Javascript将在客户端而不是服务器上执行。 这意味着 &lt;code&gt;foo&lt;/code&gt; 不会在服务器端进行评估，因此无法将其值写入服务器上的文件。</target>
        </trans-unit>
        <trans-unit id="4457c88591bb46fd4553625619b4c8de5f3d7615" translate="yes" xml:space="preserve">
          <source>Your code is split into two entirely separate parts, the &lt;em&gt;server side&lt;/em&gt; and the &lt;em&gt;client side&lt;/em&gt;.</source>
          <target state="translated">您的代码分为两个完全独立的部分， &lt;em&gt;服务器端&lt;/em&gt;和&lt;em&gt;客户端&lt;/em&gt; 。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
