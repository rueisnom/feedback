<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/13840429">
    <body>
      <group id="13840429">
        <trans-unit id="35fc179c620909e3dff6f0c8506afa41277a1af1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Server-side languages (PHP etc.)&lt;/em&gt;:  They retrieve records from databases, maintain state over the &lt;a href=&quot;https://stackoverflow.com/questions/4913763/what-does-it-mean-when-they-say-http-is-stateless&quot;&gt;stateless &lt;em&gt;HTTP&lt;/em&gt; connection&lt;/a&gt;, and do a lot of things that require  security. They reside on the server, these programs never have their source code exposed to the user.</source>
          <target state="translated">&lt;em&gt;서버 측 언어 (PHP 등)&lt;/em&gt; : 데이터베이스에서 레코드를 검색하고 상태 &lt;a href=&quot;https://stackoverflow.com/questions/4913763/what-does-it-mean-when-they-say-http-is-stateless&quot;&gt;비 저장 &lt;em&gt;HTTP&lt;/em&gt; 연결을&lt;/a&gt; 통해 상태를 유지하며 보안이 필요한 많은 작업을 수행합니다. 그것들은 서버에 상주하며,이 프로그램들은 소스 코드를 사용자에게 노출시키지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e1de13368a38299d9e645467441fa0ee1d9bfc2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;All PHP code is executed on the server before the client even starts executing any of the JavaScript. There's no PHP code left in the response that JavaScript could interact with.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;클라이언트가 JavaScript를 실행하기 전에 모든 PHP 코드가 서버에서 실행됩니다.&lt;/strong&gt; &lt;strong&gt;JavaScript가 상호 작용할 수있는 응답에 PHP 코드가 남아 있지 않습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a6da202b5650d0e7e90648a5068869792f6704c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Good Read:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;잘 읽음 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bb244851e06b58086743ab92674a8868a9e6b936" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/File:Scheme_dynamic_page_en.svg&quot;&gt;image attr&lt;/a&gt;&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/File:Scheme_dynamic_page_en.svg&quot;&gt;이미지 속성&lt;/a&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="3945294794e5e84674525044f79c7e0cd936926a" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;&lt;a href=&quot;http://www.html.net/tutorials/php/lesson1.php&quot;&gt;Image source &lt;/a&gt;&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;a href=&quot;http://www.html.net/tutorials/php/lesson1.php&quot;&gt;이미지 소스&lt;/a&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="01839c02220ca3e601e10608b959cd541fea14fe" translate="yes" xml:space="preserve">
          <source>A form submission, which submits data to the server and loads a new page.</source>
          <target state="translated">서버에 데이터를 제출하고 새 페이지를로드하는 양식 제출.</target>
        </trans-unit>
        <trans-unit id="5a88dd5bb49b317874e99fe19d245f6f6f89188a" translate="yes" xml:space="preserve">
          <source>A link, which causes the browser to load a new page.</source>
          <target state="translated">브라우저가 새 페이지를로드하게하는 링크입니다.</target>
        </trans-unit>
        <trans-unit id="39c17177b0651d5cd2b29d3f2631906d35b58c6c" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;http://en.wikipedia.org/wiki/Ajax_%28programming%29&quot;&gt;AJAX&lt;/a&gt; request, which is a Javascript technique to make a regular HTTP request to the server (like 1. and 2. will), but without leaving the current page.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Ajax_%28programming%29&quot;&gt;AJAX&lt;/a&gt; 요청. 현재 페이지를 떠나지 않고 서버에 정기적 인 HTTP 요청을하는 (1과 2와 같은) 자바 스크립트 기술인 AJAX 요청.</target>
        </trans-unit>
        <trans-unit id="3ed82b87ce819031ab8b3a1fbe51781db2e51f98" translate="yes" xml:space="preserve">
          <source>By the way, making a habit of embedding random pieces of PHP logic in HTML or Javascript can lead to seriously convoluted code. I speak from painful experience.</source>
          <target state="translated">그건 그렇고, 임의의 PHP 로직 조각을 HTML 또는 Javascript에 포함시키는 습관을 들이면 코드가 크게 복잡해질 수 있습니다. 나는 고통스러운 경험에서 말합니다.</target>
        </trans-unit>
        <trans-unit id="1e74bac1c0ce10521914ea4ab6e0183fee6126bd" translate="yes" xml:space="preserve">
          <source>Client side programming is with html code  with Java script and its frameworks, libraries executes in the internet explorer, Mozilla, chrome browsers.
In the java scenario
server side programming servlets executes in the Tomcat, web-logic , j boss, WebSphere severs</source>
          <target state="translated">클라이언트 측 프로그래밍은 Java 스크립트 및 해당 프레임 워크가 포함 된 HTML 코드를 사용하며 라이브러리는 인터넷 탐색기, Mozilla, 크롬 브라우저에서 실행됩니다. 자바 시나리오에서 서버 측 프로그래밍 서블릿은 Tomcat, web-logic, j boss, WebSphere 서버에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="c5efec7dab4343a37f586b84f537de23e2a3347e" translate="yes" xml:space="preserve">
          <source>Here's a question outlining these method in greater detail</source>
          <target state="translated">이 방법을보다 자세하게 설명하는 질문이 있습니다.</target>
        </trans-unit>
        <trans-unit id="30816d164754f70ea949dd5f3aca5ba28e455b3b" translate="yes" xml:space="preserve">
          <source>I have this code:</source>
          <target state="translated">이 코드가 있습니다 :</target>
        </trans-unit>
        <trans-unit id="5e4cdfc595e894946d2c86c14e3f40d764322c53" translate="yes" xml:space="preserve">
          <source>In web application every task execute in a manner of request and response.</source>
          <target state="translated">웹 애플리케이션에서 모든 작업은 요청 및 응답 방식으로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="f4551b611f73cfed80baa87c32294e6e091dd174" translate="yes" xml:space="preserve">
          <source>JavaScript is visible to the user and can be easily modified, so for security stuff we must not rely on JavaScript.</source>
          <target state="translated">JavaScript는 사용자가 볼 수 있으며 쉽게 수정할 수 있으므로 보안을 위해 JavaScript에 의존해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="a1a6e5f240ddc8a8cd9c64e95dd60e94282dc0d1" translate="yes" xml:space="preserve">
          <source>Madara Uchiha : Difference between client side and server side programming</source>
          <target state="translated">Madara Uchiha : 클라이언트 측과 서버 측 프로그래밍의 차이점</target>
        </trans-unit>
        <trans-unit id="12b3071e9c70c33c91d4afebb4ccf4277f8f2e34" translate="yes" xml:space="preserve">
          <source>NB: Earlier revisions of this question were explicitly about PHP on the server and JavaScript on the client. The essential nature of the problem and solutions is the same for &lt;em&gt;any&lt;/em&gt; pair of languages when one is running on the client and the other on the server (even if they are the same language). Please take this in to account when you see answers talking about specific languages.</source>
          <target state="translated">주의 :이 질문의 이전 개정은 서버의 PHP와 클라이언트의 JavaScript에 관한 것입니다. 문제와 솔루션의 본질적 특성은 클라이언트와 서버에서 서로 같은 언어를 사용하는 경우 언어 쌍에 &lt;em&gt;관계없이&lt;/em&gt; 동일합니다. 특정 언어에 대한 답변이 표시 될 때이를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="8f5e5f786f8578dcdb312ec67a7e87f75ec79c7b" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;em&gt;Client Side Languages (like JavaScript)&lt;/em&gt; reside in browser and run in the browser. &lt;em&gt;Client-side scripting&lt;/em&gt; generally refers to the class of computer programs on the web that are executed client-side, by the user's web browser, instead of &lt;em&gt;server-side&lt;/em&gt;.</source>
          <target state="translated">반면에 &lt;em&gt;JavaScript와 같은 클라이언트 측 언어&lt;/em&gt; 는 브라우저에 상주하고 브라우저에서 실행됩니다. &lt;em&gt;클라이언트 쪽 스크립팅은&lt;/em&gt; 일반적으로 &lt;em&gt;서버 쪽&lt;/em&gt; 대신 사용자의 웹 브라우저에 의해 클라이언트 쪽에서 실행되는 웹상의 컴퓨터 프로그램 클래스를 말합니다.</target>
        </trans-unit>
        <trans-unit id="4891613fad6f56f2f9ab60dc6febe3b894c92d9b" translate="yes" xml:space="preserve">
          <source>So now what can I do if I need to call PHP? It depends how you need to do it: either by reloading the page or by using an AJAX call.</source>
          <target state="translated">PHP를 호출해야한다면 어떻게해야합니까? 페이지를 다시로드하거나 AJAX 호출을 사용하여 수행 방법에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="fe6b2db06c0843cdcda3103d865e06bde30e329c" translate="yes" xml:space="preserve">
          <source>So when you make a &lt;em&gt;HTTP&lt;/em&gt; request on server, the server first reads the PHP file carefully to see if there are any tasks that need to be executed, and sends a response to the client side. Again, as @deceze said, *Once PHP has finished outputting the response, the script ends and nothing will happen on the server until a new &lt;em&gt;HTTP&lt;/em&gt; request comes in.*</source>
          <target state="translated">따라서 서버에서 &lt;em&gt;HTTP&lt;/em&gt; 요청을 할 때 서버는 먼저 PHP 파일을주의해서 읽고 실행해야 할 작업이 있는지 확인한 후 클라이언트쪽에 응답을 보냅니다. @deceze가 말했듯이 PHP가 응답 출력을 마치면 스크립트가 종료되고 새로운 &lt;em&gt;HTTP&lt;/em&gt; 요청이 올 때까지 서버에서 아무 일도 일어나지 않습니다. *</target>
        </trans-unit>
        <trans-unit id="ebd1b121c1665984c2f627601f32619b8a802be5" translate="yes" xml:space="preserve">
          <source>So you can easily see that server side languages handle HTTP requests and process them, and, as @deceze said, &lt;em&gt;PHP is executed on the server and outputs some HTML, and maybe JavaScript code, which is sent as a response to the client, where the HTML is interpreted and JavaScript is executed.&lt;/em&gt;</source>
          <target state="translated">따라서 서버 측 언어가 HTTP 요청을 처리하고 처리한다는 것을 쉽게 알 수 있으며, @deceze가 말했듯이 &lt;em&gt;PHP는 서버에서 실행되어 일부 HTML 및 JavaScript 코드를 출력합니다.이 코드는 클라이언트에 대한 응답으로 전송됩니다. HTML이 해석되고 JavaScript가 실행됩니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="671fac470b66029fb2d067c3e5f762d9d9b7734b" translate="yes" xml:space="preserve">
          <source>Step 1, PHP executes all code between &lt;code&gt;&amp;lt;?php ?&amp;gt;&lt;/code&gt; tags. The result is this:</source>
          <target state="translated">1 단계, PHP는 &lt;code&gt;&amp;lt;?php ?&amp;gt;&lt;/code&gt; 태그 사이의 모든 코드를 실행합니다. 결과는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d0bf4c060bf6e4b4dad05efef8b0168eeac72f11" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;file_put_contents&lt;/code&gt; call did not result in anything, it just wrote &quot; + foo + &quot; into a file. The &lt;code&gt;&amp;lt;?php echo 42; ?&amp;gt;&lt;/code&gt; call resulted in the output &quot;42&quot;, which is now in the spot where that code used to be.</source>
          <target state="translated">&lt;code&gt;file_put_contents&lt;/code&gt; 호출은 아무것도 발생하지 않았으며 파일에 &quot;+ foo +&quot;를 썼습니다. &lt;code&gt;&amp;lt;?php echo 42; ?&amp;gt;&lt;/code&gt; ?&amp;gt; 호출은 출력 &quot;42&quot;를 가져 왔으며, 이제 해당 코드가 있던 위치에 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc42cc757b5d275301bcafeb8168ffef54520314" translate="yes" xml:space="preserve">
          <source>The best way to think about this process is as if you're generating a text file dynamically. The text you're generating only becomes executable code once the browser interprets it. Only what you place between &lt;code&gt;&amp;lt;?php&lt;/code&gt; tags is evaluated on the server.</source>
          <target state="translated">이 프로세스를 생각하는 가장 좋은 방법은 마치 텍스트 파일을 동적으로 생성하는 것입니다. 생성하는 텍스트는 브라우저가 해석 한 후에 만 ​​실행 가능한 코드가됩니다. &lt;code&gt;&amp;lt;?php&lt;/code&gt; 태그 사이에 배치 한 것만 서버에서 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="332a70846dfd8514be84993609d4fb228f272248" translate="yes" xml:space="preserve">
          <source>The example code executes like this:</source>
          <target state="translated">예제 코드는 다음과 같이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="84a58ea20eb10550bce98c3eb628295ad5006c92" translate="yes" xml:space="preserve">
          <source>The two sides communicate via HTTP requests and responses. PHP is executed on the server and outputs some HTML and maybe JavaScript code which is sent as response to the client where the HTML is interpreted and the JavaScript is executed. Once PHP has finished outputting the response, the script ends and nothing will happen on the server until a new HTTP request comes in.</source>
          <target state="translated">양측은 HTTP 요청 및 응답을 통해 통신합니다. PHP는 서버에서 실행되며 HTML이 해석되고 JavaScript가 실행되는 클라이언트에 대한 응답으로 전송되는 일부 HTML 및 JavaScript 코드를 출력합니다. PHP가 응답 출력을 마치면 스크립트가 종료되고 새로운 HTTP 요청이 올 때까지 서버에서 아무 일도 일어나지 않습니다.</target>
        </trans-unit>
        <trans-unit id="143dadb19c9858e2316ab1dcf96b0e3ce589b1ee" translate="yes" xml:space="preserve">
          <source>This resulting HTML/JavaScript code is now sent to the client, where it gets evaluated. The &lt;code&gt;alert&lt;/code&gt; call works, while the &lt;code&gt;foo&lt;/code&gt; variable is not used anywhere.</source>
          <target state="translated">이 결과 HTML / JavaScript 코드가 이제 클라이언트로 전송되어 평가됩니다. &lt;code&gt;alert&lt;/code&gt; 호출은 작동하지만 &lt;code&gt;foo&lt;/code&gt; 변수는 어디에도 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="92cb952945b14081a17ccec6ff7b7dae7448cc2c" translate="yes" xml:space="preserve">
          <source>To call some PHP code, the client will have to send a new HTTP request to the server. This can happen using one of three possible methods:</source>
          <target state="translated">일부 PHP 코드를 호출하려면 클라이언트가 서버에 새로운 HTTP 요청을 보내야합니다. 가능한 세 가지 방법 중 하나를 사용하여 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="219e9d71e0c9311f4a2d137d1ce6949496cce56a" translate="yes" xml:space="preserve">
          <source>To determine why &lt;em&gt;PHP&lt;/em&gt; code doesn't work in &lt;em&gt;JavaScript&lt;/em&gt; code we need to understand what &lt;strong&gt;client side&lt;/strong&gt; and &lt;strong&gt;server side&lt;/strong&gt; languages are, and how they work.</source>
          <target state="translated">&lt;em&gt;PHP&lt;/em&gt; 코드가 &lt;em&gt;JavaScript&lt;/em&gt; 코드에서 작동하지 않는 이유를 확인하려면 &lt;strong&gt;클라이언트 측&lt;/strong&gt; 및 &lt;strong&gt;서버 측&lt;/strong&gt; 언어가 무엇이며 어떻게 작동하는지 이해해야합니다.</target>
        </trans-unit>
        <trans-unit id="fe3465d24edc631cfacd5acba244f977c6342e04" translate="yes" xml:space="preserve">
          <source>What is the difference between client-side and server-side programming</source>
          <target state="translated">클라이언트 측과 서버 측 프로그래밍의 차이점은 무엇입니까</target>
        </trans-unit>
        <trans-unit id="436fb7c75c73f0a0f3d129eb51cb7e833cc213d5" translate="yes" xml:space="preserve">
          <source>Why does this not write &quot;bar&quot; into my text file, but alerts &quot;42&quot;?</source>
          <target state="translated">왜 이것이 &quot;bar&quot;를 텍스트 파일에 쓰지 않고 &quot;42&quot;라고 경고합니까?</target>
        </trans-unit>
        <trans-unit id="6464c26ffe8e689b0206ec6771b8b7c97f1ecf6b" translate="yes" xml:space="preserve">
          <source>Wikipedia : Client-side scripting</source>
          <target state="translated">Wikipedia : 클라이언트 측 스크립팅</target>
        </trans-unit>
        <trans-unit id="ff7e4768c5141f7d3dfe30f4ce5df6cba3b99007" translate="yes" xml:space="preserve">
          <source>Wikipedia : Server-side scripting</source>
          <target state="translated">Wikipedia : 서버 측 스크립팅</target>
        </trans-unit>
        <trans-unit id="605f24065f7d7c03e3aaed03c170562f92c9c40b" translate="yes" xml:space="preserve">
          <source>You can also use JavaScript to make the browser open a new page using &lt;code&gt;window.location&lt;/code&gt; or submit a form, emulating possibilities 1. and 2.</source>
          <target state="translated">JavaScript를 사용하여 &lt;code&gt;window.location&lt;/code&gt; 을 사용하여 브라우저가 새 페이지를 열거 나 양식 1과 2를 에뮬레이트하여 양식을 제출할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="86d44096fbca262e83dcb4696787444f41dc1a33" translate="yes" xml:space="preserve">
          <source>You can do so by reloading the page and sending a &lt;em&gt;HTTP&lt;/em&gt; request</source>
          <target state="translated">페이지를 새로 고침하고 &lt;em&gt;HTTP&lt;/em&gt; 요청을 보내면됩니다.</target>
        </trans-unit>
        <trans-unit id="759135f33c66cbf2df7aa5acdbe818c32b129389" translate="yes" xml:space="preserve">
          <source>You can make an AJAX call with JavaScript - this does not require reloading page</source>
          <target state="translated">JavaScript로 AJAX 호출을 할 수 있습니다. 페이지를 다시로드 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="a915169ded5c93aa1d56a6cd7c6bae3a5552d5d4" translate="yes" xml:space="preserve">
          <source>Your Javascript will execute on the client, not on the server. This means that &lt;code&gt;foo&lt;/code&gt; is not evaluated on the server side and therefore its value can't be written to a file on the server.</source>
          <target state="translated">자바 스크립트는 서버가 아닌 클라이언트에서 실행됩니다. 이는 &lt;code&gt;foo&lt;/code&gt; 가 서버 측에서 평가되지 않으므로 서버의 파일에 해당 값을 쓸 수 없음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="4457c88591bb46fd4553625619b4c8de5f3d7615" translate="yes" xml:space="preserve">
          <source>Your code is split into two entirely separate parts, the &lt;em&gt;server side&lt;/em&gt; and the &lt;em&gt;client side&lt;/em&gt;.</source>
          <target state="translated">코드는 &lt;em&gt;서버 측&lt;/em&gt; 과 &lt;em&gt;클라이언트 측으로&lt;/em&gt; 완전히 분리 된 두 부분으로 나뉩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
