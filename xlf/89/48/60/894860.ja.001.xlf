<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/894860">
    <body>
      <group id="894860">
        <trans-unit id="e97b40c72045ec63838eee1e9e8ea78cad7d5abb" translate="yes" xml:space="preserve">
          <source>...meanwhile what &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Browser_compatibility&quot;&gt;Edge DOES support is Object.assign()&lt;/a&gt; (IE does not, but I really hope we can leave IE behind :) )</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;...一方、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Browser_compatibility&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;EdgeがサポートするのはObject.assign（）です&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（IEはそうではありませんが、IEを残すことができることを本当に望んでいます:)）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="41e1fe6db3ec4445211ddf15d11b8e515b4382d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters&quot;&gt;See the MDN article for more information&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細については、MDNの記事を参照してください&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e36959abee0d8ca48c07af6d3698e2cda2263bf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Function&lt;/code&gt; default values can be more than just simple values like 31; they can be any  valid expression, even a &lt;code&gt;function call&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Function&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デフォルト値は、31のような単純な値だけではありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;function call&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;含め、任意の有効な式にすることができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0b70ee86bfdf4d111eef19547a1c7281ff674d86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x = 11&lt;/code&gt; in a function declaration is more like &lt;code&gt;x !== undefined ? x : 11&lt;/code&gt; than the  much more common idiom &lt;code&gt;x || 11&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x = 11&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数宣言の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;x = 11&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;xに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;似て&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x !== undefined ? x : 11&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;よりもはるかに一般的なイディオム&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x || 11&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="137ef69f4ee4cb6fa771b590c997e63ae514d672" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;EDIT:&lt;/em&gt;&lt;/strong&gt; And this is super important! This will &lt;em&gt;not&lt;/em&gt; work in IE. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters#Browser_compatibility&quot;&gt;documentation&lt;/a&gt;. So with IE you have to use the &quot;define variable at top of function&quot; method. Default parameters won't work in IE.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;編集：&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そしてこれは非常に重要です！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;IE&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;では&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機能し&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ません&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters#Browser_compatibility&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ドキュメントを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、IEでは「関数の上部に変数を定義する」メソッドを使用する必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デフォルトのパラメータはIEでは機能しません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f2342d536089f89ec0e969f75d11701ad26b3b6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default Parameter Values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デフォルトのパラメータ値&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b65d53b38451e5ddee9d9cab31548d900a56c3da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default Value Expressions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デフォルト値式&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3b250598fb82d4e8bb74bfd742c7b203fc5ef4fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Description:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7dab436ac0280bf1a54126a6f466fe9fb2ca0d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Different Syntax Examples:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;異なる構文の例：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4ed877327577d8614e62e2b5b3ac48aff3fd09c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT:&lt;/strong&gt; Due to comments regarding &lt;code&gt;const&lt;/code&gt; options - the problem with using constant options in the rest of the function is actually &lt;strong&gt;not&lt;/strong&gt; that you can't do that, is just that you can't use the constant variable in its own declaration - you would have to adjust the input naming to something like</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;編集：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;const&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オプション&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に関するコメントのため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-関数の残りの部分で定数オプションを使用することの問題は、実際に&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それができないということではなく、それ自体の宣言で定数変数を使用できないということです-あなたは入力の名前を次のように調整する必要があります&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5752fd7d834ed55ed502c32508adc25bdf046700" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ES5 and above&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES5以降&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5c7fb4b99ca91df62b8d5ecfec711baffeb6b5ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ES5:&lt;/strong&gt; Most of the given answers aren't good enough for me because there are occasions where I may have to pass falsey values such as &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; to a function. To determine if a parameter is undefined because that's the value I passed instead of undefined due to not have been defined at all I do this:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES5：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などの誤った値を関数に渡さなければならない場合があるため、与えられた答えのほとんどは私にとって十分ではありません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パラメータが未定義であるかどうかを判断するには、定義されていないために未定義ではなく渡した値であるため、次のようにします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="07600349baf0925b6a4947002d9723d7c6c6ef1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ES6 and above&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6以降&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1db01c78d7531d033cba608fc4dbf384dd011cab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ES6:&lt;/strong&gt; As already mentioned in most answers, in ES6, you can simply initialise a parameter along with a value.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ほとんどの回答ですでに述べたように、ES6では、値とともにパラメーターを単純に初期化できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="523b39cc94cf62f1f52a0a3e6acfabe17e835863" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; also there is a big difference between those if you pass a value to &lt;strong&gt;ES6&lt;/strong&gt; one even the value be falsy, that will be replaced with new value, something like &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;&quot;&quot;&lt;/code&gt;... but &lt;strong&gt;ES5&lt;/strong&gt; one only will be replaced if only the passed value is truthy, that's because the way &lt;code&gt;||&lt;/code&gt; working...</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、値が&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6に&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;渡された場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、値が偽である場合でも、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それらに大きな違いがあり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。それは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;や&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などの新しい値に置き換えられ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ますが、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES5&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のみが置き換えられます渡された値が真実である、それは方法が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;||&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ワーキング...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="496bc61103d40addda856963187e0045e07c9265" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pre ES2015&lt;/strong&gt;,</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES2015&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;より&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;前&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="74dfb04bb73894935309615fd59d239f707fbee1" translate="yes" xml:space="preserve">
          <source>A default value expression can  even be an inline function expression call &amp;mdash; commonly referred to as an Immediately  Invoked Function Expression &lt;code&gt;(IIFE)&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デフォルト値の式は、インライン関数式の呼び出しにすることもできます&amp;mdash;一般に、即時呼び出し関数式&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(IIFE)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="946ca2004536bf5a6779b4388ca025c380cc9cb9" translate="yes" xml:space="preserve">
          <source>As an update...with ECMAScript 6 you can &lt;strong&gt;FINALLY&lt;/strong&gt; set default values in function parameter declarations like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更新として... ECMAScript 6を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用すると、次のように関数パラメーター宣言でデフォルト値を&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最終的に&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="62316394ed5cce8003d877099cd616621aa96f87" translate="yes" xml:space="preserve">
          <source>As of Aug 08 2016 this is still an issue</source>
          <target state="translated">2016年8月08日現在、これはまだ問題です</target>
        </trans-unit>
        <trans-unit id="7ed08eef90e65c3bf724886ff4908642f4b9a889" translate="yes" xml:space="preserve">
          <source>As per the syntax</source>
          <target state="translated">構文に沿って</target>
        </trans-unit>
        <trans-unit id="22362c6d18a531fc2093125bd9e97bdbdf688b6b" translate="yes" xml:space="preserve">
          <source>As referenced by - &lt;a href=&quot;http://es6-features.org/#DefaultParameterValues&quot;&gt;http://es6-features.org/#DefaultParameterValues&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照先&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://es6-features.org/#DefaultParameterValues&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-http://es6-features.org/#DefaultParameterValues&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df3926ef9039accae68637e7dd4c4e8f8d872f4b" translate="yes" xml:space="preserve">
          <source>As you can see, the default value expressions are lazily evaluated, meaning they&amp;rsquo;re  only run if and when they&amp;rsquo;re needed &amp;mdash; that is, when a parameter&amp;rsquo;s argument is omitted or is undefined.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ご覧のとおり、デフォルト値の式は遅延評価されます。つまり、必要な場合、つまりパラメーターの引数が省略されているか未定義の場合にのみ実行されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="781f8eeebd6bbf5b1583f1a7b34d1cf474e8c55a" translate="yes" xml:space="preserve">
          <source>Both functions have exact same behavior as each of these example rely on the fact that the parameter variable will be &lt;code&gt;undefined&lt;/code&gt; if no parameter value was passed when calling that function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらの例のそれぞれが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数を呼び出すときにパラメーター値が渡されなかった場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、パラメーター変数が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なるという事実に依存しているため、どちらの関数もまったく同じ動作&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6e59542c32c1dff4b11cb3079df135b4aee3391d" translate="yes" xml:space="preserve">
          <source>But beware that it doesn't work consistently across browsers. For me it worked on chrome on my desktop, but did not work on chrome on android.
Safer option, as many have mentioned above is -</source>
          <target state="translated">しかし、それはブラウザ間で一貫して動作しないことに注意してください。私の場合、デスクトップのクロームでは動作しましたが、アンドロイドのクロームでは動作しませんでした。より安全なオプションは、多くの人が上記で述べているように、次のとおりです。</target>
        </trans-unit>
        <trans-unit id="613060dd72b3dea57fe44c10899af377fbceccc1" translate="yes" xml:space="preserve">
          <source>But sometimes you don't really need default parameters.</source>
          <target state="translated">しかし、時にはデフォルトのパラメータは本当に必要ないこともあります。</target>
        </trans-unit>
        <trans-unit id="84108228e4471143b9530128fd9d15298a889acb" translate="yes" xml:space="preserve">
          <source>Default function parameters allow formal parameters to be initialized with default values if &lt;strong&gt;no value&lt;/strong&gt; or &lt;strong&gt;undefined&lt;/strong&gt; is passed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デフォルトの関数パラメータを使用すると&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、値&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が渡され&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なかっ&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たり&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;未定義のもの&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が渡された&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合に、仮パラメータをデフォルト値で初期化できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dbf4b4c4ad512a6f8288f9b15f81b8c5569dff67" translate="yes" xml:space="preserve">
          <source>Default function parameters allow formal parameters to be initialized with default values if no value or undefined is passed.</source>
          <target state="translated">デフォルトの関数パラメータでは、値または未定義が渡されなかった場合に、フォーマルパラメータをデフォルト値で初期化することができます。</target>
        </trans-unit>
        <trans-unit id="6691720beaa35faad3041799d80d8ce8b2bbd296" translate="yes" xml:space="preserve">
          <source>Default parameters are available to later default parameters:</source>
          <target state="translated">デフォルトパラメータは、後のデフォルトパラメータで利用可能です。</target>
        </trans-unit>
        <trans-unit id="0d7542bbfdb86324cfb1f0b53c559addff9cb700" translate="yes" xml:space="preserve">
          <source>Destructured paramet with default value assignment:</source>
          <target state="translated">デフォルト値が割り当てられた構造化されたパラメット.</target>
        </trans-unit>
        <trans-unit id="d464668060ce101288f32d3ff95f2e17f713d75b" translate="yes" xml:space="preserve">
          <source>Does this work in JavaScript?</source>
          <target state="translated">これはJavaScriptで動作しますか?</target>
        </trans-unit>
        <trans-unit id="c1c5bfbc8f38a53997da2c42f66e18692087a8dd" translate="yes" xml:space="preserve">
          <source>Evaluated at call time:</source>
          <target state="translated">コールタイムで評価。</target>
        </trans-unit>
        <trans-unit id="f65bebbc701dc6d888aa8ead819400a053911293" translate="yes" xml:space="preserve">
          <source>Even if the value is set explicitly when calling, the value of the num argument is the default one.</source>
          <target state="translated">呼び出し時に明示的に値が設定されていても、num引数の値がデフォルトの値となります。</target>
        </trans-unit>
        <trans-unit id="a4e51b2a8db648ffe58e6580b9953fb990953101" translate="yes" xml:space="preserve">
          <source>Even though this is Python 3 code due to the parentheses, default parameters in functions also work in JS.</source>
          <target state="translated">括弧の関係でPython 3のコードとはいえ、関数内のデフォルトパラメータはJSでも動作します。</target>
        </trans-unit>
        <trans-unit id="37479ffd8121057e6a6c4c2858091d95bcae8bc9" translate="yes" xml:space="preserve">
          <source>Example of the differences:</source>
          <target state="translated">違いの例。</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">スニペットを展開</target>
        </trans-unit>
        <trans-unit id="e8100f4d7a8f45a6eaa59dc0a5110ada170ace39" translate="yes" xml:space="preserve">
          <source>Following code may work in this situation including ECMAScript 6 (ES6) as well as earlier versions.</source>
          <target state="translated">以下のコードは、ECMAScript 6 (ES6)やそれ以前のバージョンを含めて、このような状況でも動作する可能性があります。</target>
        </trans-unit>
        <trans-unit id="9f9165d39d46d9c5eaa57933ffcb4838cd5b580b" translate="yes" xml:space="preserve">
          <source>For example, and in your case:</source>
          <target state="translated">例えば、あなたの場合は</target>
        </trans-unit>
        <trans-unit id="ed5cfb873667a00bc27a36a60d65ee2ced0b8b19" translate="yes" xml:space="preserve">
          <source>For maximum possible &lt;strong&gt;compatibility&lt;/strong&gt; use this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最大限の&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;互換性の&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ためにこれを使用してください：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="42c3fcbec06bf780115beb1710e13c723d0cbb11" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/&quot;&gt;ES6/ES2015&lt;/a&gt;, default parameters are in the language specification.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6 / ES2015&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、デフォルトのパラメータは、言語仕様です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d37a27183a78b6431aecadc39cf617b63decbcf3" translate="yes" xml:space="preserve">
          <source>Functions defined inside function body:</source>
          <target state="translated">関数本体内で定義された関数</target>
        </trans-unit>
        <trans-unit id="850b30a5b4317dc6ab4bd90a1a37df60cc4330b5" translate="yes" xml:space="preserve">
          <source>Here foo() is a function which has a parameter named argValue. If we don&amp;rsquo;t pass anything in the function call here, then the function throwIfNoValue() will be called and the returned result will be assigned to the only argument argValue. This is how a function call can be used as a default parameter. Which makes the code more simplified and readable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここでfoo（）は、argValueという名前のパラメーターを持つ関数です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで関数呼び出しで何も渡さない場合、関数throwIfNoValue（）が呼び出され、返された結果は唯一の引数argValueに割り当てられます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、関数呼び出しをデフォルトのパラメーターとして使用する方法です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これにより、コードがより単純化され、読みやすくなります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6e17344c38c84500c9b6a89e3b64d7e717d54c46" translate="yes" xml:space="preserve">
          <source>I find something simple like this to be much more concise and readable personally.</source>
          <target state="translated">このようなシンプルなものの方が、個人的にはずっと簡潔で読みやすいと感じています。</target>
        </trans-unit>
        <trans-unit id="c27f9c7150e4a00f2d6fb1f34529585e0492f020" translate="yes" xml:space="preserve">
          <source>I suggest you separate your required parameters form your optional/default valued arguments.  If your function takes 1,2, or 3 required parameters for which no default value makes sense, make them positional parameters to the function, any optional parameters should follow as named attributes of a single object. If your function takes 4 or more, perhaps it makes more sense to supply all arguments via attributes of a single object parameter.</source>
          <target state="translated">必須パラメータとオプションのデフォルト値の引数を分離することをお勧めします。関数が1,2,3個の必須パラメータを取り、デフォルト値が意味を成さない場合は、それらを関数の位置パラメータとし、オプションのパラメータは単一のオブジェクトの名前付き属性として後に続くようにします。関数が4つ以上のパラメータを取る場合は、すべての引数を単一のオブジェクトパラメータの属性で指定する方が理にかなっているかもしれません。</target>
        </trans-unit>
        <trans-unit id="245edd3f060963813c459ee4ed1dcbe0514251f4" translate="yes" xml:space="preserve">
          <source>I would highly recommend extreme caution when using default parameter values in javascript.  It often creates bugs when used in conjunction with higher order functions like &lt;code&gt;forEach&lt;/code&gt;, &lt;code&gt;map&lt;/code&gt;, and &lt;code&gt;reduce&lt;/code&gt;.  For example, consider this line of code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptでデフォルトのパラメーター値を使用する場合は、細心の注意を払うことを強くお勧めします。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;forEach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;map&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;reduce&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などの高次関数と組み合わせて使用​​すると、バグが発生することがよくあります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、次のコード行を考えてみます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4c5222352bc3362df51d0b6584a3b4a1b9a35350" translate="yes" xml:space="preserve">
          <source>I would like a JavaScript function to have optional arguments which I set a default on, which get used if the value isn't defined (and ignored if the value is passed). In Ruby you can do it like this:</source>
          <target state="translated">JavaScriptの関数にオプションの引数を持たせたいのですが、これはデフォルトで設定して、値が定義されていない場合に使用されます(値が渡された場合は無視されます)。Rubyでは以下のようにできます。</target>
        </trans-unit>
        <trans-unit id="e65f221dcb484b3f581d7afc7f58ae211c8b035c" translate="yes" xml:space="preserve">
          <source>If for some reason you are &lt;strong&gt;not&lt;/strong&gt; on ES6 and &lt;strong&gt;are&lt;/strong&gt; using &lt;a href=&quot;https://lodash.com/&quot;&gt;&lt;code&gt;lodash&lt;/code&gt;&lt;/a&gt; here is a concise way to default function parameters via &lt;a href=&quot;https://lodash.com/docs/4.17.10#defaultTo&quot;&gt;&lt;code&gt;_.defaultTo&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;何らかの理由であなたがしている場合&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ではない&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ES6上と&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;されている&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://lodash.com/&quot;&gt; &lt;code&gt;lodash&lt;/code&gt; を&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここを経由して、デフォルト関数パラメータに簡潔な方法です&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://lodash.com/docs/4.17.10#defaultTo&quot;&gt; &lt;code&gt;_.defaultTo&lt;/code&gt; の&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法は：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9ca6bd841517ffbe23a58bba17612da8902f5c15" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;ES6+&lt;/code&gt; you can set default parameters in the following manner:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;ES6+&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用している場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、次の方法でデフォルトパラメータを設定できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5700d1f516c84207395176becbfc6ea4cc8651b" translate="yes" xml:space="preserve">
          <source>If you need &lt;code&gt;ES5&lt;/code&gt; syntax you can do it in the following manner:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;ES5&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;構文&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が必要な場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、次の方法で行うことができます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3db7f71ee33fab123ab9624d4a265404f43de2a0" translate="yes" xml:space="preserve">
          <source>In ECMAScript 6 you will actually be able to write exactly what you have:</source>
          <target state="translated">ECMAScript 6では、実際に自分の持っているものを正確に書くことができるようになります。</target>
        </trans-unit>
        <trans-unit id="cba6f28a950187b158dfde3d08182b327c4b2139" translate="yes" xml:space="preserve">
          <source>In both of my examples, it returns the same thing. But sometimes they actually could be useful, like in very advanced projects.</source>
          <target state="translated">私の例では、どちらも同じものを返します。しかし、非常に高度なプロジェクトのように、実際に役に立つこともあります。</target>
        </trans-unit>
        <trans-unit id="32ab9a15f708ee853c7899604efe70638ec3d179" translate="yes" xml:space="preserve">
          <source>In future, you will be able to &quot;spread&quot; one object to another (currently as of 2019 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax#Spread_in_object_literals&quot;&gt;NOT supported by Edge&lt;/a&gt;!) - demonstration how to use that for nice default options regardless of order:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将来的には、1つのオブジェクトを別のオブジェクトに「広げる」ことができるようになります（現在のところ、2019では&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax#Spread_in_object_literals&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Edgeではサポートされていません&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;！）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2d313824c988630b177861659f3b24a327951d74" translate="yes" xml:space="preserve">
          <source>In that example Edge will throw an error &quot;Expecting ')'&quot;</source>
          <target state="translated">この例では、Edgeは &quot;Expecting ')'というエラーをスローします。</target>
        </trans-unit>
        <trans-unit id="b67634c92e009372a6153f43e4f94808b202a233" translate="yes" xml:space="preserve">
          <source>In the above syntax the &lt;code&gt;OR&lt;/code&gt; operator is used. The &lt;code&gt;OR&lt;/code&gt; operator always returns the first value if this can be converted to &lt;code&gt;true&lt;/code&gt; if not it returns the righthandside value. When the function is called with no corresponding argument the parameter variable (&lt;code&gt;bar&lt;/code&gt; in  our example) is set to &lt;code&gt;undefined&lt;/code&gt; by the JS engine. &lt;code&gt;undefined&lt;/code&gt; Is then converted to false and thus does the &lt;code&gt;OR&lt;/code&gt; operator return the value 0.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記の構文では、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;OR&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;演算子が使用されています。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;OR&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これはに変換することができれば、オペレータは、常に最初の値を返し&lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それはrighthandside値を返していない場合。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;対応する引数なしで関数が呼び出されると、パラメーター変数（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この例では&lt;/font&gt;&lt;/font&gt; &lt;code&gt;bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSエンジンによって&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はfalseに変換されるため、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;OR&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;演算子は値0を返します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e941ddf1be4c5bdf89cab216c273f93c0b04ff2" translate="yes" xml:space="preserve">
          <source>In the past, the general strategy for setting defaults was to test parameter values in the body of the function and assign a value if they are undefined.  If no value is provided in the call, its value would be undefined.  You would have to set a conditional check to make sure the parameter is not undefined</source>
          <target state="translated">過去には、デフォルトを設定するための一般的な戦略は、関数のボディでパラメータの値をテストし、未定義の場合は値を代入することでした。呼び出しで値が提供されていない場合、その値は未定義になります。パラメータが未定義でないことを確認するために条件付きチェックを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="823438a045cba6beb9efe467ace039bd4a01df93" translate="yes" xml:space="preserve">
          <source>In your case I would suggest you write your deleteFile function like this: (&lt;em&gt;edited per&lt;/em&gt;&lt;code&gt;instead&lt;/code&gt;'s &lt;em&gt;comments&lt;/em&gt;)...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたのケースでは、次のようにdeleteFile関数を書くことをお勧めします：（&lt;/font&gt; &lt;code&gt;instead&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コメント&lt;/font&gt;&lt;/em&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ごと&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;編集&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）...&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a4d782abd324202d50d8ea7d61df8c82ecc48d9" translate="yes" xml:space="preserve">
          <source>Intention for this answer is not to repeat the same solutions, what others have already mentioned, but to inform that parameter assignment in the function definition may work on some browsers, but don't rely on it.</source>
          <target state="translated">この回答の意図は、他の人がすでに述べたような同じ解決策を繰り返すことではなく、関数定義のパラメータ代入はブラウザによっては動作するかもしれないが、それに依存しないことを知らせることです。</target>
        </trans-unit>
        <trans-unit id="3dcbd5fbe52bfe38a3e1d75a7bab77b7ac1ebafc" translate="yes" xml:space="preserve">
          <source>Introduced in Gecko 33 (Firefox 33 / Thunderbird 33 / SeaMonkey 2.30). Functions declared in the function body cannot be referred inside default parameters and throw a ReferenceError (currently a TypeError in SpiderMonkey, see bug 1022967). Default parameters are always executed first, function declarations inside the function body evaluate afterwards.</source>
          <target state="translated">Gecko 33 (Firefox 33 Thunderbird 33 SeaMonkey 2.30)で導入されました。関数本体内で宣言された関数は、デフォルトパラメータ内で参照することができず、ReferenceError をスローします (現在 SpiderMonkey では TypeError となっています。バグ 1022967 を参照)。デフォルトパラメータは常に最初に実行され、関数本体内の関数宣言はその後に評価されます。</target>
        </trans-unit>
        <trans-unit id="4e07843b97f90dd0d6ea5f9fceaf5285ee46f866" translate="yes" xml:space="preserve">
          <source>It is called &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters&quot;&gt;&lt;code&gt;default function parameters&lt;/code&gt;&lt;/a&gt;. It allows formal parameters to be initialized with default values if no value or undefined is passed.
&lt;strong&gt;NOTE&lt;/strong&gt;: It wont work with Internet Explorer or older browsers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters&quot;&gt; &lt;code&gt;default function parameters&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値がない場合、または未定義の場合、仮パラメーターをデフォルト値で初期化できます。 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：Internet Explorerまたは古いブラウザーでは機能しません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3997231db0e311bace94bc5b7dbdab4f91ad47a3" translate="yes" xml:space="preserve">
          <source>Just a different approach to set default params is to use object map of arguments, instead of arguments directly.
For example,</source>
          <target state="translated">デフォルトのパラメータを設定するための別のアプローチは、引数を直接指定するのではなく、引数のオブジェクトマップを使用することです。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="97fa75a8c8b03e32d2c07abb7adddf77b27073c6" translate="yes" xml:space="preserve">
          <source>Just to showcase my skills too (lol), above function can written even without having named arguments as below:</source>
          <target state="translated">私の腕の見せ所でもありますが(笑)、上記の関数は以下のように引数に名前を付けなくても書くことができます。</target>
        </trans-unit>
        <trans-unit id="039a39e42be99248727de38412b21d19bacd4f05" translate="yes" xml:space="preserve">
          <source>Just use an explicit comparison with undefined.</source>
          <target state="translated">未定義との明示的な比較を使えばいいだけです。</target>
        </trans-unit>
        <trans-unit id="9bb2ea7d50adfde8a6edf9fa7ff75b78ff1a47ac" translate="yes" xml:space="preserve">
          <source>MDN reference: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MDNリファレンス：&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3fdf20022629c91bd80c14eebe177ab90b82c63b" translate="yes" xml:space="preserve">
          <source>Padding undefined vs other falsy values:</source>
          <target state="translated">未定義のパディングと他のファルシ値の比較。</target>
        </trans-unit>
        <trans-unit id="10462f1b798f0869bbee59ed5b666a65f32ca076" translate="yes" xml:space="preserve">
          <source>Parameters of functions default to undefined However, in situations it might be useful to set a different default value.  This is where default parameters can help.</source>
          <target state="translated">関数のパラメータのデフォルトは未定義ですが、状況によっては異なるデフォルト値を設定しておくと便利かもしれません。そこで、デフォルトのパラメータが役立ちます。</target>
        </trans-unit>
        <trans-unit id="d9fe184d29f30ad3005ce0d3f440a3b9a6d0b476" translate="yes" xml:space="preserve">
          <source>Parameters without defaults after default parameters:</source>
          <target state="translated">デフォルトのパラメータの後にデフォルトのないパラメータ</target>
        </trans-unit>
        <trans-unit id="95296dab257693688f5343ec889a6d4218fa64d9" translate="yes" xml:space="preserve">
          <source>Params already encountered are available to later default parameters</source>
          <target state="translated">すでに遭遇したパラメータは、後のデフォルトパラメータで利用可能です。</target>
        </trans-unit>
        <trans-unit id="839291f0e837b8a5b0bdc9c608b24519dff4c947" translate="yes" xml:space="preserve">
          <source>Prior to Gecko 26 (Firefox 26 / Thunderbird 26 / SeaMonkey 2.23 / Firefox OS 1.2), the following code resulted in a SyntaxError. This has been fixed in bug 777060 and works as expected in later versions. Parameters are still set left-to-right, overwriting default parameters even if there are later parameters without defaults.</source>
          <target state="translated">Gecko 26 (Firefox 26 Thunderbird 26 SeaMonkey 2.23 Firefox OS 1.2)より前のバージョンでは、以下のコードで SyntaxError が発生していました。これはバグ 777060 で修正されており、それ以降のバージョンでは期待通りに動作します。パラメータはまだ左から右に設定されており、デフォルトのない後続のパラメータがあってもデフォルトのパラメータを上書きします。</target>
        </trans-unit>
        <trans-unit id="f9c4379a1bd7cf5cd8c0b773a075bc7b18894700" translate="yes" xml:space="preserve">
          <source>Reference: &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/default_parameters&quot;&gt;Default Parameters - MDN&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;リファレンス：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/default_parameters&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デフォルトパラメータ-MDN&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af252460f9d22ca0fd78fc06cef6efe15e1d8662" translate="yes" xml:space="preserve">
          <source>Running the above snippet illustrates the dangers lurking behind default argument values for unused parameters.</source>
          <target state="translated">上記のスニペットを実行すると、未使用のパラメータのデフォルト引数値に潜む危険性がわかります。</target>
        </trans-unit>
        <trans-unit id="04b51c6a3fa46cfb7e42095f90472e726952248e" translate="yes" xml:space="preserve">
          <source>Set a default parameter value for a JavaScript function</source>
          <target state="translated">JavaScript 関数のデフォルトのパラメータ値を設定する</target>
        </trans-unit>
        <trans-unit id="f91361cb98835d92e6aa8888a9e92c0c91b0fd06" translate="yes" xml:space="preserve">
          <source>Similarly you could do</source>
          <target state="translated">同様に、あなたはできることができます。</target>
        </trans-unit>
        <trans-unit id="9d31632dbb98f479fba9189ffdf888014e8a8a83" translate="yes" xml:space="preserve">
          <source>So, in conclusion, default parameter values can be used in JS. But it is almost the same thing as defining a variable right after the start of the function. However, sometimes they are still very useful. As you have may noticed, default parameter values take 1 less line of code than the standard way which is defining the parameter right after the start of the function.</source>
          <target state="translated">ということで、結論から言うと、JSではデフォルトのパラメータ値を使うことができます。しかし、関数の開始直後に変数を定義するのとほぼ同じです。しかし、時にはそれらはまだ非常に便利な場合もあります。お気づきかもしれませんが、デフォルトのパラメータ値は、関数の開始直後にパラメータを定義する標準的な方法に比べて、1行のコード量が少なくて済みます。</target>
        </trans-unit>
        <trans-unit id="fc84230567d1190baa1d8ada9cc7ae6f1d043a43" translate="yes" xml:space="preserve">
          <source>Sounds of Future</source>
          <target state="translated">未来の音</target>
        </trans-unit>
        <trans-unit id="1de8dba368e7754dc199c99b017f5c51265ee8dc" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Syntax:</target>
        </trans-unit>
        <trans-unit id="d9e37253bf944fe8ca835e4384a7e8032e3cc33a" translate="yes" xml:space="preserve">
          <source>The answer is yes. In fact, there are many languages who support default parameters. Python is one of them:</source>
          <target state="translated">答えはイエスです。実際、デフォルトのパラメータをサポートしている言語はたくさんあります。Pythonもその一つです。</target>
        </trans-unit>
        <trans-unit id="7f894d523690aa9c1b140a5b76e9e95819d91d2d" translate="yes" xml:space="preserve">
          <source>The default argument gets evaluated at call time, so unlike some other languages, a new object is created each time the function is called.</source>
          <target state="translated">デフォルトの引数は呼び出し時に評価されるので、他の言語とは異なり、関数が呼び出されるたびに新しいオブジェクトが作成されます。</target>
        </trans-unit>
        <trans-unit id="247676b4cc4c7e8417726831fa056f36394812db" translate="yes" xml:space="preserve">
          <source>There are a lot of ways, but this is my preferred method &amp;mdash; it lets you pass in anything you want, including false or null. (&lt;code&gt;typeof null == &quot;object&quot;&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法はたくさんありますが、これが私の推奨する方法です。falseやnullなど、必要なものを何でも渡すことができます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof null == &quot;object&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="400c9917dc434a4f097147cf8d28ab84855653a2" translate="yes" xml:space="preserve">
          <source>This approach does not work if you want to pass in a &lt;em&gt;falsey&lt;/em&gt; value i.e. &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;&quot;&quot;&lt;/code&gt;. If you require &lt;em&gt;falsey&lt;/em&gt; values to be passed in you would need to use the method in &lt;a href=&quot;https://stackoverflow.com/questions/894860/how-do-i-make-a-default-value-for-a-parameter-to-a-javascript-function/894877#894877&quot;&gt;Tom Ritter's answer&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このアプローチは、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;false&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値、つまり&lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を渡す場合には機能しません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたが必要な場合&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;falsey&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたに渡される値の方法を使用する必要があります&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/894860/how-do-i-make-a-default-value-for-a-parameter-to-a-javascript-function/894877#894877&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;トム・リッターの答え&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91b1b5924c56d291655c2bc0e9f6f565fb9bd681" translate="yes" xml:space="preserve">
          <source>This assigns to &lt;code&gt;delete_after&lt;/code&gt; the value of &lt;code&gt;delete_after&lt;/code&gt; if it is not a &lt;em&gt;falsey&lt;/em&gt; value otherwise it assigns the string &lt;code&gt;&quot;my default here&quot;&lt;/code&gt;. For more detail, check out &lt;a href=&quot;http://crockford.com/javascript/survey.html&quot;&gt;Doug Crockford's survey of the language and check out the section on Operators&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;false_value&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でない場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;delete_after&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の値を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;delete_after&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に割り当て、それ以外の場合は文字列&lt;/font&gt; &lt;code&gt;&quot;my default here&quot;&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;割り当て&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細については、&lt;/font&gt;&lt;a href=&quot;http://crockford.com/javascript/survey.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Doug Crockfordによる言語の調査とオペレーターのセクションを&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ご覧ください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eea3c5d8a36259817c5ef9f79c142a5220d8b743" translate="yes" xml:space="preserve">
          <source>This example has been taken from here</source>
          <target state="translated">この例はここから引用しています。</target>
        </trans-unit>
        <trans-unit id="e3c71fdcc0a80e4c19583edca68ac47768c68fdf" translate="yes" xml:space="preserve">
          <source>This pattern is most used, but is dangerous when we pass values like</source>
          <target state="translated">このパターンは最もよく使われるパターンですが、次のような値を渡すと危険です。</target>
        </trans-unit>
        <trans-unit id="fe6c6bfad877d3a9487d0b8861cf092ab898675e" translate="yes" xml:space="preserve">
          <source>This way, it's easy to extend the arguments and not worry about argument length mismatch.</source>
          <target state="translated">こうすることで、引数を拡張しやすくなり、引数の長さの不一致を気にしなくて済むようになります。</target>
        </trans-unit>
        <trans-unit id="40751748325177ee0ebf599ab7649ba16b9f9e3b" translate="yes" xml:space="preserve">
          <source>This will set &lt;code&gt;delete_after&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; if it s not present or &lt;code&gt;undefined&lt;/code&gt;. You can use ES6 features like this one today with transpilers such as &lt;a href=&quot;http://babeljs.io/&quot;&gt;Babel&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;存在しないか&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;の場合、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;delete_after&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;今日、このようなES6機能を&lt;/font&gt;&lt;a href=&quot;http://babeljs.io/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Babel&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などのトランスパイラーで使用できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc8f8af2c67a3c7ab46922f08b99853eea95e4d4" translate="yes" xml:space="preserve">
          <source>To anyone interested in having there code work in Microsoft Edge, do not use defaults in function parameters.</source>
          <target state="translated">Microsoft Edgeでコードを動作させたいと思っている人は、関数のパラメータにデフォルトを使用しないでください。</target>
        </trans-unit>
        <trans-unit id="71410a2989810220db78e104bd7dad03fc61a475" translate="yes" xml:space="preserve">
          <source>To get around this use</source>
          <target state="translated">この使用を回避するには</target>
        </trans-unit>
        <trans-unit id="65546fd0eba57be4ffe7633e16b84efba40ea53a" translate="yes" xml:space="preserve">
          <source>Use this if you want to use latest &lt;strong&gt;&lt;code&gt;ECMA6&lt;/code&gt;&lt;/strong&gt; syntax:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最新の&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;ECMA6&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;構文&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する場合は、これを使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6e84f8de23cb2f4f29bbdaf89f76c474c62c8685" translate="yes" xml:space="preserve">
          <source>When dealing with a number of parameters to a function, it is often useful to allow the consumer to pass the parameter arguments in an object and then &lt;em&gt;merge&lt;/em&gt; these values with an object that contains the default values for the function</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数への多数のパラメーターを処理する場合、コンシューマーがオブジェクトのパラメーター引数を渡して、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらの値を関数のデフォルト値を含む&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトと&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;マージ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;できるようにすることがしばしば役立ち&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d46f669bfb5f84c4a5b57e6979ffefba4bb8112" translate="yes" xml:space="preserve">
          <source>Which means if the value is there, use the value, otherwise, use the second value after &lt;code&gt;||&lt;/code&gt; operation which does the same thing...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、値が存在する場合は値を使用し、それ以外の場合は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;||&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;後に2番目の値を使用します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同じことをする操作...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f36b47e8b73bd70384fcc97a9b37b4e1dab4e37a" translate="yes" xml:space="preserve">
          <source>Which will set the default if the current value is &lt;strong&gt;NaN&lt;/strong&gt;, &lt;strong&gt;null&lt;/strong&gt;, or &lt;strong&gt;undefined&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;現在の値が&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NaN&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;null&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、または&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;未定義の&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合にデフォルトを設定します&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="03230891475b8cb81ce72113308dbebbe6449f4c" translate="yes" xml:space="preserve">
          <source>Why? Because the &lt;code&gt;0 is falsy&lt;/code&gt;, and so the &lt;code&gt;x || 11 results in 11&lt;/code&gt;, not the directly passed  in 0. To fix this gotcha, some people will instead write the check more verbosely like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どうして？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なぜなら&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0 is falsy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、そのため&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x || 11 results in 11&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は0に直接渡されるのではなく&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;11&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;になります。この問題を修正するために、代わりに次のようにチェックを冗長に書く人もいます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="88b4d9b1596ac9833e490d164cda3889e3fa9e56" translate="yes" xml:space="preserve">
          <source>With ES6, you can do perhaps one of the most common idioms in &lt;code&gt;JavaScript&lt;/code&gt; relates to setting a default  value for a function parameter. The way we&amp;rsquo;ve done this for years should look quite  familiar:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用すると、関数パラメーターのデフォルト値の設定に関連する&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JavaScript&lt;/code&gt; で&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最も一般的なイディオムの1つを実行でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私たちが何年にもわたってこれを行ってきた方法は、かなりおなじみのはずです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4965253739fcb5abc8e1667b543ca5b8a779c89e" translate="yes" xml:space="preserve">
          <source>With default parameters in ES2015, the check in the function body is no longer necessary.  Now you can simply put a default value in the function head.</source>
          <target state="translated">ES2015のデフォルトパラメータでは、関数本体でのチェックが不要になりました。これで、関数の先頭にデフォルト値を入れるだけで済むようになりました。</target>
        </trans-unit>
        <trans-unit id="08661d224189892c8418f5e1f5b3f1ef24e7bd9c" translate="yes" xml:space="preserve">
          <source>Yeah this is referred to as a default parameter</source>
          <target state="translated">ええ、これはデフォルトのパラメータと呼ばれています</target>
        </trans-unit>
        <trans-unit id="79e352ef94fceec24ae22b2b33eb25178016021b" translate="yes" xml:space="preserve">
          <source>Yes, This will work in Javascript. You can also do that:</source>
          <target state="translated">はい、これはJavascriptで動作します。もできます。</target>
        </trans-unit>
        <trans-unit id="4e71590a32c1fac3e0376debbf542dc7aeb43c76" translate="yes" xml:space="preserve">
          <source>Yes, using default parameters is fully supported in &lt;strong&gt;ES6&lt;/strong&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はい、デフォルトパラメータの使用は&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6で&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;完全にサポートされています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="58847e7ed0702ff33493383e47ab5474ce52eb39" translate="yes" xml:space="preserve">
          <source>You can also &lt;a href=&quot;http://exploringjs.com/es6/ch_parameter-handling.html#sec_named-parameters&quot;&gt;simulate default &lt;em&gt;named&lt;/em&gt; parameters via destructuring&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://exploringjs.com/es6/ch_parameter-handling.html#sec_named-parameters&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;分解により、デフォルトの&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名前付き&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パラメーターを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;シミュレート&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;することもでき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f7f4590cbb4558c4523e6abe59b33ce7e64c328" translate="yes" xml:space="preserve">
          <source>You can just define the variable right after the start of the function, like this:</source>
          <target state="translated">このように、関数の開始直後に変数を定義すればよいのです。</target>
        </trans-unit>
        <trans-unit id="05fb22b46524168eb403aae2cdfacafdbbd8171c" translate="yes" xml:space="preserve">
          <source>You can use default value assignment with the destructuring assignment notation</source>
          <target state="translated">デフォルト値の代入は、破壊的代入記法を使用して使用することができます。</target>
        </trans-unit>
        <trans-unit id="a35c97d5d84888973714ee5c3f4a3ce3163cdd82" translate="yes" xml:space="preserve">
          <source>as default value in languages works when the function's parameter value is skipped when calling, in JavaScript it is assigned to &lt;strong&gt;undefined&lt;/strong&gt;. This approach doesn't look attractive programmatically but have &lt;strong&gt;backward compatibility&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;言語ではデフォルト値が機能するため、呼び出し時に関数のパラメーター値がスキップされると、JavaScriptでは&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;undefinedに&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;割り当てられ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このアプローチはプログラム的には魅力的に見えませんが、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;下位互換性があり&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="72bccac1c822534f251d2d719d61c5c79d44b6fa" translate="yes" xml:space="preserve">
          <source>being a long time C++ developer (Rookie to web development :)), when I first came across this situation, I did the parameter assignment in the function definition, like it is mentioned in the question, as follows.</source>
          <target state="translated">長年のC++開発者(Web開発ルーキー)である私は、初めてこの状況に遭遇したとき、質問にあるように関数定義でパラメータを代入してみました。</target>
        </trans-unit>
        <trans-unit id="fcba8d4dfca6ab6478fbdbb657fbf6c6f351bed7" translate="yes" xml:space="preserve">
          <source>but prior in &lt;strong&gt;ES5&lt;/strong&gt; you could easily do this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、以前の&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES5&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;では、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを簡単に行うことができました。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac58fc95baa0f8d5dd7f81237a9e9d0b1797a829" translate="yes" xml:space="preserve">
          <source>just works.</source>
          <target state="translated">ただの仕事だ</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="80b8f94a904451948a32d0d30f7a3ce9a8011af8" translate="yes" xml:space="preserve">
          <source>parseInt has an optional second parameter &lt;code&gt;function parseInt(s, [&lt;/code&gt;&lt;strong&gt;radix&lt;/strong&gt;&lt;code&gt;=10])&lt;/code&gt; but map calls &lt;code&gt;parseInt&lt;/code&gt; with three arguments: (&lt;em&gt;element&lt;/em&gt;, &lt;em&gt;index&lt;/em&gt;, and &lt;em&gt;array&lt;/em&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;parseIntにはオプションの2番目のパラメーター&lt;/font&gt;&lt;/font&gt; &lt;code&gt;function parseInt(s, [&lt;/code&gt; &lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;radix &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt; &lt;code&gt;=10])&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;parseInt&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、マップは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;parseInt&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を3つの引数（&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;element&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;index&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、および&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;array&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2bfb1b459448d674baec7e32cdc2a2a537b3a8b9" translate="yes" xml:space="preserve">
          <source>that solution is work for me in js:</source>
          <target state="translated">そのソリューションはjsで動作します。</target>
        </trans-unit>
        <trans-unit id="ba49a7f2ef2658f103ba241184dd655f5fbf47a7" translate="yes" xml:space="preserve">
          <source>to use</source>
          <target state="translated">使うために</target>
        </trans-unit>
        <trans-unit id="5077977008d024bba3b63d8dfd7b0fc26d149a77" translate="yes" xml:space="preserve">
          <source>we can now examine a nice helpful syntax added as of &lt;code&gt;ES6&lt;/code&gt; to  streamline the assignment of default values to missing arguments:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;ES6&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;追加された便利な構文を調べて、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;欠落している引数へのデフォルト値の割り当てを効率化できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="084a5f75c7b5ede3ae0dc5880d023a35beaf1e38" translate="yes" xml:space="preserve">
          <source>you can define the default value of formal parameters.
and also check undefined value by using &lt;strong&gt;typeof&lt;/strong&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仮パラメータのデフォルト値を定義できます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して未定義の値を確認し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
