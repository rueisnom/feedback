<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/8028957">
    <body>
      <group id="8028957">
        <trans-unit id="c311ea9cf5d7e520cd5ef6b405aa4914125ac95e" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;To avoid this, simply leave out the closing &lt;code&gt;?&amp;gt;&lt;/code&gt; - it's not required anyways.</source>
          <target state="translated">これを回避するには、最後の部分を省略し &lt;code&gt;?&amp;gt;&lt;/code&gt; -とにかく必要ありません。</target>
        </trans-unit>
        <trans-unit id="b775a598148446a2dcc7af53d651b2f82fcd57b1" translate="yes" xml:space="preserve">
          <source>(Of course they're furthermore affected by disabled cookies in the browser,
or even proxy issues. The session functionality obviously also depends on free
disk space and other php.ini settings, etc.)</source>
          <target state="translated">(もちろん、ブラウザの無効化されたクッキーやプロキシの問題によっても影響を受けます。セッション機能は明らかにディスクの空き容量やphp.iniの設定などにも依存します)</target>
        </trans-unit>
        <trans-unit id="6ba88d92adfd7dfeb2827485bbbcfbbd047f0175" translate="yes" xml:space="preserve">
          <source>(copied from: &lt;a href=&quot;https://stackoverflow.com/a/24928578/2377343&quot;&gt;source&lt;/a&gt;)</source>
          <target state="translated">（コピー&lt;a href=&quot;https://stackoverflow.com/a/24928578/2377343&quot;&gt;元&lt;/a&gt; ： ソース ）</target>
        </trans-unit>
        <trans-unit id="1cebd4db8c10209214d65022870a326a5c80f5f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;Byte order marks&lt;/a&gt; at the beginning of a php file. Examine your php files with a hex editor to find out whether that's the case. They should start with the bytes &lt;code&gt;3F 3C&lt;/code&gt;. You can safely remove the BOM &lt;code&gt;EF BB BF&lt;/code&gt; from the start of files.</source>
          <target state="translated">phpファイルの先頭にある&lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;バイトオーダーマーク&lt;/a&gt; 。 16進エディタを使用してphpファイルを調べ、そうであるかどうかを確認します。 それらは、バイト &lt;code&gt;3F 3C&lt;/code&gt; で始まる必要があります。 ファイルの先頭からBOM &lt;code&gt;EF BB BF&lt;/code&gt; を安全に削除できます。</target>
        </trans-unit>
        <trans-unit id="163baa1988aa61f9f3f74b26d4da09067d959a9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/header&quot;&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;http://php.net/header_remove&quot;&gt;&lt;code&gt;header_remove&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://php.net/header&quot;&gt; &lt;code&gt;header&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;http://php.net/header_remove&quot;&gt; &lt;code&gt;header_remove&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7557146aa6581e6030d4f6c9e968a0c1d8d97ceb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/session_start&quot;&gt;&lt;code&gt;session_start&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;http://php.net/session_regenerate_id&quot;&gt;&lt;code&gt;session_regenerate_id&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://php.net/session_start&quot;&gt; &lt;code&gt;session_start&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;http://php.net/session_regenerate_id&quot;&gt; &lt;code&gt;session_regenerate_id&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47e886f065f1089cbec9111b8a1c546c32a14ebc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/setcookie&quot;&gt;&lt;code&gt;setcookie&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;http://php.net/setrawcookie&quot;&gt;&lt;code&gt;setrawcookie&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://php.net/setcookie&quot;&gt; &lt;code&gt;setcookie&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;http://php.net/setrawcookie&quot;&gt; &lt;code&gt;setrawcookie&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c4a6a1a600111ff22d3739ace4b9a1b3379e97b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;print&lt;/code&gt;, &lt;code&gt;echo&lt;/code&gt; and other functions producing output</source>
          <target state="translated">&lt;code&gt;print&lt;/code&gt; 、 &lt;code&gt;echo&lt;/code&gt; 、および出力を生成するその他の関数</target>
        </trans-unit>
        <trans-unit id="e391141344cfe1a0358c9920e0879f71283d47fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;print&lt;/code&gt;, &lt;code&gt;echo&lt;/code&gt;, &lt;code&gt;printf&lt;/code&gt;, &lt;code&gt;vprintf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;print&lt;/code&gt; 、 &lt;code&gt;echo&lt;/code&gt; 、 &lt;code&gt;printf&lt;/code&gt; 、 &lt;code&gt;vprintf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9273b2288b736277f134ab1aa846e24da54b8e0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;readfile&lt;/code&gt;, &lt;code&gt;passthru&lt;/code&gt;, &lt;code&gt;flush&lt;/code&gt;, &lt;code&gt;imagepng&lt;/code&gt;, &lt;code&gt;imagejpeg&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;readfile&lt;/code&gt; 、 passthru 、 &lt;code&gt;flush&lt;/code&gt; 、 &lt;code&gt;imagepng&lt;/code&gt; 、 &lt;code&gt;imagejpeg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b634c6c1b82947f8f3e0cd2be91adad2768614cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trigger_error&lt;/code&gt;, &lt;code&gt;ob_flush&lt;/code&gt;, &lt;code&gt;ob_end_flush&lt;/code&gt;, &lt;code&gt;var_dump&lt;/code&gt;, &lt;code&gt;print_r&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;trigger_error&lt;/code&gt; 、 &lt;code&gt;ob_flush&lt;/code&gt; 、 &lt;code&gt;ob_end_flush&lt;/code&gt; 、 &lt;code&gt;var_dump&lt;/code&gt; 、 &lt;code&gt;print_r&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e97292207b7856687bc45fbe9f75751b96d3c40a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;All PHP files MUST end with a &lt;code&gt;single blank line&lt;/code&gt;.&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;strong&gt;すべてのPHPファイルは &lt;code&gt;single blank line&lt;/code&gt; 終了する必要があります。&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="adbdfe076cf9d580974a9cd6ffbea42235179077" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;All PHP files MUST use the &lt;code&gt;Unix LF (linefeed) line ending&lt;/code&gt;.&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;strong&gt;すべてのPHPファイルは、 &lt;code&gt;Unix LF (linefeed) line ending&lt;/code&gt; 使用する必要があります。&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="69119f41f4d41a999365f11fc9ca3b06af7a94c0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;The closing ?&amp;gt; tag MUST be &lt;code&gt;omitted&lt;/code&gt; from files containing &lt;code&gt;only php&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;strong&gt; &lt;code&gt;only php&lt;/code&gt; を含むファイルでは、終了？&amp;gt;タグを &lt;code&gt;omitted&lt;/code&gt; しなければなりません&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="847ce2d775f9c374d11e892130ff87f0cb42eee3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Intentional:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Intentional:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7f6c93eff29d8434aae4ec42897b16c2d4a56925" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Typical causes:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;典型的な原因：&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a7817a8ce4f3454eb2b09d325d89f0ac42c1a078" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Unintentional:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Unintentional:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b179df85a17f8a95e180f9bbe24478851fd69e26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1)&lt;/strong&gt; there should not be any output (i.e. &lt;strong&gt;&lt;code&gt;echo..&lt;/code&gt;&lt;/strong&gt; or HTML codes) before the &lt;strong&gt;&lt;code&gt;header(.......);&lt;/code&gt;&lt;/strong&gt; command.</source>
          <target state="translated">&lt;strong&gt;1）&lt;/strong&gt; &lt;strong&gt; &lt;code&gt;header(.......);&lt;/code&gt; の&lt;/strong&gt;前に出力（ &lt;strong&gt; &lt;code&gt;echo..&lt;/code&gt; &lt;/strong&gt;またはHTMLコード&lt;strong&gt;）&lt;/strong&gt;があってはなりません&lt;strong&gt;。&lt;/strong&gt; コマンド。</target>
        </trans-unit>
        <trans-unit id="d3fea5f4e93ef673ad9a9e3fd1fe389b388e2185" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2)&lt;/strong&gt; remove any &lt;strong&gt;white-space&lt;/strong&gt;(or &lt;strong&gt;newline&lt;/strong&gt;) before &lt;code&gt;&amp;lt;?php&lt;/code&gt; and after &lt;code&gt;?&amp;gt;&lt;/code&gt; tags.</source>
          <target state="translated">&lt;strong&gt;2）&lt;/strong&gt; &lt;code&gt;&amp;lt;?php&lt;/code&gt; タグの前と &lt;code&gt;?&amp;gt;&lt;/code&gt; タグの後の&lt;strong&gt;空白&lt;/strong&gt; （または&lt;strong&gt;改行&lt;/strong&gt; &lt;strong&gt;）を&lt;/strong&gt;削除します。</target>
        </trans-unit>
        <trans-unit id="ebe5047f706f5d69e9071ce1cfd629cf122fc6ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;3)&lt;/strong&gt;&lt;strong&gt;GOLDEN RULE!&lt;/strong&gt; - check if that php file (and also, if you &lt;code&gt;include&lt;/code&gt; other files) have &lt;strong&gt;UTF8 without BOM&lt;/strong&gt; encoding (and not just &lt;strong&gt;UTF-8&lt;/strong&gt;). That is problem in many cases (because &lt;strong&gt;UTF8&lt;/strong&gt; encoded file has something special character in the start of php file, which your text-editor doesnt show)!!!!!!!!!!!</source>
          <target state="translated">&lt;strong&gt;3）&lt;/strong&gt; &lt;strong&gt;ゴールデンルール！&lt;/strong&gt; -そのphpファイル（および &lt;code&gt;include&lt;/code&gt; 他のファイルを含める場合）に&lt;strong&gt;BOM&lt;/strong&gt;エンコード&lt;strong&gt;なしのUTF8がある&lt;/strong&gt;かどうかを確認します（ &lt;strong&gt;UTF-8&lt;/strong&gt;だけではありません）。 これは多くの場合問題です（ &lt;strong&gt;UTF8で&lt;/strong&gt;エンコードされたファイルには、phpファイルの先頭にテキストエディタでは表示されない特殊文字が含まれているためです）!!!!!!!!!!!!</target>
        </trans-unit>
        <trans-unit id="229fec9818cf0ed7885fcd79c6c47f553d255b30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;4)&lt;/strong&gt; After &lt;code&gt;header(...);&lt;/code&gt; you must use &lt;code&gt;exit;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;4）&lt;/strong&gt; &lt;code&gt;header(...);&lt;/code&gt; 後（...）; &lt;code&gt;exit;&lt;/code&gt; 使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="2adedab2905d10a1a69c3bb979d05b767327eca8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;5)&lt;/strong&gt;  always use 301 or 302 reference:</source>
          <target state="translated">&lt;strong&gt;5）&lt;/strong&gt;常に301または302参照を使用します。</target>
        </trans-unit>
        <trans-unit id="f3dfa526d5020191753886fec7dc41cbc140b1fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;6)&lt;/strong&gt;&lt;strong&gt;Turn on error reporting, and find the error.&lt;/strong&gt;  Your error may be caused by a function that is not working. When you turn on error reporting, you should always fix top-most error first. For example, it might be &quot;Warning: date_default_timezone_get(): It is not safe to rely on the system's timezone settings.&quot; - then farther on down you may see &quot;headers not sent&quot; error. After fixing top-most (1st) error, re-load your page. If you still have errors, then again fix the top-most error.</source>
          <target state="translated">&lt;strong&gt;6）&lt;/strong&gt; &lt;strong&gt;エラー報告をオンにして、エラーを見つけます。&lt;/strong&gt; エラーは、機能していない機能が原因である可能性があります。 エラー報告をオンにするときは、常に一番上のエラーを最初に修正する必要があります。 たとえば、「警告：date_default_timezone_get（）：システムのタイムゾーン設定に依存するのは安全ではありません」のようになります。 -さらに下に進むと、「ヘッダーが送信されませんでした」というエラーが表示される場合があります。 最上位（1番目）のエラーを修正した後、ページを再ロードします。 それでもエラーが発生する場合は、最上位のエラーを再度修正します。</target>
        </trans-unit>
        <trans-unit id="2c6e991f7084c109dfc8a134aa8d04f1d81e9047" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;7)&lt;/strong&gt; If none of above helps, use JAVSCRIPT redirection(however, strongly non-recommended method), may be the last chance in custom cases...:</source>
          <target state="translated">&lt;strong&gt;7）&lt;/strong&gt;上記のいずれも役に立たない場合は、JAVASCRIPTリダイレクトを使用します（ただし、強く推奨されない方法）、カスタムケースでの最後のチャンスかもしれません...：</target>
        </trans-unit>
        <trans-unit id="27ad3dedb22191aabd9f29c2711625cba01876bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;em&gt;Sometimes EDITOR(IDE) like gedit (a default linux editor) add one blank line on save file. This should not happen. If you are using Linux. you can use VI editor to remove space/lines after ?&amp;gt; at the end of the page.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;em&gt;時々、gedit（デフォルトのLinuxエディター）のようなEDITOR（IDE）は、保存ファイルに1行の空白行を追加します。&lt;/em&gt; &lt;em&gt;これは起こらないはずです。&lt;/em&gt; &lt;em&gt;Linuxを使用している場合。&lt;/em&gt; &lt;em&gt;VIエディターを使用して、ページの最後にある？&amp;gt;の後のスペース/行を削除できます。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="be13f173cc72c11c48d3f6e6ae4177702f7f7e3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible Solution 1&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;考えられる解決策1&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4f69bf55f94500a377aae4afef066576807db4b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible Solution 2:&lt;/strong&gt;
If this is not your case, then use &lt;a href=&quot;http://php.net/manual/en/function.ob-start.php&quot;&gt;ob_start&lt;/a&gt; to output buffering:</source>
          <target state="translated">&lt;strong&gt;考えられる解決策2：&lt;/strong&gt;これが当てはまらない場合は、 &lt;a href=&quot;http://php.net/manual/en/function.ob-start.php&quot;&gt;ob_start&lt;/a&gt;を使用してバッファリングを出力します。</target>
        </trans-unit>
        <trans-unit id="b39c6fdda83ac12d8ce3a4c99830f31add867061" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;summary ⇊&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;まとめ⇊&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6186f65245cdfa245459a520ecc1898c760f9213" translate="yes" xml:space="preserve">
          <source>A simple tip: A simple space (or invisible special char) in your script, right before the very first &lt;code&gt;&amp;lt;?php&lt;/code&gt; tag, can cause this !
Especially when you are working in a team and somebody is using a &quot;weak&quot; IDE or has messed around in the files with strange text editors.</source>
          <target state="translated">簡単なヒント：最初の &lt;code&gt;&amp;lt;?php&lt;/code&gt; タグの直前にあるスクリプト内の単純なスペース（または非表示の特殊文字）がこれを引き起こす可能性があります。 特に、チームで作業しているときに、誰かが「弱い」IDEを使用している場合や、奇妙なテキストエディターでファイルをめちゃくちゃにした場合。</target>
        </trans-unit>
        <trans-unit id="0be42ce95f90a4905aea030257b1917de47f859a" translate="yes" xml:space="preserve">
          <source>A warning outputted by php, if the &lt;a href=&quot;http://php.net/display-errors&quot;&gt;&lt;code&gt;display_errors&lt;/code&gt;&lt;/a&gt; php.ini property is set. Instead of crashing on a programmer mistake, php silently fixes the error and emits a warning. While you can modify the &lt;a href=&quot;http://php.net/display-errors&quot;&gt;&lt;code&gt;display_errors&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/error-reporting&quot;&gt;error_reporting&lt;/a&gt; configurations, you should rather fix the problem.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/display-errors&quot;&gt; &lt;code&gt;display_errors&lt;/code&gt; &lt;/a&gt; php.iniプロパティが設定されている場合、phpによって出力される警告。 プログラマーのミスでクラッシュする代わりに、phpはエラーをサイレントに修正して警告を発します。 &lt;a href=&quot;http://php.net/display-errors&quot;&gt; &lt;code&gt;display_errors&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;http://php.net/error-reporting&quot;&gt;error_reportingの&lt;/a&gt;構成を変更できますが、問題を修正する必要があります。</target>
        </trans-unit>
        <trans-unit id="af34793f459a910dd3fead3769f6edee8720e84b" translate="yes" xml:space="preserve">
          <source>Accidental whitespace, often at the beginning or end of files, like this:</source>
          <target state="translated">ファイルの先頭や末尾に、このような誤った空白があることがよくあります。</target>
        </trans-unit>
        <trans-unit id="c94481a9952a8fbfb66b030cd48446b80af89ce5" translate="yes" xml:space="preserve">
          <source>Adobe Community: &lt;a href=&quot;http://kb2.adobe.com/community/publishing/505/cpsid_50572.html&quot;&gt;PHP development: why redirects don't work (headers already sent)&lt;/a&gt;</source>
          <target state="translated">Adobe Community： &lt;a href=&quot;http://kb2.adobe.com/community/publishing/505/cpsid_50572.html&quot;&gt;PHP開発：リダイレクトが機能しない理由（ヘッダーはすでに送信されています）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f498296924aeb9a4a3e1d411a129479c169e6c7" translate="yes" xml:space="preserve">
          <source>An easy fix is to set the text editor to save files as &quot;UTF-8 (no BOM)&quot;
or similar such nomenclature. Often newcomers otherwise resort to creating new
files and just copy&amp;amp;pasting the previous code back in.</source>
          <target state="translated">簡単な修正は、テキストエディタを設定して、ファイルを「UTF-8（BOMなし）」または同様の用語で保存することです。 それ以外の場合は、新しいファイルを作成して、以前のコードをコピーして貼り付けるだけの場合がよくあります。</target>
        </trans-unit>
        <trans-unit id="a03b6af6d54e8eb6ff186d534f9cb1b540198c8a" translate="yes" xml:space="preserve">
          <source>And of course &lt;a href=&quot;https://stackoverflow.com/search?q=[php]+headers+already+sent&quot;&gt;many specific cases&lt;/a&gt; have been covered on Stack Overflow as well.</source>
          <target state="translated">そしてもちろん、 &lt;a href=&quot;https://stackoverflow.com/search?q=[php]+headers+already+sent&quot;&gt;多くの特定のケース&lt;/a&gt;もスタックオーバーフローでカバーされています。</target>
        </trans-unit>
        <trans-unit id="98e95035e982831d42da05ea207498b7578af51b" translate="yes" xml:space="preserve">
          <source>Another bad practice can invoke this problem which is not stated yet.</source>
          <target state="translated">もう一つの悪習は、まだ述べられていないこの問題を引き起こす可能性があります。</target>
        </trans-unit>
        <trans-unit id="6ec465c980a9ad385ef05f0be2b24e638c116059" translate="yes" xml:space="preserve">
          <source>As alternative a &lt;a href=&quot;https://stackoverflow.com/questions/503093/how-can-i-make-a-redirect-page-in-jquery-javascript&quot;&gt;JavaScript redirect&lt;/a&gt;
can be used for page redirects:</source>
          <target state="translated">別の方法として、 &lt;a href=&quot;https://stackoverflow.com/questions/503093/how-can-i-make-a-redirect-page-in-jquery-javascript&quot;&gt;JavaScriptリダイレクト&lt;/a&gt;をページリダイレクトに使用できます。</target>
        </trans-unit>
        <trans-unit id="6f7c372719ae3b95c20a6e3de2cb3c0ed4d6d279" translate="yes" xml:space="preserve">
          <source>Believe me , following thse standards can save you a hell lot of hours from your life :)</source>
          <target state="translated">私を信じて、thseの基準に従うことは、あなたの人生から地獄の多くの時間を節約することができます :)</target>
        </trans-unit>
        <trans-unit id="8631895cfac94a86e8442c80f48e0e37de3907a2" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;setcookie()&lt;/code&gt; and &lt;code&gt;session_start()&lt;/code&gt; need to send a &lt;code&gt;Set-Cookie:&lt;/code&gt; HTTP header.
The same conditions therefore apply, and similar error messages will be generated
for premature output situations.</source>
          <target state="translated">&lt;code&gt;setcookie()&lt;/code&gt; と &lt;code&gt;session_start()&lt;/code&gt; はどちらも &lt;code&gt;Set-Cookie:&lt;/code&gt; HTTPヘッダーを送信する必要があります。 したがって、同じ条件が適用され、同様のエラーメッセージが時期尚早の出力状況に対して生成されます。</target>
        </trans-unit>
        <trans-unit id="9c7e228fca54bf342a5ed07d80a5ec13bb38e36b" translate="yes" xml:space="preserve">
          <source>Both approaches however make acceptable fallbacks when genuine HTTP header()
calls fail. Ideally you'd always combine this with a user-friendly message and
clickable link as last resort. (Which for instance is what the &lt;a href=&quot;http://php.net/http_redirect&quot;&gt;http_redirect()&lt;/a&gt;
PECL extension does.)</source>
          <target state="translated">ただし、どちらのアプローチでも、正規のHTTP header（）呼び出しが失敗した場合、許容可能なフォールバックが行われます。 理想的には、これを常にユーザーフレンドリーなメッセージとクリック可能なリンクと組み合わせて、最後の手段として使用します。 （たとえば、これは&lt;a href=&quot;http://php.net/http_redirect&quot;&gt;http_redirect（）&lt;/a&gt; PECL拡張機能が行うことです。）</target>
        </trans-unit>
        <trans-unit id="93b8734862133cfd18b4c963c3f272fcd27b9860" translate="yes" xml:space="preserve">
          <source>Both approaches therefore may become unreliable - in particular when switching between
development setups and/or production servers. Which is why output buffering is
widely considered just a crutch / strictly a workaround.</source>
          <target state="translated">そのため、どちらのアプローチも信頼性が低くなる可能性があります-特に、開発環境と本番サーバを切り替える場合には。これが、出力バッファリングが広く考えられている理由です。</target>
        </trans-unit>
        <trans-unit id="8a18697e6a481c96710211941d2d409a5868e883" translate="yes" xml:space="preserve">
          <source>But it could also be any doubly loaded &lt;code&gt;extension=&lt;/code&gt; module
generating an implicit PHP startup/warning message.</source>
          <target state="translated">ただし、暗黙的にPHPの起動/警告メッセージを生成する、二重にロードされた &lt;code&gt;extension=&lt;/code&gt; モジュールの場合もあります。</target>
        </trans-unit>
        <trans-unit id="de6ad44e43735b1d87c97ed42affac24dcc9972f" translate="yes" xml:space="preserve">
          <source>But it worked on the other server!?</source>
          <target state="translated">でも、他のサーバーでは動いていた!?</target>
        </trans-unit>
        <trans-unit id="4dc4a4da9a5adc753e56e7d96b0ae0c86935f580" translate="yes" xml:space="preserve">
          <source>COMMON PROBLEMS:</source>
          <target state="translated">一般的な問題。</target>
        </trans-unit>
        <trans-unit id="080dbc002bfc9997e3f50f4dbccf9bd8f4a553ff" translate="yes" xml:space="preserve">
          <source>Check all files associated with file that causes this error.</source>
          <target state="translated">このエラーの原因となるファイルに関連するすべてのファイルをチェックしてください。</target>
        </trans-unit>
        <trans-unit id="4145656d5afa36bd7f5a11611c07d39f8fb505d3" translate="yes" xml:space="preserve">
          <source>Checking with &lt;code&gt;headers_sent()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;headers_sent()&lt;/code&gt; で確認する</target>
        </trans-unit>
        <trans-unit id="35018bf39b74ef3b2fd82a6105c1c142805cdc56" translate="yes" xml:space="preserve">
          <source>Common reasons are accesses to undefined elements of an array (such as &lt;code&gt;$_POST['input']&lt;/code&gt; without using &lt;a href=&quot;http://php.net/empty&quot;&gt;&lt;code&gt;empty&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/isset&quot;&gt;&lt;code&gt;isset&lt;/code&gt;&lt;/a&gt; to test whether the input is set), or using an undefined constant instead of a string literal (as in &lt;code&gt;$_POST[input]&lt;/code&gt;, note the missing quotes).</source>
          <target state="translated">一般的な理由は、配列の未定義の要素へのアクセス（入力を設定するかどうかをテストするために&lt;a href=&quot;http://php.net/empty&quot;&gt; &lt;code&gt;empty&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;http://php.net/isset&quot;&gt; &lt;code&gt;isset&lt;/code&gt; &lt;/a&gt;を使用しない &lt;code&gt;$_POST['input']&lt;/code&gt; など）、または文字列リテラルの代わりに未定義の定数を使用する（ &lt;code&gt;$_POST[input]&lt;/code&gt; 、欠落している引用符に注意してください）。</target>
        </trans-unit>
        <trans-unit id="cfe68db42e7c9cf26d2cdc5c4c383e24c3d66de8" translate="yes" xml:space="preserve">
          <source>Conclusion: Do not output any character before calling &lt;code&gt;session_start()&lt;/code&gt; or &lt;code&gt;header()&lt;/code&gt; functions not even a white-space or new-line</source>
          <target state="translated">結論：空白や改行でもなく、 &lt;code&gt;session_start()&lt;/code&gt; または &lt;code&gt;header()&lt;/code&gt; 関数を呼び出す前に文字を出力しないでください。</target>
        </trans-unit>
        <trans-unit id="084c7e517d6eef632e47c4d0531dbf8a8742b8a1" translate="yes" xml:space="preserve">
          <source>Correction utilities</source>
          <target state="translated">補正ユーティリティ</target>
        </trans-unit>
        <trans-unit id="4f929e5b8b1fac950eba5db2809854af5fe0cf48" translate="yes" xml:space="preserve">
          <source>Enabling it will allow PHP to buffer output instead of passing it to the webserver
instantly. PHP thus can aggregate HTTP headers.</source>
          <target state="translated">これを有効にすると、PHP は出力をウェブサーバに即座に渡すのではなくバッファリングすることができます。これにより、PHP は HTTP ヘッダを集約することができます。</target>
        </trans-unit>
        <trans-unit id="ffb9ecb8e0aa36913c7caf9fc614b5d27eaed562" translate="yes" xml:space="preserve">
          <source>Error source mentioned as &quot;Unknown on line 0&quot;</source>
          <target state="translated">エラーソースは &quot;Unknown on line 0 &quot;と記載されています。</target>
        </trans-unit>
        <trans-unit id="f7c8f0ea9d6cd3402741f7f5dcdf45c754f8ce63" translate="yes" xml:space="preserve">
          <source>Even if &lt;code&gt;&amp;lt;?php ob_start(); ?&amp;gt;&lt;/code&gt; starts the first script, whitespace or a
BOM might get shuffled before, &lt;a href=&quot;https://stackoverflow.com/questions/2168956/php-header-problem-even-i-use-ob-start-and-ob-end-flush&quot;&gt;rendering it ineffective&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;?php ob_start(); ?&amp;gt;&lt;/code&gt; ？&amp;gt;最初のスクリプトを開始します。空白またはBOMが前にシャッフルされ、 &lt;a href=&quot;https://stackoverflow.com/questions/2168956/php-header-problem-even-i-use-ob-start-and-ob-end-flush&quot;&gt;無効になり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="d0ce63c71aa68577ce9f080b1f440cd0cf8809cf" translate="yes" xml:space="preserve">
          <source>Example of Unpredictable Error:</source>
          <target state="translated">予測不可能なエラーの例</target>
        </trans-unit>
        <trans-unit id="06eee975d368705b78968cd15675ecdbac9f559e" translate="yes" xml:space="preserve">
          <source>Explicit output, such as calls to &lt;code&gt;echo&lt;/code&gt;, &lt;code&gt;printf&lt;/code&gt;, &lt;code&gt;readfile&lt;/code&gt;, &lt;code&gt;passthru&lt;/code&gt;, code before &lt;code&gt;&amp;lt;?&lt;/code&gt; etc.</source>
          <target state="translated">&lt;code&gt;echo&lt;/code&gt; 、 &lt;code&gt;printf&lt;/code&gt; 、 &lt;code&gt;readfile&lt;/code&gt; 、 passthru 、 &lt;code&gt;&amp;lt;?&lt;/code&gt; の前のコードの呼び出しなどの明示的な出力 等</target>
        </trans-unit>
        <trans-unit id="1cfcd0f679366e71ace8ae170ef8a4b2acfdb3b2" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;http://www.php-fig.org/psr/psr-2/&quot;&gt;PSR-2 2.2 :&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://www.php-fig.org/psr/psr-2/&quot;&gt;PSR-2 2.2以降：&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a9657b7db85a9bee9b1d89e241f50fcfa5b1c4b" translate="yes" xml:space="preserve">
          <source>Functions that produce output include</source>
          <target state="translated">出力を生成する関数には次のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="6b119190971a95dc814eb69929b841a0352ce50f" translate="yes" xml:space="preserve">
          <source>Functions that send/modify HTTP headers must be invoked &lt;strong&gt;&lt;em&gt;before any output is made&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;出力&lt;/em&gt;&lt;/strong&gt;を行う&lt;strong&gt;&lt;em&gt;前に、&lt;/em&gt;&lt;/strong&gt; HTTPヘッダーを送信/変更する関数を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="9da7b0d94b00cb1668a89f743a072fd21d8e7390" translate="yes" xml:space="preserve">
          <source>Further links</source>
          <target state="translated">その他のリンク</target>
        </trans-unit>
        <trans-unit id="08cca31f529818dd7525d4ef2cdae9251c6f43ea" translate="yes" xml:space="preserve">
          <source>Generally this error arise when we send header after echoing or printing. If this error arise on a specific page then make sure that page is not echoing anything before calling to &lt;code&gt;start_session()&lt;/code&gt;.</source>
          <target state="translated">一般に、このエラーは、エコーまたは印刷後にヘッダーを送信したときに発生します。 このエラーが特定のページで発生した場合は、 &lt;code&gt;start_session()&lt;/code&gt; を呼び出す前に、ページが何もエコーしていないことを確認してください。</target>
        </trans-unit>
        <trans-unit id="d951eb860d3600546a926ad74d424a9aceed3512" translate="yes" xml:space="preserve">
          <source>Google provides a &lt;a href=&quot;http://www.google.com/search?q=php+headers+already+sent&quot;&gt;lengthy list of similar discussions&lt;/a&gt;.</source>
          <target state="translated">Googleは&lt;a href=&quot;http://www.google.com/search?q=php+headers+already+sent&quot;&gt;同様のディスカッションの長いリストを&lt;/a&gt;提供しています。</target>
        </trans-unit>
        <trans-unit id="78af8801ed09e8991e01f9c02bc70d508e2fbb60" translate="yes" xml:space="preserve">
          <source>HTML &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag</source>
          <target state="translated">HTML &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; タグ</target>
        </trans-unit>
        <trans-unit id="1fb561c07735cdfab6d51989d70193c375b4ef51" translate="yes" xml:space="preserve">
          <source>Here &quot;line 100&quot; refers to the script where the &lt;code&gt;header()&lt;/code&gt;&lt;em&gt;invocation&lt;/em&gt; failed.</source>
          <target state="translated">ここで「100行目」とは、 &lt;code&gt;header()&lt;/code&gt; の &lt;em&gt;呼び出しが&lt;/em&gt;失敗したスクリプトを指し&lt;em&gt;ます&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="b5eb2bd83246ca2ff77f046fd1e92837e5280e54" translate="yes" xml:space="preserve">
          <source>How can you find out where the premature output occured?</source>
          <target state="translated">早期出力がどこで発生したかは、どうやって調べればいいのでしょうか?</target>
        </trans-unit>
        <trans-unit id="fb8de51a3147bf9361552a75519aee211869b3ba" translate="yes" xml:space="preserve">
          <source>How to fix “Headers already sent” error in PHP</source>
          <target state="translated">PHPで &quot;Headers already sent &quot;エラーを修正する方法</target>
        </trans-unit>
        <trans-unit id="aaa613cac4e9ee31e971138cf9b389b5a2d3620a" translate="yes" xml:space="preserve">
          <source>However, while output buffering avoids the issues, you should really determine why your application outputs an HTTP body before the HTTP header. That'd be like taking a phone call and discussing your day and the weather before telling the caller that he's got the wrong number.</source>
          <target state="translated">しかし、出力バッファリングは問題を回避しますが、なぜアプリケーションが HTTP ヘッダの前に HTTP ボディを出力するのかを本当に見極める必要があります。これは、電話をかけてきて、電話の発信者に間違った番号を持っていることを伝える前に、あなたの一日と天気について話し合うようなものです。</target>
        </trans-unit>
        <trans-unit id="733646f6f36ede40f114a7d422999b4d35a222c0" translate="yes" xml:space="preserve">
          <source>I got this error many times before, and I am certain all PHP programmer got this error at least once before.</source>
          <target state="translated">私はこれまでに何度もこのエラーを経験していますが、すべての PHP プログラマが少なくとも一度はこのエラーを経験していると確信しています。</target>
        </trans-unit>
        <trans-unit id="283d047e75f38f6d41b998f878ef3520f8647fc6" translate="yes" xml:space="preserve">
          <source>I have seen these things ;)</source>
          <target state="translated">私はこれらのものを見たことがあります ;)</target>
        </trans-unit>
        <trans-unit id="65abe0c959d0c2b0d142f0f4a6763d1b7e6e4929" translate="yes" xml:space="preserve">
          <source>If another PHP statement or expression causes a warning message or
notice being printeded out, that also counts as premature output.</source>
          <target state="translated">別の PHP 文や式で警告メッセージや通知が出力された場合は、それも早期出力としてカウントされます。</target>
        </trans-unit>
        <trans-unit id="e59ed463246e8d3cb2feb75c276b720f7f24bce1" translate="yes" xml:space="preserve">
          <source>If the error source is mentioned as behind the
&lt;a href=&quot;https://stackoverflow.com/questions/4410704/php-closing-tag&quot;&gt;closing &lt;code&gt;?&amp;gt;&lt;/code&gt;&lt;/a&gt;
then this is where some whitespace or raw text got written out.
The PHP end marker does not terminate script executation at this
point. Any text/space characters after it will be written out as page content
still.</source>
          <target state="translated">エラーソースが&lt;a href=&quot;https://stackoverflow.com/questions/4410704/php-closing-tag&quot;&gt;クロージングの&lt;/a&gt;背後にあると記載されている場合、 &lt;code&gt;?&amp;gt;&lt;/code&gt; 空白または生のテキストが書き出されます。 PHP終了マーカーは、この時点でスクリプトの実行を終了しません。 それ以降のテキスト/スペース文字は、ページコンテンツとして書き出されます。</target>
        </trans-unit>
        <trans-unit id="9ace658489706f5fdae0235c03defa461ab365e7" translate="yes" xml:space="preserve">
          <source>If the warning refers to output in line &lt;strong&gt;&lt;code&gt;1&lt;/code&gt;&lt;/strong&gt;, then it's mostly
leading &lt;strong&gt;whitespace&lt;/strong&gt;, text or HTML before the opening &lt;code&gt;&amp;lt;?php&lt;/code&gt; token.</source>
          <target state="translated">警告が&lt;strong&gt; &lt;code&gt;1&lt;/code&gt; &lt;/strong&gt;行目の出力を参照している場合、それは主に &lt;code&gt;&amp;lt;?php&lt;/code&gt; トークンを開く前の&lt;strong&gt;空白&lt;/strong&gt; 、テキスト、またはHTMLの先頭です 。</target>
        </trans-unit>
        <trans-unit id="a01c86daf4049ff95ce6d47804aca0031a6bf853" translate="yes" xml:space="preserve">
          <source>If you didn't get the headers warning before, then the &lt;a href=&quot;http://php.net/manual/en/outcontrol.configuration.php&quot;&gt;output buffering
 php.ini setting&lt;/a&gt;
 has changed. It's likely unconfigured on the current/new server.</source>
          <target state="translated">以前にヘッダー警告が表示されなかった場合は、 &lt;a href=&quot;http://php.net/manual/en/outcontrol.configuration.php&quot;&gt;出力バッファリングのphp.ini設定&lt;/a&gt;が変更されています。 現在のサーバーまたは新しいサーバーでは構成されていない可能性があります。</target>
        </trans-unit>
        <trans-unit id="ec99dc57bf928bbad9b90cb33bfefb46126e7df2" translate="yes" xml:space="preserve">
          <source>If you have &lt;code&gt;error_reporting&lt;/code&gt; or &lt;code&gt;display_errors&lt;/code&gt; disabled per &lt;code&gt;php.ini&lt;/code&gt;,
then no warning will show up. But ignoring errors won't make the problem go
away. Headers still can't be sent after premature output.</source>
          <target state="translated">&lt;code&gt;php.ini&lt;/code&gt; ごとに &lt;code&gt;error_reporting&lt;/code&gt; または &lt;code&gt;display_errors&lt;/code&gt; を無効にしている場合、警告は表示されません。 ただし、エラーを無視しても問題が解決するわけではありません。 ヘッダーはまだ時期尚早の出力後に送信することはできません。</target>
        </trans-unit>
        <trans-unit id="2c05bd930cc0354b6ea7bba227c30fd646254f56" translate="yes" xml:space="preserve">
          <source>If your application is structurally hard to fix, then an easy (but
somewhat unprofessional) way to allow redirects is injecting a HTML
&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag. A redirect can be achieved with:</source>
          <target state="translated">アプリケーションの修正が構造的に難しい場合、リダイレクトを許可する簡単な（ただし、あまり専門的ではない）方法は、HTML &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; タグを挿入することです。 リダイレクトは次の方法で実現できます。</target>
        </trans-unit>
        <trans-unit id="9f49403252c5aa9d693fe60a1e84a102cdcee274" translate="yes" xml:space="preserve">
          <source>In particular graphical editors and Java based IDEs are oblivious to its
presence. They don't visualize it (obliged by the Unicode standard).
Most programmer and console editors however do:</source>
          <target state="translated">特にグラフィカルエディタやJavaベースのIDEは、その存在に気づかない。彼らはそれを可視化しません(ユニコード標準によって義務づけられています)。しかし、ほとんどのプログラマやコンソールエディタは可視化します。</target>
        </trans-unit>
        <trans-unit id="e70ad363e8fd9224c2bb80e4995caddcd53db9a7" translate="yes" xml:space="preserve">
          <source>In this case you need to eschew the error,
delay the statement execution, or suppress the message with e.g.
&lt;a href=&quot;http://php.net/isset&quot;&gt;&lt;code&gt;isset()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/@&quot;&gt;&lt;code&gt;@()&lt;/code&gt;&lt;/a&gt; -
when either doesn't obstruct debugging later on.</source>
          <target state="translated">この場合、エラーを回避するか、ステートメントの実行を遅らせるか、 &lt;a href=&quot;http://php.net/isset&quot;&gt; &lt;code&gt;isset()&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;http://php.net/@&quot;&gt; &lt;code&gt;@()&lt;/code&gt; &lt;/a&gt;などでメッセージを抑制する必要があります-どちらかが後でデバッグの妨げにならない場合。</target>
        </trans-unit>
        <trans-unit id="f6ea87e9dd1c53017797d5763bf9e24d529fd535" translate="yes" xml:space="preserve">
          <source>Instead of the below line</source>
          <target state="translated">下の線の代わりに</target>
        </trans-unit>
        <trans-unit id="680cb470a4471e37fb38518fc6def796d53f475b" translate="yes" xml:space="preserve">
          <source>Intentional output from &lt;code&gt;print&lt;/code&gt; and &lt;code&gt;echo&lt;/code&gt; statements will terminate
the opportunity to send HTTP headers. The application flow must
be restructured to avoid that. Use &lt;a href=&quot;http://php.net/function&quot;&gt;functions&lt;/a&gt;
and templating schemes. Ensure &lt;code&gt;header()&lt;/code&gt; calls occur &lt;em&gt;before&lt;/em&gt; messages
are written out.</source>
          <target state="translated">&lt;code&gt;print&lt;/code&gt; および &lt;code&gt;echo&lt;/code&gt; ステートメントからの意図的な出力により、HTTPヘッダーを送信する機会が終了します。 これを回避するには、アプリケーションフローを再構築する必要があります。 &lt;a href=&quot;http://php.net/function&quot;&gt;関数&lt;/a&gt;とテンプレートスキームを使用します 。 メッセージが書き出される&lt;em&gt;前に&lt;/em&gt; &lt;code&gt;header()&lt;/code&gt; 呼び出しが発生することを確認してください。</target>
        </trans-unit>
        <trans-unit id="e644be32391e41084f382e6469fc7b51f4d8c6db" translate="yes" xml:space="preserve">
          <source>Is using output buffering considered a bad practice?</source>
          <target state="translated">出力バッファリングを使用することは、悪い習慣と考えられていますか?</target>
        </trans-unit>
        <trans-unit id="2140ef1311c17d74bcbe9af77a51b69d777d467c" translate="yes" xml:space="preserve">
          <source>It can conceal whitespace for HTML output. But as soon as the application
logic attempts to send binary content (a generated image for example),
the buffered extraneous output becomes a problem. (Necessitating &lt;code&gt;ob_clean()&lt;/code&gt;
as furher workaround.)</source>
          <target state="translated">HTML出力の空白を隠すことができます。 しかし、アプリケーションロジックがバイナリコンテンツ（たとえば、生成されたイメージ）を送信しようとするとすぐに、バッファリングされた無関係な出力が問題になります。 （さらなる回避策として &lt;code&gt;ob_clean()&lt;/code&gt; を必要とします。）</target>
        </trans-unit>
        <trans-unit id="460952e8680d6fc8c5214a1755ef7fffde3b88ab" translate="yes" xml:space="preserve">
          <source>It can likewise be engaged with a call to &lt;a href=&quot;http://php.net/ob_start&quot;&gt;&lt;code&gt;ob_start();&lt;/code&gt;&lt;/a&gt;
atop the invocation script. Which however is less reliable for multiple reasons:</source>
          <target state="translated">同様に、 &lt;a href=&quot;http://php.net/ob_start&quot;&gt; &lt;code&gt;ob_start();&lt;/code&gt; &lt;/a&gt;呼び出しにも関与できます。 呼び出しスクリプトの上に。 ただし、いくつかの理由で信頼性が低くなります。</target>
        </trans-unit>
        <trans-unit id="df2e845a5893d911df687f4a8b5a04ffcb1da5b2" translate="yes" xml:space="preserve">
          <source>It is because of this line:</source>
          <target state="translated">このセリフがあるからです。</target>
        </trans-unit>
        <trans-unit id="969f7c3c40c6b6b03fd989788ff6dbc167e82d97" translate="yes" xml:space="preserve">
          <source>It'll definitely solve your problem.
I faced the same problem but I solved through writing header location in the above way.</source>
          <target state="translated">これで間違いなく解決します。私も同じ問題に直面しましたが、上記の方法でヘッダの位置を書くことで解決しました。</target>
        </trans-unit>
        <trans-unit id="c026cbcad3a9bd41a7228dcdb8c817c033b831cc" translate="yes" xml:space="preserve">
          <source>It's commonly advised, in particular to newcomers, that trailing &lt;code&gt;?&amp;gt;&lt;/code&gt; PHP
close tags should be omitted. This &lt;em&gt;eschews&lt;/em&gt; a small portion of these cases.
(Quite commonly &lt;code&gt;include()d&lt;/code&gt; scripts are the culprit.)</source>
          <target state="translated">一般的に、特に新規参入者には、末尾の &lt;code&gt;?&amp;gt;&lt;/code&gt; PHP終了タグを省略してください。 これは、これらのケースのごく一部&lt;em&gt;を避け&lt;/em&gt;ています。 （かなり一般的に &lt;code&gt;include()d&lt;/code&gt; スクリプトが原因です。）</target>
        </trans-unit>
        <trans-unit id="23f28972d1cfa7c0ea3cb2677de7d052b0415fb1" translate="yes" xml:space="preserve">
          <source>It's occasionally the &lt;code&gt;gzip&lt;/code&gt; stream encoding setting
&lt;a href=&quot;https://stackoverflow.com/questions/622192/php-warning-headers-already-sent-in-unknown&quot;&gt;or the &lt;code&gt;ob_gzhandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;gzip&lt;/code&gt; ストリームのエンコーディング設定&lt;a href=&quot;https://stackoverflow.com/questions/622192/php-warning-headers-already-sent-in-unknown&quot;&gt;または &lt;code&gt;ob_gzhandler&lt;/code&gt; である場合があります&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="75bf787b7be5f2093ecbea5d65eb3d4bbe834b88" translate="yes" xml:space="preserve">
          <source>It's sane to use on a whole include or project directory.</source>
          <target state="translated">インクルードやプロジェクトディレクトリ全体で使うのが正解です。</target>
        </trans-unit>
        <trans-unit id="5c55db306287cfaac95bcaace84e7a121503e878" translate="yes" xml:space="preserve">
          <source>It's typically a PHP extension or php.ini setting if no error source
is concretized.</source>
          <target state="translated">エラーソースが具体化されていない場合は、通常はPHPの拡張機能やphp.iniの設定になります。</target>
        </trans-unit>
        <trans-unit id="6d61c01843cdb7e4342c1d472c343b9d4e5ca89b" translate="yes" xml:space="preserve">
          <source>JavaScript redirect</source>
          <target state="translated">JavaScriptリダイレクト</target>
        </trans-unit>
        <trans-unit id="d6e795d64f0573e3b979693321e4f0e1e84ba0b4" translate="yes" xml:space="preserve">
          <source>Linebreaks and spaces alone can be a problem. But there are also &quot;invisible&quot;
character sequences which can cause this. Most famously the
&lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;&lt;strong&gt;UTF-8 BOM&lt;/strong&gt; (Byte-Order-Mark)&lt;/a&gt;
which isn't displayed by most text editors. It's the byte sequence &lt;code&gt;EF BB BF&lt;/code&gt;, which
is optional and redundant for UTF-8 encoded documents. PHP however has to treat
it as raw output. It may show up as the characters &lt;code&gt;&amp;iuml;&amp;raquo;&amp;iquest;&lt;/code&gt; in the output (if the client
interprets the document as Latin-1) or similar &quot;garbage&quot;.</source>
          <target state="translated">改行とスペースだけでも問題になることがあります。 しかし、これを引き起こす可能性のある「見えない」文字シーケンスもあります。 最も有名なのは、ほとんどのテキストエディターでは表示されない&lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;&lt;strong&gt;UTF-8 BOM&lt;/strong&gt; （Byte-Order-Mark）&lt;/a&gt;です。 これはバイトシーケンス &lt;code&gt;EF BB BF&lt;/code&gt; です 。これはオプションであり、UTF-8でエンコードされたドキュメントでは冗長です。 しかしながら、PHPはそれを生の出力として扱わなければなりません。 これは、出力で文字 &lt;code&gt;&amp;iuml;&amp;raquo;&amp;iquest;&lt;/code&gt; （クライアントがドキュメントをLatin-1と解釈した場合）または同様の「ガベージ」として表示される場合があります。</target>
        </trans-unit>
        <trans-unit id="f258aeaa35bd239f60cefd097b8adfda397737d7" translate="yes" xml:space="preserve">
          <source>No error message</source>
          <target state="translated">エラーメッセージはありません。</target>
        </trans-unit>
        <trans-unit id="ab3d818f993b6432ad07ab109c1efa987f501765" translate="yes" xml:space="preserve">
          <source>No output before sending headers!</source>
          <target state="translated">ヘッダを送信する前に出力しない!</target>
        </trans-unit>
        <trans-unit id="60155600ca6f1e13510057321a0cbc6f50b733de" translate="yes" xml:space="preserve">
          <source>Now,though this is not a common scenario what if you are using a MVC framework which loads a lots of file before handover things to your controller? This is not an uncommon scenario. Be prepare for this.</source>
          <target state="translated">さて、これは一般的なシナリオではありませんが、もしあなたがMVCフレームワークを使用していて、コントローラへのハンドオーバーの前に大量のファイルをロードしているとしたらどうでしょうか?これは一般的なシナリオではありません。備えておきましょう。</target>
        </trans-unit>
        <trans-unit id="750af79d66be273849143be1378cd17fc5bf7a94" translate="yes" xml:space="preserve">
          <source>Nucleus FAQ: &lt;a href=&quot;http://faq.nucleuscms.org/item/79&quot;&gt;What does &quot;page headers already sent&quot; mean?&lt;/a&gt;</source>
          <target state="translated">Nucleus FAQ： &lt;a href=&quot;http://faq.nucleuscms.org/item/79&quot;&gt;「送信済みページヘッダー」とはどういう意味ですか？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d12f26544314335beb7af690a37352634d31faf" translate="yes" xml:space="preserve">
          <source>One more example:</source>
          <target state="translated">もう一つの例。</target>
        </trans-unit>
        <trans-unit id="f4ebc5c3fbe01c45b2da7627ccb863f3bcc728cc" translate="yes" xml:space="preserve">
          <source>One of the more thorough explanations is &lt;a href=&quot;http://web.archive.org/web/20080430141149/http://www.expertsrt.com/tutorials/Matt/HTTP_headers.html&quot;&gt;HTTP Headers and the PHP header() Function - A tutorial by NicholasSolutions&lt;/a&gt; (Internet Archive link).
It covers HTTP in detail and gives a few guidelines for rewriting scripts.</source>
          <target state="translated">より完全な説明の1つは、 &lt;a href=&quot;http://web.archive.org/web/20080430141149/http://www.expertsrt.com/tutorials/Matt/HTTP_headers.html&quot;&gt;HTTPヘッダーとPHPのheader（）関数-NicholasSolutionsによるチュートリアル&lt;/a&gt; （インターネットアーカイブリンク）です。 HTTPについて詳しく説明し、スクリプトを書き換えるためのガイドラインをいくつか示します。</target>
        </trans-unit>
        <trans-unit id="d7b2036de2b94d3213b9cfa3f727aebf227c378e" translate="yes" xml:space="preserve">
          <source>Or &lt;code&gt;set_error_handler(&quot;var_dump&quot;);&lt;/code&gt; if all else fails.</source>
          <target state="translated">または &lt;code&gt;set_error_handler(&quot;var_dump&quot;);&lt;/code&gt; 他のすべてが失敗した場合。</target>
        </trans-unit>
        <trans-unit id="b83f20ab540b25ab07f97a7ef69054132b2d8232" translate="yes" xml:space="preserve">
          <source>Or with a short delay:</source>
          <target state="translated">遅延時間が短いものでも</target>
        </trans-unit>
        <trans-unit id="46bb206327db4f5a34a65938118293d1740b32cd" translate="yes" xml:space="preserve">
          <source>Otherwise the call fails:</source>
          <target state="translated">そうでなければ、呼び出しは失敗します。</target>
        </trans-unit>
        <trans-unit id="25b6825e9a250cf96df82acd4ea1189153cca05c" translate="yes" xml:space="preserve">
          <source>Output buffering as workaround</source>
          <target state="translated">回避策としての出力バッファリング</target>
        </trans-unit>
        <trans-unit id="fbf20e43ae182c2168b9de9490990dbe4fe1361b" translate="yes" xml:space="preserve">
          <source>Output can be:</source>
          <target state="translated">出力することができます。</target>
        </trans-unit>
        <trans-unit id="1226dfeda2f4ff9fd9b2342bf51356314ba7a9da" translate="yes" xml:space="preserve">
          <source>PHP actually eats up a &lt;em&gt;single&lt;/em&gt; linebreak after close tags. But it won't
compensate multiple newlines or tabs or spaces shifted into such gaps.</source>
          <target state="translated">PHPは、実際には終了タグの後に改行を&lt;em&gt;1つ&lt;/em&gt;消費します。 ただし、このようなギャップに移動した複数の改行、タブ、スペースは補正されません。</target>
        </trans-unit>
        <trans-unit id="07c4e9111bfdb4931556d5dbcdfc8436a3704b98" translate="yes" xml:space="preserve">
          <source>PHPs &lt;a href=&quot;http://www.php.net/manual/en/intro.outcontrol.php&quot;&gt;output buffering&lt;/a&gt;
is a workaround to alleviate this issue. It often works reliably, but shouldn't
substitute for proper application structuring and separating output from control
logic. Its actual purpose is minimizing chunked transfers to the webserver.</source>
          <target state="translated">PHP &lt;a href=&quot;http://www.php.net/manual/en/intro.outcontrol.php&quot;&gt;出力バッファリング&lt;/a&gt;は、この問題を軽減するための回避策です。 多くの場合、確実に機能しますが、適切なアプリケーションの構造化と出力を制御ロジックから分離することの代わりにはなりません。 その実際の目的は、Webサーバーへのチャンク転送を最小限に抑えることです。</target>
        </trans-unit>
        <trans-unit id="871dfd21179b2a969a9e40af9b4b4dc52aca38eb" translate="yes" xml:space="preserve">
          <source>Place form processing code atop scripts.</source>
          <target state="translated">スクリプトの上にフォーム処理のコードを配置します。</target>
        </trans-unit>
        <trans-unit id="e3a8864ed4e7f262dd96634e027ae3202002ce9d" translate="yes" xml:space="preserve">
          <source>Preceding error messages</source>
          <target state="translated">エラーメッセージの前に</target>
        </trans-unit>
        <trans-unit id="a6197ab73406d6a1da49241880f98a630cf68967" translate="yes" xml:space="preserve">
          <source>Preferrably even a utility function, which prints a user message
in case of &lt;code&gt;header()&lt;/code&gt; failures.</source>
          <target state="translated">好ましくは、 &lt;code&gt;header()&lt;/code&gt; が失敗した場合にユーザーメッセージを出力するユーティリティ関数です。</target>
        </trans-unit>
        <trans-unit id="dbc5f9999ab2c031a0d1a3d4381434e049092871" translate="yes" xml:space="preserve">
          <source>Previous error messages or notices</source>
          <target state="translated">以前のエラーメッセージやお知らせ</target>
        </trans-unit>
        <trans-unit id="b108b98ce986e831e0bb76e7cfabaef4253441cf" translate="yes" xml:space="preserve">
          <source>Print, echo</source>
          <target state="translated">印刷、エコー</target>
        </trans-unit>
        <trans-unit id="440e1065e67861e1cbbd357429bb4fcaf47fffaa" translate="yes" xml:space="preserve">
          <source>Raw &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; sections prior &lt;code&gt;&amp;lt;?php&lt;/code&gt; code.</source>
          <target state="translated">&lt;code&gt;&amp;lt;?php&lt;/code&gt; コードの前の生の &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; セクション。</target>
        </trans-unit>
        <trans-unit id="42ad2c1ce416b769bd8a14d197b8c7f33ee89f20" translate="yes" xml:space="preserve">
          <source>Raw HTML areas</source>
          <target state="translated">生のHTML領域</target>
        </trans-unit>
        <trans-unit id="aad41ef05171dd03c6f21cdcfd8ba6d29c48c3b4" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;http://www.php.net/manual/en/outcontrol.examples.basic.php&quot;&gt;basic usage example&lt;/a&gt;
in the manual, and for more pros and cons:</source>
          <target state="translated">マニュアルの&lt;a href=&quot;http://www.php.net/manual/en/outcontrol.examples.basic.php&quot;&gt;基本的な使用例&lt;/a&gt;も参照してください。その他の長所と短所もあります。</target>
        </trans-unit>
        <trans-unit id="c96274f6802e465cc9c9a431e20ff4ea0f3a79ba" translate="yes" xml:space="preserve">
          <source>See this code snippet:</source>
          <target state="translated">このコードスニペットを参照してください。</target>
        </trans-unit>
        <trans-unit id="afa331cb3ce703a1801a0da022bf25d0dba0e41d" translate="yes" xml:space="preserve">
          <source>Similarly it can occur for appended scripts or script sections:</source>
          <target state="translated">同様に、追加されたスクリプトやスクリプトセクションに対しても発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="c814e99850ed01017dc50125d8d31b007f99e39f" translate="yes" xml:space="preserve">
          <source>So when &lt;code&gt;header(&quot;Location: ...&quot;)&lt;/code&gt; redirects silently fail it's very
advisable to probe for warnings. Reenable them with two simple commands
atop the invocation script:</source>
          <target state="translated">したがって、 &lt;code&gt;header(&quot;Location: ...&quot;)&lt;/code&gt; リダイレクトが静かに失敗する場合は、警告をプローブすることをお勧めします。 呼び出しスクリプトの上にある2つの簡単なコマンドを使用して、それらを再度有効にします。</target>
        </trans-unit>
        <trans-unit id="9c001eb0b959274e6598e45b51c7ec697091883b" translate="yes" xml:space="preserve">
          <source>Some functions modifying the HTTP header are:</source>
          <target state="translated">HTTPヘッダを変更する関数があります。</target>
        </trans-unit>
        <trans-unit id="457f4bdd992f65de85e0284c53b500b984e66c10" translate="yes" xml:space="preserve">
          <source>Sometimes when the dev process has both WIN work stations and LINUX systems (hosting) and in the code you do not see any output before the related line, it could be the formatting of the file and the lack of &lt;em&gt;Unix LF (linefeed)&lt;/em&gt; 
 line ending.</source>
          <target state="translated">開発プロセスにWINワークステーションとLINUXシステム（ホスティング）の両方があり、コードで関連する行の前に出力が表示されない場合、ファイルのフォーマットと&lt;em&gt;Unix LF（改行）の行末&lt;/em&gt;がない場合があります。 。</target>
        </trans-unit>
        <trans-unit id="35c186b83bbd035d3b077f39a168883ebadd7a51" translate="yes" xml:space="preserve">
          <source>Speaking of redirect headers, you should often use an idiom like
this for final code paths:</source>
          <target state="translated">リダイレクトヘッダーといえば、最終的なコードパスにはこのような慣用句をよく使うはずです。</target>
        </trans-unit>
        <trans-unit id="c5dad13495a39b2aaa72669dbca9709aade63e41" translate="yes" xml:space="preserve">
          <source>The &quot;&lt;em&gt;output started at&lt;/em&gt;&quot; note within the parenthesis is more significant.
It denominates the source of previous output. In this example it's &lt;code&gt;auth.php&lt;/code&gt;
and &lt;strong&gt;line &lt;code&gt;52&lt;/code&gt;&lt;/strong&gt;. That's where you had to look for premature output.</source>
          <target state="translated">括弧内の「 &lt;em&gt;出力開始位置&lt;/em&gt; 」の注記の方が重要です。 以前の出力のソースを示します。 この例では、 &lt;code&gt;auth.php&lt;/code&gt; と&lt;strong&gt; &lt;code&gt;52&lt;/code&gt; 行目&lt;/strong&gt;です。 これは、時期尚早の出力を探す必要がある場所です。</target>
        </trans-unit>
        <trans-unit id="60c4103865e6ab5be3c8bc40fdc36b26f527767c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;UTF-8 Byte Order Mark&lt;/a&gt; specifically</source>
          <target state="translated">特に&lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;UTF-8 Byte Order Mark&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bfc67947482f65d72054027fe3e5b7d8980cd8d5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://php.net/manual/en/outcontrol.configuration.php&quot;&gt;&lt;code&gt;output_buffering=&lt;/code&gt;&lt;/a&gt;
setting nevertheless can help.
Configure it in the &lt;a href=&quot;http://www.php.net/manual/en/configuration.file.php&quot;&gt;php.ini&lt;/a&gt;
or via &lt;a href=&quot;http://www.php.net/manual/en/configuration.changes.php&quot;&gt;.htaccess&lt;/a&gt;
or even &lt;a href=&quot;http://php.net/manual/en/configuration.file.per-user.php&quot;&gt;.user.ini&lt;/a&gt; on
modern FPM/FastCGI setups.</source>
          <target state="translated">それでも、 &lt;a href=&quot;http://php.net/manual/en/outcontrol.configuration.php&quot;&gt; &lt;code&gt;output_buffering=&lt;/code&gt; &lt;/a&gt;設定が役立ちます。 &lt;a href=&quot;http://www.php.net/manual/en/configuration.file.php&quot;&gt;php.ini&lt;/a&gt;で、または&lt;a href=&quot;http://www.php.net/manual/en/configuration.changes.php&quot;&gt;.htaccess&lt;/a&gt;を介して、または最新のFPM / FastCGIセットアップの&lt;a href=&quot;http://php.net/manual/en/configuration.file.per-user.php&quot;&gt;.user.ini&lt;/a&gt;で構成します。</target>
        </trans-unit>
        <trans-unit id="61727afbf7f854065da49c03331457c836b6a7b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;header()&lt;/code&gt; warning contains all relevant information to
locate the problem cause:</source>
          <target state="translated">&lt;code&gt;header()&lt;/code&gt; 警告には、問題の原因を特定するための関連情報がすべて含まれています。</target>
        </trans-unit>
        <trans-unit id="d388d8e098d20cd9af6f1ebf6648b8587b897873" translate="yes" xml:space="preserve">
          <source>The Wordpress FAQ explains &lt;a href=&quot;http://codex.wordpress.org/FAQ_Troubleshooting#How_do_I_solve_the_Headers_already_sent_warning_problem.3F&quot;&gt;How do I solve the Headers already sent warning problem?&lt;/a&gt; in a generic manner.</source>
          <target state="translated">WordpressのFAQでは&lt;a href=&quot;http://codex.wordpress.org/FAQ_Troubleshooting#How_do_I_solve_the_Headers_already_sent_warning_problem.3F&quot;&gt;、すでに送信された警告の問題を解決するに&lt;/a&gt;はどうすればよいですか？ 一般的な方法で。</target>
        </trans-unit>
        <trans-unit id="1299f1d073f53b4fdb9f45c83c5ba533dfc77f50" translate="yes" xml:space="preserve">
          <source>The actual output logic and intermixed HTML output should follow last.</source>
          <target state="translated">実際の出力ロジックと混在したHTML出力は最後に続くはずです。</target>
        </trans-unit>
        <trans-unit id="465de4ea532c328ef7c14fcb28faf27199d85230" translate="yes" xml:space="preserve">
          <source>The buffer is limited in size, and can easily overrun when left to defaults.
And that's not a rare occurence either, &lt;a href=&quot;https://stackoverflow.com/questions/17643837/php-headers-already-sent-error-depending-on-output-length&quot;&gt;difficult to track down&lt;/a&gt;
when it happens.</source>
          <target state="translated">バッファのサイズには制限があり、デフォルトのままにすると簡単にオーバーランする可能性があります。 そして、それもまれな出来事ではなく、それが起こっ&lt;a href=&quot;https://stackoverflow.com/questions/17643837/php-headers-already-sent-error-depending-on-output-length&quot;&gt;た&lt;/a&gt;ときに追跡することは困難です。</target>
        </trans-unit>
        <trans-unit id="901602370607a9c90b5d6e34515558479dab211f" translate="yes" xml:space="preserve">
          <source>The lines mentioned in the error messages contain &lt;a href=&quot;http://php.net/header&quot;&gt;&lt;code&gt;header()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://php.net/setcookie&quot;&gt;&lt;code&gt;setcookie()&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="translated">エラーメッセージで言及されている行には、 &lt;a href=&quot;http://php.net/header&quot;&gt; &lt;code&gt;header()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;http://php.net/setcookie&quot;&gt; &lt;code&gt;setcookie()&lt;/code&gt; &lt;/a&gt;コールが含まれています。</target>
        </trans-unit>
        <trans-unit id="be402a0273c8735932dad5d863825a4f9638b1c7" translate="yes" xml:space="preserve">
          <source>The page/output always &lt;em&gt;follows&lt;/em&gt; the headers. PHP has to pass the
headers to the webserver first. It can only do that once.
After the double linebreak it can nevermore amend them.</source>
          <target state="translated">ページ/出力は常にヘッダーに&lt;em&gt;従います&lt;/em&gt; 。 PHPはまずヘッダーをウェブサーバーに渡す必要があります。 それは一度しかできません。 二重改行の後、それを修正することはできません。</target>
        </trans-unit>
        <trans-unit id="9c523bd998fdd5b6d22e65230344dfb3de8fcbf3" translate="yes" xml:space="preserve">
          <source>There are also automated tools to examine and rewrite text files
(&lt;a href=&quot;https://stackoverflow.com/questions/1068650/using-awk-to-remove-the-byte-order-mark&quot;&gt;&lt;code&gt;sed&lt;/code&gt;/&lt;code&gt;awk&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;recode&lt;/code&gt;).
For PHP specifically there's the &lt;a href=&quot;http://freshcode.club/projects/phptags&quot;&gt;&lt;code&gt;phptags&lt;/code&gt; tag tidier&lt;/a&gt;.
It rewrites close and open tags into long and short forms, but also easily
fixes leading and trailing whitespace, Unicode and UTF-x BOM issues:</source>
          <target state="translated">テキストファイル（ &lt;a href=&quot;https://stackoverflow.com/questions/1068650/using-awk-to-remove-the-byte-order-mark&quot;&gt; &lt;code&gt;sed&lt;/code&gt; / &lt;code&gt;awk&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;recode&lt;/code&gt; ）を調べて書き換える自動化ツールもあります。 特にPHPには、 &lt;a href=&quot;http://freshcode.club/projects/phptags&quot;&gt; &lt;code&gt;phptags&lt;/code&gt; タグtidier&lt;/a&gt;があります。 クローズタグとオープンタグを長い形式と短い形式に書き換えますが、先頭と末尾の空白、Unicode、UTF-x BOMの問題も簡単に修正します。</target>
        </trans-unit>
        <trans-unit id="c83839bdc0a071f2ba32a305b159124b7480d55c" translate="yes" xml:space="preserve">
          <source>There it's easy to recognize the problem early on. Other editors may identify
its presence in a file/settings menu (Notepad++ on Windows can identify and
&lt;a href=&quot;https://stackoverflow.com/questions/3589358/fix-utf8-bom&quot;&gt;remedy the problem&lt;/a&gt;),
Another option to inspect the BOMs presence is resorting to an &lt;strong&gt;hexeditor&lt;/strong&gt;.
On *nix systems &lt;a href=&quot;http://linux.die.net/man/1/hexdump&quot;&gt;&lt;code&gt;hexdump&lt;/code&gt;&lt;/a&gt; is usually available,
if not a graphical variant which simplifies auditing these and other issues:</source>
          <target state="translated">そこで問題を早期に認識するのは簡単です。 他の編集者は、ファイル/設定メニューでその存在を識別できます（WindowsのNotepad ++ &lt;a href=&quot;https://stackoverflow.com/questions/3589358/fix-utf8-bom&quot;&gt;は問題を&lt;/a&gt;識別して修正できます） &lt;strong&gt;。BOMの&lt;/strong&gt;存在を検査する別のオプションは、 &lt;strong&gt;hexeditorを使用し&lt;/strong&gt;ます。 * nixシステムでは、これらの問題やその他の問題の監査を簡素化するグラフィカルなバリアントではない場合でも、通常、 &lt;a href=&quot;http://linux.die.net/man/1/hexdump&quot;&gt; &lt;code&gt;hexdump&lt;/code&gt; &lt;/a&gt;が利用可能です。</target>
        </trans-unit>
        <trans-unit id="b1369bc7f4b92d3e80ceb25658c6d5fdb80775a4" translate="yes" xml:space="preserve">
          <source>Things are okay,right?</source>
          <target state="translated">何も問題ないでしょ?</target>
        </trans-unit>
        <trans-unit id="965147083687d13a90053ee46572c0ae8044df87" translate="yes" xml:space="preserve">
          <source>This error may have been caused by the blank spaces &lt;em&gt;before&lt;/em&gt; the start of the file or &lt;em&gt;after&lt;/em&gt; the end of the file.These blank spaces should not be here.</source>
          <target state="translated">このエラーは、ファイルの開始&lt;em&gt;前&lt;/em&gt;またはファイルの終了&lt;em&gt;後&lt;/em&gt;の空白が原因で発生した可能性があります。これらの空白はここにあるべきではありません。</target>
        </trans-unit>
        <trans-unit id="b2f829f30c005c315156fe94351d4b215744680a" translate="yes" xml:space="preserve">
          <source>This error message gets triggered when &lt;em&gt;anything&lt;/em&gt; is sent before you send HTTP headers (with &lt;a href=&quot;http://php.net/setcookie&quot;&gt;&lt;code&gt;setcookie&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/header&quot;&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt;). Common reasons for outputting something before the HTTP headers are:</source>
          <target state="translated">このエラーメッセージは、HTTPヘッダーを送信する前に&lt;em&gt;何か&lt;/em&gt;が送信されたときにトリガーされます（ &lt;a href=&quot;http://php.net/setcookie&quot;&gt; &lt;code&gt;setcookie&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;http://php.net/header&quot;&gt; &lt;code&gt;header&lt;/code&gt; を使用&lt;/a&gt; ）。 HTTPヘッダーの前に何かを出力する一般的な理由は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="cf45b0cd1a393cf39888a97d1b59edec9ab0ea7f" translate="yes" xml:space="preserve">
          <source>This fix is an easy fix for sites we manage by FTP and sometimes can save our new team members some time.</source>
          <target state="translated">この修正は、FTPで管理しているサイトを簡単に修正することができ、時には新しいチームメンバーの時間を節約することができます。</target>
        </trans-unit>
        <trans-unit id="35de4ccb7277b55b8457fc26e778d438b3c92db0" translate="yes" xml:space="preserve">
          <source>This leads to non-valid HTML when utilized past the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section.
Most browsers still accept it.</source>
          <target state="translated">これにより、 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; セクションを通過してHTMLが無効になります。 ほとんどのブラウザはまだそれを受け入れます。</target>
        </trans-unit>
        <trans-unit id="5642e8fe481ef2a419cad35a592b702098b08241" translate="yes" xml:space="preserve">
          <source>This will not work? Why?Because already a new line is generated.</source>
          <target state="translated">これではうまくいかないのでしょうか?なぜかというと、すでに改行が発生しているからです。</target>
        </trans-unit>
        <trans-unit id="5604a98270c16f33778424478858bcdc2c54a1fc" translate="yes" xml:space="preserve">
          <source>This will turn output buffering on and your headers will be created after the page is buffered.</source>
          <target state="translated">これは出力バッファリングを有効にし、ページがバッファリングされた後にヘッダが作成されます。</target>
        </trans-unit>
        <trans-unit id="d986bf96c434055d16a61765958a1786fc41b36e" translate="yes" xml:space="preserve">
          <source>To understand why headers must be sent before output it's necessary
to look at a typical &lt;a href=&quot;http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol&quot;&gt;HTTP&lt;/a&gt;
response. PHP scripts mainly generate HTML content, but also pass a
set of HTTP/CGI headers to the webserver:</source>
          <target state="translated">ヘッダーを出力前に送信する必要がある理由を理解するには、一般的な&lt;a href=&quot;http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol&quot;&gt;HTTP&lt;/a&gt;応答を調べる必要があります。 PHPスクリプトは主にHTMLコンテンツを生成しますが、一連のHTTP / CGIヘッダーをWebサーバーに渡します。</target>
        </trans-unit>
        <trans-unit id="17e5b87f95de584ce412aed857c04526fec7c223" translate="yes" xml:space="preserve">
          <source>Turning on &lt;a href=&quot;http://php.net/manual/en/book.outcontrol.php&quot;&gt;output buffering&lt;/a&gt; should make the problem go away; all output after the call to &lt;a href=&quot;http://php.net/ob_start&quot;&gt;&lt;code&gt;ob_start&lt;/code&gt;&lt;/a&gt; is buffered in memory until you release the buffer, e.g. with &lt;a href=&quot;http://php.net/ob_end_flush&quot;&gt;&lt;code&gt;ob_end_flush&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/book.outcontrol.php&quot;&gt;出力バッファリング&lt;/a&gt;をオンにすると、問題が解消されます。 たとえば&lt;a href=&quot;http://php.net/ob_end_flush&quot;&gt; &lt;code&gt;ob_end_flush&lt;/code&gt; を使用して&lt;/a&gt; 、 &lt;a href=&quot;http://php.net/ob_start&quot;&gt; &lt;code&gt;ob_start&lt;/code&gt; &lt;/a&gt;の呼び出し後のすべての出力は、バッファを解放するまでメモリにバッファリングされます。</target>
        </trans-unit>
        <trans-unit id="11ef5ae8efc774c915de8ea8f44cd12fce2b0032" translate="yes" xml:space="preserve">
          <source>UTF-8 BOM</source>
          <target state="translated">エヌエッチエフエイトビーエム</target>
        </trans-unit>
        <trans-unit id="4391319c5ae652e376bcc705cd6c88a5e66859ef" translate="yes" xml:space="preserve">
          <source>Unparsed HTML sections in a &lt;code&gt;.php&lt;/code&gt; file are direct output as well.
Script conditions that will trigger a &lt;code&gt;header()&lt;/code&gt; call must be noted
before &lt;em&gt;any&lt;/em&gt; raw &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; blocks.</source>
          <target state="translated">&lt;code&gt;.php&lt;/code&gt; ファイル内の解析されていないHTMLセクションも直接出力されます。 &lt;code&gt;header()&lt;/code&gt; 呼び出しをトリガーするスクリプト条件は&lt;em&gt;、&lt;/em&gt;生の &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; ブロックの前に注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="ad23e3087cb0b6818c3c0dc4db8470ab2234f842" translate="yes" xml:space="preserve">
          <source>Use a templating scheme to separate processing from output logic.</source>
          <target state="translated">テンポラリ テーションスキームを使用して、処理と出力ロジックを分離します。</target>
        </trans-unit>
        <trans-unit id="89eacc71efc056466e892db70cfce53ccf48bfc4" translate="yes" xml:space="preserve">
          <source>Use case for output buffering as the correct solution to &quot;headers already sent&quot;</source>
          <target state="translated">ヘッダーが既に送信されている」の正しい解決策として出力バッファリングを使用するケース</target>
        </trans-unit>
        <trans-unit id="e1d3b00dc836b97fdeb0e4425269698ea67b6549" translate="yes" xml:space="preserve">
          <source>Use temporary string variables to defer messages.</source>
          <target state="translated">一時的な文字列変数を使用して、メッセージを延期します。</target>
        </trans-unit>
        <trans-unit id="4418b3394a5252e61fdb3a37b810a92ad388d04b" translate="yes" xml:space="preserve">
          <source>Useful fallback workarounds are:</source>
          <target state="translated">有用なフォールバック回避策は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="d8cdbbaadf4d0ca984ceef1d23545663c98563b5" translate="yes" xml:space="preserve">
          <source>Warning: Cannot modify header information - headers already sent (output started at</source>
          <target state="translated">警告。ヘッダ情報を変更できません-ヘッダは既に送信されています (出力は</target>
        </trans-unit>
        <trans-unit id="db3f01c824ea9fd585d87525bc79bf24c9482312" translate="yes" xml:space="preserve">
          <source>Warning: Cannot modify header information - headers already sent by
  &lt;strong&gt;&lt;em&gt;(output started at&lt;/em&gt;&lt;/strong&gt; /www/usr2345/htdocs/&lt;b&gt;auth.php:52&lt;/b&gt;) in
  /www/usr2345/htdocs/index.php on line 100</source>
          <target state="translated">警告：ヘッダー情報を変更できません-ヘッダーは既に送信されており&lt;strong&gt;&lt;em&gt;（出力は&lt;/em&gt;&lt;/strong&gt; /www/usr2345/htdocs/auth.php:52 &lt;strong&gt;&lt;em&gt;で開始されます&lt;/em&gt;&lt;/strong&gt; ）/www/usr2345/htdocs/index.phpの100行目</target>
        </trans-unit>
        <trans-unit id="712e71b0879e82e251cf8ef6b19fb04e8617bb6b" translate="yes" xml:space="preserve">
          <source>Warning: Cannot modify header information - headers already sent by (&lt;strong&gt;output started at /some/file.php:12&lt;/strong&gt;) in &lt;strong&gt;/some/file.php&lt;/strong&gt; on &lt;strong&gt;line 23&lt;/strong&gt;</source>
          <target state="translated">警告：ヘッダー情報は変更できません&lt;strong&gt;-23&lt;/strong&gt; &lt;strong&gt;行目の&lt;/strong&gt; &lt;strong&gt;/some/file.php&lt;/strong&gt; &lt;strong&gt;で（/some/file.php:12で開始された出力&lt;/strong&gt; ）によって既に送信されたヘッダー</target>
        </trans-unit>
        <trans-unit id="c3c7420c8855f78aaa46e1f3f27a292564579030" translate="yes" xml:space="preserve">
          <source>What could be the reason for this? And how to fix it?</source>
          <target state="translated">その原因は何が考えられるのでしょうか?そして、それを解決するにはどうすればいいのでしょうか?</target>
        </trans-unit>
        <trans-unit id="eb3d7c6647bfc17293f5039e6530367d61e08190" translate="yes" xml:space="preserve">
          <source>What if &quot;a_important_file.php&quot; is this:</source>
          <target state="translated">a_important_file.php」がこれだとしたら。</target>
        </trans-unit>
        <trans-unit id="039b646899415b1efae3db32279441ceacf53e26" translate="yes" xml:space="preserve">
          <source>What is output buffering?</source>
          <target state="translated">出力バッファリングとは?</target>
        </trans-unit>
        <trans-unit id="2483acbf42e470b8a75fced3d175eade4b3bdb62" translate="yes" xml:space="preserve">
          <source>What we usually do in order to quickly fix this, is rename the file and on the LINUX system create a new file instead of the renamed one, and then copy the content into that. Many times this solve the issue as some of the files that were created in WIN once moved to the hosting cause this issue.</source>
          <target state="translated">この問題を素早く解決するには、通常、ファイルの名前を変更して、LINUXシステム上で名前を変更したファイルの代わりに新しいファイルを作成して、その中にコンテンツをコピーします。WINで作成されたファイルの中には、ホスティング先に移動した後にこの問題が発生するものもあるので、多くの場合はこの方法で解決します。</target>
        </trans-unit>
        <trans-unit id="c425132485f8d835cd45cc0d2bdc306f39352976" translate="yes" xml:space="preserve">
          <source>When PHP receives the first output (&lt;code&gt;print&lt;/code&gt;, &lt;code&gt;echo&lt;/code&gt;, &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;) it will
&lt;em&gt;flush&lt;/em&gt; all collected headers. Afterwards it can send all the output
it wants. But sending further HTTP headers is impossible then.</source>
          <target state="translated">PHPが最初の出力（ &lt;code&gt;print&lt;/code&gt; 、 &lt;code&gt;echo&lt;/code&gt; 、 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; ）を受信すると、収集されたすべてのヘッダーを&lt;em&gt;フラッシュし&lt;/em&gt;ます。 その後、必要なすべての出力を送信できます。 しかし、それ以上HTTPヘッダーを送信することは不可能です。</target>
        </trans-unit>
        <trans-unit id="1a516e5f4936748fa609d439609677c7305cde7d" translate="yes" xml:space="preserve">
          <source>When running my script, I am getting several errors like this:</source>
          <target state="translated">スクリプトを実行すると、このようなエラーがいくつか出てきます。</target>
        </trans-unit>
        <trans-unit id="d8225beac5424532277222a2ea2e71c92937bf0d" translate="yes" xml:space="preserve">
          <source>While this is often more HTML compliant than the &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; workaround,
it incurs a reliance on JavaScript-capable clients.</source>
          <target state="translated">多くの場合、これは &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; の回避策よりもHTMLに準拠していますが、JavaScript対応のクライアントに依存します。</target>
        </trans-unit>
        <trans-unit id="c40b45521afbf3d3441e415994019296056e23ef" translate="yes" xml:space="preserve">
          <source>Whitespace after &lt;code&gt;?&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;?&amp;gt;&lt;/code&gt; の後の空白</target>
        </trans-unit>
        <trans-unit id="f9326622424b3f498dbf3984424497f5adb5ecd8" translate="yes" xml:space="preserve">
          <source>Whitespace before &lt;code&gt;&amp;lt;?php&lt;/code&gt; for &quot;script.php &lt;strong&gt;line 1&lt;/strong&gt;&quot; warnings</source>
          <target state="translated">&lt;code&gt;&amp;lt;?php&lt;/code&gt; の前の &quot;script.php &lt;strong&gt;line 1&lt;/strong&gt; &quot;警告の空白</target>
        </trans-unit>
        <trans-unit id="637e7144e81fd43b363d1448bfde9b9de7a9a5a0" translate="yes" xml:space="preserve">
          <source>Whitespace before &lt;code&gt;&amp;lt;?php&lt;/code&gt; or after &lt;code&gt;?&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;?php&lt;/code&gt; の前または &lt;code&gt;?&amp;gt;&lt;/code&gt; の後の空白</target>
        </trans-unit>
        <trans-unit id="7f1fd238ec4beb8cde6009aed857df6c13c1fa0d" translate="yes" xml:space="preserve">
          <source>Why &lt;code&gt;setcookie()&lt;/code&gt; and &lt;code&gt;session_start()&lt;/code&gt; are also affected</source>
          <target state="translated">&lt;code&gt;setcookie()&lt;/code&gt; および &lt;code&gt;session_start()&lt;/code&gt; も影響を受ける理由</target>
        </trans-unit>
        <trans-unit id="4979c6f6275d7e7443fd9262f6a45c81621916a7" translate="yes" xml:space="preserve">
          <source>Why does it happen?</source>
          <target state="translated">なぜそうなるのか?</target>
        </trans-unit>
        <trans-unit id="66880ed1e4d66e77ce35517bbc6c835c36a5c9f0" translate="yes" xml:space="preserve">
          <source>Why use output buffering in PHP?</source>
          <target state="translated">なぜPHPで出力バッファリングを使うのか?</target>
        </trans-unit>
        <trans-unit id="53534306dfab747856ec65cc2634c27c6bea2930" translate="yes" xml:space="preserve">
          <source>You can always use &lt;a href=&quot;http://php.net/headers_sent&quot;&gt;&lt;code&gt;headers_sent()&lt;/code&gt;&lt;/a&gt; to probe if
it's still possible to... send headers. Which is useful to conditionally print
an info or apply other fallback logic.</source>
          <target state="translated">ヘッダーの送信がまだ可能かどうかを調べるには、常に&lt;a href=&quot;http://php.net/headers_sent&quot;&gt; &lt;code&gt;headers_sent()&lt;/code&gt; &lt;/a&gt;を使用できます。 これは、条件付きで情報を出力したり、他のフォールバックロジックを適用したりするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="3b4c6041c7ad665689c3c91b4a78ea602372b163" translate="yes" xml:space="preserve">
          <source>You do</source>
          <target state="translated">あなたは</target>
        </trans-unit>
        <trans-unit id="8a1543697a418b930a7e5f9a3a72eb7c989af239" translate="yes" xml:space="preserve">
          <source>You should not &lt;strong&gt;&lt;em&gt;print/echo&lt;/em&gt;&lt;/strong&gt; anything before sending the headers.</source>
          <target state="translated">ヘッダーを送信する前に何も&lt;strong&gt;&lt;em&gt;印刷/エコーし&lt;/em&gt;&lt;/strong&gt;ないでください。</target>
        </trans-unit>
        <trans-unit id="93a32092a442a15137062f7e09e70924d6780c81" translate="yes" xml:space="preserve">
          <source>among others and user-defined functions.</source>
          <target state="translated">など、ユーザー定義の機能を使用することができます。</target>
        </trans-unit>
        <trans-unit id="1ddf0068ae2c55a5155ce979ac559664d85d8158" translate="yes" xml:space="preserve">
          <source>before setting the cookies, which isn't allowed. You can't send any output before the headers, not even a blank line.</source>
          <target state="translated">の前にクッキーを設定することは許可されていません。ヘッダーの前に出力を送ることはできません。</target>
        </trans-unit>
        <trans-unit id="402f555bfe0827443f12db993d3324b99637e50d" translate="yes" xml:space="preserve">
          <source>ex)
    THERE SHOULD BE NO BLANK SPACES HERE</source>
          <target state="translated">例)ここに空白があってはならない。</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="2200f74b7585475a53ccee3590ee688b7fb19b6f" translate="yes" xml:space="preserve">
          <source>script:line</source>
          <target state="translated">script:line</target>
        </trans-unit>
        <trans-unit id="e1d0c6c1c29e6ad5164072a5b21340dca7fcb052" translate="yes" xml:space="preserve">
          <source>write</source>
          <target state="translated">write</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
