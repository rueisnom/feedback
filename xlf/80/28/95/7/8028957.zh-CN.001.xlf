<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/8028957">
    <body>
      <group id="8028957">
        <trans-unit id="c311ea9cf5d7e520cd5ef6b405aa4914125ac95e" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;To avoid this, simply leave out the closing &lt;code&gt;?&amp;gt;&lt;/code&gt; - it's not required anyways.</source>
          <target state="translated">为了避免这种情况，只需省略结尾处的 &lt;code&gt;?&amp;gt;&lt;/code&gt; -仍然不需要。</target>
        </trans-unit>
        <trans-unit id="b775a598148446a2dcc7af53d651b2f82fcd57b1" translate="yes" xml:space="preserve">
          <source>(Of course they're furthermore affected by disabled cookies in the browser,
or even proxy issues. The session functionality obviously also depends on free
disk space and other php.ini settings, etc.)</source>
          <target state="translated">(当然它们还会受到浏览器中的cookies被禁用甚至代理问题的影响。会话功能显然还取决于空闲的磁盘空间和其他php.ini设置等。)</target>
        </trans-unit>
        <trans-unit id="6ba88d92adfd7dfeb2827485bbbcfbbd047f0175" translate="yes" xml:space="preserve">
          <source>(copied from: &lt;a href=&quot;https://stackoverflow.com/a/24928578/2377343&quot;&gt;source&lt;/a&gt;)</source>
          <target state="translated">（复制自： &lt;a href=&quot;https://stackoverflow.com/a/24928578/2377343&quot;&gt;源&lt;/a&gt; ）</target>
        </trans-unit>
        <trans-unit id="1cebd4db8c10209214d65022870a326a5c80f5f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;Byte order marks&lt;/a&gt; at the beginning of a php file. Examine your php files with a hex editor to find out whether that's the case. They should start with the bytes &lt;code&gt;3F 3C&lt;/code&gt;. You can safely remove the BOM &lt;code&gt;EF BB BF&lt;/code&gt; from the start of files.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;字节顺序标记&lt;/a&gt;在php文件的开头。 使用十六进制编辑器检查您的php文件，以了解是否是这种情况。 它们应以字节 &lt;code&gt;3F 3C&lt;/code&gt; 开头。 您可以从文件开头安全地删除BOM &lt;code&gt;EF BB BF&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="163baa1988aa61f9f3f74b26d4da09067d959a9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/header&quot;&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;http://php.net/header_remove&quot;&gt;&lt;code&gt;header_remove&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://php.net/header&quot;&gt; &lt;code&gt;header&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;http://php.net/header_remove&quot;&gt; &lt;code&gt;header_remove&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7557146aa6581e6030d4f6c9e968a0c1d8d97ceb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/session_start&quot;&gt;&lt;code&gt;session_start&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;http://php.net/session_regenerate_id&quot;&gt;&lt;code&gt;session_regenerate_id&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://php.net/session_start&quot;&gt; &lt;code&gt;session_start&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;http://php.net/session_regenerate_id&quot;&gt; &lt;code&gt;session_regenerate_id&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47e886f065f1089cbec9111b8a1c546c32a14ebc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/setcookie&quot;&gt;&lt;code&gt;setcookie&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;http://php.net/setrawcookie&quot;&gt;&lt;code&gt;setrawcookie&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://php.net/setcookie&quot;&gt; &lt;code&gt;setcookie&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;http://php.net/setrawcookie&quot;&gt; &lt;code&gt;setrawcookie&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c4a6a1a600111ff22d3739ace4b9a1b3379e97b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;print&lt;/code&gt;, &lt;code&gt;echo&lt;/code&gt; and other functions producing output</source>
          <target state="translated">&lt;code&gt;print&lt;/code&gt; ， &lt;code&gt;echo&lt;/code&gt; 和其他产生输出的功能</target>
        </trans-unit>
        <trans-unit id="e391141344cfe1a0358c9920e0879f71283d47fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;print&lt;/code&gt;, &lt;code&gt;echo&lt;/code&gt;, &lt;code&gt;printf&lt;/code&gt;, &lt;code&gt;vprintf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;print&lt;/code&gt; ， &lt;code&gt;echo&lt;/code&gt; ， &lt;code&gt;printf&lt;/code&gt; ， &lt;code&gt;vprintf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9273b2288b736277f134ab1aa846e24da54b8e0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;readfile&lt;/code&gt;, &lt;code&gt;passthru&lt;/code&gt;, &lt;code&gt;flush&lt;/code&gt;, &lt;code&gt;imagepng&lt;/code&gt;, &lt;code&gt;imagejpeg&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;readfile&lt;/code&gt; ， &lt;code&gt;passthru&lt;/code&gt; ， &lt;code&gt;flush&lt;/code&gt; ， &lt;code&gt;imagepng&lt;/code&gt; ， &lt;code&gt;imagejpeg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b634c6c1b82947f8f3e0cd2be91adad2768614cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trigger_error&lt;/code&gt;, &lt;code&gt;ob_flush&lt;/code&gt;, &lt;code&gt;ob_end_flush&lt;/code&gt;, &lt;code&gt;var_dump&lt;/code&gt;, &lt;code&gt;print_r&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;trigger_error&lt;/code&gt; ， &lt;code&gt;ob_flush&lt;/code&gt; ， &lt;code&gt;ob_end_flush&lt;/code&gt; ， &lt;code&gt;var_dump&lt;/code&gt; ， &lt;code&gt;print_r&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e97292207b7856687bc45fbe9f75751b96d3c40a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;All PHP files MUST end with a &lt;code&gt;single blank line&lt;/code&gt;.&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;strong&gt;所有PHP文件都必须以 &lt;code&gt;single blank line&lt;/code&gt; 结尾。&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="adbdfe076cf9d580974a9cd6ffbea42235179077" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;All PHP files MUST use the &lt;code&gt;Unix LF (linefeed) line ending&lt;/code&gt;.&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;strong&gt;所有PHP文件都必须使用 &lt;code&gt;Unix LF (linefeed) line ending&lt;/code&gt; 。&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="69119f41f4d41a999365f11fc9ca3b06af7a94c0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;The closing ?&amp;gt; tag MUST be &lt;code&gt;omitted&lt;/code&gt; from files containing &lt;code&gt;only php&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;strong&gt; &lt;code&gt;only php&lt;/code&gt; 包含php的文件中必须 &lt;code&gt;omitted&lt;/code&gt; ？&amp;gt;标记&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="847ce2d775f9c374d11e892130ff87f0cb42eee3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Intentional:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Intentional:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7f6c93eff29d8434aae4ec42897b16c2d4a56925" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Typical causes:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;典型原因：&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a7817a8ce4f3454eb2b09d325d89f0ac42c1a078" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Unintentional:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Unintentional:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b179df85a17f8a95e180f9bbe24478851fd69e26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1)&lt;/strong&gt; there should not be any output (i.e. &lt;strong&gt;&lt;code&gt;echo..&lt;/code&gt;&lt;/strong&gt; or HTML codes) before the &lt;strong&gt;&lt;code&gt;header(.......);&lt;/code&gt;&lt;/strong&gt; command.</source>
          <target state="translated">&lt;strong&gt;1）&lt;/strong&gt;在&lt;strong&gt; &lt;code&gt;header(.......);&lt;/code&gt; &lt;/strong&gt;之前不应有任何输出（即&lt;strong&gt; &lt;code&gt;echo..&lt;/code&gt; &lt;/strong&gt;或HTML代码&lt;strong&gt;）；&lt;/strong&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="d3fea5f4e93ef673ad9a9e3fd1fe389b388e2185" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2)&lt;/strong&gt; remove any &lt;strong&gt;white-space&lt;/strong&gt;(or &lt;strong&gt;newline&lt;/strong&gt;) before &lt;code&gt;&amp;lt;?php&lt;/code&gt; and after &lt;code&gt;?&amp;gt;&lt;/code&gt; tags.</source>
          <target state="translated">&lt;strong&gt;2）&lt;/strong&gt;删除 &lt;code&gt;&amp;lt;?php&lt;/code&gt; 之前和 &lt;code&gt;?&amp;gt;&lt;/code&gt; 标记之后的所有&lt;strong&gt;空格&lt;/strong&gt; （或&lt;strong&gt;换行符&lt;/strong&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ebe5047f706f5d69e9071ce1cfd629cf122fc6ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;3)&lt;/strong&gt;&lt;strong&gt;GOLDEN RULE!&lt;/strong&gt; - check if that php file (and also, if you &lt;code&gt;include&lt;/code&gt; other files) have &lt;strong&gt;UTF8 without BOM&lt;/strong&gt; encoding (and not just &lt;strong&gt;UTF-8&lt;/strong&gt;). That is problem in many cases (because &lt;strong&gt;UTF8&lt;/strong&gt; encoded file has something special character in the start of php file, which your text-editor doesnt show)!!!!!!!!!!!</source>
          <target state="translated">&lt;strong&gt;3）&lt;/strong&gt; &lt;strong&gt;黄金法则！&lt;/strong&gt; -检查该php文件（以及是否 &lt;code&gt;include&lt;/code&gt; 其他文件）是否具有&lt;strong&gt;不带BOM&lt;/strong&gt;编码的&lt;strong&gt;UTF8&lt;/strong&gt; （而不仅仅是&lt;strong&gt;UTF-8&lt;/strong&gt; ）。 在许多情况下，这是一个问题（因为&lt;strong&gt;UTF8&lt;/strong&gt;编码的文件在php文件的开头具有一些特殊字符，而您的文本编辑器不会显示该字符）!!!!!!!!!!!</target>
        </trans-unit>
        <trans-unit id="229fec9818cf0ed7885fcd79c6c47f553d255b30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;4)&lt;/strong&gt; After &lt;code&gt;header(...);&lt;/code&gt; you must use &lt;code&gt;exit;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;4）&lt;/strong&gt;在 &lt;code&gt;header(...);&lt;/code&gt; 之后 您必须使用 &lt;code&gt;exit;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2adedab2905d10a1a69c3bb979d05b767327eca8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;5)&lt;/strong&gt;  always use 301 or 302 reference:</source>
          <target state="translated">&lt;strong&gt;5）&lt;/strong&gt;始终使用301或302参考：</target>
        </trans-unit>
        <trans-unit id="f3dfa526d5020191753886fec7dc41cbc140b1fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;6)&lt;/strong&gt;&lt;strong&gt;Turn on error reporting, and find the error.&lt;/strong&gt;  Your error may be caused by a function that is not working. When you turn on error reporting, you should always fix top-most error first. For example, it might be &quot;Warning: date_default_timezone_get(): It is not safe to rely on the system's timezone settings.&quot; - then farther on down you may see &quot;headers not sent&quot; error. After fixing top-most (1st) error, re-load your page. If you still have errors, then again fix the top-most error.</source>
          <target state="translated">&lt;strong&gt;6）&lt;/strong&gt; &lt;strong&gt;打开错误报告，然后找到错误。&lt;/strong&gt; 您的错误可能是由无法使用的功能引起的。 开启错误报告功能时，应始终首先修复最上面的错误。 例如，可能是&amp;ldquo;警告：date_default_timezone_get（）：依靠系统的时区设置并不安全。&amp;rdquo; -再往下走，您可能会看到&amp;ldquo;未发送标题&amp;rdquo;错误。 修复最上面的（第一个）错误后，请重新加载页面。 如果仍然有错误，请再次修复最上面的错误。</target>
        </trans-unit>
        <trans-unit id="2c6e991f7084c109dfc8a134aa8d04f1d81e9047" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;7)&lt;/strong&gt; If none of above helps, use JAVSCRIPT redirection(however, strongly non-recommended method), may be the last chance in custom cases...:</source>
          <target state="translated">&lt;strong&gt;7）&lt;/strong&gt;如果以上方法均无济于事，请使用JAVSCRIPT重定向（但是，强烈建议不要使用此方法），这可能是自定义情况下的最后机会...：</target>
        </trans-unit>
        <trans-unit id="27ad3dedb22191aabd9f29c2711625cba01876bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;em&gt;Sometimes EDITOR(IDE) like gedit (a default linux editor) add one blank line on save file. This should not happen. If you are using Linux. you can use VI editor to remove space/lines after ?&amp;gt; at the end of the page.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt; &lt;em&gt;有时，像gedit（默认的Linux编辑器）之类的EDITOR（IDE）在保存文件上添加一个空行。&lt;/em&gt; &lt;em&gt;这不应该发生。&lt;/em&gt; &lt;em&gt;如果您使用的是Linux。&lt;/em&gt; &lt;em&gt;您可以使用VI编辑器删除页面末尾？&amp;gt;之后的空格/行。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="be13f173cc72c11c48d3f6e6ae4177702f7f7e3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible Solution 1&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;可能的解决方案1&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4f69bf55f94500a377aae4afef066576807db4b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible Solution 2:&lt;/strong&gt;
If this is not your case, then use &lt;a href=&quot;http://php.net/manual/en/function.ob-start.php&quot;&gt;ob_start&lt;/a&gt; to output buffering:</source>
          <target state="translated">&lt;strong&gt;可能的解决方案2：&lt;/strong&gt;如果您不是这种情况，请使用&lt;a href=&quot;http://php.net/manual/en/function.ob-start.php&quot;&gt;ob_start&lt;/a&gt;输出缓冲：</target>
        </trans-unit>
        <trans-unit id="b39c6fdda83ac12d8ce3a4c99830f31add867061" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;summary ⇊&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;总结⇊&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6186f65245cdfa245459a520ecc1898c760f9213" translate="yes" xml:space="preserve">
          <source>A simple tip: A simple space (or invisible special char) in your script, right before the very first &lt;code&gt;&amp;lt;?php&lt;/code&gt; tag, can cause this !
Especially when you are working in a team and somebody is using a &quot;weak&quot; IDE or has messed around in the files with strange text editors.</source>
          <target state="translated">一个简单的提示：在脚本中，在第一个 &lt;code&gt;&amp;lt;?php&lt;/code&gt; 标记之前的简单空格（或不可见的特殊字符）可能会导致这种情况！ 特别是当您在团队中工作并且有人在使用&amp;ldquo;弱&amp;rdquo; IDE或使用奇怪的文本编辑器弄乱文件时，尤其如此。</target>
        </trans-unit>
        <trans-unit id="0be42ce95f90a4905aea030257b1917de47f859a" translate="yes" xml:space="preserve">
          <source>A warning outputted by php, if the &lt;a href=&quot;http://php.net/display-errors&quot;&gt;&lt;code&gt;display_errors&lt;/code&gt;&lt;/a&gt; php.ini property is set. Instead of crashing on a programmer mistake, php silently fixes the error and emits a warning. While you can modify the &lt;a href=&quot;http://php.net/display-errors&quot;&gt;&lt;code&gt;display_errors&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/error-reporting&quot;&gt;error_reporting&lt;/a&gt; configurations, you should rather fix the problem.</source>
          <target state="translated">如果设置了&lt;a href=&quot;http://php.net/display-errors&quot;&gt; &lt;code&gt;display_errors&lt;/code&gt; &lt;/a&gt; php.ini属性，则php输出警告。 php不会死于程序员错误，而可以静默地修复错误并发出警告。 尽管您可以修改&lt;a href=&quot;http://php.net/display-errors&quot;&gt; &lt;code&gt;display_errors&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;http://php.net/error-reporting&quot;&gt;error_reporting&lt;/a&gt;配置，但您应该解决此问题。</target>
        </trans-unit>
        <trans-unit id="af34793f459a910dd3fead3769f6edee8720e84b" translate="yes" xml:space="preserve">
          <source>Accidental whitespace, often at the beginning or end of files, like this:</source>
          <target state="translated">意外的留白,往往是在文件的开头或结尾,像这样。</target>
        </trans-unit>
        <trans-unit id="c94481a9952a8fbfb66b030cd48446b80af89ce5" translate="yes" xml:space="preserve">
          <source>Adobe Community: &lt;a href=&quot;http://kb2.adobe.com/community/publishing/505/cpsid_50572.html&quot;&gt;PHP development: why redirects don't work (headers already sent)&lt;/a&gt;</source>
          <target state="translated">Adobe Community： &lt;a href=&quot;http://kb2.adobe.com/community/publishing/505/cpsid_50572.html&quot;&gt;PHP开发：为什么重定向不起作用（标题已发送）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f498296924aeb9a4a3e1d411a129479c169e6c7" translate="yes" xml:space="preserve">
          <source>An easy fix is to set the text editor to save files as &quot;UTF-8 (no BOM)&quot;
or similar such nomenclature. Often newcomers otherwise resort to creating new
files and just copy&amp;amp;pasting the previous code back in.</source>
          <target state="translated">一个简单的解决方法是将文本编辑器设置为将文件另存为&amp;ldquo; UTF-8（无BOM）&amp;rdquo;或类似的命名法。 否则，新手经常会求助于创建新文件，然后仅复制并粘贴以前的代码。</target>
        </trans-unit>
        <trans-unit id="a03b6af6d54e8eb6ff186d534f9cb1b540198c8a" translate="yes" xml:space="preserve">
          <source>And of course &lt;a href=&quot;https://stackoverflow.com/search?q=[php]+headers+already+sent&quot;&gt;many specific cases&lt;/a&gt; have been covered on Stack Overflow as well.</source>
          <target state="translated">当然，堆栈溢出也涵盖了&lt;a href=&quot;https://stackoverflow.com/search?q=[php]+headers+already+sent&quot;&gt;许多特定情况&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="98e95035e982831d42da05ea207498b7578af51b" translate="yes" xml:space="preserve">
          <source>Another bad practice can invoke this problem which is not stated yet.</source>
          <target state="translated">另一个不好的做法可以引出这个问题,这个问题还没有说明。</target>
        </trans-unit>
        <trans-unit id="6ec465c980a9ad385ef05f0be2b24e638c116059" translate="yes" xml:space="preserve">
          <source>As alternative a &lt;a href=&quot;https://stackoverflow.com/questions/503093/how-can-i-make-a-redirect-page-in-jquery-javascript&quot;&gt;JavaScript redirect&lt;/a&gt;
can be used for page redirects:</source>
          <target state="translated">或者，可以将&lt;a href=&quot;https://stackoverflow.com/questions/503093/how-can-i-make-a-redirect-page-in-jquery-javascript&quot;&gt;JavaScript重定向&lt;/a&gt;用于页面重定向：</target>
        </trans-unit>
        <trans-unit id="6f7c372719ae3b95c20a6e3de2cb3c0ed4d6d279" translate="yes" xml:space="preserve">
          <source>Believe me , following thse standards can save you a hell lot of hours from your life :)</source>
          <target state="translated">相信我,按照这些标准,可以让你省去很多时间。)</target>
        </trans-unit>
        <trans-unit id="8631895cfac94a86e8442c80f48e0e37de3907a2" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;setcookie()&lt;/code&gt; and &lt;code&gt;session_start()&lt;/code&gt; need to send a &lt;code&gt;Set-Cookie:&lt;/code&gt; HTTP header.
The same conditions therefore apply, and similar error messages will be generated
for premature output situations.</source>
          <target state="translated">&lt;code&gt;setcookie()&lt;/code&gt; 和 &lt;code&gt;session_start()&lt;/code&gt; 都需要发送 &lt;code&gt;Set-Cookie:&lt;/code&gt; HTTP标头。 因此，适用相同的条件，并且对于过早的输出情况，将生成类似的错误消息。</target>
        </trans-unit>
        <trans-unit id="9c7e228fca54bf342a5ed07d80a5ec13bb38e36b" translate="yes" xml:space="preserve">
          <source>Both approaches however make acceptable fallbacks when genuine HTTP header()
calls fail. Ideally you'd always combine this with a user-friendly message and
clickable link as last resort. (Which for instance is what the &lt;a href=&quot;http://php.net/http_redirect&quot;&gt;http_redirect()&lt;/a&gt;
PECL extension does.)</source>
          <target state="translated">但是，当真正的HTTP header（）调用失败时，两种方法都会产生可接受的回退。 理想情况下，您总是将其与用户友好的消息和可点击的链接结合起来作为最后的选择。 （例如， &lt;a href=&quot;http://php.net/http_redirect&quot;&gt;http_redirect（）&lt;/a&gt; PECL扩展名就是这样做的。）</target>
        </trans-unit>
        <trans-unit id="93b8734862133cfd18b4c963c3f272fcd27b9860" translate="yes" xml:space="preserve">
          <source>Both approaches therefore may become unreliable - in particular when switching between
development setups and/or production servers. Which is why output buffering is
widely considered just a crutch / strictly a workaround.</source>
          <target state="translated">因此,这两种方法都可能变得不可靠--尤其是在开发设置和生产服务器之间切换时。这就是为什么输出缓冲被广泛认为只是一种拐杖的原因,严格来说是一种解决方法。</target>
        </trans-unit>
        <trans-unit id="8a18697e6a481c96710211941d2d409a5868e883" translate="yes" xml:space="preserve">
          <source>But it could also be any doubly loaded &lt;code&gt;extension=&lt;/code&gt; module
generating an implicit PHP startup/warning message.</source>
          <target state="translated">但是也可以是任何双重加载的 &lt;code&gt;extension=&lt;/code&gt; 模块，它们会生成隐式的PHP启动/警告消息。</target>
        </trans-unit>
        <trans-unit id="de6ad44e43735b1d87c97ed42affac24dcc9972f" translate="yes" xml:space="preserve">
          <source>But it worked on the other server!?</source>
          <target state="translated">但它在另一个服务器上也能用!?</target>
        </trans-unit>
        <trans-unit id="4dc4a4da9a5adc753e56e7d96b0ae0c86935f580" translate="yes" xml:space="preserve">
          <source>COMMON PROBLEMS:</source>
          <target state="translated">常见的问题。</target>
        </trans-unit>
        <trans-unit id="080dbc002bfc9997e3f50f4dbccf9bd8f4a553ff" translate="yes" xml:space="preserve">
          <source>Check all files associated with file that causes this error.</source>
          <target state="translated">检查所有与导致此错误的文件相关的文件。</target>
        </trans-unit>
        <trans-unit id="4145656d5afa36bd7f5a11611c07d39f8fb505d3" translate="yes" xml:space="preserve">
          <source>Checking with &lt;code&gt;headers_sent()&lt;/code&gt;</source>
          <target state="translated">检查 &lt;code&gt;headers_sent()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="35018bf39b74ef3b2fd82a6105c1c142805cdc56" translate="yes" xml:space="preserve">
          <source>Common reasons are accesses to undefined elements of an array (such as &lt;code&gt;$_POST['input']&lt;/code&gt; without using &lt;a href=&quot;http://php.net/empty&quot;&gt;&lt;code&gt;empty&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/isset&quot;&gt;&lt;code&gt;isset&lt;/code&gt;&lt;/a&gt; to test whether the input is set), or using an undefined constant instead of a string literal (as in &lt;code&gt;$_POST[input]&lt;/code&gt;, note the missing quotes).</source>
          <target state="translated">常见的原因是访问数组的未定义元素（例如 &lt;code&gt;$_POST['input']&lt;/code&gt; 而不使用&lt;a href=&quot;http://php.net/empty&quot;&gt; &lt;code&gt;empty&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;http://php.net/isset&quot;&gt; &lt;code&gt;isset&lt;/code&gt; &lt;/a&gt;来测试是否设置了输入），或者使用未定义的常量而不是字符串文字（如 &lt;code&gt;$_POST[input]&lt;/code&gt; ，请注意缺少的引号。</target>
        </trans-unit>
        <trans-unit id="cfe68db42e7c9cf26d2cdc5c4c383e24c3d66de8" translate="yes" xml:space="preserve">
          <source>Conclusion: Do not output any character before calling &lt;code&gt;session_start()&lt;/code&gt; or &lt;code&gt;header()&lt;/code&gt; functions not even a white-space or new-line</source>
          <target state="translated">结论：在调用 &lt;code&gt;session_start()&lt;/code&gt; 或 &lt;code&gt;header()&lt;/code&gt; 函数之前，即使是空格或换行符，也不要输出任何字符</target>
        </trans-unit>
        <trans-unit id="084c7e517d6eef632e47c4d0531dbf8a8742b8a1" translate="yes" xml:space="preserve">
          <source>Correction utilities</source>
          <target state="translated">惩戒公用事业</target>
        </trans-unit>
        <trans-unit id="4f929e5b8b1fac950eba5db2809854af5fe0cf48" translate="yes" xml:space="preserve">
          <source>Enabling it will allow PHP to buffer output instead of passing it to the webserver
instantly. PHP thus can aggregate HTTP headers.</source>
          <target state="translated">启用它可以让 PHP 缓冲输出,而不是即时传递给 webserver。这样,PHP就可以聚合HTTP头文件。</target>
        </trans-unit>
        <trans-unit id="ffb9ecb8e0aa36913c7caf9fc614b5d27eaed562" translate="yes" xml:space="preserve">
          <source>Error source mentioned as &quot;Unknown on line 0&quot;</source>
          <target state="translated">错误来源为 &quot;第0行未知&quot;</target>
        </trans-unit>
        <trans-unit id="f7c8f0ea9d6cd3402741f7f5dcdf45c754f8ce63" translate="yes" xml:space="preserve">
          <source>Even if &lt;code&gt;&amp;lt;?php ob_start(); ?&amp;gt;&lt;/code&gt; starts the first script, whitespace or a
BOM might get shuffled before, &lt;a href=&quot;https://stackoverflow.com/questions/2168956/php-header-problem-even-i-use-ob-start-and-ob-end-flush&quot;&gt;rendering it ineffective&lt;/a&gt;.</source>
          <target state="translated">即使 &lt;code&gt;&amp;lt;?php ob_start(); ?&amp;gt;&lt;/code&gt; ？&amp;gt;启动第一个脚本，空格或BOM之前可能会被改组， &lt;a href=&quot;https://stackoverflow.com/questions/2168956/php-header-problem-even-i-use-ob-start-and-ob-end-flush&quot;&gt;使其无效&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="d0ce63c71aa68577ce9f080b1f440cd0cf8809cf" translate="yes" xml:space="preserve">
          <source>Example of Unpredictable Error:</source>
          <target state="translated">不可预知的错误的例子。</target>
        </trans-unit>
        <trans-unit id="06eee975d368705b78968cd15675ecdbac9f559e" translate="yes" xml:space="preserve">
          <source>Explicit output, such as calls to &lt;code&gt;echo&lt;/code&gt;, &lt;code&gt;printf&lt;/code&gt;, &lt;code&gt;readfile&lt;/code&gt;, &lt;code&gt;passthru&lt;/code&gt;, code before &lt;code&gt;&amp;lt;?&lt;/code&gt; etc.</source>
          <target state="translated">显式输出，例如对 &lt;code&gt;&amp;lt;?&lt;/code&gt; 之前的 &lt;code&gt;echo&lt;/code&gt; ， &lt;code&gt;printf&lt;/code&gt; ， &lt;code&gt;readfile&lt;/code&gt; ， &lt;code&gt;passthru&lt;/code&gt; ，代码的调用 等等</target>
        </trans-unit>
        <trans-unit id="1cfcd0f679366e71ace8ae170ef8a4b2acfdb3b2" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;http://www.php-fig.org/psr/psr-2/&quot;&gt;PSR-2 2.2 :&lt;/a&gt;</source>
          <target state="translated">从&lt;a href=&quot;http://www.php-fig.org/psr/psr-2/&quot;&gt;PSR-2 2.2开始：&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a9657b7db85a9bee9b1d89e241f50fcfa5b1c4b" translate="yes" xml:space="preserve">
          <source>Functions that produce output include</source>
          <target state="translated">产生输出的函数包括</target>
        </trans-unit>
        <trans-unit id="6b119190971a95dc814eb69929b841a0352ce50f" translate="yes" xml:space="preserve">
          <source>Functions that send/modify HTTP headers must be invoked &lt;strong&gt;&lt;em&gt;before any output is made&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;在进行任何输出之前，&lt;/em&gt;&lt;/strong&gt;必须调用发送/修改HTTP标头的函数。</target>
        </trans-unit>
        <trans-unit id="9da7b0d94b00cb1668a89f743a072fd21d8e7390" translate="yes" xml:space="preserve">
          <source>Further links</source>
          <target state="translated">更多链接</target>
        </trans-unit>
        <trans-unit id="08cca31f529818dd7525d4ef2cdae9251c6f43ea" translate="yes" xml:space="preserve">
          <source>Generally this error arise when we send header after echoing or printing. If this error arise on a specific page then make sure that page is not echoing anything before calling to &lt;code&gt;start_session()&lt;/code&gt;.</source>
          <target state="translated">通常，当我们在回显或打印后发送标题时，会出现此错误。 如果在特定页面上发生此错误，请在调用 &lt;code&gt;start_session()&lt;/code&gt; 之前确保该页面没有回显任何内容。</target>
        </trans-unit>
        <trans-unit id="d951eb860d3600546a926ad74d424a9aceed3512" translate="yes" xml:space="preserve">
          <source>Google provides a &lt;a href=&quot;http://www.google.com/search?q=php+headers+already+sent&quot;&gt;lengthy list of similar discussions&lt;/a&gt;.</source>
          <target state="translated">Google提供了&lt;a href=&quot;http://www.google.com/search?q=php+headers+already+sent&quot;&gt;一长串类似的讨论&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="78af8801ed09e8991e01f9c02bc70d508e2fbb60" translate="yes" xml:space="preserve">
          <source>HTML &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag</source>
          <target state="translated">HTML &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 标签</target>
        </trans-unit>
        <trans-unit id="1fb561c07735cdfab6d51989d70193c375b4ef51" translate="yes" xml:space="preserve">
          <source>Here &quot;line 100&quot; refers to the script where the &lt;code&gt;header()&lt;/code&gt;&lt;em&gt;invocation&lt;/em&gt; failed.</source>
          <target state="translated">这里的&amp;ldquo;第100行&amp;rdquo;指的是 &lt;code&gt;header()&lt;/code&gt; &lt;em&gt;调用&lt;/em&gt;失败的脚本。</target>
        </trans-unit>
        <trans-unit id="b5eb2bd83246ca2ff77f046fd1e92837e5280e54" translate="yes" xml:space="preserve">
          <source>How can you find out where the premature output occured?</source>
          <target state="translated">如何才能找到早产的发生地?</target>
        </trans-unit>
        <trans-unit id="fb8de51a3147bf9361552a75519aee211869b3ba" translate="yes" xml:space="preserve">
          <source>How to fix “Headers already sent” error in PHP</source>
          <target state="translated">如何修复PHP中的 &quot;Headers already sent &quot;错误?</target>
        </trans-unit>
        <trans-unit id="aaa613cac4e9ee31e971138cf9b389b5a2d3620a" translate="yes" xml:space="preserve">
          <source>However, while output buffering avoids the issues, you should really determine why your application outputs an HTTP body before the HTTP header. That'd be like taking a phone call and discussing your day and the weather before telling the caller that he's got the wrong number.</source>
          <target state="translated">然而,虽然输出缓冲可以避免这些问题,但你真的应该确定你的应用程序为什么要在HTTP头之前输出一个HTTP体。这就好比接一个电话,在告诉来电者他打错了电话之前,先讨论一下你的一天和天气,然后再告诉他打错了。</target>
        </trans-unit>
        <trans-unit id="733646f6f36ede40f114a7d422999b4d35a222c0" translate="yes" xml:space="preserve">
          <source>I got this error many times before, and I am certain all PHP programmer got this error at least once before.</source>
          <target state="translated">我曾经多次遇到过这个错误,我相信所有的PHP程序员至少都遇到过一次这样的错误。</target>
        </trans-unit>
        <trans-unit id="283d047e75f38f6d41b998f878ef3520f8647fc6" translate="yes" xml:space="preserve">
          <source>I have seen these things ;)</source>
          <target state="translated">我见过这些东西;)</target>
        </trans-unit>
        <trans-unit id="65abe0c959d0c2b0d142f0f4a6763d1b7e6e4929" translate="yes" xml:space="preserve">
          <source>If another PHP statement or expression causes a warning message or
notice being printeded out, that also counts as premature output.</source>
          <target state="translated">如果另一个PHP语句或表达式导致警告信息或通知被打印出来,也会被视为过早输出。</target>
        </trans-unit>
        <trans-unit id="e59ed463246e8d3cb2feb75c276b720f7f24bce1" translate="yes" xml:space="preserve">
          <source>If the error source is mentioned as behind the
&lt;a href=&quot;https://stackoverflow.com/questions/4410704/php-closing-tag&quot;&gt;closing &lt;code&gt;?&amp;gt;&lt;/code&gt;&lt;/a&gt;
then this is where some whitespace or raw text got written out.
The PHP end marker does not terminate script executation at this
point. Any text/space characters after it will be written out as page content
still.</source>
          <target state="translated">如果错误源在&lt;a href=&quot;https://stackoverflow.com/questions/4410704/php-closing-tag&quot;&gt;结束&lt;/a&gt;符 &lt;code&gt;?&amp;gt;&lt;/code&gt; 后面提到，那么这是写出一些空白或原始文本的地方。 此时，PHP结束标记不会终止脚本执行。 其后的所有文本/空格字符仍将被写作页面内容。</target>
        </trans-unit>
        <trans-unit id="9ace658489706f5fdae0235c03defa461ab365e7" translate="yes" xml:space="preserve">
          <source>If the warning refers to output in line &lt;strong&gt;&lt;code&gt;1&lt;/code&gt;&lt;/strong&gt;, then it's mostly
leading &lt;strong&gt;whitespace&lt;/strong&gt;, text or HTML before the opening &lt;code&gt;&amp;lt;?php&lt;/code&gt; token.</source>
          <target state="translated">如果警告涉及第&lt;strong&gt; &lt;code&gt;1&lt;/code&gt; &lt;/strong&gt;行中的输出，则在打开 &lt;code&gt;&amp;lt;?php&lt;/code&gt; 标记之前，它主要是前导&lt;strong&gt;空格&lt;/strong&gt; ，文本或HTML。</target>
        </trans-unit>
        <trans-unit id="a01c86daf4049ff95ce6d47804aca0031a6bf853" translate="yes" xml:space="preserve">
          <source>If you didn't get the headers warning before, then the &lt;a href=&quot;http://php.net/manual/en/outcontrol.configuration.php&quot;&gt;output buffering
 php.ini setting&lt;/a&gt;
 has changed. It's likely unconfigured on the current/new server.</source>
          <target state="translated">如果以前没有收到标头警告，则&lt;a href=&quot;http://php.net/manual/en/outcontrol.configuration.php&quot;&gt;输出缓冲php.ini设置&lt;/a&gt;已更改。 当前/新服务器上可能未配置它。</target>
        </trans-unit>
        <trans-unit id="ec99dc57bf928bbad9b90cb33bfefb46126e7df2" translate="yes" xml:space="preserve">
          <source>If you have &lt;code&gt;error_reporting&lt;/code&gt; or &lt;code&gt;display_errors&lt;/code&gt; disabled per &lt;code&gt;php.ini&lt;/code&gt;,
then no warning will show up. But ignoring errors won't make the problem go
away. Headers still can't be sent after premature output.</source>
          <target state="translated">如果每个 &lt;code&gt;php.ini&lt;/code&gt; 禁用了 &lt;code&gt;error_reporting&lt;/code&gt; 或 &lt;code&gt;display_errors&lt;/code&gt; ，则不会显示警告。 但是，忽略错误并不能解决问题。 标头过早输出后仍无法发送标头。</target>
        </trans-unit>
        <trans-unit id="2c05bd930cc0354b6ea7bba227c30fd646254f56" translate="yes" xml:space="preserve">
          <source>If your application is structurally hard to fix, then an easy (but
somewhat unprofessional) way to allow redirects is injecting a HTML
&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag. A redirect can be achieved with:</source>
          <target state="translated">如果您的应用程序在结构上很难修复，则允许重定向的一种简单（但有些不专业）的方法是注入HTML &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 标签。 重定向可以通过以下方式实现：</target>
        </trans-unit>
        <trans-unit id="9f49403252c5aa9d693fe60a1e84a102cdcee274" translate="yes" xml:space="preserve">
          <source>In particular graphical editors and Java based IDEs are oblivious to its
presence. They don't visualize it (obliged by the Unicode standard).
Most programmer and console editors however do:</source>
          <target state="translated">尤其是图形化编辑器和基于Java的IDEs,对它的存在视而不见。他们没有将其可视化(由Unicode标准规定)。然而,大多数程序员和控制台编辑器都是这样做的。</target>
        </trans-unit>
        <trans-unit id="e70ad363e8fd9224c2bb80e4995caddcd53db9a7" translate="yes" xml:space="preserve">
          <source>In this case you need to eschew the error,
delay the statement execution, or suppress the message with e.g.
&lt;a href=&quot;http://php.net/isset&quot;&gt;&lt;code&gt;isset()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/@&quot;&gt;&lt;code&gt;@()&lt;/code&gt;&lt;/a&gt; -
when either doesn't obstruct debugging later on.</source>
          <target state="translated">在这种情况下，您需要避开错误，延迟语句执行或使用&lt;a href=&quot;http://php.net/isset&quot;&gt; &lt;code&gt;isset()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;http://php.net/@&quot;&gt; &lt;code&gt;@()&lt;/code&gt; &lt;/a&gt;禁止显示消息-当其中一个以后都不会妨碍调试时。</target>
        </trans-unit>
        <trans-unit id="f6ea87e9dd1c53017797d5763bf9e24d529fd535" translate="yes" xml:space="preserve">
          <source>Instead of the below line</source>
          <target state="translated">而不是下面这一行</target>
        </trans-unit>
        <trans-unit id="680cb470a4471e37fb38518fc6def796d53f475b" translate="yes" xml:space="preserve">
          <source>Intentional output from &lt;code&gt;print&lt;/code&gt; and &lt;code&gt;echo&lt;/code&gt; statements will terminate
the opportunity to send HTTP headers. The application flow must
be restructured to avoid that. Use &lt;a href=&quot;http://php.net/function&quot;&gt;functions&lt;/a&gt;
and templating schemes. Ensure &lt;code&gt;header()&lt;/code&gt; calls occur &lt;em&gt;before&lt;/em&gt; messages
are written out.</source>
          <target state="translated">来自 &lt;code&gt;print&lt;/code&gt; 和 &lt;code&gt;echo&lt;/code&gt; 语句的有意输出将终止发送HTTP标头的机会。 必须对应用程序流程进行重组以避免这种情况。 使用&lt;a href=&quot;http://php.net/function&quot;&gt;函数&lt;/a&gt;和模板方案。 确保&lt;em&gt;在&lt;/em&gt;写出消息&lt;em&gt;之前&lt;/em&gt;发生 &lt;code&gt;header()&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="e644be32391e41084f382e6469fc7b51f4d8c6db" translate="yes" xml:space="preserve">
          <source>Is using output buffering considered a bad practice?</source>
          <target state="translated">使用输出缓冲器是否被认为是不好的做法?</target>
        </trans-unit>
        <trans-unit id="2140ef1311c17d74bcbe9af77a51b69d777d467c" translate="yes" xml:space="preserve">
          <source>It can conceal whitespace for HTML output. But as soon as the application
logic attempts to send binary content (a generated image for example),
the buffered extraneous output becomes a problem. (Necessitating &lt;code&gt;ob_clean()&lt;/code&gt;
as furher workaround.)</source>
          <target state="translated">它可以隐藏用于HTML输出的空格。 但是，一旦应用程序逻辑尝试发送二进制内容（例如，生成的图像）​​，则缓冲的无关输出就成为问题。 （需要使用 &lt;code&gt;ob_clean()&lt;/code&gt; 作为进一步的解决方法。）</target>
        </trans-unit>
        <trans-unit id="460952e8680d6fc8c5214a1755ef7fffde3b88ab" translate="yes" xml:space="preserve">
          <source>It can likewise be engaged with a call to &lt;a href=&quot;http://php.net/ob_start&quot;&gt;&lt;code&gt;ob_start();&lt;/code&gt;&lt;/a&gt;
atop the invocation script. Which however is less reliable for multiple reasons:</source>
          <target state="translated">它也可以与对&lt;a href=&quot;http://php.net/ob_start&quot;&gt; &lt;code&gt;ob_start();&lt;/code&gt; &lt;/a&gt;的调用一起使用； 在调用脚本之上。 但是，由于多种原因，它的可靠性较差：</target>
        </trans-unit>
        <trans-unit id="df2e845a5893d911df687f4a8b5a04ffcb1da5b2" translate="yes" xml:space="preserve">
          <source>It is because of this line:</source>
          <target state="translated">正是因为这句话的缘故。</target>
        </trans-unit>
        <trans-unit id="969f7c3c40c6b6b03fd989788ff6dbc167e82d97" translate="yes" xml:space="preserve">
          <source>It'll definitely solve your problem.
I faced the same problem but I solved through writing header location in the above way.</source>
          <target state="translated">肯定能解决你的问题。我也遇到过同样的问题,但我是通过上面的方法写标题位置来解决的。</target>
        </trans-unit>
        <trans-unit id="c026cbcad3a9bd41a7228dcdb8c817c033b831cc" translate="yes" xml:space="preserve">
          <source>It's commonly advised, in particular to newcomers, that trailing &lt;code&gt;?&amp;gt;&lt;/code&gt; PHP
close tags should be omitted. This &lt;em&gt;eschews&lt;/em&gt; a small portion of these cases.
(Quite commonly &lt;code&gt;include()d&lt;/code&gt; scripts are the culprit.)</source>
          <target state="translated">通常建议，特别是对新手来说，应省略结尾的 &lt;code&gt;?&amp;gt;&lt;/code&gt; PHP close标签。 这&lt;em&gt;避免&lt;/em&gt;了这些情况的一小部分。 （罪魁祸首通常是 &lt;code&gt;include()d&lt;/code&gt; 脚本。）</target>
        </trans-unit>
        <trans-unit id="23f28972d1cfa7c0ea3cb2677de7d052b0415fb1" translate="yes" xml:space="preserve">
          <source>It's occasionally the &lt;code&gt;gzip&lt;/code&gt; stream encoding setting
&lt;a href=&quot;https://stackoverflow.com/questions/622192/php-warning-headers-already-sent-in-unknown&quot;&gt;or the &lt;code&gt;ob_gzhandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有时是 &lt;code&gt;gzip&lt;/code&gt; 流编码设置&lt;a href=&quot;https://stackoverflow.com/questions/622192/php-warning-headers-already-sent-in-unknown&quot;&gt;或 &lt;code&gt;ob_gzhandler&lt;/code&gt; &lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="75bf787b7be5f2093ecbea5d65eb3d4bbe834b88" translate="yes" xml:space="preserve">
          <source>It's sane to use on a whole include or project directory.</source>
          <target state="translated">在整个include或项目目录中使用是很正常的。</target>
        </trans-unit>
        <trans-unit id="5c55db306287cfaac95bcaace84e7a121503e878" translate="yes" xml:space="preserve">
          <source>It's typically a PHP extension or php.ini setting if no error source
is concretized.</source>
          <target state="translated">一般是PHP扩展或php.ini设置,如果没有具体化的错误源,。</target>
        </trans-unit>
        <trans-unit id="6d61c01843cdb7e4342c1d472c343b9d4e5ca89b" translate="yes" xml:space="preserve">
          <source>JavaScript redirect</source>
          <target state="translated">JavaScript重定向</target>
        </trans-unit>
        <trans-unit id="d6e795d64f0573e3b979693321e4f0e1e84ba0b4" translate="yes" xml:space="preserve">
          <source>Linebreaks and spaces alone can be a problem. But there are also &quot;invisible&quot;
character sequences which can cause this. Most famously the
&lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;&lt;strong&gt;UTF-8 BOM&lt;/strong&gt; (Byte-Order-Mark)&lt;/a&gt;
which isn't displayed by most text editors. It's the byte sequence &lt;code&gt;EF BB BF&lt;/code&gt;, which
is optional and redundant for UTF-8 encoded documents. PHP however has to treat
it as raw output. It may show up as the characters &lt;code&gt;&amp;iuml;&amp;raquo;&amp;iquest;&lt;/code&gt; in the output (if the client
interprets the document as Latin-1) or similar &quot;garbage&quot;.</source>
          <target state="translated">仅换行和空格可能是一个问题。 但是也有可能导致这种情况的&amp;ldquo;不可见&amp;rdquo;字符序列。 最著名的是&lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;&lt;strong&gt;UTF-8 BOM&lt;/strong&gt; （字节顺序标记）&lt;/a&gt; ，大多数文本编辑器都不会显示。 这是字节序列 &lt;code&gt;EF BB BF&lt;/code&gt; ，对于UTF-8编码的文档是可选的并且是冗余的。 但是PHP必须将其视为原始输出。 它可能会在输出中显示为字符&amp;ldquo; &lt;code&gt;&amp;iuml;&amp;raquo;&amp;iquest;&lt;/code&gt; （如果客户将文档解释为Latin-1）或类似的&amp;ldquo;垃圾&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="f258aeaa35bd239f60cefd097b8adfda397737d7" translate="yes" xml:space="preserve">
          <source>No error message</source>
          <target state="translated">没有错误信息</target>
        </trans-unit>
        <trans-unit id="ab3d818f993b6432ad07ab109c1efa987f501765" translate="yes" xml:space="preserve">
          <source>No output before sending headers!</source>
          <target state="translated">在发送报头前没有输出!</target>
        </trans-unit>
        <trans-unit id="60155600ca6f1e13510057321a0cbc6f50b733de" translate="yes" xml:space="preserve">
          <source>Now,though this is not a common scenario what if you are using a MVC framework which loads a lots of file before handover things to your controller? This is not an uncommon scenario. Be prepare for this.</source>
          <target state="translated">现在,虽然这不是一个常见的场景,但如果你使用的是一个MVC框架,在把东西交给你的控制器之前,你会加载很多文件,那怎么办?这种情况并不罕见。对此要做好准备。</target>
        </trans-unit>
        <trans-unit id="750af79d66be273849143be1378cd17fc5bf7a94" translate="yes" xml:space="preserve">
          <source>Nucleus FAQ: &lt;a href=&quot;http://faq.nucleuscms.org/item/79&quot;&gt;What does &quot;page headers already sent&quot; mean?&lt;/a&gt;</source>
          <target state="translated">Nucleus FAQ： &lt;a href=&quot;http://faq.nucleuscms.org/item/79&quot;&gt;&amp;ldquo;页面头已发送&amp;rdquo;是什么意思？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d12f26544314335beb7af690a37352634d31faf" translate="yes" xml:space="preserve">
          <source>One more example:</source>
          <target state="translated">再举一个例子。</target>
        </trans-unit>
        <trans-unit id="f4ebc5c3fbe01c45b2da7627ccb863f3bcc728cc" translate="yes" xml:space="preserve">
          <source>One of the more thorough explanations is &lt;a href=&quot;http://web.archive.org/web/20080430141149/http://www.expertsrt.com/tutorials/Matt/HTTP_headers.html&quot;&gt;HTTP Headers and the PHP header() Function - A tutorial by NicholasSolutions&lt;/a&gt; (Internet Archive link).
It covers HTTP in detail and gives a few guidelines for rewriting scripts.</source>
          <target state="translated">更详尽的解释之一是&lt;a href=&quot;http://web.archive.org/web/20080430141149/http://www.expertsrt.com/tutorials/Matt/HTTP_headers.html&quot;&gt;HTTP Header和PHP header（）Function-NicholasSolutions的教程&lt;/a&gt; （Internet存档链接）。 它详细介绍了HTTP，并提供了一些重写脚本的准则。</target>
        </trans-unit>
        <trans-unit id="d7b2036de2b94d3213b9cfa3f727aebf227c378e" translate="yes" xml:space="preserve">
          <source>Or &lt;code&gt;set_error_handler(&quot;var_dump&quot;);&lt;/code&gt; if all else fails.</source>
          <target state="translated">或 &lt;code&gt;set_error_handler(&quot;var_dump&quot;);&lt;/code&gt; 如果其他所有方法都失败了。</target>
        </trans-unit>
        <trans-unit id="b83f20ab540b25ab07f97a7ef69054132b2d8232" translate="yes" xml:space="preserve">
          <source>Or with a short delay:</source>
          <target state="translated">或有短暂的延时。</target>
        </trans-unit>
        <trans-unit id="46bb206327db4f5a34a65938118293d1740b32cd" translate="yes" xml:space="preserve">
          <source>Otherwise the call fails:</source>
          <target state="translated">否则呼叫失败。</target>
        </trans-unit>
        <trans-unit id="25b6825e9a250cf96df82acd4ea1189153cca05c" translate="yes" xml:space="preserve">
          <source>Output buffering as workaround</source>
          <target state="translated">输出缓冲器作为变通方法</target>
        </trans-unit>
        <trans-unit id="fbf20e43ae182c2168b9de9490990dbe4fe1361b" translate="yes" xml:space="preserve">
          <source>Output can be:</source>
          <target state="translated">产出可。</target>
        </trans-unit>
        <trans-unit id="1226dfeda2f4ff9fd9b2342bf51356314ba7a9da" translate="yes" xml:space="preserve">
          <source>PHP actually eats up a &lt;em&gt;single&lt;/em&gt; linebreak after close tags. But it won't
compensate multiple newlines or tabs or spaces shifted into such gaps.</source>
          <target state="translated">实际上，PHP在关闭标签后吃了一个换行符。 但这不会补偿多个换行符或制表符或空格之间的空白。</target>
        </trans-unit>
        <trans-unit id="07c4e9111bfdb4931556d5dbcdfc8436a3704b98" translate="yes" xml:space="preserve">
          <source>PHPs &lt;a href=&quot;http://www.php.net/manual/en/intro.outcontrol.php&quot;&gt;output buffering&lt;/a&gt;
is a workaround to alleviate this issue. It often works reliably, but shouldn't
substitute for proper application structuring and separating output from control
logic. Its actual purpose is minimizing chunked transfers to the webserver.</source>
          <target state="translated">PHP的&lt;a href=&quot;http://www.php.net/manual/en/intro.outcontrol.php&quot;&gt;输出缓冲&lt;/a&gt;是缓解此问题的一种解决方法。 它通常可以可靠地运行，但不能替代适当的应用程序结构并将输出与控制逻辑分开。 其实际目的是最大程度地减少到Web服务器的分块传输。</target>
        </trans-unit>
        <trans-unit id="871dfd21179b2a969a9e40af9b4b4dc52aca38eb" translate="yes" xml:space="preserve">
          <source>Place form processing code atop scripts.</source>
          <target state="translated">将表单处理代码置于脚本之上。</target>
        </trans-unit>
        <trans-unit id="e3a8864ed4e7f262dd96634e027ae3202002ce9d" translate="yes" xml:space="preserve">
          <source>Preceding error messages</source>
          <target state="translated">前面的错误信息</target>
        </trans-unit>
        <trans-unit id="a6197ab73406d6a1da49241880f98a630cf68967" translate="yes" xml:space="preserve">
          <source>Preferrably even a utility function, which prints a user message
in case of &lt;code&gt;header()&lt;/code&gt; failures.</source>
          <target state="translated">最好甚至是一个实用程序功能，在 &lt;code&gt;header()&lt;/code&gt; 失败的情况下打印用户消息。</target>
        </trans-unit>
        <trans-unit id="dbc5f9999ab2c031a0d1a3d4381434e049092871" translate="yes" xml:space="preserve">
          <source>Previous error messages or notices</source>
          <target state="translated">以往的错误信息或通知</target>
        </trans-unit>
        <trans-unit id="b108b98ce986e831e0bb76e7cfabaef4253441cf" translate="yes" xml:space="preserve">
          <source>Print, echo</source>
          <target state="translated">打印、回声</target>
        </trans-unit>
        <trans-unit id="440e1065e67861e1cbbd357429bb4fcaf47fffaa" translate="yes" xml:space="preserve">
          <source>Raw &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; sections prior &lt;code&gt;&amp;lt;?php&lt;/code&gt; code.</source>
          <target state="translated">原始 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 节之前的 &lt;code&gt;&amp;lt;?php&lt;/code&gt; 代码。</target>
        </trans-unit>
        <trans-unit id="42ad2c1ce416b769bd8a14d197b8c7f33ee89f20" translate="yes" xml:space="preserve">
          <source>Raw HTML areas</source>
          <target state="translated">原始HTML区域</target>
        </trans-unit>
        <trans-unit id="aad41ef05171dd03c6f21cdcfd8ba6d29c48c3b4" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;http://www.php.net/manual/en/outcontrol.examples.basic.php&quot;&gt;basic usage example&lt;/a&gt;
in the manual, and for more pros and cons:</source>
          <target state="translated">另请参见手册中的&lt;a href=&quot;http://www.php.net/manual/en/outcontrol.examples.basic.php&quot;&gt;基本用法示例&lt;/a&gt;以及更多优缺点：</target>
        </trans-unit>
        <trans-unit id="c96274f6802e465cc9c9a431e20ff4ea0f3a79ba" translate="yes" xml:space="preserve">
          <source>See this code snippet:</source>
          <target state="translated">请看这个代码片段。</target>
        </trans-unit>
        <trans-unit id="afa331cb3ce703a1801a0da022bf25d0dba0e41d" translate="yes" xml:space="preserve">
          <source>Similarly it can occur for appended scripts or script sections:</source>
          <target state="translated">同样的,它也可能发生在附加脚本或脚本部分。</target>
        </trans-unit>
        <trans-unit id="c814e99850ed01017dc50125d8d31b007f99e39f" translate="yes" xml:space="preserve">
          <source>So when &lt;code&gt;header(&quot;Location: ...&quot;)&lt;/code&gt; redirects silently fail it's very
advisable to probe for warnings. Reenable them with two simple commands
atop the invocation script:</source>
          <target state="translated">因此，当 &lt;code&gt;header(&quot;Location: ...&quot;)&lt;/code&gt; 提示重定向失败时，建议对警告进行探测。 使用调用脚本顶部的两个简单命令来重新启用它们：</target>
        </trans-unit>
        <trans-unit id="9c001eb0b959274e6598e45b51c7ec697091883b" translate="yes" xml:space="preserve">
          <source>Some functions modifying the HTTP header are:</source>
          <target state="translated">修改HTTP头的一些功能有:。</target>
        </trans-unit>
        <trans-unit id="457f4bdd992f65de85e0284c53b500b984e66c10" translate="yes" xml:space="preserve">
          <source>Sometimes when the dev process has both WIN work stations and LINUX systems (hosting) and in the code you do not see any output before the related line, it could be the formatting of the file and the lack of &lt;em&gt;Unix LF (linefeed)&lt;/em&gt; 
 line ending.</source>
          <target state="translated">有时，当开发过程同时具有WIN工作站和LINUX系统（托管），并且在代码中您未在相关行之前看到任何输出时，可能是文件格式化以及缺少&lt;em&gt;Unix LF（换&lt;/em&gt;行&lt;em&gt;）&lt;/em&gt;行结尾。</target>
        </trans-unit>
        <trans-unit id="35c186b83bbd035d3b077f39a168883ebadd7a51" translate="yes" xml:space="preserve">
          <source>Speaking of redirect headers, you should often use an idiom like
this for final code paths:</source>
          <target state="translated">说到重定向头,你应该经常用这样的成语来做最后的代码路径。</target>
        </trans-unit>
        <trans-unit id="c5dad13495a39b2aaa72669dbca9709aade63e41" translate="yes" xml:space="preserve">
          <source>The &quot;&lt;em&gt;output started at&lt;/em&gt;&quot; note within the parenthesis is more significant.
It denominates the source of previous output. In this example it's &lt;code&gt;auth.php&lt;/code&gt;
and &lt;strong&gt;line &lt;code&gt;52&lt;/code&gt;&lt;/strong&gt;. That's where you had to look for premature output.</source>
          <target state="translated">括号内的&amp;ldquo; &lt;em&gt;输出始于&lt;/em&gt; &amp;rdquo;注释更为重要。 它表示先前输出的来源。 在此示例中，它是 &lt;code&gt;auth.php&lt;/code&gt; 和&lt;strong&gt;第 &lt;code&gt;52&lt;/code&gt; 行&lt;/strong&gt; 。 那是您必须寻找过早输出的地方。</target>
        </trans-unit>
        <trans-unit id="60c4103865e6ab5be3c8bc40fdc36b26f527767c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;UTF-8 Byte Order Mark&lt;/a&gt; specifically</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;UTF-8字节顺序标记&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bfc67947482f65d72054027fe3e5b7d8980cd8d5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://php.net/manual/en/outcontrol.configuration.php&quot;&gt;&lt;code&gt;output_buffering=&lt;/code&gt;&lt;/a&gt;
setting nevertheless can help.
Configure it in the &lt;a href=&quot;http://www.php.net/manual/en/configuration.file.php&quot;&gt;php.ini&lt;/a&gt;
or via &lt;a href=&quot;http://www.php.net/manual/en/configuration.changes.php&quot;&gt;.htaccess&lt;/a&gt;
or even &lt;a href=&quot;http://php.net/manual/en/configuration.file.per-user.php&quot;&gt;.user.ini&lt;/a&gt; on
modern FPM/FastCGI setups.</source>
          <target state="translated">尽管如此， &lt;a href=&quot;http://php.net/manual/en/outcontrol.configuration.php&quot;&gt; &lt;code&gt;output_buffering=&lt;/code&gt; &lt;/a&gt;设置仍然可以提供帮助。 在现代FPM / FastCGI设置中，通过&lt;a href=&quot;http://www.php.net/manual/en/configuration.file.php&quot;&gt;php.ini&lt;/a&gt;或&lt;a href=&quot;http://www.php.net/manual/en/configuration.changes.php&quot;&gt;.htaccess&lt;/a&gt;甚至&lt;a href=&quot;http://php.net/manual/en/configuration.file.per-user.php&quot;&gt;.user.ini对其&lt;/a&gt;进行配置。</target>
        </trans-unit>
        <trans-unit id="61727afbf7f854065da49c03331457c836b6a7b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;header()&lt;/code&gt; warning contains all relevant information to
locate the problem cause:</source>
          <target state="translated">&lt;code&gt;header()&lt;/code&gt; 警告包含所有相关信息以查找问题原因：</target>
        </trans-unit>
        <trans-unit id="d388d8e098d20cd9af6f1ebf6648b8587b897873" translate="yes" xml:space="preserve">
          <source>The Wordpress FAQ explains &lt;a href=&quot;http://codex.wordpress.org/FAQ_Troubleshooting#How_do_I_solve_the_Headers_already_sent_warning_problem.3F&quot;&gt;How do I solve the Headers already sent warning problem?&lt;/a&gt; in a generic manner.</source>
          <target state="translated">WordPress常见问题解答说明了&lt;a href=&quot;http://codex.wordpress.org/FAQ_Troubleshooting#How_do_I_solve_the_Headers_already_sent_warning_problem.3F&quot;&gt;如何解决标题已发送的警告问题？&lt;/a&gt; 以一般的方式</target>
        </trans-unit>
        <trans-unit id="1299f1d073f53b4fdb9f45c83c5ba533dfc77f50" translate="yes" xml:space="preserve">
          <source>The actual output logic and intermixed HTML output should follow last.</source>
          <target state="translated">实际的输出逻辑和混杂的HTML输出应该遵循最后的逻辑。</target>
        </trans-unit>
        <trans-unit id="465de4ea532c328ef7c14fcb28faf27199d85230" translate="yes" xml:space="preserve">
          <source>The buffer is limited in size, and can easily overrun when left to defaults.
And that's not a rare occurence either, &lt;a href=&quot;https://stackoverflow.com/questions/17643837/php-headers-already-sent-error-depending-on-output-length&quot;&gt;difficult to track down&lt;/a&gt;
when it happens.</source>
          <target state="translated">缓冲区的大小是有限的，当保留默认值时，缓冲区很容易溢出。 而且这也不是少见的事情， &lt;a href=&quot;https://stackoverflow.com/questions/17643837/php-headers-already-sent-error-depending-on-output-length&quot;&gt;很难&lt;/a&gt;在发生时进行跟踪 。</target>
        </trans-unit>
        <trans-unit id="901602370607a9c90b5d6e34515558479dab211f" translate="yes" xml:space="preserve">
          <source>The lines mentioned in the error messages contain &lt;a href=&quot;http://php.net/header&quot;&gt;&lt;code&gt;header()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://php.net/setcookie&quot;&gt;&lt;code&gt;setcookie()&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="translated">错误消息中提到的行包含&lt;a href=&quot;http://php.net/header&quot;&gt; &lt;code&gt;header()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;http://php.net/setcookie&quot;&gt; &lt;code&gt;setcookie()&lt;/code&gt; &lt;/a&gt;调用。</target>
        </trans-unit>
        <trans-unit id="be402a0273c8735932dad5d863825a4f9638b1c7" translate="yes" xml:space="preserve">
          <source>The page/output always &lt;em&gt;follows&lt;/em&gt; the headers. PHP has to pass the
headers to the webserver first. It can only do that once.
After the double linebreak it can nevermore amend them.</source>
          <target state="translated">页面/输出始终&lt;em&gt;跟随&lt;/em&gt;标题。 PHP必须先将标头传递到Web服务器。 它只能这样做一次。 在两次换行后，它再也不能修改它们。</target>
        </trans-unit>
        <trans-unit id="9c523bd998fdd5b6d22e65230344dfb3de8fcbf3" translate="yes" xml:space="preserve">
          <source>There are also automated tools to examine and rewrite text files
(&lt;a href=&quot;https://stackoverflow.com/questions/1068650/using-awk-to-remove-the-byte-order-mark&quot;&gt;&lt;code&gt;sed&lt;/code&gt;/&lt;code&gt;awk&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;recode&lt;/code&gt;).
For PHP specifically there's the &lt;a href=&quot;http://freshcode.club/projects/phptags&quot;&gt;&lt;code&gt;phptags&lt;/code&gt; tag tidier&lt;/a&gt;.
It rewrites close and open tags into long and short forms, but also easily
fixes leading and trailing whitespace, Unicode and UTF-x BOM issues:</source>
          <target state="translated">还有自动工具来检查和重写文本文件（ &lt;a href=&quot;https://stackoverflow.com/questions/1068650/using-awk-to-remove-the-byte-order-mark&quot;&gt; &lt;code&gt;sed&lt;/code&gt; / &lt;code&gt;awk&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;recode&lt;/code&gt; ）。 专门针对PHP，有&lt;a href=&quot;http://freshcode.club/projects/phptags&quot;&gt; &lt;code&gt;phptags&lt;/code&gt; 标签tidier&lt;/a&gt; 。 它将关闭和打开的标签改写为长号和短号形式，而且还可以轻松解决前导和尾随空格，Unicode和UTF-x BOM的问题：</target>
        </trans-unit>
        <trans-unit id="c83839bdc0a071f2ba32a305b159124b7480d55c" translate="yes" xml:space="preserve">
          <source>There it's easy to recognize the problem early on. Other editors may identify
its presence in a file/settings menu (Notepad++ on Windows can identify and
&lt;a href=&quot;https://stackoverflow.com/questions/3589358/fix-utf8-bom&quot;&gt;remedy the problem&lt;/a&gt;),
Another option to inspect the BOMs presence is resorting to an &lt;strong&gt;hexeditor&lt;/strong&gt;.
On *nix systems &lt;a href=&quot;http://linux.die.net/man/1/hexdump&quot;&gt;&lt;code&gt;hexdump&lt;/code&gt;&lt;/a&gt; is usually available,
if not a graphical variant which simplifies auditing these and other issues:</source>
          <target state="translated">很容易及早发现问题。 其他编辑器可能会在文件/设置菜单中识别其存在（Windows上的Notepad ++可以识别并&lt;a href=&quot;https://stackoverflow.com/questions/3589358/fix-utf8-bom&quot;&gt;解决问题&lt;/a&gt; ）。检查BOM存在的另一种方法是使用&lt;strong&gt;hexeditor&lt;/strong&gt; 。 在* nix系统上，通常可以使用&lt;a href=&quot;http://linux.die.net/man/1/hexdump&quot;&gt; &lt;code&gt;hexdump&lt;/code&gt; &lt;/a&gt; ，如果没有图形版本的话，则可以简化审核这些问题和其他问题：</target>
        </trans-unit>
        <trans-unit id="b1369bc7f4b92d3e80ceb25658c6d5fdb80775a4" translate="yes" xml:space="preserve">
          <source>Things are okay,right?</source>
          <target state="translated">一切都好了,对吧?</target>
        </trans-unit>
        <trans-unit id="965147083687d13a90053ee46572c0ae8044df87" translate="yes" xml:space="preserve">
          <source>This error may have been caused by the blank spaces &lt;em&gt;before&lt;/em&gt; the start of the file or &lt;em&gt;after&lt;/em&gt; the end of the file.These blank spaces should not be here.</source>
          <target state="translated">此错误可能是由文件开头&lt;em&gt;之前&lt;/em&gt;或文件结尾&lt;em&gt;之后&lt;/em&gt;的空格引起的。这些空格不应在此处。</target>
        </trans-unit>
        <trans-unit id="b2f829f30c005c315156fe94351d4b215744680a" translate="yes" xml:space="preserve">
          <source>This error message gets triggered when &lt;em&gt;anything&lt;/em&gt; is sent before you send HTTP headers (with &lt;a href=&quot;http://php.net/setcookie&quot;&gt;&lt;code&gt;setcookie&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/header&quot;&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt;). Common reasons for outputting something before the HTTP headers are:</source>
          <target state="translated">在发送HTTP标头（使用&lt;a href=&quot;http://php.net/setcookie&quot;&gt; &lt;code&gt;setcookie&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;http://php.net/header&quot;&gt; &lt;code&gt;header&lt;/code&gt; &lt;/a&gt; ）之前发送&lt;em&gt;任何内容&lt;/em&gt;时，都会触发此错误消息。 在HTTP标头之前输出内容的常见原因是：</target>
        </trans-unit>
        <trans-unit id="cf45b0cd1a393cf39888a97d1b59edec9ab0ea7f" translate="yes" xml:space="preserve">
          <source>This fix is an easy fix for sites we manage by FTP and sometimes can save our new team members some time.</source>
          <target state="translated">这个修复方法对于我们通过FTP管理的网站来说是一个很简单的修复方法,有时可以为我们的新团队成员节省一些时间。</target>
        </trans-unit>
        <trans-unit id="35de4ccb7277b55b8457fc26e778d438b3c92db0" translate="yes" xml:space="preserve">
          <source>This leads to non-valid HTML when utilized past the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section.
Most browsers still accept it.</source>
          <target state="translated">通过 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 部分使用时，这将导致HTML无效。 大多数浏览器仍然接受它。</target>
        </trans-unit>
        <trans-unit id="5642e8fe481ef2a419cad35a592b702098b08241" translate="yes" xml:space="preserve">
          <source>This will not work? Why?Because already a new line is generated.</source>
          <target state="translated">这样做不行吗?为什么?&quot;因为已经生成了一条新线。</target>
        </trans-unit>
        <trans-unit id="5604a98270c16f33778424478858bcdc2c54a1fc" translate="yes" xml:space="preserve">
          <source>This will turn output buffering on and your headers will be created after the page is buffered.</source>
          <target state="translated">这将打开输出缓冲,你的标题将在页面被缓冲后创建。</target>
        </trans-unit>
        <trans-unit id="d986bf96c434055d16a61765958a1786fc41b36e" translate="yes" xml:space="preserve">
          <source>To understand why headers must be sent before output it's necessary
to look at a typical &lt;a href=&quot;http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol&quot;&gt;HTTP&lt;/a&gt;
response. PHP scripts mainly generate HTML content, but also pass a
set of HTTP/CGI headers to the webserver:</source>
          <target state="translated">要了解为什么必须在输出之前发送标头，有必要查看典型的&lt;a href=&quot;http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol&quot;&gt;HTTP&lt;/a&gt;响应。 PHP脚本主要生成HTML内容，但还将一组HTTP / CGI标头传递给Web服务器：</target>
        </trans-unit>
        <trans-unit id="17e5b87f95de584ce412aed857c04526fec7c223" translate="yes" xml:space="preserve">
          <source>Turning on &lt;a href=&quot;http://php.net/manual/en/book.outcontrol.php&quot;&gt;output buffering&lt;/a&gt; should make the problem go away; all output after the call to &lt;a href=&quot;http://php.net/ob_start&quot;&gt;&lt;code&gt;ob_start&lt;/code&gt;&lt;/a&gt; is buffered in memory until you release the buffer, e.g. with &lt;a href=&quot;http://php.net/ob_end_flush&quot;&gt;&lt;code&gt;ob_end_flush&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">打开&lt;a href=&quot;http://php.net/manual/en/book.outcontrol.php&quot;&gt;输出缓冲&lt;/a&gt;应该可以使问题消失。 调用&lt;a href=&quot;http://php.net/ob_start&quot;&gt; &lt;code&gt;ob_start&lt;/code&gt; &lt;/a&gt;之后的所有输出都将缓冲在内存中，直到释放缓冲区为止，例如使用&lt;a href=&quot;http://php.net/ob_end_flush&quot;&gt; &lt;code&gt;ob_end_flush&lt;/code&gt; &lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="11ef5ae8efc774c915de8ea8f44cd12fce2b0032" translate="yes" xml:space="preserve">
          <source>UTF-8 BOM</source>
          <target state="translated">UTF-8 BOM</target>
        </trans-unit>
        <trans-unit id="4391319c5ae652e376bcc705cd6c88a5e66859ef" translate="yes" xml:space="preserve">
          <source>Unparsed HTML sections in a &lt;code&gt;.php&lt;/code&gt; file are direct output as well.
Script conditions that will trigger a &lt;code&gt;header()&lt;/code&gt; call must be noted
before &lt;em&gt;any&lt;/em&gt; raw &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; blocks.</source>
          <target state="translated">&lt;code&gt;.php&lt;/code&gt; 文件中未解析的HTML部分也可以直接输出。 在&lt;em&gt;任何&lt;/em&gt;原始 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 块之前，必须注意将触发 &lt;code&gt;header()&lt;/code&gt; 调用的脚本条件。</target>
        </trans-unit>
        <trans-unit id="ad23e3087cb0b6818c3c0dc4db8470ab2234f842" translate="yes" xml:space="preserve">
          <source>Use a templating scheme to separate processing from output logic.</source>
          <target state="translated">使用模板化方案将处理和输出逻辑分开。</target>
        </trans-unit>
        <trans-unit id="89eacc71efc056466e892db70cfce53ccf48bfc4" translate="yes" xml:space="preserve">
          <source>Use case for output buffering as the correct solution to &quot;headers already sent&quot;</source>
          <target state="translated">输出缓冲的用例,作为 &quot;已发送的报头 &quot;的正确解决方案。</target>
        </trans-unit>
        <trans-unit id="e1d3b00dc836b97fdeb0e4425269698ea67b6549" translate="yes" xml:space="preserve">
          <source>Use temporary string variables to defer messages.</source>
          <target state="translated">使用临时字符串变量来推迟消息。</target>
        </trans-unit>
        <trans-unit id="4418b3394a5252e61fdb3a37b810a92ad388d04b" translate="yes" xml:space="preserve">
          <source>Useful fallback workarounds are:</source>
          <target state="translated">有用的备用变通办法是:</target>
        </trans-unit>
        <trans-unit id="d8cdbbaadf4d0ca984ceef1d23545663c98563b5" translate="yes" xml:space="preserve">
          <source>Warning: Cannot modify header information - headers already sent (output started at</source>
          <target state="translated">警告:无法修改报头信息--已发送的报头信息(输出开始于 不能修改报头信息-已发送的报头信息(输出开始于</target>
        </trans-unit>
        <trans-unit id="db3f01c824ea9fd585d87525bc79bf24c9482312" translate="yes" xml:space="preserve">
          <source>Warning: Cannot modify header information - headers already sent by
  &lt;strong&gt;&lt;em&gt;(output started at&lt;/em&gt;&lt;/strong&gt; /www/usr2345/htdocs/&lt;b&gt;auth.php:52&lt;/b&gt;) in
  /www/usr2345/htdocs/index.php on line 100</source>
          <target state="translated">警告：无法修改标头信息-行100上&lt;b&gt;/www/usr2345/htdocs/index.php中&lt;/b&gt;已经发送过的标头&lt;strong&gt;&lt;em&gt;（输出始于&lt;/em&gt;&lt;/strong&gt; / www / usr2345 / htdocs / &lt;b&gt;auth.php：52&lt;/b&gt; ）</target>
        </trans-unit>
        <trans-unit id="712e71b0879e82e251cf8ef6b19fb04e8617bb6b" translate="yes" xml:space="preserve">
          <source>Warning: Cannot modify header information - headers already sent by (&lt;strong&gt;output started at /some/file.php:12&lt;/strong&gt;) in &lt;strong&gt;/some/file.php&lt;/strong&gt; on &lt;strong&gt;line 23&lt;/strong&gt;</source>
          <target state="translated">警告：无法修改标头信息- &lt;strong&gt;第23行的&lt;/strong&gt; &lt;strong&gt;/some/file.php中&lt;/strong&gt;已经由发送的标头（ &lt;strong&gt;输出从/some/file.php:12开始&lt;/strong&gt; ）</target>
        </trans-unit>
        <trans-unit id="c3c7420c8855f78aaa46e1f3f27a292564579030" translate="yes" xml:space="preserve">
          <source>What could be the reason for this? And how to fix it?</source>
          <target state="translated">可能是什么原因造成的?又该如何解决呢?</target>
        </trans-unit>
        <trans-unit id="eb3d7c6647bfc17293f5039e6530367d61e08190" translate="yes" xml:space="preserve">
          <source>What if &quot;a_important_file.php&quot; is this:</source>
          <target state="translated">如果 &quot;a_important_file.php &quot;是这样的呢?</target>
        </trans-unit>
        <trans-unit id="039b646899415b1efae3db32279441ceacf53e26" translate="yes" xml:space="preserve">
          <source>What is output buffering?</source>
          <target state="translated">什么是输出缓冲?</target>
        </trans-unit>
        <trans-unit id="2483acbf42e470b8a75fced3d175eade4b3bdb62" translate="yes" xml:space="preserve">
          <source>What we usually do in order to quickly fix this, is rename the file and on the LINUX system create a new file instead of the renamed one, and then copy the content into that. Many times this solve the issue as some of the files that were created in WIN once moved to the hosting cause this issue.</source>
          <target state="translated">为了快速解决这个问题,我们通常要做的是重命名文件,然后在LINUX系统中创建一个新的文件,而不是重命名的文件,然后将内容复制到该文件中。很多时候这样做可以解决这个问题,因为有些在WIN系统中创建的文件一旦移动到主机上就会引起这个问题。</target>
        </trans-unit>
        <trans-unit id="c425132485f8d835cd45cc0d2bdc306f39352976" translate="yes" xml:space="preserve">
          <source>When PHP receives the first output (&lt;code&gt;print&lt;/code&gt;, &lt;code&gt;echo&lt;/code&gt;, &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;) it will
&lt;em&gt;flush&lt;/em&gt; all collected headers. Afterwards it can send all the output
it wants. But sending further HTTP headers is impossible then.</source>
          <target state="translated">当PHP收到第一个输出（ &lt;code&gt;print&lt;/code&gt; ， &lt;code&gt;echo&lt;/code&gt; ， &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; ）时，它将&lt;em&gt;刷新&lt;/em&gt;所有收集的标头。 之后，它可以发送所需的所有输出。 但是，那时不可能发送更多的HTTP标头。</target>
        </trans-unit>
        <trans-unit id="1a516e5f4936748fa609d439609677c7305cde7d" translate="yes" xml:space="preserve">
          <source>When running my script, I am getting several errors like this:</source>
          <target state="translated">在运行我的脚本时,我收到了几个类似这样的错误。</target>
        </trans-unit>
        <trans-unit id="d8225beac5424532277222a2ea2e71c92937bf0d" translate="yes" xml:space="preserve">
          <source>While this is often more HTML compliant than the &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; workaround,
it incurs a reliance on JavaScript-capable clients.</source>
          <target state="translated">尽管这通常比 &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 解决方法更符合HTML规范，但它依赖于具有JavaScript功能的客户端。</target>
        </trans-unit>
        <trans-unit id="c40b45521afbf3d3441e415994019296056e23ef" translate="yes" xml:space="preserve">
          <source>Whitespace after &lt;code&gt;?&amp;gt;&lt;/code&gt;</source>
          <target state="translated">后面的空格 &lt;code&gt;?&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f9326622424b3f498dbf3984424497f5adb5ecd8" translate="yes" xml:space="preserve">
          <source>Whitespace before &lt;code&gt;&amp;lt;?php&lt;/code&gt; for &quot;script.php &lt;strong&gt;line 1&lt;/strong&gt;&quot; warnings</source>
          <target state="translated">&lt;code&gt;&amp;lt;?php&lt;/code&gt; 之前的空格表示&amp;ldquo; script.php &lt;strong&gt;第1行&lt;/strong&gt; &amp;rdquo;警告</target>
        </trans-unit>
        <trans-unit id="637e7144e81fd43b363d1448bfde9b9de7a9a5a0" translate="yes" xml:space="preserve">
          <source>Whitespace before &lt;code&gt;&amp;lt;?php&lt;/code&gt; or after &lt;code&gt;?&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;?php&lt;/code&gt; 之前或之后的空白 &lt;code&gt;?&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f1fd238ec4beb8cde6009aed857df6c13c1fa0d" translate="yes" xml:space="preserve">
          <source>Why &lt;code&gt;setcookie()&lt;/code&gt; and &lt;code&gt;session_start()&lt;/code&gt; are also affected</source>
          <target state="translated">为什么 &lt;code&gt;setcookie()&lt;/code&gt; 和 &lt;code&gt;session_start()&lt;/code&gt; 也受到影响</target>
        </trans-unit>
        <trans-unit id="4979c6f6275d7e7443fd9262f6a45c81621916a7" translate="yes" xml:space="preserve">
          <source>Why does it happen?</source>
          <target state="translated">为什么会出现这种情况?</target>
        </trans-unit>
        <trans-unit id="66880ed1e4d66e77ce35517bbc6c835c36a5c9f0" translate="yes" xml:space="preserve">
          <source>Why use output buffering in PHP?</source>
          <target state="translated">为什么在PHP中使用输出缓冲?</target>
        </trans-unit>
        <trans-unit id="53534306dfab747856ec65cc2634c27c6bea2930" translate="yes" xml:space="preserve">
          <source>You can always use &lt;a href=&quot;http://php.net/headers_sent&quot;&gt;&lt;code&gt;headers_sent()&lt;/code&gt;&lt;/a&gt; to probe if
it's still possible to... send headers. Which is useful to conditionally print
an info or apply other fallback logic.</source>
          <target state="translated">您始终可以使用&lt;a href=&quot;http://php.net/headers_sent&quot;&gt; &lt;code&gt;headers_sent()&lt;/code&gt; &lt;/a&gt;来探查是否仍然可以...发送标头。 这对于有条件地打印信息或应用其他后备逻辑很有用。</target>
        </trans-unit>
        <trans-unit id="3b4c6041c7ad665689c3c91b4a78ea602372b163" translate="yes" xml:space="preserve">
          <source>You do</source>
          <target state="translated">你是的</target>
        </trans-unit>
        <trans-unit id="8a1543697a418b930a7e5f9a3a72eb7c989af239" translate="yes" xml:space="preserve">
          <source>You should not &lt;strong&gt;&lt;em&gt;print/echo&lt;/em&gt;&lt;/strong&gt; anything before sending the headers.</source>
          <target state="translated">发送标题之前，您不应&lt;strong&gt;&lt;em&gt;打印/回显&lt;/em&gt;&lt;/strong&gt;任何内容。</target>
        </trans-unit>
        <trans-unit id="93a32092a442a15137062f7e09e70924d6780c81" translate="yes" xml:space="preserve">
          <source>among others and user-defined functions.</source>
          <target state="translated">其中,以及用户定义的功能。</target>
        </trans-unit>
        <trans-unit id="1ddf0068ae2c55a5155ce979ac559664d85d8158" translate="yes" xml:space="preserve">
          <source>before setting the cookies, which isn't allowed. You can't send any output before the headers, not even a blank line.</source>
          <target state="translated">在设置cookie之前,是不允许的。你不能在标题前发送任何输出,甚至不能发送空行。</target>
        </trans-unit>
        <trans-unit id="402f555bfe0827443f12db993d3324b99637e50d" translate="yes" xml:space="preserve">
          <source>ex)
    THERE SHOULD BE NO BLANK SPACES HERE</source>
          <target state="translated">ex)这里不应该有任何空白处</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="2200f74b7585475a53ccee3590ee688b7fb19b6f" translate="yes" xml:space="preserve">
          <source>script:line</source>
          <target state="translated">script:line</target>
        </trans-unit>
        <trans-unit id="e1d0c6c1c29e6ad5164072a5b21340dca7fcb052" translate="yes" xml:space="preserve">
          <source>write</source>
          <target state="translated">write</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
