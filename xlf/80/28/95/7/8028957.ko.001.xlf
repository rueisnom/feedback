<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/8028957">
    <body>
      <group id="8028957">
        <trans-unit id="c311ea9cf5d7e520cd5ef6b405aa4914125ac95e" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;To avoid this, simply leave out the closing &lt;code&gt;?&amp;gt;&lt;/code&gt; - it's not required anyways.</source>
          <target state="translated">이를 피하려면 닫는 &lt;code&gt;?&amp;gt;&lt;/code&gt; 를 생략하십시오. 어쨌든 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b775a598148446a2dcc7af53d651b2f82fcd57b1" translate="yes" xml:space="preserve">
          <source>(Of course they're furthermore affected by disabled cookies in the browser,
or even proxy issues. The session functionality obviously also depends on free
disk space and other php.ini settings, etc.)</source>
          <target state="translated">(물론 브라우저에서 비활성화 된 쿠키 또는 프록시 문제의 영향을받습니다. 세션 기능은 디스크 여유 공간 및 기타 php.ini 설정 등에 따라 달라집니다)</target>
        </trans-unit>
        <trans-unit id="6ba88d92adfd7dfeb2827485bbbcfbbd047f0175" translate="yes" xml:space="preserve">
          <source>(copied from: &lt;a href=&quot;https://stackoverflow.com/a/24928578/2377343&quot;&gt;source&lt;/a&gt;)</source>
          <target state="translated">( &lt;a href=&quot;https://stackoverflow.com/a/24928578/2377343&quot;&gt;출처&lt;/a&gt; : source )</target>
        </trans-unit>
        <trans-unit id="1cebd4db8c10209214d65022870a326a5c80f5f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;Byte order marks&lt;/a&gt; at the beginning of a php file. Examine your php files with a hex editor to find out whether that's the case. They should start with the bytes &lt;code&gt;3F 3C&lt;/code&gt;. You can safely remove the BOM &lt;code&gt;EF BB BF&lt;/code&gt; from the start of files.</source>
          <target state="translated">PHP 파일의 시작 부분에 &lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;바이트 순서 표시&lt;/a&gt; . 16 진 편집기로 PHP 파일을 검사하여 해당 여부를 찾으십시오. 바이트 &lt;code&gt;3F 3C&lt;/code&gt; 로 시작해야합니다. 파일 시작 부분에서 BOM &lt;code&gt;EF BB BF&lt;/code&gt; 를 안전하게 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="163baa1988aa61f9f3f74b26d4da09067d959a9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/header&quot;&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;http://php.net/header_remove&quot;&gt;&lt;code&gt;header_remove&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://php.net/header&quot;&gt; &lt;code&gt;header&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;http://php.net/header_remove&quot;&gt; &lt;code&gt;header_remove&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7557146aa6581e6030d4f6c9e968a0c1d8d97ceb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/session_start&quot;&gt;&lt;code&gt;session_start&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;http://php.net/session_regenerate_id&quot;&gt;&lt;code&gt;session_regenerate_id&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://php.net/session_start&quot;&gt; &lt;code&gt;session_start&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;http://php.net/session_regenerate_id&quot;&gt; &lt;code&gt;session_regenerate_id&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47e886f065f1089cbec9111b8a1c546c32a14ebc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/setcookie&quot;&gt;&lt;code&gt;setcookie&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;http://php.net/setrawcookie&quot;&gt;&lt;code&gt;setrawcookie&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://php.net/setcookie&quot;&gt; &lt;code&gt;setcookie&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;http://php.net/setrawcookie&quot;&gt; &lt;code&gt;setrawcookie&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c4a6a1a600111ff22d3739ace4b9a1b3379e97b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;print&lt;/code&gt;, &lt;code&gt;echo&lt;/code&gt; and other functions producing output</source>
          <target state="translated">&lt;code&gt;print&lt;/code&gt; , &lt;code&gt;echo&lt;/code&gt; 및 기타 출력 생성 기능</target>
        </trans-unit>
        <trans-unit id="e391141344cfe1a0358c9920e0879f71283d47fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;print&lt;/code&gt;, &lt;code&gt;echo&lt;/code&gt;, &lt;code&gt;printf&lt;/code&gt;, &lt;code&gt;vprintf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;print&lt;/code&gt; , &lt;code&gt;echo&lt;/code&gt; , &lt;code&gt;printf&lt;/code&gt; , &lt;code&gt;vprintf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9273b2288b736277f134ab1aa846e24da54b8e0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;readfile&lt;/code&gt;, &lt;code&gt;passthru&lt;/code&gt;, &lt;code&gt;flush&lt;/code&gt;, &lt;code&gt;imagepng&lt;/code&gt;, &lt;code&gt;imagejpeg&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;readfile&lt;/code&gt; , &lt;code&gt;passthru&lt;/code&gt; , &lt;code&gt;flush&lt;/code&gt; , &lt;code&gt;imagepng&lt;/code&gt; , &lt;code&gt;imagejpeg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b634c6c1b82947f8f3e0cd2be91adad2768614cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trigger_error&lt;/code&gt;, &lt;code&gt;ob_flush&lt;/code&gt;, &lt;code&gt;ob_end_flush&lt;/code&gt;, &lt;code&gt;var_dump&lt;/code&gt;, &lt;code&gt;print_r&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;trigger_error&lt;/code&gt; , &lt;code&gt;ob_flush&lt;/code&gt; , &lt;code&gt;ob_end_flush&lt;/code&gt; , &lt;code&gt;var_dump&lt;/code&gt; , &lt;code&gt;print_r&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e97292207b7856687bc45fbe9f75751b96d3c40a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;All PHP files MUST end with a &lt;code&gt;single blank line&lt;/code&gt;.&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;strong&gt;모든 PHP 파일은 &lt;code&gt;single blank line&lt;/code&gt; 끝나야 합니다 .&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="adbdfe076cf9d580974a9cd6ffbea42235179077" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;All PHP files MUST use the &lt;code&gt;Unix LF (linefeed) line ending&lt;/code&gt;.&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;strong&gt;모든 PHP 파일은 반드시 &lt;code&gt;Unix LF (linefeed) line ending&lt;/code&gt; 사용해야합니다.&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="69119f41f4d41a999365f11fc9ca3b06af7a94c0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;The closing ?&amp;gt; tag MUST be &lt;code&gt;omitted&lt;/code&gt; from files containing &lt;code&gt;only php&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;strong&gt;닫는?&amp;gt; 태그는 &lt;code&gt;only php&lt;/code&gt; 포함 된 파일에서 &lt;code&gt;omitted&lt;/code&gt; 해야합니다.&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="847ce2d775f9c374d11e892130ff87f0cb42eee3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Intentional:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Intentional:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7f6c93eff29d8434aae4ec42897b16c2d4a56925" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Typical causes:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;일반적인 원인 :&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a7817a8ce4f3454eb2b09d325d89f0ac42c1a078" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Unintentional:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Unintentional:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b179df85a17f8a95e180f9bbe24478851fd69e26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1)&lt;/strong&gt; there should not be any output (i.e. &lt;strong&gt;&lt;code&gt;echo..&lt;/code&gt;&lt;/strong&gt; or HTML codes) before the &lt;strong&gt;&lt;code&gt;header(.......);&lt;/code&gt;&lt;/strong&gt; command.</source>
          <target state="translated">&lt;strong&gt;1)&lt;/strong&gt; &lt;strong&gt; &lt;code&gt;header(.......);&lt;/code&gt; &lt;/strong&gt; 앞에 출력 (예 : &lt;strong&gt; &lt;code&gt;echo..&lt;/code&gt; &lt;/strong&gt; 또는 HTML 코드 &lt;strong&gt;)&lt;/strong&gt; 이 없어야합니다 &lt;strong&gt;.&lt;/strong&gt; 명령.</target>
        </trans-unit>
        <trans-unit id="d3fea5f4e93ef673ad9a9e3fd1fe389b388e2185" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2)&lt;/strong&gt; remove any &lt;strong&gt;white-space&lt;/strong&gt;(or &lt;strong&gt;newline&lt;/strong&gt;) before &lt;code&gt;&amp;lt;?php&lt;/code&gt; and after &lt;code&gt;?&amp;gt;&lt;/code&gt; tags.</source>
          <target state="translated">&lt;strong&gt;2)&lt;/strong&gt; &lt;code&gt;&amp;lt;?php&lt;/code&gt; 와 &lt;code&gt;?&amp;gt;&lt;/code&gt; 태그 앞의 &lt;strong&gt;공백&lt;/strong&gt; (또는 &lt;strong&gt;줄 바꿈&lt;/strong&gt; &lt;strong&gt;)을&lt;/strong&gt; 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="ebe5047f706f5d69e9071ce1cfd629cf122fc6ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;3)&lt;/strong&gt;&lt;strong&gt;GOLDEN RULE!&lt;/strong&gt; - check if that php file (and also, if you &lt;code&gt;include&lt;/code&gt; other files) have &lt;strong&gt;UTF8 without BOM&lt;/strong&gt; encoding (and not just &lt;strong&gt;UTF-8&lt;/strong&gt;). That is problem in many cases (because &lt;strong&gt;UTF8&lt;/strong&gt; encoded file has something special character in the start of php file, which your text-editor doesnt show)!!!!!!!!!!!</source>
          <target state="translated">&lt;strong&gt;3)&lt;/strong&gt; &lt;strong&gt;골든 룰!&lt;/strong&gt; -해당 PHP 파일 (및 다른 파일을 &lt;code&gt;include&lt;/code&gt; 경우)에도 &lt;strong&gt;UTF-8&lt;/strong&gt; 뿐만 아니라 &lt;strong&gt;BOM&lt;/strong&gt; 인코딩 &lt;strong&gt;없이 UTF8이&lt;/strong&gt; 있는지 확인하십시오. &lt;strong&gt;UTF8로&lt;/strong&gt; 인코딩 된 파일은 텍스트 파일 편집기에 표시되지 않는 PHP 파일의 시작 부분에 특수 문자가 있기 때문에 많은 경우에 문제가 있습니다 !!!!!!!!!!!</target>
        </trans-unit>
        <trans-unit id="229fec9818cf0ed7885fcd79c6c47f553d255b30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;4)&lt;/strong&gt; After &lt;code&gt;header(...);&lt;/code&gt; you must use &lt;code&gt;exit;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;4)&lt;/strong&gt; &lt;code&gt;header(...);&lt;/code&gt; 후 (...); &lt;code&gt;exit;&lt;/code&gt; 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2adedab2905d10a1a69c3bb979d05b767327eca8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;5)&lt;/strong&gt;  always use 301 or 302 reference:</source>
          <target state="translated">&lt;strong&gt;5)&lt;/strong&gt; 항상 301 또는 302 참조를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f3dfa526d5020191753886fec7dc41cbc140b1fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;6)&lt;/strong&gt;&lt;strong&gt;Turn on error reporting, and find the error.&lt;/strong&gt;  Your error may be caused by a function that is not working. When you turn on error reporting, you should always fix top-most error first. For example, it might be &quot;Warning: date_default_timezone_get(): It is not safe to rely on the system's timezone settings.&quot; - then farther on down you may see &quot;headers not sent&quot; error. After fixing top-most (1st) error, re-load your page. If you still have errors, then again fix the top-most error.</source>
          <target state="translated">&lt;strong&gt;6)&lt;/strong&gt; &lt;strong&gt;오류보고를 켜고 오류를 찾으십시오.&lt;/strong&gt; 작동하지 않는 기능으로 인해 오류가 발생했을 수 있습니다. 오류보고를 설정하면 항상 최상위 오류를 먼저 수정해야합니다. 예를 들어, &quot;경고 : date_default_timezone_get () : 시스템의 시간대 설정에 의존하는 것은 안전하지 않습니다.&quot; -아래로 내려 갈수록 &quot;헤더가 전송되지 않음&quot;오류가 표시 될 수 있습니다. 최상위 (첫 번째) 오류를 수정 한 후 페이지를 다시로드하십시오. 여전히 오류가 발생하면 최상위 오류를 다시 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="2c6e991f7084c109dfc8a134aa8d04f1d81e9047" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;7)&lt;/strong&gt; If none of above helps, use JAVSCRIPT redirection(however, strongly non-recommended method), may be the last chance in custom cases...:</source>
          <target state="translated">&lt;strong&gt;7)&lt;/strong&gt; 위의 방법 중 어느 것도 도움이되지 않으면 JAVSCRIPT 리디렉션을 사용하십시오 (그러나 강력하게 권장하지 않는 방법). 맞춤 경우에는 마지막 기회 일 수 있습니다 ...</target>
        </trans-unit>
        <trans-unit id="27ad3dedb22191aabd9f29c2711625cba01876bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;em&gt;Sometimes EDITOR(IDE) like gedit (a default linux editor) add one blank line on save file. This should not happen. If you are using Linux. you can use VI editor to remove space/lines after ?&amp;gt; at the end of the page.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; &lt;em&gt;때때로 gedit (기본 Linux 편집기)와 같은 EDITOR (IDE)는 저장 파일에 빈 줄을 하나 추가합니다.&lt;/em&gt; &lt;em&gt;이런 일은 일어나지 않아야합니다.&lt;/em&gt; &lt;em&gt;Linux를 사용하는 경우&lt;/em&gt; &lt;em&gt;VI 편집기를 사용하여 페이지 끝에서?&amp;gt; 뒤에 공백 / 줄을 제거 할 수 있습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="be13f173cc72c11c48d3f6e6ae4177702f7f7e3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible Solution 1&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;가능한 해결책 1&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4f69bf55f94500a377aae4afef066576807db4b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible Solution 2:&lt;/strong&gt;
If this is not your case, then use &lt;a href=&quot;http://php.net/manual/en/function.ob-start.php&quot;&gt;ob_start&lt;/a&gt; to output buffering:</source>
          <target state="translated">&lt;strong&gt;가능한 해결책 2 :이&lt;/strong&gt; 경우가 아니면 &lt;a href=&quot;http://php.net/manual/en/function.ob-start.php&quot;&gt;ob_start&lt;/a&gt; 를 사용하여 버퍼링 을 출력하십시오.</target>
        </trans-unit>
        <trans-unit id="b39c6fdda83ac12d8ce3a4c99830f31add867061" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;summary ⇊&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;요약 ⇊&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6186f65245cdfa245459a520ecc1898c760f9213" translate="yes" xml:space="preserve">
          <source>A simple tip: A simple space (or invisible special char) in your script, right before the very first &lt;code&gt;&amp;lt;?php&lt;/code&gt; tag, can cause this !
Especially when you are working in a team and somebody is using a &quot;weak&quot; IDE or has messed around in the files with strange text editors.</source>
          <target state="translated">간단한 팁 : 첫 번째 &lt;code&gt;&amp;lt;?php&lt;/code&gt; 태그 바로 앞에있는 스크립트의 간단한 공백 (또는 보이지 않는 특수 문자)으로 인해이 문제가 발생할 수 있습니다! 특히 팀에서 일하고 누군가 &quot;약한&quot;IDE를 사용하거나 이상한 텍스트 편집기로 파일을 엉망으로 만들 때 특히 그렇습니다.</target>
        </trans-unit>
        <trans-unit id="0be42ce95f90a4905aea030257b1917de47f859a" translate="yes" xml:space="preserve">
          <source>A warning outputted by php, if the &lt;a href=&quot;http://php.net/display-errors&quot;&gt;&lt;code&gt;display_errors&lt;/code&gt;&lt;/a&gt; php.ini property is set. Instead of crashing on a programmer mistake, php silently fixes the error and emits a warning. While you can modify the &lt;a href=&quot;http://php.net/display-errors&quot;&gt;&lt;code&gt;display_errors&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/error-reporting&quot;&gt;error_reporting&lt;/a&gt; configurations, you should rather fix the problem.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/display-errors&quot;&gt; &lt;code&gt;display_errors&lt;/code&gt; &lt;/a&gt; php.ini 속성이 설정되면 php에 의해 경고가 출력됩니다. php는 프로그래머의 실수로 충돌하는 대신 오류를 자동으로 수정하고 경고를 표시합니다. &lt;a href=&quot;http://php.net/display-errors&quot;&gt; &lt;code&gt;display_errors&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;http://php.net/error-reporting&quot;&gt;error_reporting&lt;/a&gt; 구성을 수정할 수는 있지만 문제를 해결해야합니다.</target>
        </trans-unit>
        <trans-unit id="af34793f459a910dd3fead3769f6edee8720e84b" translate="yes" xml:space="preserve">
          <source>Accidental whitespace, often at the beginning or end of files, like this:</source>
          <target state="translated">다음과 같이 파일의 시작 또는 끝에 실수로 발생하는 공백 :</target>
        </trans-unit>
        <trans-unit id="c94481a9952a8fbfb66b030cd48446b80af89ce5" translate="yes" xml:space="preserve">
          <source>Adobe Community: &lt;a href=&quot;http://kb2.adobe.com/community/publishing/505/cpsid_50572.html&quot;&gt;PHP development: why redirects don't work (headers already sent)&lt;/a&gt;</source>
          <target state="translated">Adobe 커뮤니티 : &lt;a href=&quot;http://kb2.adobe.com/community/publishing/505/cpsid_50572.html&quot;&gt;PHP 개발 : 리디렉션이 작동하지 않는 이유 (헤더가 이미 전송 됨)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f498296924aeb9a4a3e1d411a129479c169e6c7" translate="yes" xml:space="preserve">
          <source>An easy fix is to set the text editor to save files as &quot;UTF-8 (no BOM)&quot;
or similar such nomenclature. Often newcomers otherwise resort to creating new
files and just copy&amp;amp;pasting the previous code back in.</source>
          <target state="translated">쉬운 수정 방법은 파일을 &quot;UTF-8 (BOM 없음)&quot;또는 이와 유사한 명명법으로 저장하도록 텍스트 편집기를 설정하는 것입니다. 그렇지 않은 경우 종종 새로운 이민자가 새 파일을 만들고 이전 코드를 복사하여 붙여 넣는 것에 의존합니다.</target>
        </trans-unit>
        <trans-unit id="a03b6af6d54e8eb6ff186d534f9cb1b540198c8a" translate="yes" xml:space="preserve">
          <source>And of course &lt;a href=&quot;https://stackoverflow.com/search?q=[php]+headers+already+sent&quot;&gt;many specific cases&lt;/a&gt; have been covered on Stack Overflow as well.</source>
          <target state="translated">물론 &lt;a href=&quot;https://stackoverflow.com/search?q=[php]+headers+already+sent&quot;&gt;많은 특정 사례&lt;/a&gt; 가 스택 오버플로에서도 다루어졌습니다.</target>
        </trans-unit>
        <trans-unit id="98e95035e982831d42da05ea207498b7578af51b" translate="yes" xml:space="preserve">
          <source>Another bad practice can invoke this problem which is not stated yet.</source>
          <target state="translated">또 다른 나쁜 습관은 아직 언급되지 않은이 문제를 유발할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ec465c980a9ad385ef05f0be2b24e638c116059" translate="yes" xml:space="preserve">
          <source>As alternative a &lt;a href=&quot;https://stackoverflow.com/questions/503093/how-can-i-make-a-redirect-page-in-jquery-javascript&quot;&gt;JavaScript redirect&lt;/a&gt;
can be used for page redirects:</source>
          <target state="translated">대안으로 페이지 리디렉션에 &lt;a href=&quot;https://stackoverflow.com/questions/503093/how-can-i-make-a-redirect-page-in-jquery-javascript&quot;&gt;JavaScript 리디렉션을&lt;/a&gt; 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f7c372719ae3b95c20a6e3de2cb3c0ed4d6d279" translate="yes" xml:space="preserve">
          <source>Believe me , following thse standards can save you a hell lot of hours from your life :)</source>
          <target state="translated">이 표준을 따르면 인생에서 많은 시간을 절약 할 수 있습니다. :)</target>
        </trans-unit>
        <trans-unit id="8631895cfac94a86e8442c80f48e0e37de3907a2" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;setcookie()&lt;/code&gt; and &lt;code&gt;session_start()&lt;/code&gt; need to send a &lt;code&gt;Set-Cookie:&lt;/code&gt; HTTP header.
The same conditions therefore apply, and similar error messages will be generated
for premature output situations.</source>
          <target state="translated">&lt;code&gt;setcookie()&lt;/code&gt; 와 &lt;code&gt;session_start()&lt;/code&gt; 는 모두 &lt;code&gt;Set-Cookie:&lt;/code&gt; HTTP 헤더를 보내야합니다. 따라서 동일한 조건이 적용되며 조기 출력 상황에서 유사한 오류 메시지가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="9c7e228fca54bf342a5ed07d80a5ec13bb38e36b" translate="yes" xml:space="preserve">
          <source>Both approaches however make acceptable fallbacks when genuine HTTP header()
calls fail. Ideally you'd always combine this with a user-friendly message and
clickable link as last resort. (Which for instance is what the &lt;a href=&quot;http://php.net/http_redirect&quot;&gt;http_redirect()&lt;/a&gt;
PECL extension does.)</source>
          <target state="translated">그러나 두 가지 방법 모두 진정한 HTTP header () 호출이 실패 할 때 허용 가능한 폴백을 만듭니다. 이상적으로는 항상 최후의 수단으로이 메시지를 사용자 친화적 인 메시지 및 클릭 가능한 링크와 결합하십시오. (예를 들어 &lt;a href=&quot;http://php.net/http_redirect&quot;&gt;http_redirect ()&lt;/a&gt; PECL 확장은 무엇입니까?)</target>
        </trans-unit>
        <trans-unit id="93b8734862133cfd18b4c963c3f272fcd27b9860" translate="yes" xml:space="preserve">
          <source>Both approaches therefore may become unreliable - in particular when switching between
development setups and/or production servers. Which is why output buffering is
widely considered just a crutch / strictly a workaround.</source>
          <target state="translated">따라서 두 가지 접근 방식은 특히 개발 설정 및 / 또는 프로덕션 서버간에 전환 할 때 신뢰할 수 없게 될 수 있습니다. 출력 버퍼링이 목발 / 엄격히 해결 방법으로 널리 간주되는 이유입니다.</target>
        </trans-unit>
        <trans-unit id="8a18697e6a481c96710211941d2d409a5868e883" translate="yes" xml:space="preserve">
          <source>But it could also be any doubly loaded &lt;code&gt;extension=&lt;/code&gt; module
generating an implicit PHP startup/warning message.</source>
          <target state="translated">그러나 또한 암시 적 PHP 시작 / 경고 메시지를 생성하는 이중로드 된 &lt;code&gt;extension=&lt;/code&gt; 모듈 일 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="de6ad44e43735b1d87c97ed42affac24dcc9972f" translate="yes" xml:space="preserve">
          <source>But it worked on the other server!?</source>
          <target state="translated">그러나 다른 서버에서 작동했습니다!?</target>
        </trans-unit>
        <trans-unit id="4dc4a4da9a5adc753e56e7d96b0ae0c86935f580" translate="yes" xml:space="preserve">
          <source>COMMON PROBLEMS:</source>
          <target state="translated">일반적인 문제 :</target>
        </trans-unit>
        <trans-unit id="080dbc002bfc9997e3f50f4dbccf9bd8f4a553ff" translate="yes" xml:space="preserve">
          <source>Check all files associated with file that causes this error.</source>
          <target state="translated">이 오류의 원인이되는 파일과 관련된 모든 파일을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="4145656d5afa36bd7f5a11611c07d39f8fb505d3" translate="yes" xml:space="preserve">
          <source>Checking with &lt;code&gt;headers_sent()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;headers_sent()&lt;/code&gt; 확인</target>
        </trans-unit>
        <trans-unit id="35018bf39b74ef3b2fd82a6105c1c142805cdc56" translate="yes" xml:space="preserve">
          <source>Common reasons are accesses to undefined elements of an array (such as &lt;code&gt;$_POST['input']&lt;/code&gt; without using &lt;a href=&quot;http://php.net/empty&quot;&gt;&lt;code&gt;empty&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/isset&quot;&gt;&lt;code&gt;isset&lt;/code&gt;&lt;/a&gt; to test whether the input is set), or using an undefined constant instead of a string literal (as in &lt;code&gt;$_POST[input]&lt;/code&gt;, note the missing quotes).</source>
          <target state="translated">일반적인 이유는 배열의 정의되지 않은 요소 (예 : &lt;a href=&quot;http://php.net/empty&quot;&gt; &lt;code&gt;empty&lt;/code&gt; &lt;/a&gt; 있거나 &lt;a href=&quot;http://php.net/isset&quot;&gt; &lt;code&gt;isset&lt;/code&gt; &lt;/a&gt; 을 사용하여 입력 설정 여부를 테스트하지 않고 &lt;code&gt;$_POST['input']&lt;/code&gt; )에 액세스하거나 문자열 리터럴 대신 정의되지 않은 상수를 사용하는 경우 ( &lt;code&gt;$_POST[input]&lt;/code&gt; , 누락 된 따옴표를 참고하십시오.)</target>
        </trans-unit>
        <trans-unit id="cfe68db42e7c9cf26d2cdc5c4c383e24c3d66de8" translate="yes" xml:space="preserve">
          <source>Conclusion: Do not output any character before calling &lt;code&gt;session_start()&lt;/code&gt; or &lt;code&gt;header()&lt;/code&gt; functions not even a white-space or new-line</source>
          <target state="translated">결론 : 공백이나 줄 바꿈이 아닌 &lt;code&gt;session_start()&lt;/code&gt; 또는 &lt;code&gt;header()&lt;/code&gt; 함수를 호출하기 전에 문자를 출력하지 마십시오</target>
        </trans-unit>
        <trans-unit id="084c7e517d6eef632e47c4d0531dbf8a8742b8a1" translate="yes" xml:space="preserve">
          <source>Correction utilities</source>
          <target state="translated">수정 유틸리티</target>
        </trans-unit>
        <trans-unit id="4f929e5b8b1fac950eba5db2809854af5fe0cf48" translate="yes" xml:space="preserve">
          <source>Enabling it will allow PHP to buffer output instead of passing it to the webserver
instantly. PHP thus can aggregate HTTP headers.</source>
          <target state="translated">이를 활성화하면 PHP가 출력을 웹 서버에 즉시 전달하는 대신 출력을 버퍼링 할 수 있습니다. 따라서 PHP는 HTTP 헤더를 집계 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ffb9ecb8e0aa36913c7caf9fc614b5d27eaed562" translate="yes" xml:space="preserve">
          <source>Error source mentioned as &quot;Unknown on line 0&quot;</source>
          <target state="translated">&quot;0 행에서 알 수 없음&quot;으로 언급 된 오류 소스</target>
        </trans-unit>
        <trans-unit id="f7c8f0ea9d6cd3402741f7f5dcdf45c754f8ce63" translate="yes" xml:space="preserve">
          <source>Even if &lt;code&gt;&amp;lt;?php ob_start(); ?&amp;gt;&lt;/code&gt; starts the first script, whitespace or a
BOM might get shuffled before, &lt;a href=&quot;https://stackoverflow.com/questions/2168956/php-header-problem-even-i-use-ob-start-and-ob-end-flush&quot;&gt;rendering it ineffective&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;?php ob_start(); ?&amp;gt;&lt;/code&gt; ?&amp;gt; 는 첫 번째 스크립트를 시작합니다. 공백이나 BOM이 섞여서 &lt;a href=&quot;https://stackoverflow.com/questions/2168956/php-header-problem-even-i-use-ob-start-and-ob-end-flush&quot;&gt;효과가 없습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d0ce63c71aa68577ce9f080b1f440cd0cf8809cf" translate="yes" xml:space="preserve">
          <source>Example of Unpredictable Error:</source>
          <target state="translated">예측할 수없는 오류의 예 :</target>
        </trans-unit>
        <trans-unit id="06eee975d368705b78968cd15675ecdbac9f559e" translate="yes" xml:space="preserve">
          <source>Explicit output, such as calls to &lt;code&gt;echo&lt;/code&gt;, &lt;code&gt;printf&lt;/code&gt;, &lt;code&gt;readfile&lt;/code&gt;, &lt;code&gt;passthru&lt;/code&gt;, code before &lt;code&gt;&amp;lt;?&lt;/code&gt; etc.</source>
          <target state="translated">&lt;code&gt;echo&lt;/code&gt; , &lt;code&gt;printf&lt;/code&gt; , &lt;code&gt;readfile&lt;/code&gt; , &lt;code&gt;passthru&lt;/code&gt; , &lt;code&gt;&amp;lt;?&lt;/code&gt; 이전의 코드에 대한 호출과 같은 명시 적 출력 기타</target>
        </trans-unit>
        <trans-unit id="1cfcd0f679366e71ace8ae170ef8a4b2acfdb3b2" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;http://www.php-fig.org/psr/psr-2/&quot;&gt;PSR-2 2.2 :&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://www.php-fig.org/psr/psr-2/&quot;&gt;PSR-2 2.2에서 :&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a9657b7db85a9bee9b1d89e241f50fcfa5b1c4b" translate="yes" xml:space="preserve">
          <source>Functions that produce output include</source>
          <target state="translated">출력을 생성하는 기능은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6b119190971a95dc814eb69929b841a0352ce50f" translate="yes" xml:space="preserve">
          <source>Functions that send/modify HTTP headers must be invoked &lt;strong&gt;&lt;em&gt;before any output is made&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">HTTP 헤더를 전송 / 수정하는 기능은 &lt;strong&gt;&lt;em&gt;출력하기 전에&lt;/em&gt;&lt;/strong&gt; 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="9da7b0d94b00cb1668a89f743a072fd21d8e7390" translate="yes" xml:space="preserve">
          <source>Further links</source>
          <target state="translated">추가 링크</target>
        </trans-unit>
        <trans-unit id="08cca31f529818dd7525d4ef2cdae9251c6f43ea" translate="yes" xml:space="preserve">
          <source>Generally this error arise when we send header after echoing or printing. If this error arise on a specific page then make sure that page is not echoing anything before calling to &lt;code&gt;start_session()&lt;/code&gt;.</source>
          <target state="translated">일반적으로이 오류는 에코 또는 인쇄 후 헤더를 보낼 때 발생합니다. 특정 페이지에서이 오류가 발생하면 &lt;code&gt;start_session()&lt;/code&gt; 호출하기 전에 페이지가 아무 것도 에코하지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d951eb860d3600546a926ad74d424a9aceed3512" translate="yes" xml:space="preserve">
          <source>Google provides a &lt;a href=&quot;http://www.google.com/search?q=php+headers+already+sent&quot;&gt;lengthy list of similar discussions&lt;/a&gt;.</source>
          <target state="translated">Google은 &lt;a href=&quot;http://www.google.com/search?q=php+headers+already+sent&quot;&gt;유사한 토론&lt;/a&gt; 의 긴 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="78af8801ed09e8991e01f9c02bc70d508e2fbb60" translate="yes" xml:space="preserve">
          <source>HTML &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag</source>
          <target state="translated">HTML &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 태그</target>
        </trans-unit>
        <trans-unit id="1fb561c07735cdfab6d51989d70193c375b4ef51" translate="yes" xml:space="preserve">
          <source>Here &quot;line 100&quot; refers to the script where the &lt;code&gt;header()&lt;/code&gt;&lt;em&gt;invocation&lt;/em&gt; failed.</source>
          <target state="translated">여기서 &quot;line 100&quot;은 &lt;code&gt;header()&lt;/code&gt; &lt;em&gt;호출이&lt;/em&gt; 실패한 스크립트를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b5eb2bd83246ca2ff77f046fd1e92837e5280e54" translate="yes" xml:space="preserve">
          <source>How can you find out where the premature output occured?</source>
          <target state="translated">조기 출력이 발생한 위치를 어떻게 알 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="fb8de51a3147bf9361552a75519aee211869b3ba" translate="yes" xml:space="preserve">
          <source>How to fix “Headers already sent” error in PHP</source>
          <target state="translated">PHP에서&amp;ldquo;Header already sent&amp;rdquo;오류를 수정하는 방법</target>
        </trans-unit>
        <trans-unit id="aaa613cac4e9ee31e971138cf9b389b5a2d3620a" translate="yes" xml:space="preserve">
          <source>However, while output buffering avoids the issues, you should really determine why your application outputs an HTTP body before the HTTP header. That'd be like taking a phone call and discussing your day and the weather before telling the caller that he's got the wrong number.</source>
          <target state="translated">그러나 출력 버퍼링으로 문제를 피할 수 있지만 실제로 애플리케이션이 HTTP 헤더 전에 HTTP 본문을 출력하는 이유를 결정해야합니다. 전화를 걸고 하루와 날씨에 대해 이야기하여 발신자에게 전화 번호가 잘못되었다고 알리는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="733646f6f36ede40f114a7d422999b4d35a222c0" translate="yes" xml:space="preserve">
          <source>I got this error many times before, and I am certain all PHP programmer got this error at least once before.</source>
          <target state="translated">이 오류가 여러 번 발생했으며 모든 PHP 프로그래머가 적어도 한 번은이 오류가 발생했다고 확신합니다.</target>
        </trans-unit>
        <trans-unit id="283d047e75f38f6d41b998f878ef3520f8647fc6" translate="yes" xml:space="preserve">
          <source>I have seen these things ;)</source>
          <target state="translated">나는 이런 것들을 보았다;)</target>
        </trans-unit>
        <trans-unit id="65abe0c959d0c2b0d142f0f4a6763d1b7e6e4929" translate="yes" xml:space="preserve">
          <source>If another PHP statement or expression causes a warning message or
notice being printeded out, that also counts as premature output.</source>
          <target state="translated">다른 PHP 문이나 식으로 인해 경고 메시지 나 통지가 인쇄되면 조기 출력으로 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="e59ed463246e8d3cb2feb75c276b720f7f24bce1" translate="yes" xml:space="preserve">
          <source>If the error source is mentioned as behind the
&lt;a href=&quot;https://stackoverflow.com/questions/4410704/php-closing-tag&quot;&gt;closing &lt;code&gt;?&amp;gt;&lt;/code&gt;&lt;/a&gt;
then this is where some whitespace or raw text got written out.
The PHP end marker does not terminate script executation at this
point. Any text/space characters after it will be written out as page content
still.</source>
          <target state="translated">오류 소스가 &lt;a href=&quot;https://stackoverflow.com/questions/4410704/php-closing-tag&quot;&gt;닫는 &lt;code&gt;?&amp;gt;&lt;/code&gt; &lt;/a&gt; 뒤에 언급 된 경우 여백 또는 원시 텍스트가 작성된 곳입니다. 이 시점에서 PHP 종료 마커는 스크립트 실행을 종료하지 않습니다. 그 이후의 모든 텍스트 / 공백 문자는 여전히 페이지 내용으로 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="9ace658489706f5fdae0235c03defa461ab365e7" translate="yes" xml:space="preserve">
          <source>If the warning refers to output in line &lt;strong&gt;&lt;code&gt;1&lt;/code&gt;&lt;/strong&gt;, then it's mostly
leading &lt;strong&gt;whitespace&lt;/strong&gt;, text or HTML before the opening &lt;code&gt;&amp;lt;?php&lt;/code&gt; token.</source>
          <target state="translated">경고가 &lt;strong&gt; &lt;code&gt;1&lt;/code&gt; &lt;/strong&gt; 행의 출력을 나타내는 경우 &lt;code&gt;&amp;lt;?php&lt;/code&gt; 토큰을 열기 전에 대부분 &lt;strong&gt;공백&lt;/strong&gt; , 텍스트 또는 HTML을 선행합니다.</target>
        </trans-unit>
        <trans-unit id="a01c86daf4049ff95ce6d47804aca0031a6bf853" translate="yes" xml:space="preserve">
          <source>If you didn't get the headers warning before, then the &lt;a href=&quot;http://php.net/manual/en/outcontrol.configuration.php&quot;&gt;output buffering
 php.ini setting&lt;/a&gt;
 has changed. It's likely unconfigured on the current/new server.</source>
          <target state="translated">이전에 헤더 경고를받지 못한 경우 &lt;a href=&quot;http://php.net/manual/en/outcontrol.configuration.php&quot;&gt;출력 버퍼링 php.ini 설정&lt;/a&gt; 이 변경되었습니다. 현재 / 새 서버에서 구성 해제되었을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec99dc57bf928bbad9b90cb33bfefb46126e7df2" translate="yes" xml:space="preserve">
          <source>If you have &lt;code&gt;error_reporting&lt;/code&gt; or &lt;code&gt;display_errors&lt;/code&gt; disabled per &lt;code&gt;php.ini&lt;/code&gt;,
then no warning will show up. But ignoring errors won't make the problem go
away. Headers still can't be sent after premature output.</source>
          <target state="translated">&lt;code&gt;php.ini&lt;/code&gt; 에 대해 &lt;code&gt;error_reporting&lt;/code&gt; 또는 &lt;code&gt;display_errors&lt;/code&gt; 가 비활성화 된 경우 경고가 표시되지 않습니다. 그러나 오류를 무시해도 문제가 해결되지는 않습니다. 조기 출력 후에도 헤더를 보낼 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2c05bd930cc0354b6ea7bba227c30fd646254f56" translate="yes" xml:space="preserve">
          <source>If your application is structurally hard to fix, then an easy (but
somewhat unprofessional) way to allow redirects is injecting a HTML
&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag. A redirect can be achieved with:</source>
          <target state="translated">응용 프로그램이 구조적으로 수정하기 어려운 경우 리디렉션을 허용하는 쉬운 방법이지만 다소 비전문적 인 방법으로 HTML &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 태그를 삽입하는 것입니다. 다음을 통해 리디렉션을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f49403252c5aa9d693fe60a1e84a102cdcee274" translate="yes" xml:space="preserve">
          <source>In particular graphical editors and Java based IDEs are oblivious to its
presence. They don't visualize it (obliged by the Unicode standard).
Most programmer and console editors however do:</source>
          <target state="translated">특히 그래픽 편집기와 Java 기반 IDE는 존재하지 않습니다. 그들은 그것을 시각화하지 않습니다 (유니 코드 표준에 의해 의무화 됨). 그러나 대부분의 프로그래머와 콘솔 편집기는 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="e70ad363e8fd9224c2bb80e4995caddcd53db9a7" translate="yes" xml:space="preserve">
          <source>In this case you need to eschew the error,
delay the statement execution, or suppress the message with e.g.
&lt;a href=&quot;http://php.net/isset&quot;&gt;&lt;code&gt;isset()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/@&quot;&gt;&lt;code&gt;@()&lt;/code&gt;&lt;/a&gt; -
when either doesn't obstruct debugging later on.</source>
          <target state="translated">이 경우 나중에 디버깅을 방해하지 않는 경우 오류를 피하거나 명령문 실행을 지연 시키거나 &lt;a href=&quot;http://php.net/isset&quot;&gt; &lt;code&gt;isset()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;http://php.net/@&quot;&gt; &lt;code&gt;@()&lt;/code&gt; &lt;/a&gt; 하여 메시지를 표시하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="f6ea87e9dd1c53017797d5763bf9e24d529fd535" translate="yes" xml:space="preserve">
          <source>Instead of the below line</source>
          <target state="translated">아래 줄 대신</target>
        </trans-unit>
        <trans-unit id="680cb470a4471e37fb38518fc6def796d53f475b" translate="yes" xml:space="preserve">
          <source>Intentional output from &lt;code&gt;print&lt;/code&gt; and &lt;code&gt;echo&lt;/code&gt; statements will terminate
the opportunity to send HTTP headers. The application flow must
be restructured to avoid that. Use &lt;a href=&quot;http://php.net/function&quot;&gt;functions&lt;/a&gt;
and templating schemes. Ensure &lt;code&gt;header()&lt;/code&gt; calls occur &lt;em&gt;before&lt;/em&gt; messages
are written out.</source>
          <target state="translated">&lt;code&gt;print&lt;/code&gt; 및 &lt;code&gt;echo&lt;/code&gt; 문에서 의도적으로 출력하면 HTTP 헤더를 보낼 수있는 기회가 종료됩니다. 이를 피하려면 애플리케이션 플로우를 재구성해야합니다. &lt;a href=&quot;http://php.net/function&quot;&gt;함수&lt;/a&gt; 와 템플릿 구성표를 사용하십시오. 메시지를 작성 &lt;em&gt;하기 전에&lt;/em&gt; &lt;code&gt;header()&lt;/code&gt; 호출이 발생하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e644be32391e41084f382e6469fc7b51f4d8c6db" translate="yes" xml:space="preserve">
          <source>Is using output buffering considered a bad practice?</source>
          <target state="translated">출력 버퍼링을 사용하는 것이 나쁜 습관으로 간주됩니까?</target>
        </trans-unit>
        <trans-unit id="2140ef1311c17d74bcbe9af77a51b69d777d467c" translate="yes" xml:space="preserve">
          <source>It can conceal whitespace for HTML output. But as soon as the application
logic attempts to send binary content (a generated image for example),
the buffered extraneous output becomes a problem. (Necessitating &lt;code&gt;ob_clean()&lt;/code&gt;
as furher workaround.)</source>
          <target state="translated">HTML 출력을위한 공백을 숨길 수 있습니다. 그러나 응용 프로그램 논리가 이진 콘텐츠 (예 : 생성 된 이미지)를 보내려고하면 버퍼링 된 외부 출력이 문제가됩니다. (추가 해결 방법으로 &lt;code&gt;ob_clean()&lt;/code&gt; 이 필요합니다.)</target>
        </trans-unit>
        <trans-unit id="460952e8680d6fc8c5214a1755ef7fffde3b88ab" translate="yes" xml:space="preserve">
          <source>It can likewise be engaged with a call to &lt;a href=&quot;http://php.net/ob_start&quot;&gt;&lt;code&gt;ob_start();&lt;/code&gt;&lt;/a&gt;
atop the invocation script. Which however is less reliable for multiple reasons:</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;http://php.net/ob_start&quot;&gt; &lt;code&gt;ob_start();&lt;/code&gt; &lt;/a&gt; 호출 할 수도 있습니다 . 호출 스크립트 위에. 그러나 여러 가지 이유로 신뢰성이 떨어집니다.</target>
        </trans-unit>
        <trans-unit id="df2e845a5893d911df687f4a8b5a04ffcb1da5b2" translate="yes" xml:space="preserve">
          <source>It is because of this line:</source>
          <target state="translated">이 줄 때문입니다.</target>
        </trans-unit>
        <trans-unit id="969f7c3c40c6b6b03fd989788ff6dbc167e82d97" translate="yes" xml:space="preserve">
          <source>It'll definitely solve your problem.
I faced the same problem but I solved through writing header location in the above way.</source>
          <target state="translated">확실히 문제를 해결할 것입니다. 나는 같은 문제에 직면했지만 위의 방법으로 헤더 위치를 작성하여 해결했습니다.</target>
        </trans-unit>
        <trans-unit id="c026cbcad3a9bd41a7228dcdb8c817c033b831cc" translate="yes" xml:space="preserve">
          <source>It's commonly advised, in particular to newcomers, that trailing &lt;code&gt;?&amp;gt;&lt;/code&gt; PHP
close tags should be omitted. This &lt;em&gt;eschews&lt;/em&gt; a small portion of these cases.
(Quite commonly &lt;code&gt;include()d&lt;/code&gt; scripts are the culprit.)</source>
          <target state="translated">특히 새로운 초보자에게는 후행 &lt;code&gt;?&amp;gt;&lt;/code&gt; PHP 닫기 태그를 생략하는 것이 좋습니다. 이것은 이러한 경우의 작은 부분을 &lt;em&gt;피&lt;/em&gt; 합니다. (일반적으로 &lt;code&gt;include()d&lt;/code&gt; 스크립트가 범인입니다.)</target>
        </trans-unit>
        <trans-unit id="23f28972d1cfa7c0ea3cb2677de7d052b0415fb1" translate="yes" xml:space="preserve">
          <source>It's occasionally the &lt;code&gt;gzip&lt;/code&gt; stream encoding setting
&lt;a href=&quot;https://stackoverflow.com/questions/622192/php-warning-headers-already-sent-in-unknown&quot;&gt;or the &lt;code&gt;ob_gzhandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때때로 &lt;code&gt;gzip&lt;/code&gt; 스트림 인코딩 설정 &lt;a href=&quot;https://stackoverflow.com/questions/622192/php-warning-headers-already-sent-in-unknown&quot;&gt;이거나 &lt;code&gt;ob_gzhandler&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="75bf787b7be5f2093ecbea5d65eb3d4bbe834b88" translate="yes" xml:space="preserve">
          <source>It's sane to use on a whole include or project directory.</source>
          <target state="translated">전체 include 또는 프로젝트 디렉토리에서 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="5c55db306287cfaac95bcaace84e7a121503e878" translate="yes" xml:space="preserve">
          <source>It's typically a PHP extension or php.ini setting if no error source
is concretized.</source>
          <target state="translated">오류 소스가 구체화되지 않은 경우 일반적으로 PHP 확장 또는 php.ini 설정입니다.</target>
        </trans-unit>
        <trans-unit id="6d61c01843cdb7e4342c1d472c343b9d4e5ca89b" translate="yes" xml:space="preserve">
          <source>JavaScript redirect</source>
          <target state="translated">자바 스크립트 리디렉션</target>
        </trans-unit>
        <trans-unit id="d6e795d64f0573e3b979693321e4f0e1e84ba0b4" translate="yes" xml:space="preserve">
          <source>Linebreaks and spaces alone can be a problem. But there are also &quot;invisible&quot;
character sequences which can cause this. Most famously the
&lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;&lt;strong&gt;UTF-8 BOM&lt;/strong&gt; (Byte-Order-Mark)&lt;/a&gt;
which isn't displayed by most text editors. It's the byte sequence &lt;code&gt;EF BB BF&lt;/code&gt;, which
is optional and redundant for UTF-8 encoded documents. PHP however has to treat
it as raw output. It may show up as the characters &lt;code&gt;&amp;iuml;&amp;raquo;&amp;iquest;&lt;/code&gt; in the output (if the client
interprets the document as Latin-1) or similar &quot;garbage&quot;.</source>
          <target state="translated">줄 바꿈과 공백 만 문제가 될 수 있습니다. 그러나 이로 인해 &quot;보이지 않는&quot;문자 시퀀스도 있습니다. 대부분의 텍스트 편집기에서 표시되지 않는 &lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;&lt;strong&gt;UTF-8 BOM&lt;/strong&gt; (Byte-Order-Mark)&lt;/a&gt; 이 가장 유명합니다. 바이트 순서 &lt;code&gt;EF BB BF&lt;/code&gt; 이며, UTF-8로 인코딩 된 문서에는 선택적이고 중복됩니다. 그러나 PHP는이를 원시 출력으로 취급해야합니다. 출력에서 클라이언트가 문서를 Latin-1로 해석하는 경우 문자 &quot; &lt;code&gt;&amp;iuml;&amp;raquo;&amp;iquest;&lt;/code&gt; 또는 유사한&quot;쓰레기 &quot;로 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f258aeaa35bd239f60cefd097b8adfda397737d7" translate="yes" xml:space="preserve">
          <source>No error message</source>
          <target state="translated">오류 메시지가 없습니다</target>
        </trans-unit>
        <trans-unit id="ab3d818f993b6432ad07ab109c1efa987f501765" translate="yes" xml:space="preserve">
          <source>No output before sending headers!</source>
          <target state="translated">헤더를 보내기 전에 출력이 없습니다!</target>
        </trans-unit>
        <trans-unit id="60155600ca6f1e13510057321a0cbc6f50b733de" translate="yes" xml:space="preserve">
          <source>Now,though this is not a common scenario what if you are using a MVC framework which loads a lots of file before handover things to your controller? This is not an uncommon scenario. Be prepare for this.</source>
          <target state="translated">자, 이것은 일반적인 시나리오는 아니지만 컨트롤러로 핸드 오버하기 전에 많은 파일을로드하는 MVC 프레임 워크를 사용하는 경우 어떻게해야합니까? 이것은 드문 시나리오가 아닙니다. 이것을 준비하십시오.</target>
        </trans-unit>
        <trans-unit id="750af79d66be273849143be1378cd17fc5bf7a94" translate="yes" xml:space="preserve">
          <source>Nucleus FAQ: &lt;a href=&quot;http://faq.nucleuscms.org/item/79&quot;&gt;What does &quot;page headers already sent&quot; mean?&lt;/a&gt;</source>
          <target state="translated">Nucleus FAQ : &lt;a href=&quot;http://faq.nucleuscms.org/item/79&quot;&gt;&quot;페이지 헤더가 이미 전송되었습니다&quot;는 무엇을 의미합니까?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d12f26544314335beb7af690a37352634d31faf" translate="yes" xml:space="preserve">
          <source>One more example:</source>
          <target state="translated">하나 더 예 :</target>
        </trans-unit>
        <trans-unit id="f4ebc5c3fbe01c45b2da7627ccb863f3bcc728cc" translate="yes" xml:space="preserve">
          <source>One of the more thorough explanations is &lt;a href=&quot;http://web.archive.org/web/20080430141149/http://www.expertsrt.com/tutorials/Matt/HTTP_headers.html&quot;&gt;HTTP Headers and the PHP header() Function - A tutorial by NicholasSolutions&lt;/a&gt; (Internet Archive link).
It covers HTTP in detail and gives a few guidelines for rewriting scripts.</source>
          <target state="translated">더 자세한 설명 중 하나는 &lt;a href=&quot;http://web.archive.org/web/20080430141149/http://www.expertsrt.com/tutorials/Matt/HTTP_headers.html&quot;&gt;HTTP 헤더와 PHP header () 함수-NicholasSolutions&lt;/a&gt; (인터넷 아카이브 링크) 의 튜토리얼 입니다. HTTP를 자세히 다루고 스크립트를 다시 작성하기위한 몇 가지 지침을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d7b2036de2b94d3213b9cfa3f727aebf227c378e" translate="yes" xml:space="preserve">
          <source>Or &lt;code&gt;set_error_handler(&quot;var_dump&quot;);&lt;/code&gt; if all else fails.</source>
          <target state="translated">또는 &lt;code&gt;set_error_handler(&quot;var_dump&quot;);&lt;/code&gt; 다른 모든 것이 실패하면.</target>
        </trans-unit>
        <trans-unit id="b83f20ab540b25ab07f97a7ef69054132b2d8232" translate="yes" xml:space="preserve">
          <source>Or with a short delay:</source>
          <target state="translated">또는 짧은 지연 시간 :</target>
        </trans-unit>
        <trans-unit id="46bb206327db4f5a34a65938118293d1740b32cd" translate="yes" xml:space="preserve">
          <source>Otherwise the call fails:</source>
          <target state="translated">그렇지 않으면 호출이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="25b6825e9a250cf96df82acd4ea1189153cca05c" translate="yes" xml:space="preserve">
          <source>Output buffering as workaround</source>
          <target state="translated">해결 방법으로 출력 버퍼링</target>
        </trans-unit>
        <trans-unit id="fbf20e43ae182c2168b9de9490990dbe4fe1361b" translate="yes" xml:space="preserve">
          <source>Output can be:</source>
          <target state="translated">출력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1226dfeda2f4ff9fd9b2342bf51356314ba7a9da" translate="yes" xml:space="preserve">
          <source>PHP actually eats up a &lt;em&gt;single&lt;/em&gt; linebreak after close tags. But it won't
compensate multiple newlines or tabs or spaces shifted into such gaps.</source>
          <target state="translated">PHP는 실제로 태그를 닫은 후 &lt;em&gt;단일 줄&lt;/em&gt; 바꿈을 사용합니다. 그러나 여러 줄 바꿈이나 탭 또는 공백이 이러한 간격으로 이동하면 보상하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="07c4e9111bfdb4931556d5dbcdfc8436a3704b98" translate="yes" xml:space="preserve">
          <source>PHPs &lt;a href=&quot;http://www.php.net/manual/en/intro.outcontrol.php&quot;&gt;output buffering&lt;/a&gt;
is a workaround to alleviate this issue. It often works reliably, but shouldn't
substitute for proper application structuring and separating output from control
logic. Its actual purpose is minimizing chunked transfers to the webserver.</source>
          <target state="translated">PHP &lt;a href=&quot;http://www.php.net/manual/en/intro.outcontrol.php&quot;&gt;출력 버퍼링&lt;/a&gt; 은이 문제를 완화하는 해결 방법입니다. 종종 안정적으로 작동하지만 제어 논리에서 출력을 구성하고 분리하는 적절한 응용 프로그램을 대신해서는 안됩니다. 실제 목적은 웹 서버로의 청크 전송을 최소화하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="871dfd21179b2a969a9e40af9b4b4dc52aca38eb" translate="yes" xml:space="preserve">
          <source>Place form processing code atop scripts.</source>
          <target state="translated">스크립트 위에 양식 처리 코드를 배치하십시오.</target>
        </trans-unit>
        <trans-unit id="e3a8864ed4e7f262dd96634e027ae3202002ce9d" translate="yes" xml:space="preserve">
          <source>Preceding error messages</source>
          <target state="translated">선행 오류 메시지</target>
        </trans-unit>
        <trans-unit id="a6197ab73406d6a1da49241880f98a630cf68967" translate="yes" xml:space="preserve">
          <source>Preferrably even a utility function, which prints a user message
in case of &lt;code&gt;header()&lt;/code&gt; failures.</source>
          <target state="translated">&lt;code&gt;header()&lt;/code&gt; 실패시 사용자 메시지를 인쇄하는 유틸리티 기능도 바람직합니다.</target>
        </trans-unit>
        <trans-unit id="dbc5f9999ab2c031a0d1a3d4381434e049092871" translate="yes" xml:space="preserve">
          <source>Previous error messages or notices</source>
          <target state="translated">이전 오류 메시지 또는주의 사항</target>
        </trans-unit>
        <trans-unit id="b108b98ce986e831e0bb76e7cfabaef4253441cf" translate="yes" xml:space="preserve">
          <source>Print, echo</source>
          <target state="translated">인쇄, 에코</target>
        </trans-unit>
        <trans-unit id="440e1065e67861e1cbbd357429bb4fcaf47fffaa" translate="yes" xml:space="preserve">
          <source>Raw &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; sections prior &lt;code&gt;&amp;lt;?php&lt;/code&gt; code.</source>
          <target state="translated">&lt;code&gt;&amp;lt;?php&lt;/code&gt; 코드 이전의 원시 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 섹션.</target>
        </trans-unit>
        <trans-unit id="42ad2c1ce416b769bd8a14d197b8c7f33ee89f20" translate="yes" xml:space="preserve">
          <source>Raw HTML areas</source>
          <target state="translated">원시 HTML 영역</target>
        </trans-unit>
        <trans-unit id="aad41ef05171dd03c6f21cdcfd8ba6d29c48c3b4" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;http://www.php.net/manual/en/outcontrol.examples.basic.php&quot;&gt;basic usage example&lt;/a&gt;
in the manual, and for more pros and cons:</source>
          <target state="translated">매뉴얼의 &lt;a href=&quot;http://www.php.net/manual/en/outcontrol.examples.basic.php&quot;&gt;기본 사용법 예제&lt;/a&gt; 와 더 많은 장단점을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c96274f6802e465cc9c9a431e20ff4ea0f3a79ba" translate="yes" xml:space="preserve">
          <source>See this code snippet:</source>
          <target state="translated">이 코드 스 니펫을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="afa331cb3ce703a1801a0da022bf25d0dba0e41d" translate="yes" xml:space="preserve">
          <source>Similarly it can occur for appended scripts or script sections:</source>
          <target state="translated">마찬가지로 추가 된 스크립트 또는 스크립트 섹션에서도 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c814e99850ed01017dc50125d8d31b007f99e39f" translate="yes" xml:space="preserve">
          <source>So when &lt;code&gt;header(&quot;Location: ...&quot;)&lt;/code&gt; redirects silently fail it's very
advisable to probe for warnings. Reenable them with two simple commands
atop the invocation script:</source>
          <target state="translated">따라서 &lt;code&gt;header(&quot;Location: ...&quot;)&lt;/code&gt; 리디렉션이 자동으로 실패하면 경고를 조사하는 것이 좋습니다. 호출 스크립트 위에 두 가지 간단한 명령으로 다시 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="9c001eb0b959274e6598e45b51c7ec697091883b" translate="yes" xml:space="preserve">
          <source>Some functions modifying the HTTP header are:</source>
          <target state="translated">HTTP 헤더를 수정하는 일부 기능은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="457f4bdd992f65de85e0284c53b500b984e66c10" translate="yes" xml:space="preserve">
          <source>Sometimes when the dev process has both WIN work stations and LINUX systems (hosting) and in the code you do not see any output before the related line, it could be the formatting of the file and the lack of &lt;em&gt;Unix LF (linefeed)&lt;/em&gt; 
 line ending.</source>
          <target state="translated">때로는 dev 프로세스에 WIN 워크 스테이션과 LINUX 시스템 (호스팅)이 있고 코드에서 관련 줄 앞에 출력이 표시되지 않는 경우 파일 형식이 지정되고 &lt;em&gt;Unix LF (줄 바꿈)&lt;/em&gt; 줄 끝이 없을 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="35c186b83bbd035d3b077f39a168883ebadd7a51" translate="yes" xml:space="preserve">
          <source>Speaking of redirect headers, you should often use an idiom like
this for final code paths:</source>
          <target state="translated">리디렉션 헤더에 관해서는 최종 코드 경로에 다음과 같은 관용구를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="c5dad13495a39b2aaa72669dbca9709aade63e41" translate="yes" xml:space="preserve">
          <source>The &quot;&lt;em&gt;output started at&lt;/em&gt;&quot; note within the parenthesis is more significant.
It denominates the source of previous output. In this example it's &lt;code&gt;auth.php&lt;/code&gt;
and &lt;strong&gt;line &lt;code&gt;52&lt;/code&gt;&lt;/strong&gt;. That's where you had to look for premature output.</source>
          <target state="translated">괄호 안에 &lt;em&gt;있는&lt;/em&gt; &quot; &lt;em&gt;시작에서&lt;/em&gt; &quot; &lt;em&gt;출력&lt;/em&gt; 이 더 중요합니다. 이전 출력의 소스를 나타냅니다. 이 예제에서는 &lt;code&gt;auth.php&lt;/code&gt; 와 &lt;strong&gt;line &lt;code&gt;52&lt;/code&gt; &lt;/strong&gt; 입니다. 여기서 조기 출력을 찾아야했습니다.</target>
        </trans-unit>
        <trans-unit id="60c4103865e6ab5be3c8bc40fdc36b26f527767c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;UTF-8 Byte Order Mark&lt;/a&gt; specifically</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;UTF-8 바이트 순서 마크&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bfc67947482f65d72054027fe3e5b7d8980cd8d5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://php.net/manual/en/outcontrol.configuration.php&quot;&gt;&lt;code&gt;output_buffering=&lt;/code&gt;&lt;/a&gt;
setting nevertheless can help.
Configure it in the &lt;a href=&quot;http://www.php.net/manual/en/configuration.file.php&quot;&gt;php.ini&lt;/a&gt;
or via &lt;a href=&quot;http://www.php.net/manual/en/configuration.changes.php&quot;&gt;.htaccess&lt;/a&gt;
or even &lt;a href=&quot;http://php.net/manual/en/configuration.file.per-user.php&quot;&gt;.user.ini&lt;/a&gt; on
modern FPM/FastCGI setups.</source>
          <target state="translated">그럼에도 불구하고 &lt;a href=&quot;http://php.net/manual/en/outcontrol.configuration.php&quot;&gt; &lt;code&gt;output_buffering=&lt;/code&gt; &lt;/a&gt; 설정이 도움이 될 수 있습니다. 최신 FPM / FastCGI 설정에서 &lt;a href=&quot;http://www.php.net/manual/en/configuration.file.php&quot;&gt;php.ini&lt;/a&gt; 또는 &lt;a href=&quot;http://www.php.net/manual/en/configuration.changes.php&quot;&gt;.htaccess&lt;/a&gt; 또는 &lt;a href=&quot;http://php.net/manual/en/configuration.file.per-user.php&quot;&gt;.user.ini&lt;/a&gt; 를 통해 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="61727afbf7f854065da49c03331457c836b6a7b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;header()&lt;/code&gt; warning contains all relevant information to
locate the problem cause:</source>
          <target state="translated">&lt;code&gt;header()&lt;/code&gt; 경고에는 문제 원인을 찾기위한 모든 관련 정보가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d388d8e098d20cd9af6f1ebf6648b8587b897873" translate="yes" xml:space="preserve">
          <source>The Wordpress FAQ explains &lt;a href=&quot;http://codex.wordpress.org/FAQ_Troubleshooting#How_do_I_solve_the_Headers_already_sent_warning_problem.3F&quot;&gt;How do I solve the Headers already sent warning problem?&lt;/a&gt; in a generic manner.</source>
          <target state="translated">Wordpress FAQ는 &lt;a href=&quot;http://codex.wordpress.org/FAQ_Troubleshooting#How_do_I_solve_the_Headers_already_sent_warning_problem.3F&quot;&gt;이미 보낸 경고 문제를 해결하는 방법을&lt;/a&gt; 설명합니다 . 일반적인 방식으로.</target>
        </trans-unit>
        <trans-unit id="1299f1d073f53b4fdb9f45c83c5ba533dfc77f50" translate="yes" xml:space="preserve">
          <source>The actual output logic and intermixed HTML output should follow last.</source>
          <target state="translated">실제 출력 로직과 혼합 HTML 출력은 마지막에옵니다.</target>
        </trans-unit>
        <trans-unit id="465de4ea532c328ef7c14fcb28faf27199d85230" translate="yes" xml:space="preserve">
          <source>The buffer is limited in size, and can easily overrun when left to defaults.
And that's not a rare occurence either, &lt;a href=&quot;https://stackoverflow.com/questions/17643837/php-headers-already-sent-error-depending-on-output-length&quot;&gt;difficult to track down&lt;/a&gt;
when it happens.</source>
          <target state="translated">버퍼는 크기가 제한되어 있으며 기본값으로두면 쉽게 오버런 될 수 있습니다. 그리고 그것은 드문 일이 아니며, 일어날 때 &lt;a href=&quot;https://stackoverflow.com/questions/17643837/php-headers-already-sent-error-depending-on-output-length&quot;&gt;추적하기가 어렵습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="901602370607a9c90b5d6e34515558479dab211f" translate="yes" xml:space="preserve">
          <source>The lines mentioned in the error messages contain &lt;a href=&quot;http://php.net/header&quot;&gt;&lt;code&gt;header()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://php.net/setcookie&quot;&gt;&lt;code&gt;setcookie()&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="translated">오류 메시지에 언급 된 행에는 &lt;a href=&quot;http://php.net/header&quot;&gt; &lt;code&gt;header()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;http://php.net/setcookie&quot;&gt; &lt;code&gt;setcookie()&lt;/code&gt; &lt;/a&gt; 호출이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="be402a0273c8735932dad5d863825a4f9638b1c7" translate="yes" xml:space="preserve">
          <source>The page/output always &lt;em&gt;follows&lt;/em&gt; the headers. PHP has to pass the
headers to the webserver first. It can only do that once.
After the double linebreak it can nevermore amend them.</source>
          <target state="translated">페이지 / 출력은 항상 헤더를 &lt;em&gt;따릅니다&lt;/em&gt; . PHP는 먼저 헤더를 웹 서버에 전달해야합니다. 한 번만 할 수 있습니다. 이중 줄 바꿈 후에는 더 이상 수정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9c523bd998fdd5b6d22e65230344dfb3de8fcbf3" translate="yes" xml:space="preserve">
          <source>There are also automated tools to examine and rewrite text files
(&lt;a href=&quot;https://stackoverflow.com/questions/1068650/using-awk-to-remove-the-byte-order-mark&quot;&gt;&lt;code&gt;sed&lt;/code&gt;/&lt;code&gt;awk&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;recode&lt;/code&gt;).
For PHP specifically there's the &lt;a href=&quot;http://freshcode.club/projects/phptags&quot;&gt;&lt;code&gt;phptags&lt;/code&gt; tag tidier&lt;/a&gt;.
It rewrites close and open tags into long and short forms, but also easily
fixes leading and trailing whitespace, Unicode and UTF-x BOM issues:</source>
          <target state="translated">텍스트 파일을 검사하고 다시 작성하는 자동화 된 도구도 있습니다 ( &lt;a href=&quot;https://stackoverflow.com/questions/1068650/using-awk-to-remove-the-byte-order-mark&quot;&gt; &lt;code&gt;sed&lt;/code&gt; / &lt;code&gt;awk&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;recode&lt;/code&gt; ). PHP의 경우 &lt;a href=&quot;http://freshcode.club/projects/phptags&quot;&gt; &lt;code&gt;phptags&lt;/code&gt; 태그 tidier가&lt;/a&gt; 있습니다. 닫고 열린 태그를 길고 짧은 형식으로 다시 작성하지만 앞뒤 공백, 유니 코드 및 UTF-x BOM 문제를 쉽게 수정합니다.</target>
        </trans-unit>
        <trans-unit id="c83839bdc0a071f2ba32a305b159124b7480d55c" translate="yes" xml:space="preserve">
          <source>There it's easy to recognize the problem early on. Other editors may identify
its presence in a file/settings menu (Notepad++ on Windows can identify and
&lt;a href=&quot;https://stackoverflow.com/questions/3589358/fix-utf8-bom&quot;&gt;remedy the problem&lt;/a&gt;),
Another option to inspect the BOMs presence is resorting to an &lt;strong&gt;hexeditor&lt;/strong&gt;.
On *nix systems &lt;a href=&quot;http://linux.die.net/man/1/hexdump&quot;&gt;&lt;code&gt;hexdump&lt;/code&gt;&lt;/a&gt; is usually available,
if not a graphical variant which simplifies auditing these and other issues:</source>
          <target state="translated">초기에 문제를 쉽게 식별 할 수 있습니다. 다른 편집기는 파일 / 설정 메뉴에서 해당 존재를 식별 할 수 있습니다 (Windows의 메모장 ++에서 &lt;a href=&quot;https://stackoverflow.com/questions/3589358/fix-utf8-bom&quot;&gt;문제점을&lt;/a&gt; 식별하고 해결할 수 있음). BOM 존재를 검사하는 또 다른 옵션은 &lt;strong&gt;hexeditor&lt;/strong&gt; 를 사용하는 것입니다. * nix 시스템에서 &lt;a href=&quot;http://linux.die.net/man/1/hexdump&quot;&gt; &lt;code&gt;hexdump&lt;/code&gt; &lt;/a&gt; 는 일반적으로 사용 가능하지만 그래픽 변형이 아닌 경우 이러한 문제 및 기타 문제의 감사를 단순화합니다.</target>
        </trans-unit>
        <trans-unit id="b1369bc7f4b92d3e80ceb25658c6d5fdb80775a4" translate="yes" xml:space="preserve">
          <source>Things are okay,right?</source>
          <target state="translated">괜찮아요?</target>
        </trans-unit>
        <trans-unit id="965147083687d13a90053ee46572c0ae8044df87" translate="yes" xml:space="preserve">
          <source>This error may have been caused by the blank spaces &lt;em&gt;before&lt;/em&gt; the start of the file or &lt;em&gt;after&lt;/em&gt; the end of the file.These blank spaces should not be here.</source>
          <target state="translated">이 오류는 파일 시작 &lt;em&gt;전&lt;/em&gt; 또는 파일 끝 &lt;em&gt;이후&lt;/em&gt; 의 공백으로 인해 발생했을 수 있습니다. 이러한 공백은 여기에 없어야합니다.</target>
        </trans-unit>
        <trans-unit id="b2f829f30c005c315156fe94351d4b215744680a" translate="yes" xml:space="preserve">
          <source>This error message gets triggered when &lt;em&gt;anything&lt;/em&gt; is sent before you send HTTP headers (with &lt;a href=&quot;http://php.net/setcookie&quot;&gt;&lt;code&gt;setcookie&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/header&quot;&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt;). Common reasons for outputting something before the HTTP headers are:</source>
          <target state="translated">이 오류 메시지는 HTTP 헤더 ( &lt;a href=&quot;http://php.net/setcookie&quot;&gt; &lt;code&gt;setcookie&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;http://php.net/header&quot;&gt; &lt;code&gt;header&lt;/code&gt; 포함&lt;/a&gt; )를 보내기 전에 &lt;em&gt;무엇이든&lt;/em&gt; 보내면 트리거됩니다. HTTP 헤더 전에 무언가를 출력하는 일반적인 이유는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cf45b0cd1a393cf39888a97d1b59edec9ab0ea7f" translate="yes" xml:space="preserve">
          <source>This fix is an easy fix for sites we manage by FTP and sometimes can save our new team members some time.</source>
          <target state="translated">이 수정은 FTP로 관리하는 사이트에 대한 쉬운 수정이며 때때로 새로운 팀 구성원을 구할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="35de4ccb7277b55b8457fc26e778d438b3c92db0" translate="yes" xml:space="preserve">
          <source>This leads to non-valid HTML when utilized past the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section.
Most browsers still accept it.</source>
          <target state="translated">이것은 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 섹션을 지나서 사용할 때 유효하지 않은 HTML로 이어집니다. 대부분의 브라우저는 여전히이를 수락합니다.</target>
        </trans-unit>
        <trans-unit id="5642e8fe481ef2a419cad35a592b702098b08241" translate="yes" xml:space="preserve">
          <source>This will not work? Why?Because already a new line is generated.</source>
          <target state="translated">작동하지 않습니까? 왜 새로운 라인이 생성 되었기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="5604a98270c16f33778424478858bcdc2c54a1fc" translate="yes" xml:space="preserve">
          <source>This will turn output buffering on and your headers will be created after the page is buffered.</source>
          <target state="translated">출력 버퍼링이 켜지고 페이지가 버퍼링 된 후 헤더가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="d986bf96c434055d16a61765958a1786fc41b36e" translate="yes" xml:space="preserve">
          <source>To understand why headers must be sent before output it's necessary
to look at a typical &lt;a href=&quot;http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol&quot;&gt;HTTP&lt;/a&gt;
response. PHP scripts mainly generate HTML content, but also pass a
set of HTTP/CGI headers to the webserver:</source>
          <target state="translated">출력 전에 헤더를 보내야하는 이유를 이해하려면 일반적인 &lt;a href=&quot;http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol&quot;&gt;HTTP&lt;/a&gt; 응답을 살펴 봐야합니다. PHP 스크립트는 주로 HTML 컨텐츠를 생성하지만 HTTP / CGI 헤더 세트를 웹 서버에 전달합니다.</target>
        </trans-unit>
        <trans-unit id="17e5b87f95de584ce412aed857c04526fec7c223" translate="yes" xml:space="preserve">
          <source>Turning on &lt;a href=&quot;http://php.net/manual/en/book.outcontrol.php&quot;&gt;output buffering&lt;/a&gt; should make the problem go away; all output after the call to &lt;a href=&quot;http://php.net/ob_start&quot;&gt;&lt;code&gt;ob_start&lt;/code&gt;&lt;/a&gt; is buffered in memory until you release the buffer, e.g. with &lt;a href=&quot;http://php.net/ob_end_flush&quot;&gt;&lt;code&gt;ob_end_flush&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/book.outcontrol.php&quot;&gt;출력 버퍼링을&lt;/a&gt; 켜면 문제가 해결됩니다. &lt;a href=&quot;http://php.net/ob_start&quot;&gt; &lt;code&gt;ob_start&lt;/code&gt; &lt;/a&gt; 호출 후의 모든 출력은 버퍼를 해제 할 때까지 (예 : &lt;a href=&quot;http://php.net/ob_end_flush&quot;&gt; &lt;code&gt;ob_end_flush&lt;/code&gt; 등)&lt;/a&gt; 메모리에 버퍼링됩니다.</target>
        </trans-unit>
        <trans-unit id="11ef5ae8efc774c915de8ea8f44cd12fce2b0032" translate="yes" xml:space="preserve">
          <source>UTF-8 BOM</source>
          <target state="translated">UTF-8 BOM</target>
        </trans-unit>
        <trans-unit id="4391319c5ae652e376bcc705cd6c88a5e66859ef" translate="yes" xml:space="preserve">
          <source>Unparsed HTML sections in a &lt;code&gt;.php&lt;/code&gt; file are direct output as well.
Script conditions that will trigger a &lt;code&gt;header()&lt;/code&gt; call must be noted
before &lt;em&gt;any&lt;/em&gt; raw &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; blocks.</source>
          <target state="translated">&lt;code&gt;.php&lt;/code&gt; 파일의 구문 분석되지 않은 HTML 섹션도 직접 출력됩니다. 원시 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 블록 앞에 &lt;code&gt;header()&lt;/code&gt; 호출을 트리거하는 스크립트 조건을 기록해야합니다.</target>
        </trans-unit>
        <trans-unit id="ad23e3087cb0b6818c3c0dc4db8470ab2234f842" translate="yes" xml:space="preserve">
          <source>Use a templating scheme to separate processing from output logic.</source>
          <target state="translated">템플릿 구성표를 사용하여 처리를 출력 논리와 분리하십시오.</target>
        </trans-unit>
        <trans-unit id="89eacc71efc056466e892db70cfce53ccf48bfc4" translate="yes" xml:space="preserve">
          <source>Use case for output buffering as the correct solution to &quot;headers already sent&quot;</source>
          <target state="translated">&quot;이미 전송 된 헤더&quot;에 대한 올바른 솔루션으로 출력 버퍼링 사용 사례</target>
        </trans-unit>
        <trans-unit id="e1d3b00dc836b97fdeb0e4425269698ea67b6549" translate="yes" xml:space="preserve">
          <source>Use temporary string variables to defer messages.</source>
          <target state="translated">임시 문자열 변수를 사용하여 메시지를 연기하십시오.</target>
        </trans-unit>
        <trans-unit id="4418b3394a5252e61fdb3a37b810a92ad388d04b" translate="yes" xml:space="preserve">
          <source>Useful fallback workarounds are:</source>
          <target state="translated">유용한 대체 해결 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d8cdbbaadf4d0ca984ceef1d23545663c98563b5" translate="yes" xml:space="preserve">
          <source>Warning: Cannot modify header information - headers already sent (output started at</source>
          <target state="translated">경고 : 헤더 정보를 수정할 수 없습니다-헤더가 이미 전송되었습니다 (출력은</target>
        </trans-unit>
        <trans-unit id="db3f01c824ea9fd585d87525bc79bf24c9482312" translate="yes" xml:space="preserve">
          <source>Warning: Cannot modify header information - headers already sent by
  &lt;strong&gt;&lt;em&gt;(output started at&lt;/em&gt;&lt;/strong&gt; /www/usr2345/htdocs/&lt;b&gt;auth.php:52&lt;/b&gt;) in
  /www/usr2345/htdocs/index.php on line 100</source>
          <target state="translated">경고 : 헤더 정보를 수정할 수 없습니다-100 행의 /www/usr2345/htdocs/index.php &lt;strong&gt;&lt;em&gt;에서 (&lt;/em&gt;&lt;/strong&gt; / www / usr2345 / htdocs / &lt;b&gt;auth.php : 52&lt;/b&gt; &lt;strong&gt;&lt;em&gt;에서&lt;/em&gt;&lt;/strong&gt; 이미 &lt;strong&gt;&lt;em&gt;출력&lt;/em&gt;&lt;/strong&gt; 된 헤더) 헤더를 수정할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="712e71b0879e82e251cf8ef6b19fb04e8617bb6b" translate="yes" xml:space="preserve">
          <source>Warning: Cannot modify header information - headers already sent by (&lt;strong&gt;output started at /some/file.php:12&lt;/strong&gt;) in &lt;strong&gt;/some/file.php&lt;/strong&gt; on &lt;strong&gt;line 23&lt;/strong&gt;</source>
          <target state="translated">경고 : 헤더 정보를 수정할 수 없습니다 &lt;strong&gt;-23&lt;/strong&gt; &lt;strong&gt;행의&lt;/strong&gt; &lt;strong&gt;/some/file.php&lt;/strong&gt; &lt;strong&gt;에서&lt;/strong&gt; 이미 보낸 ( &lt;strong&gt;/some/file.php:12에서 출력 시작)&lt;/strong&gt; 헤더</target>
        </trans-unit>
        <trans-unit id="c3c7420c8855f78aaa46e1f3f27a292564579030" translate="yes" xml:space="preserve">
          <source>What could be the reason for this? And how to fix it?</source>
          <target state="translated">그 이유는 무엇입니까? 그리고 그것을 고치는 방법?</target>
        </trans-unit>
        <trans-unit id="eb3d7c6647bfc17293f5039e6530367d61e08190" translate="yes" xml:space="preserve">
          <source>What if &quot;a_important_file.php&quot; is this:</source>
          <target state="translated">&quot;a_important_file.php&quot;가 다음과 같은 경우 :</target>
        </trans-unit>
        <trans-unit id="039b646899415b1efae3db32279441ceacf53e26" translate="yes" xml:space="preserve">
          <source>What is output buffering?</source>
          <target state="translated">출력 버퍼링이란 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="2483acbf42e470b8a75fced3d175eade4b3bdb62" translate="yes" xml:space="preserve">
          <source>What we usually do in order to quickly fix this, is rename the file and on the LINUX system create a new file instead of the renamed one, and then copy the content into that. Many times this solve the issue as some of the files that were created in WIN once moved to the hosting cause this issue.</source>
          <target state="translated">우리가 일반적 으로이 문제를 신속하게 해결하기 위해하는 일은 파일 이름을 바꾸는 것입니다. LINUX 시스템에서 이름이 바뀐 파일 대신 새 파일을 만든 다음 내용을 해당 파일에 복사하십시오. WIN에서 생성 된 일부 파일이 호스팅으로 이동 한 경우이 문제가 발생하기 때문에 여러 번이 문제를 해결합니다.</target>
        </trans-unit>
        <trans-unit id="c425132485f8d835cd45cc0d2bdc306f39352976" translate="yes" xml:space="preserve">
          <source>When PHP receives the first output (&lt;code&gt;print&lt;/code&gt;, &lt;code&gt;echo&lt;/code&gt;, &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;) it will
&lt;em&gt;flush&lt;/em&gt; all collected headers. Afterwards it can send all the output
it wants. But sending further HTTP headers is impossible then.</source>
          <target state="translated">PHP가 첫 번째 출력 ( &lt;code&gt;print&lt;/code&gt; , &lt;code&gt;echo&lt;/code&gt; , &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; )을 받으면 수집 된 모든 헤더를 &lt;em&gt;플러시&lt;/em&gt; 합니다. 나중에 원하는 모든 출력을 보낼 수 있습니다. 그러나 추가 HTTP 헤더를 보내는 것은 불가능합니다.</target>
        </trans-unit>
        <trans-unit id="1a516e5f4936748fa609d439609677c7305cde7d" translate="yes" xml:space="preserve">
          <source>When running my script, I am getting several errors like this:</source>
          <target state="translated">스크립트를 실행할 때 다음과 같은 몇 가지 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d8225beac5424532277222a2ea2e71c92937bf0d" translate="yes" xml:space="preserve">
          <source>While this is often more HTML compliant than the &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; workaround,
it incurs a reliance on JavaScript-capable clients.</source>
          <target state="translated">이것이 &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 해결 방법보다 HTML과 호환되는 경우가 많지만 JavaScript 가능 클라이언트에 의존합니다.</target>
        </trans-unit>
        <trans-unit id="c40b45521afbf3d3441e415994019296056e23ef" translate="yes" xml:space="preserve">
          <source>Whitespace after &lt;code&gt;?&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;?&amp;gt;&lt;/code&gt; 뒤에 공백</target>
        </trans-unit>
        <trans-unit id="f9326622424b3f498dbf3984424497f5adb5ecd8" translate="yes" xml:space="preserve">
          <source>Whitespace before &lt;code&gt;&amp;lt;?php&lt;/code&gt; for &quot;script.php &lt;strong&gt;line 1&lt;/strong&gt;&quot; warnings</source>
          <target state="translated">&quot;script.php &lt;strong&gt;line 1&lt;/strong&gt; &quot;경고를위한 &lt;code&gt;&amp;lt;?php&lt;/code&gt; 앞의 공백</target>
        </trans-unit>
        <trans-unit id="637e7144e81fd43b363d1448bfde9b9de7a9a5a0" translate="yes" xml:space="preserve">
          <source>Whitespace before &lt;code&gt;&amp;lt;?php&lt;/code&gt; or after &lt;code&gt;?&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;?php&lt;/code&gt; 또는 &lt;code&gt;?&amp;gt;&lt;/code&gt; 앞의 공백</target>
        </trans-unit>
        <trans-unit id="7f1fd238ec4beb8cde6009aed857df6c13c1fa0d" translate="yes" xml:space="preserve">
          <source>Why &lt;code&gt;setcookie()&lt;/code&gt; and &lt;code&gt;session_start()&lt;/code&gt; are also affected</source>
          <target state="translated">&lt;code&gt;setcookie()&lt;/code&gt; 및 &lt;code&gt;session_start()&lt;/code&gt; 도 영향을받는 이유</target>
        </trans-unit>
        <trans-unit id="4979c6f6275d7e7443fd9262f6a45c81621916a7" translate="yes" xml:space="preserve">
          <source>Why does it happen?</source>
          <target state="translated">왜 그런가요?</target>
        </trans-unit>
        <trans-unit id="66880ed1e4d66e77ce35517bbc6c835c36a5c9f0" translate="yes" xml:space="preserve">
          <source>Why use output buffering in PHP?</source>
          <target state="translated">PHP에서 출력 버퍼링을 사용하는 이유는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="53534306dfab747856ec65cc2634c27c6bea2930" translate="yes" xml:space="preserve">
          <source>You can always use &lt;a href=&quot;http://php.net/headers_sent&quot;&gt;&lt;code&gt;headers_sent()&lt;/code&gt;&lt;/a&gt; to probe if
it's still possible to... send headers. Which is useful to conditionally print
an info or apply other fallback logic.</source>
          <target state="translated">여전히 &lt;a href=&quot;http://php.net/headers_sent&quot;&gt; &lt;code&gt;headers_sent()&lt;/code&gt; &lt;/a&gt; 를 사용하여 헤더를 보낼 수 있는지 조사 할 수 있습니다. 조건부로 정보를 인쇄하거나 다른 대체 논리를 적용하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="3b4c6041c7ad665689c3c91b4a78ea602372b163" translate="yes" xml:space="preserve">
          <source>You do</source>
          <target state="translated">당신은</target>
        </trans-unit>
        <trans-unit id="8a1543697a418b930a7e5f9a3a72eb7c989af239" translate="yes" xml:space="preserve">
          <source>You should not &lt;strong&gt;&lt;em&gt;print/echo&lt;/em&gt;&lt;/strong&gt; anything before sending the headers.</source>
          <target state="translated">헤더를 보내기 전에 어떤 것도 &lt;strong&gt;&lt;em&gt;인쇄 / 에코&lt;/em&gt;&lt;/strong&gt; 하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="93a32092a442a15137062f7e09e70924d6780c81" translate="yes" xml:space="preserve">
          <source>among others and user-defined functions.</source>
          <target state="translated">무엇보다도 사용자 정의 함수.</target>
        </trans-unit>
        <trans-unit id="1ddf0068ae2c55a5155ce979ac559664d85d8158" translate="yes" xml:space="preserve">
          <source>before setting the cookies, which isn't allowed. You can't send any output before the headers, not even a blank line.</source>
          <target state="translated">쿠키를 설정하기 전에 허용되지 않습니다. 빈 줄이 아니라 헤더 앞에 출력을 보낼 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="402f555bfe0827443f12db993d3324b99637e50d" translate="yes" xml:space="preserve">
          <source>ex)
    THERE SHOULD BE NO BLANK SPACES HERE</source>
          <target state="translated">예) 공백이 없어야합니다</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="2200f74b7585475a53ccee3590ee688b7fb19b6f" translate="yes" xml:space="preserve">
          <source>script:line</source>
          <target state="translated">script:line</target>
        </trans-unit>
        <trans-unit id="e1d0c6c1c29e6ad5164072a5b21340dca7fcb052" translate="yes" xml:space="preserve">
          <source>write</source>
          <target state="translated">write</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
