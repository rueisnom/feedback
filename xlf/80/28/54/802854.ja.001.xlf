<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/802854">
    <body>
      <group id="802854">
        <trans-unit id="826b9014c63c93a46483ed104dc39e50d839cb61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developers.google.com/web/updates/2016/08/removing-document-write&quot;&gt;This article on developers.google.com&lt;/a&gt; goes into more detail.</source>
          <target state="translated">&lt;a href=&quot;https://developers.google.com/web/updates/2016/08/removing-document-write&quot;&gt;このdeveloper.google.comの記事で&lt;/a&gt;は、さらに詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="cfd8a330e13190ac0686e8f88167aa081d213b1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.write&lt;/code&gt; is considered a browser violation as it halts the parser from rendering the page. The parser receives the message that the document is being modified; hence, it gets blocked until JS has completed its process. Only at this time will the parser resume.</source>
          <target state="translated">&lt;code&gt;.write&lt;/code&gt; は、パーサーによるページのレンダリングを停止するため、ブラウザー違反と見なされます。 パーサーは、ドキュメントが変更されているというメッセージを受け取ります。 したがって、JSがプロセスを完了するまでブロックされます。 この時点でのみ、パーサーが再開されます。</target>
        </trans-unit>
        <trans-unit id="5d9a0a7ad32136ed8f1dfe8859a22013d795fd8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;document.write&lt;/code&gt; needs to be used in the page load or body load.  So if you want to use the script in any other time to update your page content document.write is pretty much useless.</source>
          <target state="translated">&lt;code&gt;document.write&lt;/code&gt; は、ページの読み込みまたは本文の読み込みで使用する必要があります。 したがって、スクリプトを使用してページコンテンツを更新する場合は、document.writeはほとんど役に立ちません。</target>
        </trans-unit>
        <trans-unit id="010cfb34d5e9aae971a419887f69356c7358300b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;document.write&lt;/code&gt; only works while the page is loading; If you call it after the page is done loading, it will overwrite the whole page.</source>
          <target state="translated">&lt;code&gt;document.write&lt;/code&gt; は、ページの読み込み中にのみ機能します。 ページの読み込みが完了した後に呼び出すと、ページ全体が上書きされます。</target>
        </trans-unit>
        <trans-unit id="f5df3def5b65f811fb647181ffb06045115a7d1d" translate="yes" xml:space="preserve">
          <source>&lt;strike&gt;DW does not directly modify the DOM, preventing further manipulation&lt;/strike&gt;&lt;em&gt;(trying to find evidence of this, but it's at best situational)&lt;/em&gt;</source>
          <target state="translated">&lt;strike&gt;DWはDOMを直接変更せず、それ以上の操作を防止&lt;/strike&gt; &lt;em&gt;します（これの証拠を見つけようとしますが、状況に応じて）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3592c4dcfefcbb51a806e1b2043f2dc833adaaa2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best&lt;/strong&gt;: some browser switch back to HTML rendering and everything works fine.</source>
          <target state="translated">&lt;strong&gt;最適&lt;/strong&gt; ：一部のブラウザはHTMLレンダリングに戻り、すべてが正常に動作します。</target>
        </trans-unit>
        <trans-unit id="b69465cc04cb840744cdc85367c3a6f0b52eec9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Con:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Con:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="89fbb411004c913eb35991f02ce0e7a7eb62dcf4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;It can block your page&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;それはあなたのページをブロックすることができます&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7ebef2da58606aacbf7ac36789ad62b2206c8a51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pro:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Pro:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4ac1b1206df01a33d3746bfdfd5abf8fa0737ae0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Probable&lt;/strong&gt;: some browser disable the document.write() function in XML rendering mode.</source>
          <target state="translated">&lt;strong&gt;可能性&lt;/strong&gt; ：一部のブラウザーは、XMLレンダリングモードでdocument.write（）関数を無効にします。</target>
        </trans-unit>
        <trans-unit id="bfa333f1fe7ba6071039ae76ab877a0ae757f087" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Worst&lt;/strong&gt;: some browser will fire an XML error whenever using the document.write() function.</source>
          <target state="translated">&lt;strong&gt;最悪&lt;/strong&gt; ：一部のブラウザでは、document.write（）関数を使用するたびにXMLエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="6f4349c380a63f838be88c370cef604f0922a8f0" translate="yes" xml:space="preserve">
          <source>A Parser-blocking, cross-origin script, ..., is invoked via
  document.write. This may be blocked by the browser if the device has
  poor network connectivity.</source>
          <target state="translated">パーサブロック、クロスオリジンスクリプト、...がdocument.write経由で呼び出されます。デバイスのネットワーク接続性が悪い場合、ブラウザによってブロックされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="e213051c87e0c8695bfb38d61579650d93ea3ce5" translate="yes" xml:space="preserve">
          <source>A few of the more serious problems:</source>
          <target state="translated">もっと深刻な問題をいくつか。</target>
        </trans-unit>
        <trans-unit id="6cf75588ce1d62c934410431b4c2d9f35e7e6b9a" translate="yes" xml:space="preserve">
          <source>A simple reason why &lt;code&gt;document.write&lt;/code&gt; is a bad practice is that you cannot come up with a scenario where you cannot find a better alternative.</source>
          <target state="translated">&lt;code&gt;document.write&lt;/code&gt; が悪い習慣である単純な理由は、より良い代替案を見つけることができないシナリオを思い付くことができないことです。</target>
        </trans-unit>
        <trans-unit id="586da593715c792d36b865e66a83957efa66c526" translate="yes" xml:space="preserve">
          <source>All in all, it's best to steer clear of this method if you can help it.</source>
          <target state="translated">全体的に、それはあなたがそれを助けることができる場合は、この方法を避けるのが最善の方法です。</target>
        </trans-unit>
        <trans-unit id="98a110c76dedb15e5d09cf5cf415d3b2d1c56018" translate="yes" xml:space="preserve">
          <source>And document.write() would be like evaluating a string, e.g. create a list by evaluating a source code string like this:</source>
          <target state="translated">そして、document.write()は文字列を評価するようなもので、例えば、このようなソースコードの文字列を評価してリストを作成します。</target>
        </trans-unit>
        <trans-unit id="32a04b489cbeed3421a2b8f3a71e0044893aa7e1" translate="yes" xml:space="preserve">
          <source>Another legitimate use of &lt;code&gt;document.write&lt;/code&gt; comes from the HTML5 Boilerplate &lt;a href=&quot;https://github.com/h5bp/html5-boilerplate/blob/master/src/index.html&quot;&gt;index.html&lt;/a&gt; example.</source>
          <target state="translated">&lt;code&gt;document.write&lt;/code&gt; のもう1つの正当な使用は、HTML5ボイラープレート&lt;a href=&quot;https://github.com/h5bp/html5-boilerplate/blob/master/src/index.html&quot;&gt;index.htmlの&lt;/a&gt;例から来ています。</target>
        </trans-unit>
        <trans-unit id="f5f474738dcbd7760cf8863a85580615a2fe1ba6" translate="yes" xml:space="preserve">
          <source>Another reason is that you are dealing with strings instead of objects (it is very primitive).</source>
          <target state="translated">もう一つの理由は、オブジェクトではなく文字列を扱っているからです(非常に原始的です)。</target>
        </trans-unit>
        <trans-unit id="ca31ae4dc28769755ba50b0821c0afe616261ac2" translate="yes" xml:space="preserve">
          <source>As long as you don't try to use it after the document has loaded, &lt;code&gt;document.write&lt;/code&gt; is not inherently evil, in my humble opinion.</source>
          <target state="translated">ドキュメントを読み込んだ後で使用しない限り、私の考えでは &lt;code&gt;document.write&lt;/code&gt; は本質的に悪ではありません。</target>
        </trans-unit>
        <trans-unit id="b6c0d29bdc2419de1520c4227d4eccd10fcefc17" translate="yes" xml:space="preserve">
          <source>Based on analysis done by Google-Chrome Dev Tools' &lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/&quot;&gt;Lighthouse Audit&lt;/a&gt;,</source>
          <target state="translated">Google-Chrome Dev Toolsの&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/&quot;&gt;Lighthouse Audit&lt;/a&gt;による分析に基づいて、</target>
        </trans-unit>
        <trans-unit id="8dc2c268fbf1e34e5f2f11524efa1c819848ad1b" translate="yes" xml:space="preserve">
          <source>Browser Violation</source>
          <target state="translated">ブラウザ違反</target>
        </trans-unit>
        <trans-unit id="ba5210cb9b1a663880ab56accba5bb7ebc5570cc" translate="yes" xml:space="preserve">
          <source>Chrome may block &lt;code&gt;document.write&lt;/code&gt; that inserts a script in certain cases. When this happens, it will display this warning in the console:</source>
          <target state="translated">Chromeは、特定の場合にスクリプトを挿入する &lt;code&gt;document.write&lt;/code&gt; をブロックする場合があります。 これが発生すると、コンソールに次の警告が表示されます。</target>
        </trans-unit>
        <trans-unit id="f0f55494b2cc804af7ba0550eb372d75167c5b39" translate="yes" xml:space="preserve">
          <source>DW executed after the page has finished loading will overwrite the page, or write a new page, or not work</source>
          <target state="translated">ページの読み込みが終了した後に実行されたDWは、ページを上書きしたり、新しいページを書き込んだり、動作しません。</target>
        </trans-unit>
        <trans-unit id="4c80ffc717cc2c0ee8ce8930d0c60d96a5a82a91" translate="yes" xml:space="preserve">
          <source>DW executes where encountered: it cannot inject at a given node point</source>
          <target state="translated">DWは遭遇した場所で実行されます:指定されたノードポイントでは注入できません。</target>
        </trans-unit>
        <trans-unit id="cbb0aff8034c59a6fd0c41daa00c5dc9741b385a" translate="yes" xml:space="preserve">
          <source>DW is effectively writing serialised text which is not the way the DOM works conceptually, and is an easy way to create bugs (.innerHTML has the same problem)</source>
          <target state="translated">DW は事実上、DOM が概念的に動作する方法とは異なるシリアライズされたテキストを書いており、バグが発生しやすい方法です (.innerHTML にも同じ問題があります)。</target>
        </trans-unit>
        <trans-unit id="83fb34631ce45b4b283b6f59d5cbae8fcc72f2f3" translate="yes" xml:space="preserve">
          <source>Even so, you aren't really leveraging the DOM when you use document.write--you are just dumping a blob of text into the document so I'd say it's bad form.</source>
          <target state="translated">そうは言っても、document.writeを使ってもDOMを本当に活用しているわけではありません。</target>
        </trans-unit>
        <trans-unit id="38551b22eeca8f0a499aee32c2f294bbbc20028a" translate="yes" xml:space="preserve">
          <source>Far better to use the safe and DOM friendly &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document&quot;&gt;DOM manipulation methods&lt;/a&gt;</source>
          <target state="translated">安全でDOMフレンドリーな&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document&quot;&gt;DOM操作メソッド&lt;/a&gt;を使用する方がはるかに良い</target>
        </trans-unit>
        <trans-unit id="df9bf1ae98dc45f25c4d64a24409f663af5e4193" translate="yes" xml:space="preserve">
          <source>For more info see &lt;a href=&quot;https://developers.google.com/web/updates/2016/08/removing-document-write&quot;&gt;Intervening against document.write()&lt;/a&gt;</source>
          <target state="translated">詳細については&lt;a href=&quot;https://developers.google.com/web/updates/2016/08/removing-document-write&quot;&gt;、document.write（）に対する介入を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d38a06e33046e7c7ebeaf9f839d52ef7ddc821f6" translate="yes" xml:space="preserve">
          <source>For users on slow connections, external scripts dynamically injected via &lt;code&gt;document.write()&lt;/code&gt; can delay page load by tens of seconds.</source>
          <target state="translated">低速接続のユーザーの場合、 &lt;code&gt;document.write()&lt;/code&gt; を介して動的に挿入された外部スクリプトにより、ページの読み込みが数十秒遅れることがあります。</target>
        </trans-unit>
        <trans-unit id="9bf8b07b668fa428786cd90106cd901d16cc136e" translate="yes" xml:space="preserve">
          <source>Here's my twopence worth, in general you shouldn't use &lt;code&gt;document.write&lt;/code&gt; for heavy lifting, but there is one instance where it is definitely useful:</source>
          <target state="translated">ここに私の2ペンスの価値があります。一般に、持ち上げるのに &lt;code&gt;document.write&lt;/code&gt; を使用するべきではありませんが、それが確実に役立つインスタンスが1つあります。</target>
        </trans-unit>
        <trans-unit id="328fea04589a8b96650b7cfd712cc75147cbe0f3" translate="yes" xml:space="preserve">
          <source>I discovered this recently trying to create an AJAX slider gallery. I created two nested divs, and applied &lt;code&gt;width&lt;/code&gt;/&lt;code&gt;height&lt;/code&gt; and &lt;code&gt;overflow: hidden&lt;/code&gt; to the outer &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with JS. This was so that in the event that the browser had JS disabled, the div would float to accommodate the images in the gallery - some nice graceful degradation.</source>
          <target state="translated">私は最近、AJAXスライダーギャラリーを作成しようとしていることを発見しました。 私は2つのネストされた &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; を作成し、 &lt;code&gt;width&lt;/code&gt; / &lt;code&gt;height&lt;/code&gt; および &lt;code&gt;overflow: hidden&lt;/code&gt; を適用しました。 これは、ブラウザーでJSが無効になっている場合、divがフロートしてギャラリー内の画像に対応するようにするためです-いくつかの素晴らしい優雅な低下。</target>
        </trans-unit>
        <trans-unit id="4cc2016d66e51cfc989ebf136e4efc7d6d740778" translate="yes" xml:space="preserve">
          <source>I don't think using document.write is a bad practice at all. In simple words it is like a high voltage for inexperienced people. If you use it the wrong way, you get cooked. There are many developers who have used this and other dangerous methods at least once, and they never really dig into their failures. Instead, when something goes wrong, they just bail out, and use something safer. Those are the ones who make such statements about what is considered a &quot;Bad Practice&quot;.</source>
          <target state="translated">document.writeを使うことが悪いことだとは全く思いません。簡単に言えば、経験の浅い人にとってはハイボルテージのようなものです。使い方を間違えると料理されてしまいます。この方法や他の危険な方法を一度は使ったことがある開発者はたくさんいますが、彼らは失敗したことを深く掘り下げようとはしません。その代わり、何かがうまくいかなくなったときには、その場を離れて、より安全なものを使うのです。これらの人たちは、何が &quot;Bad Practice &quot;とみなされているかについて、そのような発言をしている人たちです。</target>
        </trans-unit>
        <trans-unit id="c74cdb29b366e3a6755058cada71ff6212a65be2" translate="yes" xml:space="preserve">
          <source>I know &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/document.write&quot;&gt;&lt;code&gt;document.write&lt;/code&gt;&lt;/a&gt; is considered bad practice; and I'm hoping to compile a list of reasons to submit to a 3rd party vendor as to why they shouldn't use &lt;code&gt;document.write&lt;/code&gt; in implementations of their analytics code.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/document.write&quot;&gt; &lt;code&gt;document.write&lt;/code&gt; &lt;/a&gt;は悪い習慣と考えられています。 分析コードの実装で &lt;code&gt;document.write&lt;/code&gt; を使用してはならない理由について、サードパーティベンダーに提出する理由のリストをまとめたいと思っています。</target>
        </trans-unit>
        <trans-unit id="fab27ea335ae2aedd86eeacde1be3b1ec3376803" translate="yes" xml:space="preserve">
          <source>I think the biggest problem is that any elements written via document.write are added to the end of the page's elements. That's rarely the desired effect with modern page layouts and AJAX. (you have to keep in mind that the elements in the DOM are temporal, and when the script runs may affect its behavior).</source>
          <target state="translated">最大の問題は、document.writeを介して書かれた要素がページの要素の最後に追加されることだと思います。これは最近のページレイアウトとAJAXでは望ましい効果ではありません。(DOMの要素は一時的なものであり、スクリプトが実行されたときにその動作に影響を与える可能性があることを覚えておく必要があります)。</target>
        </trans-unit>
        <trans-unit id="64c5e244a3d1310fd45ecd093638709510a70aa2" translate="yes" xml:space="preserve">
          <source>I've also seen the same technique for using the &lt;a href=&quot;https://github.com/douglascrockford/JSON-js&quot;&gt;json2.js&lt;/a&gt; JSON parse/stringify polyfill (&lt;a href=&quot;http://caniuse.com/#search=JSON&quot;&gt;needed by IE7 and below&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;https://github.com/douglascrockford/JSON-js&quot;&gt;json2.js&lt;/a&gt; JSON解析/文字列化ポリフィルを使用するための同じ手法も見ました（ &lt;a href=&quot;http://caniuse.com/#search=JSON&quot;&gt;IE7以下で必要&lt;/a&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7eec71562329793b9ab4fb06d8a13c15253feeb4" translate="yes" xml:space="preserve">
          <source>If you implement coding tools, like simple live editors, it is very handy to have the ability to quickly evaluate a string, for example using document.write() or .innerHTML. Lisp is ideal in this sense, but you can do very cool stuff also in JS, and many people are doing that, like &lt;a href=&quot;http://jsbin.com/&quot;&gt;http://jsbin.com/&lt;/a&gt;</source>
          <target state="translated">シンプルなライブエディターなどのコーディングツールを実装する場合、たとえばdocument.write（）や.innerHTMLを使用して、文字列をすばやく評価する機能があると非常に便利です。 Lispはこの意味で理想的ですが、JSでも非常に優れた機能を実行でき、 &lt;a href=&quot;http://jsbin.com/&quot;&gt;http：//jsbin.com/の&lt;/a&gt;ように多くの人々がそうしています。</target>
        </trans-unit>
        <trans-unit id="dbbb6e7716ce2de67a98d1d17d3a0cc173474da8" translate="yes" xml:space="preserve">
          <source>In terms of vendors supplying analytics code (like Google Analytics) it's actually the easiest way for them to distribute such snippets</source>
          <target state="translated">アナリティクスコードを提供しているベンダー(Google Analyticsのような)にとっては、このようなスニペットを配布するのが最も簡単な方法です。</target>
        </trans-unit>
        <trans-unit id="f05cfd43335dbedd7583840248aa0855d6b64c43" translate="yes" xml:space="preserve">
          <source>In the context of Lisp, DOM manipulation would be like manipulating a list structure, e.g. create the list (orange) by doing:</source>
          <target state="translated">Lisp のコンテキストでは、DOM の操作はリスト構造を操作するようなもので、例えば、リスト (オレンジ)を作成するようなものです。</target>
        </trans-unit>
        <trans-unit id="8675b2a73e6a1a25f1321e6faf20af9051787b3b" translate="yes" xml:space="preserve">
          <source>It breaks pages using XML rendering (like XHTML pages).</source>
          <target state="translated">XMLレンダリングを使用してページを分割します(XHTMLページのように)。</target>
        </trans-unit>
        <trans-unit id="2e959c99ff4ef573029bc59e4446ef47f9c227f3" translate="yes" xml:space="preserve">
          <source>It does only append to documents.</source>
          <target state="translated">ドキュメントへの追記のみを行います。</target>
        </trans-unit>
        <trans-unit id="c42952e44196436174e98bac19b77a2b2b74c708" translate="yes" xml:space="preserve">
          <source>It has nothing of the beauty of for instance the &lt;a href=&quot;https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller&quot;&gt;MVC (Model-View-Controller)&lt;/a&gt; pattern.</source>
          <target state="translated">たとえば、 &lt;a href=&quot;https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller&quot;&gt;MVC（Model-View-Controller）&lt;/a&gt;パターンの美しさは何もありません。</target>
        </trans-unit>
        <trans-unit id="08e33dc8264325fbaa4397164404c0a649dc0bf3" translate="yes" xml:space="preserve">
          <source>It is a lot more powerful to present dynamic content with &lt;a href=&quot;https://jquery.com/&quot;&gt;ajax+jQuery&lt;/a&gt; or &lt;a href=&quot;https://angularjs.org/&quot;&gt;angularJS&lt;/a&gt;.</source>
          <target state="translated">動的コンテンツを&lt;a href=&quot;https://jquery.com/&quot;&gt;ajax + jQuery&lt;/a&gt;または&lt;a href=&quot;https://angularjs.org/&quot;&gt;angularJSで&lt;/a&gt;表示する方がはるかに強力です 。</target>
        </trans-unit>
        <trans-unit id="44e2ddb5bb3b4c77e868bbf3cf0b7df8d150fc93" translate="yes" xml:space="preserve">
          <source>It is usually used in such a way that the script is placed within the content, which is considered bad-form.</source>
          <target state="translated">通常、スクリプトをコンテンツ内に配置するような形で使用されており、悪形とされています。</target>
        </trans-unit>
        <trans-unit id="175abf4ef26925b6b362a56441ce762fead9b45c" translate="yes" xml:space="preserve">
          <source>It just doesn't have much use unless you're creating an entire document using JavaScript in which case you may start with document.write.</source>
          <target state="translated">ただ、JavaScriptを使ってドキュメント全体を作成している場合を除いてはあまり意味がありません。</target>
        </trans-unit>
        <trans-unit id="c2c5fd47fa308d44afeb9997ca588e7b39b82c8b" translate="yes" xml:space="preserve">
          <source>It keeps the scripts small</source>
          <target state="translated">スクリプトを小さくしてくれます。</target>
        </trans-unit>
        <trans-unit id="8a4d6da8f57c73c606ea29c6591b6369ca864e81" translate="yes" xml:space="preserve">
          <source>It overwrites content on the page which is the most obvious reason but I wouldn't call it &quot;bad&quot;.</source>
          <target state="translated">一番わかりやすい理由であるページのコンテンツを上書きしてしまうのですが、これを「悪い」とは言いません。</target>
        </trans-unit>
        <trans-unit id="ef9ac0de84ae80dd062971857646c676c5a958b1" translate="yes" xml:space="preserve">
          <source>It serializes the rendering engine to pause until said external script is loaded, which could take much longer than an internal script.</source>
          <target state="translated">これは、レンダリングエンジンをシリアライズして、外部スクリプトがロードされるまで一時停止します。</target>
        </trans-unit>
        <trans-unit id="2c88c041efc93bc804df3a7a648b060c3a5f7700" translate="yes" xml:space="preserve">
          <source>It's extremely compatible</source>
          <target state="translated">それは非常に互換性があります</target>
        </trans-unit>
        <trans-unit id="2ace14076f8a9b5a7d406a6573b87f58ed3cab5b" translate="yes" xml:space="preserve">
          <source>It's like formatting a hard drive, when you need to delete only a few files and then saying &quot;formatting drive is a bad practice&quot;.</source>
          <target state="translated">いくつかのファイルだけを削除する必要があるのに、「ドライブをフォーマットするのは悪習だ」と言って、ハードディスクをフォーマットしているようなものです。</target>
        </trans-unit>
        <trans-unit id="c78d00d58c2fad38bf09178b081d71cc6a21b082" translate="yes" xml:space="preserve">
          <source>It's much better to set a placeholder element on the page, and then manipulate it's innerHTML.</source>
          <target state="translated">ページ上にプレースホルダ要素を設定して、その内部HTMLを操作した方がはるかに良いです。</target>
        </trans-unit>
        <trans-unit id="f92572ecb296fa05fd25685e35e572aadc130367" translate="yes" xml:space="preserve">
          <source>It's the easiest way to embed inline content from an external (to your host/domain) script.</source>
          <target state="translated">これは、外部(ホストドメインへの)スクリプトからインラインコンテンツを埋め込む最も簡単な方法です。</target>
        </trans-unit>
        <trans-unit id="6107c7b458f7063e7d8034d97a4b6b3d895e601c" translate="yes" xml:space="preserve">
          <source>Lisp also has the very useful ability to create code using list manipulation (like using the &quot;DOM style&quot; to create a JS parse tree). This means you can build up a list structure using the &quot;DOM style&quot;, rather than the &quot;string style&quot;, and then run that code, e.g. like this:</source>
          <target state="translated">Lisp には、リスト操作を使ってコードを作成するための非常に便利な機能もあります(「DOM スタイル」を使って JS 構文木を作成するように)。つまり、「文字列スタイル」ではなく「DOMスタイル」を使ってリスト構造を構築し、そのコードを実行することができます。</target>
        </trans-unit>
        <trans-unit id="a3b94c601fb014b232428ef1810d35004bef8e6c" translate="yes" xml:space="preserve">
          <source>Obviously, this won't work in XHTML, but since XHTML appears to be something of a dead duck (and renders as tag soup in IE) it might be worth re-evaluating your choice of DOCTYPE...</source>
          <target state="translated">明らかに、これはXHTMLでは動作しませんが、XHTMLが死んだカモのように見えるので(IEではタグスープとしてレンダリングされます)、DOCTYPEの選択を再評価する価値があるかもしれません...</target>
        </trans-unit>
        <trans-unit id="714da2bdccc4a025fb61616dc3c7f5c953ff47b9" translate="yes" xml:space="preserve">
          <source>Off the top of my head:</source>
          <target state="translated">頭のてっぺんから離れて</target>
        </trans-unit>
        <trans-unit id="489705bd36c6abd21d164b21c02250fa21809212" translate="yes" xml:space="preserve">
          <source>Once it's written it's done and over with. We cannot go back to manipulate it without tapping into the DOM.</source>
          <target state="translated">一度書いてしまえばそれで終わりです。DOMを叩かずに操作するために戻ることはできません。</target>
        </trans-unit>
        <trans-unit id="3699d68a46c5054148562848233d367e2c070ff0" translate="yes" xml:space="preserve">
          <source>One can think of document.write() (and .innerHTML) as evaluating a source code string. This can be very handy for many applications. For example if you get HTML code as a string from some source, it is handy to just &quot;evaluate&quot; it.</source>
          <target state="translated">document.write()(および .innerHTML)は、ソースコードの文字列を評価していると考えることができます。これは多くのアプリケーションで非常に便利です。例えば、あるソースからHTMLコードを文字列として取得した場合、それを「評価」するだけで便利です。</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="68bb5152ed597d87fb4619774fa38ca8e6d67911" translate="yes" xml:space="preserve">
          <source>Please include your reason for claiming &lt;code&gt;document.write&lt;/code&gt; as a bad practice below.</source>
          <target state="translated">&lt;code&gt;document.write&lt;/code&gt; を主張する理由を悪い習慣として以下に記載してください。</target>
        </trans-unit>
        <trans-unit id="9d1e4e7d27b519b1da3d7266c9c87d7861741080" translate="yes" xml:space="preserve">
          <source>References:</source>
          <target state="translated">References:</target>
        </trans-unit>
        <trans-unit id="8d64579596b16b629cff3e95d263924c8177b0b1" translate="yes" xml:space="preserve">
          <source>Technically &lt;code&gt;document.write&lt;/code&gt; will only update HTML pages not XHTML/XML.  IE seems to be pretty forgiving of this fact but other browsers will not be.</source>
          <target state="translated">技術的には、 &lt;code&gt;document.write&lt;/code&gt; はHTMLページのみを更新し、XHTML / XMLは更新しません。 IEはこの事実をかなり許容しているようですが、他のブラウザはそうではありません。</target>
        </trans-unit>
        <trans-unit id="ce508ea0e8b07947932b7c25973a83033a926789" translate="yes" xml:space="preserve">
          <source>The biggest consequence of employing such a method is lowered performance. The browser will take longer to load page content. The adverse reaction on load time depends on what is being written to the document. You won't see much of a difference if you are adding a &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tag to the DOM as opposed to passing an array of 50-some references to JavaScript libraries (something which I have seen in working code and resulted in an 11 second delay - of course, this also depends on your hardware).</source>
          <target state="translated">このような方法を採用する最大の結果は、パフォーマンスの低下です。 ブラウザがページコンテンツをロードするのに時間がかかります。 ロード時間への悪影響は、ドキュメントに何が書き込まれているかによって異なります。 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; タグをDOMに追加する場合、JavaScriptライブラリへの50の参照の配列を渡すのではなく、大きな違いは見られません（作業コードで見た結果、11秒になったもの）遅延-もちろん、これはハードウェアにも依存します）。</target>
        </trans-unit>
        <trans-unit id="1bad4975a3288af8b0b1d4a8fd6a1d4292945a3b" translate="yes" xml:space="preserve">
          <source>The disadvantages of document.write mainly depends on these 3 factors:</source>
          <target state="translated">document.writeのデメリットは、主にこの3つの要素に左右されます。</target>
        </trans-unit>
        <trans-unit id="21d307495a4832f897836ffd7f37a51a6c06551f" translate="yes" xml:space="preserve">
          <source>The document.write() is mostly used to write content to the screen as soon as that content is needed. This means it happens anywhere, either in a JavaScript file or inside a script tag within an HTML file. With the script tag being placed anywhere within such an HTML file, it is a bad idea to have document.write() statements inside script blocks that are intertwined with HTML inside a web page.</source>
          <target state="translated">document.write()は、その内容が必要になったらすぐに画面に書き込むために使われることがほとんどです。これは、JavaScriptファイル内でも、HTMLファイル内のscriptタグ内でも、どこでも起こることを意味します。このような HTML ファイル内のどこにでも script タグが配置されているため、ウェブページ内の HTML と絡み合ったスクリプトブロックの内部に document.write()文を配置するのはよくありません。</target>
        </trans-unit>
        <trans-unit id="39ba256a68109911affc155798aab13473b6c90a" translate="yes" xml:space="preserve">
          <source>There's actually nothing wrong with &lt;code&gt;document.write&lt;/code&gt;, per se.  The problem is that it's really easy to misuse it.  Grossly, even.</source>
          <target state="translated">実際、 &lt;code&gt;document.write&lt;/code&gt; 自体には何も問題はありません。 問題は、誤用しやすいことです。 ひどく、さえ。</target>
        </trans-unit>
        <trans-unit id="d3e76044d59cba50727568df74cdabf8784acfcd" translate="yes" xml:space="preserve">
          <source>They don't have to worry about overriding already established onload events or including the necessary abstraction to add onload events safely</source>
          <target state="translated">すでに確立されているオンロードイベントをオーバーライドしたり、安全にオンロードイベントを追加するために必要な抽象化を含めたりすることを心配する必要はありません。</target>
        </trans-unit>
        <trans-unit id="7855c95d2894d6ddde6e0082a1de86fd43d21857" translate="yes" xml:space="preserve">
          <source>Thing is, as with the article above, this JS hijacking of the CSS didn't kick in until the page had loaded, causing a momentary flash as the div was loaded. So I needed to write a CSS rule, or include a sheet, as the page loaded.</source>
          <target state="translated">問題は、上の記事のように、このJSによるCSSの乗っ取りは、ページが読み込まれるまで効かず、divが読み込まれると一瞬フラッシュが発生してしまうことでした。そのため、ページが読み込まれたときに CSS のルールを書くか、シートを含める必要がありました。</target>
        </trans-unit>
        <trans-unit id="33808169775e6aaadd8aecbeb5d2b6d36098891c" translate="yes" xml:space="preserve">
          <source>This effectively means you have to call it from an inline script block - And that will prevent the browser from processing parts of the page that follow. Scripts and Images will not be downloaded until the writing block is finished.</source>
          <target state="translated">これは事実上、インラインスクリプトブロックから呼び出す必要があることを意味します。スクリプトと画像は、書き込みブロックが終了するまでダウンロードされません。</target>
        </trans-unit>
        <trans-unit id="b9c9f1a966019dcbce39961edc9ac9c1d57bdb78" translate="yes" xml:space="preserve">
          <source>Well designed code in general will take any dynamically generated content, store it in memory, keep manipulating it as it passes through the code before it finally gets spit out to the screen. So to reiterate the last point in the preceding section, rendering content in-place may render faster than other content that may be relied upon, but it may not be available to the other code that in turn requires the content to be rendered for processing. To solve this dilemma we need to get rid of the document.write() and implement it the right way.</source>
          <target state="translated">一般的によく設計されたコードは、動的に生成されたコンテンツを受け取り、それをメモリに保存し、コードを通過する際にそれを操作し続け、最終的に画面に吐き出されます。前節の最後のポイントを繰り返しますが、コンテンツをその場でレンダリングすると、他のコンテンツよりも高速にレンダリングできますが、処理のためにコンテンツをレンダリングする必要がある他のコードでは利用できない場合があります。このジレンマを解決するには、document.write()を取り除き、正しい方法で実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="129c8b0eed788dd7325f0eacd5b5b5c92843d45b" translate="yes" xml:space="preserve">
          <source>Why is document.write considered a “bad practice”</source>
          <target state="translated">なぜdocument.writeは &quot;悪い習慣 &quot;とみなされるのか?</target>
        </trans-unit>
        <trans-unit id="ce707735b6bb21a581708a5a0645226e0fc70b02" translate="yes" xml:space="preserve">
          <source>You can overwrite the entire content in a frame/iframe.  I used to use this technique a lot for menu/navigation pieces before more modern Ajax techniques were widely available (1998-2002).</source>
          <target state="translated">フレームフレーム内のコンテンツ全体を上書きすることができます。もっと近代的なAjax技術が広く利用されるようになる前(1998-2002年)は、私はこの技術をmenunavigationのためによく使っていました。</target>
        </trans-unit>
        <trans-unit id="f452a6fd96c9dac3749b8e54dfee97633000b3be" translate="yes" xml:space="preserve">
          <source>a) Implementation</source>
          <target state="translated">a)実装</target>
        </trans-unit>
        <trans-unit id="b93aa289742c254955b9d232ad84cfd151b8c8d7" translate="yes" xml:space="preserve">
          <source>b) Rendering</source>
          <target state="translated">b)レンダリング</target>
        </trans-unit>
        <trans-unit id="b11df25841b632cbb871076973305085341aabb5" translate="yes" xml:space="preserve">
          <source>c) Impossible Manipulation</source>
          <target state="translated">c)不可能な取り扱い</target>
        </trans-unit>
        <trans-unit id="f34d65f205f80fd1724a7e7821c49ec3a2d2e139" translate="yes" xml:space="preserve">
          <source>document.write (henceforth DW) does not work in XHTML</source>
          <target state="translated">document.write (以下 DW)が XHTML で動作しません。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
