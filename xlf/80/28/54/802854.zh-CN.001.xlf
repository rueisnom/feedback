<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/802854">
    <body>
      <group id="802854">
        <trans-unit id="826b9014c63c93a46483ed104dc39e50d839cb61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developers.google.com/web/updates/2016/08/removing-document-write&quot;&gt;This article on developers.google.com&lt;/a&gt; goes into more detail.</source>
          <target state="translated">&lt;a href=&quot;https://developers.google.com/web/updates/2016/08/removing-document-write&quot;&gt;有关developers.google.com的这篇文章&lt;/a&gt;将进行更详细的介绍。</target>
        </trans-unit>
        <trans-unit id="cfd8a330e13190ac0686e8f88167aa081d213b1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.write&lt;/code&gt; is considered a browser violation as it halts the parser from rendering the page. The parser receives the message that the document is being modified; hence, it gets blocked until JS has completed its process. Only at this time will the parser resume.</source>
          <target state="translated">&lt;code&gt;.write&lt;/code&gt; 被视为浏览器冲突，因为它使解析器无法呈现页面。 解析器收到消息，该文档正在被修改； 因此，它将被阻塞，直到JS完成其过程为止。 仅在此时，解析器才能恢复。</target>
        </trans-unit>
        <trans-unit id="5d9a0a7ad32136ed8f1dfe8859a22013d795fd8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;document.write&lt;/code&gt; needs to be used in the page load or body load.  So if you want to use the script in any other time to update your page content document.write is pretty much useless.</source>
          <target state="translated">需要在页面加载或正文加载中使用 &lt;code&gt;document.write&lt;/code&gt; 。 因此，如果您想在其他时间使用脚本来更新页面内容document.write几乎没有用。</target>
        </trans-unit>
        <trans-unit id="010cfb34d5e9aae971a419887f69356c7358300b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;document.write&lt;/code&gt; only works while the page is loading; If you call it after the page is done loading, it will overwrite the whole page.</source>
          <target state="translated">&lt;code&gt;document.write&lt;/code&gt; 仅在页面加载时有效； 如果在页面加载完成后调用它，它将覆盖整个页面。</target>
        </trans-unit>
        <trans-unit id="f5df3def5b65f811fb647181ffb06045115a7d1d" translate="yes" xml:space="preserve">
          <source>&lt;strike&gt;DW does not directly modify the DOM, preventing further manipulation&lt;/strike&gt;&lt;em&gt;(trying to find evidence of this, but it's at best situational)&lt;/em&gt;</source>
          <target state="translated">&lt;strike&gt;DW不会直接修改DOM，从而阻止了进一步的操作&lt;/strike&gt; &lt;em&gt;（试图寻找证据，但充其量只是视情况而定）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3592c4dcfefcbb51a806e1b2043f2dc833adaaa2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best&lt;/strong&gt;: some browser switch back to HTML rendering and everything works fine.</source>
          <target state="translated">&lt;strong&gt;最好&lt;/strong&gt; ：将某些浏览器切换回HTML呈现，一切运行正常。</target>
        </trans-unit>
        <trans-unit id="b69465cc04cb840744cdc85367c3a6f0b52eec9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Con:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Con:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="89fbb411004c913eb35991f02ce0e7a7eb62dcf4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;It can block your page&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;它可以阻止您的页面&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7ebef2da58606aacbf7ac36789ad62b2206c8a51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pro:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Pro:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4ac1b1206df01a33d3746bfdfd5abf8fa0737ae0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Probable&lt;/strong&gt;: some browser disable the document.write() function in XML rendering mode.</source>
          <target state="translated">&lt;strong&gt;可能&lt;/strong&gt; ：某些浏览器在XML呈现模式下禁用document.write（）函数。</target>
        </trans-unit>
        <trans-unit id="bfa333f1fe7ba6071039ae76ab877a0ae757f087" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Worst&lt;/strong&gt;: some browser will fire an XML error whenever using the document.write() function.</source>
          <target state="translated">&lt;strong&gt;最糟糕的是&lt;/strong&gt; ：每当使用document.write（）函数时，某些浏览器都会触发XML错误。</target>
        </trans-unit>
        <trans-unit id="6f4349c380a63f838be88c370cef604f0922a8f0" translate="yes" xml:space="preserve">
          <source>A Parser-blocking, cross-origin script, ..., is invoked via
  document.write. This may be blocked by the browser if the device has
  poor network connectivity.</source>
          <target state="translated">通过document.write调用一个解析器阻塞、跨源脚本,...........。如果设备的网络连接不良,这可能会被浏览器阻止。</target>
        </trans-unit>
        <trans-unit id="e213051c87e0c8695bfb38d61579650d93ea3ce5" translate="yes" xml:space="preserve">
          <source>A few of the more serious problems:</source>
          <target state="translated">几个比较严重的问题。</target>
        </trans-unit>
        <trans-unit id="6cf75588ce1d62c934410431b4c2d9f35e7e6b9a" translate="yes" xml:space="preserve">
          <source>A simple reason why &lt;code&gt;document.write&lt;/code&gt; is a bad practice is that you cannot come up with a scenario where you cannot find a better alternative.</source>
          <target state="translated">为什么 &lt;code&gt;document.write&lt;/code&gt; 不好的一个简单原因是，您无法提出无法找到更好替代方案的方案。</target>
        </trans-unit>
        <trans-unit id="586da593715c792d36b865e66a83957efa66c526" translate="yes" xml:space="preserve">
          <source>All in all, it's best to steer clear of this method if you can help it.</source>
          <target state="translated">总而言之,如果可以的话,最好还是不要用这种方法。</target>
        </trans-unit>
        <trans-unit id="98a110c76dedb15e5d09cf5cf415d3b2d1c56018" translate="yes" xml:space="preserve">
          <source>And document.write() would be like evaluating a string, e.g. create a list by evaluating a source code string like this:</source>
          <target state="translated">而document.write()就像评估一个字符串一样,例如通过评估一个源码字符串来创建一个列表,就像这样。</target>
        </trans-unit>
        <trans-unit id="32a04b489cbeed3421a2b8f3a71e0044893aa7e1" translate="yes" xml:space="preserve">
          <source>Another legitimate use of &lt;code&gt;document.write&lt;/code&gt; comes from the HTML5 Boilerplate &lt;a href=&quot;https://github.com/h5bp/html5-boilerplate/blob/master/src/index.html&quot;&gt;index.html&lt;/a&gt; example.</source>
          <target state="translated">&lt;code&gt;document.write&lt;/code&gt; 的另一合法用途来自HTML5 Boilerplate &lt;a href=&quot;https://github.com/h5bp/html5-boilerplate/blob/master/src/index.html&quot;&gt;index.html&lt;/a&gt;示例。</target>
        </trans-unit>
        <trans-unit id="f5f474738dcbd7760cf8863a85580615a2fe1ba6" translate="yes" xml:space="preserve">
          <source>Another reason is that you are dealing with strings instead of objects (it is very primitive).</source>
          <target state="translated">另一个原因是,你处理的是字符串而不是对象(这是非常原始的)。</target>
        </trans-unit>
        <trans-unit id="ca31ae4dc28769755ba50b0821c0afe616261ac2" translate="yes" xml:space="preserve">
          <source>As long as you don't try to use it after the document has loaded, &lt;code&gt;document.write&lt;/code&gt; is not inherently evil, in my humble opinion.</source>
          <target state="translated">只要您不尝试在文档加载后使用它，就我的拙见， &lt;code&gt;document.write&lt;/code&gt; 并不是天生的邪恶。</target>
        </trans-unit>
        <trans-unit id="b6c0d29bdc2419de1520c4227d4eccd10fcefc17" translate="yes" xml:space="preserve">
          <source>Based on analysis done by Google-Chrome Dev Tools' &lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/&quot;&gt;Lighthouse Audit&lt;/a&gt;,</source>
          <target state="translated">根据Google-Chrome开发者工具的&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/&quot;&gt;Lighthouse Audit&lt;/a&gt;所做的分析，</target>
        </trans-unit>
        <trans-unit id="8dc2c268fbf1e34e5f2f11524efa1c819848ad1b" translate="yes" xml:space="preserve">
          <source>Browser Violation</source>
          <target state="translated">浏览器的违规行为</target>
        </trans-unit>
        <trans-unit id="ba5210cb9b1a663880ab56accba5bb7ebc5570cc" translate="yes" xml:space="preserve">
          <source>Chrome may block &lt;code&gt;document.write&lt;/code&gt; that inserts a script in certain cases. When this happens, it will display this warning in the console:</source>
          <target state="translated">Chrome可能会阻止在某些情况下插入脚本的 &lt;code&gt;document.write&lt;/code&gt; 。 发生这种情况时，它将在控制台中显示以下警告：</target>
        </trans-unit>
        <trans-unit id="f0f55494b2cc804af7ba0550eb372d75167c5b39" translate="yes" xml:space="preserve">
          <source>DW executed after the page has finished loading will overwrite the page, or write a new page, or not work</source>
          <target state="translated">在页面加载完成后执行的DW会覆盖页面,或者写一个新的页面,或者不工作。</target>
        </trans-unit>
        <trans-unit id="4c80ffc717cc2c0ee8ce8930d0c60d96a5a82a91" translate="yes" xml:space="preserve">
          <source>DW executes where encountered: it cannot inject at a given node point</source>
          <target state="translated">DW在遇到的地方执行:它不能在给定的节点点注入</target>
        </trans-unit>
        <trans-unit id="cbb0aff8034c59a6fd0c41daa00c5dc9741b385a" translate="yes" xml:space="preserve">
          <source>DW is effectively writing serialised text which is not the way the DOM works conceptually, and is an easy way to create bugs (.innerHTML has the same problem)</source>
          <target state="translated">DW实际上是在写序列化的文本,这与DOM的概念上的工作方式不同,而且很容易产生BUG(.innerHTML也有同样的问题</target>
        </trans-unit>
        <trans-unit id="83fb34631ce45b4b283b6f59d5cbae8fcc72f2f3" translate="yes" xml:space="preserve">
          <source>Even so, you aren't really leveraging the DOM when you use document.write--you are just dumping a blob of text into the document so I'd say it's bad form.</source>
          <target state="translated">即使是这样,当你使用document.writ时,你并没有真正利用DOM----你只是在向文档中倾倒了一大堆文字,所以我认为这是个糟糕的形式。</target>
        </trans-unit>
        <trans-unit id="38551b22eeca8f0a499aee32c2f294bbbc20028a" translate="yes" xml:space="preserve">
          <source>Far better to use the safe and DOM friendly &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document&quot;&gt;DOM manipulation methods&lt;/a&gt;</source>
          <target state="translated">使用安全且对DOM友好的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document&quot;&gt;DOM操作方法&lt;/a&gt;要好得多</target>
        </trans-unit>
        <trans-unit id="df9bf1ae98dc45f25c4d64a24409f663af5e4193" translate="yes" xml:space="preserve">
          <source>For more info see &lt;a href=&quot;https://developers.google.com/web/updates/2016/08/removing-document-write&quot;&gt;Intervening against document.write()&lt;/a&gt;</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;https://developers.google.com/web/updates/2016/08/removing-document-write&quot;&gt;干预document.write（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d38a06e33046e7c7ebeaf9f839d52ef7ddc821f6" translate="yes" xml:space="preserve">
          <source>For users on slow connections, external scripts dynamically injected via &lt;code&gt;document.write()&lt;/code&gt; can delay page load by tens of seconds.</source>
          <target state="translated">对于连接速度较慢的用户，通过 &lt;code&gt;document.write()&lt;/code&gt; 动态注入的外部脚本可能会使页面加载延迟数十秒。</target>
        </trans-unit>
        <trans-unit id="9bf8b07b668fa428786cd90106cd901d16cc136e" translate="yes" xml:space="preserve">
          <source>Here's my twopence worth, in general you shouldn't use &lt;code&gt;document.write&lt;/code&gt; for heavy lifting, but there is one instance where it is definitely useful:</source>
          <target state="translated">这是我的两便士，一般来说，您不应该使用 &lt;code&gt;document.write&lt;/code&gt; 进行繁重的工作，但是在某些情况下，它绝对有用：</target>
        </trans-unit>
        <trans-unit id="328fea04589a8b96650b7cfd712cc75147cbe0f3" translate="yes" xml:space="preserve">
          <source>I discovered this recently trying to create an AJAX slider gallery. I created two nested divs, and applied &lt;code&gt;width&lt;/code&gt;/&lt;code&gt;height&lt;/code&gt; and &lt;code&gt;overflow: hidden&lt;/code&gt; to the outer &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with JS. This was so that in the event that the browser had JS disabled, the div would float to accommodate the images in the gallery - some nice graceful degradation.</source>
          <target state="translated">我最近发现这个尝试创建AJAX滑块库。 我创建了两个嵌套的div，并应用了 &lt;code&gt;width&lt;/code&gt; / &lt;code&gt;height&lt;/code&gt; 和 &lt;code&gt;overflow: hidden&lt;/code&gt; 使用JS 隐藏到外部的 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 中 。 这样一来，如果浏览器禁用了JS，则div会浮动以容纳图库中的图像-一些不错的优雅降级。</target>
        </trans-unit>
        <trans-unit id="4cc2016d66e51cfc989ebf136e4efc7d6d740778" translate="yes" xml:space="preserve">
          <source>I don't think using document.write is a bad practice at all. In simple words it is like a high voltage for inexperienced people. If you use it the wrong way, you get cooked. There are many developers who have used this and other dangerous methods at least once, and they never really dig into their failures. Instead, when something goes wrong, they just bail out, and use something safer. Those are the ones who make such statements about what is considered a &quot;Bad Practice&quot;.</source>
          <target state="translated">我认为使用document.write完全不是一个不好的做法。简单的说,对于没有经验的人来说,它就像高压电一样。如果用错了方法,就会被烤熟。有很多开发者至少用过一次这种方法和其他危险的方法,他们从来没有真正的去挖掘自己的失败经验。相反,一旦出了问题,他们就直接跳出来,用更安全的东西。这些人就是这样的人,他们的这种说法被认为是 &quot;不良做法&quot;。</target>
        </trans-unit>
        <trans-unit id="c74cdb29b366e3a6755058cada71ff6212a65be2" translate="yes" xml:space="preserve">
          <source>I know &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/document.write&quot;&gt;&lt;code&gt;document.write&lt;/code&gt;&lt;/a&gt; is considered bad practice; and I'm hoping to compile a list of reasons to submit to a 3rd party vendor as to why they shouldn't use &lt;code&gt;document.write&lt;/code&gt; in implementations of their analytics code.</source>
          <target state="translated">我知道&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/document.write&quot;&gt; &lt;code&gt;document.write&lt;/code&gt; &lt;/a&gt;被认为是不良做法； 并且，我希望整理出一份为什么要向第三方供应商提交的原因清单，说明他们为什么不应该在其分析代码的实现中使用 &lt;code&gt;document.write&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fab27ea335ae2aedd86eeacde1be3b1ec3376803" translate="yes" xml:space="preserve">
          <source>I think the biggest problem is that any elements written via document.write are added to the end of the page's elements. That's rarely the desired effect with modern page layouts and AJAX. (you have to keep in mind that the elements in the DOM are temporal, and when the script runs may affect its behavior).</source>
          <target state="translated">我认为最大的问题是,任何通过document.write编写的元素都会被添加到页面元素的末尾。这在现代页面布局和AJAX中很少能达到理想的效果。你必须记住,DOM中的元素是有时间性的,脚本运行时可能会影响到它的行为)。</target>
        </trans-unit>
        <trans-unit id="64c5e244a3d1310fd45ecd093638709510a70aa2" translate="yes" xml:space="preserve">
          <source>I've also seen the same technique for using the &lt;a href=&quot;https://github.com/douglascrockford/JSON-js&quot;&gt;json2.js&lt;/a&gt; JSON parse/stringify polyfill (&lt;a href=&quot;http://caniuse.com/#search=JSON&quot;&gt;needed by IE7 and below&lt;/a&gt;).</source>
          <target state="translated">我也看到了使用&lt;a href=&quot;https://github.com/douglascrockford/JSON-js&quot;&gt;json2.js&lt;/a&gt; JSON解析/字符串化polyfill的相同技术（ &lt;a href=&quot;http://caniuse.com/#search=JSON&quot;&gt;IE7及以下版本需要&lt;/a&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7eec71562329793b9ab4fb06d8a13c15253feeb4" translate="yes" xml:space="preserve">
          <source>If you implement coding tools, like simple live editors, it is very handy to have the ability to quickly evaluate a string, for example using document.write() or .innerHTML. Lisp is ideal in this sense, but you can do very cool stuff also in JS, and many people are doing that, like &lt;a href=&quot;http://jsbin.com/&quot;&gt;http://jsbin.com/&lt;/a&gt;</source>
          <target state="translated">如果您实现像简单的实时编辑器这样的编码工具，则具有快速评估字符串的能力非常方便，例如使用document.write（）或.innerHTML。 从这个意义上讲，Lisp是理想的选择，但是您也可以在JS中做一些非常酷的事情，而且很多人都在这样做，例如&lt;a href=&quot;http://jsbin.com/&quot;&gt;http://jsbin.com/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dbbb6e7716ce2de67a98d1d17d3a0cc173474da8" translate="yes" xml:space="preserve">
          <source>In terms of vendors supplying analytics code (like Google Analytics) it's actually the easiest way for them to distribute such snippets</source>
          <target state="translated">就提供分析代码的供应商而言(比如Google Analytics),这实际上是他们最容易分发此类代码片段的方式。</target>
        </trans-unit>
        <trans-unit id="f05cfd43335dbedd7583840248aa0855d6b64c43" translate="yes" xml:space="preserve">
          <source>In the context of Lisp, DOM manipulation would be like manipulating a list structure, e.g. create the list (orange) by doing:</source>
          <target state="translated">在Lisp的上下文中,DOM操作就像操作一个列表结构一样,比如说通过做,创建列表(橙色)。</target>
        </trans-unit>
        <trans-unit id="8675b2a73e6a1a25f1321e6faf20af9051787b3b" translate="yes" xml:space="preserve">
          <source>It breaks pages using XML rendering (like XHTML pages).</source>
          <target state="translated">它打破了使用XML渲染的页面(如XHTML页面)。</target>
        </trans-unit>
        <trans-unit id="2e959c99ff4ef573029bc59e4446ef47f9c227f3" translate="yes" xml:space="preserve">
          <source>It does only append to documents.</source>
          <target state="translated">它只会附加在文件上。</target>
        </trans-unit>
        <trans-unit id="c42952e44196436174e98bac19b77a2b2b74c708" translate="yes" xml:space="preserve">
          <source>It has nothing of the beauty of for instance the &lt;a href=&quot;https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller&quot;&gt;MVC (Model-View-Controller)&lt;/a&gt; pattern.</source>
          <target state="translated">它没有&lt;a href=&quot;https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller&quot;&gt;MVC（模型-视图-控制器）&lt;/a&gt;模式的任何优点。</target>
        </trans-unit>
        <trans-unit id="08e33dc8264325fbaa4397164404c0a649dc0bf3" translate="yes" xml:space="preserve">
          <source>It is a lot more powerful to present dynamic content with &lt;a href=&quot;https://jquery.com/&quot;&gt;ajax+jQuery&lt;/a&gt; or &lt;a href=&quot;https://angularjs.org/&quot;&gt;angularJS&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;https://jquery.com/&quot;&gt;ajax + jQuery&lt;/a&gt;或&lt;a href=&quot;https://angularjs.org/&quot;&gt;angularJS&lt;/a&gt;呈现动态内容的功能要强大得多 。</target>
        </trans-unit>
        <trans-unit id="44e2ddb5bb3b4c77e868bbf3cf0b7df8d150fc93" translate="yes" xml:space="preserve">
          <source>It is usually used in such a way that the script is placed within the content, which is considered bad-form.</source>
          <target state="translated">它的使用方式通常是将剧本放在内容中,这被认为是不良形式。</target>
        </trans-unit>
        <trans-unit id="175abf4ef26925b6b362a56441ce762fead9b45c" translate="yes" xml:space="preserve">
          <source>It just doesn't have much use unless you're creating an entire document using JavaScript in which case you may start with document.write.</source>
          <target state="translated">只是它的作用不大,除非你使用JavaScript创建整个文档,在这种情况下,你可以从document.write开始。</target>
        </trans-unit>
        <trans-unit id="c2c5fd47fa308d44afeb9997ca588e7b39b82c8b" translate="yes" xml:space="preserve">
          <source>It keeps the scripts small</source>
          <target state="translated">它能使脚本保持小规模</target>
        </trans-unit>
        <trans-unit id="8a4d6da8f57c73c606ea29c6591b6369ca864e81" translate="yes" xml:space="preserve">
          <source>It overwrites content on the page which is the most obvious reason but I wouldn't call it &quot;bad&quot;.</source>
          <target state="translated">它覆盖了页面上的内容,这是最明显的原因,但我不会称它为 &quot;坏&quot;。</target>
        </trans-unit>
        <trans-unit id="ef9ac0de84ae80dd062971857646c676c5a958b1" translate="yes" xml:space="preserve">
          <source>It serializes the rendering engine to pause until said external script is loaded, which could take much longer than an internal script.</source>
          <target state="translated">它将渲染引擎序列化,使渲染引擎暂停,直到所述外部脚本加载完毕,这可能比内部脚本要长得多。</target>
        </trans-unit>
        <trans-unit id="2c88c041efc93bc804df3a7a648b060c3a5f7700" translate="yes" xml:space="preserve">
          <source>It's extremely compatible</source>
          <target state="translated">它的兼容性很强</target>
        </trans-unit>
        <trans-unit id="2ace14076f8a9b5a7d406a6573b87f58ed3cab5b" translate="yes" xml:space="preserve">
          <source>It's like formatting a hard drive, when you need to delete only a few files and then saying &quot;formatting drive is a bad practice&quot;.</source>
          <target state="translated">这就好比格式化硬盘,当你只需要删除几个文件,就说 &quot;格式化硬盘是个不好的做法&quot;。</target>
        </trans-unit>
        <trans-unit id="c78d00d58c2fad38bf09178b081d71cc6a21b082" translate="yes" xml:space="preserve">
          <source>It's much better to set a placeholder element on the page, and then manipulate it's innerHTML.</source>
          <target state="translated">在页面上设置一个占位符元素,然后再操作它的内部HTML,效果会好很多。</target>
        </trans-unit>
        <trans-unit id="f92572ecb296fa05fd25685e35e572aadc130367" translate="yes" xml:space="preserve">
          <source>It's the easiest way to embed inline content from an external (to your host/domain) script.</source>
          <target state="translated">这是从外部(对你的hostdomain)脚本嵌入内嵌内容的最简单方法。</target>
        </trans-unit>
        <trans-unit id="6107c7b458f7063e7d8034d97a4b6b3d895e601c" translate="yes" xml:space="preserve">
          <source>Lisp also has the very useful ability to create code using list manipulation (like using the &quot;DOM style&quot; to create a JS parse tree). This means you can build up a list structure using the &quot;DOM style&quot;, rather than the &quot;string style&quot;, and then run that code, e.g. like this:</source>
          <target state="translated">Lisp还有一个非常有用的能力,那就是使用列表操作来创建代码(比如使用 &quot;DOM样式 &quot;来创建JS解析树)。这意味着你可以使用 &quot;DOM样式 &quot;而不是 &quot;字符串样式 &quot;来建立一个列表结构,然后运行该代码,比如说像这样。</target>
        </trans-unit>
        <trans-unit id="a3b94c601fb014b232428ef1810d35004bef8e6c" translate="yes" xml:space="preserve">
          <source>Obviously, this won't work in XHTML, but since XHTML appears to be something of a dead duck (and renders as tag soup in IE) it might be worth re-evaluating your choice of DOCTYPE...</source>
          <target state="translated">显然,这在XHTML中是行不通的,但由于XHTML似乎是个死鸭子(在IE中以标签汤的形式呈现),也许值得重新评估一下你对DOCTYPE的选择.....</target>
        </trans-unit>
        <trans-unit id="714da2bdccc4a025fb61616dc3c7f5c953ff47b9" translate="yes" xml:space="preserve">
          <source>Off the top of my head:</source>
          <target state="translated">我想起来了</target>
        </trans-unit>
        <trans-unit id="489705bd36c6abd21d164b21c02250fa21809212" translate="yes" xml:space="preserve">
          <source>Once it's written it's done and over with. We cannot go back to manipulate it without tapping into the DOM.</source>
          <target state="translated">一旦写好了,那就结束了。我们不能在不挖掘DOM的情况下,再去操作它。</target>
        </trans-unit>
        <trans-unit id="3699d68a46c5054148562848233d367e2c070ff0" translate="yes" xml:space="preserve">
          <source>One can think of document.write() (and .innerHTML) as evaluating a source code string. This can be very handy for many applications. For example if you get HTML code as a string from some source, it is handy to just &quot;evaluate&quot; it.</source>
          <target state="translated">我们可以把document.write()(和.innerHTML)看作是对源代码字符串的评估。这对于很多应用来说是非常方便的。例如,如果你从一些源码中得到HTML代码作为一个字符串,只需 &quot;评估 &quot;它就很方便。</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="68bb5152ed597d87fb4619774fa38ca8e6d67911" translate="yes" xml:space="preserve">
          <source>Please include your reason for claiming &lt;code&gt;document.write&lt;/code&gt; as a bad practice below.</source>
          <target state="translated">请在下面 &lt;code&gt;document.write&lt;/code&gt; 您主张document.write的不良做法。</target>
        </trans-unit>
        <trans-unit id="9d1e4e7d27b519b1da3d7266c9c87d7861741080" translate="yes" xml:space="preserve">
          <source>References:</source>
          <target state="translated">References:</target>
        </trans-unit>
        <trans-unit id="8d64579596b16b629cff3e95d263924c8177b0b1" translate="yes" xml:space="preserve">
          <source>Technically &lt;code&gt;document.write&lt;/code&gt; will only update HTML pages not XHTML/XML.  IE seems to be pretty forgiving of this fact but other browsers will not be.</source>
          <target state="translated">从技术上讲， &lt;code&gt;document.write&lt;/code&gt; 将仅更新HTML页面，而不更新XHTML / XML。 IE似乎可以宽恕这个事实，但其他浏览器却不会。</target>
        </trans-unit>
        <trans-unit id="ce508ea0e8b07947932b7c25973a83033a926789" translate="yes" xml:space="preserve">
          <source>The biggest consequence of employing such a method is lowered performance. The browser will take longer to load page content. The adverse reaction on load time depends on what is being written to the document. You won't see much of a difference if you are adding a &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tag to the DOM as opposed to passing an array of 50-some references to JavaScript libraries (something which I have seen in working code and resulted in an 11 second delay - of course, this also depends on your hardware).</source>
          <target state="translated">采用这种方法的最大结果是性能降低。 浏览器将花费更长的时间来加载页面内容。 对加载时间的不利反应取决于要写入文档的内容。 如果您向DOM添加 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 标记，而不是将50多个引用数组传递给JavaScript库，那么您将看不到太大的区别（我在工作代码中看到的结果导致11秒延迟-当然，这也取决于您的硬件）。</target>
        </trans-unit>
        <trans-unit id="1bad4975a3288af8b0b1d4a8fd6a1d4292945a3b" translate="yes" xml:space="preserve">
          <source>The disadvantages of document.write mainly depends on these 3 factors:</source>
          <target state="translated">document.writing的缺点主要取决于这3个因素。</target>
        </trans-unit>
        <trans-unit id="21d307495a4832f897836ffd7f37a51a6c06551f" translate="yes" xml:space="preserve">
          <source>The document.write() is mostly used to write content to the screen as soon as that content is needed. This means it happens anywhere, either in a JavaScript file or inside a script tag within an HTML file. With the script tag being placed anywhere within such an HTML file, it is a bad idea to have document.write() statements inside script blocks that are intertwined with HTML inside a web page.</source>
          <target state="translated">document.write()主要用于在需要时将内容写到屏幕上。这意味着它发生在任何地方,可以是在JavaScript文件中,也可以是在HTML文件中的脚本标记内。由于脚本标记被放置在这样的HTML文件内的任何地方,所以在网页内的HTML与脚本块内的HTML交织在一起的脚本块内有document.write()语句是个坏主意。</target>
        </trans-unit>
        <trans-unit id="39ba256a68109911affc155798aab13473b6c90a" translate="yes" xml:space="preserve">
          <source>There's actually nothing wrong with &lt;code&gt;document.write&lt;/code&gt;, per se.  The problem is that it's really easy to misuse it.  Grossly, even.</source>
          <target state="translated">实际上， &lt;code&gt;document.write&lt;/code&gt; 本身没有任何问题。 问题在于滥用它真的很容易。 总的来说，甚至。</target>
        </trans-unit>
        <trans-unit id="d3e76044d59cba50727568df74cdabf8784acfcd" translate="yes" xml:space="preserve">
          <source>They don't have to worry about overriding already established onload events or including the necessary abstraction to add onload events safely</source>
          <target state="translated">他们不必担心覆盖已经建立的onload事件或包含必要的抽象来安全地添加onload事件。</target>
        </trans-unit>
        <trans-unit id="7855c95d2894d6ddde6e0082a1de86fd43d21857" translate="yes" xml:space="preserve">
          <source>Thing is, as with the article above, this JS hijacking of the CSS didn't kick in until the page had loaded, causing a momentary flash as the div was loaded. So I needed to write a CSS rule, or include a sheet, as the page loaded.</source>
          <target state="translated">问题是,和上面的文章一样,这个JS对CSS的劫持直到页面加载后才开始生效,导致DIV在加载时出现了短暂的闪光。因此,我需要在页面加载时写一个CSS规则,或者说是包含一个表单。</target>
        </trans-unit>
        <trans-unit id="33808169775e6aaadd8aecbeb5d2b6d36098891c" translate="yes" xml:space="preserve">
          <source>This effectively means you have to call it from an inline script block - And that will prevent the browser from processing parts of the page that follow. Scripts and Images will not be downloaded until the writing block is finished.</source>
          <target state="translated">这实际上意味着你必须从内嵌式脚本块中调用它--这将阻止浏览器处理后续页面的部分内容。脚本和图片将不会被下载,直到写作块完成后才会被下载。</target>
        </trans-unit>
        <trans-unit id="b9c9f1a966019dcbce39961edc9ac9c1d57bdb78" translate="yes" xml:space="preserve">
          <source>Well designed code in general will take any dynamically generated content, store it in memory, keep manipulating it as it passes through the code before it finally gets spit out to the screen. So to reiterate the last point in the preceding section, rendering content in-place may render faster than other content that may be relied upon, but it may not be available to the other code that in turn requires the content to be rendered for processing. To solve this dilemma we need to get rid of the document.write() and implement it the right way.</source>
          <target state="translated">一般情况下,设计好的代码会把任何动态生成的内容,存储在内存中,在通过代码的过程中不断操作,最后才会被吐槽到屏幕上。所以重申上一节的最后一点,就地渲染内容可能比其他可能依赖的内容渲染得更快,但它可能无法提供给其他代码,而其他代码反过来又需要对内容进行渲染处理。为了解决这个困境,我们需要摆脱document.write(),用正确的方法实现它。</target>
        </trans-unit>
        <trans-unit id="129c8b0eed788dd7325f0eacd5b5b5c92843d45b" translate="yes" xml:space="preserve">
          <source>Why is document.write considered a “bad practice”</source>
          <target state="translated">为什么document.write被认为是 &quot;不好的做法&quot;</target>
        </trans-unit>
        <trans-unit id="ce707735b6bb21a581708a5a0645226e0fc70b02" translate="yes" xml:space="preserve">
          <source>You can overwrite the entire content in a frame/iframe.  I used to use this technique a lot for menu/navigation pieces before more modern Ajax techniques were widely available (1998-2002).</source>
          <target state="translated">你可以在frameiframe中覆盖整个内容。在更多现代的Ajax技术普及之前(1998-2002年),我经常在menunavigation作品中使用这种技术。</target>
        </trans-unit>
        <trans-unit id="f452a6fd96c9dac3749b8e54dfee97633000b3be" translate="yes" xml:space="preserve">
          <source>a) Implementation</source>
          <target state="translated">(a)执行情况</target>
        </trans-unit>
        <trans-unit id="b93aa289742c254955b9d232ad84cfd151b8c8d7" translate="yes" xml:space="preserve">
          <source>b) Rendering</source>
          <target state="translated">b)渲染</target>
        </trans-unit>
        <trans-unit id="b11df25841b632cbb871076973305085341aabb5" translate="yes" xml:space="preserve">
          <source>c) Impossible Manipulation</source>
          <target state="translated">c)不可能的处理</target>
        </trans-unit>
        <trans-unit id="f34d65f205f80fd1724a7e7821c49ec3a2d2e139" translate="yes" xml:space="preserve">
          <source>document.write (henceforth DW) does not work in XHTML</source>
          <target state="translated">document.write(以下简称DW)在XHTML中不起作用。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
