<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/927358">
    <body>
      <group id="927358">
        <trans-unit id="cdbd76dc899e0b39354a13bf5779f241e0324b64" translate="yes" xml:space="preserve">
          <source>&quot;Clean unknown files from the working tree&quot;</source>
          <target state="translated">&quot;Очистить неизвестные файлы от рабочего дерева&quot;</target>
        </trans-unit>
        <trans-unit id="50a0902119f54430e861c0b069f8c7cab2b6a595" translate="yes" xml:space="preserve">
          <source>&quot;Reset the working tree to the last commit&quot;</source>
          <target state="translated">&quot;Сбросить рабочее дерево на последний коммит&quot;.</target>
        </trans-unit>
        <trans-unit id="8c3cd0ee9375d950bd6a746dfe1fd49d0d381c37" translate="yes" xml:space="preserve">
          <source>(This command will ignore your entire commit and your changes will be lost completely from your local working tree). If you want to undo your commit, but you want your changes in the staging area (before commit just like after &lt;code&gt;git add&lt;/code&gt;) then do the following command.</source>
          <target state="translated">(Эта команда будет игнорировать весь ваш коммит, и ваши изменения будут полностью потеряны из вашего локального рабочего дерева). Если вы хотите отменить ваш коммит, но хотите внести изменения в промежуточную область (перед коммитом, как после &lt;code&gt;git add&lt;/code&gt; ), выполните следующую команду.</target>
        </trans-unit>
        <trans-unit id="ddc0e31880d00fe77bc0e989ace958394c3848eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HEAD~&lt;/code&gt; or &lt;code&gt;HEAD^&lt;/code&gt; means to move to commit before HEAD.</source>
          <target state="translated">&lt;code&gt;HEAD~&lt;/code&gt; или &lt;code&gt;HEAD^&lt;/code&gt; означает переход на коммит до HEAD.</target>
        </trans-unit>
        <trans-unit id="8bd2e794eba621fcdc1b069e1a71a1b527ef7a81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add&lt;/code&gt; anything that you want to include in your new commit.</source>
          <target state="translated">&lt;code&gt;git add&lt;/code&gt; все, что вы хотите включить в свой новый коммит.</target>
        </trans-unit>
        <trans-unit id="34d0efbf2abf719fb7ca4cf1fefb9b6a25e44354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git reset --soft HEAD^&lt;/code&gt; or &lt;code&gt;git reset --soft HEAD~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;git reset --soft HEAD^&lt;/code&gt; или &lt;code&gt;git reset --soft HEAD~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="866f9e91012c6ead0cfd49a29734df7d7ef95e83" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(&lt;strong&gt;To change a previous commit&lt;/strong&gt;, use the awesome &lt;a href=&quot;https://stackoverflow.com/a/28421811/405550&quot;&gt;interactive rebase&lt;/a&gt;.)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;( &lt;strong&gt;Чтобы изменить предыдущий коммит&lt;/strong&gt; , используйте потрясающую &lt;a href=&quot;https://stackoverflow.com/a/28421811/405550&quot;&gt;интерактивную ребазу&lt;/a&gt; .)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd40862f4499183c8993b90cebebcb51bfa34629" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Also note: You don't want to do this if someone else may be working on the branch.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Также обратите внимание: вы не хотите делать это, если кто-то еще работает над веткой.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b5e44d06e6f5e33922233dcc493d40371d8fbdae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;In the normal case, you probably needn't worry about your private-branch commit history being pristine.  Just push a followup commit (see 'How to undo a public commit' above), and later, do a &lt;a href=&quot;https://stackoverflow.com/a/22417539/86967&quot;&gt;squash-merge&lt;/a&gt; to hide the history.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;В нормальном случае вам, вероятно, не нужно беспокоиться о том, что ваша история коммитов в приватной ветке будет нетронутой.&lt;/em&gt; &lt;em&gt;Просто нажмите последующий коммит (см. &amp;laquo;Как отменить публичный коммит&amp;raquo; выше), а затем выполните &lt;a href=&quot;https://stackoverflow.com/a/22417539/86967&quot;&gt;сквош-слияние,&lt;/a&gt; чтобы скрыть историю.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ffdb2c0394f18a66e33cad1aa8b0c8a995573d9b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LOG AFTER RESET&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;LOG ПОСЛЕ СБРОСА&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e89d0517e371d5009e8f84787a9651c192557940" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;REFLOG BEFORE RESET&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;РЕФЛОГ ДО СБРОСА&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3ed09c1e18a0af18edaec9e899bec94de93e8f7d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;REFLOG FINAL&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;РЕФЛОГ ФИНАЛ&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fc68584de53f921d525d48c067980500249d572a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Suppose you want to revert the commit 'be20eb8':&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Предположим, вы хотите отменить коммит 'be20eb8':&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a82f1b90d254248abed1bae8036926833302d360" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Suppose you want to revert the last commit 'd81d3f1'.  Here are two options:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Предположим, вы хотите отменить последний коммит 'd81d3f1'.&lt;/em&gt; &lt;em&gt;Вот два варианта:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1e2c7964ead5d39a265673bdc4c854bd98db7305" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The commit history will show both commits, separately&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;История коммитов покажет оба коммита отдельно&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="f0a00e3f7efad2ae670b01291478dd14132b3073" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This can be dangerous -- be sure you have a local copy of the branch to repush.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Это может быть опасно - убедитесь, что у вас есть локальная копия ответвления.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="15e2038f54689028a94b6ea1da46f5566f7a0fd7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Basic command to revert the commit in Git is:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Основная команда для возврата коммита в Git:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae9b8f2d724e80b49743df67b670385613933b3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;COMMIT-ID&lt;/strong&gt;: ID for the commit</source>
          <target state="translated">&lt;strong&gt;COMMIT-ID&lt;/strong&gt; : идентификатор для фиксации</target>
        </trans-unit>
        <trans-unit id="932b361f427cbf3c307ecd91c7c952ff0c745ec8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Explain:&lt;/strong&gt; what &lt;code&gt;git reset&lt;/code&gt; does, it's basically &lt;code&gt;reset&lt;/code&gt; to any commit you'd like to go back to, then if you combine it with &lt;code&gt;--soft&lt;/code&gt; key, it will go back, but keep the  changes in your file(s), so you get back to the stage which the file was just added, &lt;code&gt;HEAD&lt;/code&gt; is the head of the branch and if you combine with &lt;code&gt;~1&lt;/code&gt; (in this case you also use &lt;code&gt;HEAD^&lt;/code&gt;), it will go back only one commit which what you want...</source>
          <target state="translated">&lt;strong&gt;Объясните:&lt;/strong&gt; что делает &lt;code&gt;git reset&lt;/code&gt; , он в основном &lt;code&gt;reset&lt;/code&gt; на любой коммит, к &lt;code&gt;--soft&lt;/code&gt; вы хотите вернуться, затем, если вы объедините его с ключом --soft , он вернется, но сохранит изменения в ваших файлах, поэтому вы вернетесь к этапу, на котором файл был только что добавлен, &lt;code&gt;HEAD&lt;/code&gt; - это заголовок ветви, и если вы объедините с &lt;code&gt;~1&lt;/code&gt; (в этом случае вы также используете &lt;code&gt;HEAD^&lt;/code&gt; ), он вернется только к тому коммиту, который вы хотите. ..</target>
        </trans-unit>
        <trans-unit id="3574e98022618fb8bd8c3451dc545a7afe7fbce2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HEAD~1&lt;/strong&gt; is a shorthand for the commit before head. Alternatively you can refer to the &lt;strong&gt;SHA-1&lt;/strong&gt; of the hash if you want to reset to. &lt;em&gt;--soft&lt;/em&gt; option will delete the commit but it will leave all your changed files &quot;Changes to be committed&quot;, as git status would put it.</source>
          <target state="translated">&lt;strong&gt;HEAD ~ 1&lt;/strong&gt; - это сокращение для коммита перед головой. В качестве альтернативы вы можете обратиться к &lt;strong&gt;SHA-1&lt;/strong&gt; хэша, если вы хотите сбросить в. &lt;em&gt;Опция --soft&lt;/em&gt; удалит коммит, но оставит все ваши измененные файлы &quot;Изменениями, которые будут зафиксированы&quot;, как будет указано в git status.</target>
        </trans-unit>
        <trans-unit id="91e7db0d50a04b5b35a1a94987835c5f400bc4dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How to undo the last Git commit?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Как отменить последний коммит Git?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60d593a9eacf0b139778cdae8484f2f65dd120cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; This command will delete your previous commit, so use with caution! &lt;code&gt;git reset --hard&lt;/code&gt; is safer.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ.&lt;/strong&gt; Эта команда удалит ваш предыдущий коммит, поэтому используйте его с осторожностью! &lt;code&gt;git reset --hard&lt;/code&gt; безопаснее.</target>
        </trans-unit>
        <trans-unit id="095d887f056999d5b4004102bb5f88ac48a85975" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Now let's see some cases:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Теперь давайте посмотрим на некоторые случаи:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="03882aeee51ef94ae661219381b4dcce9e1cce01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning: The above command will permanently remove the modifications to the &lt;code&gt;.java&lt;/code&gt; files (and any other files) that you wanted to commit.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Предупреждение. Приведенная выше команда навсегда удалит модификации файлов &lt;code&gt;.java&lt;/code&gt; (и любых других файлов), которые вы хотели зафиксировать.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa69fcff8d6f08bdb55e4d59043b5ca272dae547" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Do Not use --hard if you do not know what you are doing.
--hard is too &lt;strong&gt;dangerous&lt;/strong&gt;, and it might &lt;strong&gt;delete your files.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Предупреждение:&lt;/strong&gt; не используйте --hard, если вы не знаете, что делаете. --hard слишком &lt;strong&gt;опасен&lt;/strong&gt; , и он может &lt;strong&gt;удалить ваши файлы.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b626b2f46d5e12af83abdc2fef4727e09519de7c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Word of warning&lt;/strong&gt;: &lt;em&gt;Careless use of &lt;code&gt;git reset&lt;/code&gt; is a good way to get your working copy into a confusing state. I recommend that Git novices avoid this if they can.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;Слово предупреждения&lt;/strong&gt; : &lt;em&gt;неосторожное использование &lt;code&gt;git reset&lt;/code&gt; - хороший способ привести вашу рабочую копию в запутанное состояние.&lt;/em&gt; &lt;em&gt;Я рекомендую новичкам Git избегать этого, если они могут.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1fb851bf7e7eaa836661446dbd33c301566c2fee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;n:&lt;/strong&gt;  is number of last commits you want to revert</source>
          <target state="translated">&lt;strong&gt;n:&lt;/strong&gt; количество последних коммитов, которые вы хотите вернуть</target>
        </trans-unit>
        <trans-unit id="042b45c0cdb1908a7237ca505333cc72ad2f4fcd" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;1&lt;/sup&gt; Note, however, that you don't need to reset to an earlier commit if you just made a mistake in your &lt;em&gt;commit message&lt;/em&gt;. The easier option is to &lt;code&gt;git reset&lt;/code&gt; (to unstage any changes you've made since) and then &lt;a href=&quot;https://stackoverflow.com/q/179123/1146608&quot;&gt;&lt;code&gt;git commit --amend&lt;/code&gt;&lt;/a&gt;, which will open your default commit message editor pre-populated with the last commit message.</source>
          <target state="translated">&lt;sup&gt;1&lt;/sup&gt; Обратите внимание, что вам не нужно возвращаться к более ранней фиксации, если вы только что сделали ошибку в своем &lt;em&gt;сообщении фиксации&lt;/em&gt; . Более простой вариант - выполнить &lt;code&gt;git reset&lt;/code&gt; (чтобы отменить внесение изменений, которые вы сделали с тех пор), а затем &lt;a href=&quot;https://stackoverflow.com/q/179123/1146608&quot;&gt; &lt;code&gt;git commit --amend&lt;/code&gt; &lt;/a&gt; , который откроет ваш редактор сообщений по умолчанию, предварительно заполненный последним сообщением коммита.</target>
        </trans-unit>
        <trans-unit id="f589da44355f3bae2c6956991b7964bd5da1c3b3" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;2&lt;/sup&gt;&lt;code&gt;HEAD~&lt;/code&gt; is the same as &lt;code&gt;HEAD~1&lt;/code&gt;. Also, see &lt;a href=&quot;https://stackoverflow.com/a/46350644/5175709&quot;&gt;What is the HEAD in git?&lt;/a&gt;. It's helpful if you want to uncommit multiple commits.</source>
          <target state="translated">&lt;sup&gt;2&lt;/sup&gt; &lt;code&gt;HEAD~&lt;/code&gt; такой же, как &lt;code&gt;HEAD~1&lt;/code&gt; . Также смотрите &lt;a href=&quot;https://stackoverflow.com/a/46350644/5175709&quot;&gt;Что такое HEAD в git?&lt;/a&gt; , Это полезно, если вы хотите отменить несколько коммитов.</target>
        </trans-unit>
        <trans-unit id="beda869ef6f521b855bd24e83238346a70966147" translate="yes" xml:space="preserve">
          <source>A single command:</source>
          <target state="translated">Одна команда:</target>
        </trans-unit>
        <trans-unit id="29c0905c68ac34c487543523f04ae41d97edad75" translate="yes" xml:space="preserve">
          <source>Add/remove files to get things the way you want:</source>
          <target state="translated">Добавляйте удалять файлы,чтобы получить все,как вы хотите:</target>
        </trans-unit>
        <trans-unit id="d639f37af9faf747f077d650e523fd19503adf51" translate="yes" xml:space="preserve">
          <source>Advanced: Correction of the &lt;em&gt;private&lt;/em&gt; branch in public repository</source>
          <target state="translated">Дополнительно: исправление &lt;em&gt;частной&lt;/em&gt; ветки в публичном хранилище</target>
        </trans-unit>
        <trans-unit id="358974b5e35f57e633f081c658d68f37352ae313" translate="yes" xml:space="preserve">
          <source>After that the repo HEAD will be reset to that HEADid</source>
          <target state="translated">После этого ГОЛОВА РЕПО будет сброшена на этот ГОЛОВАЙД.</target>
        </trans-unit>
        <trans-unit id="415e61d47b53277ebd8ebb43bbfa86d13811a023" translate="yes" xml:space="preserve">
          <source>Ah, but suppose commit C wasn't a disaster, but just a bit off.  You want to &lt;strong&gt;undo the commit but keep your changes&lt;/strong&gt; for a bit of editing before you do a better commit.  Starting again from here, with C as your HEAD:</source>
          <target state="translated">Ах, но предположим, что commit C - это не катастрофа, а совсем немного. Вы хотите &lt;strong&gt;отменить коммит, но сохраните свои изменения&lt;/strong&gt; для небольшого редактирования, прежде чем вы сделаете лучший коммит. Начиная снова здесь, с C в качестве вашей головы:</target>
        </trans-unit>
        <trans-unit id="d9cfb04017640194c6e3e2c61a15bbfd79009ef4" translate="yes" xml:space="preserve">
          <source>Amending a commit is the ideal solution if you need to change the last commit, but a more general solution is &lt;code&gt;reset&lt;/code&gt;.</source>
          <target state="translated">Внесение изменений в коммит является идеальным решением, если вам нужно изменить последний коммит, но более общее решение &lt;code&gt;reset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27edcc851ef29dbe274e2874e8068852bb538d5f" translate="yes" xml:space="preserve">
          <source>Another way:</source>
          <target state="translated">Другой путь:</target>
        </trans-unit>
        <trans-unit id="422307882ec926f6f5d44fcfa6d87f9615004d50" translate="yes" xml:space="preserve">
          <source>Beware, however, that if you have added any new changes to the index, using &lt;code&gt;commit --amend&lt;/code&gt; will add them to your previous commit.</source>
          <target state="translated">Однако помните, что если вы добавили какие-либо новые изменения в индекс, использование &lt;code&gt;commit --amend&lt;/code&gt; добавит их в ваш предыдущий коммит.</target>
        </trans-unit>
        <trans-unit id="d71ca48757ab065cece7fa2763c115d7cfaccff7" translate="yes" xml:space="preserve">
          <source>But I recomnend you use this command with care. Read more at &lt;em&gt;&lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-filter-branch.html&quot;&gt;git-filter-branch(1) Manual Page&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">Но я рекомендую вам использовать эту команду с осторожностью. Узнайте больше на &lt;em&gt;&lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-filter-branch.html&quot;&gt;странице руководства git-filter-branch (1)&lt;/a&gt;&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="f67929ae8cd6f5fbbf6cbbd9efb2b32c345474f7" translate="yes" xml:space="preserve">
          <source>Check out &lt;code&gt;git help reset&lt;/code&gt;, specifically the sections on &lt;code&gt;--soft&lt;/code&gt;&lt;code&gt;--mixed&lt;/code&gt; and &lt;code&gt;--hard&lt;/code&gt;, for a better understanding of what this does.</source>
          <target state="translated">Посмотрите &lt;code&gt;git help reset&lt;/code&gt; , в частности, разделы &lt;code&gt;--soft&lt;/code&gt; &lt;code&gt;--mixed&lt;/code&gt; и &lt;code&gt;--hard&lt;/code&gt; , чтобы лучше понять, что это делает.</target>
        </trans-unit>
        <trans-unit id="b7e3df4d70cce34e78cc747920e4ff2d4a7e19a1" translate="yes" xml:space="preserve">
          <source>Checkout the branch you want to revert, then reset your local working copy back to the commit that you want to be the latest one on the remote server (everything after it will go bye-bye). To do this, in SourceTree I right-clicked on the and selected &quot;Reset BRANCHNAME to this commit&quot;.</source>
          <target state="translated">Проверьте ветку,которую вы хотите вернуть,затем сбросьте вашу локальную рабочую копию обратно на коммит,который вы хотите сделать последней на удалённом сервере (всё после него будет сделано пока-пока).Для этого в дереве исходных текстов я щелкнул правой кнопкой мыши на и выбрал &quot;Reset BRANCHNAME to this commit&quot; (Сбросить BRANCHNAME на этот коммит).</target>
        </trans-unit>
        <trans-unit id="1f869ade959ad3547adddb033afb43b5ac2e2658" translate="yes" xml:space="preserve">
          <source>Choose how many commits you want to list, then invoke like this (to enlist last three)</source>
          <target state="translated">Выберите,сколько коммитов вы хотите перечислить,а затем вызовите вот так (чтобы записать последние три).</target>
        </trans-unit>
        <trans-unit id="2c5d24179c9925f4dc3b5bbe7f32a36f3b81ac0a" translate="yes" xml:space="preserve">
          <source>Clean up your branch locally then repush...</source>
          <target state="translated">Очистите свой филиал на месте,а затем отполируйте...</target>
        </trans-unit>
        <trans-unit id="74044e63f34563c02fea09a36d80b1cd20ee2889" translate="yes" xml:space="preserve">
          <source>Commit the changes, reusing the old commit message. &lt;code&gt;reset&lt;/code&gt; copied the old head to &lt;code&gt;.git/ORIG_HEAD&lt;/code&gt;; &lt;code&gt;commit&lt;/code&gt; with &lt;code&gt;-c ORIG_HEAD&lt;/code&gt; will open an editor, which initially contains the log message from the old commit and allows you to edit it. If you do not need to edit the message, you could use the &lt;code&gt;-C&lt;/code&gt; option.</source>
          <target state="translated">Зафиксируйте изменения, повторно используя старое сообщение. &lt;code&gt;reset&lt;/code&gt; скопировал старую голову в &lt;code&gt;.git/ORIG_HEAD&lt;/code&gt; ; &lt;code&gt;commit&lt;/code&gt; с &lt;code&gt;-c ORIG_HEAD&lt;/code&gt; откроет редактор, который изначально содержит сообщение журнала от старого коммита и позволяет вам редактировать его. Если вам не нужно редактировать сообщение, вы можете использовать опцию &lt;code&gt;-C&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2021668047035703c4bdd690014e7c398165507b" translate="yes" xml:space="preserve">
          <source>Credits goes to @Kyralessa.</source>
          <target state="translated">Кредиты идут в @Kyralessa.</target>
        </trans-unit>
        <trans-unit id="81bb595c2583fc6e8211cc3582d7bb87f2320bff" translate="yes" xml:space="preserve">
          <source>Finally the reflog looks like the picture below</source>
          <target state="translated">Наконец,рефлог выглядит как на картинке ниже</target>
        </trans-unit>
        <trans-unit id="1204b724e98beeb42e8730dcdc034f29045f7af1" translate="yes" xml:space="preserve">
          <source>First run:</source>
          <target state="translated">Первый заезд:</target>
        </trans-unit>
        <trans-unit id="17d5573f23a8a5a2cdf6f111e4233aa567c0e4f9" translate="yes" xml:space="preserve">
          <source>For a local commit</source>
          <target state="translated">Для локального обязательства</target>
        </trans-unit>
        <trans-unit id="f3c3836e2082ee94e50c7dd713a8c155fb1acbea" translate="yes" xml:space="preserve">
          <source>For a pushed commit</source>
          <target state="translated">Для подталкивания к совершению</target>
        </trans-unit>
        <trans-unit id="87bf8ece697f09f6cf2b3192664e4d39be313cda" translate="yes" xml:space="preserve">
          <source>For more detailed information you can refer and try out some other commands too for resetting head to a specified state:</source>
          <target state="translated">Для получения более подробной информации вы можете обратиться и опробовать некоторые другие команды также для сброса головки в заданное состояние:</target>
        </trans-unit>
        <trans-unit id="09f1d19488928e2ecea96b7f5ee250a7d0d3003d" translate="yes" xml:space="preserve">
          <source>For more information, check out &lt;em&gt;&lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Basics-Undoing-Things&quot;&gt;Git Basics - Undoing Things&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">Для получения дополнительной информации, ознакомьтесь с &lt;em&gt;&lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Basics-Undoing-Things&quot;&gt;Git Basics - Undoing Things&lt;/a&gt;&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8579715bd47fa29053d6ffad000f695c5af1eba0" translate="yes" xml:space="preserve">
          <source>For the lightest touch, you can even &lt;strong&gt;undo your commit but leave your files and your &lt;a href=&quot;https://git.wiki.kernel.org/index.php/WhatIsTheIndex&quot;&gt;index&lt;/a&gt;&lt;/strong&gt;:</source>
          <target state="translated">Для легкого прикосновения вы можете даже &lt;strong&gt;отменить фиксацию, но оставить свои файлы и &lt;a href=&quot;https://git.wiki.kernel.org/index.php/WhatIsTheIndex&quot;&gt;индекс&lt;/a&gt;&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="045501c419ad9e611818e3848de99634357c821a" translate="yes" xml:space="preserve">
          <source>Full example</source>
          <target state="translated">Полный пример</target>
        </trans-unit>
        <trans-unit id="9519843554ac8808a14ce9b395443780c001e652" translate="yes" xml:space="preserve">
          <source>Git command to undo the last commit/ previous commits:</source>
          <target state="translated">Получить команду для отмены последнего коммита предыдущих коммитов:</target>
        </trans-unit>
        <trans-unit id="be9bd9a8aa0b3b68d9d26793c675ef3b3e6cb2c8" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;--soft&lt;/code&gt; means reset into staging.</source>
          <target state="translated">Здесь &lt;code&gt;--soft&lt;/code&gt; означает сброс в стадию .</target>
        </trans-unit>
        <trans-unit id="78fcb4385184e29638fa97d014ac33ad7d77045c" translate="yes" xml:space="preserve">
          <source>How can I move HEAD back to a previous location? (Detached head) &amp;amp; Undo commits</source>
          <target state="translated">Как я могу переместить ГОЛОВУ назад в предыдущее место? (Отдельная голова) &amp;amp; Отменить фиксацию</target>
        </trans-unit>
        <trans-unit id="c91c5362dd65e2fe707d753371a95e9a69de2632" translate="yes" xml:space="preserve">
          <source>How can I undo those commits from the local repository?</source>
          <target state="translated">Как я могу отменить эти коммиты из локального репозитория?</target>
        </trans-unit>
        <trans-unit id="57e6eeb11d4d6618f7e6e546500f67326f92326c" translate="yes" xml:space="preserve">
          <source>How do I undo the most recent local commits in Git</source>
          <target state="translated">Как отменить последние локальные коммиты в Git'е.</target>
        </trans-unit>
        <trans-unit id="553ff18adf0b26224802bfc244583bb7173e7dc2" translate="yes" xml:space="preserve">
          <source>How to fix the previous local commit</source>
          <target state="translated">Как исправить предыдущий локальный коммит</target>
        </trans-unit>
        <trans-unit id="f7e9b45b2a25c210b9f37b45fb31ebf16ea3af78" translate="yes" xml:space="preserve">
          <source>How to undo a local commit</source>
          <target state="translated">Как отменить местное обязательство</target>
        </trans-unit>
        <trans-unit id="14e1e373f949b45e000508ad0b95ab4d568cd6e9" translate="yes" xml:space="preserve">
          <source>How to undo a public commit</source>
          <target state="translated">Как отменить публичное обязательство</target>
        </trans-unit>
        <trans-unit id="4eaa2a10cebd407a4f25eddba9a6372ac797c0f9" translate="yes" xml:space="preserve">
          <source>How to undo the previous local commit</source>
          <target state="translated">Как отменить предыдущий локальный коммит</target>
        </trans-unit>
        <trans-unit id="fd807a48aec3ecaf1ba5a6d129319db94c10aa6f" translate="yes" xml:space="preserve">
          <source>I accidentally committed the wrong files to &lt;a href=&quot;https://en.wikipedia.org/wiki/Git&quot;&gt;Git&lt;/a&gt;, but I haven't pushed the commit to the server yet.</source>
          <target state="translated">Я случайно передал неправильные файлы в &lt;a href=&quot;https://en.wikipedia.org/wiki/Git&quot;&gt;Git&lt;/a&gt; , но я еще не отправил коммит на сервер.</target>
        </trans-unit>
        <trans-unit id="af65824562744d5560d9d49afebacb2e8926a2af" translate="yes" xml:space="preserve">
          <source>I am just adding two cents for @Kyralessa's answer:</source>
          <target state="translated">Я просто добавляю два цента за ответ @Киралессы:</target>
        </trans-unit>
        <trans-unit id="bd6837934ab25451ce4425246112401fce43bb34" translate="yes" xml:space="preserve">
          <source>I create the steps in the image below in more details for you, including all steps that may happens in real situations and committing the code:</source>
          <target state="translated">Я создаю шаги на изображении ниже в подробностях для вас,включая все шаги,которые могут произойти в реальных ситуациях и фиксации кода:</target>
        </trans-unit>
        <trans-unit id="aa07a941f400d5ae4b732b9a7e75f68ec0df7a13" translate="yes" xml:space="preserve">
          <source>I prefer to use &lt;code&gt;git rebase -i&lt;/code&gt; for this job, because a nice list pops up where I can choose the commits to get rid of. It might not be as direct as some other answers here, but it just &lt;em&gt;feels right&lt;/em&gt;.</source>
          <target state="translated">Я предпочитаю использовать &lt;code&gt;git rebase -i&lt;/code&gt; для этой работы, потому что появляется хороший список, где я могу выбрать коммиты, от которых можно избавиться. Это может быть не так прямо, как некоторые другие ответы здесь, но это просто &lt;em&gt;кажется правильным&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="bed8454f376e1b184f88003cbd6b1edfaf49e6fe" translate="yes" xml:space="preserve">
          <source>I wanted to undo the latest five commits in our shared repository. I looked up the revision id that I wanted to rollback to. Then I typed in the following.</source>
          <target state="translated">Я хотел отменить последние пять коммитов в нашем общем репозитории.Я просмотрел идентификатор ревизии,к которой хотел откатиться.Затем я ввел следующее.</target>
        </trans-unit>
        <trans-unit id="a560cda7686360d77a944e0cfb5e97de36e610a1" translate="yes" xml:space="preserve">
          <source>If the code is already pushed to your server and you have permissions to overwrite history (rebase) then:</source>
          <target state="translated">Если код уже передан на ваш сервер и у вас есть разрешение на перезапись истории (rebase),тогда:</target>
        </trans-unit>
        <trans-unit id="c9460be25ec62f133f8d36327800804f8a2af073" translate="yes" xml:space="preserve">
          <source>If you already pushed and someone pulled which is usually my case, you can't use &lt;em&gt;git reset&lt;/em&gt;. You can however do a &lt;em&gt;git revert&lt;/em&gt;,</source>
          <target state="translated">Если вы уже нажали, а кто-то нажал, что обычно является моим случаем, вы не можете использовать &lt;em&gt;git reset&lt;/em&gt; . Вы можете, однако, сделать &lt;em&gt;Git Revert&lt;/em&gt; ,</target>
        </trans-unit>
        <trans-unit id="d5f15b8ae023a698089bc77db5ab3d4b168a76b6" translate="yes" xml:space="preserve">
          <source>If you are planning to undo a local commit entirely, whatever you change you did on the commit, and if you don't worry anything about that, just do the following command.</source>
          <target state="translated">Если вы планируете полностью отменить локальный коммит,что бы вы ни изменили на коммите,и если вас это не беспокоит,просто выполните следующую команду.</target>
        </trans-unit>
        <trans-unit id="ac08ec78a92e39838063c77fb8fd1846c4512cbd" translate="yes" xml:space="preserve">
          <source>If you are unsure what to use go for &lt;code&gt;--soft&lt;/code&gt; (I used this convention to remember it --&lt;strong&gt;s&lt;/strong&gt;oft for safe).</source>
          <target state="translated">Если вы не уверены, что использовать, перейдите на &lt;code&gt;--soft&lt;/code&gt; (я использовал это соглашение, чтобы запомнить его - это часто для безопасности).</target>
        </trans-unit>
        <trans-unit id="92afd9e93657a435ef52b0e03807d1807dd8f879" translate="yes" xml:space="preserve">
          <source>If you choose &lt;code&gt;--hard&lt;/code&gt; by mistake you will &lt;strong&gt;LOSE&lt;/strong&gt; your changes as it wasn't before.
If you choose &lt;code&gt;--soft&lt;/code&gt; by mistake you can achieve the same results of &lt;code&gt;--hard&lt;/code&gt; by applying additional commands</source>
          <target state="translated">Если вы выберете &lt;code&gt;--hard&lt;/code&gt; по ошибке, вы &lt;strong&gt;потеряете&lt;/strong&gt; свои изменения, как это было раньше. Если вы выберете &lt;code&gt;--soft&lt;/code&gt; по ошибке, вы можете достичь тех же результатов, что и &lt;code&gt;--hard&lt;/code&gt; , применяя дополнительные команды</target>
        </trans-unit>
        <trans-unit id="b590d6e069a590b56fbf8d8ceea8684845727b5e" translate="yes" xml:space="preserve">
          <source>If you don't want to keep your changes that you made:</source>
          <target state="translated">Если ты не хочешь сохранить свои изменения,которые ты сделал:</target>
        </trans-unit>
        <trans-unit id="545b8b09e2fde60d15a7caf7a2a1f99c6203f364" translate="yes" xml:space="preserve">
          <source>If you have &lt;a href=&quot;https://github.com/visionmedia/git-extras&quot;&gt;Git Extras&lt;/a&gt; installed, you can run &lt;code&gt;git undo&lt;/code&gt; to undo the latest commit. &lt;code&gt;git undo 3&lt;/code&gt; will undo the last three commits.</source>
          <target state="translated">Если у вас установлен &lt;a href=&quot;https://github.com/visionmedia/git-extras&quot;&gt;Git Extras&lt;/a&gt; , вы можете запустить &lt;code&gt;git undo&lt;/code&gt; , чтобы отменить последний коммит. &lt;code&gt;git undo 3&lt;/code&gt; отменяет последние три коммита.</target>
        </trans-unit>
        <trans-unit id="f823a5962df367e6fdec0aa4052d6840cd2b08ec" translate="yes" xml:space="preserve">
          <source>If you have already made your commits public, you will want to create a new commit which will &quot;revert&quot; the changes you made in your previous commit (current HEAD).</source>
          <target state="translated">Если вы уже сделали свои коммиты публичными,вы захотите создать новый коммит,который &quot;вернёт&quot; изменения,сделанные вами в предыдущем коммите (текущий HEAD).</target>
        </trans-unit>
        <trans-unit id="f0651f2f67dac9208ff3a1b3e1a4f04d544d588d" translate="yes" xml:space="preserve">
          <source>If you have committed junk but not pushed,</source>
          <target state="translated">Если вы совершали мусор,но не толкали,</target>
        </trans-unit>
        <trans-unit id="7785c09968ea9580054de54617314e1a90072ab6" translate="yes" xml:space="preserve">
          <source>If you haven't yet pulled other changes onto your branch, you can simply do...</source>
          <target state="translated">Если вы еще не вносили другие изменения в свой филиал,вы можете просто...</target>
        </trans-unit>
        <trans-unit id="a11d57718ea5137d0f4e97948ffe77bd14097692" translate="yes" xml:space="preserve">
          <source>If you mess up, you can always use the reflog to find dropped commits:</source>
          <target state="translated">Если вы напортачили,вы всегда можете использовать рефлог для поиска брошенных коммитов:</target>
        </trans-unit>
        <trans-unit id="4b7704af216a5d8993c3dd632427b832aa147b96" translate="yes" xml:space="preserve">
          <source>If you want to get rid of any changes to tracked files in the working tree since the commit before head use &quot;&lt;strong&gt;--hard&lt;/strong&gt;&quot; instead.</source>
          <target state="translated">Если вы хотите избавиться от каких-либо изменений в отслеживаемых файлах в рабочем дереве, начиная с коммита до &lt;strong&gt;заголовка, используйте&lt;/strong&gt; вместо него &amp;laquo; &lt;strong&gt;--hard&lt;/strong&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="b8c4e0c4f9eb69db9098214a74e6fa62262634f8" translate="yes" xml:space="preserve">
          <source>If you want to keep your changes:</source>
          <target state="translated">Если ты хочешь сохранить свои изменения:</target>
        </trans-unit>
        <trans-unit id="f98d674a2147560ca4f6f56c7de8b9e87e454038" translate="yes" xml:space="preserve">
          <source>If you want to permanently undo it and you have cloned some repository</source>
          <target state="translated">Если вы хотите навсегда отменить его и клонировали какой-нибудь репозиторий.</target>
        </trans-unit>
        <trans-unit id="79e4d2b3dab78ec7f8f9d648a8e637e8c5cdf6d1" translate="yes" xml:space="preserve">
          <source>In both cases, HEAD is just a pointer to the latest commit.  When you do a &lt;code&gt;git reset HEAD~1&lt;/code&gt;, you tell Git to move the HEAD pointer back one commit.  But (unless you use &lt;code&gt;--hard&lt;/code&gt;) you leave your files as they were.  So now &lt;code&gt;git status&lt;/code&gt; shows the changes you had checked into C.  You haven't lost a thing!</source>
          <target state="translated">В обоих случаях HEAD - это просто указатель на последний коммит. Когда вы делаете &lt;code&gt;git reset HEAD~1&lt;/code&gt; , вы говорите Git переместить указатель HEAD назад на один коммит. Но (если вы не используете &lt;code&gt;--hard&lt;/code&gt; ) вы оставляете свои файлы такими, какими они были. Теперь &lt;code&gt;git status&lt;/code&gt; показывает изменения, которые вы зарегистрировали в C. Вы ничего не потеряли!</target>
        </trans-unit>
        <trans-unit id="47ec07a28aab5e0c0e16658358390f2a6e438889" translate="yes" xml:space="preserve">
          <source>In my case I accidentally committed some files I did not want to. So I did the following and it worked:</source>
          <target state="translated">В моем случае я случайно сделал несколько файлов,которые не хотел.Поэтому я сделал следующее,и это сработало:</target>
        </trans-unit>
        <trans-unit id="0d2527323f64f5d8fea871e175e37cfb29c99b4d" translate="yes" xml:space="preserve">
          <source>In this case the result is:</source>
          <target state="translated">В этом случае результат:</target>
        </trans-unit>
        <trans-unit id="48d6980cd4c680babe4085de9884fb364be9cbc7" translate="yes" xml:space="preserve">
          <source>It will replace the last commit with the new commit.</source>
          <target state="translated">Он заменит последний коммит на новый.</target>
        </trans-unit>
        <trans-unit id="1ce693b8524980dd5366b3914043ab67de22c4ea" translate="yes" xml:space="preserve">
          <source>It will show you all the possible actions you have performed on your repository, for example, commit, merge, pull, etc.</source>
          <target state="translated">Она покажет вам все возможные действия,которые вы выполняли в вашем репозитории,например,фиксацию,слияние,тянуть и т.д.</target>
        </trans-unit>
        <trans-unit id="434b435db25eb9d6ca4b0f1948ee0e821bdc4d6c" translate="yes" xml:space="preserve">
          <source>It works great to undo the last local commit!</source>
          <target state="translated">Отлично работает,чтобы отменить последний местный коммит!</target>
        </trans-unit>
        <trans-unit id="55014a44e7a8cd0bf8523f9da9e42079144270fc" translate="yes" xml:space="preserve">
          <source>Just reset it doing the command below using &lt;code&gt;git&lt;/code&gt;:</source>
          <target state="translated">Просто сбросьте его, выполнив команду ниже, используя &lt;code&gt;git&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="764bbb1e6a4f4eac3ff6ebf5ea1df7c6485f6b6d" translate="yes" xml:space="preserve">
          <source>Just reset your branch to the previous location (for example, using &lt;code&gt;gitk&lt;/code&gt; or &lt;code&gt;git rebase&lt;/code&gt;). Then reapply your changes from a saved copy. After garbage collection in your local repository, it will be like the unwanted commit never happened. To do all of that in a single command, use &lt;code&gt;git reset HEAD~1&lt;/code&gt;.</source>
          <target state="translated">Просто сбросьте вашу ветку на предыдущее место (например, используя &lt;code&gt;gitk&lt;/code&gt; или &lt;code&gt;git rebase&lt;/code&gt; ). Затем повторно примените изменения из сохраненной копии. После сборки мусора в вашем локальном репозитории это будет похоже на то, что нежелательный коммит никогда не происходил. Чтобы сделать все это в одной команде, используйте &lt;code&gt;git reset HEAD~1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa143e5242ba7f88477cc028779e982ff02e331d" translate="yes" xml:space="preserve">
          <source>Let's say I committed locally, but now I want to remove that commit.</source>
          <target state="translated">Допустим,я взял на себя обязательство на месте,но теперь я хочу удалить это обязательство.</target>
        </trans-unit>
        <trans-unit id="f88ecf2f4eb0c5509c792cd2c61ea44a524baf96" translate="yes" xml:space="preserve">
          <source>Make corrections to working tree files.</source>
          <target state="translated">Внести исправления в рабочие файлы дерева.</target>
        </trans-unit>
        <trans-unit id="4bab2d8fe13fa6ab57f80098b414f0f734c5dd25" translate="yes" xml:space="preserve">
          <source>More</source>
          <target state="translated">More</target>
        </trans-unit>
        <trans-unit id="9d267941d727afc18e8d6adafeeb939095f9bdce" translate="yes" xml:space="preserve">
          <source>Nope, there's &lt;em&gt;still&lt;/em&gt; a way to get it back.  Type &lt;code&gt;git reflog&lt;/code&gt; and you'll see a list of (partial) commit &lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-1#Data_integrity&quot;&gt;shas&lt;/a&gt; (that is, hashes) that you've moved around in.  Find the commit you destroyed, and do this:</source>
          <target state="translated">Нет, &lt;em&gt;еще&lt;/em&gt; есть способ вернуть его. Наберите &lt;code&gt;git reflog&lt;/code&gt; , и вы увидите список (частичных) коммитов (то есть хешей), в которые вы переместились. Найдите коммит, который вы уничтожили, и сделайте следующее:</target>
        </trans-unit>
        <trans-unit id="ba9e2c8cb15468450ce2c39e9d69ef458c53d2c9" translate="yes" xml:space="preserve">
          <source>Note that you should only do this if you haven't pushed yet. If you have pushed, then you'll just have to commit a fix normally.</source>
          <target state="translated">Обратите внимание,что вы должны делать это,только если вы еще не нажали.Если вы нажали,то вы просто должны сделать исправление как обычно.</target>
        </trans-unit>
        <trans-unit id="eb0e55eeb5dceca2897a65f45806a9fc898030e1" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;git log&lt;/code&gt; will show that our last commit has been removed.</source>
          <target state="translated">Теперь &lt;code&gt;git log&lt;/code&gt; покажет, что наш последний коммит был удален.</target>
        </trans-unit>
        <trans-unit id="3bab947b702439dd330c39ae2e4c46f7cb8fba44" translate="yes" xml:space="preserve">
          <source>Now B is the HEAD.  Because you used &lt;code&gt;--hard&lt;/code&gt;, your files are reset to their state at commit B.</source>
          <target state="translated">Теперь Б - ГОЛОВА. Поскольку вы использовали &lt;code&gt;--hard&lt;/code&gt; , ваши файлы возвращаются в свое состояние при коммите B.</target>
        </trans-unit>
        <trans-unit id="424880fca4f0a16696d650c73990c45dc5fd13d4" translate="yes" xml:space="preserve">
          <source>Now check your git log. It will show that our last commit has been removed.</source>
          <target state="translated">Теперь проверь свой гит-журнал.Он покажет,что наш последний коммит был удалён.</target>
        </trans-unit>
        <trans-unit id="bf9fec7d29523219710c98821dd591c1dec62b9f" translate="yes" xml:space="preserve">
          <source>Now committed files to come from the staged area into the unstaged area. Now files are ready to edit, so whatever you change, you want to go edit and added it and make a fresh/new commit.</source>
          <target state="translated">Теперь зафиксированные файлы будут поступать из инсценированной области в нестабильную.Теперь файлы готовы к редактированию,так что,что бы вы ни изменили,вы хотите пойти редактировать и добавить его и сделать новый коммит.</target>
        </trans-unit>
        <trans-unit id="118e2b604fe880dcbfe8cb801e5add61dada7d49" translate="yes" xml:space="preserve">
          <source>Now your committed files come into the staging area. Suppose if you want to upstage the files, because you need to edit some wrong content, then do the following command</source>
          <target state="translated">Теперь ваши зафиксированные файлы попадают в инсценировочную зону.Предположим,что если вы хотите повысить уровень загрузки файлов,потому что вам нужно отредактировать некоторую неверную информацию,то сделайте следующую команду</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="ec04fa1576124d83caec0f31dc2b502c37152447" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;https://www.atlassian.com/software/sourcetree/overview&quot;&gt;SourceTree&lt;/a&gt; (GUI for GitHub), you may right-click the commit and do a 'Reverse Commit'. This should undo your changes.</source>
          <target state="translated">На &lt;a href=&quot;https://www.atlassian.com/software/sourcetree/overview&quot;&gt;SourceTree&lt;/a&gt; (GUI для GitHub) вы можете щелкнуть правой кнопкой мыши по коммиту и выполнить &amp;laquo;Обратный коммит&amp;raquo;. Это должно отменить ваши изменения.</target>
        </trans-unit>
        <trans-unit id="3be3e32c5326ce143c128e27ba5092940dc4853b" translate="yes" xml:space="preserve">
          <source>On the terminal:</source>
          <target state="translated">На терминале:</target>
        </trans-unit>
        <trans-unit id="8c22244631be989f141548fb4e35912929db4e66" translate="yes" xml:space="preserve">
          <source>One more thing: &lt;strong&gt;Suppose you destroy a commit&lt;/strong&gt; as in the first example, &lt;strong&gt;but then discover you needed it after all&lt;/strong&gt;?  Tough luck, right?</source>
          <target state="translated">Еще одна вещь: &lt;strong&gt;предположим, вы уничтожили коммит,&lt;/strong&gt; как в первом примере, &lt;strong&gt;но потом обнаружили, что он вам нужен в конце концов&lt;/strong&gt; ? Не повезло, правда?</target>
        </trans-unit>
        <trans-unit id="7dc1cea9c383121b4bdd496679a8d0e5a949e5b6" translate="yes" xml:space="preserve">
          <source>Or, if it's a shared branch, make a new commit:</source>
          <target state="translated">Или,если это общий филиал,сделай новое обязательство:</target>
        </trans-unit>
        <trans-unit id="00fcdda14949d42c1610edfba9ca80d41d59564f" translate="yes" xml:space="preserve">
          <source>Or:</source>
          <target state="translated">Or:</target>
        </trans-unit>
        <trans-unit id="a3a8477cedc032d9873371c5e084b9eacf883b9f" translate="yes" xml:space="preserve">
          <source>Perform a &lt;a href=&quot;https://stackoverflow.com/a/1624724/86967&quot;&gt;reverse cherry pick&lt;/a&gt; (&lt;a href=&quot;http://git-scm.com/docs/git-revert.html&quot;&gt;git-revert&lt;/a&gt;) to undo the changes.</source>
          <target state="translated">Выполните &lt;a href=&quot;https://stackoverflow.com/a/1624724/86967&quot;&gt;обратный выбор вишни&lt;/a&gt; ( &lt;a href=&quot;http://git-scm.com/docs/git-revert.html&quot;&gt;git-revert&lt;/a&gt; ), чтобы отменить изменения.</target>
        </trans-unit>
        <trans-unit id="aa568bf8616f13ac0cc5df25873469e5ccf38ec4" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Add &lt;code&gt;*.class&lt;/code&gt; to a &lt;a href=&quot;https://help.github.com/articles/ignoring-files&quot;&gt;gitignore&lt;/a&gt; to stop this happening again.</source>
          <target state="translated">ProTip &amp;trade;: добавьте &lt;code&gt;*.class&lt;/code&gt; к &lt;a href=&quot;https://help.github.com/articles/ignoring-files&quot;&gt;gitignore,&lt;/a&gt; чтобы остановить это снова.</target>
        </trans-unit>
        <trans-unit id="f4296646777734b2d5b0dac52d1dce522bf88dc3" translate="yes" xml:space="preserve">
          <source>Reflog</source>
          <target state="translated">Reflog</target>
        </trans-unit>
        <trans-unit id="228bdb6590fdd535c6f991003a83abdb52d05a18" translate="yes" xml:space="preserve">
          <source>Replace last commit to new commit:</source>
          <target state="translated">Заменить последний коммит на новый:</target>
        </trans-unit>
        <trans-unit id="a51bbf38f0cd3fbaad539d97443c3bd122cc7a58" translate="yes" xml:space="preserve">
          <source>Replace the files in the index:</source>
          <target state="translated">Замените файлы в индексе:</target>
        </trans-unit>
        <trans-unit id="c9f458823f3bf87219789b17bb6105ceec72b950" translate="yes" xml:space="preserve">
          <source>Sample list</source>
          <target state="translated">Образец списка</target>
        </trans-unit>
        <trans-unit id="7a47f0211a3a06ef60fca815c2f7fa0d052c8255" translate="yes" xml:space="preserve">
          <source>Say you have this, where C is your HEAD and (F) is the state of your files.</source>
          <target state="translated">Скажите,что у вас есть это,где С-ваша ЗДЕСЬ и (F)-состояние ваших файлов.</target>
        </trans-unit>
        <trans-unit id="5b81be5431b3f51fe1eecc7ca9f7998953def0ed" translate="yes" xml:space="preserve">
          <source>Select the correct reflog (f3cb6e2 in my case) and type</source>
          <target state="translated">Выберите правильный рефлог (в моем случае f3cb6e2)и введите</target>
        </trans-unit>
        <trans-unit id="544992601244c08d3f2c44d945be08b5c3005ee5" translate="yes" xml:space="preserve">
          <source>Simple, run this in your command line:</source>
          <target state="translated">Просто,запусти это в своей командной строке:</target>
        </trans-unit>
        <trans-unit id="384f63ad4ebe48d36aae8bc91df1d92970d07504" translate="yes" xml:space="preserve">
          <source>So, instead of amending the commit, you could use:</source>
          <target state="translated">Так что,вместо того,чтобы изменять коммит,вы могли бы использовать:</target>
        </trans-unit>
        <trans-unit id="c61884085379673e6ac8b7eec7be567b9fcde876" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hard reset&lt;/code&gt; to &lt;code&gt;HEAD-1&lt;/code&gt; will set your working copy to the state of the commit before your wrong commit.</source>
          <target state="translated">&lt;code&gt;hard reset&lt;/code&gt; до &lt;code&gt;HEAD-1&lt;/code&gt; установит вашу рабочую копию в состояние коммита до вашего неправильного коммита.</target>
        </trans-unit>
        <trans-unit id="6896e765622f7e8e802ea0d566f9283443fa59e4" translate="yes" xml:space="preserve">
          <source>The above answer will show you &lt;code&gt;git reflog,&lt;/code&gt; which is used to find out what is the SHA-1, which you wish to revert. Once you found the point to which you want to undo to use the sequence of commands as explained above.</source>
          <target state="translated">Приведенный выше ответ покажет вам &lt;code&gt;git reflog,&lt;/code&gt; который используется, чтобы узнать, что такое SHA-1, который вы хотите вернуть. Как только вы нашли точку, к которой вы хотите отменить, используйте последовательность команд, как описано выше.</target>
        </trans-unit>
        <trans-unit id="ad3af2de9f5b9169a959083791165bc515f4d8e0" translate="yes" xml:space="preserve">
          <source>The commit id can be seen by</source>
          <target state="translated">Идентификатор коммита можно увидеть по</target>
        </trans-unit>
        <trans-unit id="58fcb381fcbc6c7db9e3a502ede13d4eb30a906f" translate="yes" xml:space="preserve">
          <source>The previous, erroneous commit will be edited to reflect the new index state - in other words, it'll be like you never made the mistake in the first place.</source>
          <target state="translated">Предыдущий,ошибочный коммит будет отредактирован,чтобы отразить новое состояние индекса-другими словами,это будет выглядеть так,как будто вы никогда не совершали ошибку в первую очередь.</target>
        </trans-unit>
        <trans-unit id="1b14ff29c993ebc2b9d3e10ed4c25659c85141a4" translate="yes" xml:space="preserve">
          <source>The proper way of removing files from the repository history is using &lt;code&gt;git filter-branch&lt;/code&gt;. That is,</source>
          <target state="translated">Правильный способ удаления файлов из истории репозитория - использование &lt;code&gt;git filter-branch&lt;/code&gt; . Это,</target>
        </trans-unit>
        <trans-unit id="f9d8170d98950c22e6026933d7548298a3e52f98" translate="yes" xml:space="preserve">
          <source>The result is:</source>
          <target state="translated">В результате:</target>
        </trans-unit>
        <trans-unit id="07375d484330e1d257b300d0ff824eb22b354bea" translate="yes" xml:space="preserve">
          <source>Then Git will remove commits for any line that you remove.</source>
          <target state="translated">Затем Git удалит коммиты для любой удалённой вами строки.</target>
        </trans-unit>
        <trans-unit id="f7d9625532d0ba3e8d589b7822d92f026241f016" translate="yes" xml:space="preserve">
          <source>Then amend the commit:</source>
          <target state="translated">Тогда внеси поправки в обязательство:</target>
        </trans-unit>
        <trans-unit id="2dddb885a6a2b1519c7054126c37d9c20d84517e" translate="yes" xml:space="preserve">
          <source>Then do:</source>
          <target state="translated">Тогда делай:</target>
        </trans-unit>
        <trans-unit id="57bc2c81ed066050c0080e31433ade12c1fafb8c" translate="yes" xml:space="preserve">
          <source>Then navigate to your repository's local directory and run this command:</source>
          <target state="translated">Затем перейдите к локальному каталогу репозитория и выполните эту команду:</target>
        </trans-unit>
        <trans-unit id="88abacbd29c998da201831696ac57ea168428e70" translate="yes" xml:space="preserve">
          <source>Then push your updated branch to the shared repository.</source>
          <target state="translated">Затем переместите вашу обновленную ветку в общий репозиторий.</target>
        </trans-unit>
        <trans-unit id="787fe88f2b0129fd73dd72227713e0132ef9e4a9" translate="yes" xml:space="preserve">
          <source>Then you can do -</source>
          <target state="translated">Тогда ты можешь сделать -</target>
        </trans-unit>
        <trans-unit id="58ef0881028627c976b0408af21df02ee00ed183" translate="yes" xml:space="preserve">
          <source>Then, if it's a private branch, &lt;strong&gt;amend&lt;/strong&gt; the commit:</source>
          <target state="translated">Затем, если это частная ветка, &lt;strong&gt;измените&lt;/strong&gt; коммит:</target>
        </trans-unit>
        <trans-unit id="f5b4fe5fd28171791c03c89b19db5efc46161ac4" translate="yes" xml:space="preserve">
          <source>There are many ways to do it:</source>
          <target state="translated">Есть много способов сделать это:</target>
        </trans-unit>
        <trans-unit id="b517215080f9f57ee1266f9c4832959714afcc97" translate="yes" xml:space="preserve">
          <source>There are two ways to &quot;undo&quot; your last commit, depending on whether or not you have already made your commit public (pushed to your remote repository):</source>
          <target state="translated">Есть два способа &quot;отменить&quot; ваш последний коммит,в зависимости от того,сделали ли вы уже ваш коммит публичным (перенесены в ваше удаленное хранилище)или нет:</target>
        </trans-unit>
        <trans-unit id="417233788326d36a0849294707279d21562f2c68" translate="yes" xml:space="preserve">
          <source>This does nothing to your working tree (the state of your files on disk), but undoes the commit and leaves the changes you committed unstaged (so they'll appear as &quot;Changes not staged for commit&quot; in &lt;code&gt;git status&lt;/code&gt;, so you'll need to add them again before committing). If you &lt;em&gt;only&lt;/em&gt; want to &lt;em&gt;add&lt;/em&gt; more changes to the previous commit, or change the commit message&lt;sup&gt;1&lt;/sup&gt;, you could use &lt;code&gt;git reset --soft HEAD~&lt;/code&gt; instead, which is like &lt;code&gt;git reset HEAD~&lt;/code&gt;&lt;sup&gt;2&lt;/sup&gt; but leaves your existing changes staged.</source>
          <target state="translated">Это никак не влияет на ваше рабочее дерево (состояние ваших файлов на диске), но отменяет фиксацию и оставляет внесенные вами изменения без изменений (поэтому они будут отображаться как &amp;laquo;Изменения, не подготовленные для фиксации&amp;raquo; в &lt;code&gt;git status&lt;/code&gt; , так что вы нужно добавить их еще раз перед совершением). Если вы хотите &lt;em&gt;только&lt;/em&gt; &lt;em&gt;добавить&lt;/em&gt; больше изменений к предыдущему коммиту или изменить сообщение о &lt;code&gt;git reset --soft HEAD~&lt;/code&gt; &lt;sup&gt;1&lt;/sup&gt; , вы можете вместо этого использовать git reset --soft HEAD ~ , который похож на &lt;code&gt;git reset HEAD~&lt;/code&gt; &lt;sup&gt;2,&lt;/sup&gt; но оставляет ваши существующие изменения подготовленными.</target>
        </trans-unit>
        <trans-unit id="e8661cbcc8af74bfe81ccf8b2438af778508864f" translate="yes" xml:space="preserve">
          <source>This is what you want to undo.</source>
          <target state="translated">Это то,что ты хочешь отменить.</target>
        </trans-unit>
        <trans-unit id="c4bd04c3bb8ddaf08d1b9d47df9119bc82bfb257" translate="yes" xml:space="preserve">
          <source>This not only leaves your files alone, it even leaves your &lt;em&gt;index&lt;/em&gt; alone.  When you do &lt;code&gt;git status&lt;/code&gt;, you'll see that the same files are in the index as before.  In fact, right after this command, you could do &lt;code&gt;git commit&lt;/code&gt; and you'd be redoing the same commit you just had.</source>
          <target state="translated">Это не только оставляет ваши файлы в покое, но даже оставляет ваш &lt;em&gt;индекс в&lt;/em&gt; покое. Когда вы сделаете &lt;code&gt;git status&lt;/code&gt; , вы увидите, что в индексе есть те же файлы, что и раньше. Фактически, сразу после этой команды вы можете выполнить &lt;code&gt;git commit&lt;/code&gt; и вы будете переделывать тот же коммит, который только что у вас был.</target>
        </trans-unit>
        <trans-unit id="8df96dbb30132f0b506ad616256c325680ff75d6" translate="yes" xml:space="preserve">
          <source>This will create a new commit that reverses everything introduced by the accidental commit.</source>
          <target state="translated">Это создаст новый коммит,который обратит вспять всё,что было введено случайным коммитом.</target>
        </trans-unit>
        <trans-unit id="1c68f6f7024438aa3046a481d2c1addaf9440e70" translate="yes" xml:space="preserve">
          <source>This will erase all commits after the current one in your local repository but only for that one branch.</source>
          <target state="translated">Это приведет к стиранию всех коммитов после текущего в вашем локальном репозитории,но только для этого одного ответвления.</target>
        </trans-unit>
        <trans-unit id="e5d864ef61188c067247dc117b9d493c92af15d6" translate="yes" xml:space="preserve">
          <source>This will undo the last commit.</source>
          <target state="translated">Это отменит последнее обязательство.</target>
        </trans-unit>
        <trans-unit id="fd45238e29dd02dc22a0e8b874da6694dac6a7b8" translate="yes" xml:space="preserve">
          <source>To change the last commit</source>
          <target state="translated">Чтобы изменить последний коммит</target>
        </trans-unit>
        <trans-unit id="f7ecd59212ea06cb251595c98d9761566201ee77" translate="yes" xml:space="preserve">
          <source>To get the commit ID, just use &lt;code&gt;git log&lt;/code&gt;.</source>
          <target state="translated">Чтобы получить идентификатор фиксации, просто используйте &lt;code&gt;git log&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3e5f00b679bf8a2fd82d5943bfc1b8180be393c" translate="yes" xml:space="preserve">
          <source>To reset to the previous revision, permanently deleting all uncommitted changes:</source>
          <target state="translated">Для сброса к предыдущей ревизии навсегда удалить все нефиксированные изменения:</target>
        </trans-unit>
        <trans-unit id="364915e8415cb926f99019355ae5fa7268bf67ff" translate="yes" xml:space="preserve">
          <source>To restore everything back to the way it was prior to the last commit, we need to &lt;code&gt;reset&lt;/code&gt; to the commit before &lt;code&gt;HEAD&lt;/code&gt;:</source>
          <target state="translated">Чтобы восстановить все, как было до последнего коммита, нам нужно &lt;code&gt;reset&lt;/code&gt; коммит до &lt;code&gt;HEAD&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bee3fd8738db503b894e0a360e47747e6dee2760" translate="yes" xml:space="preserve">
          <source>To restore everything back to the way it was prior to the last commit, we need to reset to the commit before HEAD.</source>
          <target state="translated">Чтобы восстановить всё,как было до последнего коммита,нам нужно сбросить коммит до HEAD.</target>
        </trans-unit>
        <trans-unit id="75686a9625b4e2498d5fa2138994a326e5cc11f9" translate="yes" xml:space="preserve">
          <source>To revert a commit</source>
          <target state="translated">Чтобы вернуть коммит</target>
        </trans-unit>
        <trans-unit id="a373c77926edebc3a21cf9731990bdbcee955ebc" translate="yes" xml:space="preserve">
          <source>Type &lt;code&gt;git log&lt;/code&gt; and find the last commit hash code and then enter:</source>
          <target state="translated">Введите &lt;code&gt;git log&lt;/code&gt; и найдите хэш-код последнего коммита, а затем введите:</target>
        </trans-unit>
        <trans-unit id="afa47a28efb9d6631a7be02ac359bed5256995ce" translate="yes" xml:space="preserve">
          <source>Undo a commit and redo</source>
          <target state="translated">Отменить обязательство и переделать</target>
        </trans-unit>
        <trans-unit id="3b67eeb3e61caf688cb7c81873626da30faa3d61" translate="yes" xml:space="preserve">
          <source>Undo last commit:</source>
          <target state="translated">Отменить последнее обязательство:</target>
        </trans-unit>
        <trans-unit id="afac4f007ba7b7df3fb7fdbffe3f3e74cda2d364" translate="yes" xml:space="preserve">
          <source>Undoing a commit is a little scary if you don't know how it works.  But it's actually amazingly easy if you do understand.</source>
          <target state="translated">Отмена коммита немного пугает,если вы не знаете,как он работает.Но на самом деле это удивительно просто,если вы понимаете.</target>
        </trans-unit>
        <trans-unit id="527a3d707ed3f36d3cc4c2c60c12aa4ba2061adf" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git revert &amp;lt;commit-id&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Используйте &lt;code&gt;git revert &amp;lt;commit-id&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17494ec1a4542bf7ad8f58925cb973c44f592f59" translate="yes" xml:space="preserve">
          <source>Use git-gui (or similar) to perform a &lt;code&gt;git commit --amend&lt;/code&gt;. From the GUI you can add or remove individual files from the commit. You can also modify the commit message.</source>
          <target state="translated">Используйте git-gui (или аналогичный) для выполнения &lt;code&gt;git commit --amend&lt;/code&gt; . Из графического интерфейса вы можете добавлять или удалять отдельные файлы из коммита. Вы также можете изменить сообщение коммита.</target>
        </trans-unit>
        <trans-unit id="b37a8fc5dec9e88384a5815f0fc9f9267200f359" translate="yes" xml:space="preserve">
          <source>Use reflog to find a correct state</source>
          <target state="translated">Используйте рефлог,чтобы найти правильное состояние</target>
        </trans-unit>
        <trans-unit id="fc88747b112f50b032af5f463b4ec5374faf088d" translate="yes" xml:space="preserve">
          <source>Verify the results with gitk or git log --stat</source>
          <target state="translated">Проверьте результаты с помощью gitk или gith-журнала --stat</target>
        </trans-unit>
        <trans-unit id="0d8399af986a2f681f49e457e4031115af127538" translate="yes" xml:space="preserve">
          <source>WHAT TO USE, &lt;code&gt;reset --soft&lt;/code&gt; or &lt;code&gt;reset --hard&lt;/code&gt;?</source>
          <target state="translated">ЧТО ИСПОЛЬЗОВАТЬ, &lt;code&gt;reset --soft&lt;/code&gt; или &lt;code&gt;reset --hard&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="c0e5ef70b045d544d0e8ef7bd1b582082ad89dcd" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;N&lt;/code&gt; is the number of commits before &lt;code&gt;HEAD&lt;/code&gt;, and &lt;code&gt;@~&lt;/code&gt; resets to the previous commit.</source>
          <target state="translated">Где &lt;code&gt;N&lt;/code&gt; - количество коммитов до &lt;code&gt;HEAD&lt;/code&gt; , а &lt;code&gt;@~&lt;/code&gt; сбрасывает до предыдущего коммита.</target>
        </trans-unit>
        <trans-unit id="ba09fa6b55a3bdb0facb3573158b662f2856f540" translate="yes" xml:space="preserve">
          <source>Why ?</source>
          <target state="translated">Почему?</target>
        </trans-unit>
        <trans-unit id="f77dcb737382201699fd807f32d2ef464e059eab" translate="yes" xml:space="preserve">
          <source>You can also look at this answer:</source>
          <target state="translated">Вы также можете посмотреть на этот ответ:</target>
        </trans-unit>
        <trans-unit id="a9baef947952148a6b8c07e12ad056f1e693d5f0" translate="yes" xml:space="preserve">
          <source>You can do this, leaving off the &lt;code&gt;--hard&lt;/code&gt;:</source>
          <target state="translated">Вы можете сделать это, &lt;code&gt;--hard&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1c518c3dc0194146d3105b7bacb73d7851904ba4" translate="yes" xml:space="preserve">
          <source>You can get the commit id as shown below:</source>
          <target state="translated">Вы можете получить идентификатор коммита,как показано ниже:</target>
        </trans-unit>
        <trans-unit id="215b9c05c06a967758936d7cec4b32af139ed2db" translate="yes" xml:space="preserve">
          <source>You can reset Git to any commit with:</source>
          <target state="translated">Вы можете сбросить Git на любой коммит:</target>
        </trans-unit>
        <trans-unit id="b0ffab06386f036078ee5c141fa7b05c6c6c54d8" translate="yes" xml:space="preserve">
          <source>You may alternatively use:</source>
          <target state="translated">Ты можешь альтернативно использовать:</target>
        </trans-unit>
        <trans-unit id="e01f6fdff388a1a630d0ac94dc51bca2aaad50a8" translate="yes" xml:space="preserve">
          <source>You want to &lt;strong&gt;nuke commit C and never see it again and lose all the changes in locally modified files&lt;/strong&gt;.  You do this:</source>
          <target state="translated">Вы хотите &lt;strong&gt;уничтожить коммит C и никогда больше его не видеть и потерять все изменения в локально измененных файлах&lt;/strong&gt; . Ты делаешь это:</target>
        </trans-unit>
        <trans-unit id="d0b165d922f19e1f233bdb577fc15fa1ea881b4c" translate="yes" xml:space="preserve">
          <source>You've now resurrected that commit.  Commits don't actually get destroyed in Git for some 90 days, so you can usually go back and rescue one you didn't mean to get rid of.</source>
          <target state="translated">Теперь ты воскресил это обязательство.Коммиты на самом деле не уничтожаются в Git'е около 90 дней,так что обычно вы можете вернуться и спасти тот,от которого не хотели избавиться.</target>
        </trans-unit>
        <trans-unit id="0a61b6f39531ea93e30bbb21c45d5ee711a2be05" translate="yes" xml:space="preserve">
          <source>Your changes will now be reverted and ready for you to commit:</source>
          <target state="translated">Теперь ваши изменения будут возвращены и готовы к фиксации:</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="03135c7009cfc08876f79a30dca601b49f8effed" translate="yes" xml:space="preserve">
          <source>or if you do not remember exactly in which commit it is, you might use</source>
          <target state="translated">или если вы не помните точно,в каком коммите он находится,вы можете использовать</target>
        </trans-unit>
        <trans-unit id="2fb5b3318c3e30b1122b4260899788b41e5dda5b" translate="yes" xml:space="preserve">
          <source>see - &lt;a href=&quot;http://jonas.nitro.dk/git/quick-reference.html&quot;&gt;Git Quick Reference&lt;/a&gt;</source>
          <target state="translated">смотри - &lt;a href=&quot;http://jonas.nitro.dk/git/quick-reference.html&quot;&gt;Git Quick Reference&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34f5b9344105c04a4cd55be4110d43794e7c9419" translate="yes" xml:space="preserve">
          <source>where &lt;strong&gt;d81d3f1&lt;/strong&gt; and &lt;strong&gt;be20eb8&lt;/strong&gt; are commit id.</source>
          <target state="translated">где &lt;strong&gt;d81d3f1&lt;/strong&gt; и &lt;strong&gt;be20eb8&lt;/strong&gt; являются идентификатором коммита.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
