<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/927358">
    <body>
      <group id="927358">
        <trans-unit id="cdbd76dc899e0b39354a13bf5779f241e0324b64" translate="yes" xml:space="preserve">
          <source>&quot;Clean unknown files from the working tree&quot;</source>
          <target state="translated">&quot;从工作树中清理未知文件&quot;</target>
        </trans-unit>
        <trans-unit id="50a0902119f54430e861c0b069f8c7cab2b6a595" translate="yes" xml:space="preserve">
          <source>&quot;Reset the working tree to the last commit&quot;</source>
          <target state="translated">&quot;将工作树重置为最后一次提交&quot;</target>
        </trans-unit>
        <trans-unit id="8c3cd0ee9375d950bd6a746dfe1fd49d0d381c37" translate="yes" xml:space="preserve">
          <source>(This command will ignore your entire commit and your changes will be lost completely from your local working tree). If you want to undo your commit, but you want your changes in the staging area (before commit just like after &lt;code&gt;git add&lt;/code&gt;) then do the following command.</source>
          <target state="translated">（此命令将忽略您的整个提交，并且您的更改将完全从本地工作树中丢失）。 如果要撤消提交，但是要在登台区域中进行更改（像 &lt;code&gt;git add&lt;/code&gt; 之后一样在提交之前），请执行以下命令。</target>
        </trans-unit>
        <trans-unit id="ddc0e31880d00fe77bc0e989ace958394c3848eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HEAD~&lt;/code&gt; or &lt;code&gt;HEAD^&lt;/code&gt; means to move to commit before HEAD.</source>
          <target state="translated">&lt;code&gt;HEAD~&lt;/code&gt; 或 &lt;code&gt;HEAD^&lt;/code&gt; 表示要在HEAD之前提交。</target>
        </trans-unit>
        <trans-unit id="8bd2e794eba621fcdc1b069e1a71a1b527ef7a81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add&lt;/code&gt; anything that you want to include in your new commit.</source>
          <target state="translated">&lt;code&gt;git add&lt;/code&gt; 要包含在新提交中的任何内容。</target>
        </trans-unit>
        <trans-unit id="34d0efbf2abf719fb7ca4cf1fefb9b6a25e44354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git reset --soft HEAD^&lt;/code&gt; or &lt;code&gt;git reset --soft HEAD~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;git reset --soft HEAD^&lt;/code&gt; 或 &lt;code&gt;git reset --soft HEAD~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="866f9e91012c6ead0cfd49a29734df7d7ef95e83" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(&lt;strong&gt;To change a previous commit&lt;/strong&gt;, use the awesome &lt;a href=&quot;https://stackoverflow.com/a/28421811/405550&quot;&gt;interactive rebase&lt;/a&gt;.)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;（ &lt;strong&gt;要更改以前的提交&lt;/strong&gt; ，请使用令人敬畏的&lt;a href=&quot;https://stackoverflow.com/a/28421811/405550&quot;&gt;交互式rebase&lt;/a&gt; 。）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd40862f4499183c8993b90cebebcb51bfa34629" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Also note: You don't want to do this if someone else may be working on the branch.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;另请注意：如果其他人可能正在分支上工作，则您不想这样做。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b5e44d06e6f5e33922233dcc493d40371d8fbdae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;In the normal case, you probably needn't worry about your private-branch commit history being pristine.  Just push a followup commit (see 'How to undo a public commit' above), and later, do a &lt;a href=&quot;https://stackoverflow.com/a/22417539/86967&quot;&gt;squash-merge&lt;/a&gt; to hide the history.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;在正常情况下，您可能不必担心自己的私人分支提交历史记录很原始。&lt;/em&gt; &lt;em&gt;只需推送一个后续提交（请参见上面的&amp;ldquo;如何撤消公共提交&amp;rdquo;），然后再执行&lt;a href=&quot;https://stackoverflow.com/a/22417539/86967&quot;&gt;壁球合并&lt;/a&gt;即可隐藏历史记录。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ffdb2c0394f18a66e33cad1aa8b0c8a995573d9b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LOG AFTER RESET&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;重置后记录&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e89d0517e371d5009e8f84787a9651c192557940" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;REFLOG BEFORE RESET&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;重置前重新记录&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3ed09c1e18a0af18edaec9e899bec94de93e8f7d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;REFLOG FINAL&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;最后完成&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fc68584de53f921d525d48c067980500249d572a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Suppose you want to revert the commit 'be20eb8':&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;假设您要还原提交&amp;ldquo; be20eb8&amp;rdquo;：&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a82f1b90d254248abed1bae8036926833302d360" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Suppose you want to revert the last commit 'd81d3f1'.  Here are two options:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;假设您要还原最后的提交'd81d3f1'。&lt;/em&gt; &lt;em&gt;这里有两个选择：&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1e2c7964ead5d39a265673bdc4c854bd98db7305" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The commit history will show both commits, separately&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;提交历史记录将分别显示两个提交&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0a00e3f7efad2ae670b01291478dd14132b3073" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This can be dangerous -- be sure you have a local copy of the branch to repush.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;这可能很危险-确保您具有要重新推送的分支的本地副本。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="15e2038f54689028a94b6ea1da46f5566f7a0fd7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Basic command to revert the commit in Git is:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;恢复Git中的提交的基本命令是：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae9b8f2d724e80b49743df67b670385613933b3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;COMMIT-ID&lt;/strong&gt;: ID for the commit</source>
          <target state="translated">&lt;strong&gt;COMMIT-ID&lt;/strong&gt; ：提交的ID</target>
        </trans-unit>
        <trans-unit id="932b361f427cbf3c307ecd91c7c952ff0c745ec8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Explain:&lt;/strong&gt; what &lt;code&gt;git reset&lt;/code&gt; does, it's basically &lt;code&gt;reset&lt;/code&gt; to any commit you'd like to go back to, then if you combine it with &lt;code&gt;--soft&lt;/code&gt; key, it will go back, but keep the  changes in your file(s), so you get back to the stage which the file was just added, &lt;code&gt;HEAD&lt;/code&gt; is the head of the branch and if you combine with &lt;code&gt;~1&lt;/code&gt; (in this case you also use &lt;code&gt;HEAD^&lt;/code&gt;), it will go back only one commit which what you want...</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt; &lt;code&gt;git reset&lt;/code&gt; 的作用，基本上是 &lt;code&gt;reset&lt;/code&gt; 其重置为您要返回的任何提交，然后，如果将其与 &lt;code&gt;--soft&lt;/code&gt; key结合使用，它将返回，但会将更改保留在文件中，因此返回到刚刚添加文件的阶段， &lt;code&gt;HEAD&lt;/code&gt; 是分支的头，如果与 &lt;code&gt;~1&lt;/code&gt; 组合（在这种情况下，您还使用 &lt;code&gt;HEAD^&lt;/code&gt; ），它将仅返回您想要的一次提交。 ..</target>
        </trans-unit>
        <trans-unit id="3574e98022618fb8bd8c3451dc545a7afe7fbce2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HEAD~1&lt;/strong&gt; is a shorthand for the commit before head. Alternatively you can refer to the &lt;strong&gt;SHA-1&lt;/strong&gt; of the hash if you want to reset to. &lt;em&gt;--soft&lt;/em&gt; option will delete the commit but it will leave all your changed files &quot;Changes to be committed&quot;, as git status would put it.</source>
          <target state="translated">&lt;strong&gt;HEAD〜1&lt;/strong&gt;是head之前提交的简写。 或者，如果您想重置为哈希，则可以引用哈希的&lt;strong&gt;SHA-1&lt;/strong&gt; 。 &lt;em&gt;--soft&lt;/em&gt;选项将删除提交，但会保留所有更改的文件&amp;ldquo;要提交的更改&amp;rdquo;，因为git status会将其保存。</target>
        </trans-unit>
        <trans-unit id="91e7db0d50a04b5b35a1a94987835c5f400bc4dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How to undo the last Git commit?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;如何撤消最后的Git提交？&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60d593a9eacf0b139778cdae8484f2f65dd120cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; This command will delete your previous commit, so use with caution! &lt;code&gt;git reset --hard&lt;/code&gt; is safer.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;此命令将删除您以前的提交，因此请谨慎使用！ &lt;code&gt;git reset --hard&lt;/code&gt; 更安全。</target>
        </trans-unit>
        <trans-unit id="095d887f056999d5b4004102bb5f88ac48a85975" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Now let's see some cases:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;现在让我们看一些情况：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="03882aeee51ef94ae661219381b4dcce9e1cce01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning: The above command will permanently remove the modifications to the &lt;code&gt;.java&lt;/code&gt; files (and any other files) that you wanted to commit.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;警告：上面的命令将永久删除您要提交的对 &lt;code&gt;.java&lt;/code&gt; 文件（和任何其他文件）的修改。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa69fcff8d6f08bdb55e4d59043b5ca272dae547" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Do Not use --hard if you do not know what you are doing.
--hard is too &lt;strong&gt;dangerous&lt;/strong&gt;, and it might &lt;strong&gt;delete your files.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;如果您不知道自己在做什么，请不要使用--hard。 --hard太&lt;strong&gt;危险了&lt;/strong&gt; ，它可能会&lt;strong&gt;删除您的文件。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b626b2f46d5e12af83abdc2fef4727e09519de7c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Word of warning&lt;/strong&gt;: &lt;em&gt;Careless use of &lt;code&gt;git reset&lt;/code&gt; is a good way to get your working copy into a confusing state. I recommend that Git novices avoid this if they can.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;警告&lt;/strong&gt; ： &lt;em&gt;粗心地使用 &lt;code&gt;git reset&lt;/code&gt; 是使工作副本进入混乱状态的好方法。&lt;/em&gt; &lt;em&gt;我建议Git新手尽可能避免这种情况。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1fb851bf7e7eaa836661446dbd33c301566c2fee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;n:&lt;/strong&gt;  is number of last commits you want to revert</source>
          <target state="translated">&lt;strong&gt;n：&lt;/strong&gt;是您要还原的最后一次提交的次数</target>
        </trans-unit>
        <trans-unit id="042b45c0cdb1908a7237ca505333cc72ad2f4fcd" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;1&lt;/sup&gt; Note, however, that you don't need to reset to an earlier commit if you just made a mistake in your &lt;em&gt;commit message&lt;/em&gt;. The easier option is to &lt;code&gt;git reset&lt;/code&gt; (to unstage any changes you've made since) and then &lt;a href=&quot;https://stackoverflow.com/q/179123/1146608&quot;&gt;&lt;code&gt;git commit --amend&lt;/code&gt;&lt;/a&gt;, which will open your default commit message editor pre-populated with the last commit message.</source>
          <target state="translated">&lt;sup&gt;1&lt;/sup&gt;注意，但是，如果您在&lt;em&gt;commit message&lt;/em&gt;中&lt;em&gt;犯&lt;/em&gt;了一个错误，则无需重置为较早的提交。 较简单的选项是 &lt;code&gt;git reset&lt;/code&gt; （取消对您自此以来所做的任何更改），然后&lt;a href=&quot;https://stackoverflow.com/q/179123/1146608&quot;&gt; &lt;code&gt;git commit --amend&lt;/code&gt; &lt;/a&gt; ，这将打开您的默认提交消息编辑器，该编辑器预填充了最后一条提交消息。</target>
        </trans-unit>
        <trans-unit id="f589da44355f3bae2c6956991b7964bd5da1c3b3" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;2&lt;/sup&gt;&lt;code&gt;HEAD~&lt;/code&gt; is the same as &lt;code&gt;HEAD~1&lt;/code&gt;. Also, see &lt;a href=&quot;https://stackoverflow.com/a/46350644/5175709&quot;&gt;What is the HEAD in git?&lt;/a&gt;. It's helpful if you want to uncommit multiple commits.</source>
          <target state="translated">&lt;sup&gt;2&lt;/sup&gt; &lt;code&gt;HEAD~&lt;/code&gt; 与 &lt;code&gt;HEAD~1&lt;/code&gt; 相同。 另外，请参阅&lt;a href=&quot;https://stackoverflow.com/a/46350644/5175709&quot;&gt;git中的HEAD是什么？&lt;/a&gt; 。 如果您要取消提交多个提交，这将很有帮助。</target>
        </trans-unit>
        <trans-unit id="beda869ef6f521b855bd24e83238346a70966147" translate="yes" xml:space="preserve">
          <source>A single command:</source>
          <target state="translated">一条命令。</target>
        </trans-unit>
        <trans-unit id="29c0905c68ac34c487543523f04ae41d97edad75" translate="yes" xml:space="preserve">
          <source>Add/remove files to get things the way you want:</source>
          <target state="translated">添加删除文件以获得你想要的东西。</target>
        </trans-unit>
        <trans-unit id="d639f37af9faf747f077d650e523fd19503adf51" translate="yes" xml:space="preserve">
          <source>Advanced: Correction of the &lt;em&gt;private&lt;/em&gt; branch in public repository</source>
          <target state="translated">高级：更正公共存储库中的&lt;em&gt;私有&lt;/em&gt;分支</target>
        </trans-unit>
        <trans-unit id="358974b5e35f57e633f081c658d68f37352ae313" translate="yes" xml:space="preserve">
          <source>After that the repo HEAD will be reset to that HEADid</source>
          <target state="translated">之后,repo HEAD将被重置为该HEADID。</target>
        </trans-unit>
        <trans-unit id="415e61d47b53277ebd8ebb43bbfa86d13811a023" translate="yes" xml:space="preserve">
          <source>Ah, but suppose commit C wasn't a disaster, but just a bit off.  You want to &lt;strong&gt;undo the commit but keep your changes&lt;/strong&gt; for a bit of editing before you do a better commit.  Starting again from here, with C as your HEAD:</source>
          <target state="translated">嗯，但是假设提交C并不是一场灾难，只是有点过时了。 您想要&lt;strong&gt;撤消提交，但是&lt;/strong&gt;在进行更好的提交之前，请&lt;strong&gt;保留更改&lt;/strong&gt;以进行一些编辑。 从这里再次开始，以C作为您的HEAD：</target>
        </trans-unit>
        <trans-unit id="d9cfb04017640194c6e3e2c61a15bbfd79009ef4" translate="yes" xml:space="preserve">
          <source>Amending a commit is the ideal solution if you need to change the last commit, but a more general solution is &lt;code&gt;reset&lt;/code&gt;.</source>
          <target state="translated">如果您需要更改最后的提交，则修改提交是理想的解决方案，但是 &lt;code&gt;reset&lt;/code&gt; 了更通用的解决方案。</target>
        </trans-unit>
        <trans-unit id="27edcc851ef29dbe274e2874e8068852bb538d5f" translate="yes" xml:space="preserve">
          <source>Another way:</source>
          <target state="translated">另一种方式。</target>
        </trans-unit>
        <trans-unit id="422307882ec926f6f5d44fcfa6d87f9615004d50" translate="yes" xml:space="preserve">
          <source>Beware, however, that if you have added any new changes to the index, using &lt;code&gt;commit --amend&lt;/code&gt; will add them to your previous commit.</source>
          <target state="translated">但是请注意，如果您向索引添加了任何新更改，则使用 &lt;code&gt;commit --amend&lt;/code&gt; 会将它们添加到先前的提交中。</target>
        </trans-unit>
        <trans-unit id="d71ca48757ab065cece7fa2763c115d7cfaccff7" translate="yes" xml:space="preserve">
          <source>But I recomnend you use this command with care. Read more at &lt;em&gt;&lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-filter-branch.html&quot;&gt;git-filter-branch(1) Manual Page&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">但我建议您谨慎使用此命令。 在&lt;em&gt;&lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-filter-branch.html&quot;&gt;git-filter-branch（1）手册页中&lt;/a&gt;&lt;/em&gt;阅读更多内容。</target>
        </trans-unit>
        <trans-unit id="f67929ae8cd6f5fbbf6cbbd9efb2b32c345474f7" translate="yes" xml:space="preserve">
          <source>Check out &lt;code&gt;git help reset&lt;/code&gt;, specifically the sections on &lt;code&gt;--soft&lt;/code&gt;&lt;code&gt;--mixed&lt;/code&gt; and &lt;code&gt;--hard&lt;/code&gt;, for a better understanding of what this does.</source>
          <target state="translated">请查看 &lt;code&gt;git help reset&lt;/code&gt; ，特别是 &lt;code&gt;--soft&lt;/code&gt; &lt;code&gt;--mixed&lt;/code&gt; 和 &lt;code&gt;--hard&lt;/code&gt; 的部分，以更好地了解其功能。</target>
        </trans-unit>
        <trans-unit id="b7e3df4d70cce34e78cc747920e4ff2d4a7e19a1" translate="yes" xml:space="preserve">
          <source>Checkout the branch you want to revert, then reset your local working copy back to the commit that you want to be the latest one on the remote server (everything after it will go bye-bye). To do this, in SourceTree I right-clicked on the and selected &quot;Reset BRANCHNAME to this commit&quot;.</source>
          <target state="translated">勾选你要恢复的分支,然后将你的本地工作副本重设为你希望在远程服务器上的最新提交(之后的所有内容都会消失)。要做到这一点,我在SourceTree中右击并选择 &quot;Reset BRANCHNAME to this commit&quot;。</target>
        </trans-unit>
        <trans-unit id="1f869ade959ad3547adddb033afb43b5ac2e2658" translate="yes" xml:space="preserve">
          <source>Choose how many commits you want to list, then invoke like this (to enlist last three)</source>
          <target state="translated">选择你想列出多少个提交,然后像这样调用(列出最后三个提交)</target>
        </trans-unit>
        <trans-unit id="2c5d24179c9925f4dc3b5bbe7f32a36f3b81ac0a" translate="yes" xml:space="preserve">
          <source>Clean up your branch locally then repush...</source>
          <target state="translated">在本地清理好你的分支,然后再重新刷新......</target>
        </trans-unit>
        <trans-unit id="74044e63f34563c02fea09a36d80b1cd20ee2889" translate="yes" xml:space="preserve">
          <source>Commit the changes, reusing the old commit message. &lt;code&gt;reset&lt;/code&gt; copied the old head to &lt;code&gt;.git/ORIG_HEAD&lt;/code&gt;; &lt;code&gt;commit&lt;/code&gt; with &lt;code&gt;-c ORIG_HEAD&lt;/code&gt; will open an editor, which initially contains the log message from the old commit and allows you to edit it. If you do not need to edit the message, you could use the &lt;code&gt;-C&lt;/code&gt; option.</source>
          <target state="translated">提交更改，重新使用旧的提交消息。 &lt;code&gt;reset&lt;/code&gt; 将旧头复制到 &lt;code&gt;.git/ORIG_HEAD&lt;/code&gt; ; 使用 &lt;code&gt;-c ORIG_HEAD&lt;/code&gt; &lt;code&gt;commit&lt;/code&gt; ORIG_HEAD将打开一个编辑器，该编辑器最初包含旧提交的日志消息，并允许您对其进行编辑。 如果不需要编辑消息，则可以使用 &lt;code&gt;-C&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="2021668047035703c4bdd690014e7c398165507b" translate="yes" xml:space="preserve">
          <source>Credits goes to @Kyralessa.</source>
          <target state="translated">归功于@Kyralessa。</target>
        </trans-unit>
        <trans-unit id="81bb595c2583fc6e8211cc3582d7bb87f2320bff" translate="yes" xml:space="preserve">
          <source>Finally the reflog looks like the picture below</source>
          <target state="translated">最后的回录看起来像下图所示</target>
        </trans-unit>
        <trans-unit id="1204b724e98beeb42e8730dcdc034f29045f7af1" translate="yes" xml:space="preserve">
          <source>First run:</source>
          <target state="translated">第一场比赛。</target>
        </trans-unit>
        <trans-unit id="17d5573f23a8a5a2cdf6f111e4233aa567c0e4f9" translate="yes" xml:space="preserve">
          <source>For a local commit</source>
          <target state="translated">对于一个当地的承诺</target>
        </trans-unit>
        <trans-unit id="f3c3836e2082ee94e50c7dd713a8c155fb1acbea" translate="yes" xml:space="preserve">
          <source>For a pushed commit</source>
          <target state="translated">对于推送的承诺</target>
        </trans-unit>
        <trans-unit id="87bf8ece697f09f6cf2b3192664e4d39be313cda" translate="yes" xml:space="preserve">
          <source>For more detailed information you can refer and try out some other commands too for resetting head to a specified state:</source>
          <target state="translated">更多详细信息,您可以参考并尝试使用一些其他的命令来重置头部到指定的状态。</target>
        </trans-unit>
        <trans-unit id="09f1d19488928e2ecea96b7f5ee250a7d0d3003d" translate="yes" xml:space="preserve">
          <source>For more information, check out &lt;em&gt;&lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Basics-Undoing-Things&quot;&gt;Git Basics - Undoing Things&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">有关更多信息，请查看&lt;em&gt;&lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Basics-Undoing-Things&quot;&gt;Git基础知识-撤消事情&lt;/a&gt;&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="8579715bd47fa29053d6ffad000f695c5af1eba0" translate="yes" xml:space="preserve">
          <source>For the lightest touch, you can even &lt;strong&gt;undo your commit but leave your files and your &lt;a href=&quot;https://git.wiki.kernel.org/index.php/WhatIsTheIndex&quot;&gt;index&lt;/a&gt;&lt;/strong&gt;:</source>
          <target state="translated">对于最轻松的接触，您甚至可以&lt;strong&gt;撤消提交，但保留文件和&lt;a href=&quot;https://git.wiki.kernel.org/index.php/WhatIsTheIndex&quot;&gt;索引&lt;/a&gt;&lt;/strong&gt; ：</target>
        </trans-unit>
        <trans-unit id="045501c419ad9e611818e3848de99634357c821a" translate="yes" xml:space="preserve">
          <source>Full example</source>
          <target state="translated">全例</target>
        </trans-unit>
        <trans-unit id="9519843554ac8808a14ce9b395443780c001e652" translate="yes" xml:space="preserve">
          <source>Git command to undo the last commit/ previous commits:</source>
          <target state="translated">Git命令撤销上次提交前的提交。</target>
        </trans-unit>
        <trans-unit id="be9bd9a8aa0b3b68d9d26793c675ef3b3e6cb2c8" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;--soft&lt;/code&gt; means reset into staging.</source>
          <target state="translated">在这里 &lt;code&gt;--soft&lt;/code&gt; 表示重置为暂存。</target>
        </trans-unit>
        <trans-unit id="78fcb4385184e29638fa97d014ac33ad7d77045c" translate="yes" xml:space="preserve">
          <source>How can I move HEAD back to a previous location? (Detached head) &amp;amp; Undo commits</source>
          <target state="translated">如何将HEAD移回先前的位置？ （独立的头部）和撤消提交</target>
        </trans-unit>
        <trans-unit id="c91c5362dd65e2fe707d753371a95e9a69de2632" translate="yes" xml:space="preserve">
          <source>How can I undo those commits from the local repository?</source>
          <target state="translated">如何才能从本地版本库中撤销这些提交?</target>
        </trans-unit>
        <trans-unit id="57e6eeb11d4d6618f7e6e546500f67326f92326c" translate="yes" xml:space="preserve">
          <source>How do I undo the most recent local commits in Git</source>
          <target state="translated">如何撤销 Git 中最近的本地提交?</target>
        </trans-unit>
        <trans-unit id="553ff18adf0b26224802bfc244583bb7173e7dc2" translate="yes" xml:space="preserve">
          <source>How to fix the previous local commit</source>
          <target state="translated">如何修复之前的本地提交</target>
        </trans-unit>
        <trans-unit id="f7e9b45b2a25c210b9f37b45fb31ebf16ea3af78" translate="yes" xml:space="preserve">
          <source>How to undo a local commit</source>
          <target state="translated">如何撤销本地提交</target>
        </trans-unit>
        <trans-unit id="14e1e373f949b45e000508ad0b95ab4d568cd6e9" translate="yes" xml:space="preserve">
          <source>How to undo a public commit</source>
          <target state="translated">如何撤销公开提交</target>
        </trans-unit>
        <trans-unit id="4eaa2a10cebd407a4f25eddba9a6372ac797c0f9" translate="yes" xml:space="preserve">
          <source>How to undo the previous local commit</source>
          <target state="translated">如何撤销之前的本地提交</target>
        </trans-unit>
        <trans-unit id="fd807a48aec3ecaf1ba5a6d129319db94c10aa6f" translate="yes" xml:space="preserve">
          <source>I accidentally committed the wrong files to &lt;a href=&quot;https://en.wikipedia.org/wiki/Git&quot;&gt;Git&lt;/a&gt;, but I haven't pushed the commit to the server yet.</source>
          <target state="translated">我不小心将错误的文件提交给&lt;a href=&quot;https://en.wikipedia.org/wiki/Git&quot;&gt;Git&lt;/a&gt; ，但尚未将提交推送到服务器。</target>
        </trans-unit>
        <trans-unit id="af65824562744d5560d9d49afebacb2e8926a2af" translate="yes" xml:space="preserve">
          <source>I am just adding two cents for @Kyralessa's answer:</source>
          <target state="translated">我只是为@Kyralessa的回答加两分。</target>
        </trans-unit>
        <trans-unit id="bd6837934ab25451ce4425246112401fce43bb34" translate="yes" xml:space="preserve">
          <source>I create the steps in the image below in more details for you, including all steps that may happens in real situations and committing the code:</source>
          <target state="translated">我在下面的图片中为大家详细的创建步骤,包括实际情况下可能发生的所有步骤,以及提交代码。</target>
        </trans-unit>
        <trans-unit id="aa07a941f400d5ae4b732b9a7e75f68ec0df7a13" translate="yes" xml:space="preserve">
          <source>I prefer to use &lt;code&gt;git rebase -i&lt;/code&gt; for this job, because a nice list pops up where I can choose the commits to get rid of. It might not be as direct as some other answers here, but it just &lt;em&gt;feels right&lt;/em&gt;.</source>
          <target state="translated">我更喜欢使用 &lt;code&gt;git rebase -i&lt;/code&gt; 来完成这项工作，因为会弹出一个不错的列表，我可以在其中选择要删除的提交。 它可能不像这里的其他答案那么直接，但是&lt;em&gt;感觉&lt;/em&gt;不错。</target>
        </trans-unit>
        <trans-unit id="bed8454f376e1b184f88003cbd6b1edfaf49e6fe" translate="yes" xml:space="preserve">
          <source>I wanted to undo the latest five commits in our shared repository. I looked up the revision id that I wanted to rollback to. Then I typed in the following.</source>
          <target state="translated">我想撤销我们共享仓库中最新的五个提交。我查找了我想回滚到的版本号。然后我输入了以下内容。</target>
        </trans-unit>
        <trans-unit id="a560cda7686360d77a944e0cfb5e97de36e610a1" translate="yes" xml:space="preserve">
          <source>If the code is already pushed to your server and you have permissions to overwrite history (rebase) then:</source>
          <target state="translated">如果代码已经推送到你的服务器上,并且你有权限覆盖历史记录(rebase),那么。</target>
        </trans-unit>
        <trans-unit id="c9460be25ec62f133f8d36327800804f8a2af073" translate="yes" xml:space="preserve">
          <source>If you already pushed and someone pulled which is usually my case, you can't use &lt;em&gt;git reset&lt;/em&gt;. You can however do a &lt;em&gt;git revert&lt;/em&gt;,</source>
          <target state="translated">如果您已经推送并且有人拉了（通常是我的情况），则不能使用&lt;em&gt;git reset&lt;/em&gt; 。 不过，您可以执行&lt;em&gt;git revert&lt;/em&gt; ，</target>
        </trans-unit>
        <trans-unit id="d5f15b8ae023a698089bc77db5ab3d4b168a76b6" translate="yes" xml:space="preserve">
          <source>If you are planning to undo a local commit entirely, whatever you change you did on the commit, and if you don't worry anything about that, just do the following command.</source>
          <target state="translated">如果你打算完全撤销一个本地提交,无论你在提交上做了什么修改,如果你不担心这个问题,只需执行以下命令即可。</target>
        </trans-unit>
        <trans-unit id="ac08ec78a92e39838063c77fb8fd1846c4512cbd" translate="yes" xml:space="preserve">
          <source>If you are unsure what to use go for &lt;code&gt;--soft&lt;/code&gt; (I used this convention to remember it --&lt;strong&gt;s&lt;/strong&gt;oft for safe).</source>
          <target state="translated">如果您不确定要使用什么，请使用 &lt;code&gt;--soft&lt;/code&gt; （为了安全起见，我经常使用此约定来记住它）。</target>
        </trans-unit>
        <trans-unit id="92afd9e93657a435ef52b0e03807d1807dd8f879" translate="yes" xml:space="preserve">
          <source>If you choose &lt;code&gt;--hard&lt;/code&gt; by mistake you will &lt;strong&gt;LOSE&lt;/strong&gt; your changes as it wasn't before.
If you choose &lt;code&gt;--soft&lt;/code&gt; by mistake you can achieve the same results of &lt;code&gt;--hard&lt;/code&gt; by applying additional commands</source>
          <target state="translated">如果您错误地选择 &lt;code&gt;--hard&lt;/code&gt; ，则将&lt;strong&gt;丢失&lt;/strong&gt;您以前&lt;strong&gt;所做&lt;/strong&gt;的更改。 如果错误地选择 &lt;code&gt;--soft&lt;/code&gt; ，则可以通过应用其他命令来获得 &lt;code&gt;--hard&lt;/code&gt; 相同的结果</target>
        </trans-unit>
        <trans-unit id="b590d6e069a590b56fbf8d8ceea8684845727b5e" translate="yes" xml:space="preserve">
          <source>If you don't want to keep your changes that you made:</source>
          <target state="translated">如果你不想保留你所做的修改。</target>
        </trans-unit>
        <trans-unit id="545b8b09e2fde60d15a7caf7a2a1f99c6203f364" translate="yes" xml:space="preserve">
          <source>If you have &lt;a href=&quot;https://github.com/visionmedia/git-extras&quot;&gt;Git Extras&lt;/a&gt; installed, you can run &lt;code&gt;git undo&lt;/code&gt; to undo the latest commit. &lt;code&gt;git undo 3&lt;/code&gt; will undo the last three commits.</source>
          <target state="translated">如果安装了&lt;a href=&quot;https://github.com/visionmedia/git-extras&quot;&gt;Git Extras&lt;/a&gt; ，则可以运行 &lt;code&gt;git undo&lt;/code&gt; 撤消最新的提交。 &lt;code&gt;git undo 3&lt;/code&gt; 将撤消最后三个提交。</target>
        </trans-unit>
        <trans-unit id="f823a5962df367e6fdec0aa4052d6840cd2b08ec" translate="yes" xml:space="preserve">
          <source>If you have already made your commits public, you will want to create a new commit which will &quot;revert&quot; the changes you made in your previous commit (current HEAD).</source>
          <target state="translated">如果你已经公开了你的提交,你会想创建一个新的提交,它将 &quot;还原 &quot;你在之前的提交(当前的head)中所做的修改。</target>
        </trans-unit>
        <trans-unit id="f0651f2f67dac9208ff3a1b3e1a4f04d544d588d" translate="yes" xml:space="preserve">
          <source>If you have committed junk but not pushed,</source>
          <target state="translated">如果你犯了垃圾,但没有推送。</target>
        </trans-unit>
        <trans-unit id="7785c09968ea9580054de54617314e1a90072ab6" translate="yes" xml:space="preserve">
          <source>If you haven't yet pulled other changes onto your branch, you can simply do...</source>
          <target state="translated">如果你还没有把其他的变化拉到你的分支上,你可以简单地做.....</target>
        </trans-unit>
        <trans-unit id="a11d57718ea5137d0f4e97948ffe77bd14097692" translate="yes" xml:space="preserve">
          <source>If you mess up, you can always use the reflog to find dropped commits:</source>
          <target state="translated">如果你搞砸了,你可以随时使用 reflog 查找掉落的提交。</target>
        </trans-unit>
        <trans-unit id="4b7704af216a5d8993c3dd632427b832aa147b96" translate="yes" xml:space="preserve">
          <source>If you want to get rid of any changes to tracked files in the working tree since the commit before head use &quot;&lt;strong&gt;--hard&lt;/strong&gt;&quot; instead.</source>
          <target state="translated">如果要摆脱对工作树中跟踪文件的任何更改，因为从头开始提交之前，请使用&amp;ldquo; &lt;strong&gt;--hard&lt;/strong&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="b8c4e0c4f9eb69db9098214a74e6fa62262634f8" translate="yes" xml:space="preserve">
          <source>If you want to keep your changes:</source>
          <target state="translated">如果你想保留你的变化。</target>
        </trans-unit>
        <trans-unit id="f98d674a2147560ca4f6f56c7de8b9e87e454038" translate="yes" xml:space="preserve">
          <source>If you want to permanently undo it and you have cloned some repository</source>
          <target state="translated">如果你想永久地撤销它,并且你已经克隆了一些存储库</target>
        </trans-unit>
        <trans-unit id="79e4d2b3dab78ec7f8f9d648a8e637e8c5cdf6d1" translate="yes" xml:space="preserve">
          <source>In both cases, HEAD is just a pointer to the latest commit.  When you do a &lt;code&gt;git reset HEAD~1&lt;/code&gt;, you tell Git to move the HEAD pointer back one commit.  But (unless you use &lt;code&gt;--hard&lt;/code&gt;) you leave your files as they were.  So now &lt;code&gt;git status&lt;/code&gt; shows the changes you had checked into C.  You haven't lost a thing!</source>
          <target state="translated">在这两种情况下，HEAD都只是指向最新提交的指针。 当您执行 &lt;code&gt;git reset HEAD~1&lt;/code&gt; ，您告诉Git将HEAD指针移回一次提交。 但是（除非使用 &lt;code&gt;--hard&lt;/code&gt; ,否则）将文件保持原样。 因此，现在 &lt;code&gt;git status&lt;/code&gt; 显示您已签入C的更改。您还没有丢失任何东西！</target>
        </trans-unit>
        <trans-unit id="47ec07a28aab5e0c0e16658358390f2a6e438889" translate="yes" xml:space="preserve">
          <source>In my case I accidentally committed some files I did not want to. So I did the following and it worked:</source>
          <target state="translated">在我的情况下,我不小心提交了一些我不想提交的文件。于是,我做了下面的事情,结果成功了。</target>
        </trans-unit>
        <trans-unit id="0d2527323f64f5d8fea871e175e37cfb29c99b4d" translate="yes" xml:space="preserve">
          <source>In this case the result is:</source>
          <target state="translated">在这种情况下,结果是:</target>
        </trans-unit>
        <trans-unit id="48d6980cd4c680babe4085de9884fb364be9cbc7" translate="yes" xml:space="preserve">
          <source>It will replace the last commit with the new commit.</source>
          <target state="translated">它将以新的提交取代最后的提交。</target>
        </trans-unit>
        <trans-unit id="1ce693b8524980dd5366b3914043ab67de22c4ea" translate="yes" xml:space="preserve">
          <source>It will show you all the possible actions you have performed on your repository, for example, commit, merge, pull, etc.</source>
          <target state="translated">它将显示你对你的版本库可能执行的所有操作,例如,提交、合并、拉取等。</target>
        </trans-unit>
        <trans-unit id="434b435db25eb9d6ca4b0f1948ee0e821bdc4d6c" translate="yes" xml:space="preserve">
          <source>It works great to undo the last local commit!</source>
          <target state="translated">它的效果很好,可以解开最后的本地提交!</target>
        </trans-unit>
        <trans-unit id="55014a44e7a8cd0bf8523f9da9e42079144270fc" translate="yes" xml:space="preserve">
          <source>Just reset it doing the command below using &lt;code&gt;git&lt;/code&gt;:</source>
          <target state="translated">只需使用 &lt;code&gt;git&lt;/code&gt; 使用以下命令将其重置：</target>
        </trans-unit>
        <trans-unit id="764bbb1e6a4f4eac3ff6ebf5ea1df7c6485f6b6d" translate="yes" xml:space="preserve">
          <source>Just reset your branch to the previous location (for example, using &lt;code&gt;gitk&lt;/code&gt; or &lt;code&gt;git rebase&lt;/code&gt;). Then reapply your changes from a saved copy. After garbage collection in your local repository, it will be like the unwanted commit never happened. To do all of that in a single command, use &lt;code&gt;git reset HEAD~1&lt;/code&gt;.</source>
          <target state="translated">只需将分支重置到先前的位置即可（例如，使用 &lt;code&gt;gitk&lt;/code&gt; 或 &lt;code&gt;git rebase&lt;/code&gt; ）。 然后从保存的副本重新应用您的更改。 在本地存储库中进行垃圾回收之后，就像从未发生过不需要的提交一样。 要在单个命令中完成所有操作，请使用 &lt;code&gt;git reset HEAD~1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa143e5242ba7f88477cc028779e982ff02e331d" translate="yes" xml:space="preserve">
          <source>Let's say I committed locally, but now I want to remove that commit.</source>
          <target state="translated">假设我在本地提交了,但现在我想删除这个提交。</target>
        </trans-unit>
        <trans-unit id="f88ecf2f4eb0c5509c792cd2c61ea44a524baf96" translate="yes" xml:space="preserve">
          <source>Make corrections to working tree files.</source>
          <target state="translated">对工作树文件进行修正。</target>
        </trans-unit>
        <trans-unit id="4bab2d8fe13fa6ab57f80098b414f0f734c5dd25" translate="yes" xml:space="preserve">
          <source>More</source>
          <target state="translated">More</target>
        </trans-unit>
        <trans-unit id="9d267941d727afc18e8d6adafeeb939095f9bdce" translate="yes" xml:space="preserve">
          <source>Nope, there's &lt;em&gt;still&lt;/em&gt; a way to get it back.  Type &lt;code&gt;git reflog&lt;/code&gt; and you'll see a list of (partial) commit &lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-1#Data_integrity&quot;&gt;shas&lt;/a&gt; (that is, hashes) that you've moved around in.  Find the commit you destroyed, and do this:</source>
          <target state="translated">不， &lt;em&gt;仍然&lt;/em&gt;有办法找回它。 键入 &lt;code&gt;git reflog&lt;/code&gt; ，您将看到移入的（部分）提交&lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-1#Data_integrity&quot;&gt;shas&lt;/a&gt; （即哈希）的列表。找到您破坏的提交，然后执行以下操作：</target>
        </trans-unit>
        <trans-unit id="ba9e2c8cb15468450ce2c39e9d69ef458c53d2c9" translate="yes" xml:space="preserve">
          <source>Note that you should only do this if you haven't pushed yet. If you have pushed, then you'll just have to commit a fix normally.</source>
          <target state="translated">注意,只有在你还没有推送的情况下,你才应该这样做。如果你已经推送过,那么你只要正常提交修复就可以了。</target>
        </trans-unit>
        <trans-unit id="eb0e55eeb5dceca2897a65f45806a9fc898030e1" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;git log&lt;/code&gt; will show that our last commit has been removed.</source>
          <target state="translated">现在， &lt;code&gt;git log&lt;/code&gt; 将显示我们的上一次提交已被删除。</target>
        </trans-unit>
        <trans-unit id="3bab947b702439dd330c39ae2e4c46f7cb8fba44" translate="yes" xml:space="preserve">
          <source>Now B is the HEAD.  Because you used &lt;code&gt;--hard&lt;/code&gt;, your files are reset to their state at commit B.</source>
          <target state="translated">现在B是HEAD。 因为使用了 &lt;code&gt;--hard&lt;/code&gt; ，所以文件在提交B时被重置为其状态。</target>
        </trans-unit>
        <trans-unit id="424880fca4f0a16696d650c73990c45dc5fd13d4" translate="yes" xml:space="preserve">
          <source>Now check your git log. It will show that our last commit has been removed.</source>
          <target state="translated">现在检查你的git日志。它将显示我们的最后一次提交已经被删除。</target>
        </trans-unit>
        <trans-unit id="bf9fec7d29523219710c98821dd591c1dec62b9f" translate="yes" xml:space="preserve">
          <source>Now committed files to come from the staged area into the unstaged area. Now files are ready to edit, so whatever you change, you want to go edit and added it and make a fresh/new commit.</source>
          <target state="translated">现在提交的文件要从分阶段区域进入非分阶段区域。现在文件已经可以编辑了,所以无论你改什么,都要去编辑添加,然后重新提交。</target>
        </trans-unit>
        <trans-unit id="118e2b604fe880dcbfe8cb801e5add61dada7d49" translate="yes" xml:space="preserve">
          <source>Now your committed files come into the staging area. Suppose if you want to upstage the files, because you need to edit some wrong content, then do the following command</source>
          <target state="translated">现在,你所提交的文件就会进入暂存区。假设如果你想对文件进行升级,因为你需要编辑一些错误的内容,那么请执行以下命令</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="ec04fa1576124d83caec0f31dc2b502c37152447" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;https://www.atlassian.com/software/sourcetree/overview&quot;&gt;SourceTree&lt;/a&gt; (GUI for GitHub), you may right-click the commit and do a 'Reverse Commit'. This should undo your changes.</source>
          <target state="translated">在&lt;a href=&quot;https://www.atlassian.com/software/sourcetree/overview&quot;&gt;SourceTree&lt;/a&gt; （适用于GitHub的GUI）上，您可以右键单击提交并执行&amp;ldquo;反向提交&amp;rdquo;。 这应该撤消您的更改。</target>
        </trans-unit>
        <trans-unit id="3be3e32c5326ce143c128e27ba5092940dc4853b" translate="yes" xml:space="preserve">
          <source>On the terminal:</source>
          <target state="translated">在终端上。</target>
        </trans-unit>
        <trans-unit id="8c22244631be989f141548fb4e35912929db4e66" translate="yes" xml:space="preserve">
          <source>One more thing: &lt;strong&gt;Suppose you destroy a commit&lt;/strong&gt; as in the first example, &lt;strong&gt;but then discover you needed it after all&lt;/strong&gt;?  Tough luck, right?</source>
          <target state="translated">还有一件事： &lt;strong&gt;假设您&lt;/strong&gt;像第一个示例中那样&lt;strong&gt;破坏了一个提交&lt;/strong&gt; ， &lt;strong&gt;但是毕竟发现您需要它&lt;/strong&gt; ？ 运气不好吧？</target>
        </trans-unit>
        <trans-unit id="7dc1cea9c383121b4bdd496679a8d0e5a949e5b6" translate="yes" xml:space="preserve">
          <source>Or, if it's a shared branch, make a new commit:</source>
          <target state="translated">或者说,如果是共享的分支,就做一个新的提交。</target>
        </trans-unit>
        <trans-unit id="00fcdda14949d42c1610edfba9ca80d41d59564f" translate="yes" xml:space="preserve">
          <source>Or:</source>
          <target state="translated">Or:</target>
        </trans-unit>
        <trans-unit id="a3a8477cedc032d9873371c5e084b9eacf883b9f" translate="yes" xml:space="preserve">
          <source>Perform a &lt;a href=&quot;https://stackoverflow.com/a/1624724/86967&quot;&gt;reverse cherry pick&lt;/a&gt; (&lt;a href=&quot;http://git-scm.com/docs/git-revert.html&quot;&gt;git-revert&lt;/a&gt;) to undo the changes.</source>
          <target state="translated">执行&lt;a href=&quot;https://stackoverflow.com/a/1624724/86967&quot;&gt;反向樱桃挑&lt;/a&gt; （ &lt;a href=&quot;http://git-scm.com/docs/git-revert.html&quot;&gt;git-revert&lt;/a&gt; ）撤消更改。</target>
        </trans-unit>
        <trans-unit id="aa568bf8616f13ac0cc5df25873469e5ccf38ec4" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Add &lt;code&gt;*.class&lt;/code&gt; to a &lt;a href=&quot;https://help.github.com/articles/ignoring-files&quot;&gt;gitignore&lt;/a&gt; to stop this happening again.</source>
          <target state="translated">ProTip&amp;trade;：在&lt;a href=&quot;https://help.github.com/articles/ignoring-files&quot;&gt;gitignore中&lt;/a&gt;添加 &lt;code&gt;*.class&lt;/code&gt; 可以阻止这种情况再次发生。</target>
        </trans-unit>
        <trans-unit id="f4296646777734b2d5b0dac52d1dce522bf88dc3" translate="yes" xml:space="preserve">
          <source>Reflog</source>
          <target state="translated">Reflog</target>
        </trans-unit>
        <trans-unit id="228bdb6590fdd535c6f991003a83abdb52d05a18" translate="yes" xml:space="preserve">
          <source>Replace last commit to new commit:</source>
          <target state="translated">将最后一次提交替换为新的提交。</target>
        </trans-unit>
        <trans-unit id="a51bbf38f0cd3fbaad539d97443c3bd122cc7a58" translate="yes" xml:space="preserve">
          <source>Replace the files in the index:</source>
          <target state="translated">替换索引中的文件。</target>
        </trans-unit>
        <trans-unit id="c9f458823f3bf87219789b17bb6105ceec72b950" translate="yes" xml:space="preserve">
          <source>Sample list</source>
          <target state="translated">样本清单</target>
        </trans-unit>
        <trans-unit id="7a47f0211a3a06ef60fca815c2f7fa0d052c8255" translate="yes" xml:space="preserve">
          <source>Say you have this, where C is your HEAD and (F) is the state of your files.</source>
          <target state="translated">说你有这个,其中C是你的head,(F)是你的文件状态。</target>
        </trans-unit>
        <trans-unit id="5b81be5431b3f51fe1eecc7ca9f7998953def0ed" translate="yes" xml:space="preserve">
          <source>Select the correct reflog (f3cb6e2 in my case) and type</source>
          <target state="translated">选择正确的 reflog(在我的情况下是 f3cb6e2),然后输入</target>
        </trans-unit>
        <trans-unit id="544992601244c08d3f2c44d945be08b5c3005ee5" translate="yes" xml:space="preserve">
          <source>Simple, run this in your command line:</source>
          <target state="translated">很简单,在你的命令行中运行这个。</target>
        </trans-unit>
        <trans-unit id="384f63ad4ebe48d36aae8bc91df1d92970d07504" translate="yes" xml:space="preserve">
          <source>So, instead of amending the commit, you could use:</source>
          <target state="translated">所以,你可以用 &quot;修改提交 &quot;来代替修改 &quot;提交&quot;。</target>
        </trans-unit>
        <trans-unit id="c61884085379673e6ac8b7eec7be567b9fcde876" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hard reset&lt;/code&gt; to &lt;code&gt;HEAD-1&lt;/code&gt; will set your working copy to the state of the commit before your wrong commit.</source>
          <target state="translated">&lt;code&gt;hard reset&lt;/code&gt; 为 &lt;code&gt;HEAD-1&lt;/code&gt; 会将您的工作副本设置为错误提交之前的提交状态。</target>
        </trans-unit>
        <trans-unit id="6896e765622f7e8e802ea0d566f9283443fa59e4" translate="yes" xml:space="preserve">
          <source>The above answer will show you &lt;code&gt;git reflog,&lt;/code&gt; which is used to find out what is the SHA-1, which you wish to revert. Once you found the point to which you want to undo to use the sequence of commands as explained above.</source>
          <target state="translated">上面的答案将向您显示 &lt;code&gt;git reflog,&lt;/code&gt; 用于查找什么是SHA-1，您希望还原该SHA-1。 找到要撤消的点后，即可使用上述命令序列。</target>
        </trans-unit>
        <trans-unit id="ad3af2de9f5b9169a959083791165bc515f4d8e0" translate="yes" xml:space="preserve">
          <source>The commit id can be seen by</source>
          <target state="translated">提交ID可以通过以下方式查看</target>
        </trans-unit>
        <trans-unit id="58fcb381fcbc6c7db9e3a502ede13d4eb30a906f" translate="yes" xml:space="preserve">
          <source>The previous, erroneous commit will be edited to reflect the new index state - in other words, it'll be like you never made the mistake in the first place.</source>
          <target state="translated">之前错误的提交将被编辑,以反映新的索引状态--换句话说,就像你一开始就没有犯过错误一样。</target>
        </trans-unit>
        <trans-unit id="1b14ff29c993ebc2b9d3e10ed4c25659c85141a4" translate="yes" xml:space="preserve">
          <source>The proper way of removing files from the repository history is using &lt;code&gt;git filter-branch&lt;/code&gt;. That is,</source>
          <target state="translated">从存储库历史记录中删除文件的正确方法是使用 &lt;code&gt;git filter-branch&lt;/code&gt; 。 那是，</target>
        </trans-unit>
        <trans-unit id="f9d8170d98950c22e6026933d7548298a3e52f98" translate="yes" xml:space="preserve">
          <source>The result is:</source>
          <target state="translated">其结果是:</target>
        </trans-unit>
        <trans-unit id="07375d484330e1d257b300d0ff824eb22b354bea" translate="yes" xml:space="preserve">
          <source>Then Git will remove commits for any line that you remove.</source>
          <target state="translated">然后Git会删除你删除的任何一行的提交。</target>
        </trans-unit>
        <trans-unit id="f7d9625532d0ba3e8d589b7822d92f026241f016" translate="yes" xml:space="preserve">
          <source>Then amend the commit:</source>
          <target state="translated">然后修改承诺。</target>
        </trans-unit>
        <trans-unit id="2dddb885a6a2b1519c7054126c37d9c20d84517e" translate="yes" xml:space="preserve">
          <source>Then do:</source>
          <target state="translated">那么做。</target>
        </trans-unit>
        <trans-unit id="57bc2c81ed066050c0080e31433ade12c1fafb8c" translate="yes" xml:space="preserve">
          <source>Then navigate to your repository's local directory and run this command:</source>
          <target state="translated">然后导航到你的版本库的本地目录并运行此命令。</target>
        </trans-unit>
        <trans-unit id="88abacbd29c998da201831696ac57ea168428e70" translate="yes" xml:space="preserve">
          <source>Then push your updated branch to the shared repository.</source>
          <target state="translated">然后将你更新的分支推送到共享资源库中。</target>
        </trans-unit>
        <trans-unit id="787fe88f2b0129fd73dd72227713e0132ef9e4a9" translate="yes" xml:space="preserve">
          <source>Then you can do -</source>
          <target state="translated">那么你可以做 -</target>
        </trans-unit>
        <trans-unit id="58ef0881028627c976b0408af21df02ee00ed183" translate="yes" xml:space="preserve">
          <source>Then, if it's a private branch, &lt;strong&gt;amend&lt;/strong&gt; the commit:</source>
          <target state="translated">然后，如果它是一个私有分支，则&lt;strong&gt;修改&lt;/strong&gt;提交：</target>
        </trans-unit>
        <trans-unit id="f5b4fe5fd28171791c03c89b19db5efc46161ac4" translate="yes" xml:space="preserve">
          <source>There are many ways to do it:</source>
          <target state="translated">办法有很多。</target>
        </trans-unit>
        <trans-unit id="b517215080f9f57ee1266f9c4832959714afcc97" translate="yes" xml:space="preserve">
          <source>There are two ways to &quot;undo&quot; your last commit, depending on whether or not you have already made your commit public (pushed to your remote repository):</source>
          <target state="translated">有两种方法可以 &quot;撤销 &quot;你的最后一次提交,这取决于你是否已经公开了你的提交(推送到你的远程仓库)。</target>
        </trans-unit>
        <trans-unit id="417233788326d36a0849294707279d21562f2c68" translate="yes" xml:space="preserve">
          <source>This does nothing to your working tree (the state of your files on disk), but undoes the commit and leaves the changes you committed unstaged (so they'll appear as &quot;Changes not staged for commit&quot; in &lt;code&gt;git status&lt;/code&gt;, so you'll need to add them again before committing). If you &lt;em&gt;only&lt;/em&gt; want to &lt;em&gt;add&lt;/em&gt; more changes to the previous commit, or change the commit message&lt;sup&gt;1&lt;/sup&gt;, you could use &lt;code&gt;git reset --soft HEAD~&lt;/code&gt; instead, which is like &lt;code&gt;git reset HEAD~&lt;/code&gt;&lt;sup&gt;2&lt;/sup&gt; but leaves your existing changes staged.</source>
          <target state="translated">这对您的工作树（磁盘上文件的状态）没有任何作用，但是撤消了提交，并使您提交的更改未进行暂存（因此，它们将在 &lt;code&gt;git status&lt;/code&gt; 中显示为&amp;ldquo; Changes notstaged for commit&amp;rdquo;，因此您将需要在提交之前再次添加它们）。 如果只想对先前的提交&lt;em&gt;添加&lt;/em&gt;更多更改，或更改提交消息&lt;sup&gt;1&lt;/sup&gt; ，则可以改用 &lt;code&gt;git reset --soft HEAD~&lt;/code&gt; ，就像 &lt;code&gt;git reset HEAD~&lt;/code&gt; HEAD〜2一样，但保留现有更改。</target>
        </trans-unit>
        <trans-unit id="e8661cbcc8af74bfe81ccf8b2438af778508864f" translate="yes" xml:space="preserve">
          <source>This is what you want to undo.</source>
          <target state="translated">这就是你要撤销的东西。</target>
        </trans-unit>
        <trans-unit id="c4bd04c3bb8ddaf08d1b9d47df9119bc82bfb257" translate="yes" xml:space="preserve">
          <source>This not only leaves your files alone, it even leaves your &lt;em&gt;index&lt;/em&gt; alone.  When you do &lt;code&gt;git status&lt;/code&gt;, you'll see that the same files are in the index as before.  In fact, right after this command, you could do &lt;code&gt;git commit&lt;/code&gt; and you'd be redoing the same commit you just had.</source>
          <target state="translated">这不仅让您的文件独自一人，甚至使&lt;em&gt;索引也&lt;/em&gt;独自一人。 当您执行 &lt;code&gt;git status&lt;/code&gt; 时 ，您将看到与以前相同的文件在索引中。 实际上，在此命令之后，您可以执行 &lt;code&gt;git commit&lt;/code&gt; ,并且将重做刚才的相同提交。</target>
        </trans-unit>
        <trans-unit id="8df96dbb30132f0b506ad616256c325680ff75d6" translate="yes" xml:space="preserve">
          <source>This will create a new commit that reverses everything introduced by the accidental commit.</source>
          <target state="translated">这将创建一个新的提交,推翻意外提交所引入的一切。</target>
        </trans-unit>
        <trans-unit id="1c68f6f7024438aa3046a481d2c1addaf9440e70" translate="yes" xml:space="preserve">
          <source>This will erase all commits after the current one in your local repository but only for that one branch.</source>
          <target state="translated">这将删除本地版本库中当前提交之后的所有提交,但只删除该分支。</target>
        </trans-unit>
        <trans-unit id="e5d864ef61188c067247dc117b9d493c92af15d6" translate="yes" xml:space="preserve">
          <source>This will undo the last commit.</source>
          <target state="translated">这将撤销上次的提交。</target>
        </trans-unit>
        <trans-unit id="fd45238e29dd02dc22a0e8b874da6694dac6a7b8" translate="yes" xml:space="preserve">
          <source>To change the last commit</source>
          <target state="translated">要改变最后一次提交</target>
        </trans-unit>
        <trans-unit id="f7ecd59212ea06cb251595c98d9761566201ee77" translate="yes" xml:space="preserve">
          <source>To get the commit ID, just use &lt;code&gt;git log&lt;/code&gt;.</source>
          <target state="translated">要获取提交ID，只需使用 &lt;code&gt;git log&lt;/code&gt; 即可 。</target>
        </trans-unit>
        <trans-unit id="f3e5f00b679bf8a2fd82d5943bfc1b8180be393c" translate="yes" xml:space="preserve">
          <source>To reset to the previous revision, permanently deleting all uncommitted changes:</source>
          <target state="translated">要重置到以前的版本,永久删除所有未提交的更改。</target>
        </trans-unit>
        <trans-unit id="364915e8415cb926f99019355ae5fa7268bf67ff" translate="yes" xml:space="preserve">
          <source>To restore everything back to the way it was prior to the last commit, we need to &lt;code&gt;reset&lt;/code&gt; to the commit before &lt;code&gt;HEAD&lt;/code&gt;:</source>
          <target state="translated">要将所有内容恢复到上一次提交之前的状态，我们需要 &lt;code&gt;reset&lt;/code&gt; 为 &lt;code&gt;HEAD&lt;/code&gt; 之前的提交：</target>
        </trans-unit>
        <trans-unit id="bee3fd8738db503b894e0a360e47747e6dee2760" translate="yes" xml:space="preserve">
          <source>To restore everything back to the way it was prior to the last commit, we need to reset to the commit before HEAD.</source>
          <target state="translated">为了将一切恢复到上次提交之前的状态,我们需要重置到head之前的提交。</target>
        </trans-unit>
        <trans-unit id="75686a9625b4e2498d5fa2138994a326e5cc11f9" translate="yes" xml:space="preserve">
          <source>To revert a commit</source>
          <target state="translated">要恢复提交</target>
        </trans-unit>
        <trans-unit id="a373c77926edebc3a21cf9731990bdbcee955ebc" translate="yes" xml:space="preserve">
          <source>Type &lt;code&gt;git log&lt;/code&gt; and find the last commit hash code and then enter:</source>
          <target state="translated">键入 &lt;code&gt;git log&lt;/code&gt; 并找到最后一个提交哈希码，然后输入：</target>
        </trans-unit>
        <trans-unit id="afa47a28efb9d6631a7be02ac359bed5256995ce" translate="yes" xml:space="preserve">
          <source>Undo a commit and redo</source>
          <target state="translated">撤销提交并重做</target>
        </trans-unit>
        <trans-unit id="3b67eeb3e61caf688cb7c81873626da30faa3d61" translate="yes" xml:space="preserve">
          <source>Undo last commit:</source>
          <target state="translated">撤销最后一次提交。</target>
        </trans-unit>
        <trans-unit id="afac4f007ba7b7df3fb7fdbffe3f3e74cda2d364" translate="yes" xml:space="preserve">
          <source>Undoing a commit is a little scary if you don't know how it works.  But it's actually amazingly easy if you do understand.</source>
          <target state="translated">如果你不知道如何工作,撤销提交是有点可怕的。但如果你了解的话,其实很容易。</target>
        </trans-unit>
        <trans-unit id="527a3d707ed3f36d3cc4c2c60c12aa4ba2061adf" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git revert &amp;lt;commit-id&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;git revert &amp;lt;commit-id&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17494ec1a4542bf7ad8f58925cb973c44f592f59" translate="yes" xml:space="preserve">
          <source>Use git-gui (or similar) to perform a &lt;code&gt;git commit --amend&lt;/code&gt;. From the GUI you can add or remove individual files from the commit. You can also modify the commit message.</source>
          <target state="translated">使用git-gui（或类似的工具）执行 &lt;code&gt;git commit --amend&lt;/code&gt; 。 在GUI中，您可以从提交中添加或删除单个文件。 您还可以修改提交消息。</target>
        </trans-unit>
        <trans-unit id="b37a8fc5dec9e88384a5815f0fc9f9267200f359" translate="yes" xml:space="preserve">
          <source>Use reflog to find a correct state</source>
          <target state="translated">使用 reflog 找到一个正确的状态</target>
        </trans-unit>
        <trans-unit id="fc88747b112f50b032af5f463b4ec5374faf088d" translate="yes" xml:space="preserve">
          <source>Verify the results with gitk or git log --stat</source>
          <target state="translated">用 gitk 或 git log --stat 验证结果。</target>
        </trans-unit>
        <trans-unit id="0d8399af986a2f681f49e457e4031115af127538" translate="yes" xml:space="preserve">
          <source>WHAT TO USE, &lt;code&gt;reset --soft&lt;/code&gt; or &lt;code&gt;reset --hard&lt;/code&gt;?</source>
          <target state="translated">使用什么， &lt;code&gt;reset --soft&lt;/code&gt; 或 &lt;code&gt;reset --hard&lt;/code&gt; ？</target>
        </trans-unit>
        <trans-unit id="c0e5ef70b045d544d0e8ef7bd1b582082ad89dcd" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;N&lt;/code&gt; is the number of commits before &lt;code&gt;HEAD&lt;/code&gt;, and &lt;code&gt;@~&lt;/code&gt; resets to the previous commit.</source>
          <target state="translated">其中 &lt;code&gt;N&lt;/code&gt; 是 &lt;code&gt;HEAD&lt;/code&gt; 之前的提交次数， &lt;code&gt;@~&lt;/code&gt; 重置为前一个提交。</target>
        </trans-unit>
        <trans-unit id="ba09fa6b55a3bdb0facb3573158b662f2856f540" translate="yes" xml:space="preserve">
          <source>Why ?</source>
          <target state="translated">为什么?</target>
        </trans-unit>
        <trans-unit id="f77dcb737382201699fd807f32d2ef464e059eab" translate="yes" xml:space="preserve">
          <source>You can also look at this answer:</source>
          <target state="translated">你也可以看看这个答案。</target>
        </trans-unit>
        <trans-unit id="a9baef947952148a6b8c07e12ad056f1e693d5f0" translate="yes" xml:space="preserve">
          <source>You can do this, leaving off the &lt;code&gt;--hard&lt;/code&gt;:</source>
          <target state="translated">您可以执行此操作，而无需使用 &lt;code&gt;--hard&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="1c518c3dc0194146d3105b7bacb73d7851904ba4" translate="yes" xml:space="preserve">
          <source>You can get the commit id as shown below:</source>
          <target state="translated">你可以得到如下所示的提交ID。</target>
        </trans-unit>
        <trans-unit id="215b9c05c06a967758936d7cec4b32af139ed2db" translate="yes" xml:space="preserve">
          <source>You can reset Git to any commit with:</source>
          <target state="translated">你可以用以下方法重置Git到任何提交。</target>
        </trans-unit>
        <trans-unit id="b0ffab06386f036078ee5c141fa7b05c6c6c54d8" translate="yes" xml:space="preserve">
          <source>You may alternatively use:</source>
          <target state="translated">你可以选择使用:</target>
        </trans-unit>
        <trans-unit id="e01f6fdff388a1a630d0ac94dc51bca2aaad50a8" translate="yes" xml:space="preserve">
          <source>You want to &lt;strong&gt;nuke commit C and never see it again and lose all the changes in locally modified files&lt;/strong&gt;.  You do this:</source>
          <target state="translated">您想&lt;strong&gt;核对commit C，而再也看不到它，并且丢失本地修改文件中的所有更改&lt;/strong&gt; 。 你做这个：</target>
        </trans-unit>
        <trans-unit id="d0b165d922f19e1f233bdb577fc15fa1ea881b4c" translate="yes" xml:space="preserve">
          <source>You've now resurrected that commit.  Commits don't actually get destroyed in Git for some 90 days, so you can usually go back and rescue one you didn't mean to get rid of.</source>
          <target state="translated">你现在已经复活了那个提交。在 Git 中,提交在 90 天内是不会被销毁的,所以你通常可以返回去拯救一个你不想删除的提交。</target>
        </trans-unit>
        <trans-unit id="0a61b6f39531ea93e30bbb21c45d5ee711a2be05" translate="yes" xml:space="preserve">
          <source>Your changes will now be reverted and ready for you to commit:</source>
          <target state="translated">现在,您的更改将被还原,并准备好提交给您。</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="03135c7009cfc08876f79a30dca601b49f8effed" translate="yes" xml:space="preserve">
          <source>or if you do not remember exactly in which commit it is, you might use</source>
          <target state="translated">或者如果你不记得是在哪个提交中,你可以用</target>
        </trans-unit>
        <trans-unit id="2fb5b3318c3e30b1122b4260899788b41e5dda5b" translate="yes" xml:space="preserve">
          <source>see - &lt;a href=&quot;http://jonas.nitro.dk/git/quick-reference.html&quot;&gt;Git Quick Reference&lt;/a&gt;</source>
          <target state="translated">请参阅&lt;a href=&quot;http://jonas.nitro.dk/git/quick-reference.html&quot;&gt;-Git快速参考&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34f5b9344105c04a4cd55be4110d43794e7c9419" translate="yes" xml:space="preserve">
          <source>where &lt;strong&gt;d81d3f1&lt;/strong&gt; and &lt;strong&gt;be20eb8&lt;/strong&gt; are commit id.</source>
          <target state="translated">其中&lt;strong&gt;d81d3f1&lt;/strong&gt;和&lt;strong&gt;be20eb8&lt;/strong&gt;是提交ID。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
