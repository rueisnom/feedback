<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/9229645">
    <body>
      <group id="9229645">
        <trans-unit id="545ccbaeb6c5eadd96d8aaf423358b6394811b09" translate="yes" xml:space="preserve">
          <source>&quot;Smart&quot; but na&amp;iuml;ve way</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;聪明&amp;rdquo;但幼稚的方式&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="58d24873a3fc1f2581ffb3c8c6ed219719ff1409" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot;&gt;Here&lt;/a&gt; is nice explanation of &lt;code&gt;Array.filter()&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt; &lt;code&gt;Array.filter()&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;很好的解释&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="995e9e0e5ed903ff01666d2a756fe857488bba64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_.uniq(array, [isSorted], [iterator])&lt;/code&gt;&lt;em&gt;Alias:&lt;/em&gt;&lt;strong&gt;unique&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;_.uniq(array, [isSorted], [iterator])&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;别名：&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;唯一&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a03992f86bbb97f9454701a5854982efc0c04f7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uniqueBy&lt;/code&gt; isn't as fast as an imperative implementation with loops, but it is way more expressive due to its genericity.</source>
          <target state="translated">&lt;code&gt;uniqueBy&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;速度不如带有循环的命令式实现快，但由于其通用性，它的表达方式更加出色。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cdd3bb84934ff61728eb9a490ffb508207ff4e0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uniqueBy&lt;/code&gt; utilizes mutations (&lt;code&gt;push(x) (acc)&lt;/code&gt;) hidden inside its body. It reuses the accumulator instead of throwing it away after each iteration. This reduces memory consumption and GC pressure. Since this side effect is wrapped inside the function, everything outside remains pure.</source>
          <target state="translated">&lt;code&gt;uniqueBy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;利用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;隐藏在其体内的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;变异（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;push(x) (acc)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它重复使用累加器，而不是在每次迭代后将其丢弃。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这样可以减少内存消耗和GC压力。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于此副作用包含在函数内部，因此外部的所有内容都保持纯净。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d312cb48b363793232813139a115ef6f51aedee8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: &lt;a href=&quot;http://lodash.com&quot;&gt;Lo-Dash&lt;/a&gt; (an &lt;a href=&quot;http://underscorejs.org/&quot;&gt;underscore&lt;/a&gt; competitor) also offers a comparable &lt;a href=&quot;http://lodash.com/docs#uniq&quot;&gt;.uniq&lt;/a&gt; implementation.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://lodash.com&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo-Dash&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://underscorejs.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;下划线&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;竞争对手）还提供了类似的&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://lodash.com/docs#uniq&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.uniq&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实现。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cdceb3de3f861e5954bc6fe33ff5ba380aa54a71" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2019 edit:&lt;/strong&gt; Modern versions of JavaScript make this a much easier problem to solve.  Using &lt;code&gt;Set&lt;/code&gt; will work, regardless of whether your array contains objects, strings, numbers, or any other type.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2019编辑：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现代版本的JavaScript使这个问题更容易解决。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;无论您的数组包含对象，字符串，数字还是任何其他类型，都可以&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Set&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进行工作。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0e21d62008df898624989d75d47e7cb09c6a5375" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://jsfiddle.net/ZNLUP/1/&quot;&gt;Example&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://jsfiddle.net/ZNLUP/1/&quot;&gt;Example&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e3bdb51f61286b91e876af275ac900201c1f8a95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://underscorejs.org/#uniq&quot;&gt;_.uniq&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://underscorejs.org/#uniq&quot;&gt;_.uniq&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a54f91ace3b2ad56bcf413aa86d26962a4ba6335" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ECMAScript 6: Use the new Set data structure (order-safe)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript 6：使用新的Set数据结构（顺序安全）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4a97222c41b3523d91d2a7194468abc0762f7ee2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example usage:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用法示例：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="48bf5499e3ac63560ca0e0106a29021adb072bfb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Performance&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Performance&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="21aa429fd1f960433948c85037e5c8a8b7b989ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Solution 1&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;解决方案1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b92c9843bad7e62d5c47d0d1653f2216299facdc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Solution 2 (using Set)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;解决方案2（使用设置）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="65ea5aea422a6fb8b4ebd86dc44393c9f42161c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Test&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Test&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="693e8c2fd79ed99956157996c6819d2278b8d50f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is probably one of the fastest way to remove permanently the duplicates from an array&lt;/strong&gt;
10x times faster than the most functions here.&amp;amp; 78x faster in safari</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这可能是从阵列中永久删除重复项的最快方法之一，&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 比此处的大多数功能快10倍。在Safari中快78倍。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="16711543421929b031abbd4ca5cd76cc5084d772" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Vanilla JS: Remove duplicates by tracking already seen values (order-safe)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vanilla JS：通过跟踪已经看到的值来删除重复项（顺序安全）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="07f1d1fb1e7285534783acf3cbd3f5e1c2fbe825" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Vanilla JS: Remove duplicates using an Object like a Set&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vanilla JS：使用类似Set的对象删除重复项&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9178dc66b6ef86ddf72367ece3117f6f2bca4296" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;here is the simple method without any special libraries are special function,&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是简单的方法，没有任何特殊的库是特殊的功能，&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="951f540d63d2a9bd5664916fc0725d2c88d41882" translate="yes" xml:space="preserve">
          <source>A &quot;lazy&quot;, generator-based version of &lt;code&gt;uniq&lt;/code&gt; can be built on the same basis:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A&amp;ldquo;懒&amp;rdquo;，基于生成器的版本&lt;/font&gt;&lt;/font&gt; &lt;code&gt;uniq&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可建在同一基础上：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="07a62db85b2117b350bb4cd41710e9ab8906b47f" translate="yes" xml:space="preserve">
          <source>A particularly useful &lt;code&gt;key()&lt;/code&gt; is &lt;code&gt;JSON.stringify&lt;/code&gt; which will remove objects that are physically different, but &quot;look&quot; the same:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;JSON.stringify&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个特别有用的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;key()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它将删除物理上不同但&amp;ldquo;看起来&amp;rdquo;相同的对象：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95415bb6a579cb4f5c8ba0ceafdf9a061fbc4dcd" translate="yes" xml:space="preserve">
          <source>A simple but effective technique, is to use the &lt;code&gt;filter&lt;/code&gt; method in combination with the filter &lt;code&gt;function(value, index){ return this.indexOf(value) == index }&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一种简单但有效的技术是将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;filter&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法与filter &lt;/font&gt;&lt;/font&gt; &lt;code&gt;function(value, index){ return this.indexOf(value) == index }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a878f8064854c12f88684f87d5edccf9e99cd3c" translate="yes" xml:space="preserve">
          <source>A single line version using array filter and indexOf functions:</source>
          <target state="translated">一个使用数组过滤器和indexOf函数的单行版本。</target>
        </trans-unit>
        <trans-unit id="968334a83172654e833d9ad9bee60f4593ec84c5" translate="yes" xml:space="preserve">
          <source>A slight modification of thg435's excellent answer to use a custom comparator:</source>
          <target state="translated">略微修改一下THG435的优秀答案,使用自定义比较器。</target>
        </trans-unit>
        <trans-unit id="82727c37fc882dca53361a569c38f63e752d01ca" translate="yes" xml:space="preserve">
          <source>A universal solution combines both approaches: it uses hash lookups for primitives and linear search for objects.</source>
          <target state="translated">一个通用的解决方案结合了这两种方法:它使用哈希查找基元和线性搜索对象的方法。</target>
        </trans-unit>
        <trans-unit id="6c563c21f20fe92abf54d4d1e6c370b0dce20ec2" translate="yes" xml:space="preserve">
          <source>Again, this doesn't work with objects (because all objects are equal for &lt;code&gt;sort&lt;/code&gt;). Additionally, we silently change the original array as a side effect - not good! However, if your input is already sorted, this is the way to go (just remove &lt;code&gt;sort&lt;/code&gt; from the above).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同样，这不适用于对象（因为所有对象的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sort&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相等&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此外，我们无声地更改了原始数组，这是一个副作用-不好！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，如果您的输入已经排序，这就是方法（只需&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从上面&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;删除&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sort&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1112e1a1136768b03425b1d614b072734f9a6f90" translate="yes" xml:space="preserve">
          <source>Although ES6 Solution is the best, I'm baffled as to how nobody has shown the following solution:</source>
          <target state="translated">虽然ES6的解决方案是最好的,但我很困惑的是,为什么没有人提出以下解决方案。</target>
        </trans-unit>
        <trans-unit id="cced73bd84dbbc926ab22fece5468cc51393b47d" translate="yes" xml:space="preserve">
          <source>Although concise, this algorithm is not particularly efficient for large arrays (quadratic time).</source>
          <target state="translated">这种算法虽然简洁,但对于大数组(二次元时间)来说,效率并不是特别高。</target>
        </trans-unit>
        <trans-unit id="1b8526fb50e81a179dc83cfe52a9aa2ac78cb27c" translate="yes" xml:space="preserve">
          <source>Another option is to sort the array first, and then remove each element equal to the preceding one:</source>
          <target state="translated">另一种方法是先对数组进行排序,然后将每一个与前面的元素相等的元素删除。</target>
        </trans-unit>
        <trans-unit id="0e311d9ee85ba5d7553634e3dbd1d24ebfc058ce" translate="yes" xml:space="preserve">
          <source>Apart from being a simpler, more terse solution than the current answers (minus the future-looking ES6 ones), I perf tested this and it was much faster as well:</source>
          <target state="translated">除了比现在的答案更简单,更简洁的解决方案(减去了未来的ES6的答案),我敷衍了事,而且速度也快了很多。</target>
        </trans-unit>
        <trans-unit id="693617f23b1d9b82b6ddaf03427bdce5100c36f7" translate="yes" xml:space="preserve">
          <source>Basically, we iterate over the array and, for each element, check if the first position of this element in the array is equal to the current position. Obviously, these two positions are different for duplicate elements.</source>
          <target state="translated">基本上,我们对数组进行迭代,对于每个元素,检查这个元素在数组中的第一个位置是否等于当前位置。很明显,这两个位置对于重复的元素是不同的。</target>
        </trans-unit>
        <trans-unit id="2b69cb94e2fd02706e10676920008541b3213bba" translate="yes" xml:space="preserve">
          <source>Bear in mind though that this also sorts the array.</source>
          <target state="translated">但请记住,这也是对阵列进行分类。</target>
        </trans-unit>
        <trans-unit id="2e679bc577c84e239a221c9ab80c702c7dc59b46" translate="yes" xml:space="preserve">
          <source>Benefits of this approach:</source>
          <target state="translated">这种方法的好处:</target>
        </trans-unit>
        <trans-unit id="ea0df8386c4a7b2c2679f6ebcd420fd8589e491a" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;http://underscorejs.org/#uniq&quot;&gt;underscore&lt;/a&gt; and &lt;a href=&quot;https://lodash.com/docs#uniq&quot;&gt;Lo-Dash&lt;/a&gt; provide &lt;code&gt;uniq&lt;/code&gt; methods. Their algorithms are basically similar to the first snippet above and boil down to this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;无论&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://underscorejs.org/#uniq&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;下划线&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://lodash.com/docs#uniq&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;罗短跑&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;提供&lt;/font&gt;&lt;/font&gt; &lt;code&gt;uniq&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他们的算法基本上类似于上面的第一个代码片段，归结为：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6be24a97cdca9d9739d2f77bbc3f540977649073" translate="yes" xml:space="preserve">
          <source>Code example :</source>
          <target state="translated">代码示例。</target>
        </trans-unit>
        <trans-unit id="da723bc38aaf5f90859a67c0ad3328d59c066d34" translate="yes" xml:space="preserve">
          <source>D3.js</source>
          <target state="translated">D3.js</target>
        </trans-unit>
        <trans-unit id="071f175015a0f29b2243cd5a1dec24776d6a708a" translate="yes" xml:space="preserve">
          <source>Demo: &lt;a href=&quot;http://jsfiddle.net/46S7g/&quot;&gt;http://jsfiddle.net/46S7g/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;演示：&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/46S7g/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//jsfiddle.net/46S7g/&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="119a17a5588ca2c9539c4d577428f4c29af39e36" translate="yes" xml:space="preserve">
          <source>ECMAScript 6 adds the new &lt;code&gt;Set&lt;/code&gt; Data-Structure, which lets you store values of any type.  &lt;code&gt;Set.values&lt;/code&gt; returns elements in insertion order.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript 6添加了新的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Set&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Data-Structure，它使您可以存储任何类型的值。 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Set.values&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;按插入顺序返回元素。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f340712260381d35a53813a65d261137ac25e7e6" translate="yes" xml:space="preserve">
          <source>ES6</source>
          <target state="translated">ES6</target>
        </trans-unit>
        <trans-unit id="4dc5c144fd599775e0cb5c2819fefe484bbb50f0" translate="yes" xml:space="preserve">
          <source>ES6 provides the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;Set&lt;/a&gt; object, which makes things a whole lot easier:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6提供了&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Set&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象，这使事情变得容易得多：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">扩展片段</target>
        </trans-unit>
        <trans-unit id="62e61d677b74097f1324d0c47e3e4c694a67d9c8" translate="yes" xml:space="preserve">
          <source>Faster uniq with sorting</source>
          <target state="translated">更快的分拣</target>
        </trans-unit>
        <trans-unit id="5f07110dd5176567a6f93044cb1c87801610ae12" translate="yes" xml:space="preserve">
          <source>First or last?</source>
          <target state="translated">第一个还是最后一个?</target>
        </trans-unit>
        <trans-unit id="1fba1a8f8ac05db4a7ffb2d3a384f65031ecf0a2" translate="yes" xml:space="preserve">
          <source>Function calls are expensive in JavaScript, therefore the above solutions, as concise as they are, are not particularly efficient. For maximal performance, replace &lt;code&gt;filter&lt;/code&gt; with a loop and get rid of other function calls:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数调用在JavaScript中非常昂贵，因此，上述解决方案虽然非常简洁，但并不是特别有效。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为了获得最佳性能，请用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;循环&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;替换&lt;/font&gt;&lt;/font&gt; &lt;code&gt;filter&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并摆脱其他函数调用：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a3e705cc61a19f33d7c9c030f107a70569966485" translate="yes" xml:space="preserve">
          <source>Generators</source>
          <target state="translated">Generators</target>
        </trans-unit>
        <trans-unit id="325969aad6efa6a4492a383509a4216afef4fd35" translate="yes" xml:space="preserve">
          <source>Generic Functional Approach</source>
          <target state="translated">通用功能方法</target>
        </trans-unit>
        <trans-unit id="f20c7800e07e5893ff765d93af93f5768dc8f851" translate="yes" xml:space="preserve">
          <source>Get all non-unique values (i.e.: duplicate/more than one occurrence) in an array</source>
          <target state="translated">获取数组中的所有非唯一值(即:重复出现的次数超过一次)。</target>
        </trans-unit>
        <trans-unit id="ca9caa9d6215f630d599081a01ca1d412a5ec674" translate="yes" xml:space="preserve">
          <source>Go for this one:</source>
          <target state="translated">去买这个吧。</target>
        </trans-unit>
        <trans-unit id="37f725fcd879ca56633a90748ea73597e6704eb9" translate="yes" xml:space="preserve">
          <source>Got tired of seeing all bad examples with for-loops or jQuery. Javascript has the perfect tools for this nowadays: sort, map and reduce.</source>
          <target state="translated">看腻了所有使用for-loops或jQuery的坏例子。现在的Javascript有完美的工具:排序、映射和减少。</target>
        </trans-unit>
        <trans-unit id="306fc68e40113d3486ca591f2b04bb22a3b7fc46" translate="yes" xml:space="preserve">
          <source>Hashtables to the rescue</source>
          <target state="translated">救援哈士奇表</target>
        </trans-unit>
        <trans-unit id="df6d2eab3d4ffaec2b30c4b30f1d175bcb142186" translate="yes" xml:space="preserve">
          <source>Here is a generic and strictly functional approach with ES2015:</source>
          <target state="translated">下面就以ES2015为例,严格意义上的通用性和功能性。</target>
        </trans-unit>
        <trans-unit id="3d8d2da92e3cf1ae944d73658d74a427be5090a2" translate="yes" xml:space="preserve">
          <source>Here is a simple answer to the question.</source>
          <target state="translated">下面是一个简单的答案。</target>
        </trans-unit>
        <trans-unit id="1aaf61be25efa7f5a29b138cb733c7ac8207d756" translate="yes" xml:space="preserve">
          <source>Here is very simple for understanding and working anywhere (even in PhotoshopScript) code. Check it!</source>
          <target state="translated">这里是非常简单的理解和工作在任何地方(甚至在PhotoshopScript中)的代码。检查它!</target>
        </trans-unit>
        <trans-unit id="fc157aff3805697c4605ed92fa9f614748b76f5d" translate="yes" xml:space="preserve">
          <source>However, if you need an array with unique elements, why not use sets right from the beginning?</source>
          <target state="translated">但是,如果你需要一个具有唯一元素的数组,为什么不一开始就使用集呢?</target>
        </trans-unit>
        <trans-unit id="17e70a10c792690d43997eb63da08ec4691a0202" translate="yes" xml:space="preserve">
          <source>I believe this is the best way to do this</source>
          <target state="translated">我相信这是最好的办法。</target>
        </trans-unit>
        <trans-unit id="474d6962cc2b53f1812502f640e5c172d5647568" translate="yes" xml:space="preserve">
          <source>I could point to all the codes that I've tried but I think it's useless because they don't work. I accept jQuery solutions too.</source>
          <target state="translated">我可以指出我试过的所有代码,但我认为没有用,因为它们不起作用。我也接受jQuery的解决方案。</target>
        </trans-unit>
        <trans-unit id="ee05eff2251d0b84a0e95f84a8c352222dbd8f24" translate="yes" xml:space="preserve">
          <source>I had done a detailed comparison of dupes removal at some other question but having noticed that this is the real place i just wanted to share it here as well.</source>
          <target state="translated">我曾在其他一些问题上做了一个详细的比较,但注意到这里是真正的地方,我只想在这里分享。</target>
        </trans-unit>
        <trans-unit id="0bc6794192adc78c20c5964545cd64cb0038bf78" translate="yes" xml:space="preserve">
          <source>I have a very simple JavaScript array that may or may not contain duplicates.</source>
          <target state="translated">我有一个非常简单的JavaScript数组,可能包含或不包含重复的内容。</target>
        </trans-unit>
        <trans-unit id="63e0cb18e79ace78ff32f62709207324c1710b04" translate="yes" xml:space="preserve">
          <source>I need to remove the duplicates and put the unique values in a new array.</source>
          <target state="translated">我需要删除重复的值,并将唯一的值放到一个新的数组中。</target>
        </trans-unit>
        <trans-unit id="73e031ed418e5210dcc5f12cb652d371edea5ffe" translate="yes" xml:space="preserve">
          <source>If by any chance you were using</source>
          <target state="translated">如果你在使用</target>
        </trans-unit>
        <trans-unit id="a437e7d2838cef61cfe7addea4b3ef534ddb827c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;key&lt;/code&gt; is not primitive, you have to resort to the linear search:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果&lt;/font&gt;&lt;/font&gt; &lt;code&gt;key&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不是原始&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;键，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;则必须诉诸线性搜索：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d1d6b7a33ee0a8e4800ddaea96bac45164f10742" translate="yes" xml:space="preserve">
          <source>If you identify &lt;code&gt;uniqueBy&lt;/code&gt; as the cause of a concrete performance penalty in your app, replace it with optimized code. That is, write your code first in an functional, declarative way. Afterwards, provided that you encounter performance issues, try to optimize the code at the locations, which are the cause of the problem.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;uniqueBy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;确定&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为导致应用程序具体性能&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;下降&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的原因，请用优化的代码代替。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;也就是说，首先以功能性的声明方式编写代码。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此后，如果遇到性能问题，请尝试在引起问题的位置优化代码。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ab0e7dce3a908fc76ed51abf9ce326ecd69fa572" translate="yes" xml:space="preserve">
          <source>If you're using jQuery and can't stand anything without a dollar before it, it goes like this:</source>
          <target state="translated">如果你在使用jQuery,而且前面没有一元钱的东西是受不了的,那么它是这样的。</target>
        </trans-unit>
        <trans-unit id="3ae2dc00a66fdb22a311cc02495ede59bedc1485" translate="yes" xml:space="preserve">
          <source>In ECMAScript 6 (aka ECMAScript 2015), &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; can be used to filter out duplicates. Then it can be converted back to an array using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;spread operator&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在ECMAScript 6（又名ECMAScript 2015）中，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;过滤出重复项。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;然后可以使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;散布运算符&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将其转换回数组&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5e544d373fe6916aa41b2a5e1f371276a9bcb65b" translate="yes" xml:space="preserve">
          <source>In ES6 you can use a &lt;code&gt;Set&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在ES6中，您可以使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Set&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="167dc2dcc835e6c3326aed0689ba6dc35074c355" translate="yes" xml:space="preserve">
          <source>In ES6 you have Sets and Spread which makes it very easy and performant to remove all duplicates:</source>
          <target state="translated">在ES6中,你有了Sets和Spread,这使得删除所有重复的内容变得非常容易和有效。</target>
        </trans-unit>
        <trans-unit id="8989c181d4d1b67f8d668569a17e489505f527a8" translate="yes" xml:space="preserve">
          <source>In chrome  v51 reduce &amp;amp; lut : 23.90ms vs filter &amp;amp; indexOf : 1066ms</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在chrome v51中reduce＆lut：23.90ms vs filter＆indexOf：1066ms&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fa679ec33507102effbf778174e8c2631726af00" translate="yes" xml:space="preserve">
          <source>In firefox v47 reduce &amp;amp; lut : 14.85ms vs filter &amp;amp; indexOf : 2836ms</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在firefox v47中reduce＆lut：14.85ms vs filter＆indexOf：2836ms&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cea7ad738688d995989a24aaafa8546f256b3f7c" translate="yes" xml:space="preserve">
          <source>It's a library with a host of functions for manipulating arrays.</source>
          <target state="translated">它是一个拥有大量操作数组的函数的库。</target>
        </trans-unit>
        <trans-unit id="94b3de46d5fda8e179f2f28c575f153e17e60955" translate="yes" xml:space="preserve">
          <source>It's the tie to go along with jQuery's tux, and Backbone.js's
  suspenders.</source>
          <target state="translated">这是jQuery的礼服和Backbone.js的吊带搭配的领带。</target>
        </trans-unit>
        <trans-unit id="27c968e6692b41bf6e1a241b870dc41ff1a51b17" translate="yes" xml:space="preserve">
          <source>Libraries</source>
          <target state="translated">Libraries</target>
        </trans-unit>
        <trans-unit id="c81f35699be685add34bac0ef905ea52b6be0ebe" translate="yes" xml:space="preserve">
          <source>Memory Consumption and Garbage Collection</source>
          <target state="translated">内存消耗和垃圾回收</target>
        </trans-unit>
        <trans-unit id="47ae1edb4b6ab8e1304013b0910592cd36981138" translate="yes" xml:space="preserve">
          <source>More: &lt;a href=&quot;https://stackoverflow.com/a/25082874/2450730&quot;&gt;https://stackoverflow.com/a/25082874/2450730&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更多：&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/25082874/2450730&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//stackoverflow.com/a/25082874/2450730&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="85ebca451fa590d9155f3e01f22e262f73022640" translate="yes" xml:space="preserve">
          <source>My test case comparison:
&lt;a href=&quot;http://jsperf.com/remove-duplicate-array-tests&quot;&gt;http://jsperf.com/remove-duplicate-array-tests&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我的测试案例比较：&lt;/font&gt;&lt;a href=&quot;http://jsperf.com/remove-duplicate-array-tests&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//jsperf.com/remove-duplicate-array-tests&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec0b4f527e5af3d0adc23eca5a85a60e6594e249" translate="yes" xml:space="preserve">
          <source>Note that, unlike in python, ES6 sets are iterated in insertion order, so this code preserves the order of the original array.</source>
          <target state="translated">请注意,与python中不同,ES6集是按插入顺序迭代的,所以这段代码保留了原始数组的顺序。</target>
        </trans-unit>
        <trans-unit id="b47bd34a85a2811e200020c3cbdd86b83d777f79" translate="yes" xml:space="preserve">
          <source>Now this is the spectacular comeback of Map()..! May be now you can make a better decision when you want to remove the dupes.</source>
          <target state="translated">现在,这就是Map()的壮观复出.....! 也许现在你可以在你想删除掉upes的时候做出更好的决定了。</target>
        </trans-unit>
        <trans-unit id="8afa1e13386a1232742d929f60c72774ec2326f7" translate="yes" xml:space="preserve">
          <source>Now uniqueArray contains no duplicates.</source>
          <target state="translated">现在 uniqueArray不包含重复的内容。</target>
        </trans-unit>
        <trans-unit id="9ec2907aa469f6821b970a7fb3c51157c9cc9129" translate="yes" xml:space="preserve">
          <source>OK .. even though this one is O(n) and the others are O(n^2) i was curious to see benchmark comparison between this reduce / look up table and filter/indexOf combo (I choose Jeetendras very nice implementation &lt;a href=&quot;https://stackoverflow.com/a/37441144/4543207&quot;&gt;https://stackoverflow.com/a/37441144/4543207&lt;/a&gt;). I prepare a 100K item array filled with random positive integers in range 0-9999 and and it removes the duplicates. I repeat the test for 10 times and the average of the results show that they are no match in performance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;好吧..即使这个是O（n）而其他是O（n ^ 2）我也很好奇看到这个reduce / lookup table和filter / indexOf组合之间的基准比较（我选择Jeetendras非常好的实现&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/37441144/4543207&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https： //stackoverflow.com/a/37441144/4543207&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我准备了一个100K项数组，其中填充了0-9999范围内的随机正整数，并且删除了重复项。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我重复测试10次，结果的平均值表明它们的性能不匹配。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="14982fd566d790691f2414b94fff6c214b0ec176" translate="yes" xml:space="preserve">
          <source>One caveat: Array.lastIndexOf() was added in IE9, so if you need to go lower than that, you'll need to look elsewhere.</source>
          <target state="translated">注意事项:Array.lastIndexOf()是在IE9中添加的,所以如果你需要低于这个值,你需要到其他地方去找。</target>
        </trans-unit>
        <trans-unit id="6359004d219d441a7fd98b18f76da96282a7a92a" translate="yes" xml:space="preserve">
          <source>One line:</source>
          <target state="translated">一句话。</target>
        </trans-unit>
        <trans-unit id="425d7d39d9344fdef2a7433c1ea2dc8035792a02" translate="yes" xml:space="preserve">
          <source>Or, for an order-safe version, use an object to store all previously seen values, and check values against it before before adding to an array.</source>
          <target state="translated">或者,对于订单安全的版本,使用一个对象来存储所有之前看到的值,并在添加到数组之前,对照它检查值。</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="3130994b43da1d8950109e1c6564a8348e9d6104" translate="yes" xml:space="preserve">
          <source>Performance Considerations</source>
          <target state="translated">性能方面的考虑因素</target>
        </trans-unit>
        <trans-unit id="34fb3eeb78fc7a90a5b1c546d9892accd7bbc4da" translate="yes" xml:space="preserve">
          <source>Produces a duplicate-free version of the &lt;strong&gt;array&lt;/strong&gt;, using === to test object
  equality. If you know in advance that the &lt;strong&gt;array&lt;/strong&gt; is sorted, passing
  &lt;em&gt;true&lt;/em&gt; for &lt;strong&gt;isSorted&lt;/strong&gt; will run a much faster algorithm. If you want to
  compute unique items based on a transformation, pass an &lt;strong&gt;iterator&lt;/strong&gt;
  function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;产生&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数组&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的无重复版本&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，使用===来测试对象的相等性。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您事先知道该&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数组&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;已排序，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;则为&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;isSorted&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;传递 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;true&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将运行更快的算法。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果要基于转换计算唯一项，请传递&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;迭代器&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 函数。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="08211355427595285e350655413b390f94fa4272" translate="yes" xml:space="preserve">
          <source>Quick and dirty using jQuery:</source>
          <target state="translated">使用jQuery的快速和肮脏。</target>
        </trans-unit>
        <trans-unit id="9e88f9a1a4eb990b5d6e04b77c41e120b65441dc" translate="yes" xml:space="preserve">
          <source>Remove duplicate values from JS array</source>
          <target state="translated">删除JS数组中的重复值</target>
        </trans-unit>
        <trans-unit id="116ed58a9ac48ee9ed724a44f4d19057f2357651" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://jsfiddle.net/s6skxLtz/4/&quot;&gt;&lt;strong&gt;this Fiddle&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;另请参阅&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://jsfiddle.net/s6skxLtz/4/&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此小提琴&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4bcb4e163bf193fe874c35e7a1a754e4ed2bd51c" translate="yes" xml:space="preserve">
          <source>Show code snippet</source>
          <target state="translated">显示代码片段</target>
        </trans-unit>
        <trans-unit id="699c6dcefd301187cfe53c9fcf84bb221d610c06" translate="yes" xml:space="preserve">
          <source>Similar question:</source>
          <target state="translated">类似的问题。</target>
        </trans-unit>
        <trans-unit id="ac39eb7eec1a33c69714ccbe982b60c62d2ed791" translate="yes" xml:space="preserve">
          <source>Simplest One I've run into so far. In es6.</source>
          <target state="translated">迄今为止我遇到的最简单的一个。在ES6中。</target>
        </trans-unit>
        <trans-unit id="0ef0ebe3fc0c514a0634920d1e1254651fc565d2" translate="yes" xml:space="preserve">
          <source>So the options is:</source>
          <target state="translated">所以,选项是。</target>
        </trans-unit>
        <trans-unit id="f79100578fc71d13412d5f55525916acaffe9b47" translate="yes" xml:space="preserve">
          <source>Someone asked about ordering the results based on how many unique names there are:</source>
          <target state="translated">有人问到根据有多少个唯一的名字来排序结果。</target>
        </trans-unit>
        <trans-unit id="e1a48f3427d9eddfab0ade65ec4b1cca73c8f276" translate="yes" xml:space="preserve">
          <source>Sometimes it's desired to uniquify a list based on some criteria other than just equality, for example, to filter out objects that are different, but share some property. This can be done elegantly by passing a callback. This &quot;key&quot; callback is applied to each element, and elements with equal &quot;keys&quot; are removed. Since &lt;code&gt;key&lt;/code&gt; is expected to return a primitive, hash table will work fine here:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有时，我们希望根据某些条件（不仅仅是相等性）来对列表进行唯一化，例如，过滤出不同但共享某些属性的对象。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以通过传递回调来优雅地完成此操作。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此&amp;ldquo;键&amp;rdquo;回调将应用于每个元素，并且删除具有相等&amp;ldquo;键&amp;rdquo;的元素。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;预计&lt;/font&gt;&lt;/font&gt; &lt;code&gt;key&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将返回原语，因此哈希表在这里可以正常工作：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="952df80db868b6b570fa1dbaecf544bd4d0434db" translate="yes" xml:space="preserve">
          <source>Sort based on occurrence:</source>
          <target state="translated">根据发生情况进行排序。</target>
        </trans-unit>
        <trans-unit id="5ff57f4185e884322f43c9c59da60f12f41285ea" translate="yes" xml:space="preserve">
          <source>TL;DR</source>
          <target state="translated">TL;DR</target>
        </trans-unit>
        <trans-unit id="eb15050cfc7e83132ea94b727e93e728da0799e5" translate="yes" xml:space="preserve">
          <source>Test: &lt;a href=&quot;http://jsperf.com/wgu&quot;&gt;http://jsperf.com/wgu&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;测试：&lt;/font&gt;&lt;a href=&quot;http://jsperf.com/wgu&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//jsperf.com/wgu&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="586339606bc4a03362f3e59eaae6936619d62352" translate="yes" xml:space="preserve">
          <source>That said, if your arrays contain only primitives and you don't care about types (e.g. it's always numbers), this solution is optimal.</source>
          <target state="translated">也就是说,如果你的数组只包含基元,而且你不关心类型(例如总是数字),那么这个解决方案是最优的。</target>
        </trans-unit>
        <trans-unit id="859dd2590c4a024ba0ed0e7e17925ec907bcb9ea" translate="yes" xml:space="preserve">
          <source>The best from two worlds</source>
          <target state="translated">两个世界中的佼佼者</target>
        </trans-unit>
        <trans-unit id="9545a5d4e10dc6a7e8fabdf289be8c28ef8a32eb" translate="yes" xml:space="preserve">
          <source>The following is more than 80% faster than the jQuery method listed (see tests below).
It is an answer from a similar question a few years ago. If I come across the person who originally proposed it I will post credit.
Pure JS.</source>
          <target state="translated">下面这道题比列出的jQuery方法快80%以上(见下面的测试)。这是几年前一个类似问题的答案。如果我遇到了最初提出这个问题的人,我会贴出功劳。纯粹的JS。</target>
        </trans-unit>
        <trans-unit id="c1be9748262459c0cfed18be8758a161fa9c3150" translate="yes" xml:space="preserve">
          <source>The implementation is so simple, defining a function is no longer warranted.</source>
          <target state="translated">实现方式如此简单,定义一个功能已经没有必要了。</target>
        </trans-unit>
        <trans-unit id="616fdf4d61602743bfe3812e3323328034f087f3" translate="yes" xml:space="preserve">
          <source>The most concise way to remove duplicates from an array using native javascript functions is to use a sequence like below:</source>
          <target state="translated">使用本机javascript函数从数组中删除重复数组的最简洁的方法是使用像下面这样的序列。</target>
        </trans-unit>
        <trans-unit id="6edef424e78630f627fb00a487669aac7e7398e7" translate="yes" xml:space="preserve">
          <source>The thing to remember here is that objects MUST have unique keys. We are exploiting this to remove all the duplicates. I would have thought this would be the fastest solution (before ES6).</source>
          <target state="translated">这里要记住的是,对象必须有唯一的密钥。我们正在利用这一点来消除所有的重复。我会认为这将是最快的解决方案(在ES6之前)。</target>
        </trans-unit>
        <trans-unit id="17a346018132031a18b99a81d21bc3516ea51cac" translate="yes" xml:space="preserve">
          <source>The top answers have complexity of &lt;code&gt;O(n&amp;sup2;)&lt;/code&gt;, but this can be done with just &lt;code&gt;O(n)&lt;/code&gt; by using an object as a hash:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最高答案的复杂度为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;O(n&amp;sup2;)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但这可以&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过将对象用作哈希来&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仅用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;O(n)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来完成&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b10b0d292925ee11a5945997c1484ed24978572b" translate="yes" xml:space="preserve">
          <source>There are probably faster ways but this one is pretty decent.</source>
          <target state="translated">可能有更快的方法,但这个方法还是很不错的。</target>
        </trans-unit>
        <trans-unit id="caaf0e060e43d0ec0c496e3e516fdb861ff73f78" translate="yes" xml:space="preserve">
          <source>This chunk of ugly code does the same as the snippet #3 above, &lt;s&gt;but an order of magnitude faster&lt;/s&gt; (as of 2017 it's only twice as fast - JS core folks are doing a great job!)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这段丑陋的代码与上面的代码段＃3一样，&lt;/font&gt;&lt;/font&gt;&lt;s&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是速度提高了一个数量级&lt;/font&gt;&lt;/font&gt;&lt;/s&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（截至2017年，它的速度仅是后者的两倍-JS核心人员做得很好！）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="34be48325432c435049de4b5fce8bf8f701c581a" translate="yes" xml:space="preserve">
          <source>This is how it's usually done. The idea is to place each element in a hashtable and then check for its presence instantly. This gives us linear time, but has at least two drawbacks:</source>
          <target state="translated">通常是这样做的。其想法是将每个元素放在hashtable中,然后立即检查它的存在。这给了我们线性时间,但至少有两个缺点。</target>
        </trans-unit>
        <trans-unit id="d32045aa30c503f5734fd8becb033645aa36217b" translate="yes" xml:space="preserve">
          <source>This is quadratic, but there are nice additional goodies, like wrapping native &lt;code&gt;indexOf&lt;/code&gt;, ability to uniqify by a key (&lt;code&gt;iteratee&lt;/code&gt; in their parlance), and optimizations for already sorted arrays.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是二次方的，但是还有很多不错的东西，例如包装本机&lt;/font&gt;&lt;/font&gt; &lt;code&gt;indexOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，按键进行唯一化的能力（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用术语&lt;/font&gt;&lt;/font&gt; &lt;code&gt;iteratee&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;表示）以及对已排序数组的优化。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b649cb8117bb75036b30b3a7a995456bb6f20525" translate="yes" xml:space="preserve">
          <source>This will work for strings, numbers, and dates.  If your array contains objects, the above solution won't work because when coerced to a string, they will all have a value of &lt;code&gt;&quot;[object Object]&quot;&lt;/code&gt; (or something similar) and that isn't suitable as a lookup value.  You can get an &lt;code&gt;O(n)&lt;/code&gt; implementation for objects by setting a flag on the object itself:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这将适用于字符串，数字和日期。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您的数组包含对象，则上述解决方案将不起作用，因为当强制使用字符串时，它们都将具有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;[object Object]&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（或类似名称）的值，并且不适合作为查找值。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过在对象本身上设置标志来获得对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;O(n)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实现：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="79d3991c69b5dc6ca2ddee16f91e7d5abb041f25" translate="yes" xml:space="preserve">
          <source>Uniq reduce while keeping existing order</source>
          <target state="translated">在保持现有订单的同时,统一减少</target>
        </trans-unit>
        <trans-unit id="2db3a69f0328c81b98a84c394f2c5dfec1997cc5" translate="yes" xml:space="preserve">
          <source>Unique by...</source>
          <target state="translated">独特的由.....</target>
        </trans-unit>
        <trans-unit id="96aa205044de370fb2e8c218b80760bcb3e7b5dd" translate="yes" xml:space="preserve">
          <source>Update 2015: ES6 version:</source>
          <target state="translated">2015年的更新。ES6版本。</target>
        </trans-unit>
        <trans-unit id="57a042a26b313b47c5306abc13676f31e632febd" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://underscorejs.org/&quot;&gt;Underscore.js&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://underscorejs.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Underscore.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00f6a4215968bee265bdb4841df188a8634d1f7f" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;Set&lt;/code&gt; variant above to keep the first, and the &lt;code&gt;Map&lt;/code&gt; to keep the last:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上面&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Set&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;变量保留第一个变量，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Map&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;保留最后一个&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;变量&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9bdab3ec80310e6364af5c88041386a0a8d43071" translate="yes" xml:space="preserve">
          <source>Using the 3rd (&quot;this array&quot;) parameter of the filter callback we can avoid a closure of the array variable:</source>
          <target state="translated">使用过滤器回调的第3个参数(&quot;this array&quot;),我们可以避免数组变量的关闭。</target>
        </trans-unit>
        <trans-unit id="dedc2810deb822938789db53e1998a107e835ed2" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;Set&lt;/a&gt; constructor and the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax&quot;&gt;spread syntax&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Set&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造函数和&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;spread语法&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9078a5b06471b912debb1bb930353e48daf752a7" translate="yes" xml:space="preserve">
          <source>We can easily derive &lt;code&gt;unique&lt;/code&gt; from &lt;code&gt;unqiueBy&lt;/code&gt; or use the faster implementation utilizing &lt;code&gt;Set&lt;/code&gt;s:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们可以轻松地&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从&lt;/font&gt; &lt;code&gt;unqiueBy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;派生&lt;/font&gt;&lt;/font&gt; &lt;code&gt;unique&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或者使用通过&lt;/font&gt; &lt;code&gt;Set&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;更快的实现&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d8edb0918abc7975f9aa03a86c637a0c01848e29" translate="yes" xml:space="preserve">
          <source>Well ok so far so good. But let's do it properly this time in the ES6 style. It looks so cool..! But as of now how it will perform against the powerful lut solution is a mystery to me. Lets first see the code and then benchmark it.</source>
          <target state="translated">好了,好了,到目前为止还不错。但是,让我们这次用ES6的风格,好好地做吧。它看起来真酷.....! 但到现在为止,它将如何与强大的lut解决方案对抗,对我来说是个谜。让我们先看一下代码,然后再做个基准测试。</target>
        </trans-unit>
        <trans-unit id="860d131c0ac854d1e9106c25332a2f1850c0bb0f" translate="yes" xml:space="preserve">
          <source>Well ok we are all happy now. But the lead role always comes last with some applause. I am sure some of you wonder what Set object would do. Now that since we are open to ES6 and we know Map is the winner of the previous games let us compare Map with Set as a final. A typical Real Madrid vs Barcelona game this time... or is it? Let's see who will win the el classico :)</source>
          <target state="translated">好了好了,大家都很高兴了。但主角总是最后才有一些掌声。我相信你们中一定有人想知道Set对象会做什么。既然我们现在开放到了ES6,而且我们知道Map是前几场比赛的赢家,那么就让我们把Map和Set作为决赛来比较一下。这次是一场典型的皇马对阵巴萨的比赛...........还是这样?让我们来看看谁会赢el classico :)</target>
        </trans-unit>
        <trans-unit id="370230f0e4c174bcdf24f181eccb216042d92fa9" translate="yes" xml:space="preserve">
          <source>When I tested both implementation (with and without Set) for performance in chrome, I found that the one with Set is much much faster!</source>
          <target state="translated">当我在chrome中测试这两种实现(有Set和没有Set)的性能时,我发现有Set的那一个要快得多!而有Set的那一个要快得多!我发现有Set的那一个要快得多。</target>
        </trans-unit>
        <trans-unit id="cc7d995a1841ad16ff9871b9c863d40c602272fb" translate="yes" xml:space="preserve">
          <source>When removing objects by a key, you might to want to keep the first of &quot;equal&quot; objects or the last one.</source>
          <target state="translated">当通过一个键删除对象时,你可能会想保留 &quot;相等 &quot;对象中的第一个或最后一个。</target>
        </trans-unit>
        <trans-unit id="9cd8fc792f4f69a6d051c2cf002e027d0f149103" translate="yes" xml:space="preserve">
          <source>Which one would  you use..? Well not so fast...! Don't be deceived. Map is at displacement. Now look... in all of the above cases we fill an array of size n with numbers of range &amp;lt; n. I mean we have an array of size 100 and we fill with random numbers 0..9 so there are definite duplicates and &quot;almost&quot; definitely each number has a duplicate. How about if we fill the array in size 100 with random numbers 0..9999. Let's now see Map playing at home. This time an Array of 100K items but random number range is 0..100M. We will do 100 consecutive tests to average the results. OK let's see the bets..! &amp;lt;- no typo</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您将使用哪一个？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;嗯，不是那么快...！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不要被欺骗。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;地图处于位移状态。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在看...在上述所有情况下，我们用范围&amp;lt;n的数字填充大小为n的数组。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我的意思是我们有一个大小为100的数组，并且我们填充了随机数0..9，因此存在一定的重复项，并且&amp;ldquo;几乎&amp;rdquo;肯定每个数字都有重复项。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果我们用随机数0..9999填充大小为100的数组，该怎么办。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在让我们看看地图在家里玩。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这次是一个100K项的数组，但随机数范围是0..100M。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们将进行100次连续测试以平均结果。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;好，让我们看看下注吧！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;lt;-没有错字&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed0003a930932e628cb1a02a165ccbe0cc5dd994" translate="yes" xml:space="preserve">
          <source>Wow that was short..! But how about the performance..? It's beautiful... Since the heavy weight of the filter / indexOf lifted over our shoulders now i can test an array 1M random items of positive integers in range 0..99999 to get an average from 10 consecutive tests. I can say this time it's a real match. See the result for yourself :)</source>
          <target state="translated">哇,好短啊!但是表演怎么样......?真漂亮.....自从滤波器indexOf的重担被卸下后,现在我可以测试一个范围为0...9999999的100万个正整数的随机数组,从连续10次测试中得到一个平均值。我可以说这一次是真正的匹配。自己看结果吧 :)</target>
        </trans-unit>
        <trans-unit id="ce3f0236d2d07dfd1e1329aa5c7e1c8b720a3cdc" translate="yes" xml:space="preserve">
          <source>Wow.. man..! Well unexpectedly it didn't turn out to be an el classico at all. More like Barcelona FC against CA Osasuna :))</source>
          <target state="translated">哇........天啊!没想到的是,这根本就不是一场el classico的比赛。更像是巴萨FC对阵CA奥萨苏纳的比赛。)</target>
        </trans-unit>
        <trans-unit id="0045ab03b3aca5a7e131f5f18508af47c2d688cd" translate="yes" xml:space="preserve">
          <source>Yet another ES6(2015) way of doing this that already works on a few browsers is:</source>
          <target state="translated">然而,ES6(2015)的另一种方法已经在一些浏览器上实现了,那就是。</target>
        </trans-unit>
        <trans-unit id="a32788844cd1d78d3a7e227d29ae1c9883b14fa4" translate="yes" xml:space="preserve">
          <source>You can always try putting it into an object, and then iterating through its keys:</source>
          <target state="translated">你总是可以尝试把它放到一个对象中,然后通过它的键进行迭代。</target>
        </trans-unit>
        <trans-unit id="c27db2f5ed434825f020965cf078662d7a5d8b98" translate="yes" xml:space="preserve">
          <source>You can simply do it in JavaScript, with the help of the second - index - parameter of the &lt;code&gt;filter&lt;/code&gt; method:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以借助&lt;/font&gt;&lt;/font&gt; &lt;code&gt;filter&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的第二个参数-index-轻松地在JavaScript中完成此操作&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a5ccb2330f2aef610502456380da1cc91e063a81" translate="yes" xml:space="preserve">
          <source>You could do</source>
          <target state="translated">你可以做的</target>
        </trans-unit>
        <trans-unit id="05ae959e9015de3a83d1dea6e3427dfaa3c25b4a" translate="yes" xml:space="preserve">
          <source>cheers!</source>
          <target state="translated">cheers!</target>
        </trans-unit>
        <trans-unit id="cd5d12d528695cab4c8d95add53ef3ca6fd47109" translate="yes" xml:space="preserve">
          <source>declarative and succinct implementation</source>
          <target state="translated">言简意赅</target>
        </trans-unit>
        <trans-unit id="a99cf5f1a9763e6a0397f2b5d498a9bb4364ec64" translate="yes" xml:space="preserve">
          <source>for the same reason, all objects will be considered equal: &lt;code&gt;uniq([{foo:1},{foo:2}])&lt;/code&gt; will return just &lt;code&gt;[{foo:1}]&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;出于相同的原因，所有对象都将被视为相等：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;uniq([{foo:1},{foo:2}])&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仅返回&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[{foo:1}]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="edd094385c15a6fae3174a4693769654adcb5c9f" translate="yes" xml:space="preserve">
          <source>generic solution by using a separate comparator function</source>
          <target state="translated">通过使用一个单独的比较器函数来实现通用的解决方案</target>
        </trans-unit>
        <trans-unit id="e239f6a1612923e74eebee43c2cf2d9f6d25d119" translate="yes" xml:space="preserve">
          <source>if it's been seen already, skip it</source>
          <target state="translated">既然已经看过了,那就不看了</target>
        </trans-unit>
        <trans-unit id="539c4ff4d14c88a5fc24a391f8070ba9e4472ef0" translate="yes" xml:space="preserve">
          <source>if you can't read the code above ask, read a javascript book or here are some explainations about shorter code. &lt;a href=&quot;https://stackoverflow.com/a/21353032/2450730&quot;&gt;https://stackoverflow.com/a/21353032/2450730&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您看不懂上面的代码，请阅读一本javascript书籍，或以下有关较短代码的说明。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/21353032/2450730&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://stackoverflow.com/a/21353032/2450730&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="c229b20c8b114325c93aa2b6a418145f99a20e45" translate="yes" xml:space="preserve">
          <source>or a &lt;code&gt;Map&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Map&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b5d6e1242f2ba1f7c81b87521cdec9e7f9b1add" translate="yes" xml:space="preserve">
          <source>or even using the &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;spread operator&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;甚至使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;价差运算符&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="806d44b43276ce5b485db5f1967f4d34d2e458cf" translate="yes" xml:space="preserve">
          <source>or in short hand</source>
          <target state="translated">或简称</target>
        </trans-unit>
        <trans-unit id="1c48b3865f2548c947e1cc5c1192b629d30d0abb" translate="yes" xml:space="preserve">
          <source>otherwise, yield it and add it to the set of already seen values</source>
          <target state="translated">否则,放弃它,并将其添加到已经看到的值集合中。</target>
        </trans-unit>
        <trans-unit id="fc555c29c370c91539f0994e128f9c3486cc9088" translate="yes" xml:space="preserve">
          <source>reuse of other small, generic functions</source>
          <target state="translated">重用其他小的通用功能</target>
        </trans-unit>
        <trans-unit id="20a7cc06c25fd99a1f0af70cca43ef31af8d4467" translate="yes" xml:space="preserve">
          <source>since hash keys can only be strings or symbols in JavaScript, this code doesn't distinguish numbers and &quot;numeric strings&quot;. That is, &lt;code&gt;uniq([1,&quot;1&quot;])&lt;/code&gt; will return just &lt;code&gt;[1]&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于哈希键只能是JavaScript中的字符串或符号，因此此代码无法区分数字和&amp;ldquo;数字字符串&amp;rdquo;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;也就是说，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;uniq([1,&quot;1&quot;])&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将只返回&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[1]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b1efd96f20963e6d81c23833f2d90ccd388edad" translate="yes" xml:space="preserve">
          <source>sort | uniq</source>
          <target state="translated">uniq</target>
        </trans-unit>
        <trans-unit id="19231064d1513213b54b57152bb7ae4ff73cd591" translate="yes" xml:space="preserve">
          <source>take the next value from the argument</source>
          <target state="translated">取下一个值</target>
        </trans-unit>
        <trans-unit id="37c6ff6e73a628714bf9271b1cad7a72b47334be" translate="yes" xml:space="preserve">
          <source>there's no need for &lt;code&gt;slice&lt;/code&gt; nor &lt;code&gt;indexOf&lt;/code&gt; within the reduce function, like i've seen in other examples! it makes sense to use it along with a filter function though:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;就像我在其他示例中看到的那样，在reduce函数中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不需要&lt;/font&gt;&lt;/font&gt; &lt;code&gt;slice&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;indexOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不过，将其与过滤器函数一起使用是有意义的：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f855f12d97c8a7d6bc7de54edc1f31c979f43ac" translate="yes" xml:space="preserve">
          <source>this can be made shorter in ES6 to</source>
          <target state="translated">这在ES6中可以缩短到</target>
        </trans-unit>
        <trans-unit id="5782296420b9d703acbceb54a1f4355994661ab2" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;Array.filter()&lt;/code&gt; like this</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;像这样&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array.filter()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e80a5930769a9f4a323662f414c3d43a685d1f98" translate="yes" xml:space="preserve">
          <source>which both also work with non-primitive keys.</source>
          <target state="translated">这两个键也可以使用非原始键。</target>
        </trans-unit>
        <trans-unit id="8729ffcac367e70cb40c317ee0944702856d5a01" translate="yes" xml:space="preserve">
          <source>which is, again, a variation of the first snippet.</source>
          <target state="translated">这又是第一个片段的变体。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
