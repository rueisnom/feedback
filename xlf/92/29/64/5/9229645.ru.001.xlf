<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/9229645">
    <body>
      <group id="9229645">
        <trans-unit id="545ccbaeb6c5eadd96d8aaf423358b6394811b09" translate="yes" xml:space="preserve">
          <source>&quot;Smart&quot; but na&amp;iuml;ve way</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;laquo;Умный&amp;raquo;, но наивный способ&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="58d24873a3fc1f2581ffb3c8c6ed219719ff1409" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot;&gt;Here&lt;/a&gt; is nice explanation of &lt;code&gt;Array.filter()&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; хорошее объяснение &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array.filter()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="995e9e0e5ed903ff01666d2a756fe857488bba64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_.uniq(array, [isSorted], [iterator])&lt;/code&gt;&lt;em&gt;Alias:&lt;/em&gt;&lt;strong&gt;unique&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;_.uniq(array, [isSorted], [iterator])&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Псевдоним: &lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;уникальный&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a03992f86bbb97f9454701a5854982efc0c04f7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uniqueBy&lt;/code&gt; isn't as fast as an imperative implementation with loops, but it is way more expressive due to its genericity.</source>
          <target state="translated">&lt;code&gt;uniqueBy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не так быстр, как императивная реализация с циклами, но он более выразителен благодаря своей универсальности.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cdd3bb84934ff61728eb9a490ffb508207ff4e0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uniqueBy&lt;/code&gt; utilizes mutations (&lt;code&gt;push(x) (acc)&lt;/code&gt;) hidden inside its body. It reuses the accumulator instead of throwing it away after each iteration. This reduces memory consumption and GC pressure. Since this side effect is wrapped inside the function, everything outside remains pure.</source>
          <target state="translated">&lt;code&gt;uniqueBy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; использует мутации ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;push(x) (acc)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), скрытые внутри его тела. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он использует аккумулятор вместо того, чтобы выбрасывать его после каждой итерации. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это уменьшает потребление памяти и давление ГХ. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Поскольку этот побочный эффект находится внутри функции, все снаружи остается чистым.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d312cb48b363793232813139a115ef6f51aedee8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: &lt;a href=&quot;http://lodash.com&quot;&gt;Lo-Dash&lt;/a&gt; (an &lt;a href=&quot;http://underscorejs.org/&quot;&gt;underscore&lt;/a&gt; competitor) also offers a comparable &lt;a href=&quot;http://lodash.com/docs#uniq&quot;&gt;.uniq&lt;/a&gt; implementation.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Примечание: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://lodash.com&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo-Dash&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;конкурент &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;с &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://underscorejs.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;подчеркиванием&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) также предлагает сопоставимую &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;реализацию &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://lodash.com/docs#uniq&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.uniq&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cdceb3de3f861e5954bc6fe33ff5ba380aa54a71" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2019 edit:&lt;/strong&gt; Modern versions of JavaScript make this a much easier problem to solve.  Using &lt;code&gt;Set&lt;/code&gt; will work, regardless of whether your array contains objects, strings, numbers, or any other type.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Редактирование 2019 года:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; современные версии JavaScript значительно облегчают решение этой проблемы. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Использование &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Set&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будет работать независимо от того, содержит ли ваш массив объекты, строки, числа или любой другой тип.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0e21d62008df898624989d75d47e7cb09c6a5375" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://jsfiddle.net/ZNLUP/1/&quot;&gt;Example&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://jsfiddle.net/ZNLUP/1/&quot;&gt;Example&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e3bdb51f61286b91e876af275ac900201c1f8a95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://underscorejs.org/#uniq&quot;&gt;_.uniq&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://underscorejs.org/#uniq&quot;&gt;_.uniq&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a54f91ace3b2ad56bcf413aa86d26962a4ba6335" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ECMAScript 6: Use the new Set data structure (order-safe)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript 6: Использовать новую структуру данных Set (в порядке заказа)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4a97222c41b3523d91d2a7194468abc0762f7ee2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example usage:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Пример использования:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="48bf5499e3ac63560ca0e0106a29021adb072bfb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Performance&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Performance&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="21aa429fd1f960433948c85037e5c8a8b7b989ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Solution 1&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Решение 1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b92c9843bad7e62d5c47d0d1653f2216299facdc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Solution 2 (using Set)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Решение 2 (используя Set)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="65ea5aea422a6fb8b4ebd86dc44393c9f42161c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Test&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Test&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="693e8c2fd79ed99956157996c6819d2278b8d50f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is probably one of the fastest way to remove permanently the duplicates from an array&lt;/strong&gt;
10x times faster than the most functions here.&amp;amp; 78x faster in safari</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это, вероятно, один из самых быстрых способов постоянного удаления дубликатов из массива в&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 10 раз быстрее, чем большинство функций здесь. И в 78 раз быстрее в сафари.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="16711543421929b031abbd4ca5cd76cc5084d772" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Vanilla JS: Remove duplicates by tracking already seen values (order-safe)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vanilla JS: удаление дубликатов путем отслеживания уже увиденных значений (в порядке заказа)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="07f1d1fb1e7285534783acf3cbd3f5e1c2fbe825" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Vanilla JS: Remove duplicates using an Object like a Set&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vanilla JS: удаляйте дубликаты, используя объект типа Set&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9178dc66b6ef86ddf72367ece3117f6f2bca4296" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;here is the simple method without any special libraries are special function,&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вот простой метод без каких-либо специальных библиотек, специальные функции,&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="951f540d63d2a9bd5664916fc0725d2c88d41882" translate="yes" xml:space="preserve">
          <source>A &quot;lazy&quot;, generator-based version of &lt;code&gt;uniq&lt;/code&gt; can be built on the same basis:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;laquo;Ленивая&amp;raquo; версия &lt;/font&gt;&lt;/font&gt; &lt;code&gt;uniq&lt;/code&gt; для&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; генератора &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;может быть построена на той же основе:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="07a62db85b2117b350bb4cd41710e9ab8906b47f" translate="yes" xml:space="preserve">
          <source>A particularly useful &lt;code&gt;key()&lt;/code&gt; is &lt;code&gt;JSON.stringify&lt;/code&gt; which will remove objects that are physically different, but &quot;look&quot; the same:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Особенно полезным &lt;/font&gt;&lt;/font&gt; &lt;code&gt;key()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.stringify&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который удаляет объекты, которые физически отличаются, но &amp;laquo;выглядят&amp;raquo; одинаково:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95415bb6a579cb4f5c8ba0ceafdf9a061fbc4dcd" translate="yes" xml:space="preserve">
          <source>A simple but effective technique, is to use the &lt;code&gt;filter&lt;/code&gt; method in combination with the filter &lt;code&gt;function(value, index){ return this.indexOf(value) == index }&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Простой, но эффективный метод заключается в использовании &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;метода &lt;/font&gt;&lt;/font&gt; &lt;code&gt;filter&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в сочетании с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;function(value, index){ return this.indexOf(value) == index }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; фильтра &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(значение, индекс) {return this.indexOf (значение) == индекс}&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a878f8064854c12f88684f87d5edccf9e99cd3c" translate="yes" xml:space="preserve">
          <source>A single line version using array filter and indexOf functions:</source>
          <target state="translated">Однострочная версия с использованием массивного фильтра и функций indexOf:</target>
        </trans-unit>
        <trans-unit id="968334a83172654e833d9ad9bee60f4593ec84c5" translate="yes" xml:space="preserve">
          <source>A slight modification of thg435's excellent answer to use a custom comparator:</source>
          <target state="translated">Небольшая модификация отличного ответа thg435 на использование пользовательского компаратора:</target>
        </trans-unit>
        <trans-unit id="82727c37fc882dca53361a569c38f63e752d01ca" translate="yes" xml:space="preserve">
          <source>A universal solution combines both approaches: it uses hash lookups for primitives and linear search for objects.</source>
          <target state="translated">Универсальное решение сочетает в себе оба подхода:в нем используются хэш-поиски примитивов и линейный поиск объектов.</target>
        </trans-unit>
        <trans-unit id="6c563c21f20fe92abf54d4d1e6c370b0dce20ec2" translate="yes" xml:space="preserve">
          <source>Again, this doesn't work with objects (because all objects are equal for &lt;code&gt;sort&lt;/code&gt;). Additionally, we silently change the original array as a side effect - not good! However, if your input is already sorted, this is the way to go (just remove &lt;code&gt;sort&lt;/code&gt; from the above).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Опять же, это не работает с объектами (потому что все объекты равны для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sort&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Кроме того, мы молча меняем исходный массив как побочный эффект - не хорошо! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Однако, если ваш ввод уже отсортирован, это путь (просто удалите &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sort&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; из вышеупомянутого).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1112e1a1136768b03425b1d614b072734f9a6f90" translate="yes" xml:space="preserve">
          <source>Although ES6 Solution is the best, I'm baffled as to how nobody has shown the following solution:</source>
          <target state="translated">Несмотря на то,что решение ES6-лучшее,я озадачен тем,что никто не показал следующее решение:</target>
        </trans-unit>
        <trans-unit id="cced73bd84dbbc926ab22fece5468cc51393b47d" translate="yes" xml:space="preserve">
          <source>Although concise, this algorithm is not particularly efficient for large arrays (quadratic time).</source>
          <target state="translated">Несмотря на лаконичность,этот алгоритм не особенно эффективен для больших массивов (квадратичное время).</target>
        </trans-unit>
        <trans-unit id="1b8526fb50e81a179dc83cfe52a9aa2ac78cb27c" translate="yes" xml:space="preserve">
          <source>Another option is to sort the array first, and then remove each element equal to the preceding one:</source>
          <target state="translated">Другой вариант-сначала отсортировать массив,а затем удалить каждый элемент,равный предыдущему:</target>
        </trans-unit>
        <trans-unit id="0e311d9ee85ba5d7553634e3dbd1d24ebfc058ce" translate="yes" xml:space="preserve">
          <source>Apart from being a simpler, more terse solution than the current answers (minus the future-looking ES6 ones), I perf tested this and it was much faster as well:</source>
          <target state="translated">Помимо того,что я был более простым и лаконичным решением,чем текущие ответы (минус будущие ответы ES6),я проверил это,и это было намного быстрее:</target>
        </trans-unit>
        <trans-unit id="693617f23b1d9b82b6ddaf03427bdce5100c36f7" translate="yes" xml:space="preserve">
          <source>Basically, we iterate over the array and, for each element, check if the first position of this element in the array is equal to the current position. Obviously, these two positions are different for duplicate elements.</source>
          <target state="translated">В основном,мы делаем итерации по массиву и для каждого элемента проверяем,совпадает ли первая позиция этого элемента в массиве с текущей позицией.Очевидно,что эти две позиции различны для дублирующих элементов.</target>
        </trans-unit>
        <trans-unit id="2b69cb94e2fd02706e10676920008541b3213bba" translate="yes" xml:space="preserve">
          <source>Bear in mind though that this also sorts the array.</source>
          <target state="translated">Имейте в виду,что это также сортирует массив.</target>
        </trans-unit>
        <trans-unit id="2e679bc577c84e239a221c9ab80c702c7dc59b46" translate="yes" xml:space="preserve">
          <source>Benefits of this approach:</source>
          <target state="translated">Преимущества такого подхода:</target>
        </trans-unit>
        <trans-unit id="ea0df8386c4a7b2c2679f6ebcd420fd8589e491a" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;http://underscorejs.org/#uniq&quot;&gt;underscore&lt;/a&gt; and &lt;a href=&quot;https://lodash.com/docs#uniq&quot;&gt;Lo-Dash&lt;/a&gt; provide &lt;code&gt;uniq&lt;/code&gt; methods. Their algorithms are basically similar to the first snippet above and boil down to this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;И &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://underscorejs.org/#uniq&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;подчеркивание,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://lodash.com/docs#uniq&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo-Dash&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; предоставляют &lt;/font&gt;&lt;/font&gt; &lt;code&gt;uniq&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; методы. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Их алгоритмы в основном аналогичны первому фрагменту выше и сводятся к следующему:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6be24a97cdca9d9739d2f77bbc3f540977649073" translate="yes" xml:space="preserve">
          <source>Code example :</source>
          <target state="translated">Пример кода :</target>
        </trans-unit>
        <trans-unit id="da723bc38aaf5f90859a67c0ad3328d59c066d34" translate="yes" xml:space="preserve">
          <source>D3.js</source>
          <target state="translated">D3.js</target>
        </trans-unit>
        <trans-unit id="071f175015a0f29b2243cd5a1dec24776d6a708a" translate="yes" xml:space="preserve">
          <source>Demo: &lt;a href=&quot;http://jsfiddle.net/46S7g/&quot;&gt;http://jsfiddle.net/46S7g/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Демо: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/46S7g/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://jsfiddle.net/46S7g/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="119a17a5588ca2c9539c4d577428f4c29af39e36" translate="yes" xml:space="preserve">
          <source>ECMAScript 6 adds the new &lt;code&gt;Set&lt;/code&gt; Data-Structure, which lets you store values of any type.  &lt;code&gt;Set.values&lt;/code&gt; returns elements in insertion order.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript 6 добавляет новую &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Set&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Data-Structure, которая позволяет вам хранить значения любого типа. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Set.values&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; возвращает элементы в порядке вставки.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f340712260381d35a53813a65d261137ac25e7e6" translate="yes" xml:space="preserve">
          <source>ES6</source>
          <target state="translated">ES6</target>
        </trans-unit>
        <trans-unit id="4dc5c144fd599775e0cb5c2819fefe484bbb50f0" translate="yes" xml:space="preserve">
          <source>ES6 provides the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;Set&lt;/a&gt; object, which makes things a whole lot easier:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6 предоставляет &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объект &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Set&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , который делает вещи намного проще:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Расширить фрагмент</target>
        </trans-unit>
        <trans-unit id="62e61d677b74097f1324d0c47e3e4c694a67d9c8" translate="yes" xml:space="preserve">
          <source>Faster uniq with sorting</source>
          <target state="translated">Быстрый уник с сортировкой</target>
        </trans-unit>
        <trans-unit id="5f07110dd5176567a6f93044cb1c87801610ae12" translate="yes" xml:space="preserve">
          <source>First or last?</source>
          <target state="translated">Первый или последний?</target>
        </trans-unit>
        <trans-unit id="1fba1a8f8ac05db4a7ffb2d3a384f65031ecf0a2" translate="yes" xml:space="preserve">
          <source>Function calls are expensive in JavaScript, therefore the above solutions, as concise as they are, are not particularly efficient. For maximal performance, replace &lt;code&gt;filter&lt;/code&gt; with a loop and get rid of other function calls:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вызовы функций в JavaScript дороги, поэтому приведенные выше решения, какими бы краткими они ни были, не особенно эффективны. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для максимальной производительности замените &lt;/font&gt;&lt;/font&gt; &lt;code&gt;filter&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; на цикл и избавьтесь от других вызовов функций:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a3e705cc61a19f33d7c9c030f107a70569966485" translate="yes" xml:space="preserve">
          <source>Generators</source>
          <target state="translated">Generators</target>
        </trans-unit>
        <trans-unit id="325969aad6efa6a4492a383509a4216afef4fd35" translate="yes" xml:space="preserve">
          <source>Generic Functional Approach</source>
          <target state="translated">Общий функциональный подход</target>
        </trans-unit>
        <trans-unit id="f20c7800e07e5893ff765d93af93f5768dc8f851" translate="yes" xml:space="preserve">
          <source>Get all non-unique values (i.e.: duplicate/more than one occurrence) in an array</source>
          <target state="translated">Получить в массиве все неуникальные значения (т.е.:дубликат,чем одно событие).</target>
        </trans-unit>
        <trans-unit id="ca9caa9d6215f630d599081a01ca1d412a5ec674" translate="yes" xml:space="preserve">
          <source>Go for this one:</source>
          <target state="translated">Вперед:</target>
        </trans-unit>
        <trans-unit id="37f725fcd879ca56633a90748ea73597e6704eb9" translate="yes" xml:space="preserve">
          <source>Got tired of seeing all bad examples with for-loops or jQuery. Javascript has the perfect tools for this nowadays: sort, map and reduce.</source>
          <target state="translated">Устала видеть все плохие примеры с for-loops или jQuery.В настоящее время у Javascript есть отличные инструменты для этого:сортировка,карта и уменьшение.</target>
        </trans-unit>
        <trans-unit id="306fc68e40113d3486ca591f2b04bb22a3b7fc46" translate="yes" xml:space="preserve">
          <source>Hashtables to the rescue</source>
          <target state="translated">Хэштейблы на помощь</target>
        </trans-unit>
        <trans-unit id="df6d2eab3d4ffaec2b30c4b30f1d175bcb142186" translate="yes" xml:space="preserve">
          <source>Here is a generic and strictly functional approach with ES2015:</source>
          <target state="translated">Вот общий и строго функциональный подход с ES2015:</target>
        </trans-unit>
        <trans-unit id="3d8d2da92e3cf1ae944d73658d74a427be5090a2" translate="yes" xml:space="preserve">
          <source>Here is a simple answer to the question.</source>
          <target state="translated">Вот простой ответ на вопрос.</target>
        </trans-unit>
        <trans-unit id="1aaf61be25efa7f5a29b138cb733c7ac8207d756" translate="yes" xml:space="preserve">
          <source>Here is very simple for understanding and working anywhere (even in PhotoshopScript) code. Check it!</source>
          <target state="translated">Здесь очень просто понимать и работать где угодно (даже в PhotoshopScript)код.Проверьте его!</target>
        </trans-unit>
        <trans-unit id="fc157aff3805697c4605ed92fa9f614748b76f5d" translate="yes" xml:space="preserve">
          <source>However, if you need an array with unique elements, why not use sets right from the beginning?</source>
          <target state="translated">Однако,если вам нужен массив с уникальными элементами,почему бы не использовать наборы с самого начала?</target>
        </trans-unit>
        <trans-unit id="17e70a10c792690d43997eb63da08ec4691a0202" translate="yes" xml:space="preserve">
          <source>I believe this is the best way to do this</source>
          <target state="translated">Я считаю,что это лучший способ сделать это.</target>
        </trans-unit>
        <trans-unit id="474d6962cc2b53f1812502f640e5c172d5647568" translate="yes" xml:space="preserve">
          <source>I could point to all the codes that I've tried but I think it's useless because they don't work. I accept jQuery solutions too.</source>
          <target state="translated">Я мог бы указать на все коды,которые я пробовал,но я думаю,что это бесполезно,потому что они не работают.Я тоже принимаю решения JQuery.</target>
        </trans-unit>
        <trans-unit id="ee05eff2251d0b84a0e95f84a8c352222dbd8f24" translate="yes" xml:space="preserve">
          <source>I had done a detailed comparison of dupes removal at some other question but having noticed that this is the real place i just wanted to share it here as well.</source>
          <target state="translated">Я провел подробное сравнение удаления дубликатов на каком-то другом вопросе,но,заметив,что это реальное место,я просто хотел поделиться им и здесь.</target>
        </trans-unit>
        <trans-unit id="0bc6794192adc78c20c5964545cd64cb0038bf78" translate="yes" xml:space="preserve">
          <source>I have a very simple JavaScript array that may or may not contain duplicates.</source>
          <target state="translated">У меня очень простой массив JavaScript,который может содержать или не содержать дубликаты.</target>
        </trans-unit>
        <trans-unit id="63e0cb18e79ace78ff32f62709207324c1710b04" translate="yes" xml:space="preserve">
          <source>I need to remove the duplicates and put the unique values in a new array.</source>
          <target state="translated">Мне нужно удалить дубликаты и поместить уникальные значения в новый массив.</target>
        </trans-unit>
        <trans-unit id="73e031ed418e5210dcc5f12cb652d371edea5ffe" translate="yes" xml:space="preserve">
          <source>If by any chance you were using</source>
          <target state="translated">Если,случайно,вы использовали</target>
        </trans-unit>
        <trans-unit id="a437e7d2838cef61cfe7addea4b3ef534ddb827c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;key&lt;/code&gt; is not primitive, you have to resort to the linear search:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если &lt;/font&gt;&lt;/font&gt; &lt;code&gt;key&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не является примитивным, вам придется прибегнуть к линейному поиску:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d1d6b7a33ee0a8e4800ddaea96bac45164f10742" translate="yes" xml:space="preserve">
          <source>If you identify &lt;code&gt;uniqueBy&lt;/code&gt; as the cause of a concrete performance penalty in your app, replace it with optimized code. That is, write your code first in an functional, declarative way. Afterwards, provided that you encounter performance issues, try to optimize the code at the locations, which are the cause of the problem.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы определили &lt;/font&gt;&lt;/font&gt; &lt;code&gt;uniqueBy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; как причину конкретного &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;снижения&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; производительности в вашем приложении, замените его оптимизированным кодом. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;То есть сначала напишите свой код функциональным, декларативным способом. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Впоследствии, при условии, что у вас возникли проблемы с производительностью, попробуйте оптимизировать код в местах, которые являются причиной проблемы.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ab0e7dce3a908fc76ed51abf9ce326ecd69fa572" translate="yes" xml:space="preserve">
          <source>If you're using jQuery and can't stand anything without a dollar before it, it goes like this:</source>
          <target state="translated">Если вы используете jQuery и ничего не можете выдержать без доллара до этого,все пойдет так:</target>
        </trans-unit>
        <trans-unit id="3ae2dc00a66fdb22a311cc02495ede59bedc1485" translate="yes" xml:space="preserve">
          <source>In ECMAScript 6 (aka ECMAScript 2015), &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; can be used to filter out duplicates. Then it can be converted back to an array using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;spread operator&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В ECMAScript 6 (он же ECMAScript 2015) &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; можно использовать для фильтрации дубликатов. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Затем он может быть преобразован обратно в массив с помощью &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;оператора распространения&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5e544d373fe6916aa41b2a5e1f371276a9bcb65b" translate="yes" xml:space="preserve">
          <source>In ES6 you can use a &lt;code&gt;Set&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В ES6 вы можете использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Set&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="167dc2dcc835e6c3326aed0689ba6dc35074c355" translate="yes" xml:space="preserve">
          <source>In ES6 you have Sets and Spread which makes it very easy and performant to remove all duplicates:</source>
          <target state="translated">В ES6 у вас есть Sets and Spread,что позволяет очень легко и эффективно удалять все дубликаты:</target>
        </trans-unit>
        <trans-unit id="8989c181d4d1b67f8d668569a17e489505f527a8" translate="yes" xml:space="preserve">
          <source>In chrome  v51 reduce &amp;amp; lut : 23.90ms vs filter &amp;amp; indexOf : 1066ms</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В Chrome v51 уменьшение &amp;amp; lut: 23,90 мс против фильтра и indexOf: 1066 мс&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fa679ec33507102effbf778174e8c2631726af00" translate="yes" xml:space="preserve">
          <source>In firefox v47 reduce &amp;amp; lut : 14.85ms vs filter &amp;amp; indexOf : 2836ms</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В Firefox v47 уменьшить &amp;amp; lut: 14,85 мс против фильтра и indexOf: 2836 мс&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cea7ad738688d995989a24aaafa8546f256b3f7c" translate="yes" xml:space="preserve">
          <source>It's a library with a host of functions for manipulating arrays.</source>
          <target state="translated">Это библиотека с множеством функций для управления массивами.</target>
        </trans-unit>
        <trans-unit id="94b3de46d5fda8e179f2f28c575f153e17e60955" translate="yes" xml:space="preserve">
          <source>It's the tie to go along with jQuery's tux, and Backbone.js's
  suspenders.</source>
          <target state="translated">Это галстук вместе со смокингом Джей Кюри и подтяжками Backbone.js.</target>
        </trans-unit>
        <trans-unit id="27c968e6692b41bf6e1a241b870dc41ff1a51b17" translate="yes" xml:space="preserve">
          <source>Libraries</source>
          <target state="translated">Libraries</target>
        </trans-unit>
        <trans-unit id="c81f35699be685add34bac0ef905ea52b6be0ebe" translate="yes" xml:space="preserve">
          <source>Memory Consumption and Garbage Collection</source>
          <target state="translated">Потребление памяти и сбор мусора</target>
        </trans-unit>
        <trans-unit id="47ae1edb4b6ab8e1304013b0910592cd36981138" translate="yes" xml:space="preserve">
          <source>More: &lt;a href=&quot;https://stackoverflow.com/a/25082874/2450730&quot;&gt;https://stackoverflow.com/a/25082874/2450730&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Подробнее: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/25082874/2450730&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://stackoverflow.com/a/25082874/2450730&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="85ebca451fa590d9155f3e01f22e262f73022640" translate="yes" xml:space="preserve">
          <source>My test case comparison:
&lt;a href=&quot;http://jsperf.com/remove-duplicate-array-tests&quot;&gt;http://jsperf.com/remove-duplicate-array-tests&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Мое сравнение тестовых случаев: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsperf.com/remove-duplicate-array-tests&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://jsperf.com/remove-duplicate-array-tests&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec0b4f527e5af3d0adc23eca5a85a60e6594e249" translate="yes" xml:space="preserve">
          <source>Note that, unlike in python, ES6 sets are iterated in insertion order, so this code preserves the order of the original array.</source>
          <target state="translated">Обратите внимание,что в отличие от питона,наборы ES6 итерируются в порядке вставки,поэтому данный код сохраняет порядок исходного массива.</target>
        </trans-unit>
        <trans-unit id="b47bd34a85a2811e200020c3cbdd86b83d777f79" translate="yes" xml:space="preserve">
          <source>Now this is the spectacular comeback of Map()..! May be now you can make a better decision when you want to remove the dupes.</source>
          <target state="translated">Теперь это захватывающее возвращение Map()...! Возможно,теперь вы сможете принять лучшее решение,когда захотите удалить дубликаты.</target>
        </trans-unit>
        <trans-unit id="8afa1e13386a1232742d929f60c72774ec2326f7" translate="yes" xml:space="preserve">
          <source>Now uniqueArray contains no duplicates.</source>
          <target state="translated">Теперь uniqueArray не содержит дубликатов.</target>
        </trans-unit>
        <trans-unit id="9ec2907aa469f6821b970a7fb3c51157c9cc9129" translate="yes" xml:space="preserve">
          <source>OK .. even though this one is O(n) and the others are O(n^2) i was curious to see benchmark comparison between this reduce / look up table and filter/indexOf combo (I choose Jeetendras very nice implementation &lt;a href=&quot;https://stackoverflow.com/a/37441144/4543207&quot;&gt;https://stackoverflow.com/a/37441144/4543207&lt;/a&gt;). I prepare a 100K item array filled with random positive integers in range 0-9999 and and it removes the duplicates. I repeat the test for 10 times and the average of the results show that they are no match in performance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ОК ... хотя это O (n), а остальные O (n ^ 2), мне было любопытно увидеть сравнение эталонных тестов между этой таблицей уменьшения / поиска и комбинацией filter / indexOf (я выбрал очень хорошую реализацию Jeetendras &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/37441144/4543207&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https: //stackoverflow.com/a/37441144/4543207&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я готовлю массив из 100 КБ, заполненный случайными положительными целыми числами в диапазоне 0-9999, и он удаляет дубликаты. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я повторяю тест 10 раз, и средние результаты показывают, что они не соответствуют производительности.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="14982fd566d790691f2414b94fff6c214b0ec176" translate="yes" xml:space="preserve">
          <source>One caveat: Array.lastIndexOf() was added in IE9, so if you need to go lower than that, you'll need to look elsewhere.</source>
          <target state="translated">Одно предостережение:Array.lastIndexOf()был добавлен в IE9,так что если вам нужно опуститься ниже,вам нужно искать в другом месте.</target>
        </trans-unit>
        <trans-unit id="6359004d219d441a7fd98b18f76da96282a7a92a" translate="yes" xml:space="preserve">
          <source>One line:</source>
          <target state="translated">Одна линия:</target>
        </trans-unit>
        <trans-unit id="425d7d39d9344fdef2a7433c1ea2dc8035792a02" translate="yes" xml:space="preserve">
          <source>Or, for an order-safe version, use an object to store all previously seen values, and check values against it before before adding to an array.</source>
          <target state="translated">Или же,в случае с версией,защищенной от ошибок,используйте объект для хранения всех ранее просмотренных значений и сверяйте их с ними перед добавлением в массив.</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="3130994b43da1d8950109e1c6564a8348e9d6104" translate="yes" xml:space="preserve">
          <source>Performance Considerations</source>
          <target state="translated">Показатели эффективности</target>
        </trans-unit>
        <trans-unit id="34fb3eeb78fc7a90a5b1c546d9892accd7bbc4da" translate="yes" xml:space="preserve">
          <source>Produces a duplicate-free version of the &lt;strong&gt;array&lt;/strong&gt;, using === to test object
  equality. If you know in advance that the &lt;strong&gt;array&lt;/strong&gt; is sorted, passing
  &lt;em&gt;true&lt;/em&gt; for &lt;strong&gt;isSorted&lt;/strong&gt; will run a much faster algorithm. If you want to
  compute unique items based on a transformation, pass an &lt;strong&gt;iterator&lt;/strong&gt;
  function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Создает версию &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;массива&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; без дубликатов &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, используя === для проверки равенства объектов. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы заранее знаете, что &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;массив&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; отсортирован, передача &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;true&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;isSorted&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; выполнит гораздо более быстрый алгоритм. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы хотите вычислить уникальные элементы на основе преобразования, передайте функцию &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;итератора&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="08211355427595285e350655413b390f94fa4272" translate="yes" xml:space="preserve">
          <source>Quick and dirty using jQuery:</source>
          <target state="translated">Быстро и грязно с помощью jQuery:</target>
        </trans-unit>
        <trans-unit id="9e88f9a1a4eb990b5d6e04b77c41e120b65441dc" translate="yes" xml:space="preserve">
          <source>Remove duplicate values from JS array</source>
          <target state="translated">Удалить дубликаты значений из массива JS</target>
        </trans-unit>
        <trans-unit id="116ed58a9ac48ee9ed724a44f4d19057f2357651" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://jsfiddle.net/s6skxLtz/4/&quot;&gt;&lt;strong&gt;this Fiddle&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Смотрите также &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://jsfiddle.net/s6skxLtz/4/&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;эту скрипку&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4bcb4e163bf193fe874c35e7a1a754e4ed2bd51c" translate="yes" xml:space="preserve">
          <source>Show code snippet</source>
          <target state="translated">Показать фрагмент кода</target>
        </trans-unit>
        <trans-unit id="699c6dcefd301187cfe53c9fcf84bb221d610c06" translate="yes" xml:space="preserve">
          <source>Similar question:</source>
          <target state="translated">Похожий вопрос:</target>
        </trans-unit>
        <trans-unit id="ac39eb7eec1a33c69714ccbe982b60c62d2ed791" translate="yes" xml:space="preserve">
          <source>Simplest One I've run into so far. In es6.</source>
          <target state="translated">Самый простой из тех,с кем я сталкивался до сих пор.В 6-ом.</target>
        </trans-unit>
        <trans-unit id="0ef0ebe3fc0c514a0634920d1e1254651fc565d2" translate="yes" xml:space="preserve">
          <source>So the options is:</source>
          <target state="translated">Значит,есть варианты:</target>
        </trans-unit>
        <trans-unit id="f79100578fc71d13412d5f55525916acaffe9b47" translate="yes" xml:space="preserve">
          <source>Someone asked about ordering the results based on how many unique names there are:</source>
          <target state="translated">Кто-то спросил о том,как заказать результаты,исходя из количества уникальных имен:</target>
        </trans-unit>
        <trans-unit id="e1a48f3427d9eddfab0ade65ec4b1cca73c8f276" translate="yes" xml:space="preserve">
          <source>Sometimes it's desired to uniquify a list based on some criteria other than just equality, for example, to filter out objects that are different, but share some property. This can be done elegantly by passing a callback. This &quot;key&quot; callback is applied to each element, and elements with equal &quot;keys&quot; are removed. Since &lt;code&gt;key&lt;/code&gt; is expected to return a primitive, hash table will work fine here:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Иногда желательно унифицировать список на основе некоторых критериев, отличных от равенства, например, чтобы отфильтровать объекты, которые отличаются, но имеют какое-то свойство. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это можно сделать элегантно, передав обратный вызов. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Этот обратный вызов &amp;laquo;ключа&amp;raquo; применяется к каждому элементу, а элементы с одинаковыми &amp;laquo;ключами&amp;raquo; удаляются. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Поскольку &lt;/font&gt;&lt;/font&gt; &lt;code&gt;key&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; как ожидается, вернет примитив, хеш-таблица будет работать нормально:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="952df80db868b6b570fa1dbaecf544bd4d0434db" translate="yes" xml:space="preserve">
          <source>Sort based on occurrence:</source>
          <target state="translated">Сортировка по происхождению:</target>
        </trans-unit>
        <trans-unit id="5ff57f4185e884322f43c9c59da60f12f41285ea" translate="yes" xml:space="preserve">
          <source>TL;DR</source>
          <target state="translated">TL;DR</target>
        </trans-unit>
        <trans-unit id="eb15050cfc7e83132ea94b727e93e728da0799e5" translate="yes" xml:space="preserve">
          <source>Test: &lt;a href=&quot;http://jsperf.com/wgu&quot;&gt;http://jsperf.com/wgu&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Тест: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsperf.com/wgu&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://jsperf.com/wgu&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="586339606bc4a03362f3e59eaae6936619d62352" translate="yes" xml:space="preserve">
          <source>That said, if your arrays contain only primitives and you don't care about types (e.g. it's always numbers), this solution is optimal.</source>
          <target state="translated">Тем не менее,если ваши массивы содержат только примитивы и вас не волнуют типы (например,это всегда числа),то такое решение является оптимальным.</target>
        </trans-unit>
        <trans-unit id="859dd2590c4a024ba0ed0e7e17925ec907bcb9ea" translate="yes" xml:space="preserve">
          <source>The best from two worlds</source>
          <target state="translated">Лучшие из двух миров</target>
        </trans-unit>
        <trans-unit id="9545a5d4e10dc6a7e8fabdf289be8c28ef8a32eb" translate="yes" xml:space="preserve">
          <source>The following is more than 80% faster than the jQuery method listed (see tests below).
It is an answer from a similar question a few years ago. If I come across the person who originally proposed it I will post credit.
Pure JS.</source>
          <target state="translated">Следующее более чем на 80% быстрее,чем перечисленный метод jQuery (см.тесты ниже).Это ответ на аналогичный вопрос несколько лет назад.Если я наткнусь на человека,который изначально предложил его,я поставлю оценку.Чистый JS.</target>
        </trans-unit>
        <trans-unit id="c1be9748262459c0cfed18be8758a161fa9c3150" translate="yes" xml:space="preserve">
          <source>The implementation is so simple, defining a function is no longer warranted.</source>
          <target state="translated">Реализация настолько проста,что определение функции больше не требуется.</target>
        </trans-unit>
        <trans-unit id="616fdf4d61602743bfe3812e3323328034f087f3" translate="yes" xml:space="preserve">
          <source>The most concise way to remove duplicates from an array using native javascript functions is to use a sequence like below:</source>
          <target state="translated">Самый простой способ удалить дубликаты из массива с помощью родных функций javascript-это использовать последовательность,как показано ниже:</target>
        </trans-unit>
        <trans-unit id="6edef424e78630f627fb00a487669aac7e7398e7" translate="yes" xml:space="preserve">
          <source>The thing to remember here is that objects MUST have unique keys. We are exploiting this to remove all the duplicates. I would have thought this would be the fastest solution (before ES6).</source>
          <target state="translated">Здесь нужно помнить,что объекты ДОЛЖНЫ иметь уникальные ключи.Мы используем это,чтобы удалить все дубликаты.Я бы подумал,что это будет самым быстрым решением (до ES6).</target>
        </trans-unit>
        <trans-unit id="17a346018132031a18b99a81d21bc3516ea51cac" translate="yes" xml:space="preserve">
          <source>The top answers have complexity of &lt;code&gt;O(n&amp;sup2;)&lt;/code&gt;, but this can be done with just &lt;code&gt;O(n)&lt;/code&gt; by using an object as a hash:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Лучшие ответы имеют сложность &lt;/font&gt;&lt;/font&gt; &lt;code&gt;O(n&amp;sup2;)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , но это можно сделать только &lt;/font&gt;&lt;/font&gt; &lt;code&gt;O(n)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , используя объект в качестве хеша:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b10b0d292925ee11a5945997c1484ed24978572b" translate="yes" xml:space="preserve">
          <source>There are probably faster ways but this one is pretty decent.</source>
          <target state="translated">Есть,наверное,более быстрые способы,но этот довольно приличный.</target>
        </trans-unit>
        <trans-unit id="caaf0e060e43d0ec0c496e3e516fdb861ff73f78" translate="yes" xml:space="preserve">
          <source>This chunk of ugly code does the same as the snippet #3 above, &lt;s&gt;but an order of magnitude faster&lt;/s&gt; (as of 2017 it's only twice as fast - JS core folks are doing a great job!)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Этот кусок уродливого кода делает то же самое, что и фрагмент № 3 выше, &lt;/font&gt;&lt;/font&gt;&lt;s&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;но на порядок быстрее&lt;/font&gt;&lt;/font&gt;&lt;/s&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (с 2017 года он только вдвое быстрее - основные сотрудники JS отлично справляются с работой!)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="34be48325432c435049de4b5fce8bf8f701c581a" translate="yes" xml:space="preserve">
          <source>This is how it's usually done. The idea is to place each element in a hashtable and then check for its presence instantly. This gives us linear time, but has at least two drawbacks:</source>
          <target state="translated">Вот как это обычно делается.Идея состоит в том,чтобы поместить каждый элемент в хэш-таблетку,а затем мгновенно проверить его наличие.Это дает нам линейное время,но имеет как минимум два недостатка:</target>
        </trans-unit>
        <trans-unit id="d32045aa30c503f5734fd8becb033645aa36217b" translate="yes" xml:space="preserve">
          <source>This is quadratic, but there are nice additional goodies, like wrapping native &lt;code&gt;indexOf&lt;/code&gt;, ability to uniqify by a key (&lt;code&gt;iteratee&lt;/code&gt; in their parlance), and optimizations for already sorted arrays.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это квадратично, но есть и хорошие &lt;/font&gt;&lt;/font&gt; &lt;code&gt;indexOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , такие как перенос нативного &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;indexOf&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , возможность uniqify по ключу ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;iteratee&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; на их языке) и оптимизации для уже отсортированных массивов.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b649cb8117bb75036b30b3a7a995456bb6f20525" translate="yes" xml:space="preserve">
          <source>This will work for strings, numbers, and dates.  If your array contains objects, the above solution won't work because when coerced to a string, they will all have a value of &lt;code&gt;&quot;[object Object]&quot;&lt;/code&gt; (or something similar) and that isn't suitable as a lookup value.  You can get an &lt;code&gt;O(n)&lt;/code&gt; implementation for objects by setting a flag on the object itself:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это будет работать для строк, чисел и дат. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если ваш массив содержит объекты, приведенное выше решение не будет работать, поскольку при приведении к строке все они будут иметь значение &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;[object Object]&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (или что-то подобное), и это не подходит в качестве значения для поиска. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете получить реализацию &lt;/font&gt;&lt;/font&gt; &lt;code&gt;O(n)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для объектов, установив флаг для самого объекта:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="79d3991c69b5dc6ca2ddee16f91e7d5abb041f25" translate="yes" xml:space="preserve">
          <source>Uniq reduce while keeping existing order</source>
          <target state="translated">Сокращение Uniq при сохранении существующего порядка</target>
        </trans-unit>
        <trans-unit id="2db3a69f0328c81b98a84c394f2c5dfec1997cc5" translate="yes" xml:space="preserve">
          <source>Unique by...</source>
          <target state="translated">Уникально...</target>
        </trans-unit>
        <trans-unit id="96aa205044de370fb2e8c218b80760bcb3e7b5dd" translate="yes" xml:space="preserve">
          <source>Update 2015: ES6 version:</source>
          <target state="translated">Обновление 2015 года:версия ES6:</target>
        </trans-unit>
        <trans-unit id="57a042a26b313b47c5306abc13676f31e632febd" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://underscorejs.org/&quot;&gt;Underscore.js&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Используйте &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://underscorejs.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Underscore.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00f6a4215968bee265bdb4841df188a8634d1f7f" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;Set&lt;/code&gt; variant above to keep the first, and the &lt;code&gt;Map&lt;/code&gt; to keep the last:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Используйте &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вариант &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Set&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; выше, чтобы сохранить первое, и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Map&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; чтобы сохранить последнее:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9bdab3ec80310e6364af5c88041386a0a8d43071" translate="yes" xml:space="preserve">
          <source>Using the 3rd (&quot;this array&quot;) parameter of the filter callback we can avoid a closure of the array variable:</source>
          <target state="translated">Используя 3-й (&quot;этот массив&quot;)параметр обратного вызова фильтра можно избежать закрытия переменной массива:</target>
        </trans-unit>
        <trans-unit id="dedc2810deb822938789db53e1998a107e835ed2" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;Set&lt;/a&gt; constructor and the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax&quot;&gt;spread syntax&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Используя &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;конструктор &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Set&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;синтаксис распространения&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9078a5b06471b912debb1bb930353e48daf752a7" translate="yes" xml:space="preserve">
          <source>We can easily derive &lt;code&gt;unique&lt;/code&gt; from &lt;code&gt;unqiueBy&lt;/code&gt; or use the faster implementation utilizing &lt;code&gt;Set&lt;/code&gt;s:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Мы можем легко получить &lt;/font&gt;&lt;/font&gt; &lt;code&gt;unique&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; из &lt;/font&gt;&lt;/font&gt; &lt;code&gt;unqiueBy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или использовать более быструю реализацию, используя &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Set&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; s:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d8edb0918abc7975f9aa03a86c637a0c01848e29" translate="yes" xml:space="preserve">
          <source>Well ok so far so good. But let's do it properly this time in the ES6 style. It looks so cool..! But as of now how it will perform against the powerful lut solution is a mystery to me. Lets first see the code and then benchmark it.</source>
          <target state="translated">Пока все в порядке.Но давайте на этот раз сделаем это как следует в стиле ES6.Выглядит так круто! Но на данный момент то,как он будет работать против мощного раствора люта,для меня загадка.Давайте сначала посмотрим на код,а затем проверим его.</target>
        </trans-unit>
        <trans-unit id="860d131c0ac854d1e9106c25332a2f1850c0bb0f" translate="yes" xml:space="preserve">
          <source>Well ok we are all happy now. But the lead role always comes last with some applause. I am sure some of you wonder what Set object would do. Now that since we are open to ES6 and we know Map is the winner of the previous games let us compare Map with Set as a final. A typical Real Madrid vs Barcelona game this time... or is it? Let's see who will win the el classico :)</source>
          <target state="translated">Ну ладно,теперь мы все счастливы.Но главная роль всегда заканчивается аплодисментами.Уверен,некоторые из вас задаются вопросом,что бы сделал &quot;Сет-объект&quot;.Теперь,когда мы открыты для ES6 и знаем,что Map-победитель предыдущих игр,давайте сравним Map с Set как финальный.Типичная игра &quot;Реал Мадрид&quot;-&quot;Барселона&quot; на этот раз...или это так? Давайте посмотрим,кто выиграет Эль Классико :)</target>
        </trans-unit>
        <trans-unit id="370230f0e4c174bcdf24f181eccb216042d92fa9" translate="yes" xml:space="preserve">
          <source>When I tested both implementation (with and without Set) for performance in chrome, I found that the one with Set is much much faster!</source>
          <target state="translated">Когда я тестировал обе реализации (с и без Set)для производительности в chrome,я обнаружил,что та,что с Set,намного быстрее!</target>
        </trans-unit>
        <trans-unit id="cc7d995a1841ad16ff9871b9c863d40c602272fb" translate="yes" xml:space="preserve">
          <source>When removing objects by a key, you might to want to keep the first of &quot;equal&quot; objects or the last one.</source>
          <target state="translated">При удалении объектов с помощью ключа,возможно,вам захочется сохранить первый из &quot;равных&quot; объектов или последний.</target>
        </trans-unit>
        <trans-unit id="9cd8fc792f4f69a6d051c2cf002e027d0f149103" translate="yes" xml:space="preserve">
          <source>Which one would  you use..? Well not so fast...! Don't be deceived. Map is at displacement. Now look... in all of the above cases we fill an array of size n with numbers of range &amp;lt; n. I mean we have an array of size 100 and we fill with random numbers 0..9 so there are definite duplicates and &quot;almost&quot; definitely each number has a duplicate. How about if we fill the array in size 100 with random numbers 0..9999. Let's now see Map playing at home. This time an Array of 100K items but random number range is 0..100M. We will do 100 consecutive tests to average the results. OK let's see the bets..! &amp;lt;- no typo</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Какой бы вы использовали ..? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ну, не так быстро ...! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Не обманывайтесь. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Карта находится в смещении. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь посмотрите ... во всех вышеупомянутых случаях мы заполняем массив размером n числами диапазона &amp;lt;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я имею в виду, что у нас есть массив размером 100, и мы заполняем случайными числами 0..9, так что есть определенные дубликаты, и &amp;laquo;почти&amp;raquo; определенно каждый номер имеет дубликат. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как насчет того, чтобы заполнить массив размером 100 случайными числами 0 ... 9999. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Давайте теперь посмотрим, как карта играет дома. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;На этот раз массив из 100 тысяч элементов, но диапазон случайных чисел равен 0..100M. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Мы сделаем 100 последовательных тестов, чтобы усреднить результаты. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Хорошо, давайте посмотрим ставки ..! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;lt;- без опечаток&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed0003a930932e628cb1a02a165ccbe0cc5dd994" translate="yes" xml:space="preserve">
          <source>Wow that was short..! But how about the performance..? It's beautiful... Since the heavy weight of the filter / indexOf lifted over our shoulders now i can test an array 1M random items of positive integers in range 0..99999 to get an average from 10 consecutive tests. I can say this time it's a real match. See the result for yourself :)</source>
          <target state="translated">Вау,это было коротко...! Но как насчет представления...? Оно прекрасно...Так как большой вес фильтра indexOf поднялся над нашими плечами,то теперь я могу протестировать массив 1M случайных элементов из положительных целых чисел в диапазоне 0...99999,чтобы получить среднее из 10 последовательных тестов.Могу сказать,что на этот раз это реальное совпадение.Посмотрите на результат :)</target>
        </trans-unit>
        <trans-unit id="ce3f0236d2d07dfd1e1329aa5c7e1c8b720a3cdc" translate="yes" xml:space="preserve">
          <source>Wow.. man..! Well unexpectedly it didn't turn out to be an el classico at all. More like Barcelona FC against CA Osasuna :))</source>
          <target state="translated">Ух ты...мужик! Ну,неожиданно оказалось,что это вовсе не Эль Классико.Больше похоже на ФК &quot;Барселона&quot; против КА Осасуна :)))</target>
        </trans-unit>
        <trans-unit id="0045ab03b3aca5a7e131f5f18508af47c2d688cd" translate="yes" xml:space="preserve">
          <source>Yet another ES6(2015) way of doing this that already works on a few browsers is:</source>
          <target state="translated">Еще один способ ES6(2015),который уже работает на нескольких браузерах:</target>
        </trans-unit>
        <trans-unit id="a32788844cd1d78d3a7e227d29ae1c9883b14fa4" translate="yes" xml:space="preserve">
          <source>You can always try putting it into an object, and then iterating through its keys:</source>
          <target state="translated">Вы всегда можете попробовать поместить его в объект,а затем выполнить итерацию с помощью его клавиш:</target>
        </trans-unit>
        <trans-unit id="c27db2f5ed434825f020965cf078662d7a5d8b98" translate="yes" xml:space="preserve">
          <source>You can simply do it in JavaScript, with the help of the second - index - parameter of the &lt;code&gt;filter&lt;/code&gt; method:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете просто сделать это в JavaScript, с помощью второго - index - параметра &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;метода &lt;/font&gt;&lt;/font&gt; &lt;code&gt;filter&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a5ccb2330f2aef610502456380da1cc91e063a81" translate="yes" xml:space="preserve">
          <source>You could do</source>
          <target state="translated">Ты можешь сделать</target>
        </trans-unit>
        <trans-unit id="05ae959e9015de3a83d1dea6e3427dfaa3c25b4a" translate="yes" xml:space="preserve">
          <source>cheers!</source>
          <target state="translated">cheers!</target>
        </trans-unit>
        <trans-unit id="cd5d12d528695cab4c8d95add53ef3ca6fd47109" translate="yes" xml:space="preserve">
          <source>declarative and succinct implementation</source>
          <target state="translated">декларативное и краткое осуществление</target>
        </trans-unit>
        <trans-unit id="a99cf5f1a9763e6a0397f2b5d498a9bb4364ec64" translate="yes" xml:space="preserve">
          <source>for the same reason, all objects will be considered equal: &lt;code&gt;uniq([{foo:1},{foo:2}])&lt;/code&gt; will return just &lt;code&gt;[{foo:1}]&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;по той же причине все объекты будут считаться равными: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;uniq([{foo:1},{foo:2}])&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вернет просто &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[{foo:1}]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="edd094385c15a6fae3174a4693769654adcb5c9f" translate="yes" xml:space="preserve">
          <source>generic solution by using a separate comparator function</source>
          <target state="translated">общее решение с использованием отдельной функции компаратора</target>
        </trans-unit>
        <trans-unit id="e239f6a1612923e74eebee43c2cf2d9f6d25d119" translate="yes" xml:space="preserve">
          <source>if it's been seen already, skip it</source>
          <target state="translated">если его уже видели,пропустите его.</target>
        </trans-unit>
        <trans-unit id="539c4ff4d14c88a5fc24a391f8070ba9e4472ef0" translate="yes" xml:space="preserve">
          <source>if you can't read the code above ask, read a javascript book or here are some explainations about shorter code. &lt;a href=&quot;https://stackoverflow.com/a/21353032/2450730&quot;&gt;https://stackoverflow.com/a/21353032/2450730&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы не можете прочитать приведенный выше код, спросите, прочитайте книгу по javascript или вот несколько объяснений более короткого кода. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/21353032/2450730&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://stackoverflow.com/a/21353032/2450730&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="c229b20c8b114325c93aa2b6a418145f99a20e45" translate="yes" xml:space="preserve">
          <source>or a &lt;code&gt;Map&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Map&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b5d6e1242f2ba1f7c81b87521cdec9e7f9b1add" translate="yes" xml:space="preserve">
          <source>or even using the &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;spread operator&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;или даже используя &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;оператор распространения&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="806d44b43276ce5b485db5f1967f4d34d2e458cf" translate="yes" xml:space="preserve">
          <source>or in short hand</source>
          <target state="translated">или вкратце</target>
        </trans-unit>
        <trans-unit id="1c48b3865f2548c947e1cc5c1192b629d30d0abb" translate="yes" xml:space="preserve">
          <source>otherwise, yield it and add it to the set of already seen values</source>
          <target state="translated">в противном случае,отдайте его и добавьте к набору уже видимых значений.</target>
        </trans-unit>
        <trans-unit id="fc555c29c370c91539f0994e128f9c3486cc9088" translate="yes" xml:space="preserve">
          <source>reuse of other small, generic functions</source>
          <target state="translated">повторное использование других небольших,общих функций</target>
        </trans-unit>
        <trans-unit id="20a7cc06c25fd99a1f0af70cca43ef31af8d4467" translate="yes" xml:space="preserve">
          <source>since hash keys can only be strings or symbols in JavaScript, this code doesn't distinguish numbers and &quot;numeric strings&quot;. That is, &lt;code&gt;uniq([1,&quot;1&quot;])&lt;/code&gt; will return just &lt;code&gt;[1]&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;поскольку ключи хеша могут быть только строками или символами в JavaScript, этот код не различает числа и &amp;laquo;числовые строки&amp;raquo;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;То есть &lt;/font&gt;&lt;/font&gt; &lt;code&gt;uniq([1,&quot;1&quot;])&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вернет просто &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[1]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b1efd96f20963e6d81c23833f2d90ccd388edad" translate="yes" xml:space="preserve">
          <source>sort | uniq</source>
          <target state="translated">uniq</target>
        </trans-unit>
        <trans-unit id="19231064d1513213b54b57152bb7ae4ff73cd591" translate="yes" xml:space="preserve">
          <source>take the next value from the argument</source>
          <target state="translated">брать следующее значение из аргумента</target>
        </trans-unit>
        <trans-unit id="37c6ff6e73a628714bf9271b1cad7a72b47334be" translate="yes" xml:space="preserve">
          <source>there's no need for &lt;code&gt;slice&lt;/code&gt; nor &lt;code&gt;indexOf&lt;/code&gt; within the reduce function, like i've seen in other examples! it makes sense to use it along with a filter function though:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;нет необходимости &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ни &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;slice&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ни в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;indexOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; внутри функции &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Reduce&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , как я видел в других примерах! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;имеет смысл использовать его вместе с функцией фильтра, хотя:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f855f12d97c8a7d6bc7de54edc1f31c979f43ac" translate="yes" xml:space="preserve">
          <source>this can be made shorter in ES6 to</source>
          <target state="translated">это может быть сокращено в ES6 до</target>
        </trans-unit>
        <trans-unit id="5782296420b9d703acbceb54a1f4355994661ab2" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;Array.filter()&lt;/code&gt; like this</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;используйте &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array.filter()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вот так&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e80a5930769a9f4a323662f414c3d43a685d1f98" translate="yes" xml:space="preserve">
          <source>which both also work with non-primitive keys.</source>
          <target state="translated">которые также работают с непримитивными ключами.</target>
        </trans-unit>
        <trans-unit id="8729ffcac367e70cb40c317ee0944702856d5a01" translate="yes" xml:space="preserve">
          <source>which is, again, a variation of the first snippet.</source>
          <target state="translated">что,опять же,вариация первого фрагмента.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
