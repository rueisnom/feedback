<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/601300">
    <body>
      <group id="601300">
        <trans-unit id="2b5bbce840c327341f3bdbe2133dd85074482141" translate="yes" xml:space="preserve">
          <source>... for the username.  Without proper encoding the query becomes:</source>
          <target state="translated">...为用户名。没有正确的编码,查询就会变成:</target>
        </trans-unit>
        <trans-unit id="6c5b33eadaf3e45b54d83bc40f378751a7e8e8d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Can someone explain SQL injecton?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有人可以解释SQL注入器吗？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0b785bc41297cc08ed43478238014759ca479da3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ensure that error messages give nothing away about the internal
  architecture of the application or the
  database.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;确保错误消息对应用程序或数据库的内部体系结构没有任何影响。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="552395547c5327bc08b0fdf1da0cff0e67a67c97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How does it cause vulnerabilities?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它是如何引起漏洞的？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2dcd8fc71e05cf69f2f4aedf034ba98a76d6ae8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Summary&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Summary&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4d300e17d0fe2d05645bfc184cd767d347c704da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use parameterised queries.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用参数化查询。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="61561fffcb4af6af0d91a621f7badded646e5c2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use stored procedures.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用存储过程。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="337ac24a8094784b6df46b432e1577adfa2921b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Where exactly is the point where SQL is injected?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL注入的确切位置在哪里？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="89e1ec855da07b1242941ea34f441cbc40516d61" translate="yes" xml:space="preserve">
          <source>Access the database using an account with the least privileges
  necessary.</source>
          <target state="translated">使用具有最低权限的账户访问数据库。</target>
        </trans-unit>
        <trans-unit id="c06b687cf1751311430a245780638503ea56bbcd" translate="yes" xml:space="preserve">
          <source>Although I expected &lt;code&gt;$id&lt;/code&gt; to be an integer, the attacker chose a string that is the name of the column.  Of course now the condition is true on &lt;em&gt;every&lt;/em&gt; row, so the attacker has just set the password for &lt;em&gt;every&lt;/em&gt; account.  Now the attacker can log in to anyone's account -- including privileged users.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;尽管我希望&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是一个整数，但攻击者还是选择了一个作为列名的字符串。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当然，现在条件在&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每一&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;行都成立，因此攻击者只需为&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;帐户&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;设置密码&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，攻击者可以登录任何人的帐户-包括特权用户。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b520abe31178deabd6ace4f406bd22d9091b3d4a" translate="yes" xml:space="preserve">
          <source>Any time you pass input from your users to your database you have a potential injection point.  Web applications are often lacking in the this regard, as new programmers often do not understand the risks of handling input from users, and web applications are attacked by very smart people you never thought would find your program.</source>
          <target state="translated">任何时候,当你把用户的输入传递到你的数据库时,你就会有一个潜在的注入点。Web应用程序在这方面往往是缺乏的,因为新的程序员往往不了解处理用户输入的风险,Web应用程序会被非常聪明的人攻击,而你从未想过会发现你的程序。</target>
        </trans-unit>
        <trans-unit id="99da07e5e58216685afad3cd9902ccbd2619fc6f" translate="yes" xml:space="preserve">
          <source>Are Parameters really enough to prevent Sql injections?</source>
          <target state="translated">参数真的可以防止Sql注入吗?</target>
        </trans-unit>
        <trans-unit id="c9084d0637d20eb3a66240ff9e17519e2a221ae5" translate="yes" xml:space="preserve">
          <source>Can someone explain SQL injection?  How does it cause vulnerabilities?  Where exactly is the point where SQL is injected?</source>
          <target state="translated">有人能解释一下SQL注入吗?它是如何造成漏洞的?SQL被注入的点究竟在哪里?</target>
        </trans-unit>
        <trans-unit id="b9f363b1a9ed7d8370aecdc116b951ba5fdfd028" translate="yes" xml:space="preserve">
          <source>Despite the title saying &quot;Advanced&quot;, it's quite readable even if you don't have much knowledge about SQL injection.</source>
          <target state="translated">尽管标题说的是 &quot;高级&quot;,但即使你对SQL注入的知识不多,也是相当可读的。</target>
        </trans-unit>
        <trans-unit id="ea7f40c542515662125b00fa1145d35a8c6c8922" translate="yes" xml:space="preserve">
          <source>Do a code review to check for the possibility of second-order
  attacks.</source>
          <target state="translated">做一个代码审查,检查二阶攻击的可能性。</target>
        </trans-unit>
        <trans-unit id="f8410ea19c34ffe9185e3aff071e279a998a521c" translate="yes" xml:space="preserve">
          <source>Doing this ensures that the database system knows that $postid is to be treated as data and not code, and will thus be handled appropriately.</source>
          <target state="translated">这样做可以确保数据库系统知道$postid被当作数据而不是代码来处理,因此会得到适当的处理。</target>
        </trans-unit>
        <trans-unit id="4450fb2d86b360b82970f04bb8129e3e7a8bb46d" translate="yes" xml:space="preserve">
          <source>Encrypt sensitive data.</source>
          <target state="translated">加密敏感数据。</target>
        </trans-unit>
        <trans-unit id="0abc56ca7f21e752b1024aef14298de6571c15f9" translate="yes" xml:space="preserve">
          <source>Ensure that data is valid.</source>
          <target state="translated">确保数据有效。</target>
        </trans-unit>
        <trans-unit id="46c1364b196c030988393015e7e5b4671d949d44" translate="yes" xml:space="preserve">
          <source>Example in PHP:</source>
          <target state="translated">PHP中的例子。</target>
        </trans-unit>
        <trans-unit id="a79fa45efdbab6e99bb4160ed1265a3eec3315b1" translate="yes" xml:space="preserve">
          <source>For instance, if you were to do</source>
          <target state="translated">比如说,如果你要做</target>
        </trans-unit>
        <trans-unit id="fa7849fd681ba2fa8e98df5fb7921a21d5a94ee5" translate="yes" xml:space="preserve">
          <source>Here are links to some of my past answers on this topic:</source>
          <target state="translated">以下是我过去对这个话题的一些回答的链接。</target>
        </trans-unit>
        <trans-unit id="517f74de6520c5a0856a2783bad93df91bfa0a99" translate="yes" xml:space="preserve">
          <source>How do I protect this function from SQL injection?</source>
          <target state="translated">如何保护这个函数不被SQL注入?</target>
        </trans-unit>
        <trans-unit id="9a7a06899410044f05609e3ee95b891e01a38888" translate="yes" xml:space="preserve">
          <source>I also gave a presentation at the MySQL Conference this month, and my slides are online:</source>
          <target state="translated">我也在这个月的MySQL大会上做了一个演讲,我的幻灯片也在网上。</target>
        </trans-unit>
        <trans-unit id="1e1e953e41ab6d1224694234226d3239f1ae8e9f" translate="yes" xml:space="preserve">
          <source>I found this paper to be an extremely good read about SQL injection techniques (link is to PDF): &lt;a href=&quot;http://www.cgisecurity.com/lib/advanced_sql_injection.pdf&quot;&gt;Advanced SQL Injection In SQL Server Applications&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我发现本文是有关SQL注入技术的非常好阅读（链接为PDF）：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.cgisecurity.com/lib/advanced_sql_injection.pdf&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL Server Applications中的高级SQL注入&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6ad224e0877e33aedb9253f0fd562954ecbd24ea" translate="yes" xml:space="preserve">
          <source>In short SQL injection attacks can leave you vulnerable to all manor of database data theft and destruction.  The exact details of what can be done to your system depend on the details of the system itself.</source>
          <target state="translated">简而言之,SQL注入攻击会让你的数据库数据被盗取和破坏。具体能对你的系统做什么,取决于系统本身的细节。</target>
        </trans-unit>
        <trans-unit id="5a4076eb73fa6e7ffd60a9ecb6ada01498cc2dfd" translate="yes" xml:space="preserve">
          <source>Install the database using an account with the least privileges
  necessary.</source>
          <target state="translated">使用具有最低权限的账户安装数据库。</target>
        </trans-unit>
        <trans-unit id="c9f9cec92dabaf949e6209e9368314f510f62c5e" translate="yes" xml:space="preserve">
          <source>Is SQL injection a risk today?</source>
          <target state="translated">如今SQL注入有风险吗?</target>
        </trans-unit>
        <trans-unit id="aedf0c38ed9280c1bd151a03608d90ca5e3ebdd8" translate="yes" xml:space="preserve">
          <source>It can lead to vulnerabilities because attackers can send values to an application that they know will be interpolated into a SQL string.  By being very clever, they can manipulate the result of queries, reading data or even changing data that they shouldn't be allowed to do.</source>
          <target state="translated">这可能导致漏洞,因为攻击者可以向应用程序发送他们知道会被插值到SQL字符串中的值。通过非常聪明,他们可以操纵查询结果,读取数据,甚至改变一些不应该被允许做的数据。</target>
        </trans-unit>
        <trans-unit id="8b8371387ee8d40284ee868b723bd0c03c102aa3" translate="yes" xml:space="preserve">
          <source>It doesn't have to be malicious, it can be an accident.  But accidental SQL injection is more likely to result in an error than in a vulnerability.</source>
          <target state="translated">它不一定是恶意的,也可能是意外的。但意外的SQL注入比漏洞更容易导致错误。</target>
        </trans-unit>
        <trans-unit id="99b2741ca4ec6f72540ee633e01e071027fbc49d" translate="yes" xml:space="preserve">
          <source>It isn't SQL that's injected, it's content that's interpolated (&quot;injected&quot;) into a SQL string, resulting in a different kind of query than I intended.  I trusted the dynamic content without verifying it, and executed the resulting SQL query blindly.  That's where the trouble starts.</source>
          <target state="translated">注入的不是SQL,而是内容被插值(&quot;注入&quot;)到SQL字符串中,导致查询结果与我的意图不同。我在没有验证的情况下就相信了动态内容,盲目的执行了所产生的SQL查询。问题就从这里开始了。</target>
        </trans-unit>
        <trans-unit id="99cf3b394baf0f46b22dbb7d2a531e9b82233c6b" translate="yes" xml:space="preserve">
          <source>Most cases of SQL injection can be avoided by using query parameters. See &lt;a href=&quot;https://stackoverflow.com/questions/60174/how-can-i-prevent-sql-injection-in-php&quot;&gt;How can I prevent SQL injection in PHP?&lt;/a&gt; for examples.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过使用查询参数可以避免大多数SQL注入情况。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请参阅&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/60174/how-can-i-prevent-sql-injection-in-php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如何防止在PHP中进行SQL注入？&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;举些例子。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="50e01c66af9964b930bb824e9aeed28a91002930" translate="yes" xml:space="preserve">
          <source>Normally it'd get you the post with a given id, but assume that &lt;code&gt;$postid&lt;/code&gt; is set to the string &lt;code&gt;10; DROP TABLE posts --&lt;/code&gt;; all of a sudden, the actual query you're sending is</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常，它将为您提供具有给定id的帖子，但假定&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$postid&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;设置为字符串&lt;/font&gt;&lt;/font&gt; &lt;code&gt;10; DROP TABLE posts --&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;突然之间，您发送的实际查询是&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="93fb4256ed36141892467497e4000a6c1c7b6189" translate="yes" xml:space="preserve">
          <source>Now suppose the attacker sets the POST request parameters to &quot;&lt;code&gt;password=xyzzy&lt;/code&gt;&quot; and &quot;&lt;code&gt;id=account_id&lt;/code&gt;&quot; resulting in the following SQL:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，假设攻击者将POST请求参数设置为&amp;ldquo; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;password=xyzzy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rdquo;和&amp;ldquo; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id=account_id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rdquo;，从而导致以下SQL：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f4877e9224df1f6fef6453cb639f17cd02853f6" translate="yes" xml:space="preserve">
          <source>Once you understand SQL Injection you'll get the joke behind &lt;a href=&quot;http://xkcd.com/327/&quot;&gt;this cartoon&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一旦您了解了SQL注入，您就会在&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://xkcd.com/327/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这部动画片&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;后面开个玩笑&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7aaadf9f0e634df906d7b4197e5453bdeae75cbc" translate="yes" xml:space="preserve">
          <source>Re-validate data in stored procedures.</source>
          <target state="translated">对存储过程中的数据进行重新验证。</target>
        </trans-unit>
        <trans-unit id="09889596052128777b94fbebbc6d54159437fbe1" translate="yes" xml:space="preserve">
          <source>SQL Injection Myths &amp;amp; Fallacies</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL注入神话与谬论&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ff449101efe3ea44f67cf407d52165fc61c6c06" translate="yes" xml:space="preserve">
          <source>SQL Injection can be prevented by using parameterised queries, or applying your language/toolkit's escaping functions (such as mysql_real_escape_string() in PHP).</source>
          <target state="translated">SQL注入可以通过使用参数化查询,或者应用你的languoolkit的转义函数(如PHP中的mysql_real_escape_string())来防止SQL注入。</target>
        </trans-unit>
        <trans-unit id="830d6c42145465f3bec4064c91d7a38f433c97bb" translate="yes" xml:space="preserve">
          <source>SQL Injection occurs when the user of an application is able to affect the meaning of database query.  This often occurs when arbitary strings from user input are concatenated to create SQL which is fed to the database.  For example lets say we had the following code (in PHP, but the same holds true for any language), which might be used to handle a user login.</source>
          <target state="translated">当应用程序的用户能够影响数据库查询的含义时,SQL注入就会发生。这种情况通常发生在用户输入的任意字符串被串联起来创建SQL,并将其送入数据库中。例如,让我们假设我们有以下代码(在PHP中,但对任何语言都是一样的),它可能被用来处理用户登录。</target>
        </trans-unit>
        <trans-unit id="afe2c66bdab75776d279ba484bc82dcc755212d4" translate="yes" xml:space="preserve">
          <source>SQL injection happens when you interpolate some content into a SQL query string, and the result modifies the syntax of your query in ways you didn't intend.</source>
          <target state="translated">当你将一些内容插入到SQL查询字符串中,结果会以你无意的方式修改了查询的语法。</target>
        </trans-unit>
        <trans-unit id="bbd2c02f7f816326cf0a770c6b3ff5c43d2a41fe" translate="yes" xml:space="preserve">
          <source>SQL injection is a fault in the application code, not typically in the database or in the database access library or framework.</source>
          <target state="translated">SQL注入是应用程序代码中的故障,通常不是数据库或数据库访问库或框架中的故障。</target>
        </trans-unit>
        <trans-unit id="17f73adc981acf9423bcbda4f935f51f096cf3ca" translate="yes" xml:space="preserve">
          <source>SQL injection is when things that're supposed to be data are treated as SQL code unwillingly.</source>
          <target state="translated">SQL注入是指那些本该是数据的东西不情愿地被当作SQL代码来处理。</target>
        </trans-unit>
        <trans-unit id="4ae389dd7686835ffb8aa0c50d88dae6a4893f2c" translate="yes" xml:space="preserve">
          <source>SQL injection is where a malicious user will put SQL into input fields to try and run the SQL on your server.</source>
          <target state="translated">SQL注入是指恶意用户将SQL注入到输入字段中,试图在你的服务器上运行SQL。</target>
        </trans-unit>
        <trans-unit id="9d7823352b302d3ab8d2cf63625a58a34107f146" translate="yes" xml:space="preserve">
          <source>Stored Procedure parameters don't get executed, making them safe in most cases.</source>
          <target state="translated">存储过程参数不会被执行,这使得它们在大多数情况下是安全的。</target>
        </trans-unit>
        <trans-unit id="74970b2cce3a74616bddb006adfa5df76a2ff0b7" translate="yes" xml:space="preserve">
          <source>The #1 advice that I adhere to is to use parameterized stored procedures rather than building raw SQL in code.</source>
          <target state="translated">我坚持的1号建议是使用参数化存储过程,而不是在代码中构建原始SQL。</target>
        </trans-unit>
        <trans-unit id="cb0534613c4da31b86bcd05960e9bc2e1790a299" translate="yes" xml:space="preserve">
          <source>The easiest way to prevent this is to use prepared statements, for instance through &lt;a href=&quot;http://dk2.php.net/manual/en/pdo.prepare.php&quot;&gt;PDO&lt;/a&gt; or &lt;a href=&quot;http://dk2.php.net/manual/en/mysqli.prepare.php&quot;&gt;MySQLi&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;防止这种情况的最简单方法是使用准备好的语句，例如通过&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://dk2.php.net/manual/en/pdo.prepare.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PDO&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://dk2.php.net/manual/en/mysqli.prepare.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQLi&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="baab30da65a26f814eb320515d2b742a0aed3c1f" translate="yes" xml:space="preserve">
          <source>The equivalent example in PDO would then be</source>
          <target state="translated">那么在PDO中的等效例子是</target>
        </trans-unit>
        <trans-unit id="27d81c66a1f2990775d4b4b8e9dad12710bf9906" translate="yes" xml:space="preserve">
          <source>The harm is done when the user enters something like</source>
          <target state="translated">当用户输入类似于</target>
        </trans-unit>
        <trans-unit id="7cc93607bdcff9b8a9dc6ad2138fb06ec65e1233" translate="yes" xml:space="preserve">
          <source>The harmful content doesn't have to come from a user, it could be content that your application gets from any source, or even generates itself in code.</source>
          <target state="translated">有害的内容不一定来自用户,它可以是你的应用程序从任何源头获得的内容,甚至是在代码中自己生成的内容。</target>
        </trans-unit>
        <trans-unit id="c075d8b315a48ba0666c573e14b9c5affbccc70a" translate="yes" xml:space="preserve">
          <source>The issue here is that the ' in the username closes out the username field then the -- starts a SQL comment causing the database server to ignore the rest of the string.  The net result is the user can now log in as the administrator without having to know the password.  SQL Inection can also be used to execute UPDATE, DELETE or DROP queries and really damage the database.</source>
          <target state="translated">这里的问题是用户名中的'关闭了用户名字段,然后----启动了一个SQL注释,导致数据库服务器忽略了其余的字符串。最终的结果是,用户现在可以以管理员的身份登录,而不需要知道密码。SQL Inection也可以用来执行UPDATE、DELETE或DROP查询,真正的破坏数据库。</target>
        </trans-unit>
        <trans-unit id="c22c97824664db9fc39a28c9f0c51b5f03045de0" translate="yes" xml:space="preserve">
          <source>The point where SQL is injected is any point that your application accepts input from the user.</source>
          <target state="translated">SQL注入的点是你的应用程序接受用户输入的任何一个点。</target>
        </trans-unit>
        <trans-unit id="4246f326246e56aef677f45e01ea02ba0b8f4c78" translate="yes" xml:space="preserve">
          <source>This is quite a problem, as you'd be losing your entire posts table due to a malicious user - oh dear.</source>
          <target state="translated">这是一个相当大的问题,因为你会因为一个恶意用户而失去整个帖子表--哦,亲爱的。</target>
        </trans-unit>
        <trans-unit id="bcdb9280acb97a37ce6af2f56b0c5d294d77a9c6" translate="yes" xml:space="preserve">
          <source>This question has been answered many times on StackOverflow, but it's an important topic for everyone to know about, so I'm not going to vote to close this question.</source>
          <target state="translated">这个问题在StackOverflow上已经回答过很多次了,但这是个很重要的话题,大家都应该知道,所以我就不投这个问题了。</target>
        </trans-unit>
        <trans-unit id="c8890a89f309458a2a5b8145e671cb6cc538cfda" translate="yes" xml:space="preserve">
          <source>To get some general background check out the &lt;a href=&quot;http://en.wikipedia.org/wiki/SQL_Injection&quot;&gt;Wikipedia article on SQL Injection&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要获得一些一般背景知识，请查阅&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/SQL_Injection&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Wikipedia上有关SQL Injection的文章&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f463a55b24708c3bb601be916e8d1abce07001b6" translate="yes" xml:space="preserve">
          <source>What is SQL Injection?</source>
          <target state="translated">什么是SQL注入?</target>
        </trans-unit>
        <trans-unit id="48a0b1df38fe66a67dc8d8704a75076883afb2a2" translate="yes" xml:space="preserve">
          <source>What is SQL injection</source>
          <target state="translated">什么是SQL注入</target>
        </trans-unit>
        <trans-unit id="283483d29f394f799b20e1171565f8d4968a9490" translate="yes" xml:space="preserve">
          <source>Whether this becomes a dangerous vulnerability for your web application depends on whether this input is later used as part of an SQL query without properly checking its type and escaping it if necessary.</source>
          <target state="translated">这是否会成为您的Web应用程序的一个危险漏洞,取决于此输入以后是否会被用作SQL查询的一部分,而没有正确检查其类型并在必要时进行转义。</target>
        </trans-unit>
        <trans-unit id="f9e8c1e367cb5b58e1d6f13e44325a7634215794" translate="yes" xml:space="preserve">
          <source>Without proper escaping, some SQL code 'injected' by the user could be executed by the SQL engine as SQL code, rather than a simple string or value.</source>
          <target state="translated">如果没有适当的转义,用户 &quot;注入 &quot;的一些SQL代码可能被SQL引擎以SQL代码的形式执行,而不是简单的字符串或值。</target>
        </trans-unit>
        <trans-unit id="d7ffe9e98b5a8b6021a347654dfaa71c72870120" translate="yes" xml:space="preserve">
          <source>You will like &lt;a href=&quot;http://www.codeproject.com/KB/database/SqlInjectionAttacks.aspx&quot;&gt;this&lt;/a&gt; article from code project ; )</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您会喜欢&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代码项目中的&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.codeproject.com/KB/database/SqlInjectionAttacks.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这篇&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文章；&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
