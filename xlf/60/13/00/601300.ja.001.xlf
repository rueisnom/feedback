<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/601300">
    <body>
      <group id="601300">
        <trans-unit id="2b5bbce840c327341f3bdbe2133dd85074482141" translate="yes" xml:space="preserve">
          <source>... for the username.  Without proper encoding the query becomes:</source>
          <target state="translated">...ユーザ名を指定します。適切なエンコーディングを行わないと、クエリは次のようになります。</target>
        </trans-unit>
        <trans-unit id="6c5b33eadaf3e45b54d83bc40f378751a7e8e8d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Can someone explain SQL injecton?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;誰かがSQLインジェクションを説明できますか？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0b785bc41297cc08ed43478238014759ca479da3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ensure that error messages give nothing away about the internal
  architecture of the application or the
  database.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エラーメッセージがアプリケーションまたはデータベースの内部アーキテクチャについて何も伝えていないことを確認します。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="552395547c5327bc08b0fdf1da0cff0e67a67c97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How does it cause vulnerabilities?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どのようにして脆弱性を引き起こしますか？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2dcd8fc71e05cf69f2f4aedf034ba98a76d6ae8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Summary&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Summary&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4d300e17d0fe2d05645bfc184cd767d347c704da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use parameterised queries.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パラメータ化されたクエリを使用します。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="61561fffcb4af6af0d91a621f7badded646e5c2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use stored procedures.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ストアドプロシージャを使用します。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="337ac24a8094784b6df46b432e1577adfa2921b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Where exactly is the point where SQL is injected?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQLが挿入されるポイントはどこですか？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="89e1ec855da07b1242941ea34f441cbc40516d61" translate="yes" xml:space="preserve">
          <source>Access the database using an account with the least privileges
  necessary.</source>
          <target state="translated">必要最低限の権限を持つアカウントを使用してデータベースにアクセスします。</target>
        </trans-unit>
        <trans-unit id="c06b687cf1751311430a245780638503ea56bbcd" translate="yes" xml:space="preserve">
          <source>Although I expected &lt;code&gt;$id&lt;/code&gt; to be an integer, the attacker chose a string that is the name of the column.  Of course now the condition is true on &lt;em&gt;every&lt;/em&gt; row, so the attacker has just set the password for &lt;em&gt;every&lt;/em&gt; account.  Now the attacker can log in to anyone's account -- including privileged users.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;$id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は整数である&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と想定&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;していましたが、攻撃者は列の名前である文字列を選択しました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もちろん、今は&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;行で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;条件がtrue &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;であるため、攻撃者は&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アカウントに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パスワードを設定しただけ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これで攻撃者は、特権ユーザーを含む誰のアカウントにもログインできるようになります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b520abe31178deabd6ace4f406bd22d9091b3d4a" translate="yes" xml:space="preserve">
          <source>Any time you pass input from your users to your database you have a potential injection point.  Web applications are often lacking in the this regard, as new programmers often do not understand the risks of handling input from users, and web applications are attacked by very smart people you never thought would find your program.</source>
          <target state="translated">ユーザーからの入力をデータベースに渡すときはいつでも、潜在的なインジェクションポイントがあります。新しいプログラマーはユーザーからの入力を扱うリスクを理解していないことが多く、Webアプリケーションは、あなたのプログラムが見つかるとは思ってもみなかった非常に賢い人たちに攻撃されているため、この点ではWebアプリケーションは不足していることが多いのです。</target>
        </trans-unit>
        <trans-unit id="99da07e5e58216685afad3cd9902ccbd2619fc6f" translate="yes" xml:space="preserve">
          <source>Are Parameters really enough to prevent Sql injections?</source>
          <target state="translated">パラメータは本当にSQLインジェクションを防ぐのに十分なのでしょうか?</target>
        </trans-unit>
        <trans-unit id="c9084d0637d20eb3a66240ff9e17519e2a221ae5" translate="yes" xml:space="preserve">
          <source>Can someone explain SQL injection?  How does it cause vulnerabilities?  Where exactly is the point where SQL is injected?</source>
          <target state="translated">誰かSQLインジェクションを説明してくれませんか?どのようにして脆弱性を引き起こすのでしょうか?SQLが注入されるポイントは具体的にどこにあるのでしょうか?</target>
        </trans-unit>
        <trans-unit id="b9f363b1a9ed7d8370aecdc116b951ba5fdfd028" translate="yes" xml:space="preserve">
          <source>Despite the title saying &quot;Advanced&quot;, it's quite readable even if you don't have much knowledge about SQL injection.</source>
          <target state="translated">タイトルに「上級者向け」と書いてあるにもかかわらず、SQLインジェクションの知識があまりなくてもかなり読み応えがあります。</target>
        </trans-unit>
        <trans-unit id="ea7f40c542515662125b00fa1145d35a8c6c8922" translate="yes" xml:space="preserve">
          <source>Do a code review to check for the possibility of second-order
  attacks.</source>
          <target state="translated">コードレビューをして、2次攻撃の可能性をチェックしてください。</target>
        </trans-unit>
        <trans-unit id="f8410ea19c34ffe9185e3aff071e279a998a521c" translate="yes" xml:space="preserve">
          <source>Doing this ensures that the database system knows that $postid is to be treated as data and not code, and will thus be handled appropriately.</source>
          <target state="translated">これにより、データベースシステムは $postid がコードではなくデータとして扱われることを認識し、適切に処理されることを保証します。</target>
        </trans-unit>
        <trans-unit id="4450fb2d86b360b82970f04bb8129e3e7a8bb46d" translate="yes" xml:space="preserve">
          <source>Encrypt sensitive data.</source>
          <target state="translated">機密データを暗号化します。</target>
        </trans-unit>
        <trans-unit id="0abc56ca7f21e752b1024aef14298de6571c15f9" translate="yes" xml:space="preserve">
          <source>Ensure that data is valid.</source>
          <target state="translated">データが有効であることを確認してください。</target>
        </trans-unit>
        <trans-unit id="46c1364b196c030988393015e7e5b4671d949d44" translate="yes" xml:space="preserve">
          <source>Example in PHP:</source>
          <target state="translated">PHPでの例。</target>
        </trans-unit>
        <trans-unit id="a79fa45efdbab6e99bb4160ed1265a3eec3315b1" translate="yes" xml:space="preserve">
          <source>For instance, if you were to do</source>
          <target state="translated">例えば、以下のようなことをしていたとします。</target>
        </trans-unit>
        <trans-unit id="fa7849fd681ba2fa8e98df5fb7921a21d5a94ee5" translate="yes" xml:space="preserve">
          <source>Here are links to some of my past answers on this topic:</source>
          <target state="translated">このトピックに関する私の過去の回答のいくつかのリンクはこちらです。</target>
        </trans-unit>
        <trans-unit id="517f74de6520c5a0856a2783bad93df91bfa0a99" translate="yes" xml:space="preserve">
          <source>How do I protect this function from SQL injection?</source>
          <target state="translated">この関数をSQLインジェクションから保護するには?</target>
        </trans-unit>
        <trans-unit id="9a7a06899410044f05609e3ee95b891e01a38888" translate="yes" xml:space="preserve">
          <source>I also gave a presentation at the MySQL Conference this month, and my slides are online:</source>
          <target state="translated">今月のMySQLカンファレンスでも発表しましたが、私のスライドがオンラインで公開されています。</target>
        </trans-unit>
        <trans-unit id="1e1e953e41ab6d1224694234226d3239f1ae8e9f" translate="yes" xml:space="preserve">
          <source>I found this paper to be an extremely good read about SQL injection techniques (link is to PDF): &lt;a href=&quot;http://www.cgisecurity.com/lib/advanced_sql_injection.pdf&quot;&gt;Advanced SQL Injection In SQL Server Applications&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このホワイトペーパーは、SQLインジェクションテクニック（リンクはPDFです）：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.cgisecurity.com/lib/advanced_sql_injection.pdf&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL Serverアプリケーションでの高度なSQLインジェクション&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;について非常によく読んでいることがわかりました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6ad224e0877e33aedb9253f0fd562954ecbd24ea" translate="yes" xml:space="preserve">
          <source>In short SQL injection attacks can leave you vulnerable to all manor of database data theft and destruction.  The exact details of what can be done to your system depend on the details of the system itself.</source>
          <target state="translated">要するに、SQLインジェクション攻撃は、データベースデータの盗難や破壊のあらゆる手段に対して脆弱なままにすることができます。あなたのシステムに何ができるかの正確な詳細は、システム自体の詳細に依存しています。</target>
        </trans-unit>
        <trans-unit id="5a4076eb73fa6e7ffd60a9ecb6ada01498cc2dfd" translate="yes" xml:space="preserve">
          <source>Install the database using an account with the least privileges
  necessary.</source>
          <target state="translated">必要最低限の権限を持つアカウントを使用してデータベースをインストールします。</target>
        </trans-unit>
        <trans-unit id="c9f9cec92dabaf949e6209e9368314f510f62c5e" translate="yes" xml:space="preserve">
          <source>Is SQL injection a risk today?</source>
          <target state="translated">今日のSQLインジェクションはリスクがあるのか?</target>
        </trans-unit>
        <trans-unit id="aedf0c38ed9280c1bd151a03608d90ca5e3ebdd8" translate="yes" xml:space="preserve">
          <source>It can lead to vulnerabilities because attackers can send values to an application that they know will be interpolated into a SQL string.  By being very clever, they can manipulate the result of queries, reading data or even changing data that they shouldn't be allowed to do.</source>
          <target state="translated">攻撃者は、SQL 文字列に補間されることを知っている値をアプリケーションに送ることができるため、脆弱性につながる可能性があります。非常に賢い攻撃者は、クエリの結果を操作したり、データを読み込んだり、許可されていないはずのデータを変更したりすることができます。</target>
        </trans-unit>
        <trans-unit id="8b8371387ee8d40284ee868b723bd0c03c102aa3" translate="yes" xml:space="preserve">
          <source>It doesn't have to be malicious, it can be an accident.  But accidental SQL injection is more likely to result in an error than in a vulnerability.</source>
          <target state="translated">悪意のあるものでなくても、偶発的なものでも構いません。しかし、偶発的なSQLインジェクションは、脆弱性よりもエラーになる可能性が高いです。</target>
        </trans-unit>
        <trans-unit id="99b2741ca4ec6f72540ee633e01e071027fbc49d" translate="yes" xml:space="preserve">
          <source>It isn't SQL that's injected, it's content that's interpolated (&quot;injected&quot;) into a SQL string, resulting in a different kind of query than I intended.  I trusted the dynamic content without verifying it, and executed the resulting SQL query blindly.  That's where the trouble starts.</source>
          <target state="translated">注入されたのはSQLではなく、SQL文字列に補間された(「注入された」)コンテンツで、結果的に私が意図したものとは異なる種類のクエリになってしまいました。私は検証せずに動的なコンテンツを信頼し、結果の SQL クエリをやみくもに実行してしまいました。そこからが問題の始まりです。</target>
        </trans-unit>
        <trans-unit id="99cf3b394baf0f46b22dbb7d2a531e9b82233c6b" translate="yes" xml:space="preserve">
          <source>Most cases of SQL injection can be avoided by using query parameters. See &lt;a href=&quot;https://stackoverflow.com/questions/60174/how-can-i-prevent-sql-injection-in-php&quot;&gt;How can I prevent SQL injection in PHP?&lt;/a&gt; for examples.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQLインジェクションのほとんどの場合は、クエリパラメータを使用することで回避できます。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/60174/how-can-i-prevent-sql-injection-in-php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHPでSQLインジェクションを防ぐに&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どうすればよいですか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例えば。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="50e01c66af9964b930bb824e9aeed28a91002930" translate="yes" xml:space="preserve">
          <source>Normally it'd get you the post with a given id, but assume that &lt;code&gt;$postid&lt;/code&gt; is set to the string &lt;code&gt;10; DROP TABLE posts --&lt;/code&gt;; all of a sudden, the actual query you're sending is</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常、指定されたIDの投稿を取得しますが、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$postid&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が文字列&lt;/font&gt;&lt;/font&gt; &lt;code&gt;10; DROP TABLE posts --&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定されている&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と想定し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DROP TABLEポスト-&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;突然、あなたが送信している実際のクエリは&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="93fb4256ed36141892467497e4000a6c1c7b6189" translate="yes" xml:space="preserve">
          <source>Now suppose the attacker sets the POST request parameters to &quot;&lt;code&gt;password=xyzzy&lt;/code&gt;&quot; and &quot;&lt;code&gt;id=account_id&lt;/code&gt;&quot; resulting in the following SQL:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、攻撃者がPOSTリクエストパラメータを「&lt;/font&gt;&lt;/font&gt; &lt;code&gt;password=xyzzy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」と「&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id=account_id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」に設定し、その結果、次のSQLが発生したとします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f4877e9224df1f6fef6453cb639f17cd02853f6" translate="yes" xml:space="preserve">
          <source>Once you understand SQL Injection you'll get the joke behind &lt;a href=&quot;http://xkcd.com/327/&quot;&gt;this cartoon&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQLインジェクションを理解すると、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://xkcd.com/327/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この漫画の&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;背後にある冗談がわかります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7aaadf9f0e634df906d7b4197e5453bdeae75cbc" translate="yes" xml:space="preserve">
          <source>Re-validate data in stored procedures.</source>
          <target state="translated">ストアドプロシージャのデータを再検証します。</target>
        </trans-unit>
        <trans-unit id="09889596052128777b94fbebbc6d54159437fbe1" translate="yes" xml:space="preserve">
          <source>SQL Injection Myths &amp;amp; Fallacies</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQLインジェクションの神話と誤解&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ff449101efe3ea44f67cf407d52165fc61c6c06" translate="yes" xml:space="preserve">
          <source>SQL Injection can be prevented by using parameterised queries, or applying your language/toolkit's escaping functions (such as mysql_real_escape_string() in PHP).</source>
          <target state="translated">SQL インジェクションは、パラメータ化されたクエリを使用したり、languagetoolkit のエスケープ関数 (PHP の mysql_real_escape_string()など)を適用したりすることで防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="830d6c42145465f3bec4064c91d7a38f433c97bb" translate="yes" xml:space="preserve">
          <source>SQL Injection occurs when the user of an application is able to affect the meaning of database query.  This often occurs when arbitary strings from user input are concatenated to create SQL which is fed to the database.  For example lets say we had the following code (in PHP, but the same holds true for any language), which might be used to handle a user login.</source>
          <target state="translated">SQL インジェクションは、アプリケーションのユーザがデータベースのクエリの意味に影響を与えることができる場合に発生します。これは、ユーザーの入力から任意の文字列を連結してSQLを作成し、データベースに供給する場合によく発生します。例えば、次のようなコード(PHPで書かれていますが、どの言語でも同じことが言えます)があるとしましょう。</target>
        </trans-unit>
        <trans-unit id="afe2c66bdab75776d279ba484bc82dcc755212d4" translate="yes" xml:space="preserve">
          <source>SQL injection happens when you interpolate some content into a SQL query string, and the result modifies the syntax of your query in ways you didn't intend.</source>
          <target state="translated">SQL インジェクションは、SQL クエリ文字列にあるコンテンツを補間し、その結果が意図しない方法でクエリの構文を変更した場合に発生します。</target>
        </trans-unit>
        <trans-unit id="bbd2c02f7f816326cf0a770c6b3ff5c43d2a41fe" translate="yes" xml:space="preserve">
          <source>SQL injection is a fault in the application code, not typically in the database or in the database access library or framework.</source>
          <target state="translated">SQLインジェクションはアプリケーションコードの欠陥であり、通常はデータベースやデータベースアクセスライブラリやフレームワークの欠陥ではありません。</target>
        </trans-unit>
        <trans-unit id="17f73adc981acf9423bcbda4f935f51f096cf3ca" translate="yes" xml:space="preserve">
          <source>SQL injection is when things that're supposed to be data are treated as SQL code unwillingly.</source>
          <target state="translated">SQLインジェクションは、データであるはずのものが、不本意ながらSQLコードとして扱われる場合です。</target>
        </trans-unit>
        <trans-unit id="4ae389dd7686835ffb8aa0c50d88dae6a4893f2c" translate="yes" xml:space="preserve">
          <source>SQL injection is where a malicious user will put SQL into input fields to try and run the SQL on your server.</source>
          <target state="translated">SQLインジェクションは、悪意のあるユーザーが入力フィールドにSQLを入れて、サーバー上でSQLを実行しようとするところです。</target>
        </trans-unit>
        <trans-unit id="9d7823352b302d3ab8d2cf63625a58a34107f146" translate="yes" xml:space="preserve">
          <source>Stored Procedure parameters don't get executed, making them safe in most cases.</source>
          <target state="translated">ストアドプロシージャのパラメータは実行されないので、ほとんどの場合は安全です。</target>
        </trans-unit>
        <trans-unit id="74970b2cce3a74616bddb006adfa5df76a2ff0b7" translate="yes" xml:space="preserve">
          <source>The #1 advice that I adhere to is to use parameterized stored procedures rather than building raw SQL in code.</source>
          <target state="translated">私が守っている第1のアドバイスは、生のSQLをコードで構築するのではなく、パラメータ化されたストアドプロシージャを使用することです。</target>
        </trans-unit>
        <trans-unit id="cb0534613c4da31b86bcd05960e9bc2e1790a299" translate="yes" xml:space="preserve">
          <source>The easiest way to prevent this is to use prepared statements, for instance through &lt;a href=&quot;http://dk2.php.net/manual/en/pdo.prepare.php&quot;&gt;PDO&lt;/a&gt; or &lt;a href=&quot;http://dk2.php.net/manual/en/mysqli.prepare.php&quot;&gt;MySQLi&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを防ぐ最も簡単な方法は、たとえば&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://dk2.php.net/manual/en/pdo.prepare.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PDO&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;や&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://dk2.php.net/manual/en/mysqli.prepare.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQLiを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;介して、準備されたステートメントを使用すること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="baab30da65a26f814eb320515d2b742a0aed3c1f" translate="yes" xml:space="preserve">
          <source>The equivalent example in PDO would then be</source>
          <target state="translated">PDO での同等の例は、次のようになります。</target>
        </trans-unit>
        <trans-unit id="27d81c66a1f2990775d4b4b8e9dad12710bf9906" translate="yes" xml:space="preserve">
          <source>The harm is done when the user enters something like</source>
          <target state="translated">のようなものを入力すると害がある。</target>
        </trans-unit>
        <trans-unit id="7cc93607bdcff9b8a9dc6ad2138fb06ec65e1233" translate="yes" xml:space="preserve">
          <source>The harmful content doesn't have to come from a user, it could be content that your application gets from any source, or even generates itself in code.</source>
          <target state="translated">有害なコンテンツはユーザーからのものである必要はなく、アプリケーションがどのようなソースからでも取得できるコンテンツである可能性がありますし、コードの中で自身を生成することもできます。</target>
        </trans-unit>
        <trans-unit id="c075d8b315a48ba0666c573e14b9c5affbccc70a" translate="yes" xml:space="preserve">
          <source>The issue here is that the ' in the username closes out the username field then the -- starts a SQL comment causing the database server to ignore the rest of the string.  The net result is the user can now log in as the administrator without having to know the password.  SQL Inection can also be used to execute UPDATE, DELETE or DROP queries and really damage the database.</source>
          <target state="translated">ここでの問題は、ユーザー名の'はユーザー名フィールドを閉じ、--はSQLコメントを開始し、データベースサーバーが残りの文字列を無視してしまうことです。その結果、ユーザーはパスワードを知らなくても管理者としてログインできるようになりました。SQL Inectionはまた、UPDATE、DELETEまたはDROPクエリを実行するためにも使用され、データベースに大きなダメージを与えます。</target>
        </trans-unit>
        <trans-unit id="c22c97824664db9fc39a28c9f0c51b5f03045de0" translate="yes" xml:space="preserve">
          <source>The point where SQL is injected is any point that your application accepts input from the user.</source>
          <target state="translated">SQLが注入されるポイントは、アプリケーションがユーザーからの入力を受け入れる任意のポイントです。</target>
        </trans-unit>
        <trans-unit id="4246f326246e56aef677f45e01ea02ba0b8f4c78" translate="yes" xml:space="preserve">
          <source>This is quite a problem, as you'd be losing your entire posts table due to a malicious user - oh dear.</source>
          <target state="translated">これはかなりの問題で、悪意のあるユーザーのせいで投稿テーブル全体を失うことになります-やれやれ。</target>
        </trans-unit>
        <trans-unit id="bcdb9280acb97a37ce6af2f56b0c5d294d77a9c6" translate="yes" xml:space="preserve">
          <source>This question has been answered many times on StackOverflow, but it's an important topic for everyone to know about, so I'm not going to vote to close this question.</source>
          <target state="translated">この質問はStackOverflowで何度も回答されていますが、みんなが知っておくべき重要なトピックなので、この質問を閉じることに投票するつもりはありません。</target>
        </trans-unit>
        <trans-unit id="c8890a89f309458a2a5b8145e671cb6cc538cfda" translate="yes" xml:space="preserve">
          <source>To get some general background check out the &lt;a href=&quot;http://en.wikipedia.org/wiki/SQL_Injection&quot;&gt;Wikipedia article on SQL Injection&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一般的な背景&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/SQL_Injection&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;については、SQLインジェクションに関するWikipediaの記事をご覧ください&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f463a55b24708c3bb601be916e8d1abce07001b6" translate="yes" xml:space="preserve">
          <source>What is SQL Injection?</source>
          <target state="translated">SQLインジェクションとは?</target>
        </trans-unit>
        <trans-unit id="48a0b1df38fe66a67dc8d8704a75076883afb2a2" translate="yes" xml:space="preserve">
          <source>What is SQL injection</source>
          <target state="translated">SQLインジェクションとは</target>
        </trans-unit>
        <trans-unit id="283483d29f394f799b20e1171565f8d4968a9490" translate="yes" xml:space="preserve">
          <source>Whether this becomes a dangerous vulnerability for your web application depends on whether this input is later used as part of an SQL query without properly checking its type and escaping it if necessary.</source>
          <target state="translated">これがウェブアプリケーションにとって危険な脆弱性になるかどうかは、この入力が、必要に応じて適切に型をチェックしてエスケープすることなく、後にSQLクエリの一部として使用されるかどうかにかかっています。</target>
        </trans-unit>
        <trans-unit id="f9e8c1e367cb5b58e1d6f13e44325a7634215794" translate="yes" xml:space="preserve">
          <source>Without proper escaping, some SQL code 'injected' by the user could be executed by the SQL engine as SQL code, rather than a simple string or value.</source>
          <target state="translated">適切なエスケープを行わないと、ユーザーによって「注入された」SQLコードの一部がSQLエンジンによって単純な文字列や値ではなく、SQLコードとして実行される可能性があります。</target>
        </trans-unit>
        <trans-unit id="d7ffe9e98b5a8b6021a347654dfaa71c72870120" translate="yes" xml:space="preserve">
          <source>You will like &lt;a href=&quot;http://www.codeproject.com/KB/database/SqlInjectionAttacks.aspx&quot;&gt;this&lt;/a&gt; article from code project ; )</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://www.codeproject.com/KB/database/SqlInjectionAttacks.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;記事はコードプロジェクトから&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;気に入っ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いただける&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でしょう&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
