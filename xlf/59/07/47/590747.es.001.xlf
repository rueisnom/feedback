<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/590747">
    <body>
      <group id="590747">
        <trans-unit id="4395cc0fae915253eae0065f85a71e65b4bc7e3b" translate="yes" xml:space="preserve">
          <source>&quot;It depends&quot; though. It's true that regexes don't and can't parse HTML with true accuracy, for all the reasons given here. If, however, the consequences of getting it wrong (such as not handling nested tags) are minor, and if regexes are super-convenient in your environment (such as when you're hacking Perl), go ahead.</source>
          <target state="translated">&quot;Depende&quot; sin embargo.Es cierto que los regexes no pueden y no pueden analizar el HTML con verdadera precisión,por todas las razones que se dan aquí.Sin embargo,si las consecuencias de equivocarse (como no manejar etiquetas anidadas)son menores,y si las regexes son superconvenientes en tu entorno (como cuando estás hackeando Perl),adelante.</target>
        </trans-unit>
        <trans-unit id="af85082f69ad5769d9f74610896fd6eed4b86142" translate="yes" xml:space="preserve">
          <source>(From &lt;a href=&quot;http://htmlparsing.com/regexes&quot;&gt;http://htmlparsing.com/regexes&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(De &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://htmlparsing.com/regexes&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://htmlparsing.com/regexes&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27800ad87d413ad5716af658035696ad3e026ff9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://regex101.com/r/wRD0zq/1&quot;&gt;Check it out&lt;/a&gt;. It works better with the &quot;gisx&quot; flags, as in the demo.</source>
          <target state="translated">&lt;a href=&quot;https://regex101.com/r/wRD0zq/1&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Compru&amp;eacute;belo usted mismo&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Funciona mejor con las banderas &quot;gisx&quot;, como en la demostraci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cb1c6dc3d2c56fa35a77ee4d259290f55a9ebc8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_q&lt;/code&gt; and &lt;code&gt;_v&lt;/code&gt; - Ignore these; they're used internally for backreferences.</source>
          <target state="translated">&lt;code&gt;_q&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;_v&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - ignore &amp;eacute;stos; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se usan internamente para referencias posteriores.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5af38e258f7e226c7d709ceda6a3abb0eee58431" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attribute&lt;/code&gt; - Repeated, each attribute.</source>
          <target state="translated">&lt;code&gt;attribute&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : repetido, cada atributo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="abf905e3408bbd38122e76e96951949af09821a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attribute_name&lt;/code&gt; - Repeated, each attribute name.</source>
          <target state="translated">&lt;code&gt;attribute_name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : repetido, cada nombre de atributo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77ef2ebf2740b3003af96487fc0dd8a7ba118232" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attribute_value&lt;/code&gt; - Repeated, each attribute value. This includes the quotes if it was quoted.</source>
          <target state="translated">&lt;code&gt;attribute_value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : repetido, cada valor de atributo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto incluye las comillas si fue citado.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2fd5528febd1427b52442fa61d692056bc0fe6c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attributes&lt;/code&gt; - All attributes inside the tag. Use this to get all attributes if you don't get repeated groups.</source>
          <target state="translated">&lt;code&gt;attributes&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : todos los atributos dentro de la etiqueta. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Use esto para obtener todos los atributos si no obtiene grupos repetidos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="460a27e0006886fdf800c3d08dbadf7a30dc0478" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cdata&lt;/code&gt; - If it's a &lt;code&gt;&amp;lt;![CDATA[...]]&amp;gt;&lt;/code&gt;, the CDATA contents.</source>
          <target state="translated">&lt;code&gt;cdata&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : si es un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;![CDATA[...]]&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , el contenido de CDATA.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ace024213200d16b6883f14135b9d388d90a8143" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;close_tag&lt;/code&gt; - If it's a close tag (&lt;code&gt;&amp;lt;/div&amp;gt;&lt;/code&gt;), the tag name.</source>
          <target state="translated">&lt;code&gt;close_tag&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : si se trata de una etiqueta de cierre ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;/div&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), el nombre de la etiqueta.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="11ca2311a1bdc145783958801123c62b8a3475cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;comment&lt;/code&gt; - If it's a comment, the comment contents.</source>
          <target state="translated">&lt;code&gt;comment&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : si es un comentario, el contenido del comentario.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="611629c2a2c1d3167ab21223962bf67e773b600a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;content&lt;/code&gt; - All of the content up to the next tag. You could leave this out.</source>
          <target state="translated">&lt;code&gt;content&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : todo el contenido hasta la siguiente etiqueta. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Podr&amp;iacute;as dejar esto fuera.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d0226a1899dd0ebdb7c7440b6a55858836acdda5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_self_closing&lt;/code&gt; - This is &lt;code&gt;/&lt;/code&gt; if it's a self-closing tag, otherwise nothing.</source>
          <target state="translated">&lt;code&gt;is_self_closing&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : esta es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;/&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; si es una etiqueta de cierre autom&amp;aacute;tico, de lo contrario, nada.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8373f55c65f57b758dedaca89483f064574d33dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;markup&lt;/code&gt; - The entire tag with everything in it.</source>
          <target state="translated">&lt;code&gt;markup&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : la etiqueta completa con todo lo que contiene.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c5ae4655932bfcb85cf29fcd2f5442305f0d6ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tag&lt;/code&gt; - If it's an open tag (&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;), the tag name.</source>
          <target state="translated">&lt;code&gt;tag&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : si es una etiqueta abierta ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), el nombre de la etiqueta.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4eeb907c5063d5d1ac6ada80e5dec10b1fd63993" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(this isn't really valid HTML, but I'm a nice guy)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Esto no es HTML v&amp;aacute;lido, pero soy un buen tipo)&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a05a4642a54a51dbdac5578a723590a5ccb96c81" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Performance note - It's quick. This is the fastest tag parser I've seen&lt;br/&gt;
(there may be faster, who knows).&lt;br/&gt;
I have several specific versions.  It is also excellent as scraper&lt;br/&gt;
(if you're the hands-on type).&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nota de rendimiento: es r&amp;aacute;pido. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este es el analizador de etiquetas m&amp;aacute;s r&amp;aacute;pido que he visto &lt;/font&gt;&lt;/font&gt;&lt;br/&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (puede haber m&amp;aacute;s r&amp;aacute;pido, qui&amp;eacute;n sabe). &lt;/font&gt;&lt;/font&gt;&lt;br/&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Tengo varias versiones espec&amp;iacute;ficas &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n es excelente como raspador &lt;/font&gt;&lt;/font&gt;&lt;br/&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (si eres del tipo pr&amp;aacute;ctico).&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4be0ecb33c003878e40261acd51179a8ef956166" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Web page note - I've never seen a web page (or xhtml/xml) that this&lt;br/&gt;
had trouble with. If you find one, let me know.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nota de la p&amp;aacute;gina web: nunca he visto una p&amp;aacute;gina web (o xhtml / xml) con la que haya &lt;/font&gt;&lt;/font&gt;&lt;br/&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tenido problemas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si encuentras uno, h&amp;aacute;zmelo saber.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ffd8d1ef48a0a114b118e0659e400a83d7ec6e5b" translate="yes" xml:space="preserve">
          <source>Actually, HTML parsing with regex is perfectly possible in PHP. You just have to parse the whole string backwards using &lt;code&gt;strrpos&lt;/code&gt; to find &lt;code&gt;&amp;lt;&lt;/code&gt; and repeat the regex from there using ungreedy specifiers each time to get over nested tags. Not fancy and terribly slow on large things, but I used it for my own personal template editor for my website. I wasn't actually parsing HTML, but a few custom tags I made for querying database entries to display tables of data (my &lt;code&gt;&amp;lt;#if()&amp;gt;&lt;/code&gt; tag could highlight special entries this way). I wasn't prepared to go for an XML parser on just a couple of self created tags (with very non-XML data within them) here and there.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En realidad, el an&amp;aacute;lisis HTML con expresiones regulares es perfectamente posible en PHP. Solo tiene que analizar toda la cadena hacia atr&amp;aacute;s usando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;strrpos&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para encontrar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y repetir la expresi&amp;oacute;n regular desde all&amp;iacute; usando especificadores no greedy cada vez para superar las etiquetas anidadas. No es lujoso y terriblemente lento en cosas grandes, pero lo us&amp;eacute; para mi propio editor de plantillas personales para mi sitio web. En realidad no estaba analizando HTML, pero algunas etiquetas personalizadas que hice para consultar las entradas de la base de datos para mostrar tablas de datos (mi &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;#if()&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; podr&amp;iacute;a resaltar entradas especiales de esta manera). No estaba preparado para buscar un analizador XML en solo un par de etiquetas auto creadas (con datos muy distintos de XML) aqu&amp;iacute; y all&amp;aacute;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f9b908fef12f22b2368da1032c9fa1f1faa12c2a" translate="yes" xml:space="preserve">
          <source>As far as just parsing the tags, it can be done with
regex and used to strip tags from a document.</source>
          <target state="translated">En cuanto a analizar las etiquetas,puede hacerse con regex y usarse para quitar las etiquetas de un documento.</target>
        </trans-unit>
        <trans-unit id="4eed14802878eb14f3ffcdad3442285458d4e215" translate="yes" xml:space="preserve">
          <source>As far as parsing goes, regular expressions can be useful in the &quot;lexical analysis&quot; (lexer) stage, where the input is broken down into tokens. It's less useful in the actual &quot;build a parse tree&quot; stage.</source>
          <target state="translated">En cuanto al análisis sintáctico,las expresiones regulares pueden ser útiles en la etapa de &quot;análisis léxico&quot; (lexer),en la que la entrada se descompone en fichas.Es menos útil en la etapa de &quot;construir un árbol de análisis&quot;.</target>
        </trans-unit>
        <trans-unit id="986811b4873e92aa52d2cb350591ecf649e9b81c" translate="yes" xml:space="preserve">
          <source>As new HTML or xml or any other develop new constructs, just add it as
one of the alternations.</source>
          <target state="translated">Como nuevo HTML o xml o cualquier otro desarrolle nuevas construcciones,sólo añádalo como una de las alternancias.</target>
        </trans-unit>
        <trans-unit id="2cb616430e7f124af50af96cae6e391bfa655b52" translate="yes" xml:space="preserve">
          <source>Because there are many ways to &quot;screw up&quot; HTML that browsers will treat in a rather liberal way but it would take quite some effort to reproduce the browser's liberal behaviour to cover all cases with regular expressions, so your regex will inevitably fail on some special cases, and that would possibly introduce serious security gaps in your system.</source>
          <target state="translated">Porque hay muchas maneras de &quot;fastidiar&quot; el HTML que los navegadores tratarán de manera bastante liberal,pero se necesitaría bastante esfuerzo para reproducir el comportamiento liberal del navegador para cubrir todos los casos con expresiones regulares,por lo que su regex fallará inevitablemente en algunos casos especiales,y eso posiblemente introduciría graves lagunas de seguridad en su sistema.</target>
        </trans-unit>
        <trans-unit id="7d92b9aebfbcec09915d99df147389b86e3db52c" translate="yes" xml:space="preserve">
          <source>CDATA - &lt;code&gt;&amp;lt;![CDATA[ ... ]]&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CDATA - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;![CDATA[ ... ]]&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3a3932c2e445d48802345074cd339f6a0c1bfcab" translate="yes" xml:space="preserve">
          <source>Close Tag - &lt;code&gt;&amp;lt;/div&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cerrar etiqueta - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;/div&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc17f6736d621be60a557975bb3c31e1a0d50519" translate="yes" xml:space="preserve">
          <source>Comment - &lt;code&gt;&amp;lt;!-- ... --&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Comentario - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;!-- ... --&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8773408d41d04ee9f99efe839bcb81a88d852ca2" translate="yes" xml:space="preserve">
          <source>Complete raw regex</source>
          <target state="translated">Rejilla completa en bruto</target>
        </trans-unit>
        <trans-unit id="d055caf259e1c4f2af0654bdb9ae984892cb9241" translate="yes" xml:space="preserve">
          <source>Demo here: &lt;a href=&quot;https://regex101.com/r/mH8jSu/11&quot;&gt;https://regex101.com/r/mH8jSu/11&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Demostraci&amp;oacute;n aqu&amp;iacute;: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://regex101.com/r/mH8jSu/11&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://regex101.com/r/mH8jSu/11&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a6de1a502bc05f5e24dc0a18448418fb4fbb4546" translate="yes" xml:space="preserve">
          <source>Entire HTML parsing is not possible with regular expressions, since it depends on matching the opening and the closing tag which is not possible with regexps.</source>
          <target state="translated">El análisis sintáctico completo de HTML no es posible con las expresiones regulares,ya que depende de la coincidencia de la etiqueta de apertura y cierre,lo cual no es posible con regexps.</target>
        </trans-unit>
        <trans-unit id="d6af410eb4941f72c23b14a17594d77df639cda4" translate="yes" xml:space="preserve">
          <source>Escaped Quotes - &lt;code&gt;&amp;lt;a title='John\'s Story'&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;&amp;lt;a title='John\'s Story'&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;lt;a title='John\'s Story'&amp;gt;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc143b21737108470de082a1f68f39117cb4dec2" translate="yes" xml:space="preserve">
          <source>For an HTML parser, I'd expect it to only accept well-formed HTML and that requires capabilities outside what a regular expression can do (they cannot &quot;count&quot; and make sure that a given number of opening elements are balanced by the same number of closing elements).</source>
          <target state="translated">Para un analizador de HTML,esperaría que sólo aceptara HTML bien formado y eso requiere capacidades fuera de lo que puede hacer una expresión regular (no pueden &quot;contar&quot; y asegurarse de que un número dado de elementos de apertura se equilibren con el mismo número de elementos de cierre).</target>
        </trans-unit>
        <trans-unit id="805586c8512e4781fc08c656680be7cb2ec9d28a" translate="yes" xml:space="preserve">
          <source>For example, it is an error for &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tags to be nested; if the web page is working correctly, then using a regular expression to grab a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; would be completely reasonable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo, es un error que las &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;etiquetas &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se aniden; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;si la p&amp;aacute;gina web funciona correctamente, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ser&amp;iacute;a completamente razonable &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;usar una expresi&amp;oacute;n regular para obtener un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9ea78541c96f9ecce68b8c671908b07b15dfafb4" translate="yes" xml:space="preserve">
          <source>For quick&amp;acute;n&amp;acute;dirty regexp will do fine.  But the fundamental thing to know is that it is &lt;em&gt;impossible&lt;/em&gt; to construct a regexp that will &lt;em&gt;correctly&lt;/em&gt; parse HTML.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para regexp r&amp;aacute;pido y sucio, estar&amp;aacute; bien. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero lo fundamental es saber que es &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;imposible&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; construir una expresi&amp;oacute;n regular que analice &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;correctamente&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; HTML.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8b4a327d01e5b16c1d6fb9247ad706f438a94461" translate="yes" xml:space="preserve">
          <source>Formatted look</source>
          <target state="translated">Aspecto formateado...</target>
        </trans-unit>
        <trans-unit id="771cee857d4f9831b9622222e8e07ee4504e3ac1" translate="yes" xml:space="preserve">
          <source>HTML/XML is divided into markup and content. 
Regex is only useful doing a lexical tag parse.
I guess you could deduce the content.
It would be a good choice for a SAX parser.
Tags and content could be delivered to a user
defined function where nesting/closure of elements
can be kept track of.</source>
          <target state="translated">El HTMLXML se divide en marcado y contenido.Regex sólo es útil para hacer un análisis léxico de las etiquetas.Supongo que se puede deducir el contenido.Sería una buena elección para un analizador SAX.Las etiquetas y el contenido podrían ser entregados a una función definida por el usuario donde el anidamiento de elementos puede ser rastreado.</target>
        </trans-unit>
        <trans-unit id="b6c4d9f3ede1060a1b3d94b5675ef28675741ed7" translate="yes" xml:space="preserve">
          <source>I believe that the answer lies in computation theory. For a language to be parsed using regex it must be by definition &quot;regular&quot; (&lt;a href=&quot;http://en.wikipedia.org/wiki/Regular_language&quot;&gt;link&lt;/a&gt;). HTML is not a regular language as it does not meet a number of criteria for a regular language (much to do with the many levels of nesting inherent in html code). If you are interested in the theory of computation I would recommend &lt;a href=&quot;http://books.google.co.uk/books?id=eRYFAAAACAAJ&amp;amp;dq=theory+of+computation&amp;amp;ei=WqimSamaGYvCMvCFrIQO&quot;&gt;this&lt;/a&gt; book.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Creo que la respuesta est&amp;aacute; en la teor&amp;iacute;a de la computaci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para que un lenguaje se analice usando regex debe ser, por definici&amp;oacute;n, &quot;regular&quot; ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Regular_language&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;enlace&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HTML no es un lenguaje regular ya que no cumple con una serie de criterios para un lenguaje regular (mucho que ver con los muchos niveles de anidamiento inherentes al c&amp;oacute;digo html). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si est&amp;aacute; interesado en la teor&amp;iacute;a de la computaci&amp;oacute;n, le recomendar&amp;iacute;a &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://books.google.co.uk/books?id=eRYFAAAACAAJ&amp;amp;dq=theory+of+computation&amp;amp;ei=WqimSamaGYvCMvCFrIQO&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;este&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; libro.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a928a77722b241bbded7ef2c3a06defb882a827" translate="yes" xml:space="preserve">
          <source>I guess I'm saying it's a tradeoff. Sometimes implementing or using a correct parser--as easy as that may be--might not be worth the trouble if accuracy isn't critical.</source>
          <target state="translated">Supongo que estoy diciendo que es un intercambio.A veces,implementar o usar un analizador correcto-tan fácil como eso puede ser-puede no valer la pena si la precisión no es crítica.</target>
        </trans-unit>
        <trans-unit id="d12e476321794c8e7a9a27947227c6300c9f92e0" translate="yes" xml:space="preserve">
          <source>I recently did some web scraping using only Selenium and regular expressions.  I got away with it because the data I wanted was put in a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;, and put in a simple table format (so I could even count on &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; to be non-nested--which is actually highly unusual).  In some degree, regular expressions were even almost necessary, because some of the structure I needed to access was delimited by comments.  (Beautiful Soup can give you comments, but it would have been difficult to grab &lt;code&gt;&amp;lt;!-- BEGIN --&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;!-- END --&amp;gt;&lt;/code&gt; blocks using Beautiful Soup.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Recientemente hice un poco de raspado web usando solo selenio y expresiones regulares. Me sal&amp;iacute; con la suya porque los datos que quer&amp;iacute;a se pusieron en un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y en un formato de tabla simple (por lo que incluso pod&amp;iacute;a contar con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para que no estuvieran anidados-- que en realidad es muy inusual) En cierto grado, las expresiones regulares eran incluso casi necesarias, porque parte de la estructura a la que necesitaba acceder estaba delimitada por comentarios. (Beautiful Soup puede darle comentarios, pero hubiera sido dif&amp;iacute;cil agarrar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;!-- BEGIN --&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;!-- END --&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; bloques usando Beautiful Soup.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b9ec2e21e1f1340402bed281e8475e9516fa540" translate="yes" xml:space="preserve">
          <source>I tried my hand at a regex for this too. It's mostly useful for finding chunks of content paired with the next HTML tag, and it doesn't look for &lt;strong&gt;&lt;em&gt;matching&lt;/em&gt;&lt;/strong&gt; close tags, but it will pick up close tags. Roll a stack in your own language to check those.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n prob&amp;eacute; con una expresi&amp;oacute;n regular para esto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es principalmente &amp;uacute;til para encontrar fragmentos de contenido emparejados con la siguiente etiqueta HTML, y no busca &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;etiquetas cercanas &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;coincidentes&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero recoger&amp;aacute; etiquetas cercanas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Haga rodar una pila en su propio idioma para verificarlos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="41123a269aea2954cdb8834f744ec25a89fde6c8" translate="yes" xml:space="preserve">
          <source>I'd use this in the context of writing a library that would allow me to perform HTML element retrieval akin to that of JavaScript's &lt;code&gt;[x].getElementsByTagName()&lt;/code&gt;, for example.  I'd just splice up the functionality I wrote in the DEFINE section of the regex and use it for stepping inside of a tree of elements, one at time.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo usar&amp;iacute;a en el contexto de escribir una biblioteca que me permitiera realizar una recuperaci&amp;oacute;n de elementos HTML similar a la de JavaScript &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[x].getElementsByTagName()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , por ejemplo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Simplemente unir&amp;iacute;a la funcionalidad que escrib&amp;iacute; en la secci&amp;oacute;n DEFINE de la expresi&amp;oacute;n regular y la usar&amp;iacute;a para entrar dentro de un &amp;aacute;rbol de elementos, uno a la vez.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c7c8dc5c9060790d4fe3b8d116db9bb1dc613d94" translate="yes" xml:space="preserve">
          <source>If I had to worry about nested tables, however, my approach simply would not have worked!  I would have had to fall back on Beautiful Soup.  Even then, however, sometimes you can use a regular expression to grab the chunk you need, and then drill down from there.</source>
          <target state="translated">Si tuviera que preocuparme por las mesas anidadas,sin embargo,mi enfoque simplemente no habría funcionado! Habría tenido que recurrir a Beautiful Soup.Incluso entonces,sin embargo,a veces puedes usar una expresión regular para coger el trozo que necesitas,y luego perforar desde allí.</target>
        </trans-unit>
        <trans-unit id="4f567391c297dab2d68e4b4a12e0168f2cdcf300" translate="yes" xml:space="preserve">
          <source>If used passively, there is never a problem
But, if you &lt;em&gt;force&lt;/em&gt; something to match by interspersing it with
a wanted attribute/value pair, and don't provide adequate protection
from backtracking, it's an out of control nightmare.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si se usa de forma pasiva, nunca hay un problema. Pero, si &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;obliga a que&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; algo coincida al intercalarlo con un par de atributo / valor deseado, y no proporciona la protecci&amp;oacute;n adecuada contra el retroceso, es una pesadilla fuera de control.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4cc43662eb969957208dfee823f1135d7e384e6a" translate="yes" xml:space="preserve">
          <source>If you just want to find all URLs that look like &lt;code&gt;http://.../&lt;/code&gt; you're fine with regexps. But if you want to find all URLs that are in a a-Element that has the class 'mylink' you probably better use a appropriate parser.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si solo desea encontrar todas las URL que se parecen a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;http://.../&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , est&amp;aacute; bien con expresiones regulares. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero si desea encontrar todas las URL que est&amp;aacute;n en un elemento a que tiene la clase 'mylink', probablemente sea mejor que use un analizador apropiado.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10c862c323b02ffd4219cfe4a2001bff7b5bd5f3" translate="yes" xml:space="preserve">
          <source>If your regex engine doesn't support repeated named captures, there's a section called out that you can use to get each attribute. Just run that regex on the &lt;code&gt;attributes&lt;/code&gt; group to get each &lt;code&gt;attribute&lt;/code&gt;, &lt;code&gt;attribute_name&lt;/code&gt; and &lt;code&gt;attribute_value&lt;/code&gt; out of it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si su motor regex no admite capturas repetidas con nombre, hay una secci&amp;oacute;n llamada que puede usar para obtener cada atributo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Simplemente ejecute esa expresi&amp;oacute;n regular en el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;grupo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;attributes&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para obtener cada &lt;/font&gt;&lt;/font&gt; &lt;code&gt;attribute&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;attribute_name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;attribute_value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="953de26c516b1cb0e64a7fa054794c93260b8994" translate="yes" xml:space="preserve">
          <source>If your regex flavor supports repeated named captures then you're golden, but Python &lt;code&gt;re&lt;/code&gt; doesn't (I know regex does, but I need to use vanilla Python). Here's what you get:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si su sabor regex admite capturas repetidas con nombre, entonces usted es dorado, pero Python &lt;/font&gt;&lt;/font&gt; &lt;code&gt;re&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no (s&amp;eacute; que regex s&amp;iacute;, pero necesito usar Python vainilla). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto es lo que obtienes:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a73238d323a90cf237a3c986e41589880059661b" translate="yes" xml:space="preserve">
          <source>In that case, misparsing some of the documents isn't going to be a big deal. Nobody but you will see the mistakes, and if you're very lucky there will be few enough that you can follow up individually.</source>
          <target state="translated">En ese caso,malparear algunos de los documentos no será un gran problema.Nadie más que tú verá los errores,y si tienes mucha suerte habrá pocos que puedas seguir individualmente.</target>
        </trans-unit>
        <trans-unit id="2f036fc60d3bc85fc4d19b8962c8916eb441f7a5" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;$url&lt;/code&gt; will indeed contain
&lt;code&gt;http://example.com/whatever.jpg&lt;/code&gt;.  But what happens when
you start getting HTML like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En este caso, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$url&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; contendr&amp;aacute; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;http://example.com/whatever.jpg&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero, &amp;iquest;qu&amp;eacute; sucede cuando comienzas a obtener HTML como este?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0bcc661e821002abff3e02aa0f156b2626e74d77" translate="yes" xml:space="preserve">
          <source>It is also, the single most &lt;em&gt;root of all evil&lt;/em&gt; to regular expressions.
The way it's used will trigger a bump-along to satisfy it's greedy, must-match
quantified container.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n es la &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ra&amp;iacute;z&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; m&amp;aacute;s simple &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;de todo mal&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para las expresiones regulares. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La forma en que se usa provocar&amp;aacute; un golpe para satisfacer su codicioso contenedor cuantificado que debe coincidir.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a862faf5daeb0b771f20fad26a1bfdbf39ec4609" translate="yes" xml:space="preserve">
          <source>It looks so simple, and it might be simple for a single, unchanging file, but for anything that you're going to be doing on arbitrary HTML data, regexes are just a recipe for future heartache.</source>
          <target state="translated">Parece tan simple,y puede ser simple para un solo archivo inalterable,pero para cualquier cosa que vayas a hacer con datos HTML arbitrarios,las regexes son sólo una receta para el dolor futuro.</target>
        </trans-unit>
        <trans-unit id="0460d7137809e80d4fcda9dba3e135cde4d467ed" translate="yes" xml:space="preserve">
          <source>It seems like every question on stackoverflow where the asker is using regex to grab some information from HTML will inevitably have an &quot;answer&quot; that says not to use regex to parse HTML.</source>
          <target state="translated">Parece que todas las preguntas en stackoverflow en las que el preguntador está usando regex para obtener alguna información del HTML tendrán inevitablemente una &quot;respuesta&quot; que dice que no se debe usar regex para analizar el HTML.</target>
        </trans-unit>
        <trans-unit id="5f17419b650a933a340ed879260fdd0460aad705" translate="yes" xml:space="preserve">
          <source>It's also pretty good about not triggering on malformed tags, like when you forget a &lt;code&gt;&amp;lt;&lt;/code&gt; or &lt;code&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n es bastante bueno no activar etiquetas mal formadas, como cuando olvida un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e76a2620404a008b7607079dab16a5996e4cc6cb" translate="yes" xml:space="preserve">
          <source>Just be careful with your assumptions. I can think of a few ways the regexp shortcut can backfire if you're trying to parse something that will be shown in public, for example.</source>
          <target state="translated">Sólo ten cuidado con tus suposiciones.Puedo pensar en algunas formas en que el atajo de regexp puede resultar contraproducente si estás tratando de analizar algo que se mostrará en público,por ejemplo.</target>
        </trans-unit>
        <trans-unit id="0ee036c1f21cc99a4f592fa76b90dff8d34867f1" translate="yes" xml:space="preserve">
          <source>Keep in mind that while HTML itself isn't regular, portions of a page you are looking at &lt;em&gt;might&lt;/em&gt; be regular.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que si bien el HTML en s&amp;iacute; no es regular, las partes de una p&amp;aacute;gina que est&amp;aacute; viendo &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;podr&amp;iacute;an&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ser regulares.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4ad1182dabcb25618b6f52fdf17404e7316ef7e7" translate="yes" xml:space="preserve">
          <source>Moreover, is there just something fundamental that I don't understand about regex that makes them a bad choice for parsing in general?</source>
          <target state="translated">Además,¿hay algo fundamental que no entiendo sobre los regex que los hace una mala elección para el análisis en general?</target>
        </trans-unit>
        <trans-unit id="7b57db2c767fc080d0fe413b92c1da4a8329d1da" translate="yes" xml:space="preserve">
          <source>Moving on, we also see that you just can't search for a specific tag
without parsing &lt;em&gt;ALL&lt;/em&gt; tags.
I mean you could, but it would have to use a combination of
verbs like (*SKIP)(*FAIL) but still all tags have to be parsed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Continuando, tambi&amp;eacute;n vemos que simplemente no puede buscar una etiqueta espec&amp;iacute;fica sin analizar &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TODAS las&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; etiquetas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Quiero decir que podr&amp;iacute;as, pero tendr&amp;iacute;a que usar una combinaci&amp;oacute;n de verbos como (* SKIP) (* FAIL) pero a&amp;uacute;n as&amp;iacute; todas las etiquetas tienen que ser analizadas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6e2de52d7c4e1998f605bf1da981560205660795" translate="yes" xml:space="preserve">
          <source>Named Captures For Interesting Bits</source>
          <target state="translated">Capturas nombradas por partes interesantes</target>
        </trans-unit>
        <trans-unit id="6468d1a0463a6c63ac5aab38d6bbfbf49311b8b5" translate="yes" xml:space="preserve">
          <source>Open Tag - &lt;code&gt;&amp;lt;div ...&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Abrir etiqueta - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;div ...&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db602c6706b5bfc281b0eb97b1273314aee7a1b0" translate="yes" xml:space="preserve">
          <source>Optional Attribute Values - &lt;code&gt;&amp;lt;input checked&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Valores de atributos opcionales - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;input checked&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d97d9ff49465ad7fe5019b81b0366d2d25125b1f" translate="yes" xml:space="preserve">
          <source>Over years of testing, I've found the secret to the
way browsers parse tags, both well and ill formed.</source>
          <target state="translated">A lo largo de años de pruebas,he encontrado el secreto de la forma en que los navegadores analizan las etiquetas,tanto bien como mal formadas.</target>
        </trans-unit>
        <trans-unit id="dfa6eff151200d8d6545cb4b94eb5f156c6d29d6" translate="yes" xml:space="preserve">
          <source>Regarding the suitability of regexes for parsing in general: they aren't suitable. Have you ever seen the sorts of regexes you would need to parse most languages?</source>
          <target state="translated">En cuanto a la idoneidad de los regex para el análisis en general:no son adecuados.¿Has visto alguna vez el tipo de gafas que necesitarías para analizar la mayoría de los idiomas?</target>
        </trans-unit>
        <trans-unit id="24a0b72ea201351d180c46f25e197e873f7d461b" translate="yes" xml:space="preserve">
          <source>Regular expressions are not powerful enough for such a language like HTML. Sure, there are some examples where you can use regular expressions. But in general it is not appropriate for parsing.</source>
          <target state="translated">Las expresiones regulares no son lo suficientemente poderosas para un lenguaje como el HTML.Claro,hay algunos ejemplos en los que puedes usar expresiones regulares.Pero en general no es apropiado para el análisis.</target>
        </trans-unit>
        <trans-unit id="636d175efd6f428f69463df2da6c8fe049bb3971" translate="yes" xml:space="preserve">
          <source>Regular expressions can only match &lt;a href=&quot;http://en.wikipedia.org/wiki/Regular_grammar&quot;&gt;regular languages&lt;/a&gt; but HTML is a &lt;a href=&quot;http://en.wikipedia.org/wiki/Context-free_grammar&quot;&gt;context-free language&lt;/a&gt; and &lt;em&gt;not&lt;/em&gt; a regular language (As @StefanPochmann pointed out, regular languages are also context-free, so context-free doesn't necessarily mean not regular). The only thing you can do with regexps on HTML is heuristics but that will not work on every condition. It should be possible to present a HTML file that will be matched wrongly by any regular expression.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las expresiones regulares solo pueden coincidir con &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Regular_grammar&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;los lenguajes regulares,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pero HTML es un &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Context-free_grammar&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lenguaje libre de contexto&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; un lenguaje regular (como se&amp;ntilde;al&amp;oacute; @StefanPochmann, los lenguajes regulares tambi&amp;eacute;n est&amp;aacute;n libres de contexto, por lo que no necesariamente significa no regular). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo &amp;uacute;nico que puede hacer con regexps en HTML es la heur&amp;iacute;stica, pero eso no funcionar&amp;aacute; en todas las condiciones. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Deber&amp;iacute;a ser posible presentar un archivo HTML que coincida incorrectamente con cualquier expresi&amp;oacute;n regular.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="927b0062082eb10a452df4fc67911db996f665b2" translate="yes" xml:space="preserve">
          <source>Regular expressions were not designed to handle a nested tag structure, and it is at best complicated (at worst, impossible) to handle all the possible edge cases you get with real HTML.</source>
          <target state="translated">Las expresiones regulares no fueron diseñadas para manejar una estructura de etiquetas anidadas,y es,en el mejor de los casos,complicado (en el peor,imposible)manejar todos los posibles casos de borde que se obtienen con el HTML real.</target>
        </trans-unit>
        <trans-unit id="508b1efb96364e901464c76ce38c62f0abff37e6" translate="yes" xml:space="preserve">
          <source>Say you've got a file of HTML where you're trying to extract URLs from
&amp;lt;img&amp;gt; tags.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Supongamos que tiene un archivo HTML en el que intenta extraer URL de etiquetas &amp;lt;img&amp;gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7e40b11994f4e086dff8723b500eec52892423b" translate="yes" xml:space="preserve">
          <source>Self-Closing Tag - &lt;code&gt;&amp;lt;div .../&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Etiqueta de cierre autom&amp;aacute;tico - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;div .../&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3761f4e690af3e670098893c902afc349b3fba45" translate="yes" xml:space="preserve">
          <source>Single / Double Quotes - &lt;code&gt;&amp;lt;div style=&quot;...&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Comillas simples / dobles - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;div style=&quot;...&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="906ad5ec89fbc3ba7f9ddc51c7cb1ca99de49b99" translate="yes" xml:space="preserve">
          <source>So you write a regex like this in Perl:</source>
          <target state="translated">Así que escribes un regex como este en Perl:</target>
        </trans-unit>
        <trans-unit id="61c8d502682262f0a5766160aa8f7dbc7ee2111c" translate="yes" xml:space="preserve">
          <source>So, even though this question is considerably dead, it still shows up in a Google search. I read it and thought &quot;challenge accepted&quot; and finished fixing my simple code without having to replace everything. Decided to offer a different opinion to anyone searching for a similar reason. Also the last answer was posted 4 hours ago so this is still a hot topic.</source>
          <target state="translated">Así que,aunque esta pregunta está considerablemente muerta,sigue apareciendo en una búsqueda de Google.Lo leí y pensé &quot;desafío aceptado&quot; y terminé de arreglar mi simple código sin tener que reemplazar todo.Decidí ofrecer una opinión diferente a cualquiera que buscara una razón similar.También la última respuesta fue publicada hace 4 horas así que este es todavía un tema candente.</target>
        </trans-unit>
        <trans-unit id="567a68686cb783a7d8b628180c0b05993979443b" translate="yes" xml:space="preserve">
          <source>So, to passively parse all tags, a regex is needed like the one below.
This particular one matches &lt;em&gt;invisible content&lt;/em&gt; as well.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, para analizar pasivamente todas las etiquetas, se necesita una expresi&amp;oacute;n regular como la siguiente. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este particular tambi&amp;eacute;n coincide con &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;contenido invisible&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="82ffd16a33e0b1ca997c28cc674e2da41660757d" translate="yes" xml:space="preserve">
          <source>So, will this be the final 100% answer for validating HTML?  No.  But it's a start and with a little more work, it can be done.  However, trying to do it inside of one regex execution is not practical, nor efficient.</source>
          <target state="translated">Entonces,¿esta será la respuesta final al 100% para validar el HTML? No.Pero es un comienzo y con un poco más de trabajo,se puede hacer.Sin embargo,intentar hacerlo dentro de una ejecución regex no es práctico,ni eficiente.</target>
        </trans-unit>
        <trans-unit id="76703768894d77a69bdb2cb028259a2c1f199d02" translate="yes" xml:space="preserve">
          <source>Spaces Around Equals Signs - &lt;code&gt;&amp;lt;a href = '...'&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Espacios alrededor de signos iguales - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;a href = '...'&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d956892852d89421b1011d518c075b3d6cc210fb" translate="yes" xml:space="preserve">
          <source>Suppose you're, oh, maybe parsing web pages that link to your site--perhaps you found them with a Google link search--and you want a quick way to get a general idea of the context surround your link. You're trying to run a little report that might alert you to link spam, something like that.</source>
          <target state="translated">Supongamos que estás,oh,tal vez analizando las páginas web que enlazan con tu sitio,tal vez las encontraste con una búsqueda de enlaces en Google,y quieres una forma rápida de tener una idea general del contexto que rodea a tu enlace.Intentas hacer un pequeño informe que podría alertarte sobre el spam de enlaces,algo así.</target>
        </trans-unit>
        <trans-unit id="23da7f4c7c18eb2ebd589bfe31c1218cc0fba8fa" translate="yes" xml:space="preserve">
          <source>Sure, there are problems that can be solved easily with regular expressions. But the emphasis lies on &lt;strong&gt;easily&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Claro, hay problemas que se pueden resolver f&amp;aacute;cilmente con expresiones regulares. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero el &amp;eacute;nfasis se encuentra &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;f&amp;aacute;cilmente&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6b567f228f781835db0f4b0b2c11bf319986aa0" translate="yes" xml:space="preserve">
          <source>The consensus above is that in general it is a bad idea. However if the HTML structure is known (and unlikely to change) then it is still a valid approach.</source>
          <target state="translated">El consenso anterior es que en general es una mala idea.Sin embargo,si se conoce la estructura del HTML (y es poco probable que cambie)entonces sigue siendo un enfoque válido.</target>
        </trans-unit>
        <trans-unit id="4d96306d3138d617684a4147a7d448a28bcb9851" translate="yes" xml:space="preserve">
          <source>The core of these tags use this regex</source>
          <target state="translated">El núcleo de estas etiquetas utiliza este regex</target>
        </trans-unit>
        <trans-unit id="12c0a3b216cd7502c6d3189af310c64e02a2c8a9" translate="yes" xml:space="preserve">
          <source>The normal elements are parsed with this form:</source>
          <target state="translated">Los elementos normales se analizan con esta forma:</target>
        </trans-unit>
        <trans-unit id="7a07e2cdf904bab293c8f44a993c4a9fe9dc10c1" translate="yes" xml:space="preserve">
          <source>The problem is that most users who ask a question that has to do with HTML and regex do this because they can't find an own regex that works. Then one has to think whether everything would be easier when using a DOM or SAX parser or something similar. They are optimized and constructed for the purpose of working with XML-like document structures.</source>
          <target state="translated">El problema es que la mayoría de los usuarios que hacen una pregunta que tiene que ver con HTML y regex lo hacen porque no pueden encontrar un regex propio que funcione.Entonces uno tiene que pensar si todo sería más fácil cuando se utiliza un analizador DOM o SAX o algo similar.Están optimizados y construidos con el propósito de trabajar con estructuras de documentos similares a XML.</target>
        </trans-unit>
        <trans-unit id="6e926028424ea6949c4225f11ab427abee4f09dc" translate="yes" xml:space="preserve">
          <source>The reason is that regexps can&amp;rsquo;t handle arbitarly nested expressions.  See &lt;a href=&quot;https://stackoverflow.com/questions/133601/can-regular-expressions-be-used-to-match-nested-patterns&quot;&gt;Can regular expressions be used to match nested patterns?&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La raz&amp;oacute;n es que las expresiones regulares no pueden manejar expresiones anidadas arbitrariamente. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Consulte &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/133601/can-regular-expressions-be-used-to-match-nested-patterns&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Se pueden usar expresiones regulares para unir patrones anidados?&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4eeca31a261d423ec3ac405a2c49416342d83155" translate="yes" xml:space="preserve">
          <source>The reason is that tag syntax may be hidden inside other tags, etc.</source>
          <target state="translated">La razón es que la sintaxis de la etiqueta puede estar oculta dentro de otras etiquetas,etc.</target>
        </trans-unit>
        <trans-unit id="ab4a31e37e413916e078017e76d634dbb0c47a2a" translate="yes" xml:space="preserve">
          <source>There are definitely cases where using a regular expression to parse some information from HTML is the correct way to go - it depends a lot on the specific situation.</source>
          <target state="translated">Definitivamente hay casos en los que el uso de una expresión regular para analizar alguna información del HTML es la forma correcta de hacerlo-depende mucho de la situación específica.</target>
        </trans-unit>
        <trans-unit id="794883a71e0ddf1afb3ad404866ef3ec43cd06e4" translate="yes" xml:space="preserve">
          <source>This expression retrieves attributes from HTML elements. It supports:</source>
          <target state="translated">Esta expresión recupera los atributos de los elementos HTML.Soporta:</target>
        </trans-unit>
        <trans-unit id="424e665dacfa9f73d392ac137fc1c59a0633c306" translate="yes" xml:space="preserve">
          <source>This is the general form for just plain old tags.
Notice the  &lt;code&gt;[\w:]&lt;/code&gt; representing the tag name?
In reality, the &lt;em&gt;legal&lt;/em&gt; characters representing the tag name
are an incredible list of Unicode characters.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta es la forma general de las etiquetas antiguas simples. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Observe que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[\w:]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; representa el nombre de la etiqueta? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En realidad, los &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;caracteres &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;legales&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que representan el nombre de la etiqueta son una lista incre&amp;iacute;ble de caracteres Unicode.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27f1c16cde1d4634c9abd15b03adc6f2c244fb97" translate="yes" xml:space="preserve">
          <source>This one is designed for Python (it might work for other languages, haven't tried it, it uses positive lookaheads, negative lookbehinds, and named backreferences).  Supports:</source>
          <target state="translated">Este está diseñado para Python (podría funcionar para otros idiomas,no lo he probado,usa lookaheads positivos,lookbehinds negativos,y backreferences nombrados).Soportes:</target>
        </trans-unit>
        <trans-unit id="db2913cc31865a5c12e5006695805e8e5cd592a9" translate="yes" xml:space="preserve">
          <source>Two quick reasons:</source>
          <target state="translated">Dos razones rápidas:</target>
        </trans-unit>
        <trans-unit id="f340f0710f69a62c5eaa6eb685638c10004a4e31" translate="yes" xml:space="preserve">
          <source>Unquoted / Quoted Attribute Values - &lt;code&gt;&amp;lt;div style='...'&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Valores de atributo sin comillas / comillas - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;div style='...'&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf979f25ebcf0dd8489293a6a06ecd67cf8578c4" translate="yes" xml:space="preserve">
          <source>Use with 'sx' options.  'g' too if you're feeling lucky:</source>
          <target state="translated">Usar con las opciones de 'sx'.'g' también si te sientes con suerte:</target>
        </trans-unit>
        <trans-unit id="7de133097d25bd9a014248818c72fa8c4f3f6d1d" translate="yes" xml:space="preserve">
          <source>Using regular expressions to parse HTML: why not</source>
          <target state="translated">Usar expresiones regulares para analizar el HTML:¿por qué no</target>
        </trans-unit>
        <trans-unit id="b3ab1467cb4e1b478099a1f9b90f27ecfc70116f" translate="yes" xml:space="preserve">
          <source>Why not? I'm aware that there are quote-unquote &quot;real&quot; HTML parsers out there like &lt;a href=&quot;http://www.crummy.com/software/BeautifulSoup/&quot;&gt;Beautiful Soup&lt;/a&gt;, and I'm sure they're powerful and useful, but if you're just doing something simple, quick, or dirty, then why bother using something so complicated when a few regex statements will work just fine?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por qu&amp;eacute; no? Soy consciente de que hay analizadores HTML &quot;reales&quot; entre comillas, como &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.crummy.com/software/BeautifulSoup/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Beautiful Soup&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y estoy seguro de que son potentes y &amp;uacute;tiles, pero si solo est&amp;aacute;s haciendo algo simple, r&amp;aacute;pido o sucio, &amp;iquest;por qu&amp;eacute;? &amp;iquest;te molestas en usar algo tan complicado cuando unas pocas expresiones regulares funcionar&amp;aacute;n bien?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9757013b0804ad8c5bcc00418e369208ee7725ed" translate="yes" xml:space="preserve">
          <source>You'll notice this &lt;code&gt;[^&amp;gt;]?&lt;/code&gt; as one of the alternations.
This will match unbalanced quotes from ill-formed tags.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Notar&amp;aacute;s esto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[^&amp;gt;]?&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;como una de las alternancias &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto coincidir&amp;aacute; con citas desequilibradas de etiquetas mal formadas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="57d2b94efe0c3ae7cf849406d8094f61fc11dcf1" translate="yes" xml:space="preserve">
          <source>You, know...there's a lot of mentality of you &lt;strong&gt;CAN'T&lt;/strong&gt; do it and I think that everyone on both sides of the fence are right and wrong.  You &lt;strong&gt;CAN&lt;/strong&gt; do it, but it takes a little more processing than just running one regex against it.  Take &lt;a href=&quot;http://bit.ly/1MKKkXh&quot;&gt;this&lt;/a&gt; (I wrote this inside of an hour) as an example.  It assumes the HTML is completely valid, but depending on what language you're using to apply the aforementioned regex, you could do some fixing of the HTML to make sure that it will succeed.  For example, removing closing tags that are not supposed to be there: &lt;em&gt;&lt;code&gt;&amp;lt;/img&amp;gt;&lt;/code&gt;&lt;/em&gt; for example.  Then, add the closing single HTML forward slash to elements that are missing them, etc.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sabes ... hay mucha mentalidad de que &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NO PUEDES&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; hacerlo y creo que todos en ambos lados de la cerca tienen raz&amp;oacute;n y est&amp;aacute;n equivocados. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Usted &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PUEDE&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; hacerlo, pero se necesita un poco m&amp;aacute;s que un simple procesamiento de ejecutar una expresi&amp;oacute;n regular en contra de ella. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tome &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://bit.ly/1MKKkXh&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;esto&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (escrib&amp;iacute; esto dentro de una hora) como ejemplo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Asume que el HTML es completamente v&amp;aacute;lido, pero dependiendo del idioma que est&amp;eacute; utilizando para aplicar la expresi&amp;oacute;n regular mencionada anteriormente, podr&amp;iacute;a corregir el HTML para asegurarse de que tenga &amp;eacute;xito. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo, eliminar etiquetas de cierre que no deber&amp;iacute;an estar all&amp;iacute;: &lt;/font&gt;&lt;/font&gt;&lt;em&gt; &lt;code&gt;&amp;lt;/img&amp;gt;&lt;/code&gt; &lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; por ejemplo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Luego, agregue la barra diagonal de cierre HTML &amp;uacute;nica a los elementos que les faltan, etc.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="873967e9412cc5fa50158062ff68caa1c43ab3ab" translate="yes" xml:space="preserve">
          <source>any number of attributes,</source>
          <target state="translated">cualquier número de atributos,</target>
        </trans-unit>
        <trans-unit id="6744ddde92c22c1c167220426fccdfaef678e371" translate="yes" xml:space="preserve">
          <source>check only for attributes inside tags,</source>
          <target state="translated">comprueba sólo los atributos dentro de las etiquetas,</target>
        </trans-unit>
        <trans-unit id="8ed1965df231e75838d517228b4031588e174b88" translate="yes" xml:space="preserve">
          <source>escape comments, and</source>
          <target state="translated">escapar de los comentarios,y</target>
        </trans-unit>
        <trans-unit id="c1738279e9cde423daaac3154dcca4a3a326f3fd" translate="yes" xml:space="preserve">
          <source>escaped quotes inside attributes,</source>
          <target state="translated">escapó de las citas dentro de los atributos,</target>
        </trans-unit>
        <trans-unit id="e29bf94c70de579d842c40216992453d7c91fda5" translate="yes" xml:space="preserve">
          <source>manage different quotes within an attribute value.</source>
          <target state="translated">manejar diferentes citas dentro de un valor de atributo.</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="447bb1d2f2dfd2da2f95b672536d879635f5a4fa" translate="yes" xml:space="preserve">
          <source>or you start getting false positives from</source>
          <target state="translated">o empiezas a obtener falsos positivos de</target>
        </trans-unit>
        <trans-unit id="66438fef6a53531bfd96d44917c3853150f0b1b7" translate="yes" xml:space="preserve">
          <source>single / double quotes,</source>
          <target state="translated">simples comillas dobles,</target>
        </trans-unit>
        <trans-unit id="cc0b573da7b5f047bd17290ccd3e7f707a068599" translate="yes" xml:space="preserve">
          <source>spaces around equals signs,</source>
          <target state="translated">los espacios alrededor son iguales a los signos,</target>
        </trans-unit>
        <trans-unit id="ba713ac9420a250a30aca6e2d8d055ad04109320" translate="yes" xml:space="preserve">
          <source>unquoted / quoted attributes,</source>
          <target state="translated">atributos no citados,</target>
        </trans-unit>
        <trans-unit id="b64567507aff7840957cce12ea0db64871c11462" translate="yes" xml:space="preserve">
          <source>writing a regex that can stand up to malicious input is hard; way harder than using a prebuilt tool</source>
          <target state="translated">escribir un regex que pueda soportar entradas maliciosas es difícil;mucho más difícil que usar una herramienta preconstruida</target>
        </trans-unit>
        <trans-unit id="dc619408694343df63807b45e39db0ef41a98202" translate="yes" xml:space="preserve">
          <source>writing a regex that can work with the ridiculous markup that you will inevitably be stuck with is hard; way harder than using a prebuilt tool</source>
          <target state="translated">escribir un regex que pueda trabajar con el ridículo marcado con el que inevitablemente te quedarás atascado es difícil;mucho más difícil que usar una herramienta preconstruida</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
