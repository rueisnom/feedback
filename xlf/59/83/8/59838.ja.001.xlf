<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/59838">
    <body>
      <group id="59838">
        <trans-unit id="fa993ec66455570012e9013cf1463ed955c29d2b" translate="yes" xml:space="preserve">
          <source>$ [[ &lt;code&gt;ls -ld SAMPLE_DIR| grep ^d | wc -l&lt;/code&gt; -eq 1 ]] &amp;amp;&amp;amp; echo exists || not exists
-ksh: not: not found [No such file or directory]</source>
          <target state="translated">$ [[ &lt;code&gt;ls -ld SAMPLE_DIR| grep ^d | wc -l&lt;/code&gt; grep ^ d | wc -l -eq 1]] &amp;amp;&amp;amp;エコーが存在します|| 存在しない-ksh：not：not found [該当するファイルまたはディレクトリはありません]</target>
        </trans-unit>
        <trans-unit id="207f52d501fccd0c1a03258f9a4ba170a5a42466" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/a/59871/26510&quot;&gt;This answer&lt;/a&gt; wrapped up as a shell script</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/59871/26510&quot;&gt;この答え&lt;/a&gt;はシェルスクリプトとしてまとめました</target>
        </trans-unit>
        <trans-unit id="9e0e12dfd443e81b936e303737feb7e5b54bce54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$?&lt;/code&gt;  if the last command sucess it returns &quot;0&quot; else non zero value.
suppose &lt;code&gt;tempdir&lt;/code&gt; is already present then &lt;code&gt;mkdir tempdir&lt;/code&gt; will give error like below:</source>
          <target state="translated">&lt;code&gt;$?&lt;/code&gt; 最後のコマンドが成功した場合は「0」を返し、それ以外の場合はゼロ以外の値を返します。 &lt;code&gt;tempdir&lt;/code&gt; がすでに存在しているとすると、 &lt;code&gt;mkdir tempdir&lt;/code&gt; は次のようなエラーを出します。</target>
        </trans-unit>
        <trans-unit id="feda4164b3c0a2676771fde73bb174bd7ed6f917" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-d file&lt;/code&gt;       True if file exists and is a directory.</source>
          <target state="translated">&lt;code&gt;-d file&lt;/code&gt; fileが存在し、それがディレクトリーである場合は真。</target>
        </trans-unit>
        <trans-unit id="434bb26fe4597d2630646259bd5f58901fd76397" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt; - This is a synonym for the &lt;code&gt;test&lt;/code&gt; builtin, but the last argument must, be a literal &lt;code&gt;]&lt;/code&gt;, to match the opening &lt;code&gt;[&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt; -これは組み込み &lt;code&gt;test&lt;/code&gt; 同義語ですが、最後の引数はリテラルでなければなりません &lt;code&gt;]&lt;/code&gt; で、開始 &lt;code&gt;[&lt;/code&gt; と一致します。</target>
        </trans-unit>
        <trans-unit id="eb1e3608bea738f684006334bf1064168d620141" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cd&lt;/code&gt; will give me a standard one line message to stderr already.  It will also give more information than I will be able to provide. By performing the &lt;code&gt;cd&lt;/code&gt; inside a subshell &lt;code&gt;( ... )&lt;/code&gt;, the command does not affect the current directory of the caller.  If the directory exists, this subshell and the function are just a no-op.</source>
          <target state="translated">&lt;code&gt;cd&lt;/code&gt; を実行すると、標準の1行のメッセージがstderrに送信されます。 また、私が提供できる以上の情報を提供します。 サブシェル &lt;code&gt;( ... )&lt;/code&gt; 内で &lt;code&gt;cd&lt;/code&gt; を実行すると、コマンドは呼び出し元の現在のディレクトリに影響を与えません。 ディレクトリが存在する場合、このサブシェルと関数は何もしません。</target>
        </trans-unit>
        <trans-unit id="027520a48b909e71c33dda807972513e35b92e3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;man test&lt;/code&gt; or &lt;code&gt;man [&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;man test&lt;/code&gt; または &lt;code&gt;man [&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bece6e4aec1b0d3891d5ef560eeef888ec945439" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://code.labstack.com/7GMFlEaC&quot;&gt;Try online&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://code.labstack.com/7GMFlEaC&quot;&gt;オンラインで試す&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="163253848062881e0d2329cc2527145d49820c0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Be careful, leave empty spaces on either side of both opening and closing braces.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt; ： &lt;strong&gt;注意してください&lt;/strong&gt; 。左右のブレースの両側に空白を残してください。</target>
        </trans-unit>
        <trans-unit id="3997fed95faa341282cd437483c5c670e8b1844c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output:&lt;/strong&gt;&lt;code&gt;bluh: directory&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;出力：&lt;/strong&gt; &lt;code&gt;bluh: directory&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bfb619c9b31d43d856e2c9622e21fcd9cbf45233" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output:&lt;/strong&gt;&lt;code&gt;cannot open 'blah' (No such file or directory)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;出力：&lt;/strong&gt; &lt;code&gt;cannot open 'blah' (No such file or directory)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b4185a6d1d73515d38f626b4858d6fd8bf83ab7" translate="yes" xml:space="preserve">
          <source>A philosphical note:
The shell is not an object oriented language, so the message says &lt;code&gt;pathname&lt;/code&gt;, not &lt;code&gt;directory&lt;/code&gt;.  At this level, I'd rather keep it simple - the arguments to a function are just strings.</source>
          <target state="translated">哲学的な注記：シェルはオブジェクト指向言語ではないため、メッセージには &lt;code&gt;directory&lt;/code&gt; ではなく &lt;code&gt;pathname&lt;/code&gt; が示されます。 このレベルでは、私はそれを単純に保ちたいです-関数への引数は単なる文字列です。</target>
        </trans-unit>
        <trans-unit id="0a45f6aedea833628df36f248058fcab8f52a9d6" translate="yes" xml:space="preserve">
          <source>A simple script to check whether the directory is present or not:</source>
          <target state="translated">ディレクトリが存在するかどうかをチェックする簡単なスクリプトです。</target>
        </trans-unit>
        <trans-unit id="a3c1d22947265563d45fd4e652519b22a668c349" translate="yes" xml:space="preserve">
          <source>A simple script to test if dir or file is present or not:</source>
          <target state="translated">dirやファイルが存在するかどうかをテストするためのシンプルなスクリプト。</target>
        </trans-unit>
        <trans-unit id="fd6e80065208ac7351071006ecfe52b4d309e9e5" translate="yes" xml:space="preserve">
          <source>Actually, you should use several tools to get a bulletproof approach:</source>
          <target state="translated">実際には、いくつかのツールを使って防弾アプローチをしてみましょう。</target>
        </trans-unit>
        <trans-unit id="464055c0f8481e3a474e0ca37383e37b458ec20a" translate="yes" xml:space="preserve">
          <source>As per &lt;a href=&quot;https://stackoverflow.com/users/15168/jonathan-leffler&quot;&gt;Jonathan&lt;/a&gt; comment:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/users/15168/jonathan-leffler&quot;&gt;ジョナサンの&lt;/a&gt;コメントによると：</target>
        </trans-unit>
        <trans-unit id="c5e4fba4b777f62c1a98acce6699a3a59b7781e3" translate="yes" xml:space="preserve">
          <source>Both combinations. In the following example, it checks the existence of the folder in the current directory:</source>
          <target state="translated">両方の組み合わせ。次の例では、カレントディレクトリ内のフォルダの存在をチェックします。</target>
        </trans-unit>
        <trans-unit id="b0a39235449c9b80afd08f03ea6648737facd108" translate="yes" xml:space="preserve">
          <source>Check existence of one or several folders based on a pattern within the current directory:</source>
          <target state="translated">カレントディレクトリ内のパターンに基づいて、1つまたは複数のフォルダの存在をチェックします。</target>
        </trans-unit>
        <trans-unit id="221be94517340b5d7edd17ba6f1747d346cae247" translate="yes" xml:space="preserve">
          <source>Check existence of the folder within sub-directories:</source>
          <target state="translated">サブディレクトリ内のフォルダの存在を確認します。</target>
        </trans-unit>
        <trans-unit id="f41aa9b9ef657005fb51d75b158b17ed6563060c" translate="yes" xml:space="preserve">
          <source>Check if directory exists, else make one</source>
          <target state="translated">ディレクトリが存在するかどうかをチェックし、存在しない場合はディレクトリを作成します。</target>
        </trans-unit>
        <trans-unit id="8817dabaf58544f10e9e8044e576b691d9909f99" translate="yes" xml:space="preserve">
          <source>Checking existing directory: &lt;code&gt;file bluh&lt;/code&gt;</source>
          <target state="translated">既存のディレクトリをチェックしてい &lt;code&gt;file bluh&lt;/code&gt; ： ファイルbluh</target>
        </trans-unit>
        <trans-unit id="1e7b8e871985e69d583f6865533432144019e169" translate="yes" xml:space="preserve">
          <source>Checking nonexistent file: &lt;code&gt;file blah&lt;/code&gt;</source>
          <target state="translated">存在しないファイルを確認しています： &lt;code&gt;file blah&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="d3f89fd4db9124590507d0a77795675385a13a81" translate="yes" xml:space="preserve">
          <source>Explanation: The &quot;ls&quot; command gives an error &quot;ls: /x: No such file or directory&quot; if the directory or symlink does not exist, and also sets the return code, which you can retrieve via &quot;$?&quot;, to non-null (normally &quot;1&quot;).
Be sure that you check the return code directly after calling &quot;ls&quot;.</source>
          <target state="translated">説明します。ls&quot; コマンドは、ディレクトリまたはシンボリックリンクが存在しない場合、エラー &quot;ls:x.ディレクトリまたはシンボリックリンクが存在しない場合は、&quot;No such file or directory&quot; というエラーを与え、また、&quot;$?&quot; で取得できるリターンコードを非 null (通常は &quot;1&quot;)に設定します。ls&quot; を呼び出した後、リターンコードを直接確認するようにしてください。</target>
        </trans-unit>
        <trans-unit id="1b1eea7be5fe905e80303ca40514b1db06d2f422" translate="yes" xml:space="preserve">
          <source>File under: &quot;When is a directory not a directory?&quot;  The answer: &quot;When it's a symlink to a directory.&quot;  A slightly more thorough test:</source>
          <target state="translated">下のファイル。&quot;ディレクトリはいつディレクトリではないのか?&quot; 答えは &quot;ディレクトリへのシンボリックリンクである場合&quot; もう少し徹底したテストです。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="5809133b5d742fa3d011e67ffed4584ce187906c" translate="yes" xml:space="preserve">
          <source>For possible options or further help, check:</source>
          <target state="translated">可能なオプションやさらなるヘルプについては、確認してください。</target>
        </trans-unit>
        <trans-unit id="0e50a574ae5c5907245152793f0a5b1ec421b157" translate="yes" xml:space="preserve">
          <source>Great solutions out there, but ultimately every script will fail if you're not in the right directory. So code like this:</source>
          <target state="translated">素晴らしい解決策がありますが、最終的には正しいディレクトリにないとすべてのスクリプトが失敗してしまいます。そこで、このようなコードを書いてみましょう。</target>
        </trans-unit>
        <trans-unit id="583aed4873fd41e41427b6bc1d64cb3bd468fd28" translate="yes" xml:space="preserve">
          <source>Have you considered just doing whatever you want to do in the &lt;code&gt;if&lt;/code&gt; rather than looking before you leap?</source>
          <target state="translated">飛躍する前に見るのではなく、 &lt;code&gt;if&lt;/code&gt; でやりたいことを何でもすることを考えましたか ？</target>
        </trans-unit>
        <trans-unit id="082b4e4b43eda6f1643255fe64e1a3ad94266d3b" translate="yes" xml:space="preserve">
          <source>Here's a very pragmatic idiom:</source>
          <target state="translated">ここに、とても実用的な慣用句があります。</target>
        </trans-unit>
        <trans-unit id="a2fc766f174dc35f89cacdbd9b843d7518a58574" translate="yes" xml:space="preserve">
          <source>How about &lt;code&gt;file&lt;/code&gt; program.
Considering all directories are also files in linux, issuing following command would suffice:</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; プログラムはどうですか。 Linuxではすべてのディレクトリもファイルであるため、次のコマンドを発行するだけで十分です。</target>
        </trans-unit>
        <trans-unit id="dd106d637fc8e15919d6f826690e723d312a6366" translate="yes" xml:space="preserve">
          <source>How to check if a directory exists in a Bash shell script</source>
          <target state="translated">Bashシェルスクリプトでディレクトリが存在するかどうかを確認する方法</target>
        </trans-unit>
        <trans-unit id="bd085a6bf0566c0ec2d66c9e634591d684f558b5" translate="yes" xml:space="preserve">
          <source>However, as &lt;a href=&quot;https://stackoverflow.com/users/1438/jon-ericson&quot;&gt;Jon Ericson&lt;/a&gt; points out, subsequent commands may not work as intended if you do not take into account that a symbolic link to a directory will also pass this check.
E.g. running this:</source>
          <target state="translated">ただし、 &lt;a href=&quot;https://stackoverflow.com/users/1438/jon-ericson&quot;&gt;Jon Ericsonが&lt;/a&gt;指摘しているように、ディレクトリへのシンボリックリンクもこのチェックに合格することを考慮に入れないと、後続のコマンドが意図したとおりに機能しない可能性があります。 例えばこれを実行します：</target>
        </trans-unit>
        <trans-unit id="1387051c9062c34eca949313dbc4255c45cc0e5c" translate="yes" xml:space="preserve">
          <source>I find the &lt;a href=&quot;http://tldp.org/LDP/abs/html/testconstructs.html#DBLBRACKETS&quot;&gt;double-bracket&lt;/a&gt; version of &lt;code&gt;test&lt;/code&gt; makes writing logic tests more natural:</source>
          <target state="translated">&lt;a href=&quot;http://tldp.org/LDP/abs/html/testconstructs.html#DBLBRACKETS&quot;&gt;二重括弧&lt;/a&gt;バージョンの &lt;code&gt;test&lt;/code&gt; すると、論理テストをより自然に記述できることがわかります。</target>
        </trans-unit>
        <trans-unit id="8353f3f0e57f21586871e79884cb6c9a83d64eba" translate="yes" xml:space="preserve">
          <source>I typically wrap it in a function:</source>
          <target state="translated">私は通常、関数でラップしています。</target>
        </trans-unit>
        <trans-unit id="efdcc2153210f84be1577c66bcb97d8702d15893" translate="yes" xml:space="preserve">
          <source>I understand the initial question like this: to verify if a directory exists irrespective of the user's position in the file system. So using the command 'find' might do the trick:</source>
          <target state="translated">最初の質問は、ファイルシステム内のユーザの位置に関係なく、ディレクトリが存在するかどうかを検証するというものです。ですから、'find' コマンドを使うとうまくいくかもしれません。</target>
        </trans-unit>
        <trans-unit id="fa3207379d74a302595b72eb870d61ed50dccb53" translate="yes" xml:space="preserve">
          <source>IE, if you want to check for the existence of a directory before you enter it, try just doing this:</source>
          <target state="translated">IEでは、ディレクトリを入力する前にディレクトリの存在を確認したい場合は、以下のようにしてみてください。</target>
        </trans-unit>
        <trans-unit id="fc67cf90106128a01a6735a9988d697f72e14a92" translate="yes" xml:space="preserve">
          <source>If  &lt;code&gt;parameter&lt;/code&gt;  is set and is non-null then substitute its value;
  otherwise, print &lt;code&gt;word&lt;/code&gt; and exit from the shell (if not interactive).
  If &lt;code&gt;word&lt;/code&gt; is omitted then a standard message is printed.</source>
          <target state="translated">&lt;code&gt;parameter&lt;/code&gt; が設定され、nullでない場合は、その値を置き換えます。 それ以外の場合は、 &lt;code&gt;word&lt;/code&gt; を出力してシェルを終了します（インタラクティブでない場合）。 &lt;code&gt;word&lt;/code&gt; を省略すると、標準メッセージが出力されます。</target>
        </trans-unit>
        <trans-unit id="ca3ea3c8e3ff2d502ef573236e726959efe6c697" translate="yes" xml:space="preserve">
          <source>If found an issue with one of the approach provided above.</source>
          <target state="translated">上記のいずれかの方法で問題が見つかった場合。</target>
        </trans-unit>
        <trans-unit id="72e0bb78fdbb09923c00f4535e3239d5e262ed41" translate="yes" xml:space="preserve">
          <source>If the colon &lt;code&gt;:&lt;/code&gt; is omitted from  the  above  expressions,  then  the
  shell only checks whether parameter is set or not.</source>
          <target state="translated">コロン &lt;code&gt;:&lt;/code&gt; が上記の式から省略されている場合、シェルはパラメーターが設定されているかどうかのみをチェックします。</target>
        </trans-unit>
        <trans-unit id="bc37d17c42c135c01de8905e3a768eed998ad34d" translate="yes" xml:space="preserve">
          <source>If the path you give to &lt;code&gt;pushd&lt;/code&gt; exists, you'll enter it and it'll exit with &lt;code&gt;0&lt;/code&gt;, which means the &lt;code&gt;then&lt;/code&gt; portion of the statement will execute. If it doesn't exist, nothing will happen (other than some output saying the directory doesn't exist, which is probably a helpful side-effect anyways for debugging).</source>
          <target state="translated">&lt;code&gt;pushd&lt;/code&gt; に指定したパスが存在する場合は、それを入力すると &lt;code&gt;0&lt;/code&gt; で終了します。つまり、ステートメントの &lt;code&gt;then&lt;/code&gt; 部分が実行されます。 存在しない場合は、何も起こりません（ディレクトリが存在しないことを示す出力がある場合を除き、これはおそらくデバッグに役立つ副作用です）。</target>
        </trans-unit>
        <trans-unit id="f690d196f425c6ceb50cc80a0925ad78b2612059" translate="yes" xml:space="preserve">
          <source>If the variables contain spaces or other unusual characters it will probably cause the script to fail.</source>
          <target state="translated">変数にスペースやその他の異常な文字が含まれている場合は、スクリプトが失敗する原因になるでしょう。</target>
        </trans-unit>
        <trans-unit id="c82c35a47e04d88fab353b51ea0305db297bde13" translate="yes" xml:space="preserve">
          <source>If you want to check if a directory exists, regardless if it's a real directory or a symlink, use this:</source>
          <target state="translated">実在するディレクトリかシンボリックリンクかに関わらず、ディレクトリが存在するかどうかをチェックしたい場合は、これを使用します。</target>
        </trans-unit>
        <trans-unit id="5c153979d81d7d2a89cdb85179b75fe6e7aa8795" translate="yes" xml:space="preserve">
          <source>If you want to create the directory and it does not exist yet, then the simplest technique is to use &lt;code&gt;mkdir -p&lt;/code&gt; which creates the directory &amp;mdash; and any missing directories up the path &amp;mdash; and does not fail if the directory already exists, so you can do it all at once with:</source>
          <target state="translated">ディレクトリを作成したいが、それがまだ存在しない場合、最も簡単な方法は、 &lt;code&gt;mkdir -p&lt;/code&gt; を使用することです。これは、ディレクトリとパス上にないディレクトリを作成し、ディレクトリがすでに存在する場合でも失敗しないため、次のことができます。一度にそれをすべて行う：</target>
        </trans-unit>
        <trans-unit id="15a13483c2ccc2b13cbca99b29ccad30f351751d" translate="yes" xml:space="preserve">
          <source>In particular the first character of &lt;code&gt;ls -l&lt;/code&gt; output it is usually a &lt;code&gt;d&lt;/code&gt; or a &lt;code&gt;-&lt;/code&gt; (dash). In case of a &lt;code&gt;d&lt;/code&gt; the one listed is a directory for sure.</source>
          <target state="translated">特に、 &lt;code&gt;ls -l&lt;/code&gt; 出力の最初の文字は、通常、 &lt;code&gt;d&lt;/code&gt; または &lt;code&gt;-&lt;/code&gt; （ダッシュ）です。 &lt;code&gt;d&lt;/code&gt; の場合、リストされているのは確かにディレクトリです。</target>
        </trans-unit>
        <trans-unit id="de07f0a507d444c78f5085adf9b2b0f87e0ae5ee" translate="yes" xml:space="preserve">
          <source>In this particular case, I know that the standard error message &lt;code&gt;1: parameter not set&lt;/code&gt; is not sufficient, so I zoom in on the type of value that we expect here - the &lt;code&gt;pathname&lt;/code&gt; of a directory.</source>
          <target state="translated">この特定のケースでは、標準エラーメッセージ &lt;code&gt;1: parameter not set&lt;/code&gt; ていないことが十分であることを知っているので、ここで想定している値のタイプ、つまりディレクトリの &lt;code&gt;pathname&lt;/code&gt; にズームインします。</target>
        </trans-unit>
        <trans-unit id="f7ccbb87c4a04b9404a5241410a0d1ca886d88cb" translate="yes" xml:space="preserve">
          <source>More features using &lt;code&gt;find&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;find&lt;/code&gt; を使用したその他の機能</target>
        </trans-unit>
        <trans-unit id="cb392062133006c3db8c8bcb383ef8b91e072e3b" translate="yes" xml:space="preserve">
          <source>N.B: Quoting variables is a good practice.</source>
          <target state="translated">N.B:変数を引用するのは良い習慣です。</target>
        </trans-unit>
        <trans-unit id="0330d279c4eebfca7100bb37d2f1ea052f999c4f" translate="yes" xml:space="preserve">
          <source>Next is the argument that we pass to &lt;code&gt;cd&lt;/code&gt;: &lt;code&gt;${1:?pathname expected}&lt;/code&gt;.  This is a more elaborate form of parameter substitution which is explained in more detail below.</source>
          <target state="translated">次は &lt;code&gt;cd&lt;/code&gt; に渡す引数です： &lt;code&gt;${1:?pathname expected}&lt;/code&gt; 。 これは、以下でより詳細に説明する、より複雑な形式のパラメーター置換です。</target>
        </trans-unit>
        <trans-unit id="e25c6c68f4a63c4d7bdbcd321d57eae9df656d02" translate="yes" xml:space="preserve">
          <source>No need to worry about spaces and special characters as long as you use &lt;code&gt;&quot;${}&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;${}&quot;&lt;/code&gt; を使用している限り、スペースや特殊文字を気にする必要はありません。</target>
        </trans-unit>
        <trans-unit id="f7ea6e69a66e33c59a0a6581f2e96b4fc098a5fd" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;[[]]&lt;/code&gt; is not as portable as &lt;code&gt;[]&lt;/code&gt;, but since most people work with modern versions of Bash (since after all, most people don't even work with command line :-p), the benefit is greater than the trouble.</source>
          <target state="translated">&lt;code&gt;[[]]&lt;/code&gt; は[]ほど移植性がありませんが、ほとんどの人は最新バージョンのBashで作業するため（結局のところ、ほとんどの人はコマンドライン:-pでさえ作業しないため）、利点はトラブル。</target>
        </trans-unit>
        <trans-unit id="d82e02f8a6073887c99c6f0c542a5b98b3c168bd" translate="yes" xml:space="preserve">
          <source>Note the &lt;strong&gt;-d&lt;/strong&gt; test can produce some surprising results:</source>
          <target state="translated">&lt;strong&gt;-d&lt;/strong&gt;テストは驚くべき結果をもたらす可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e76756c97ce0ef44bc99a6e5d26266916cf69147" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;test&lt;/code&gt; command is same as conditional expression &lt;code&gt;[&lt;/code&gt; (see: &lt;code&gt;man [&lt;/code&gt;), so it's portable across shell scripts.</source>
          <target state="translated">注： &lt;code&gt;test&lt;/code&gt; コマンドは条件式 &lt;code&gt;[&lt;/code&gt; （see： &lt;code&gt;man [&lt;/code&gt; ] ）と同じなので、シェルスクリプト間で移植可能です。</target>
        </trans-unit>
        <trans-unit id="89f71a9ccda28ce7ef564f54962121174107e090" translate="yes" xml:space="preserve">
          <source>One day, one of those kids will run your script with &lt;code&gt;$DIRECTORY&lt;/code&gt; set to &lt;code&gt;&quot;My M0viez&quot;&lt;/code&gt; and your script will blow up. You don't want that. So use this.</source>
          <target state="translated">ある日、これらの子供たちの1人が &lt;code&gt;$DIRECTORY&lt;/code&gt; を &lt;code&gt;&quot;My M0viez&quot;&lt;/code&gt; に設定してスクリプトを実行し、スクリプトが爆発します。 あなたはそれを望まない。 これを使用してください。</target>
        </trans-unit>
        <trans-unit id="d6d97a835b350f1c82be7882f32f984062d4ecba" translate="yes" xml:space="preserve">
          <source>Or for something completely useless:</source>
          <target state="translated">あるいは全く役に立たないもののために</target>
        </trans-unit>
        <trans-unit id="88c9d56e5a74f7cdef89e4ed75b2aebab124a280" translate="yes" xml:space="preserve">
          <source>Or to check if a directory doesn't exist:</source>
          <target state="translated">または、ディレクトリが存在しないかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="00fcdda14949d42c1610edfba9ca80d41d59564f" translate="yes" xml:space="preserve">
          <source>Or:</source>
          <target state="translated">Or:</target>
        </trans-unit>
        <trans-unit id="ffd8320e26b919ccdb8d76fe053cfe0c83aced0c" translate="yes" xml:space="preserve">
          <source>Practical usage:</source>
          <target state="translated">実用的な使い方。</target>
        </trans-unit>
        <trans-unit id="37042ae73af0e62806e3959b848d75deaedd39b2" translate="yes" xml:space="preserve">
          <source>Quoting from the &lt;code&gt;ksh93&lt;/code&gt; man page:</source>
          <target state="translated">&lt;code&gt;ksh93&lt;/code&gt; manページからの引用：</target>
        </trans-unit>
        <trans-unit id="a190dbfd317271efc07f048f624324161c2ee0aa" translate="yes" xml:space="preserve">
          <source>Remember to always wrap variables in double quotes when referencing them in
a bash script. Kids these days grow up with the idea that they can have spaces and lots of other funny characters in their directory names. (Spaces! Back in my days, we didn't have no fancy spaces! ;))</source>
          <target state="translated">bash スクリプトで変数を参照するときは、常に二重引用符で囲むことを忘れないでください。最近の子供たちは、ディレクトリ名にスペースや他のおかしな文字をたくさん入れることができるという考えで成長しています。(スペース!私の時代には、スペースなんてものはありませんでした! ;)</target>
        </trans-unit>
        <trans-unit id="99dd89c6ad7ae5fa50a90061d830f433ea145732" translate="yes" xml:space="preserve">
          <source>Same thing works with &lt;code&gt;cd&lt;/code&gt;, &lt;code&gt;mv&lt;/code&gt;, &lt;code&gt;rm&lt;/code&gt;, etc... if you try them on files that don't exist, they'll exit with an error and print a message saying it doesn't exist, and your &lt;code&gt;then&lt;/code&gt; block will be skipped. If you try them on files that do exist, the command will execute and exit with a status of &lt;code&gt;0&lt;/code&gt;, allowing your &lt;code&gt;then&lt;/code&gt; block to execute.</source>
          <target state="translated">同じことが &lt;code&gt;cd&lt;/code&gt; 、 &lt;code&gt;mv&lt;/code&gt; 、 &lt;code&gt;rm&lt;/code&gt; などでも機能します...存在しないファイルで試してみると、エラーで終了し、存在しないというメッセージが表示され &lt;code&gt;then&lt;/code&gt; ブロックは次のようになります。スキップした。 存在するファイルでそれらを実行すると、コマンドが実行され、ステータス &lt;code&gt;0&lt;/code&gt; で終了し、 &lt;code&gt;then&lt;/code&gt; ブロックが実行されます。</target>
        </trans-unit>
        <trans-unit id="77117ff227ef719bef67b8606ba58dd8f6506d59" translate="yes" xml:space="preserve">
          <source>Seems better than this, which requires repeating yourself:</source>
          <target state="translated">これよりはマシだと思うが、それには繰り返しが必要だ。</target>
        </trans-unit>
        <trans-unit id="78b725c3ff0067391adcd4f7f423fc5cf6d6c9a8" translate="yes" xml:space="preserve">
          <source>Shorter form:</source>
          <target state="translated">短めのフォーム。</target>
        </trans-unit>
        <trans-unit id="d85d4ecbed8d7b05375047512f2620d088dcf47c" translate="yes" xml:space="preserve">
          <source>So symbolic links may have to be treated differently, if subsequent commands expect directories:</source>
          <target state="translated">そのため、シンボリックリンクは、後続のコマンドがディレクトリを期待している場合には、別の扱いをしなければならないかもしれません。</target>
        </trans-unit>
        <trans-unit id="d54c7b9353a65c8a7007a94eff2a6a97846f6e33" translate="yes" xml:space="preserve">
          <source>Take particular note of the double-quotes used to wrap the variables, the reason for this is explained by 8jean &lt;a href=&quot;https://stackoverflow.com/a/67458/102401&quot;&gt;in another answer&lt;/a&gt;.</source>
          <target state="translated">変数をラップするために使用される二重引用符に特に注意してください。この理由は、8jean &lt;a href=&quot;https://stackoverflow.com/a/67458/102401&quot;&gt;が別の回答で&lt;/a&gt;説明しています 。</target>
        </trans-unit>
        <trans-unit id="6b0972881542543df05bda34f966804f87040adc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ls&lt;/code&gt; command in conjunction with &lt;code&gt;-l&lt;/code&gt; (long listing) option returns attributes information about files and directories.</source>
          <target state="translated">&lt;code&gt;ls&lt;/code&gt; コマンドを &lt;code&gt;-l&lt;/code&gt; （長いリスト）オプションと組み合わせて使用​​すると、ファイルとディレクトリに関する属性情報が返されます。</target>
        </trans-unit>
        <trans-unit id="26263b6ab5b67672c58848402031941f2f826c70" translate="yes" xml:space="preserve">
          <source>The above code checks if the directory exists and if it is writable.</source>
          <target state="translated">上記のコードは、ディレクトリが存在するかどうか、書き込み可能かどうかをチェックしています。</target>
        </trans-unit>
        <trans-unit id="9444564a739b6515c85e62593d0592ac9756241d" translate="yes" xml:space="preserve">
          <source>The above scripts will check the dir is present or not</source>
          <target state="translated">上記のスクリプトは、ディレクトリが存在するかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="dc196b87266de4a756303b455624b49413a5ddb0" translate="yes" xml:space="preserve">
          <source>The following command in just one line will tell you if the given &lt;strong&gt;&lt;code&gt;ISDIR&lt;/code&gt;&lt;/strong&gt; variable contains a path to a directory or not:</source>
          <target state="translated">次の1行のコマンドは、指定された&lt;strong&gt; &lt;code&gt;ISDIR&lt;/code&gt; &lt;/strong&gt;変数にディレクトリへのパスが含まれているかどうかを&lt;strong&gt;示し&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="bfaa3c1354e38e455c54027b1c313020a774ff25" translate="yes" xml:space="preserve">
          <source>The nice thing about this approach is that I do not have to think of a good error message.</source>
          <target state="translated">この方法の良いところは、良いエラーメッセージを考えなくても良いところです。</target>
        </trans-unit>
        <trans-unit id="2be4bb090752f296f27105f0e0a563e7270b26ad" translate="yes" xml:space="preserve">
          <source>The phrasing here is peculiar to the shell documentation, as &lt;code&gt;word&lt;/code&gt; may refer
to any reasonable string, including whitespace.</source>
          <target state="translated">ここでの言い回しは、シェルのドキュメントに特有のものです。 &lt;code&gt;word&lt;/code&gt; は、空白を含むあらゆる適切な文字列を指す場合があるためです。</target>
        </trans-unit>
        <trans-unit id="dbc556904c8dc3d6be6a97575f40c1c8d1bcc47e" translate="yes" xml:space="preserve">
          <source>Therfore:</source>
          <target state="translated">Therfore:</target>
        </trans-unit>
        <trans-unit id="f2281eea998213be04a800c65064d230e9644281" translate="yes" xml:space="preserve">
          <source>This is not completely true... 
If you want to go to that directory, you also needs to have the execute rights on the directory. Maybe you need to have write rights as well.</source>
          <target state="translated">これは完全に正しいわけではありません...。もし、そのディレクトリに行きたいのであれば、そのディレクトリの実行権限も必要です。書き込み権限も必要かもしれません。</target>
        </trans-unit>
        <trans-unit id="90a19dc5ecf99a9009a2dbb16da022cb214198d9" translate="yes" xml:space="preserve">
          <source>This solution is good because it allows the use of wildcards, a useful feature when searching for files/directories. The only problem is that, if the searched directory doesn't exist, the 'find' command will print nothing to stdout (not an elegant solution for my taste) and will have nonetheless a zero exit. Maybe someone could improve on this.</source>
          <target state="translated">この解決策は、ファイルディレクトリを検索する際に便利なワイルドカードの使用を可能にしてくれるので良いでしょう。唯一の問題は、検索したディレクトリが存在しない場合、'find' コマンドは標準出力に何も出力しないことです (私の好みではエレガントな解決策ではありません)。誰かこれを改善してくれないだろうか。</target>
        </trans-unit>
        <trans-unit id="96ee4c12a5566d81da281af7463d45f0e001f26a" translate="yes" xml:space="preserve">
          <source>Tl;dr: If the string passed into this function is empty, we again exit from the subshell &lt;code&gt;( ... )&lt;/code&gt; and return from the function with the given error message.</source>
          <target state="translated">Tl; dr：この関数に渡された文字列が空の場合、サブシェル &lt;code&gt;( ... )&lt;/code&gt; を再び終了し、指定されたエラーメッセージで関数から戻ります。</target>
        </trans-unit>
        <trans-unit id="e0cada1eb567b078a41eed7ed73c167b0cd643b3" translate="yes" xml:space="preserve">
          <source>To check if a directory exists in a shell script you can use the following:</source>
          <target state="translated">シェルスクリプトにディレクトリが存在するかどうかを調べるには、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="802e0a0ff420cf1ac339d116f389f9b6010f5f78" translate="yes" xml:space="preserve">
          <source>To check if a directory exists you can use simple if structure like this:</source>
          <target state="translated">ディレクトリが存在するかどうかを確認するには、以下のようなシンプルな if 構造を使用します。</target>
        </trans-unit>
        <trans-unit id="6a2685bb57c01af38dce3160aeb3734d48d99955" translate="yes" xml:space="preserve">
          <source>To check more than one directory use this code:</source>
          <target state="translated">複数のディレクトリをチェックするには、このコードを使用します。</target>
        </trans-unit>
        <trans-unit id="82eeb370eca1bd5552ecc5064f727f173c31e84f" translate="yes" xml:space="preserve">
          <source>Type this code on the bash promt</source>
          <target state="translated">このコードを bash promt に入力してください。</target>
        </trans-unit>
        <trans-unit id="c2cae6fb5a700400b2df4fae9c1d3e02062afac5" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;-e&lt;/code&gt; check will check for files and this includes directories.</source>
          <target state="translated">&lt;code&gt;-e&lt;/code&gt; チェックを使用すると、ファイルがチェックされ、これにはディレクトリも含まれます。</target>
        </trans-unit>
        <trans-unit id="9f6d0c65af1fa450ed17190f7a6eed36470ef3e8" translate="yes" xml:space="preserve">
          <source>What command can be used to check if a directory exists or not, within a Bash shell script?</source>
          <target state="translated">Bash シェルスクリプトの中で、ディレクトリが存在するかどうかをチェックするコマンドは何ですか?</target>
        </trans-unit>
        <trans-unit id="d8c2db3639ae549ace8e1c73af03174495471d04" translate="yes" xml:space="preserve">
          <source>Will produce the error message:</source>
          <target state="translated">エラーメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="0ae3f045c178d1d4b1fa641c1b902280e5044725" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;ls&lt;/code&gt; command; the cases when directory does not exists - an error message is shown</source>
          <target state="translated">&lt;code&gt;ls&lt;/code&gt; コマンドを使用。 ディレクトリが存在しない場合-エラーメッセージが表示されます</target>
        </trans-unit>
        <trans-unit id="90fab5420ee387ae94bf6e4438b0845086481f73" translate="yes" xml:space="preserve">
          <source>With the same syntax you can use:</source>
          <target state="translated">同じ構文で</target>
        </trans-unit>
        <trans-unit id="d14720b4c847ece5ac99caaf9efca53424143435" translate="yes" xml:space="preserve">
          <source>You can do it also in negative</source>
          <target state="translated">ネガティブにもできます。</target>
        </trans-unit>
        <trans-unit id="7bc690d39c6601d38641eeeee9a206157ad110a2" translate="yes" xml:space="preserve">
          <source>You can find more information in the Bash manual on &lt;a href=&quot;https://www.gnu.org/software/bash/manual/bash.html#Bash-Conditional-Expressions&quot;&gt;Bash conditional expressions&lt;/a&gt; and the &lt;a href=&quot;https://www.gnu.org/software/bash/manual/bash.html#index-_005b&quot;&gt;&lt;code&gt;[&lt;/code&gt; builtin command&lt;/a&gt; and the &lt;a href=&quot;https://www.gnu.org/software/bash/manual/bash.html#index-_005b_005b&quot;&gt;&lt;code&gt;[[&lt;/code&gt; compound commmand&lt;/a&gt;.</source>
          <target state="translated">詳細については、Bashマニュアルの&lt;a href=&quot;https://www.gnu.org/software/bash/manual/bash.html#Bash-Conditional-Expressions&quot;&gt;Bash条件式&lt;/a&gt; 、 &lt;a href=&quot;https://www.gnu.org/software/bash/manual/bash.html#index-_005b&quot;&gt; &lt;code&gt;[&lt;/code&gt; 組み込みコマンド&lt;/a&gt; 、および&lt;a href=&quot;https://www.gnu.org/software/bash/manual/bash.html#index-_005b_005b&quot;&gt; &lt;code&gt;[[&lt;/code&gt; 複合&lt;/a&gt; コマンドを参照してください 。</target>
        </trans-unit>
        <trans-unit id="5077e78ced4e1bda6bdbc6746f48e6fd0c1de9b4" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;test -d&lt;/code&gt; (see &lt;code&gt;man test&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;test -d&lt;/code&gt; を使用できます（ &lt;code&gt;man test&lt;/code&gt; を参照）。</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="d5ffe1efe416a48c794b4c339c9db23d31d92d85" translate="yes" xml:space="preserve">
          <source>is_dir</source>
          <target state="translated">is_dir</target>
        </trans-unit>
        <trans-unit id="7bc2760823ac0e7182b3addd6b65a069153fc276" translate="yes" xml:space="preserve">
          <source>mkdir: cannot create directory &amp;lsquo;tempdir&amp;rsquo;: File exists</source>
          <target state="translated">mkdir：ディレクトリ 'tempdir'を作成できません：ファイルが存在します</target>
        </trans-unit>
        <trans-unit id="f78dc2b020a65866379a93acbea09bede07fb206" translate="yes" xml:space="preserve">
          <source>will execute successfully only if at the moment of execution you're in a directory that has a subdirectory that you happen to check for.</source>
          <target state="translated">が正常に実行されるのは、実行時にたまたまチェックしたサブディレクトリがあるディレクトリにいる場合のみです。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
