<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/35553500">
    <body>
      <group id="35553500">
        <trans-unit id="c5fdbed70e669b038bcfb2cab90deeaf62877bee" translate="yes" xml:space="preserve">
          <source>&quot;Get&quot; request with appending headers transform to &quot;Options&quot; request. So Cors policy problems occur. You have to implement &quot;Options&quot; request to your server.</source>
          <target state="translated">&quot;Получить&quot; запрос с добавлением заголовков трансформировать в &quot;Опции&quot; запрос.Таким образом,возникают проблемы с политикой корса.Вы должны реализовать запрос &quot;Options&quot; к вашему серверу.</target>
        </trans-unit>
        <trans-unit id="f69aaadff17bc308b050f9fadf2f5785686ce694" translate="yes" xml:space="preserve">
          <source>&amp;hellip; but the browser has no way of knowing if either of the above are true, so trust is not automatic and the SOP is applied. Permission has to be granted explicitly before the browser will give the data it was given to a different website.</source>
          <target state="translated">... но браузер не может узнать, верно ли любое из вышеперечисленного, поэтому доверие не является автоматическим и применяется SOP. Разрешение должно быть предоставлено явно, прежде чем браузер предоставит данные, которые были переданы другому веб-сайту.</target>
        </trans-unit>
        <trans-unit id="aa3428b119285e7b20310e804868ca099ac810ab" translate="yes" xml:space="preserve">
          <source>&amp;hellip; in the response headers to permit any website to read the data.</source>
          <target state="translated">&amp;hellip; В заголовках ответов, чтобы разрешить любому веб-сайту читать данные.</target>
        </trans-unit>
        <trans-unit id="0666e400461e2ce9ecc28ecb83674c30b2511723" translate="yes" xml:space="preserve">
          <source>&amp;hellip; would allow only a specific site to access it, and Bob can dynamically generate that based on the &lt;code&gt;Origin&lt;/code&gt;&lt;em&gt;request&lt;/em&gt; header to permit multiple, but not all, sites to access it.</source>
          <target state="translated">&amp;hellip; Разрешит доступ к нему только определенному сайту, и Боб может динамически сгенерировать его на основе заголовка &lt;em&gt;запроса&lt;/em&gt; &lt;code&gt;Origin&lt;/code&gt; , чтобы разрешить доступ к нему нескольким, но не всем сайтам.</target>
        </trans-unit>
        <trans-unit id="3083c68c35322c957b6383c55bcd22231a4d4652" translate="yes" xml:space="preserve">
          <source>(Weirdly, it also applies to CSS fonts, but that is because found foundries insisted on DRM and not for the security issues that the Same Origin Policy usually covers).</source>
          <target state="translated">(Странно,но это относится и к шрифтам CSS,но это потому,что литейные цеха настаивали на DRM,а не на вопросах безопасности,на которые обычно распространяется политика одного и того же происхождения).</target>
        </trans-unit>
        <trans-unit id="c721f376efe00285946ac6d7bf010b66ff393846" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; Browser extensions do need to be written carefully to avoid cross-origin issues. &lt;a href=&quot;https://www.chromium.org/Home/chromium-security/extension-content-script-fetches&quot;&gt;See the Chrome documentation for example&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; Расширения браузера должны быть написаны тщательно, чтобы избежать проблем с несколькими источниками. &lt;a href=&quot;https://www.chromium.org/Home/chromium-security/extension-content-script-fetches&quot;&gt;См. Документацию Chrome, например&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ccf579f23dfb488978fdf26171abc0e7c4458b84" translate="yes" xml:space="preserve">
          <source>A Proxy</source>
          <target state="translated">Доверенное лицо</target>
        </trans-unit>
        <trans-unit id="12bdfbed461b262c6a3ff537a120d9b8a0e256c7" translate="yes" xml:space="preserve">
          <source>A basic implementation would just include:</source>
          <target state="translated">Базовая реализация будет только включать в себя:</target>
        </trans-unit>
        <trans-unit id="79adb0593bc6b4bf0a194d641b36d1310630c1a5" translate="yes" xml:space="preserve">
          <source>About the Same Origin Policy</source>
          <target state="translated">О политике одного и того же происхождения</target>
        </trans-unit>
        <trans-unit id="cedda5083aa15826802650527c14fd360bd167bc" translate="yes" xml:space="preserve">
          <source>Access to fetch at '&lt;code&gt;https://example.com/&lt;/code&gt;' from origin '&lt;code&gt;https://example.net&lt;/code&gt;' has been blocked by CORS policy: No '&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.</source>
          <target state="translated">Доступ к выборке по адресу &lt;code&gt;https://example.com/&lt;/code&gt; из источника &amp;laquo; &lt;code&gt;https://example.net&lt;/code&gt; &amp;raquo; был заблокирован политикой CORS: в запрошенном ресурсе отсутствует заголовок &amp;laquo; &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; &amp;raquo;. Если непрозрачный ответ отвечает вашим потребностям, установите режим запроса &amp;laquo;no-cors&amp;raquo;, чтобы получить ресурс с отключенным CORS.</target>
        </trans-unit>
        <trans-unit id="7b7974bfa3fba0e3975c4d056b6b9ca1197d455e" translate="yes" xml:space="preserve">
          <source>Alice is a person with a web browser</source>
          <target state="translated">Элис-это человек с веб-браузером.</target>
        </trans-unit>
        <trans-unit id="080d446b3afc60112cc22d7278d349fef3fd6d9e" translate="yes" xml:space="preserve">
          <source>Alice is logged into Bob's site and has some confidential data there. Perhaps it is a company intranet (accessible only to browsers on the LAN), or her online banking (accessible only with a cookie you get after entering a username and password).</source>
          <target state="translated">Элис входит на сайт Боба и имеет там некоторые конфиденциальные данные.Возможно,это корпоративный интранет (доступен только браузерам в локальной сети)или ее интернет-банкинг (доступен только с помощью куки-файла,который вы получаете после ввода имени пользователя и пароля).</target>
        </trans-unit>
        <trans-unit id="2f9059ae8633c85b7699e923ebb41ea7becd668e" translate="yes" xml:space="preserve">
          <source>Alice visits Mallory's website which has some JavaScript that causes Alice's browser to make an HTTP request to Bob's website (from her IP address with her cookies, etc). This could be as simple as using &lt;code&gt;XMLHttpRequest&lt;/code&gt; and reading the &lt;code&gt;responseText&lt;/code&gt;.</source>
          <target state="translated">Алиса посещает веб-сайт Мэллори, на котором есть некоторый JavaScript, который заставляет браузер Алисы отправлять HTTP-запрос на веб-сайт Боба (с ее IP-адреса с помощью файлов cookie и т. Д.). Это может быть так же просто, как использование &lt;code&gt;XMLHttpRequest&lt;/code&gt; и чтение &lt;code&gt;responseText&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5bdc163ef94b8775f3c2206de222d5cdbb730053" translate="yes" xml:space="preserve">
          <source>Alice, Bob and Mallory are the same person.</source>
          <target state="translated">Элис,Боб и Мэллори-один и тот же человек.</target>
        </trans-unit>
        <trans-unit id="e356eab4f83b3e77df9f9a8c73c681fa3b5ef7cc" translate="yes" xml:space="preserve">
          <source>Alternatives to CORS</source>
          <target state="translated">Альтернативы CORS</target>
        </trans-unit>
        <trans-unit id="3f9bf680f2d7e601b6b53dc367493c6e9226daf2" translate="yes" xml:space="preserve">
          <source>As noted in the section &quot;Why the Same Origin Policy only applies to JavaScript in a web page&quot;, you can avoid the SOP by not writing JavaScript in a webpage.</source>
          <target state="translated">Как отмечено в разделе &quot;Почему политика одинакового происхождения применяется только к JavaScript на веб-странице&quot;,вы можете избежать SOP,не написав JavaScript на веб-странице.</target>
        </trans-unit>
        <trans-unit id="d506fbbc5a8bc383106b8326dc9ab129456f337c" translate="yes" xml:space="preserve">
          <source>As this isn't mentioned in the accepted answer.</source>
          <target state="translated">Как это не упоминается в принятом ответе.</target>
        </trans-unit>
        <trans-unit id="3b05e4adacdafe56d47f3926c61aa1bd3e81b8aa" translate="yes" xml:space="preserve">
          <source>Bob could also provide the data using a hack like &lt;a href=&quot;https://stackoverflow.com/questions/2067472/what-is-jsonp-all-about&quot;&gt;JSONP&lt;/a&gt; which is how people did cross-origin Ajax before CORS came along.</source>
          <target state="translated">Боб мог также предоставить данные, используя хак, такой как &lt;a href=&quot;https://stackoverflow.com/questions/2067472/what-is-jsonp-all-about&quot;&gt;JSONP. Именно так&lt;/a&gt; люди делали Ajax с несколькими источниками до появления CORS.</target>
        </trans-unit>
        <trans-unit id="1ea8ca767428c6dc82740ebab1a317eb537dfc17" translate="yes" xml:space="preserve">
          <source>Bob is providing entirely public information</source>
          <target state="translated">Боб предоставляет полностью общественную информацию</target>
        </trans-unit>
        <trans-unit id="4ad9e5a181ccf4d48e00fa324c6d3fa0e330762e" translate="yes" xml:space="preserve">
          <source>Bob runs a website (&lt;code&gt;https://www.[website].com/&lt;/code&gt; in your example)</source>
          <target state="translated">Боб руководит сайтом ( &lt;code&gt;https://www.[website].com/&lt;/code&gt; в вашем примере)</target>
        </trans-unit>
        <trans-unit id="ddc4f8c91108ac2bf18e262a30c2fd7398d649f7" translate="yes" xml:space="preserve">
          <source>Bob wouldn't need to grant any permissions for that to happen.</source>
          <target state="translated">Бобу не понадобилось бы давать никаких разрешений,чтобы это произошло.</target>
        </trans-unit>
        <trans-unit id="0a7792b7795b50e8301b591ad82091d0598c147a" translate="yes" xml:space="preserve">
          <source>Browser extensions</source>
          <target state="translated">Расширения браузера</target>
        </trans-unit>
        <trans-unit id="52a3e647edc456ec783b6d63aa3dd4cf5795f836" translate="yes" xml:space="preserve">
          <source>Browser extensions&lt;code&gt;*&lt;/code&gt;, the Network tab in browser developer tools and applications like Postman are installed software. They aren't passing data from one website to the JavaScript belonging to a different website &lt;em&gt;just because you visited that different website&lt;/em&gt;. Installing software usually takes a more conscious choice.</source>
          <target state="translated">Расширения браузера &lt;code&gt;*&lt;/code&gt; , вкладка Сеть в инструментах разработчика браузера и приложения, такие как Postman, являются установленным программным обеспечением. Они не передают данные с одного веб-сайта в JavaScript, принадлежащий другому веб-сайту, &lt;em&gt;только потому, что вы посетили этот другой веб-сайт&lt;/em&gt; . Установка программного обеспечения обычно требует более осознанного выбора.</target>
        </trans-unit>
        <trans-unit id="02de3c6a5d36416398534d79472aff7a9ccfbc69" translate="yes" xml:space="preserve">
          <source>But I'm not Bob!</source>
          <target state="translated">Но я не Боб!</target>
        </trans-unit>
        <trans-unit id="2139aadec237bbecb581e62932f94bc3bce7a704" translate="yes" xml:space="preserve">
          <source>CORS</source>
          <target state="translated">CORS</target>
        </trans-unit>
        <trans-unit id="72a7bba2b6e46912da58c628abb44b1d77e213c9" translate="yes" xml:space="preserve">
          <source>Common mistakes that trigger this include:</source>
          <target state="translated">Обычные ошибки,которые приводят к этому,включают в себя:</target>
        </trans-unit>
        <trans-unit id="7b6794110b358bc83a6cd7c420d7cd48e8a0d272" translate="yes" xml:space="preserve">
          <source>Consequently, Mallory can only use this technique to read &lt;em&gt;public&lt;/em&gt; data.</source>
          <target state="translated">Следовательно, Мэллори может использовать эту технику только для чтения &lt;em&gt;общедоступных&lt;/em&gt; данных.</target>
        </trans-unit>
        <trans-unit id="22709a8723fb233b31baf16067c518f10a970801" translate="yes" xml:space="preserve">
          <source>Couldn't be generated with a regular HTML form (e.g. has custom headers or a Content-Type that you couldn't use in a form's &lt;code&gt;enctype&lt;/code&gt;).</source>
          <target state="translated">Не может быть сгенерировано с помощью обычной HTML-формы (например, имеет пользовательские заголовки или Content-Type, которые вы не можете использовать в &lt;code&gt;enctype&lt;/code&gt; формы).</target>
        </trans-unit>
        <trans-unit id="9f7023ae6c0c7bb388366399240a29d8f70d9716" translate="yes" xml:space="preserve">
          <source>Error messages which mention &quot;Response for preflight&quot;</source>
          <target state="translated">Сообщения об ошибках,в которых упоминается &quot;Ответ для предполетного полета&quot;.</target>
        </trans-unit>
        <trans-unit id="de11082858543756881cde0b6cf3f0aabed14671" translate="yes" xml:space="preserve">
          <source>For any given URL it is possible that the SOP is not needed. A couple of common scenarios where this is the case are:</source>
          <target state="translated">Для любого заданного URL возможно,что SOP не нужен.Пара распространенных сценариев,где это возможно:</target>
        </trans-unit>
        <trans-unit id="360422379e164038fc5a13abf8702a9a03c5924c" translate="yes" xml:space="preserve">
          <source>Having a proper development environment with a local development &lt;em&gt;server&lt;/em&gt; 
is usually a better approach.</source>
          <target state="translated">Наличие подходящей среды разработки с локальным &lt;em&gt;сервером&lt;/em&gt; разработки обычно является лучшим подходом.</target>
        </trans-unit>
        <trans-unit id="8c77c3320c21e1da3d952fdceed8b3d5a9040f1b" translate="yes" xml:space="preserve">
          <source>How to do it is explained by the Chrome error message given when you make a request using &lt;code&gt;fetch&lt;/code&gt; and don't get permission to view the response with CORS:</source>
          <target state="translated">Как это сделать, объясняется сообщением об ошибке Chrome, которое выдается, когда вы делаете запрос, используя &lt;code&gt;fetch&lt;/code&gt; , и не получаете разрешения на просмотр ответа с помощью CORS:</target>
        </trans-unit>
        <trans-unit id="b5a2e8f7365ba0b05a0e386702f943744a084420" translate="yes" xml:space="preserve">
          <source>How to get a cross-origin resource sharing (CORS) post request working</source>
          <target state="translated">Как заставить работать пост-запрос на совместное использование ресурсов (CORS)с перекрестным происхождением</target>
        </trans-unit>
        <trans-unit id="4544234b52783d9ce6c7523afb3788d72f490ed8" translate="yes" xml:space="preserve">
          <source>I got the same error in Chrome console.</source>
          <target state="translated">У меня та же ошибка в консоли Chrome.</target>
        </trans-unit>
        <trans-unit id="191fa4c21ffb0259f46e3158d042758a40108e3b" translate="yes" xml:space="preserve">
          <source>I have a Grunt process which initiates an instance of express.js server. This was working absolutely fine up until just now when it started serving a blank page with the following appearing in the error log in the developer's console in Chrome (latest version):</source>
          <target state="translated">У меня есть процесс Grunt,который инициирует экземпляр сервера express.js.Он работал абсолютно нормально до тех пор,пока не начал обслуживать пустую страницу с последующим появлением в лог-журнале ошибок в консоли разработчика в Chrome (последняя версия):</target>
        </trans-unit>
        <trans-unit id="696b9bf9d526b3f1a17737731ae9d27d92d1474e" translate="yes" xml:space="preserve">
          <source>I'm having this issue currently under different reason.
My front end is returning 'Access-Control-Allow-Origin' header error as well.</source>
          <target state="translated">У меня сейчас этот вопрос по другой причине.Моя передняя часть также возвращает ошибку заголовка 'Access-Control-Alloww-Origin'.</target>
        </trans-unit>
        <trans-unit id="abe02bb96c36c6f655503931ed03c194f5f3b1cd" translate="yes" xml:space="preserve">
          <source>If Bob is running a public API then there might be a mechanism to turn on CORS (perhaps by formatting the request in a certain way, or a config option after logging into a Developer Portal site for Bob's site). This will have to be a mechanism implemented by Bob though. Mallory could read the documentation on Bob's site to see if something is available, or she could talk to Bob and ask him to implement CORS.</source>
          <target state="translated">Если Боб работает с публичным API,то может существовать механизм включения CORS (возможно,путем форматирования запроса определенным образом,или с помощью опции конфигурации после входа на сайт портала разработчика для сайта Боба).Однако это должен быть механизм,реализованный Бобом.Мэллори могла бы прочитать документацию на сайте Боба,чтобы узнать,есть ли что-то доступное,или она могла бы поговорить с Бобом и попросить его внедрить CORS.</target>
        </trans-unit>
        <trans-unit id="92ad6fa7497aadeaf8ff53a9f87b47f0a06f7043" translate="yes" xml:space="preserve">
          <source>If it is a public service:</source>
          <target state="translated">Если это общественная служба:</target>
        </trans-unit>
        <trans-unit id="b43202b21aa22f1dcb0dbdd04e2b92e038006f59" translate="yes" xml:space="preserve">
          <source>If none of the above apply: Get the browser to talk to &lt;em&gt;your&lt;/em&gt; server instead, and then have your server fetch the data from the other server and pass it on. (There are also third-party hosted services which attach CORS headers to publically accessible resources that you could use).</source>
          <target state="translated">Если ничего из вышеперечисленного не применимо: попросите браузер подключиться к &lt;em&gt;вашему&lt;/em&gt; серверу, а затем попросите сервер получить данные с другого сервера и передать их. (Существуют также сторонние размещенные сервисы, которые прикрепляют заголовки CORS к общедоступным ресурсам, которые вы можете использовать).</target>
        </trans-unit>
        <trans-unit id="e48fd7463af9f02e701f5f698b5fff66bca17c7f" translate="yes" xml:space="preserve">
          <source>If the HTML document the JS runs in and the URL being requested are on the same origin (sharing the same scheme, hostname, and port) then they Same Origin Policy grants permission by default. CORS is not needed.</source>
          <target state="translated">Если HTML документ,в котором запущен JS,и запрашиваемый URL-адрес находится в том же происхождении (по той же схеме,с тем же именем хоста и портом),то по умолчанию они имеют то же самое Origin Policy предоставляет разрешение.CORS не требуется.</target>
        </trans-unit>
        <trans-unit id="08cc9d28f22949cc5fa0a94d72751f3fa207f841" translate="yes" xml:space="preserve">
          <source>If you are correctly doing something that needs a preflight</source>
          <target state="translated">Если вы правильно делаете что-то,что нуждается в предполетном полете.</target>
        </trans-unit>
        <trans-unit id="ba22853626484508756ed5c98d033ee48a650bbd" translate="yes" xml:space="preserve">
          <source>If you are friendly with the person who controls it: Get them to add CORS permissions to it.</source>
          <target state="translated">Если ты дружишь с человеком,который его контролирует:Заставьте их добавить к нему разрешения CORS.</target>
        </trans-unit>
        <trans-unit id="853008022034caee905ec37fc3d3b78af426efd3" translate="yes" xml:space="preserve">
          <source>If you are triggering a preflight by mistake</source>
          <target state="translated">Если вы по ошибке запускаете предполет.</target>
        </trans-unit>
        <trans-unit id="e26a716bf9b75b23f6454ffbb214b653934425a4" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch&quot;&gt;the &lt;code&gt;fetch&lt;/code&gt; API&lt;/a&gt; (rather than &lt;code&gt;XMLHttpRequest&lt;/code&gt;), then you can configure it to not try to use CORS.</source>
          <target state="translated">Если вы используете &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch&quot;&gt;API &lt;code&gt;fetch&lt;/code&gt; &lt;/a&gt; (а не &lt;code&gt;XMLHttpRequest&lt;/code&gt; ), вы можете настроить его так, чтобы он не пытался использовать CORS.</target>
        </trans-unit>
        <trans-unit id="70d17978875ee658715b4db351d2df97b4823527" translate="yes" xml:space="preserve">
          <source>If you control the server the request is being made to: Add CORS permissions to it.</source>
          <target state="translated">Если вы контролируете сервер,на который делается запрос:Добавьте к нему разрешения CORS.</target>
        </trans-unit>
        <trans-unit id="c3d6c76ecd5f6ccde50eec6284baa0a0a9f6e8f0" translate="yes" xml:space="preserve">
          <source>If your client code does not explicit set affected Headers (e.g. &quot;Accept&quot;) with a fix value in the request it &lt;em&gt;might&lt;/em&gt; occur that some clients do set these Headers automatically with some &quot;non-standard&quot; values causing the server to not accept it as Simple Request - which will give you a CORS error.</source>
          <target state="translated">Если ваш клиентский код не устанавливает явные заголовки (например, &amp;laquo;Принять&amp;raquo;) с фиксированным значением в запросе, &lt;em&gt;может&lt;/em&gt; случиться так, что некоторые клиенты автоматически устанавливают эти заголовки с некоторыми &amp;laquo;нестандартными&amp;raquo; значениями, в результате чего сервер не принимает его как Простой запрос - который даст вам ошибку CORS.</target>
        </trans-unit>
        <trans-unit id="a7eaa077646e8880c93a7bd47f607df23835f175" translate="yes" xml:space="preserve">
          <source>In either of these cases, removing the extra request header will often be enough to avoid the need for a preflight (which will solve the problem when communicating with APIs that support simple requests but not preflighted requests).</source>
          <target state="translated">В любом из этих случаев удаления лишнего заголовка запроса часто будет достаточно для того,чтобы избежать необходимости в префлете (который решит проблему при общении с API,поддерживающими простые запросы,но не префлетом).</target>
        </trans-unit>
        <trans-unit id="5729a2bfc145c982ccb21e1853b5da3159d0e027" translate="yes" xml:space="preserve">
          <source>In order to perform a 'Simple Requests' the request needs to meet several conditions. E.g. only allowing &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt; method, as well as only allowing some given Headers (you can find all conditions &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests&quot;&gt;here&lt;/a&gt;).</source>
          <target state="translated">Для выполнения &amp;laquo;простых запросов&amp;raquo; запрос должен соответствовать нескольким условиям. Например, разрешить только метод &lt;code&gt;POST&lt;/code&gt; , &lt;code&gt;GET&lt;/code&gt; и &lt;code&gt;HEAD&lt;/code&gt; , а также разрешить только некоторые заданные заголовки (вы можете найти все условия &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests&quot;&gt;здесь&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="7cc076a9ba30ebdfbaf2900c4da047938ac0695e" translate="yes" xml:space="preserve">
          <source>In these cases then &lt;strong&gt;the rest of this answer still applies&lt;/strong&gt; but you also need to make sure that the server can listen for the preflight request (which will be &lt;code&gt;OPTIONS&lt;/code&gt; (and not &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt; or whatever you were trying to send) and respond to it with the right &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header but also &lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt; and &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; to allow your specific HTTP methods or headers.</source>
          <target state="translated">В этих случаях &lt;strong&gt;остальная часть этого ответа по-прежнему применима,&lt;/strong&gt; но вам также необходимо убедиться, что сервер может прослушать запрос предварительной проверки (это будут &lt;code&gt;OPTIONS&lt;/code&gt; (а не &lt;code&gt;GET&lt;/code&gt; , &lt;code&gt;POST&lt;/code&gt; или все, что вы пытались отправить) и ответить на него. с правильным заголовком &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; , а также с &lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt; и &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; , чтобы разрешить ваши конкретные методы HTTP или заголовки.</target>
        </trans-unit>
        <trans-unit id="d26715ff3c8058144a5e6781d18e2ccc51089bd3" translate="yes" xml:space="preserve">
          <source>Includes credentials like cookies</source>
          <target state="translated">Включает в себя учетные данные,например,cookie-файлы</target>
        </trans-unit>
        <trans-unit id="62f77bfbffd7a258cc0b8ce904a719ce6a3ee3ed" translate="yes" xml:space="preserve">
          <source>It is possible for a browser extension to inject the CORS headers in the response before the Same Origin Policy is applied.</source>
          <target state="translated">Возможно расширение браузера для впрыскивания заголовков CORS в ответ перед применением политики идентичного происхождения.</target>
        </trans-unit>
        <trans-unit id="524d541343869ab2cfcaedba8cffa363f4e4da8d" translate="yes" xml:space="preserve">
          <source>It requires that Mallory trust Bob not to provide malicious code.</source>
          <target state="translated">Она требует,чтобы Мэллори доверила Бобу не предоставлять вредоносный код.</target>
        </trans-unit>
        <trans-unit id="a0d49ced5af1ce4f42b72853fa8477beb628ad66" translate="yes" xml:space="preserve">
          <source>It will either:</source>
          <target state="translated">Это тоже будет:</target>
        </trans-unit>
        <trans-unit id="45aea3ca1172a010ceadbf9eb618c7f4dd492ee6" translate="yes" xml:space="preserve">
          <source>It will let you make a simple request, not see the response, and not fill the Developer Console with error messages.</source>
          <target state="translated">Это позволит вам сделать простой запрос,не видеть ответа и не заполнять консоль разработчика сообщениями об ошибках.</target>
        </trans-unit>
        <trans-unit id="97e9368be80f4c0b36d760f04834a058af9cb0eb" translate="yes" xml:space="preserve">
          <source>It works by presenting the data in the form of a JavaScript program which injects the data into Mallory's page.</source>
          <target state="translated">Она работает,представляя данные в виде программы JavaScript,которая инжектирует их на страницу Мэллори.</target>
        </trans-unit>
        <trans-unit id="42c6036ddd5d662bc456c530699d3704be7c5087" translate="yes" xml:space="preserve">
          <source>JSONP</source>
          <target state="translated">JSONP</target>
        </trans-unit>
        <trans-unit id="d91c94a14abe9d71f04f1aaf68eb2c1b48685144" translate="yes" xml:space="preserve">
          <source>Just that I've pointed the wrong URL so this header wasn't reflected properly (in which i kept presume it did). localhost (front end) -&amp;gt; call to non secured http (supposed to be https), make sure the API end point from front end is pointing to the correct protocol.</source>
          <target state="translated">Просто я указал неправильный URL, поэтому этот заголовок не был отражен должным образом (в котором я предположил, что он это сделал). localhost (внешний интерфейс) -&amp;gt; вызов незащищенного http (должен быть https), убедитесь, что конечная точка API от внешнего интерфейса указывает на правильный протокол.</target>
        </trans-unit>
        <trans-unit id="5948c6b1360bb812feb00f5faadc9ae4a212ff35" translate="yes" xml:space="preserve">
          <source>Make sure you aren't triggering a preflight request you don't need. The API might grant permission for simple requests but not preflighted requests.</source>
          <target state="translated">Убедитесь,что вы не запускаете предрейсовый запрос,который вам не нужен.API может дать разрешение на простые запросы,но не на префлайтовые.</target>
        </trans-unit>
        <trans-unit id="1c47e0f7a3e4ddaa6dbc100fabee7e2aec1ca459" translate="yes" xml:space="preserve">
          <source>Mallory &lt;em&gt;could&lt;/em&gt; use server-side code to fetch the data (which she could then pass from her server to Alice's browser through HTTP as usual).</source>
          <target state="translated">Мэллори &lt;em&gt;могла&lt;/em&gt; использовать серверный код для извлечения данных (которые она могла затем передать со своего сервера в браузер Алисы через HTTP, как обычно).</target>
        </trans-unit>
        <trans-unit id="564e68efef90eb6ff94dbc5e63c04d09f8c8e32a" translate="yes" xml:space="preserve">
          <source>Mallory runs a website (&lt;code&gt;http://localhost:4300&lt;/code&gt; in your example)</source>
          <target state="translated">Мэллори управляет веб-сайтом ( &lt;code&gt;http://localhost:4300&lt;/code&gt; в вашем примере)</target>
        </trans-unit>
        <trans-unit id="f2e3a0d4f23dada9bbe46ba7d15363f3d33d0fc0" translate="yes" xml:space="preserve">
          <source>Mallory was trusted</source>
          <target state="translated">Мэллори доверяли</target>
        </trans-unit>
        <trans-unit id="5741aafa13c097ce47a2ce4d5a8a24a6ed295abc" translate="yes" xml:space="preserve">
          <source>Move the two resources to a single Origin</source>
          <target state="translated">Переместить два ресурса в один Происхождение</target>
        </trans-unit>
        <trans-unit id="179f34374a10f83759fcee462cc56f0119a97fff" translate="yes" xml:space="preserve">
          <source>My problem was, I was trying to go to the site using &lt;code&gt;http://&lt;/code&gt; instead of &lt;code&gt;https://&lt;/code&gt;. So there was nothing to fix, just had to go to the same site using &lt;code&gt;https&lt;/code&gt;.</source>
          <target state="translated">Моя проблема заключалась в том, что я пытался перейти на сайт, используя &lt;code&gt;http://&lt;/code&gt; вместо &lt;code&gt;https://&lt;/code&gt; . Так что нечего было исправлять, просто нужно было зайти на тот же сайт с помощью &lt;code&gt;https&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da7899ad8069372c74d86a8d03eec992d656f441" translate="yes" xml:space="preserve">
          <source>NB: Some requests are complex and send a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS#Preflighted_requests&quot;&gt;preflight&lt;/a&gt; OPTIONS request that the server will have to respond to before the browser will send the GET/POST/PUT/Whatever request that the JS wants to make. Implementations of CORS that only add &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; to specific URLs often get tripped up by this.</source>
          <target state="translated">NB. Некоторые запросы являются сложными и отправляют предварительный запрос OPTIONS, на который сервер должен будет ответить, прежде чем браузер отправит запрос GET / POST / PUT / независимо от того, что JS хочет сделать. Реализации CORS, которые только добавляют &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; к определенным URL-адресам, часто запутываются этим.</target>
        </trans-unit>
        <trans-unit id="6627ccdfafd9a906f6fccd9cc62f31a063fd4bcc" translate="yes" xml:space="preserve">
          <source>Note that SOP / CORS do not mitigate &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;XSS&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;CSRF&lt;/a&gt;, or &lt;a href=&quot;https://en.wikipedia.org/wiki/SQL_injection&quot;&gt;SQL Injection&lt;/a&gt; attacks which need to be handled independently.</source>
          <target state="translated">Обратите внимание, что SOP / CORS не смягчают атаки &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;XSS&lt;/a&gt; , &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;CSRF&lt;/a&gt; или &lt;a href=&quot;https://en.wikipedia.org/wiki/SQL_injection&quot;&gt;SQL-инъекций,&lt;/a&gt; которые необходимо обрабатывать независимо.</target>
        </trans-unit>
        <trans-unit id="9bc579f199a3101a7f44833570e63a56fb1cb5e4" translate="yes" xml:space="preserve">
          <source>Note that this won't let you do anything that you require CORS to do. You will not be able to read the response. You will not be able to make a request that requires a preflight.</source>
          <target state="translated">Обратите внимание,что это не позволит вам сделать то,что вы требуете от CORS.Вы не сможете прочитать ответ.Вы не сможете сделать запрос,требующий совершения предполетного полета.</target>
        </trans-unit>
        <trans-unit id="f4d6128232048cd6c6d7f3d7b647ed7fff7f8026" translate="yes" xml:space="preserve">
          <source>Note the common theme: The site providing the data has to tell the browser that it is OK for a third party site to access the data it is sending to the browser.</source>
          <target state="translated">Обратите внимание на общую тему:Сайт,предоставляющий данные,должен сообщить браузеру,что третьим лицам разрешен доступ к данным,которые он отправляет в браузер.</target>
        </trans-unit>
        <trans-unit id="2aebca51e57e08fa958991342bd12a4146e354ff" translate="yes" xml:space="preserve">
          <source>Obviously granting permission via CORS is something Bob would only do only if either:</source>
          <target state="translated">Очевидно,что выдача разрешения через CORS-это то,что Боб мог бы сделать только если бы и то,и другое:</target>
        </trans-unit>
        <trans-unit id="52c0ea51241c014c452b8334a0a0cdf2931af1be" translate="yes" xml:space="preserve">
          <source>Opaque responses</source>
          <target state="translated">непрозрачные ответы</target>
        </trans-unit>
        <trans-unit id="f4c0bf26e722637eaa84e1385d4bed8c7c900340" translate="yes" xml:space="preserve">
          <source>Other security risks</source>
          <target state="translated">Другие риски безопасности</target>
        </trans-unit>
        <trans-unit id="3a9e8860a792c71b56b7e9a1d5af8455957c17a7" translate="yes" xml:space="preserve">
          <source>Read More about it here: &lt;a href=&quot;https://stackoverflow.com/questions/25923796/cors-error-with-jquery&quot;&gt;CORS error with jquery&lt;/a&gt;</source>
          <target state="translated">Подробнее об этом читайте здесь: &lt;a href=&quot;https://stackoverflow.com/questions/25923796/cors-error-with-jquery&quot;&gt;ошибка CORS с jquery&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36d37ad0ea64198287e8b037dac57678ca1b9809" translate="yes" xml:space="preserve">
          <source>Read their API documentation to see what they say about accessing it with client-side JavaScript:</source>
          <target state="translated">Ознакомьтесь с их API документацией,чтобы узнать,что они говорят о доступе к нему с помощью клиентского JavaScript:</target>
        </trans-unit>
        <trans-unit id="3cfa06457874ce9969c8b51f9984b1636c423b3c" translate="yes" xml:space="preserve">
          <source>Since JSONP works by appending a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element to load the data in the form of a JavaScript program which calls a function already in the page, attempting to use the JSONP technique on a URL which returns JSON will fail &amp;mdash; typically with a CORB error &amp;mdash; because JSON is not JavaScript.</source>
          <target state="translated">Поскольку JSONP работает путем добавления элемента &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; для загрузки данных в форме программы JavaScript, которая вызывает функцию, уже находящуюся на странице, попытка использовать технику JSONP для URL-адреса, который возвращает JSON, завершится неудачно - обычно с ошибкой CORB - потому что JSON - это не JavaScript.</target>
        </trans-unit>
        <trans-unit id="1861df057de67ba04d2b5992466bb39553c4cf29" translate="yes" xml:space="preserve">
          <source>Some cross origin requests are &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS#Preflighted_requests&quot;&gt;preflighted&lt;/a&gt;.</source>
          <target state="translated">Некоторые перекрестные запросы отправляются &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS#Preflighted_requests&quot;&gt;заранее&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fdf3b7775d3b635980a416d0d4279a7d7d042752" translate="yes" xml:space="preserve">
          <source>Sometimes people make mistakes when trying to construct Ajax requests, and sometimes these trigger the need for a preflight. If the API is designed to allow cross-origin requests, but doesn't require anything that would need a preflight, then this can break access.</source>
          <target state="translated">Иногда люди совершают ошибки,пытаясь построить запросы Ajax,а иногда это вызывает необходимость в предполетном перелете.Если API разработано для разрешения перекрестных запросов,но не требует ничего,что потребовало бы совершения предполетного полета,то это может нарушить доступ.</target>
        </trans-unit>
        <trans-unit id="f0b549858f2443774149a23a83091eb427dedd6b" translate="yes" xml:space="preserve">
          <source>Sometimes you need to make an HTTP request, but you don't need to read the response. e.g. if you are posting a log message to the server for recording.</source>
          <target state="translated">Иногда вам нужно сделать HTTP-запрос,но вам не нужно читать ответ.Например,если вы размещаете лог-сообщение на сервере для записи.</target>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="3bfcdfe6eb4d2132f9b02f748b3b12d32af0e673" translate="yes" xml:space="preserve">
          <source>Target server must allowed cross-origin request. In order to allow it through express, simply handle http options request :</source>
          <target state="translated">Целевой сервер должен разрешить кросс-оригинальный запрос.Для того,чтобы разрешить его через экспресс,просто обработайте http запрос опций :</target>
        </trans-unit>
        <trans-unit id="03272e3fa289c41f7c3f5d68e234a4e328f368c9" translate="yes" xml:space="preserve">
          <source>That doesn't mean you can't continue to use JavaScript and HTML, but you could distribute it using some other mechanism, such as Node-WebKit or PhoneGap.</source>
          <target state="translated">Это не означает,что вы не можете продолжать использовать JavaScript и HTML,но вы можете распространять его,используя какой-нибудь другой механизм,такой как Node-WebKit или PhoneGap.</target>
        </trans-unit>
        <trans-unit id="a037477ee252bfd6e5d800d4a6268d25aa2f8c53" translate="yes" xml:space="preserve">
          <source>That server-side code could be written &amp;amp; hosted by a third party (such as CORS Anywhere). Note the privacy implications of this: The third party can monitor who proxies what across their servers.</source>
          <target state="translated">Этот код на стороне сервера может быть написан и размещен третьей стороной (например, CORS Anywhere). Обратите внимание на последствия этого для конфиденциальности: третья сторона может отслеживать, кто что прокси на своих серверах.</target>
        </trans-unit>
        <trans-unit id="a0de50f88e2b3d052aad5c90272075ba1a3d3802" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; HTTP &lt;strong&gt;response&lt;/strong&gt; header referred to in the error message is part of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS&quot;&gt;CORS&lt;/a&gt; standard which allows Bob to explicitly grant permission to Mallory's site to access the data via Alice's browser.</source>
          <target state="translated">HTTP-заголовок &lt;strong&gt;ответа&lt;/strong&gt; &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; , упомянутый в сообщении об ошибке, является частью стандарта &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS&quot;&gt;CORS,&lt;/a&gt; который позволяет Бобу явно предоставлять разрешение сайту Мэллори на доступ к данным через браузер Алисы.</target>
        </trans-unit>
        <trans-unit id="f1dbef57f9bfebd76c45b9a48c018f05b8a8a202" translate="yes" xml:space="preserve">
          <source>The browser's Same Origin Policy prevents that JavaScript from reading the data returned by Bob's website (which Bob and Alice don't want Mallory to access). (Note that you can, for example, display an image using an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element across origins because the content of the image is not exposed to JavaScript (or Mallory) &amp;hellip; unless you throw canvas into the mix in which case you &lt;em&gt;will&lt;/em&gt; generate a same-origin violation error).</source>
          <target state="translated">Политика одинакового происхождения в браузере запрещает JavaScript читать данные, возвращаемые веб-сайтом Боба (к которым Боб и Алиса не хотят, чтобы Мэллори имела доступ). (Обратите внимание, что вы можете, например, отображать изображение с использованием элемента &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; в разных источниках, потому что содержимое изображения не подвергается JavaScript (или Мэллори)&amp;hellip; если вы не добавите canvas в смесь, в этом случае вы создадите ошибка нарушения того же происхождения).</target>
        </trans-unit>
        <trans-unit id="79ef50211c8179fcab85dd49da5f3fbabd650658" translate="yes" xml:space="preserve">
          <source>The data was not private &lt;em&gt;or&lt;/em&gt;</source>
          <target state="translated">Данные не были частными &lt;em&gt;или&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d9762ae08f6f7dad91721e27217991f8a11ff9f" translate="yes" xml:space="preserve">
          <source>The specifics of how Bob sets that response header depend on Bob's HTTP server and/or server-side programming language. There is &lt;a href=&quot;https://enable-cors.org/server.html&quot;&gt;a collection of guides for various common configurations&lt;/a&gt; that might help.</source>
          <target state="translated">Особенности того, как Боб устанавливает этот заголовок ответа, зависят от HTTP-сервера Боба и / или языка программирования на стороне сервера. Существует &lt;a href=&quot;https://enable-cors.org/server.html&quot;&gt;набор руководств для различных общих конфигураций,&lt;/a&gt; которые могут помочь.</target>
        </trans-unit>
        <trans-unit id="6604893b096b6ba328e55fd565fa6955767da643" translate="yes" xml:space="preserve">
          <source>The standard scenario that demonstrates the need for the SOP can be demonstrated with &lt;a href=&quot;https://en.wikipedia.org/wiki/Alice_and_Bob&quot;&gt;three characters&lt;/a&gt;:</source>
          <target state="translated">Стандартный сценарий, который демонстрирует необходимость SOP, может быть продемонстрирован &lt;a href=&quot;https://en.wikipedia.org/wiki/Alice_and_Bob&quot;&gt;тремя символами&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="7d044b9d63caf8c196634124ce4c9ba4ca176213" translate="yes" xml:space="preserve">
          <source>There are a number of circumstances where Mallory's site can cause a browser to fetch data from a third party and display it (e.g. by adding an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element to display an image). It isn't possible for Mallory's JavaScript to read the data in that resource though, only Alice's browser and Bob's server can do that, so it is still secure.</source>
          <target state="translated">Существует ряд обстоятельств, когда сайт Мэллори может заставить браузер получать данные от третьей стороны и отображать их (например, добавляя элемент &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; для отображения изображения). JavaScript Мэллори не может прочитать данные на этом ресурсе, хотя это может сделать только браузер Алисы и сервер Боба, поэтому он по-прежнему безопасен.</target>
        </trans-unit>
        <trans-unit id="6127874d9aef1420ff154b79562f50afaf6347c1" translate="yes" xml:space="preserve">
          <source>There is no standard mechanism for &lt;em&gt;Mallory&lt;/em&gt; to add this header because it has to come from Bob's website, which she does not control.</source>
          <target state="translated">У &lt;em&gt;Мэллори&lt;/em&gt; нет стандартного механизма добавления этого заголовка, потому что он должен прийти с сайта Боба, который она не контролирует.</target>
        </trans-unit>
        <trans-unit id="b79496a457c196bc566172f51692296fa4b04a80" translate="yes" xml:space="preserve">
          <source>There is nothing you can do in &lt;em&gt;your&lt;/em&gt; client-side code that will enable CORS access to someone &lt;em&gt;else's&lt;/em&gt; server.</source>
          <target state="translated">В коде на стороне клиента вы ничего не можете сделать, что позволит CORS получить доступ к &lt;em&gt;чужому&lt;/em&gt; серверу.</target>
        </trans-unit>
        <trans-unit id="beaef9fcd0c6d1171c964ef462dc2b90796057d4" translate="yes" xml:space="preserve">
          <source>There isn't a third party (Mallory) who is considered a risk.</source>
          <target state="translated">Не существует третьей стороны (Мэллори),которая считается рискованной.</target>
        </trans-unit>
        <trans-unit id="dd9bc05dc8287dee0908fc2de2446be79f55333c" translate="yes" xml:space="preserve">
          <source>These can be useful for development, but are not practical for a production site (asking every user of your site to install a browser extension that disables a security feature of their browser is unreasonable).</source>
          <target state="translated">Они могут быть полезны для разработки,но непрактичны для производственного сайта (просить каждого пользователя вашего сайта установить расширение браузера,которое отключает функцию безопасности своего браузера нецелесообразно).</target>
        </trans-unit>
        <trans-unit id="2f870286e388f3bb6b87e9c1b23cb67398f0476e" translate="yes" xml:space="preserve">
          <source>These links may help</source>
          <target state="translated">Эти ссылки могут помочь</target>
        </trans-unit>
        <trans-unit id="3c5b93c7e9e12c292b3d57a2e8033fcb4066808f" translate="yes" xml:space="preserve">
          <source>They also tend to work only with simple requests (failing when handling preflight OPTIONS requests).</source>
          <target state="translated">Кроме того,они,как правило,работают только с простыми запросами (сбой при работе с предрейсовыми запросами OPTIONS).</target>
        </trans-unit>
        <trans-unit id="966f60079bca7fe60d16c9b028cbe378ce505cbe" translate="yes" xml:space="preserve">
          <source>They might not support cross-origin access from client-side code at all (this might be a deliberate decision on security grounds, especially if you have to pass a personalised API Key in each request).</source>
          <target state="translated">Они могут вообще не поддерживать перекрестный доступ с клиентского кода (это может быть преднамеренное решение по соображениям безопасности,особенно,если в каждом запросе необходимо передавать персонализированный API ключ).</target>
        </trans-unit>
        <trans-unit id="4035c1092fef5f4b1d5300a30ca72bc19b830f2c" translate="yes" xml:space="preserve">
          <source>They might support JSONP</source>
          <target state="translated">Они могут поддержать JSONP</target>
        </trans-unit>
        <trans-unit id="4070327462efd6341c1d8af061f6ae9a155f4f00" translate="yes" xml:space="preserve">
          <source>They might tell you to use specific URLs</source>
          <target state="translated">Они могут сказать вам использовать определенные URL-адреса</target>
        </trans-unit>
        <trans-unit id="86e6affe855b69f1d8bd485bd50cbf74902446c9" translate="yes" xml:space="preserve">
          <source>This CORS issue wasn't further elaborated (for other causes).</source>
          <target state="translated">Этот вопрос CORS не получил дальнейшего развития (по другим причинам).</target>
        </trans-unit>
        <trans-unit id="da5b27da2c10e147b1be9056b8f6e0b70cc76a30" translate="yes" xml:space="preserve">
          <source>This happens when (roughly speaking) you try to make a cross-origin request that:</source>
          <target state="translated">Это происходит,когда (грубо говоря)Вы пытаетесь сделать перекрестный запрос:</target>
        </trans-unit>
        <trans-unit id="aa7d3a1a783441f8156a995c4e747515c5eed7e1" translate="yes" xml:space="preserve">
          <source>This is happening because of the CORS error. CORS stands for Cross Origin Resource Sharing. In simple words, this error occurs when we try to access a domain/resource from another domain.</source>
          <target state="translated">Это происходит из-за ошибки CORS.CORS означает &quot;Совместное использование ресурсов кросс-происхождения&quot;.Простыми словами,эта ошибка возникает,когда мы пытаемся получить доступ к ресурсу домена с другого домена.</target>
        </trans-unit>
        <trans-unit id="9445c44ac33eafce8dbcfa7beb12d85c9a2a027a" translate="yes" xml:space="preserve">
          <source>This is not the case for this exact question, but might help others that search for that problem</source>
          <target state="translated">Это не относится к данному вопросу,но может помочь другим,кто ищет эту проблему.</target>
        </trans-unit>
        <trans-unit id="20a4478d9435b61f5fc0f10a853aef5dc4b7c054" translate="yes" xml:space="preserve">
          <source>This is something you can do in your client-code to prevent CORS errors in &lt;em&gt;some cases&lt;/em&gt;.</source>
          <target state="translated">Это то, что вы можете сделать в своем клиентском коде, чтобы предотвратить ошибки CORS в &lt;em&gt;некоторых случаях&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="dd387cc7c0ddfa81e8a73fd3ad8eec157d2b5a85" translate="yes" xml:space="preserve">
          <source>This is the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;Same Origin Policy&lt;/a&gt;. It is a security feature implemented by browsers.</source>
          <target state="translated">Это та &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;же политика происхождения&lt;/a&gt; . Это функция безопасности, реализованная в браузерах.</target>
        </trans-unit>
        <trans-unit id="f228285fd4ea1c4455057da91df16018363da6ef" translate="yes" xml:space="preserve">
          <source>This would be fine since that is just between Mallory and Bob. There is no way for Bob to think that Mallory is Alice and to provide Mallory with data that should be kept confidential between Alice and Bob.</source>
          <target state="translated">Это было бы прекрасно,так как это только между Мэллори и Бобом.У Боба нет возможности думать,что Мэллори-это Элис,и предоставлять Мэллори данные,которые должны храниться в тайне между Элис и Бобом.</target>
        </trans-unit>
        <trans-unit id="bbe716d48d812e780f5d0c025cd7d8e8d137e139" translate="yes" xml:space="preserve">
          <source>Thus:</source>
          <target state="translated">Thus:</target>
        </trans-unit>
        <trans-unit id="2e622d7f6639260890f80f2a6685c393b5403a2f" translate="yes" xml:space="preserve">
          <source>To fix this, if you have access to the other domain, you will have to allow Access-Control-Allow-Origin in the server. This can be added in the headers. You can enable this for all the requests/domains or a specific domain.</source>
          <target state="translated">Чтобы исправить это,если у вас есть доступ к другому домену,вы должны разрешить Access-Control-Allow-Origin на сервере.Это можно добавить в заголовки.Вы можете включить его для всех доменов запросов или для определенного домена.</target>
        </trans-unit>
        <trans-unit id="6f655decc8eac3fe6c8bc774d35ee8140515efbb" translate="yes" xml:space="preserve">
          <source>What is stopping me from accessing the page?</source>
          <target state="translated">Что мешает мне зайти на страницу?</target>
        </trans-unit>
        <trans-unit id="c222285e4f0dfcb26c7d734bf432abc2efc0b6a4" translate="yes" xml:space="preserve">
          <source>Why the Same Origin Policy applies when you don't think it should</source>
          <target state="translated">Почему политика одного и того же происхождения применяется,когда вы не думаете,что она должна</target>
        </trans-unit>
        <trans-unit id="68b8e4a4bfccfe90f892af4970ab015d6f70ef95" translate="yes" xml:space="preserve">
          <source>Why the Same Origin Policy only applies to JavaScript in a web page</source>
          <target state="translated">Почему политика идентичного происхождения применяется только к JavaScript на веб-странице.</target>
        </trans-unit>
        <trans-unit id="abbe2bbe571390ca47e7527f04f9f823e204410f" translate="yes" xml:space="preserve">
          <source>Why you can display data in the page without reading it with JS</source>
          <target state="translated">Почему вы можете отображать данные на странице,не читая их с помощью JS</target>
        </trans-unit>
        <trans-unit id="383dc6735c76bbfea9b61fc8d3bbc5bbdaf87eee" translate="yes" xml:space="preserve">
          <source>Writing something other than a web app</source>
          <target state="translated">Написание чего-то кроме веб-приложения</target>
        </trans-unit>
        <trans-unit id="71bad54d58acd5cde3dc0f122a888a11d325d05a" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest cannot load &lt;a href=&quot;https://www.example.com/&quot;&gt;https://www.example.com/&lt;/a&gt;
      No 'Access-Control-Allow-Origin' header is present on the requested 
      resource. Origin '&lt;a href=&quot;http://localhost:4300&quot;&gt;http://localhost:4300&lt;/a&gt;' is therefore not allowed access.</source>
          <target state="translated">XMLHttpRequest не может загрузить &lt;a href=&quot;https://www.example.com/&quot;&gt;https://www.example.com/&lt;/a&gt; В запрашиваемом ресурсе отсутствует заголовок &amp;laquo;Access-Control-Allow-Origin&amp;raquo;. Источник ' &lt;a href=&quot;http://localhost:4300&quot;&gt;http: // localhost: 4300&lt;/a&gt; ', следовательно, не имеет доступа.</target>
        </trans-unit>
        <trans-unit id="7d4c0874dabc4851005a3af251a7dd41b17c2b76" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest cannot load XXX No 'Access-Control-Allow-Origin' header</source>
          <target state="translated">XMLHttpRequest не может загрузить XXX Нет заголовка 'Access-Control-Alloww-Origin'.</target>
        </trans-unit>
        <trans-unit id="84032e9155256a63c2c317d1a432e1392ae2ffde" translate="yes" xml:space="preserve">
          <source>You can make use of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests&quot;&gt;Simple Requests&lt;/a&gt;.</source>
          <target state="translated">Вы можете использовать &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests&quot;&gt;простые запросы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="565919979d1b220118880d7347d1698f1fb11c07" translate="yes" xml:space="preserve">
          <source>You should enable CORS to get it working.</source>
          <target state="translated">Ты должен включить CORS,чтобы он заработал.</target>
        </trans-unit>
        <trans-unit id="39ab42da37e2b09b25f5e11e8fbf631b5baa0ed2" translate="yes" xml:space="preserve">
          <source>Your particular case is showing how it is implemented for XMLHttpRequest (and you'll get identical results if you were to use fetch), but it also applies to other things (such as images loaded onto a &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; or documents loaded into an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;), just with slightly different implementations.</source>
          <target state="translated">Ваш конкретный случай показывает, как он реализован для XMLHttpRequest (и вы получите идентичные результаты, если будете использовать fetch), но это также относится и к другим вещам (таким как изображения, загруженные в &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; или документы, загруженные в &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; ), только с немного другими реализациями.</target>
        </trans-unit>
        <trans-unit id="9b958ab959f694798d92a468527ac46f2f64cf4b" translate="yes" xml:space="preserve">
          <source>add CORS headers</source>
          <target state="translated">добавлять заголовки CORS</target>
        </trans-unit>
        <trans-unit id="fbbf1bdb4343897dcae9384602598bf7e27d95fa" translate="yes" xml:space="preserve">
          <source>convert the response to JSONP</source>
          <target state="translated">преобразовать ответ в JSONP</target>
        </trans-unit>
        <trans-unit id="4d45714443791a616cc27fecf90f9f0854b14322" translate="yes" xml:space="preserve">
          <source>exist on the same origin as the HTML document</source>
          <target state="translated">существуют в том же происхождении,что и HTML-документ.</target>
        </trans-unit>
        <trans-unit id="64979ef625f468550475be52a9f9eba4cb697b50" translate="yes" xml:space="preserve">
          <source>tl;dr &amp;mdash;&amp;nbsp;There's a summary at the end and headings in the answer to make it easier to find the relevant parts. Reading everything is recommended though as it provides useful background for understanding the &lt;strong&gt;why&lt;/strong&gt; that makes seeing how the &lt;strong&gt;how&lt;/strong&gt; applies in different circumstances easier.</source>
          <target state="translated">tl; dr - в конце есть краткое содержание и заголовки, чтобы упростить поиск соответствующих частей. Тем не менее, рекомендуется читать все, поскольку это дает полезную информацию для понимания &lt;strong&gt;причин&lt;/strong&gt; , облегчающих понимание &lt;strong&gt;того&lt;/strong&gt; , как и &lt;strong&gt;как это&lt;/strong&gt; применяется в различных обстоятельствах.</target>
        </trans-unit>
        <trans-unit id="798d6f2be2e1e1f95e0abe2c366b9282b7d0b9fc" translate="yes" xml:space="preserve">
          <source>tl;dr; About the Same Origin Policy</source>
          <target state="translated">Доктор,насчет политики одного и того же происхождения.</target>
        </trans-unit>
        <trans-unit id="e4288b0b274bc0ac97897c68b14dc2b0d1554ea7" translate="yes" xml:space="preserve">
          <source>trying to put &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; and other CORS response headers on the request. These don't belong on the request, don't do anything helpful (what would be the point of a permissions system where you could grant yourself permission?), and must appear only on the response.</source>
          <target state="translated">пытается поместить &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; и другие заголовки ответа CORS на запрос. Они не относятся к запросу, не делают ничего полезного (какой смысл в системе разрешений, где вы можете предоставить себе разрешение?) И должны появляться только в ответе.</target>
        </trans-unit>
        <trans-unit id="1fa6839e05c6436308f1e8f17d2a6574bb48bf8d" translate="yes" xml:space="preserve">
          <source>trying to put a &lt;code&gt;Content-Type: application/json&lt;/code&gt; header on a GET request that has no request body to describe the content of (typically when the author confuses &lt;code&gt;Content-Type&lt;/code&gt; and &lt;code&gt;Accept&lt;/code&gt;).</source>
          <target state="translated">попытка поместить заголовок &lt;code&gt;Content-Type: application/json&lt;/code&gt; в запрос GET, у которого нет тела запроса для описания содержимого (обычно, когда автор путает &lt;code&gt;Content-Type&lt;/code&gt; и &lt;code&gt;Accept&lt;/code&gt; ).</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
