<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/351409">
    <body>
      <group id="351409">
        <trans-unit id="74c70799bd61bc94b0d03de7b0b944a131542e30" translate="yes" xml:space="preserve">
          <source>2016 update: with &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;spread&lt;/a&gt;, you don't need that &lt;code&gt;apply&lt;/code&gt; anymore, like:</source>
          <target state="translated">2016 업데이트 : &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;spread&lt;/a&gt; 를 사용하면 다음과 같이 더 이상 &lt;code&gt;apply&lt;/code&gt; 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="1d83028d18cf607ed5d747020faa9a4a2e885ab0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://es5.github.com/&quot;&gt;Annotated ES5&lt;/a&gt; has more info on exactly what &lt;a href=&quot;http://es5.github.com/#x15.4.4.7&quot;&gt;push&lt;/a&gt; and &lt;a href=&quot;http://es5.github.com/#x15.3.4.3&quot;&gt;apply&lt;/a&gt; do.</source>
          <target state="translated">&lt;a href=&quot;http://es5.github.com/&quot;&gt;어노테이션이있는 ES5&lt;/a&gt; 에는 &lt;a href=&quot;http://es5.github.com/#x15.4.4.7&quot;&gt;푸시&lt;/a&gt; 및 &lt;a href=&quot;http://es5.github.com/#x15.3.4.3&quot;&gt;적용이&lt;/a&gt; 수행하는 작업에 대한 자세한 정보가 있습니다.</target>
        </trans-unit>
        <trans-unit id="2bb44a838188c20b44c81f2bdaecc5e01e66abc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;concat()&lt;/code&gt;, of course, can be used with 2 dimensional arrays as well. No looping required.</source>
          <target state="translated">물론 &lt;code&gt;concat()&lt;/code&gt; 은 2 차원 배열에서도 사용할 수 있습니다. 루핑이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f9b9079f18da055f14d101b2761d65d4db09c45e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pop()&lt;/code&gt; removes an element from the end of an array.</source>
          <target state="translated">&lt;code&gt;pop()&lt;/code&gt; 은 배열의 끝에서 요소를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="d21cb8498263311e50a09dec815f3dced420361c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;push()&lt;/code&gt; adds a new element to the end of an array.</source>
          <target state="translated">&lt;code&gt;push()&lt;/code&gt; 는 배열 끝에 새 요소를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="0184800f5aa18ae2701721588db78766ecadaf2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;push()&lt;/code&gt; mutates the original array.</source>
          <target state="translated">&lt;code&gt;push()&lt;/code&gt; 는 원래 배열을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="d1663f78fc6da39e6eb6445dc2aa4d700aa45b94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1)&lt;/strong&gt; The &lt;code&gt;push()&lt;/code&gt; method adds one or more elements to the end of an array and returns the new length of the array.</source>
          <target state="translated">&lt;strong&gt;1)&lt;/strong&gt; &lt;code&gt;push()&lt;/code&gt; 메서드는 배열 끝에 하나 이상의 요소를 추가하고 배열의 새 길이를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bf8cf955115150bad8acfd153e6fcea62501199e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2)&lt;/strong&gt; The &lt;code&gt;unshift()&lt;/code&gt; method adds one or more elements to the beginning of an array and returns the new length of the array:</source>
          <target state="translated">&lt;strong&gt;2)&lt;/strong&gt; &lt;code&gt;unshift()&lt;/code&gt; 메서드는 배열의 시작 부분에 하나 이상의 요소를 추가하고 배열의 새 길이를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dc3b36392cdddd79ee116de8a102a589cb3389c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;3)&lt;/strong&gt; The &lt;code&gt;concat()&lt;/code&gt; method is used to merge two or more arrays. This method &lt;strong&gt;does not change&lt;/strong&gt; the existing arrays, but instead returns a new array.</source>
          <target state="translated">&lt;strong&gt;3)&lt;/strong&gt; &lt;code&gt;concat()&lt;/code&gt; 메소드는 둘 이상의 배열을 병합하는 데 사용됩니다. 이 메소드 &lt;strong&gt;는&lt;/strong&gt; 기존 배열을 &lt;strong&gt;변경하지 않고&lt;/strong&gt; 대신 새 배열을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ad1b1c82eb0adc4c5d995425b988513282252ccb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;4)&lt;/strong&gt; You can use the array's &lt;code&gt;.length&lt;/code&gt; property to add an element to the end of the array:</source>
          <target state="translated">&lt;strong&gt;4)&lt;/strong&gt; 배열의 &lt;code&gt;.length&lt;/code&gt; 속성을 사용하여 배열 끝에 요소를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d7d6f99f18019a99ea8bd6234fa6c998ae965401" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;5)&lt;/strong&gt; The &lt;code&gt;splice()&lt;/code&gt; method changes the content of an array by removing existing elements and/or adding new elements:</source>
          <target state="translated">&lt;strong&gt;5)&lt;/strong&gt; &lt;code&gt;splice()&lt;/code&gt; 메서드는 기존 요소를 제거하거나 새 요소를 추가하여 배열의 내용을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="90eee22713ff3661891479a39e50af975166f701" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;6)&lt;/strong&gt; You can also add a new element to an array simply by specifying a new index and assigning a value:</source>
          <target state="translated">&lt;strong&gt;6)&lt;/strong&gt; 새 인덱스를 지정하고 값을 지정하여 배열에 새 요소를 추가 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c808d8b4d27cce201fd4ef95263cfd256e0dd91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Append Multiple Elements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;여러 요소 추가&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="afa5b338f50995ce7cff7522d8012148ac7122ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Append Single Element&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;단일 요소 추가&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2d71e8b2cd2e7e12e150c49473697bf691994d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Append array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;배열 추가&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a466d16fc05d419d3c6ff318fa72c51874cc04bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bonus point&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;보너스 포인트&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7db0e95cb275d10cf44f58a59cb3fed7245c0833" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ES5&lt;/strong&gt;&lt;code&gt;var combinedArray = array1.concat(array2);&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;ES5&lt;/strong&gt; &lt;code&gt;var combinedArray = array1.concat(array2);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="22bbae57b0e5abb2434f6da396c178257070825a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ES6&lt;/strong&gt;&lt;code&gt;const combinedArray = [...array1, ...array2]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;ES6&lt;/strong&gt; &lt;code&gt;const combinedArray = [...array1, ...array2]&lt;/code&gt; &lt;strong&gt;combinationArray&lt;/strong&gt; = [... array1, ... array2]</target>
        </trans-unit>
        <trans-unit id="4d7b092bfaca1b96da56138a240e3d0d93158681" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output:&lt;/strong&gt;
[1,2,3,4,5]</source>
          <target state="translated">&lt;strong&gt;Output:&lt;/strong&gt;
[1,2,3,4,5]</target>
        </trans-unit>
        <trans-unit id="4a611034bd4c0106ba280ff05709c3e69f8256e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;There are a couple of ways to append an array in JavaScript:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;JavaScript로 배열을 추가하는 방법에는 두 가지가 있습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="200627b0eb37efd54845f9a6bd7c0133da5e8d51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Update&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba35d1836976b9832ec0cdc42dd4a596f8f58f18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;usage:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;usage:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="01766c4af58adb2fe803601ef511f35452922563" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;you can do it using new javascript Es 6 feature :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;새로운 자바 스크립트 Es 6 기능을 사용하여 수행 할 수 있습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6cafba11a6f68a97ff5e2d3abc9efb5d8d683804" translate="yes" xml:space="preserve">
          <source>Also note that you don't have to add in order and you can actually skip values, as in</source>
          <target state="translated">또한 순서대로 추가 할 필요가 없으며 실제로 다음과 같이 값을 건너 뛸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a5750ad27f33bc072c7778f35273866d9a92d38" translate="yes" xml:space="preserve">
          <source>And if you want to add record &lt;code&gt;g&lt;/code&gt; to array  (&lt;code&gt;var a=[]&lt;/code&gt;) then you could use:</source>
          <target state="translated">그리고 레코드 &lt;code&gt;g&lt;/code&gt; 를 배열에 추가하려면 ( &lt;code&gt;var a=[]&lt;/code&gt; ) 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc549a778e356b8f546ccd0c458e1e868f88d416" translate="yes" xml:space="preserve">
          <source>And lastly, the &lt;code&gt;concat()&lt;/code&gt; method is used to join two or more arrays. Example:</source>
          <target state="translated">마지막으로 &lt;code&gt;concat()&lt;/code&gt; 메소드는 둘 이상의 배열을 결합하는 데 사용됩니다. 예:</target>
        </trans-unit>
        <trans-unit id="70486af3df43f1492aa723b745abd19def834e79" translate="yes" xml:space="preserve">
          <source>Append a single item</source>
          <target state="translated">단일 품목 추가</target>
        </trans-unit>
        <trans-unit id="ddb4797c101abba10692a73cc6f8badb0231ba84" translate="yes" xml:space="preserve">
          <source>Append a value to an array</source>
          <target state="translated">배열에 값을 추가</target>
        </trans-unit>
        <trans-unit id="6a1ee0a1667761aec173a956b5fd8ea166b6223e" translate="yes" xml:space="preserve">
          <source>Append multiple items</source>
          <target state="translated">여러 항목 추가</target>
        </trans-unit>
        <trans-unit id="6176967f3b1603f395418a0d2274a660edb44ff6" translate="yes" xml:space="preserve">
          <source>Appending items on an array</source>
          <target state="translated">배열에 항목 추가</target>
        </trans-unit>
        <trans-unit id="190f55fe75d7b954fb0d04fb228074ec3a9453b3" translate="yes" xml:space="preserve">
          <source>As a result of this you can use push.apply to append an array to another array like so:</source>
          <target state="translated">결과적으로 push.apply를 사용하여 다음과 같이 다른 배열에 배열을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3be347218fb540f9f56908c8d3e7ecf2d0d114f" translate="yes" xml:space="preserve">
          <source>Babel REPL Example</source>
          <target state="translated">바벨 REPL 예</target>
        </trans-unit>
        <trans-unit id="d3769f0b46ebe27eca88811e24ed1ec3624722b4" translate="yes" xml:space="preserve">
          <source>But if you intend to add multiple elements then store the elements in a new array and concat the second array with the first array...either way you wish.</source>
          <target state="translated">그러나 여러 요소를 추가하려는 경우 요소를 새 배열에 저장하고 두 번째 배열을 첫 번째 배열과 연결하십시오.</target>
        </trans-unit>
        <trans-unit id="fa4a7a170f7075560c98a976572cae386b13a240" translate="yes" xml:space="preserve">
          <source>E.g.</source>
          <target state="translated">E.g.</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">스 니펫 확장</target>
        </trans-unit>
        <trans-unit id="8d4d303024db744b8b7216aa50f4835cc30c36b8" translate="yes" xml:space="preserve">
          <source>Firefox 3.6 (Mac):</source>
          <target state="translated">Firefox 3.6 (Mac) :</target>
        </trans-unit>
        <trans-unit id="8e3d72aed28a4660df14afc96548c7388a6bde9d" translate="yes" xml:space="preserve">
          <source>Google Chrome 6.0 (Mac):</source>
          <target state="translated">Chrome 6.0 (Mac) :</target>
        </trans-unit>
        <trans-unit id="e1a8b33ae7254c94fdfffb98c769170c3b11bad1" translate="yes" xml:space="preserve">
          <source>How do I append an object (such as a string or number) to an array in JavaScript?</source>
          <target state="translated">JavaScript의 배열에 객체 (예 : 문자열 또는 숫자)를 어떻게 추가합니까?</target>
        </trans-unit>
        <trans-unit id="10057bd22f543b4dbd5c1172787d24325670123a" translate="yes" xml:space="preserve">
          <source>How to append something to an array</source>
          <target state="translated">배열에 무언가를 추가하는 방법</target>
        </trans-unit>
        <trans-unit id="f927e79ae0671e493877c41ed46cb155cf3eff4c" translate="yes" xml:space="preserve">
          <source>However if you don't know then you can either use</source>
          <target state="translated">그러나 당신이 모른다면 다음 중 하나를 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="d901859e44cc49eb5ab1aa4b3ee7c3f2a3723266" translate="yes" xml:space="preserve">
          <source>I like the &lt;code&gt;arr.push()&lt;/code&gt; syntax better, but I think I'd be better off with the &lt;code&gt;arr[arr.length]&lt;/code&gt; Version, at least in raw speed. I'd love to see the results of an IE run though.</source>
          <target state="translated">나는 &lt;code&gt;arr.push()&lt;/code&gt; 구문을 더 좋아하지만, 적어도 원시 속도에서는 &lt;code&gt;arr[arr.length]&lt;/code&gt; 버전을 사용하는 것이 더 나을 것이라고 생각합니다. IE 실행 결과를보고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="b36f4f7348481b6c7e3be9722ad1f717c1b18a51" translate="yes" xml:space="preserve">
          <source>I think it's worth mentioning that push can be called with multiple arguments, which will be appended to the array in order. For example:</source>
          <target state="translated">푸시는 여러 인수로 호출 될 수 있으며 배열에 순서대로 추가 될 수 있다고 언급 할 가치가 있다고 생각합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d770727a0640271a286b2157bcc72efc78776f95" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;arr&lt;/code&gt; is an array, and &lt;code&gt;val&lt;/code&gt; is the value you wish to add use:</source>
          <target state="translated">&lt;code&gt;arr&lt;/code&gt; 이 배열이고 &lt;code&gt;val&lt;/code&gt; 이 추가하려는 값인 경우 :</target>
        </trans-unit>
        <trans-unit id="f171afda4f240dac629d4d3c2a38dc08929354f1" translate="yes" xml:space="preserve">
          <source>If you are using the ES6 you can use &lt;a href=&quot;https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;spread&lt;/a&gt; operator to do it.</source>
          <target state="translated">ES6을 사용하는 경우 &lt;a href=&quot;https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;스프레드&lt;/a&gt; 연산자를 사용하여 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="190f9c5cee5b8540c080ac77914564d001fc9fa8" translate="yes" xml:space="preserve">
          <source>If you have array you can use concat()
e.g. &lt;code&gt;Array1.concat(Array2)&lt;/code&gt;</source>
          <target state="translated">배열이 있다면 concat ()을 사용할 수 있습니다. 예 : &lt;code&gt;Array1.concat(Array2)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e602ad52ece3da626ca29b6f0ece424579306099" translate="yes" xml:space="preserve">
          <source>If you have just one element to add you can also try length menthod
e.g. &lt;code&gt;array[aray.length] = 'test';&lt;/code&gt;</source>
          <target state="translated">추가 할 요소가 하나 뿐인 경우 length 멘토를 시도 할 수도 있습니다. 예 : &lt;code&gt;array[aray.length] = 'test';&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a88d2cb64601945879598f27067d08c158478703" translate="yes" xml:space="preserve">
          <source>If you know the highest index (such as stored in a variable &quot;i&quot;) then you can do</source>
          <target state="translated">변수 &quot;i&quot;에 저장된 것과 같이 가장 높은 색인을 알고 있다면</target>
        </trans-unit>
        <trans-unit id="dc9dfa3ef880f925c45e3288483b29826bffaecb" translate="yes" xml:space="preserve">
          <source>If you want to add the items of one array to another array, you can use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt;&lt;code&gt;firstArray.concat(secondArray)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">한 배열의 항목을 다른 배열에 추가하려면 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt; &lt;code&gt;firstArray.concat(secondArray)&lt;/code&gt; &lt;/a&gt; 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b072e1deb75209387c0fa1476d06680eaf3add63" translate="yes" xml:space="preserve">
          <source>If you want to append a single value into an array, simply use the push method. It will add a new element at the end of the array.</source>
          <target state="translated">단일 값을 배열에 추가하려면 push 메소드를 사용하십시오. 배열 끝에 새 요소를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="201cf84767edb701c887d8b45d934d6575f85108" translate="yes" xml:space="preserve">
          <source>If you want to append two arrays -</source>
          <target state="translated">두 개의 배열을 추가하려는 경우-</target>
        </trans-unit>
        <trans-unit id="c6805bb7f007a7ba9f1f263b28f3f2f087f15411" translate="yes" xml:space="preserve">
          <source>If you'd like to create &lt;em&gt;another&lt;/em&gt; variable to store all the items from both array, you can do this:</source>
          <target state="translated">두 배열의 모든 항목을 저장하기 위해 &lt;em&gt;다른&lt;/em&gt; 변수를 작성하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="23b97a6f87664a660504fae7e6049a0acc863709" translate="yes" xml:space="preserve">
          <source>If you're only appending a single variable, then &lt;code&gt;push()&lt;/code&gt; works just fine. If you need to append another array, use &lt;code&gt;concat()&lt;/code&gt;:</source>
          <target state="translated">단일 변수 만 추가하는 경우 &lt;code&gt;push()&lt;/code&gt; 가 제대로 작동합니다. 다른 배열을 추가해야 할 경우 &lt;code&gt;concat()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0703ce893f42c474b260c56db553085cc9ae1504" translate="yes" xml:space="preserve">
          <source>In which case the values in between will have a value of undefined.</source>
          <target state="translated">이 경우 사이의 값은 정의되지 않은 값을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="2b6e1ef62b0d2b349d8dde1517ca7516a29514e4" translate="yes" xml:space="preserve">
          <source>It also supports appending multiple values at once just like &lt;code&gt;push&lt;/code&gt;.</source>
          <target state="translated">또한 &lt;code&gt;push&lt;/code&gt; 처럼 여러 값을 한 번에 추가 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="debe2052ae191aae93d3cda8b33c75c70e0c2e9f" translate="yes" xml:space="preserve">
          <source>It is therefore a good practice when looping through a JavaScript to verify that a value actually exists at that point.</source>
          <target state="translated">따라서 JavaScript를 반복 할 때 값이 실제로 해당 지점에 존재하는지 확인하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="c39178dd5cef6b3a7dbcec729511acb02874ce5d" translate="yes" xml:space="preserve">
          <source>It will append &lt;code&gt;array2&lt;/code&gt; to &lt;code&gt;array1&lt;/code&gt;. Now &lt;code&gt;array1&lt;/code&gt; contains &lt;code&gt;[11, 32, 75, 99, 67, 34]&lt;/code&gt;.
This code is much simpler than writing &lt;code&gt;for&lt;/code&gt; loops to copy each and every items in the array.</source>
          <target state="translated">&lt;code&gt;array2&lt;/code&gt; 를 &lt;code&gt;array1&lt;/code&gt; 에 추가합니다. 이제 &lt;code&gt;array1&lt;/code&gt; 에는 &lt;code&gt;[11, 32, 75, 99, 67, 34]&lt;/code&gt; 됩니다. 이 코드는 &lt;code&gt;for&lt;/code&gt; 루프를 작성하여 배열의 모든 항목을 복사하는 것보다 훨씬 간단합니다.</target>
        </trans-unit>
        <trans-unit id="91b2629e02005956d7e1ad7644552f1b497fbc21" translate="yes" xml:space="preserve">
          <source>Javascript with &lt;strong&gt;ECMAScript 5&lt;/strong&gt; standard which is supported by most browsers now, you can use &lt;code&gt;apply()&lt;/code&gt; to append &lt;code&gt;array1&lt;/code&gt; to &lt;code&gt;array2&lt;/code&gt;.</source>
          <target state="translated">현재 대부분의 브라우저에서 지원되는 &lt;strong&gt;ECMAScript 5&lt;/strong&gt; 표준을 사용하는 Javascript는 &lt;code&gt;apply()&lt;/code&gt; 를 사용하여 &lt;code&gt;array1&lt;/code&gt; 을 &lt;code&gt;array2&lt;/code&gt; 에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8edd708eca068488506556207ad44fe14c4b9ea" translate="yes" xml:space="preserve">
          <source>Javascript with &lt;strong&gt;ECMAScript 6&lt;/strong&gt; standard which is supported by Chrome and FF and IE Edge, you can use the &lt;code&gt;spread&lt;/code&gt; operator:</source>
          <target state="translated">Chrome 및 FF 및 IE Edge에서 지원되는 &lt;strong&gt;ECMAScript 6&lt;/strong&gt; 표준을 사용하는 Javascript는 &lt;code&gt;spread&lt;/code&gt; 연산자를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="37c78df54cef44cc89e8309b5f9d5c58790157e3" translate="yes" xml:space="preserve">
          <source>Just an addition to this answer if you want to append any value to the start of an array that means to the first index then you can use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift&quot;&gt;&lt;code&gt;Array.prototype.unshift&lt;/code&gt;&lt;/a&gt; for this purpose.</source>
          <target state="translated">첫 번째 인덱스를 의미하는 배열의 시작 부분에 값을 추가하려는 경우이 대답에 추가하면이 목적으로 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift&quot;&gt; &lt;code&gt;Array.prototype.unshift&lt;/code&gt; &lt;/a&gt; 를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6277c1b6d0ef2cf073378efbb0724373f6e4e38c" translate="yes" xml:space="preserve">
          <source>Just want to add a snippet for non-destructive addition of an element.</source>
          <target state="translated">비파괴적인 요소 추가를 위해 스 니펫을 추가하고 싶을뿐입니다.</target>
        </trans-unit>
        <trans-unit id="2c030b5f8bae31cbcaa767d5e7f68f24b745082f" translate="yes" xml:space="preserve">
          <source>Large arrays: &lt;strong&gt;&lt;code&gt;arr.push(b)&lt;/code&gt; is faster&lt;/strong&gt; (500ms vs. 900ms)</source>
          <target state="translated">큰 배열 : &lt;strong&gt; &lt;code&gt;arr.push(b)&lt;/code&gt; 가 더 빠름&lt;/strong&gt; (500ms 대 &lt;strong&gt;900ms&lt;/strong&gt; )</target>
        </trans-unit>
        <trans-unit id="25c5f00673d79d9655812dad2207c0d817d32ec7" translate="yes" xml:space="preserve">
          <source>Large arrays: &lt;strong&gt;&lt;code&gt;arr[arr.length] = b&lt;/code&gt; is faster&lt;/strong&gt; (160ms vs. 185ms)</source>
          <target state="translated">큰 배열 : &lt;strong&gt; &lt;code&gt;arr[arr.length] = b&lt;/code&gt; 가 빠름&lt;/strong&gt; (160ms 대 185ms)</target>
        </trans-unit>
        <trans-unit id="64a904307fdf6ff4bd0fb499580ee7448d9e90ef" translate="yes" xml:space="preserve">
          <source>Large arrays: &lt;strong&gt;No significant difference&lt;/strong&gt; (160ms)</source>
          <target state="translated">큰 배열 : &lt;strong&gt;큰 차이 없음&lt;/strong&gt; (160ms)</target>
        </trans-unit>
        <trans-unit id="9d94d817a6de7fffb375a055ec7501fd061d639b" translate="yes" xml:space="preserve">
          <source>Let the array length property do the work:</source>
          <target state="translated">배열 길이 속성이 작동하게하십시오.</target>
        </trans-unit>
        <trans-unit id="03fc0d80dd8719a4468d990403052a7427225631" translate="yes" xml:space="preserve">
          <source>Lots of great info &lt;a href=&quot;http://www.javascriptkit.com/jsref/&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.javascriptkit.com/jsref/&quot;&gt;여기&lt;/a&gt; 에 좋은 정보가 많이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7d65bdea080d17c9143919efb72f1e2f914941f0" translate="yes" xml:space="preserve">
          <source>My benchmarking loops:</source>
          <target state="translated">내 벤치마킹 루프 :</target>
        </trans-unit>
        <trans-unit id="ffee3e0f6b5aac9ff08a53405cafd5a4a810a3ce" translate="yes" xml:space="preserve">
          <source>Note that the array is zero based so .length return the highest index plus one.</source>
          <target state="translated">배열은 0부터 시작하므로 .length는 가장 높은 인덱스에 1을 더한 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="11153ec9b140820b28e8a9d431c75c009ecc2aeb" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;concat()&lt;/code&gt; does not actually add an item to the array, but creates a new array, which you can assign to another variable, or reassign to the original array (declaring it as &lt;code&gt;let&lt;/code&gt;, as you cannot reassign a &lt;code&gt;const&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;concat()&lt;/code&gt; 은 실제로 배열에 항목을 추가하지 않지만 다른 변수를 할당하거나 원래 배열에 다시 할당 할 수있는 새 배열을 만듭니다 ( &lt;code&gt;const&lt;/code&gt; 를 다시 할당 할 수 없으므로 &lt;code&gt;let&lt;/code&gt; 으로 선언).</target>
        </trans-unit>
        <trans-unit id="351658ffeabb2007b23cc99c7925c8ec4baab755" translate="yes" xml:space="preserve">
          <source>Now, you can take advantage of ES6 syntax and just do:</source>
          <target state="translated">이제 ES6 구문을 활용하고 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ffbc9fc8c808dd33f0635eac3aaf0717126ac499" translate="yes" xml:space="preserve">
          <source>Of course make sure in this case that you don't use as the condition myArray[i] (as some people over the internet suggest based on the end that as soon as i is greater then the highest index it will return undefined which evaluates to false)</source>
          <target state="translated">물론이 경우 myArray [i] 조건으로 사용하지 않아야합니다 (인터넷상의 일부 사람들은 i가 더 큰 인덱스보다 높을수록 정의되지 않은 값을 반환한다는 결론에 따라 제안합니다) 그릇된)</target>
        </trans-unit>
        <trans-unit id="c39924f3eaa992b84faca9f939e21902b1315cbd" translate="yes" xml:space="preserve">
          <source>Or just:</source>
          <target state="translated">아니면 그냥 :</target>
        </trans-unit>
        <trans-unit id="04f8c1ef2fd12ff7b7955cf8bd6bd4522dfe8741" translate="yes" xml:space="preserve">
          <source>Originally &lt;a href=&quot;https://flaviocopes.com/how-to-append-item-to-array/&quot;&gt;posted at&lt;/a&gt;</source>
          <target state="translated">원래에 &lt;a href=&quot;https://flaviocopes.com/how-to-append-item-to-array/&quot;&gt;게시&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="f0170c0c443f3b0c1cc7ca04b7a1056112ca14e5" translate="yes" xml:space="preserve">
          <source>Remember that as described previously this method does not mutate the original array, but it  returns a new array.</source>
          <target state="translated">앞에서 설명한 것처럼이 메서드는 원래 배열을 변경하지 않지만 새 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="945cf473843a91f0d979857974ed5f4c199f8198" translate="yes" xml:space="preserve">
          <source>Safari 5.0 (Mac):</source>
          <target state="translated">Safari 5.0 (Mac) :</target>
        </trans-unit>
        <trans-unit id="24f7bd8cc1bf886f2aa4d0b8ceef517a0f9ca597" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;Array.prototype.push&lt;/a&gt; adds one or more elements to the end of an array and &lt;em&gt;returns the new length of the array&lt;/em&gt;, sometimes we want just to get the new up-to-date array so we can do something like so:</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;Array.prototype.push&lt;/a&gt; 는 배열 끝에 하나 이상의 요소를 추가하고 배열 &lt;em&gt;의 새로운 길이를 반환하기 때문에&lt;/em&gt; 때로는 새로운 최신 배열을 얻기 위해 다음과 같이 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be25aa26c59e69e2b6f3403ff2ecc84c12c13093" translate="yes" xml:space="preserve">
          <source>Small arrays: &lt;strong&gt;&lt;code&gt;arr[arr.length] = b&lt;/code&gt; is faster&lt;/strong&gt; (300ms vs. 800ms)</source>
          <target state="translated">작은 배열 : &lt;strong&gt; &lt;code&gt;arr[arr.length] = b&lt;/code&gt; 가 더 빠름&lt;/strong&gt; (300ms 대 800ms)</target>
        </trans-unit>
        <trans-unit id="4ac6990e6339f2cc4e882ae1a040bf8be5c5e6a1" translate="yes" xml:space="preserve">
          <source>Small arrays: &lt;strong&gt;&lt;code&gt;arr[arr.length] = b&lt;/code&gt; is faster&lt;/strong&gt; (90ms vs. 115ms)</source>
          <target state="translated">작은 배열 : &lt;strong&gt; &lt;code&gt;arr[arr.length] = b&lt;/code&gt; 가 빠름&lt;/strong&gt; (90ms 대 115ms)</target>
        </trans-unit>
        <trans-unit id="f483b73e9a525ef1a1b8b1762b07ac10c7e0f8ec" translate="yes" xml:space="preserve">
          <source>Small arrays: &lt;strong&gt;No significant difference&lt;/strong&gt; (and Chrome is FAST! Only ~38ms !!)</source>
          <target state="translated">작은 배열 : &lt;strong&gt;큰 차이는 없습니다&lt;/strong&gt; (그리고 Chrome은 빠릅니다! ~ 38ms 만!)</target>
        </trans-unit>
        <trans-unit id="9183022157176d5593eef62227016ba9855a1e1b" translate="yes" xml:space="preserve">
          <source>Some quick benchmarking (each test = 500k appended elements and the results are averages of multiple runs) showed the following:</source>
          <target state="translated">일부 빠른 벤치마킹 (각 테스트 = 500k 추가 요소 및 결과는 여러 번 실행 된 평균 임)은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0bf5f8af6d204b38f88a471faee11aca98b7101b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;push()&lt;/code&gt; method adds new items to the end of an array, and returns the new length. Example:</source>
          <target state="translated">&lt;code&gt;push()&lt;/code&gt; 메서드는 배열 끝에 새 항목을 추가하고 새 길이를 반환합니다. 예:</target>
        </trans-unit>
        <trans-unit id="5cbdbb8af757bd7451265feee9a2f1bb0a8c23b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;spread&lt;/code&gt; operator will replace &lt;code&gt;array2.push(...array1);&lt;/code&gt; with &lt;code&gt;array2.push(3, 4, 5);&lt;/code&gt; when the browser is thinking the logic.</source>
          <target state="translated">&lt;code&gt;spread&lt;/code&gt; 연산자는 &lt;code&gt;array2.push(...array1);&lt;/code&gt; &lt;code&gt;array2.push(3, 4, 5);&lt;/code&gt; 브라우저가 논리를 생각할 때</target>
        </trans-unit>
        <trans-unit id="dd4817d40955122fa0506956f43d3d4995ed5c0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unshift()&lt;/code&gt; method adds new items to the beginning of an array, and returns the new length. Example:</source>
          <target state="translated">&lt;code&gt;unshift()&lt;/code&gt; 메서드는 배열의 시작 부분에 새 항목을 추가하고 새 길이를 반환합니다. 예:</target>
        </trans-unit>
        <trans-unit id="7032e55b1df7e8187191f368613a4f09d3e08c8d" translate="yes" xml:space="preserve">
          <source>The concat does not affect &lt;code&gt;ar1&lt;/code&gt; and &lt;code&gt;ar2&lt;/code&gt; unless reassigned, for example:</source>
          <target state="translated">concat은 &lt;code&gt;ar1&lt;/code&gt; 과 같이 재 할당되지 않는 한 ar1 및 ar2에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="70b242b9c87bc038834b90cd7838eb783f4af922" translate="yes" xml:space="preserve">
          <source>The exact answer to your question is already answered, but let's look at some other ways to add items to an array.</source>
          <target state="translated">귀하의 질문에 대한 정확한 답변은 이미 답변되었지만 배열에 항목을 추가하는 다른 방법을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="4ed35a08a496ed62e0565705f82826ef90266625" translate="yes" xml:space="preserve">
          <source>The spread operator (&lt;code&gt;...&lt;/code&gt;) is to spread out all items from a collection.</source>
          <target state="translated">스프레드 연산자 ( &lt;code&gt;...&lt;/code&gt; )는 컬렉션의 모든 항목을 분산시키는 것입니다.</target>
        </trans-unit>
        <trans-unit id="f2c55ed05e72c4fc556c433df7fe2f5347923ed3" translate="yes" xml:space="preserve">
          <source>They are main functions to add or append new values to the arrays.</source>
          <target state="translated">배열에 새로운 값을 추가하거나 추가하는 주요 기능입니다.</target>
        </trans-unit>
        <trans-unit id="12661e1ee3624a3e030fdcaf02a2ebb5f6487ee7" translate="yes" xml:space="preserve">
          <source>This adds the contents of &lt;code&gt;arr2&lt;/code&gt; onto the end of &lt;code&gt;arr&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;arr2&lt;/code&gt; 의 내용을 &lt;code&gt;arr&lt;/code&gt; 의 끝에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="c4ade2ad16e592efdd422482c19907ce1c504f0f" translate="yes" xml:space="preserve">
          <source>This can be done by something like the following:</source>
          <target state="translated">다음과 같은 방법으로 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c396a1b6dd77eee038725a47af1d3d1548c64c4" translate="yes" xml:space="preserve">
          <source>To append a multiple item to an array, you can use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;&lt;code&gt;push()&lt;/code&gt;&lt;/a&gt; by calling it with multiple arguments:</source>
          <target state="translated">배열에 여러 항목을 추가하려면 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt; &lt;code&gt;push()&lt;/code&gt; &lt;/a&gt; 를 여러 인수와 함께 호출하여 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="027568689dda7b38138f9abda14e3397a302d6cf" translate="yes" xml:space="preserve">
          <source>To append a single item to an array, use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;&lt;code&gt;push()&lt;/code&gt;&lt;/a&gt; method provided by the Array object:</source>
          <target state="translated">단일 항목을 배열에 추가하려면 Array 객체에서 제공하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt; &lt;code&gt;push()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e8ccd3919aae33c3e22e0ed7c772b6ff9aa769f9" translate="yes" xml:space="preserve">
          <source>To append an object (such as a string or number) to an array use -</source>
          <target state="translated">문자열 또는 숫자와 같은 객체를 배열에 추가하려면-</target>
        </trans-unit>
        <trans-unit id="429da1d3fab336292296651eba35c7bf1a59a1e1" translate="yes" xml:space="preserve">
          <source>To create a new array instead, use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt;&lt;code&gt;concat()&lt;/code&gt;&lt;/a&gt; Array method:</source>
          <target state="translated">대신 새 배열을 만들려면 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt; &lt;code&gt;concat()&lt;/code&gt; &lt;/a&gt; Array 메소드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f937a745d87fe1df830dd233f8d662277498bd59" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt;&lt;code&gt;concat&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt; &lt;code&gt;concat&lt;/code&gt; &lt;/a&gt; 사용 :</target>
        </trans-unit>
        <trans-unit id="414e37f66598320654ee041f7a06156547887bd5" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;&lt;code&gt;Array.prototype.push&lt;/code&gt;&lt;/a&gt; method to append values to an array:</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt; &lt;code&gt;Array.prototype.push&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 값을 배열에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="02adbeec5afea9f552940accc281f98cfa179c38" translate="yes" xml:space="preserve">
          <source>We don't have append function for Array in javascript, but we have &lt;strong&gt;push&lt;/strong&gt; and &lt;strong&gt;unshift&lt;/strong&gt;, imagine you have the array below:</source>
          <target state="translated">javascript에는 Array에 대한 추가 기능이 없지만 &lt;strong&gt;push&lt;/strong&gt; 및 &lt;strong&gt;unshift&lt;/strong&gt; 가 있습니다. 아래에 배열이 있다고 상상해보십시오.</target>
        </trans-unit>
        <trans-unit id="3a38b1721253ee185478c1b00ab0b5e84d1a742d" translate="yes" xml:space="preserve">
          <source>With the new ES6 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;spread operator&lt;/a&gt;, joining two arrays using &lt;code&gt;push&lt;/code&gt; becomes even easier:</source>
          <target state="translated">새로운 ES6 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;스프레드 연산자를&lt;/a&gt; 사용하면 &lt;code&gt;push&lt;/code&gt; 를 사용하여 두 개의 어레이를 결합하는 것이 훨씬 쉬워집니다.</target>
        </trans-unit>
        <trans-unit id="94bd2702a9423b3fe2147897213bf8d6ee5d4bd8" translate="yes" xml:space="preserve">
          <source>You .push() that value in. 
&lt;strong&gt;Example:&lt;/strong&gt; array.push(value);</source>
          <target state="translated">해당 값을 .push ()로 입력합니다. &lt;strong&gt;예 :&lt;/strong&gt; array.push (value);</target>
        </trans-unit>
        <trans-unit id="116ba7083fcccbcff985af965e8aef17fde4ab77" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt;&lt;code&gt;concat()&lt;/code&gt;&lt;/a&gt; method you saw before, passing a list of items separated by a comma:</source>
          <target state="translated">이전에 본 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt; &lt;code&gt;concat()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 쉼표로 구분 된 항목 목록을 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="fff7e720da32bd4b43b186739c3754bb6907b89c" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;push&lt;/code&gt; and &lt;code&gt;apply&lt;/code&gt; function to append two arrays.</source>
          <target state="translated">&lt;code&gt;push&lt;/code&gt; 및 &lt;code&gt;apply&lt;/code&gt; 기능을 사용하여 두 개의 배열을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4593be1a3e5b846fa497d1651e7e8cc40f4e9c8b" translate="yes" xml:space="preserve">
          <source>You can use push method.</source>
          <target state="translated">푸시 방법을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d36592fd4e1a12aac8e77a6bc7852b5dedf6cb91" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;push()&lt;/code&gt; function to append more than one value to an array in a single call:</source>
          <target state="translated">&lt;code&gt;push()&lt;/code&gt; 함수를 사용하여 단일 호출에서 배열에 둘 이상의 값을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ac227c5b45d2b2c7403c76c7f404ea458a866f5" translate="yes" xml:space="preserve">
          <source>You can use the push() if you want to add values
e.g. &lt;code&gt;arr.push(&quot;Test1&quot;, &quot;Test2&quot;);&lt;/code&gt;</source>
          <target state="translated">값을 추가하려면 push ()를 사용할 수 있습니다. 예 : &lt;code&gt;arr.push(&quot;Test1&quot;, &quot;Test2&quot;);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2b3d59c1c87bfa515bcbc7e41672aa363cc8b874" translate="yes" xml:space="preserve">
          <source>alert(b[2][1]); // result 2</source>
          <target state="translated">경고 (b [2] [1]); // 결과 2</target>
        </trans-unit>
        <trans-unit id="2ff87117884e7b8d1c1d19a3fac27860a81b4704" translate="yes" xml:space="preserve">
          <source>also we can use unshift, look at how we can apply this:</source>
          <target state="translated">또한 우리는 unshift를 사용할 수 있습니다. 이것을 적용하는 방법을 살펴보십시오.</target>
        </trans-unit>
        <trans-unit id="beec32dbd6d8225a664e23313442660a9cac2dff" translate="yes" xml:space="preserve">
          <source>and we like append a value to this array, we can do, arr.push(6) and it will add 6 to the end of the array:</source>
          <target state="translated">우리는이 배열에 값을 추가하는 것을 좋아합니다 .arr.push (6) 할 수 있으며 배열의 끝에 6을 추가합니다 :</target>
        </trans-unit>
        <trans-unit id="34d1cc6ab3ff8f49c22ae55036d65087edbcf0d6" translate="yes" xml:space="preserve">
          <source>as other answers suggested, or you can use</source>
          <target state="translated">다른 답변이 제안했듯이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4dda2c23601a285e4462b68278c3c2b14b3a20a6" translate="yes" xml:space="preserve">
          <source>b = b.concat(a);</source>
          <target state="translated">b = b. 연결 (a);</target>
        </trans-unit>
        <trans-unit id="d6529684ef587e25c1c8ddf4001027d7581d9084" translate="yes" xml:space="preserve">
          <source>if you are certain that you don't have any zeros in the array then you can just do:</source>
          <target state="translated">배열에 0이 없다고 확신하면 다음과 같이하십시오.</target>
        </trans-unit>
        <trans-unit id="905183c1060c2ba064dda85323757c165d892165" translate="yes" xml:space="preserve">
          <source>if you want to combine 2 arrays without the duplicate you may try the code below</source>
          <target state="translated">중복없이 2 개의 배열을 결합하려면 아래 코드를 시도하십시오</target>
        </trans-unit>
        <trans-unit id="192bd3fef2959bf1547d32f240255b5d1f200028" translate="yes" xml:space="preserve">
          <source>keeping the original array immutable.</source>
          <target state="translated">원래 배열을 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a817cdab9a1ce9223158f66567bf3186c17a530d" translate="yes" xml:space="preserve">
          <source>myarray.length returns the number of strings in the array.
&lt;strong&gt;JS is zero based&lt;/strong&gt; so the next element key of the array will be the current length of the array.
EX:</source>
          <target state="translated">myarray.length는 배열의 문자열 수를 반환합니다. &lt;strong&gt;JS는 0부터 시작&lt;/strong&gt; 하므로 배열의 다음 요소 키는 배열의 현재 길이입니다. 전의:</target>
        </trans-unit>
        <trans-unit id="099a8c7f4ff6026aff47cf51ee5bf4b91aaaeee6" translate="yes" xml:space="preserve">
          <source>or an array:</source>
          <target state="translated">또는 배열 :</target>
        </trans-unit>
        <trans-unit id="77c27df20c96388ca94538e0e27183fca91db39a" translate="yes" xml:space="preserve">
          <source>then you could use:</source>
          <target state="translated">다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="605e44fe69995ba405df55608fa5fc44c2cac509" translate="yes" xml:space="preserve">
          <source>var a = [
      [1, 2],
      [3, 4] ];</source>
          <target state="translated">var a = [[1, 2], [3, 4]];</target>
        </trans-unit>
        <trans-unit id="5e5566281b6a24e423ccb0457ceacea7d6364790" translate="yes" xml:space="preserve">
          <source>var b = [
      [&quot;a&quot;, &quot;b&quot;],
      [&quot;c&quot;, &quot;d&quot;] ];</source>
          <target state="translated">var b = [[ &quot;a&quot;, &quot;b&quot;], [ &quot;c&quot;, &quot;d&quot;]];</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
