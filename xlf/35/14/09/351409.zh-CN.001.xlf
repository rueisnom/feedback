<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/351409">
    <body>
      <group id="351409">
        <trans-unit id="74c70799bd61bc94b0d03de7b0b944a131542e30" translate="yes" xml:space="preserve">
          <source>2016 update: with &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;spread&lt;/a&gt;, you don't need that &lt;code&gt;apply&lt;/code&gt; anymore, like:</source>
          <target state="translated">2016年更新：随着&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;传播&lt;/a&gt; ，您不再需要该 &lt;code&gt;apply&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="1d83028d18cf607ed5d747020faa9a4a2e885ab0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://es5.github.com/&quot;&gt;Annotated ES5&lt;/a&gt; has more info on exactly what &lt;a href=&quot;http://es5.github.com/#x15.4.4.7&quot;&gt;push&lt;/a&gt; and &lt;a href=&quot;http://es5.github.com/#x15.3.4.3&quot;&gt;apply&lt;/a&gt; do.</source>
          <target state="translated">&lt;a href=&quot;http://es5.github.com/&quot;&gt;带注释的ES5&lt;/a&gt;确切地提供了有关&lt;a href=&quot;http://es5.github.com/#x15.4.4.7&quot;&gt;推送&lt;/a&gt;和&lt;a href=&quot;http://es5.github.com/#x15.3.4.3&quot;&gt;应用&lt;/a&gt;功能的更多信息。</target>
        </trans-unit>
        <trans-unit id="2bb44a838188c20b44c81f2bdaecc5e01e66abc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;concat()&lt;/code&gt;, of course, can be used with 2 dimensional arrays as well. No looping required.</source>
          <target state="translated">&lt;code&gt;concat()&lt;/code&gt; 当然也可以与二维数组一起使用。 无需循环。</target>
        </trans-unit>
        <trans-unit id="f9b9079f18da055f14d101b2761d65d4db09c45e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pop()&lt;/code&gt; removes an element from the end of an array.</source>
          <target state="translated">&lt;code&gt;pop()&lt;/code&gt; 从数组末尾删除元素。</target>
        </trans-unit>
        <trans-unit id="d21cb8498263311e50a09dec815f3dced420361c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;push()&lt;/code&gt; adds a new element to the end of an array.</source>
          <target state="translated">&lt;code&gt;push()&lt;/code&gt; 将新元素添加到数组的末尾。</target>
        </trans-unit>
        <trans-unit id="0184800f5aa18ae2701721588db78766ecadaf2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;push()&lt;/code&gt; mutates the original array.</source>
          <target state="translated">&lt;code&gt;push()&lt;/code&gt; 更改原始数组。</target>
        </trans-unit>
        <trans-unit id="d1663f78fc6da39e6eb6445dc2aa4d700aa45b94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1)&lt;/strong&gt; The &lt;code&gt;push()&lt;/code&gt; method adds one or more elements to the end of an array and returns the new length of the array.</source>
          <target state="translated">&lt;strong&gt;1）&lt;/strong&gt; &lt;code&gt;push()&lt;/code&gt; 方法将一个或多个元素添加到数组的末尾，并返回该数组的新长度。</target>
        </trans-unit>
        <trans-unit id="bf8cf955115150bad8acfd153e6fcea62501199e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2)&lt;/strong&gt; The &lt;code&gt;unshift()&lt;/code&gt; method adds one or more elements to the beginning of an array and returns the new length of the array:</source>
          <target state="translated">&lt;strong&gt;2）&lt;/strong&gt; &lt;code&gt;unshift()&lt;/code&gt; 方法将一个或多个元素添加到数组的开头，并返回数组的新长度：</target>
        </trans-unit>
        <trans-unit id="dc3b36392cdddd79ee116de8a102a589cb3389c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;3)&lt;/strong&gt; The &lt;code&gt;concat()&lt;/code&gt; method is used to merge two or more arrays. This method &lt;strong&gt;does not change&lt;/strong&gt; the existing arrays, but instead returns a new array.</source>
          <target state="translated">&lt;strong&gt;3）&lt;/strong&gt; &lt;code&gt;concat()&lt;/code&gt; 方法用于合并两个或多个数组。 此方法&lt;strong&gt;不更改&lt;/strong&gt;现有数组，而是返回一个新数组。</target>
        </trans-unit>
        <trans-unit id="ad1b1c82eb0adc4c5d995425b988513282252ccb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;4)&lt;/strong&gt; You can use the array's &lt;code&gt;.length&lt;/code&gt; property to add an element to the end of the array:</source>
          <target state="translated">&lt;strong&gt;4）&lt;/strong&gt;您可以使用数组的 &lt;code&gt;.length&lt;/code&gt; 属性将元素添加到数组的末尾：</target>
        </trans-unit>
        <trans-unit id="d7d6f99f18019a99ea8bd6234fa6c998ae965401" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;5)&lt;/strong&gt; The &lt;code&gt;splice()&lt;/code&gt; method changes the content of an array by removing existing elements and/or adding new elements:</source>
          <target state="translated">&lt;strong&gt;5）&lt;/strong&gt; &lt;code&gt;splice()&lt;/code&gt; 方法通过删除现有元素和/或添加新元素来更改数组的内容：</target>
        </trans-unit>
        <trans-unit id="90eee22713ff3661891479a39e50af975166f701" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;6)&lt;/strong&gt; You can also add a new element to an array simply by specifying a new index and assigning a value:</source>
          <target state="translated">&lt;strong&gt;6）&lt;/strong&gt;您还可以简单地通过指定新索引并分配值来向数组添加新元素：</target>
        </trans-unit>
        <trans-unit id="1c808d8b4d27cce201fd4ef95263cfd256e0dd91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Append Multiple Elements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;附加多个元素&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="afa5b338f50995ce7cff7522d8012148ac7122ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Append Single Element&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;附加单个元素&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2d71e8b2cd2e7e12e150c49473697bf691994d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Append array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;追加数组&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a466d16fc05d419d3c6ff318fa72c51874cc04bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bonus point&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;加分点&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7db0e95cb275d10cf44f58a59cb3fed7245c0833" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ES5&lt;/strong&gt;&lt;code&gt;var combinedArray = array1.concat(array2);&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;ES5&lt;/strong&gt; &lt;code&gt;var combinedArray = array1.concat(array2);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="22bbae57b0e5abb2434f6da396c178257070825a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ES6&lt;/strong&gt;&lt;code&gt;const combinedArray = [...array1, ...array2]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;ES6&lt;/strong&gt; &lt;code&gt;const combinedArray = [...array1, ...array2]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d7b092bfaca1b96da56138a240e3d0d93158681" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output:&lt;/strong&gt;
[1,2,3,4,5]</source>
          <target state="translated">&lt;strong&gt;Output:&lt;/strong&gt;
[1,2,3,4,5]</target>
        </trans-unit>
        <trans-unit id="4a611034bd4c0106ba280ff05709c3e69f8256e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;There are a couple of ways to append an array in JavaScript:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;有两种方法可以在JavaScript中追加数组：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="200627b0eb37efd54845f9a6bd7c0133da5e8d51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Update&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba35d1836976b9832ec0cdc42dd4a596f8f58f18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;usage:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;usage:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="01766c4af58adb2fe803601ef511f35452922563" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;you can do it using new javascript Es 6 feature :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;您可以使用新的javascript Es 6功能进行操作：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6cafba11a6f68a97ff5e2d3abc9efb5d8d683804" translate="yes" xml:space="preserve">
          <source>Also note that you don't have to add in order and you can actually skip values, as in</source>
          <target state="translated">另外要注意的是,你不需要按顺序添加,实际上你可以跳过值,就像在</target>
        </trans-unit>
        <trans-unit id="6a5750ad27f33bc072c7778f35273866d9a92d38" translate="yes" xml:space="preserve">
          <source>And if you want to add record &lt;code&gt;g&lt;/code&gt; to array  (&lt;code&gt;var a=[]&lt;/code&gt;) then you could use:</source>
          <target state="translated">如果要将记录 &lt;code&gt;g&lt;/code&gt; 添加到数组（ &lt;code&gt;var a=[]&lt;/code&gt; ），则可以使用：</target>
        </trans-unit>
        <trans-unit id="dc549a778e356b8f546ccd0c458e1e868f88d416" translate="yes" xml:space="preserve">
          <source>And lastly, the &lt;code&gt;concat()&lt;/code&gt; method is used to join two or more arrays. Example:</source>
          <target state="translated">最后， &lt;code&gt;concat()&lt;/code&gt; 方法用于连接两个或多个数组。 例：</target>
        </trans-unit>
        <trans-unit id="70486af3df43f1492aa723b745abd19def834e79" translate="yes" xml:space="preserve">
          <source>Append a single item</source>
          <target state="translated">附加一个单项</target>
        </trans-unit>
        <trans-unit id="ddb4797c101abba10692a73cc6f8badb0231ba84" translate="yes" xml:space="preserve">
          <source>Append a value to an array</source>
          <target state="translated">将一个值附加到数组中</target>
        </trans-unit>
        <trans-unit id="6a1ee0a1667761aec173a956b5fd8ea166b6223e" translate="yes" xml:space="preserve">
          <source>Append multiple items</source>
          <target state="translated">添加多个项目</target>
        </trans-unit>
        <trans-unit id="6176967f3b1603f395418a0d2274a660edb44ff6" translate="yes" xml:space="preserve">
          <source>Appending items on an array</source>
          <target state="translated">添加数组上的项目</target>
        </trans-unit>
        <trans-unit id="190f55fe75d7b954fb0d04fb228074ec3a9453b3" translate="yes" xml:space="preserve">
          <source>As a result of this you can use push.apply to append an array to another array like so:</source>
          <target state="translated">因此,你可以使用push.application将一个数组附加到另一个数组,就像这样。</target>
        </trans-unit>
        <trans-unit id="f3be347218fb540f9f56908c8d3e7ecf2d0d114f" translate="yes" xml:space="preserve">
          <source>Babel REPL Example</source>
          <target state="translated">Babel REPL示例</target>
        </trans-unit>
        <trans-unit id="d3769f0b46ebe27eca88811e24ed1ec3624722b4" translate="yes" xml:space="preserve">
          <source>But if you intend to add multiple elements then store the elements in a new array and concat the second array with the first array...either way you wish.</source>
          <target state="translated">但是,如果你打算添加多个元素,那么将元素存储在一个新的数组中,然后将第二个数组与第一个数组的元素对应起来..........无论你想怎么做都可以。</target>
        </trans-unit>
        <trans-unit id="fa4a7a170f7075560c98a976572cae386b13a240" translate="yes" xml:space="preserve">
          <source>E.g.</source>
          <target state="translated">E.g.</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">扩展片段</target>
        </trans-unit>
        <trans-unit id="8d4d303024db744b8b7216aa50f4835cc30c36b8" translate="yes" xml:space="preserve">
          <source>Firefox 3.6 (Mac):</source>
          <target state="translated">Firefox 3.6(Mac)。</target>
        </trans-unit>
        <trans-unit id="8e3d72aed28a4660df14afc96548c7388a6bde9d" translate="yes" xml:space="preserve">
          <source>Google Chrome 6.0 (Mac):</source>
          <target state="translated">Google Chrome 6.0 (Mac):</target>
        </trans-unit>
        <trans-unit id="e1a8b33ae7254c94fdfffb98c769170c3b11bad1" translate="yes" xml:space="preserve">
          <source>How do I append an object (such as a string or number) to an array in JavaScript?</source>
          <target state="translated">如何在JavaScript中将一个对象(如字符串或数字)附加到数组中?</target>
        </trans-unit>
        <trans-unit id="10057bd22f543b4dbd5c1172787d24325670123a" translate="yes" xml:space="preserve">
          <source>How to append something to an array</source>
          <target state="translated">如何将东西附加到数组中</target>
        </trans-unit>
        <trans-unit id="f927e79ae0671e493877c41ed46cb155cf3eff4c" translate="yes" xml:space="preserve">
          <source>However if you don't know then you can either use</source>
          <target state="translated">但是,如果你不知道的话,你可以使用</target>
        </trans-unit>
        <trans-unit id="d901859e44cc49eb5ab1aa4b3ee7c3f2a3723266" translate="yes" xml:space="preserve">
          <source>I like the &lt;code&gt;arr.push()&lt;/code&gt; syntax better, but I think I'd be better off with the &lt;code&gt;arr[arr.length]&lt;/code&gt; Version, at least in raw speed. I'd love to see the results of an IE run though.</source>
          <target state="translated">我更喜欢 &lt;code&gt;arr.push()&lt;/code&gt; 语法，但是我认为使用 &lt;code&gt;arr[arr.length]&lt;/code&gt; 版本会更好，至少在原始速度上更好。 我很乐意看到IE运行的结果。</target>
        </trans-unit>
        <trans-unit id="b36f4f7348481b6c7e3be9722ad1f717c1b18a51" translate="yes" xml:space="preserve">
          <source>I think it's worth mentioning that push can be called with multiple arguments, which will be appended to the array in order. For example:</source>
          <target state="translated">值得一提的是,我觉得值得一提的是,push可以用多个参数来调用,这些参数会被依次追加到数组中。比如说。</target>
        </trans-unit>
        <trans-unit id="d770727a0640271a286b2157bcc72efc78776f95" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;arr&lt;/code&gt; is an array, and &lt;code&gt;val&lt;/code&gt; is the value you wish to add use:</source>
          <target state="translated">如果 &lt;code&gt;arr&lt;/code&gt; 是一个数组，而 &lt;code&gt;val&lt;/code&gt; 是您希望添加的值，请使用：</target>
        </trans-unit>
        <trans-unit id="f171afda4f240dac629d4d3c2a38dc08929354f1" translate="yes" xml:space="preserve">
          <source>If you are using the ES6 you can use &lt;a href=&quot;https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;spread&lt;/a&gt; operator to do it.</source>
          <target state="translated">如果您使用的是ES6，则可以使用&lt;a href=&quot;https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;传播&lt;/a&gt;算子进行操作。</target>
        </trans-unit>
        <trans-unit id="190f9c5cee5b8540c080ac77914564d001fc9fa8" translate="yes" xml:space="preserve">
          <source>If you have array you can use concat()
e.g. &lt;code&gt;Array1.concat(Array2)&lt;/code&gt;</source>
          <target state="translated">如果您有数组，则可以使用concat（）例如 &lt;code&gt;Array1.concat(Array2)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e602ad52ece3da626ca29b6f0ece424579306099" translate="yes" xml:space="preserve">
          <source>If you have just one element to add you can also try length menthod
e.g. &lt;code&gt;array[aray.length] = 'test';&lt;/code&gt;</source>
          <target state="translated">如果仅添加一个元素，则还可以尝试长度方法，例如 &lt;code&gt;array[aray.length] = 'test';&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a88d2cb64601945879598f27067d08c158478703" translate="yes" xml:space="preserve">
          <source>If you know the highest index (such as stored in a variable &quot;i&quot;) then you can do</source>
          <target state="translated">如果你知道最高的索引(例如存储在变量 &quot;i &quot;中),那么你可以做如下操作</target>
        </trans-unit>
        <trans-unit id="dc9dfa3ef880f925c45e3288483b29826bffaecb" translate="yes" xml:space="preserve">
          <source>If you want to add the items of one array to another array, you can use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt;&lt;code&gt;firstArray.concat(secondArray)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果要将一个数组的项目添加到另一个数组，则可以使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt; &lt;code&gt;firstArray.concat(secondArray)&lt;/code&gt; &lt;/a&gt; ：</target>
        </trans-unit>
        <trans-unit id="b072e1deb75209387c0fa1476d06680eaf3add63" translate="yes" xml:space="preserve">
          <source>If you want to append a single value into an array, simply use the push method. It will add a new element at the end of the array.</source>
          <target state="translated">如果你想在数组中附加一个值,只需使用推送方法。它将在数组的末尾添加一个新元素。</target>
        </trans-unit>
        <trans-unit id="201cf84767edb701c887d8b45d934d6575f85108" translate="yes" xml:space="preserve">
          <source>If you want to append two arrays -</source>
          <target state="translated">如果你想附加两个数组 ----</target>
        </trans-unit>
        <trans-unit id="c6805bb7f007a7ba9f1f263b28f3f2f087f15411" translate="yes" xml:space="preserve">
          <source>If you'd like to create &lt;em&gt;another&lt;/em&gt; variable to store all the items from both array, you can do this:</source>
          <target state="translated">如果您想创建&lt;em&gt;另一个&lt;/em&gt;变量来存储两个数组中的所有项目，则可以执行以下操作：</target>
        </trans-unit>
        <trans-unit id="23b97a6f87664a660504fae7e6049a0acc863709" translate="yes" xml:space="preserve">
          <source>If you're only appending a single variable, then &lt;code&gt;push()&lt;/code&gt; works just fine. If you need to append another array, use &lt;code&gt;concat()&lt;/code&gt;:</source>
          <target state="translated">如果只附加一个变量，则 &lt;code&gt;push()&lt;/code&gt; 可以正常工作。 如果需要附加另一个数组，请使用 &lt;code&gt;concat()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0703ce893f42c474b260c56db553085cc9ae1504" translate="yes" xml:space="preserve">
          <source>In which case the values in between will have a value of undefined.</source>
          <target state="translated">在这种情况下,中间的值将有一个未定义的值。</target>
        </trans-unit>
        <trans-unit id="2b6e1ef62b0d2b349d8dde1517ca7516a29514e4" translate="yes" xml:space="preserve">
          <source>It also supports appending multiple values at once just like &lt;code&gt;push&lt;/code&gt;.</source>
          <target state="translated">它也支持像 &lt;code&gt;push&lt;/code&gt; 一样一次附加多个值。</target>
        </trans-unit>
        <trans-unit id="debe2052ae191aae93d3cda8b33c75c70e0c2e9f" translate="yes" xml:space="preserve">
          <source>It is therefore a good practice when looping through a JavaScript to verify that a value actually exists at that point.</source>
          <target state="translated">因此,在循环浏览一个JavaScript时,验证一个值是否在该点上实际存在是一个很好的做法。</target>
        </trans-unit>
        <trans-unit id="c39178dd5cef6b3a7dbcec729511acb02874ce5d" translate="yes" xml:space="preserve">
          <source>It will append &lt;code&gt;array2&lt;/code&gt; to &lt;code&gt;array1&lt;/code&gt;. Now &lt;code&gt;array1&lt;/code&gt; contains &lt;code&gt;[11, 32, 75, 99, 67, 34]&lt;/code&gt;.
This code is much simpler than writing &lt;code&gt;for&lt;/code&gt; loops to copy each and every items in the array.</source>
          <target state="translated">它将 &lt;code&gt;array2&lt;/code&gt; 追加到 &lt;code&gt;array1&lt;/code&gt; 。 现在 &lt;code&gt;array1&lt;/code&gt; 包含 &lt;code&gt;[11, 32, 75, 99, 67, 34]&lt;/code&gt; 11，32，75，99，67，34 ] 。 与编写循环以复制数组中的每个项目相比，此代码要简单得多。</target>
        </trans-unit>
        <trans-unit id="91b2629e02005956d7e1ad7644552f1b497fbc21" translate="yes" xml:space="preserve">
          <source>Javascript with &lt;strong&gt;ECMAScript 5&lt;/strong&gt; standard which is supported by most browsers now, you can use &lt;code&gt;apply()&lt;/code&gt; to append &lt;code&gt;array1&lt;/code&gt; to &lt;code&gt;array2&lt;/code&gt;.</source>
          <target state="translated">现在大多数浏览器都支持&lt;strong&gt;ECMAScript 5&lt;/strong&gt;标准的Javascript，您可以使用 &lt;code&gt;apply()&lt;/code&gt; 将 &lt;code&gt;array1&lt;/code&gt; 追加到 &lt;code&gt;array2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8edd708eca068488506556207ad44fe14c4b9ea" translate="yes" xml:space="preserve">
          <source>Javascript with &lt;strong&gt;ECMAScript 6&lt;/strong&gt; standard which is supported by Chrome and FF and IE Edge, you can use the &lt;code&gt;spread&lt;/code&gt; operator:</source>
          <target state="translated">Chrome，FF和IE Edge支持具有&lt;strong&gt;ECMAScript 6&lt;/strong&gt;标准的Javascript，您可以使用 &lt;code&gt;spread&lt;/code&gt; 运算符：</target>
        </trans-unit>
        <trans-unit id="37c78df54cef44cc89e8309b5f9d5c58790157e3" translate="yes" xml:space="preserve">
          <source>Just an addition to this answer if you want to append any value to the start of an array that means to the first index then you can use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift&quot;&gt;&lt;code&gt;Array.prototype.unshift&lt;/code&gt;&lt;/a&gt; for this purpose.</source>
          <target state="translated">如果要在数组的开头附加任何值（这意味着第一个索引），则可以添加一个答案，然后可以使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift&quot;&gt; &lt;code&gt;Array.prototype.unshift&lt;/code&gt; &lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="6277c1b6d0ef2cf073378efbb0724373f6e4e38c" translate="yes" xml:space="preserve">
          <source>Just want to add a snippet for non-destructive addition of an element.</source>
          <target state="translated">只是想为一个元素的无损加法添加一个片段。</target>
        </trans-unit>
        <trans-unit id="2c030b5f8bae31cbcaa767d5e7f68f24b745082f" translate="yes" xml:space="preserve">
          <source>Large arrays: &lt;strong&gt;&lt;code&gt;arr.push(b)&lt;/code&gt; is faster&lt;/strong&gt; (500ms vs. 900ms)</source>
          <target state="translated">大型数组： &lt;strong&gt; &lt;code&gt;arr.push(b)&lt;/code&gt; 更快&lt;/strong&gt; （500ms与900ms）</target>
        </trans-unit>
        <trans-unit id="25c5f00673d79d9655812dad2207c0d817d32ec7" translate="yes" xml:space="preserve">
          <source>Large arrays: &lt;strong&gt;&lt;code&gt;arr[arr.length] = b&lt;/code&gt; is faster&lt;/strong&gt; (160ms vs. 185ms)</source>
          <target state="translated">大数组： &lt;strong&gt; &lt;code&gt;arr[arr.length] = b&lt;/code&gt; 更快&lt;/strong&gt; （160ms与185ms）</target>
        </trans-unit>
        <trans-unit id="64a904307fdf6ff4bd0fb499580ee7448d9e90ef" translate="yes" xml:space="preserve">
          <source>Large arrays: &lt;strong&gt;No significant difference&lt;/strong&gt; (160ms)</source>
          <target state="translated">大阵列： &lt;strong&gt;无明显差异&lt;/strong&gt; （160毫秒）</target>
        </trans-unit>
        <trans-unit id="9d94d817a6de7fffb375a055ec7501fd061d639b" translate="yes" xml:space="preserve">
          <source>Let the array length property do the work:</source>
          <target state="translated">让数组长度属性来完成工作。</target>
        </trans-unit>
        <trans-unit id="03fc0d80dd8719a4468d990403052a7427225631" translate="yes" xml:space="preserve">
          <source>Lots of great info &lt;a href=&quot;http://www.javascriptkit.com/jsref/&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.javascriptkit.com/jsref/&quot;&gt;这里有&lt;/a&gt;很多很棒的信息。</target>
        </trans-unit>
        <trans-unit id="7d65bdea080d17c9143919efb72f1e2f914941f0" translate="yes" xml:space="preserve">
          <source>My benchmarking loops:</source>
          <target state="translated">我的标杆回路。</target>
        </trans-unit>
        <trans-unit id="ffee3e0f6b5aac9ff08a53405cafd5a4a810a3ce" translate="yes" xml:space="preserve">
          <source>Note that the array is zero based so .length return the highest index plus one.</source>
          <target state="translated">注意,数组是基于0的,所以.length返回最高索引加1。</target>
        </trans-unit>
        <trans-unit id="11153ec9b140820b28e8a9d431c75c009ecc2aeb" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;concat()&lt;/code&gt; does not actually add an item to the array, but creates a new array, which you can assign to another variable, or reassign to the original array (declaring it as &lt;code&gt;let&lt;/code&gt;, as you cannot reassign a &lt;code&gt;const&lt;/code&gt;):</source>
          <target state="translated">注意， &lt;code&gt;concat()&lt;/code&gt; 实际上并没有向数组添加项目，而是创建了一个新数组，您可以将其分配给另一个变量，或者重新分配给原始数组（将其声明为 &lt;code&gt;let&lt;/code&gt; ，因为您不能重新分配 &lt;code&gt;const&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="351658ffeabb2007b23cc99c7925c8ec4baab755" translate="yes" xml:space="preserve">
          <source>Now, you can take advantage of ES6 syntax and just do:</source>
          <target state="translated">现在,你可以利用ES6的语法优势,直接做。</target>
        </trans-unit>
        <trans-unit id="ffbc9fc8c808dd33f0635eac3aaf0717126ac499" translate="yes" xml:space="preserve">
          <source>Of course make sure in this case that you don't use as the condition myArray[i] (as some people over the internet suggest based on the end that as soon as i is greater then the highest index it will return undefined which evaluates to false)</source>
          <target state="translated">当然,在这种情况下,请确保不要使用myArray[i]作为条件(正如互联网上有些人建议的那样,只要i大于最高指数,就会返回undefined,会被评价为false)。</target>
        </trans-unit>
        <trans-unit id="c39924f3eaa992b84faca9f939e21902b1315cbd" translate="yes" xml:space="preserve">
          <source>Or just:</source>
          <target state="translated">或者只是。</target>
        </trans-unit>
        <trans-unit id="04f8c1ef2fd12ff7b7955cf8bd6bd4522dfe8741" translate="yes" xml:space="preserve">
          <source>Originally &lt;a href=&quot;https://flaviocopes.com/how-to-append-item-to-array/&quot;&gt;posted at&lt;/a&gt;</source>
          <target state="translated">最初&lt;a href=&quot;https://flaviocopes.com/how-to-append-item-to-array/&quot;&gt;发布于&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="f0170c0c443f3b0c1cc7ca04b7a1056112ca14e5" translate="yes" xml:space="preserve">
          <source>Remember that as described previously this method does not mutate the original array, but it  returns a new array.</source>
          <target state="translated">请记住,正如前面所描述的那样,这个方法不会对原始数组进行突变,但会返回一个新的数组。</target>
        </trans-unit>
        <trans-unit id="945cf473843a91f0d979857974ed5f4c199f8198" translate="yes" xml:space="preserve">
          <source>Safari 5.0 (Mac):</source>
          <target state="translated">Safari 5.0(Mac)。</target>
        </trans-unit>
        <trans-unit id="24f7bd8cc1bf886f2aa4d0b8ceef517a0f9ca597" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;Array.prototype.push&lt;/a&gt; adds one or more elements to the end of an array and &lt;em&gt;returns the new length of the array&lt;/em&gt;, sometimes we want just to get the new up-to-date array so we can do something like so:</source>
          <target state="translated">由于&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;Array.prototype.push&lt;/a&gt;将一个或多个元素添加到数组的末尾并&lt;em&gt;返回该&lt;/em&gt;数组&lt;em&gt;的新长度，因此&lt;/em&gt;有时我们只想获取新的最新数组，因此可以执行以下操作：</target>
        </trans-unit>
        <trans-unit id="be25aa26c59e69e2b6f3403ff2ecc84c12c13093" translate="yes" xml:space="preserve">
          <source>Small arrays: &lt;strong&gt;&lt;code&gt;arr[arr.length] = b&lt;/code&gt; is faster&lt;/strong&gt; (300ms vs. 800ms)</source>
          <target state="translated">小数组： &lt;strong&gt; &lt;code&gt;arr[arr.length] = b&lt;/code&gt; 更快&lt;/strong&gt; （300ms与800ms）</target>
        </trans-unit>
        <trans-unit id="4ac6990e6339f2cc4e882ae1a040bf8be5c5e6a1" translate="yes" xml:space="preserve">
          <source>Small arrays: &lt;strong&gt;&lt;code&gt;arr[arr.length] = b&lt;/code&gt; is faster&lt;/strong&gt; (90ms vs. 115ms)</source>
          <target state="translated">小数组： &lt;strong&gt; &lt;code&gt;arr[arr.length] = b&lt;/code&gt; 更快&lt;/strong&gt; （90ms与115ms）</target>
        </trans-unit>
        <trans-unit id="f483b73e9a525ef1a1b8b1762b07ac10c7e0f8ec" translate="yes" xml:space="preserve">
          <source>Small arrays: &lt;strong&gt;No significant difference&lt;/strong&gt; (and Chrome is FAST! Only ~38ms !!)</source>
          <target state="translated">小阵列： &lt;strong&gt;无明显差异&lt;/strong&gt; （Chrome速度很快！只有〜38ms！）</target>
        </trans-unit>
        <trans-unit id="9183022157176d5593eef62227016ba9855a1e1b" translate="yes" xml:space="preserve">
          <source>Some quick benchmarking (each test = 500k appended elements and the results are averages of multiple runs) showed the following:</source>
          <target state="translated">一些快速基准测试(每个测试=500k附加元素,结果是多次运行的平均数)显示如下:</target>
        </trans-unit>
        <trans-unit id="0bf5f8af6d204b38f88a471faee11aca98b7101b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;push()&lt;/code&gt; method adds new items to the end of an array, and returns the new length. Example:</source>
          <target state="translated">&lt;code&gt;push()&lt;/code&gt; 方法将新项目添加到数组的末尾，并返回新的长度。 例：</target>
        </trans-unit>
        <trans-unit id="5cbdbb8af757bd7451265feee9a2f1bb0a8c23b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;spread&lt;/code&gt; operator will replace &lt;code&gt;array2.push(...array1);&lt;/code&gt; with &lt;code&gt;array2.push(3, 4, 5);&lt;/code&gt; when the browser is thinking the logic.</source>
          <target state="translated">&lt;code&gt;spread&lt;/code&gt; 运算符将替换 &lt;code&gt;array2.push(...array1);&lt;/code&gt; 与 &lt;code&gt;array2.push(3, 4, 5);&lt;/code&gt; 当浏览器正在思考逻辑时。</target>
        </trans-unit>
        <trans-unit id="dd4817d40955122fa0506956f43d3d4995ed5c0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unshift()&lt;/code&gt; method adds new items to the beginning of an array, and returns the new length. Example:</source>
          <target state="translated">&lt;code&gt;unshift()&lt;/code&gt; 方法将新项目添加到数组的开头，并返回新的长度。 例：</target>
        </trans-unit>
        <trans-unit id="7032e55b1df7e8187191f368613a4f09d3e08c8d" translate="yes" xml:space="preserve">
          <source>The concat does not affect &lt;code&gt;ar1&lt;/code&gt; and &lt;code&gt;ar2&lt;/code&gt; unless reassigned, for example:</source>
          <target state="translated">除非重新分配，否则concat不会影响 &lt;code&gt;ar1&lt;/code&gt; 和 &lt;code&gt;ar2&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="70b242b9c87bc038834b90cd7838eb783f4af922" translate="yes" xml:space="preserve">
          <source>The exact answer to your question is already answered, but let's look at some other ways to add items to an array.</source>
          <target state="translated">你的问题的确切答案已经回答了,但我们再来看看其他一些将项目添加到数组中的方法。</target>
        </trans-unit>
        <trans-unit id="4ed35a08a496ed62e0565705f82826ef90266625" translate="yes" xml:space="preserve">
          <source>The spread operator (&lt;code&gt;...&lt;/code&gt;) is to spread out all items from a collection.</source>
          <target state="translated">散布运算符（ &lt;code&gt;...&lt;/code&gt; ）散布集合中的所有项目。</target>
        </trans-unit>
        <trans-unit id="f2c55ed05e72c4fc556c433df7fe2f5347923ed3" translate="yes" xml:space="preserve">
          <source>They are main functions to add or append new values to the arrays.</source>
          <target state="translated">它们是向数组中添加或附加新值的主要函数。</target>
        </trans-unit>
        <trans-unit id="12661e1ee3624a3e030fdcaf02a2ebb5f6487ee7" translate="yes" xml:space="preserve">
          <source>This adds the contents of &lt;code&gt;arr2&lt;/code&gt; onto the end of &lt;code&gt;arr&lt;/code&gt;.</source>
          <target state="translated">这会将 &lt;code&gt;arr2&lt;/code&gt; 的内容添加到 &lt;code&gt;arr&lt;/code&gt; 的末尾。</target>
        </trans-unit>
        <trans-unit id="c4ade2ad16e592efdd422482c19907ce1c504f0f" translate="yes" xml:space="preserve">
          <source>This can be done by something like the following:</source>
          <target state="translated">这可以通过下面的方法来实现。</target>
        </trans-unit>
        <trans-unit id="5c396a1b6dd77eee038725a47af1d3d1548c64c4" translate="yes" xml:space="preserve">
          <source>To append a multiple item to an array, you can use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;&lt;code&gt;push()&lt;/code&gt;&lt;/a&gt; by calling it with multiple arguments:</source>
          <target state="translated">要将多个项目追加到数组，可以使用带有多个参数的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt; &lt;code&gt;push()&lt;/code&gt; &lt;/a&gt;来使用它：</target>
        </trans-unit>
        <trans-unit id="027568689dda7b38138f9abda14e3397a302d6cf" translate="yes" xml:space="preserve">
          <source>To append a single item to an array, use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;&lt;code&gt;push()&lt;/code&gt;&lt;/a&gt; method provided by the Array object:</source>
          <target state="translated">要将单个项目附加到数组，请使用Array对象提供的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt; &lt;code&gt;push()&lt;/code&gt; &lt;/a&gt;方法：</target>
        </trans-unit>
        <trans-unit id="e8ccd3919aae33c3e22e0ed7c772b6ff9aa769f9" translate="yes" xml:space="preserve">
          <source>To append an object (such as a string or number) to an array use -</source>
          <target state="translated">要将对象(如字符串或数字)附加到数组中,请使用 -</target>
        </trans-unit>
        <trans-unit id="429da1d3fab336292296651eba35c7bf1a59a1e1" translate="yes" xml:space="preserve">
          <source>To create a new array instead, use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt;&lt;code&gt;concat()&lt;/code&gt;&lt;/a&gt; Array method:</source>
          <target state="translated">要创建一个新数组，请使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt; &lt;code&gt;concat()&lt;/code&gt; &lt;/a&gt; Array方法：</target>
        </trans-unit>
        <trans-unit id="f937a745d87fe1df830dd233f8d662277498bd59" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt;&lt;code&gt;concat&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">使用&lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt; &lt;code&gt;concat&lt;/code&gt; &lt;/a&gt; ：</target>
        </trans-unit>
        <trans-unit id="414e37f66598320654ee041f7a06156547887bd5" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;&lt;code&gt;Array.prototype.push&lt;/code&gt;&lt;/a&gt; method to append values to an array:</source>
          <target state="translated">使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt; &lt;code&gt;Array.prototype.push&lt;/code&gt; &lt;/a&gt;方法将值追加到数组：</target>
        </trans-unit>
        <trans-unit id="02adbeec5afea9f552940accc281f98cfa179c38" translate="yes" xml:space="preserve">
          <source>We don't have append function for Array in javascript, but we have &lt;strong&gt;push&lt;/strong&gt; and &lt;strong&gt;unshift&lt;/strong&gt;, imagine you have the array below:</source>
          <target state="translated">我们在javascript中没有Array的append函数，但是我们有&lt;strong&gt;push&lt;/strong&gt;和&lt;strong&gt;unshift&lt;/strong&gt; ，假设您有以下数组：</target>
        </trans-unit>
        <trans-unit id="3a38b1721253ee185478c1b00ab0b5e84d1a742d" translate="yes" xml:space="preserve">
          <source>With the new ES6 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;spread operator&lt;/a&gt;, joining two arrays using &lt;code&gt;push&lt;/code&gt; becomes even easier:</source>
          <target state="translated">使用新的ES6 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;扩展运算符&lt;/a&gt; ，使用 &lt;code&gt;push&lt;/code&gt; 连接两个阵列变得更加容易：</target>
        </trans-unit>
        <trans-unit id="94bd2702a9423b3fe2147897213bf8d6ee5d4bd8" translate="yes" xml:space="preserve">
          <source>You .push() that value in. 
&lt;strong&gt;Example:&lt;/strong&gt; array.push(value);</source>
          <target state="translated">您将.push（）输入该值。 &lt;strong&gt;例如：&lt;/strong&gt; array.push（value）;</target>
        </trans-unit>
        <trans-unit id="116ba7083fcccbcff985af965e8aef17fde4ab77" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt;&lt;code&gt;concat()&lt;/code&gt;&lt;/a&gt; method you saw before, passing a list of items separated by a comma:</source>
          <target state="translated">您还可以使用之前看到的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt; &lt;code&gt;concat()&lt;/code&gt; &lt;/a&gt;方法，传递以逗号分隔的项目列表：</target>
        </trans-unit>
        <trans-unit id="fff7e720da32bd4b43b186739c3754bb6907b89c" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;push&lt;/code&gt; and &lt;code&gt;apply&lt;/code&gt; function to append two arrays.</source>
          <target state="translated">您可以使用 &lt;code&gt;push&lt;/code&gt; 和 &lt;code&gt;apply&lt;/code&gt; 函数来追加两个数组。</target>
        </trans-unit>
        <trans-unit id="4593be1a3e5b846fa497d1651e7e8cc40f4e9c8b" translate="yes" xml:space="preserve">
          <source>You can use push method.</source>
          <target state="translated">你可以使用推送的方法。</target>
        </trans-unit>
        <trans-unit id="d36592fd4e1a12aac8e77a6bc7852b5dedf6cb91" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;push()&lt;/code&gt; function to append more than one value to an array in a single call:</source>
          <target state="translated">您可以使用 &lt;code&gt;push()&lt;/code&gt; 函数在单个调用中将多个值附加到数组中：</target>
        </trans-unit>
        <trans-unit id="6ac227c5b45d2b2c7403c76c7f404ea458a866f5" translate="yes" xml:space="preserve">
          <source>You can use the push() if you want to add values
e.g. &lt;code&gt;arr.push(&quot;Test1&quot;, &quot;Test2&quot;);&lt;/code&gt;</source>
          <target state="translated">如果要添加值，则可以使用push（），例如 &lt;code&gt;arr.push(&quot;Test1&quot;, &quot;Test2&quot;);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2b3d59c1c87bfa515bcbc7e41672aa363cc8b874" translate="yes" xml:space="preserve">
          <source>alert(b[2][1]); // result 2</source>
          <target state="translated">alert(b[2][1]);/结果2</target>
        </trans-unit>
        <trans-unit id="2ff87117884e7b8d1c1d19a3fac27860a81b4704" translate="yes" xml:space="preserve">
          <source>also we can use unshift, look at how we can apply this:</source>
          <target state="translated">我们也可以使用unshift,看看我们如何应用。</target>
        </trans-unit>
        <trans-unit id="beec32dbd6d8225a664e23313442660a9cac2dff" translate="yes" xml:space="preserve">
          <source>and we like append a value to this array, we can do, arr.push(6) and it will add 6 to the end of the array:</source>
          <target state="translated">而我们喜欢在这个数组中附加一个值,我们可以这样做,arr.push(6),它将在数组的末尾添加6。</target>
        </trans-unit>
        <trans-unit id="34d1cc6ab3ff8f49c22ae55036d65087edbcf0d6" translate="yes" xml:space="preserve">
          <source>as other answers suggested, or you can use</source>
          <target state="translated">如其他答案所建议的,或者你可以用</target>
        </trans-unit>
        <trans-unit id="4dda2c23601a285e4462b68278c3c2b14b3a20a6" translate="yes" xml:space="preserve">
          <source>b = b.concat(a);</source>
          <target state="translated">b=b.concat(a);</target>
        </trans-unit>
        <trans-unit id="d6529684ef587e25c1c8ddf4001027d7581d9084" translate="yes" xml:space="preserve">
          <source>if you are certain that you don't have any zeros in the array then you can just do:</source>
          <target state="translated">如果你确定数组中没有零,那么你可以直接做。</target>
        </trans-unit>
        <trans-unit id="905183c1060c2ba064dda85323757c165d892165" translate="yes" xml:space="preserve">
          <source>if you want to combine 2 arrays without the duplicate you may try the code below</source>
          <target state="translated">如果你想合并两个数组而不重复,你可以试试下面的代码。</target>
        </trans-unit>
        <trans-unit id="192bd3fef2959bf1547d32f240255b5d1f200028" translate="yes" xml:space="preserve">
          <source>keeping the original array immutable.</source>
          <target state="translated">保持原始数组的不变性。</target>
        </trans-unit>
        <trans-unit id="a817cdab9a1ce9223158f66567bf3186c17a530d" translate="yes" xml:space="preserve">
          <source>myarray.length returns the number of strings in the array.
&lt;strong&gt;JS is zero based&lt;/strong&gt; so the next element key of the array will be the current length of the array.
EX:</source>
          <target state="translated">myarray.length返回数组中的字符串数。 &lt;strong&gt;JS是从零开始的，&lt;/strong&gt;因此数组的下一个元素键将是数组的当前长度。 例如：</target>
        </trans-unit>
        <trans-unit id="099a8c7f4ff6026aff47cf51ee5bf4b91aaaeee6" translate="yes" xml:space="preserve">
          <source>or an array:</source>
          <target state="translated">或数组。</target>
        </trans-unit>
        <trans-unit id="77c27df20c96388ca94538e0e27183fca91db39a" translate="yes" xml:space="preserve">
          <source>then you could use:</source>
          <target state="translated">那么你可以使用。</target>
        </trans-unit>
        <trans-unit id="605e44fe69995ba405df55608fa5fc44c2cac509" translate="yes" xml:space="preserve">
          <source>var a = [
      [1, 2],
      [3, 4] ];</source>
          <target state="translated">var a=[[[1,2],[3,4]]];</target>
        </trans-unit>
        <trans-unit id="5e5566281b6a24e423ccb0457ceacea7d6364790" translate="yes" xml:space="preserve">
          <source>var b = [
      [&quot;a&quot;, &quot;b&quot;],
      [&quot;c&quot;, &quot;d&quot;] ];</source>
          <target state="translated">var b=[[['a','b'],['c','d']]];</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
