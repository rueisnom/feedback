<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/3508605">
    <body>
      <group id="3508605">
        <trans-unit id="2d5c543dffb8b4af6ad29c6394f1faed84636ad0" translate="yes" xml:space="preserve">
          <source>/&lt;strong&gt;* Code for DEMO *&lt;/strong&gt;/</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;/ &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;*デモのコード*&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; /&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="50c91dada61918734a2651e86d06c5e4654b4d28" translate="yes" xml:space="preserve">
          <source>/&lt;strong&gt;* Code for height: auto; transitioning *&lt;/strong&gt;/</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;/ &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;*高さのコード：自動; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;移行*&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; /&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d8d215fcef4f31883358ed412b241764aaf5c9fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://jsfiddle.net/catharsis/n5XfG/17/&quot;&gt;http://jsfiddle.net/catharsis/n5XfG/17/&lt;/a&gt; (riffed off stephband's above jsFiddle)</source>
          <target state="translated">&lt;a href=&quot;http://jsfiddle.net/catharsis/n5XfG/17/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://jsfiddle.net/catharsis/n5XfG/17/（jsFiddle&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の上のstephbandからリフされた）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="13042258ab673f4477366cc5778d59932e7357ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;padding-bottom:100%&lt;/code&gt; 'hack' where percentages are defined in terms of the current width of the element. &lt;a href=&quot;https://spin.atomicobject.com/2015/07/14/css-responsive-square/&quot;&gt;More info on this technique.&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;padding-bottom:100%&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 'hack'パーセンテージは要素の現在の幅で定義されます。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://spin.atomicobject.com/2015/07/14/css-responsive-square/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このテクニックの詳細。&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f47881f9f0843f733bbd73575694287e59395487" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://jsfiddle.net/ajo89vmg/&quot;&gt;Solution as Fiddle&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://jsfiddle.net/ajo89vmg/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィドルとしてのソリューション&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae113ad128790ea722d1774303e2ef7223260243" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Drop this JS file in your page - it all Just Works&amp;trade;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このJSファイルをページにドロップします-それはすべてJust Works&amp;trade;です&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3610005019ebd19d7bef5e295e7aed13636ce712" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Fiddles!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Fiddles!&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e5037cfb1ac6ff6d47eadad4dbee40da675fc2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Flexbox Solution&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フレックスボックスソリューション&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5965a5dc3e4e2acd4d4bad62fd5cbdd6fe2a0764" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;I think I came up with a really solid solution&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は本当に確かな解決策を考え出したと思います&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c7f6f97b11f3a6ecd4faea8b76c0520b36bca505" translate="yes" xml:space="preserve">
          <source>A visual workaround to animating height using CSS3 transitions is to animate the padding instead.</source>
          <target state="translated">CSS3 トランジションを使用して高さをアニメーションさせる場合の視覚的な回避策は、代わりにパディングをアニメーションさせることです。</target>
        </trans-unit>
        <trans-unit id="e64d65eb302cca08c7283b316086d0a2cc6fc598" translate="yes" xml:space="preserve">
          <source>As I post this there are over 30 answers already, but I feel my answer improves on the already &lt;a href=&quot;https://stackoverflow.com/a/8331169/7016732&quot;&gt;accepted answer&lt;/a&gt; by jake.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを投稿すると、すでに30を超える回答がありますが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、jakeによって&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;既に&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/8331169/7016732&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;受け入れられている回答&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;よりも私の回答が向上しているように感じ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24545f76929816f91f9714442beff969dfbd89bf" translate="yes" xml:space="preserve">
          <source>As such, for a &lt;code&gt;height: 0&lt;/code&gt; (effectively fully collapsed) element, its &quot;normal&quot; or &quot;full&quot; height is still readily available through its &lt;code&gt;scrollHeight&lt;/code&gt; value (invariably a &lt;em&gt;pixel&lt;/em&gt; length).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのため、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;height: 0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（事実上完全に折りたたまれた）要素の場合、その「通常」または「完全」な高さは、その&lt;/font&gt;&lt;/font&gt; &lt;code&gt;scrollHeight&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値（常に&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ピクセル&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;長）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を通じて容易に利用できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d1dfe5929a1d66db1701815a02f96ae306fd5ed" translate="yes" xml:space="preserve">
          <source>As you can see in the animation, the resulting transition is continuous, but it is not differentiable -- at the moment when the minimum height is equal to the full height adjusted by the bottom margin, there is a sudden change in speed. This is very noticeable in the animation because it uses a linear timing function for both transitions, and because the whole transition is very slow. In the actual case (my demo at the top), the transition only takes 300ms, and the bottom margin transition is not linear. I've played around with a lot of different timing functions for both transitions, and the ones I ended up with felt like they worked best for the widest variety of cases.</source>
          <target state="translated">アニメーションを見ればわかるように、結果としての遷移は連続していますが、微分可能ではありません--最小の高さが下の余白で調整された全高と同じになった瞬間に、急激な速度の変化があります。これは、アニメーションでは両方の遷移に線形のタイミング関数を使用しているため、全体の遷移が非常に遅くなっているため、非常に顕著です。実際のケース(一番上の私のデモ)では、トランジションは300msしかかかっておらず、下の余白のトランジションはリニアではありません。私は両方のトランジションのために多くの異なるタイミング関数の周りで遊んできましたが、私が最終的に私が感じたものは、彼らが最も多様なケースのために最高の仕事をしたように感じました。</target>
        </trans-unit>
        <trans-unit id="194e13da720a1f025685e5d677eba8a1aff3860a" translate="yes" xml:space="preserve">
          <source>CSS</source>
          <target state="translated">CSS</target>
        </trans-unit>
        <trans-unit id="2a9aeb746a06e0844284ee2d4008adbf2fd73b36" translate="yes" xml:space="preserve">
          <source>CSS:</source>
          <target state="translated">CSS:</target>
        </trans-unit>
        <trans-unit id="afc2b6eb93654fed24d8cce3141c211e0dfdd6a4" translate="yes" xml:space="preserve">
          <source>Cons:</source>
          <target state="translated">Cons:</target>
        </trans-unit>
        <trans-unit id="e52c854d5631eec7468ba4727b4c77eb745f2965" translate="yes" xml:space="preserve">
          <source>Demo</source>
          <target state="translated">Demo</target>
        </trans-unit>
        <trans-unit id="46bdda757907e7bf595ef61dc9ec01e5685a88e3" translate="yes" xml:space="preserve">
          <source>Demonstrating transitioning &lt;code&gt;height: auto&lt;/code&gt; when adding children</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;遷移する&lt;/font&gt;&lt;/font&gt; &lt;code&gt;height: auto&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デモ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;子を追加するときに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自動&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5fbf48d59266d71c0218a07c614da3cc46c6f41" translate="yes" xml:space="preserve">
          <source>Demonstrating transitioning from &lt;code&gt;height: auto&lt;/code&gt; to &lt;code&gt;height: 100%&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;移行実証&lt;/font&gt;&lt;/font&gt; &lt;code&gt;height: auto&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;への&lt;/font&gt;&lt;/font&gt; &lt;code&gt;height: 100%&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="965591d51df9a96f34c4c03f6f8add39fa36edd6" translate="yes" xml:space="preserve">
          <source>EDIT: I just can't believe ppl actually using this prototype! this drop down menu is only for one sub menu and that's all!!
I've updated a better one that can have two sub menu for both ltr and rtl direction with IE 8 support.</source>
          <target state="translated">EDIT:このプロトタイプを実際に使っている人がいるなんて信じられません!このドロップダウンメニューは1つのサブメニューにしか対応していません。IE 8をサポートして、ltrとrtlの両方の方向に2つのサブメニューを持つことができる、より良いものを更新しました。</target>
        </trans-unit>
        <trans-unit id="233d2c3b30eb253dc7e2b70880a86a703f57eb96" translate="yes" xml:space="preserve">
          <source>EDIT: Scroll down for updated answer</source>
          <target state="translated">EDIT:更新された回答は下にスクロールしてください。</target>
        </trans-unit>
        <trans-unit id="698ca744282ddacdab3809b28d624a762741ab07" translate="yes" xml:space="preserve">
          <source>Edit: Improved JS Fiddle inspired by the Xbox One interface.</source>
          <target state="translated">編集:Xbox OneのインターフェイスにインスパイアされたJS Fiddleが改良されました。</target>
        </trans-unit>
        <trans-unit id="9ff73e8c525846e4f15a07b9cb67db85aa9e80fa" translate="yes" xml:space="preserve">
          <source>Essentially, you set the font-size to 0 and transition that instead of the height, or max-height, or scaleY() etc. at a quick enough pace to get the height to transform to what you want. To transform the actual height with CSS to auto isn't currently possible, but transforming the content within is, hence the font-size transition.</source>
          <target state="translated">本質的には、フォントサイズを 0 に設定して、高さの代わりに高さや max-height、scaleY()などの代わりに、高さを希望の高さに変換するために十分な速さでフォントサイズを遷移させます。CSSで実際の高さを自動に変換することは今のところできませんが、コンテンツ内での変換は可能です。</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">スニペットを展開</target>
        </trans-unit>
        <trans-unit id="a7f9fc163a009de956ac5a9720949fd2133e0799" translate="yes" xml:space="preserve">
          <source>Expanding on @jake's answer, the transition will go all the way to the max height value, causing an extremely fast animation - if you set the transitions for both :hover and off you can then control the crazy speed a little bit more.</source>
          <target state="translated">jakeさんの回答を拡張すると、トランジションは最大高さの値まで移動し、非常に高速なアニメーションを引き起こします。</target>
        </trans-unit>
        <trans-unit id="0e76874ffd3836836616ee3ba5b3b144d489d88a" translate="yes" xml:space="preserve">
          <source>FIDDLE: &lt;a href=&quot;http://jsfiddle.net/n5XfG/2596/&quot;&gt;http://jsfiddle.net/n5XfG/2596/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;FIDDLE：&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/n5XfG/2596/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//jsfiddle.net/n5XfG/2596/&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6129b8492808aaceb17b78953784c1af0226129a" translate="yes" xml:space="preserve">
          <source>Fiddle for LTR</source>
          <target state="translated">LTRのためのフィドル</target>
        </trans-unit>
        <trans-unit id="4503a0c15d9973efbe1af1819cf79161ec7bfa99" translate="yes" xml:space="preserve">
          <source>Fiddle for RTL</source>
          <target state="translated">RTLのためのフィドル</target>
        </trans-unit>
        <trans-unit id="1542bbe249dcfceac66adffb7d730b462e9fb2da" translate="yes" xml:space="preserve">
          <source>Finally, here is hoping that future revisions of CSS address authors' need to do these kind of things even more elegantly -- revisit the notion of &quot;computed&quot; vs &quot;used&quot; and &quot;resolved&quot; values, and consider whether transitions should apply to computed values, including transitions with &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; (which currently get a bit of a special treatment).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最後に、CSSアドレスの今後の改訂では、このようなことをよりエレガントに行う必要があることを願っています。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;width&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;トランジションを含む値&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（現在は特別な扱いが少しあります）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fab6af1ab3943209579ff522f6fac6e08154c048" translate="yes" xml:space="preserve">
          <source>Fixing this second issue is where the second transition comes in, and this transition conceptually targets the wrapper's &lt;em&gt;minimum&lt;/em&gt; height (&quot;conceptually&quot; because we're not actually using the &lt;code&gt;min-height&lt;/code&gt; property for this; more on that later).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この2番目の問題を修正するのが2番目のトランジションの出番であり、このトランジションは概念的にはラッパーの&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最小の&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;高さを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ターゲットにしています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（「概念的に」これは実際には&lt;/font&gt;&lt;/font&gt; &lt;code&gt;min-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用していないためです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。詳細は後で説明します）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="57373c6f9a155ad9394a23e473ace9e61272b8c4" translate="yes" xml:space="preserve">
          <source>For more details see my blog post &lt;a href=&quot;http://www.taccgl.org/blog/css_transition_display.html#combined_height&quot;&gt;http://www.taccgl.org/blog/css_transition_display.html#combined_height&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細については、私のブログ投稿&lt;/font&gt;&lt;a href=&quot;http://www.taccgl.org/blog/css_transition_display.html#combined_height&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.taccgl.org/blog/css_transition_display.html#combined_heightを&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照して&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5e0bc9449943b80dea86f624235a67478e60ecf" translate="yes" xml:space="preserve">
          <source>For my demo I've settled on 50px as the upper minimum height value. This is the second magic number, and it should be lower than the box' height would ever be. 50px seems reasonable as well; it seems unlikely that you'd very often want to make an element collapsible that isn't even 50 pixels high in the first place.</source>
          <target state="translated">私のデモでは、高さの上限を 50px に設定しました。これは2番目の魔法の数字で、ボックスの高さよりも低くなるはずです。50pxは妥当な値だと思います。そもそも50ピクセルの高さでもない要素を折りたたみ可能にしたいと思うことはあまりないでしょう。</target>
        </trans-unit>
        <trans-unit id="963f189815c0096545fe3b9adabd30f4ad90fa99" translate="yes" xml:space="preserve">
          <source>For such an element, assuming it already has the transition set up like e.g. (using &lt;code&gt;ul&lt;/code&gt; as per original question):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このような要素の場合、たとえば（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;元の質問に従って&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ul&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して）のようにトランジションがすでに設定されていると仮定します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9f738ce8457f291b18ee47e665e96baa84f38fcd" translate="yes" xml:space="preserve">
          <source>HTML</source>
          <target state="translated">HTML</target>
        </trans-unit>
        <trans-unit id="11dc542c0ffeed8b41bad901e2044f438e4ab0e5" translate="yes" xml:space="preserve">
          <source>HTML:</source>
          <target state="translated">HTML:</target>
        </trans-unit>
        <trans-unit id="5ccea8bc85150280b5dd22d928379a553028b00e" translate="yes" xml:space="preserve">
          <source>Here is an example: &lt;a href=&quot;http://codepen.io/overthemike/pen/wzjRKa&quot;&gt;http://codepen.io/overthemike/pen/wzjRKa&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に例を示します&lt;/font&gt;&lt;a href=&quot;http://codepen.io/overthemike/pen/wzjRKa&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//codepen.io/overthemike/pen/wzjRKa&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e3daf16f658004050e3ef69babeaa624ba9f044d" translate="yes" xml:space="preserve">
          <source>Here's a demo with three collapsible elements, all of different heights, that all use the same CSS. You might want to click &quot;full page&quot; after clicking &quot;run snippet&quot;. Note that the JavaScript only toggles the &lt;code&gt;collapsed&lt;/code&gt; CSS class, there's no measuring involved. (You could do this exact demo without any JavaScript at all by using a checkbox or &lt;code&gt;:target&lt;/code&gt;). Also note that the part of the CSS that's responsible for the transition is pretty short, and the HTML only requires a single additional wrapper element.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;高さの異なる3つの折りたたみ可能な要素があり、すべて同じCSSを使用するデモを次に示します。 「スニペットを実行」をクリックした後、「ページ全体」をクリックしたい場合があります。 JavaScriptは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;collapsed&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; CSSクラス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のみを切り替えることに注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。測定は行われません。 （チェックボックスまたは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;:target&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用することで、JavaScriptをまったく使用せずにこの正確なデモを行うことができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。また、CSSの移行を担当する部分はかなり短く、HTMLには追加のラッパー要素が1つだけ必要なことにも注意してください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cf0cba08dcfd7078f5355032eed13c61e9239373" translate="yes" xml:space="preserve">
          <source>Here's a fiddle: &lt;a href=&quot;http://jsfiddle.net/BukwJ/&quot;&gt;http://jsfiddle.net/BukwJ/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここにフィドルがあります：&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/BukwJ/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//jsfiddle.net/BukwJ/&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bc58ecd26dec433307d9fe74308864d72126061a" translate="yes" xml:space="preserve">
          <source>Here's a jsfiddle link: &lt;a href=&quot;http://jsfiddle.net/pbatey/duZpT&quot;&gt;http://jsfiddle.net/pbatey/duZpT&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここにjsfiddleリンクがあります：&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/pbatey/duZpT&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ://jsfiddle.net/pbatey/duZpT&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e30101f72780400904571fe4a06fa74ad2f800f9" translate="yes" xml:space="preserve">
          <source>Here's a jsfiddle with the absolute minimal amount of code required: &lt;a href=&quot;http://jsfiddle.net/8ncjjxh8/&quot;&gt;http://jsfiddle.net/8ncjjxh8/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで必要なコードの絶対的な最小限の量とjsfiddleです：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/8ncjjxh8/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://jsfiddle.net/8ncjjxh8/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91199c0858a8c2c748e65fac9343cb26c5311e42" translate="yes" xml:space="preserve">
          <source>Here's a solution I just used in combination with jQuery. This works for the following HTML structure:</source>
          <target state="translated">ここでは、私がjQueryと組み合わせて使ったソリューションを紹介します。これは以下のHTML構造に対して動作します。</target>
        </trans-unit>
        <trans-unit id="9102bc955c8190039f58280a9b72e0a12d5012f8" translate="yes" xml:space="preserve">
          <source>Here's a way to transition from any starting height, including 0, to auto (full size and flexible) without requiring hard-set code on a per-node basis or any user-code to initialize: &lt;a href=&quot;https://github.com/csuwildcat/transition-auto&quot;&gt;https://github.com/csuwildcat/transition-auto&lt;/a&gt;. This is basically the holy grail for what you want, I believe --&amp;gt; &lt;a href=&quot;http://codepen.io/csuwldcat/pen/kwsdF&quot;&gt;http://codepen.io/csuwldcat/pen/kwsdF&lt;/a&gt;. Just slap the following JS file into your page, and all you need to do after that is add/remove a single boolean attribute - &lt;code&gt;reveal=&quot;&quot;&lt;/code&gt; - from the nodes you want to expand and contract.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ノードごとのハードセットコードや初期化するためのユーザーコードを必要とせずに、0を含む任意の開始高さから自動（フルサイズでフレキシブル）に移行する方法を次に示し&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/csuwildcat/transition-auto&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。https&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//github.com/csuwildcat / transition-auto&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは基本的にあなたが望むものの聖杯だと思います-&amp;gt; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://codepen.io/csuwldcat/pen/kwsdF&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://codepen.io/csuwldcat/pen/kwsdF&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次のJSファイルをページにスラップするだけで、その後に行う必要があるのは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、拡張および縮小するノードから&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;単一のブール属性- &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reveal=&quot;&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;追加/削除する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことだけです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8d181d38bb36243f5892917cd8aee77c2006e334" translate="yes" xml:space="preserve">
          <source>Here's all you need to do as the user, once you include the code block found below the example code:</source>
          <target state="translated">ここでは、例のコードの下にあるコードブロックを含めて、ユーザーとして行う必要があるすべてのことを説明しています。</target>
        </trans-unit>
        <trans-unit id="11011713fc3ff2eb5cef0a515f92820cd070ce8c" translate="yes" xml:space="preserve">
          <source>Here's an animation that shows how combining the bottom margin transition with the minimum height transition, both of equal duration, gives us a combined transition from full height to zero height that has the same duration.</source>
          <target state="translated">下マージンのトランジションと最小高さのトランジションを組み合わせることで、同じ持続時間の全高からゼロ高さまでのトランジションを合成している様子を示すアニメーションです。</target>
        </trans-unit>
        <trans-unit id="b88af228505ff25402c01ca71f305260bc117d24" translate="yes" xml:space="preserve">
          <source>Here's the code block to include in your page, after that, it's all gravy:</source>
          <target state="translated">ここにあなたのページに含めるコードブロックがあります、その後、それはすべてのグレービーです。</target>
        </trans-unit>
        <trans-unit id="dc5c1fdd98d5f814623ac70afb610ce6954eb867" translate="yes" xml:space="preserve">
          <source>Hope later someone get benefit of this one.</source>
          <target state="translated">後で誰かがこの1つの利益を得ることを願っています。</target>
        </trans-unit>
        <trans-unit id="2491c0639595d3e43a3bc6cf9723d965fe967fa9" translate="yes" xml:space="preserve">
          <source>Hope someone finds this useful</source>
          <target state="translated">誰かがこれを見つけてくれることを願っています。</target>
        </trans-unit>
        <trans-unit id="52801593709a76d9ea1d52c99ab479c6d14b52f3" translate="yes" xml:space="preserve">
          <source>Hopefully this will be of some help.</source>
          <target state="translated">何かの参考になれば幸いです。</target>
        </trans-unit>
        <trans-unit id="c0d28eff8b82806ccadd16b69706653cb599c0ab" translate="yes" xml:space="preserve">
          <source>How can I transition height: 0; to height: auto; using CSS</source>
          <target state="translated">CSS を使用して height:0;を height:auto;に遷移させるにはどうすればよいでしょうか?</target>
        </trans-unit>
        <trans-unit id="e21860bf37328b97ebb0ddd904694c78e4a7b382" translate="yes" xml:space="preserve">
          <source>How does it work?</source>
          <target state="translated">どうやって使うのか?</target>
        </trans-unit>
        <trans-unit id="916bc03a59d51eadb71140b2649035bbfdee81c4" translate="yes" xml:space="preserve">
          <source>How else could I do this without using JavaScript?</source>
          <target state="translated">JavaScriptを使わずに他にどうすればいいの?</target>
        </trans-unit>
        <trans-unit id="4e0230e7b5e9dd515a9640bff7ba8f585b637b7f" translate="yes" xml:space="preserve">
          <source>I am trying to make a &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; slide down using CSS transitions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CSSトランジションを使用して&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スライドダウンさ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;せようとしてい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="54c9319d765842f1d30c6bfd731e5ee13a9419fb" translate="yes" xml:space="preserve">
          <source>I have not read everything in detail but I have had this problem recently and I did what follows:</source>
          <target state="translated">すべてを詳しく読んだわけではありませんが、最近この問題が発生したので、以下のようなことをしました。</target>
        </trans-unit>
        <trans-unit id="dd1f2e30c67a5db1b27fdaa0ea05796dea37bb88" translate="yes" xml:space="preserve">
          <source>I know this is the thirty-somethingth answer to this question, but I think it's worth it, so here goes. This is a &lt;strong&gt;CSS-only&lt;/strong&gt; solution with the following properties:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これがこの質問に対する30番目の答えであることは知っていますが、それだけの価値があると思います。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、次のプロパティを持つ&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CSSのみの&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ソリューションです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="028380292b89e23147c22daf280477173391648c" translate="yes" xml:space="preserve">
          <source>I posted an answer with some JavaScript and got downvoted, so got annoyed and tried again, and have cracked it with CSS only!</source>
          <target state="translated">JavaScriptを使った回答を投稿したらdownnvotedされてしまったので、イライラしてもう一度やってみたら、CSSだけで割ってしまいました。</target>
        </trans-unit>
        <trans-unit id="0b419af96467f45996ae7c184be3db3d2ebe3702" translate="yes" xml:space="preserve">
          <source>I realize this thread is getting old, but it ranks high on certain Google searches so I figure it's worth updating.</source>
          <target state="translated">私はこのスレッドが古くなっていることを認識していますが、それは特定のGoogle検索で上位にランクされているので、私はそれが更新する価値があると考えています。</target>
        </trans-unit>
        <trans-unit id="be98a73ce3920efc9e8226af083c60c55f87e202" translate="yes" xml:space="preserve">
          <source>I was able to do this. I have a &lt;code&gt;.child&lt;/code&gt; &amp;amp; a &lt;code&gt;.parent&lt;/code&gt; div. The child div fits perfectly within the parent's width/height with &lt;code&gt;absolute&lt;/code&gt; positioning. I then animate the &lt;code&gt;translate&lt;/code&gt; property to push it's &lt;code&gt;Y&lt;/code&gt; value down &lt;code&gt;100%&lt;/code&gt;. Its very smooth animation, no glitches or down sides like any other solution here.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私はこれを行うことができました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.child&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.parent&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; div &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を持ってい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;子divは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配置で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;親の幅/高さに完全に適合します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;translate&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アニメーション化して、その&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;100%&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;下げ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その非常に滑らかなアニメーション、ここでの他のソリューションのようなグリッチや欠点はありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1cff4d0ede85fb9db297e898ab5afe2c1f64a537" translate="yes" xml:space="preserve">
          <source>I was making a drop down list and saw this Post ... many different answers but I decide to share my drop down list too, ... It's not perfect but at least it will using only css for drop down! I've been using transform:translateY(y) to transform the list to the view ...</source>
          <target state="translated">私はドロップダウンリストを作っていたとこのポストを見た...多くの異なる答えが、私はあまりにも、私のドロップダウンリストを共有することにしました...完璧ではありませんが、少なくともドロップダウンにはCSSだけを使用しています。私は、リストをビューに変換するためにtransform:translateY(y)を使用してきました ...</target>
        </trans-unit>
        <trans-unit id="9d991a586a47549c02410425c8d3abf3060b5596" translate="yes" xml:space="preserve">
          <source>I was not content with the issue that arises from simply using &lt;code&gt;max-height&lt;/code&gt; and CSS3 transitions, since as many commenters noted, you have to set your &lt;code&gt;max-height&lt;/code&gt; value very close to the actual height or you'll get a delay. See this &lt;a href=&quot;https://jsfiddle.net/nb5fr34d/1/&quot;&gt;JSFiddle&lt;/a&gt; for an example of that problem.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とCSS3トランジション&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を単に使用することから生じる問題には満足していませんでした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;多くのコメント投稿者が指摘したように、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値は実際の高さに非常に近い値に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要があります。そうしないと遅延が発生します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;問題の例については、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://jsfiddle.net/nb5fr34d/1/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSFiddle&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5bb6fb0b3f732267f0fe40bef9a8aca489ced9bb" translate="yes" xml:space="preserve">
          <source>I've made a vendor prefixed version of the above code on &lt;a href=&quot;http://jsfiddle.net/dotnetCarpenter/PhyQc/9/&quot;&gt;jsfiddle&lt;/a&gt;,  and changed your &lt;a href=&quot;http://jsfiddle.net/dotnetCarpenter/7cnfc/206/&quot;&gt;jsfiddle&lt;/a&gt; to use scaleY instead of height.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は上の上記のコードのベンダー接頭辞バージョン作った&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/dotnetCarpenter/PhyQc/9/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jsfiddleを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、そしてあなたの変更&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/dotnetCarpenter/7cnfc/206/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jsfiddleを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; scaleYの代わりに高さを使用します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="21da71c28029a75edd6116d133e7838a8ef34b02" translate="yes" xml:space="preserve">
          <source>I've met the requirements of no JS using Technique 2: transform: scaleY() of the article below.</source>
          <target state="translated">下の記事のテクニック2:transform:scaleY()を使ってJSを使わないという条件を満たしました。</target>
        </trans-unit>
        <trans-unit id="80cbdaab3f4fd09bd879810d99fd277d55234345" translate="yes" xml:space="preserve">
          <source>I've placed div behind every li because my drop down list are coming from up and to show them properly this was needed, my div code is:</source>
          <target state="translated">私のドロップダウンリストは上から来ているので、私はすべてのliの後ろにdivを配置し、それらを適切に表示するために、これが必要だったので、私のdivコードは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="1c21a782ce04d064b8ee84f81a9ef81bb5fba82f" translate="yes" xml:space="preserve">
          <source>I've recently been transitioning the &lt;code&gt;max-height&lt;/code&gt; on the &lt;code&gt;li&lt;/code&gt; elements rather than the wrapping &lt;code&gt;ul&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は最近&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、ラッピング&lt;/font&gt; &lt;code&gt;ul&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ではなく&lt;/font&gt; &lt;code&gt;li&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;要素の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;移行してい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c495d67b0cbf5d351f629a0774a42d73b18860f" translate="yes" xml:space="preserve">
          <source>Idea is to use a negative value for margin-bottom (or margin-top for a
slightly diffenrent animation) and to place the content element into a
middle element with overflow:hidden. The negative margin of the content
element so reduces the height of the middle element.</source>
          <target state="translated">アイデアとしては、margin-bottomに負の値を使用し(アニメーションが少し違う場合はmargin-top)、content要素をoverflow:hiddenで真ん中の要素に配置することです。content要素のマージンが負の値になっているので、真ん中の要素の高さが低くなっています。</target>
        </trans-unit>
        <trans-unit id="cc31d2bf08dbf0e6fb0cbbddd706755a1d9a40f6" translate="yes" xml:space="preserve">
          <source>If I do it from &lt;code&gt;height: 40px;&lt;/code&gt; to &lt;code&gt;height: auto;&lt;/code&gt;, then it will slide up to &lt;code&gt;height: 0;&lt;/code&gt;, and then suddenly jump to the correct height.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;height: 40px;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から行う場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：40px; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;height: auto;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、それから&lt;/font&gt;&lt;/font&gt; &lt;code&gt;height: 0;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;までスライドし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます：0; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、それから突然正しい高さにジャンプします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3548bee7b44718bc60f829318a6a6623a4d62b77" translate="yes" xml:space="preserve">
          <source>If my font size is &lt;code&gt;1rem&lt;/code&gt;, I'll set my &lt;code&gt;max-height&lt;/code&gt; to something like &lt;code&gt;3rem&lt;/code&gt; (to accommodate wrapped text). You can see an example here:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私のフォントサイズがある場合は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;1rem&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、私は自分の設定します&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のようなものに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;3rem&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（ラップテキストに対応するため）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたはここに例を見ることができます：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1e8cfc2e655ea46b967bd5cddbfd073353793731" translate="yes" xml:space="preserve">
          <source>If the actual box is, say, 1000 pixels high, and your transition is 300ms long, then the &lt;em&gt;visible&lt;/em&gt; transition is already over after about 150ms (or, in the opposite direction, starts 150ms late).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際のボックスの高さが1000ピクセルで、トランジションが300ミリ秒の長さである場合、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可視の&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;トランジションは約150ミリ秒後に既に終了しています（または反対方向に150ミリ秒遅れて開始します）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="48b38f1524ddb40453129b8165e59da685e13413" translate="yes" xml:space="preserve">
          <source>If you actually have a box that's higher than 2000 pixels, then a &lt;code&gt;margin-bottom: -2000px&lt;/code&gt; won't hide everything -- there'll be visible stuff even in the collapsed case. This is a minor fix that we'll do later.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際に2000ピクセルを超えるボックスがある場合、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;margin-bottom: -2000px&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてが非表示になるわけではありません。折りたたまれた場合でも表示されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、後で行う小さな修正です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a9f9a070e177b9011b3f141fbf4bb78109f80448" translate="yes" xml:space="preserve">
          <source>It's transitioning the actual height (unlike &lt;code&gt;transform: scaleY(0)&lt;/code&gt;), so it does the right thing if there's content after the collapsible element.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際の高さを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;transform: scaleY(0)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変換：scaleY（0）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とは異なり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。そのため、折りたたみ可能な要素の後にコンテンツがある場合は、正しいことを行います。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67eb677c5d3a5a75836757b512ff0c7b4aca609a" translate="yes" xml:space="preserve">
          <source>JS Fiddle</source>
          <target state="translated">JSフィドル</target>
        </trans-unit>
        <trans-unit id="e61091df7140cdfc96f3123985c25dba633e650b" translate="yes" xml:space="preserve">
          <source>Jake's answer to animate the max-height is great, but I found the delay caused by setting a large max-height annoying.</source>
          <target state="translated">最大ハイトをアニメーション化するためのジェイクの回答は素晴らしいのですが、最大ハイトを大きく設定することによる遅延が煩わしいと感じました。</target>
        </trans-unit>
        <trans-unit id="33b8939012d1cc6f295af8ad6c5d67a7f62404b1" translate="yes" xml:space="preserve">
          <source>My interpretation is that an explicit height is needed for the animation to run. You can't get an animation on height when either height (the start or end height) is &lt;code&gt;auto&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私の解釈では、アニメーションを実行するには明示的な高さが必要です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;高さ（開始高さまたは終了高さ）が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;auto&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合、高さでアニメーションを取得できません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="932bc4af4d11e8b7683210cab062feb2a27fe18f" translate="yes" xml:space="preserve">
          <source>My particular use case revolved around animating lists of unknown and often considerable lengths, so I was not comfortable settling on an arbitrary &quot;large enough&quot; &lt;code&gt;height&lt;/code&gt; or &lt;code&gt;max-height&lt;/code&gt; specification and risking cut-off content or content that you suddenly need to scroll (if &lt;code&gt;overflow: auto&lt;/code&gt;, for example). Additionally, the easing and timing is broken with &lt;code&gt;max-height&lt;/code&gt;-based solutions, because the used height may reach its maximum value a lot sooner than it would take for &lt;code&gt;max-height&lt;/code&gt; to reach &lt;code&gt;9999px&lt;/code&gt;. And as screen resolutions grow, pixel lengths like &lt;code&gt;9999px&lt;/code&gt; leave a bad taste in my mouth. This particular solution solves the problem in an elegant manner, in my opinion.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私の特定のユースケースは、不明であり、しばしばかなりの長さのアニメーションリストを中心に展開していたため、任意の「十分に大きい」&lt;/font&gt;&lt;/font&gt; &lt;code&gt;height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仕様に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;落ち着き、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;カットオフコンテンツまたは突然スクロールする必要があるコンテンツ（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;overflow: auto&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;など）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さらに、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用されている高さが&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt; &lt;code&gt;9999px&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;に到達&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するのにかかる時間よりもはるかに早く最大値に到達する可能性があるため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、イージングとタイミングは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ベースのソリューションでは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機能しません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そして、画面の解像度が大きくなる&lt;/font&gt; &lt;code&gt;9999px&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ようなピクセル長&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私の口に悪い味を残してください。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この特定のソリューションは、私の意見では、エレガントな方法で問題を解決します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2041f4cac30e42e37e65a28c9202ceaa2e0039fe" translate="yes" xml:space="preserve">
          <source>My workaround is to transition max-height to the exact content height for a nice smooth animation, then use a transitionEnd callback to set max-height to 9999px so the content can resize freely.</source>
          <target state="translated">私の回避策は、スムーズなアニメーションを実現するために、max-heightをコンテンツの正確な高さにトランジションさせ、transitionEndコールバックを使用してmax-heightを9999pxに設定して、コンテンツのサイズを自由に変更できるようにすることです。</target>
        </trans-unit>
        <trans-unit id="c889151e90ac3a728afae0a46626165e26e184c0" translate="yes" xml:space="preserve">
          <source>No JavaScript.</source>
          <target state="translated">JavaScriptを使用していません。</target>
        </trans-unit>
        <trans-unit id="ac92dcbe86e9908fa2c28de3a257dc0a0fea86e8" translate="yes" xml:space="preserve">
          <source>No approximations.</source>
          <target state="translated">近似はしない。</target>
        </trans-unit>
        <trans-unit id="20c2d442727f1aeffeda8b88493dcc32ee6af738" translate="yes" xml:space="preserve">
          <source>No hard coded values.</source>
          <target state="translated">ハードコードされた値はありません。</target>
        </trans-unit>
        <trans-unit id="fd9ef4136deb3bc9a3d3f86491c3a7b07ef3c414" translate="yes" xml:space="preserve">
          <source>Note - there IS javascript in the codepen, but it's only purpose is to add/remove css classes on click for the accordion. This can be done with hidden radio buttons, but I wasn't focused on that, just the height transformation.</source>
          <target state="translated">注意-コードペンにはjavascriptがありますが、目的はアコーディオンのクリック時にcssクラスを削除することだけです。これは非表示のラジオボタンで行うことができますが、私はそれに焦点を当てていませんでしたが、ちょうど高さの変換。</target>
        </trans-unit>
        <trans-unit id="0124b60b0fa1a0cdab4c04d9d4b691a5634e6091" translate="yes" xml:space="preserve">
          <source>OK! I know this problem is as old as the internet but I think I have a solution which I turned into a &lt;a href=&quot;https://github.com/jontroncoso/mutant-transition&quot;&gt;plugin called mutant-transition&lt;/a&gt;. My solution sets the &lt;code&gt;style=&quot;&quot;&lt;/code&gt; attributes for tracked elements whenever theres a change in the DOM. the end result is that you can use good ole CSS for your transitions and not use hacky fixes or special javascript. The only thing you have to do is set what you want to track on the element in question using &lt;code&gt;data-mutant-attributes=&quot;X&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;OK！この問題はインターネットと同じくらい古いものですが、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/jontroncoso/mutant-transition&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mutant-transition&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;という&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プラグイン&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;にした解決策があると思います&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。私のソリューションは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、DOMに変更があるたびに、追跡された要素&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;style=&quot;&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します。最終結果は、移行に適切なole CSSを使用でき、ハッキーな修正や特別なJavaScriptを使用しないことです。あなたがしなければならない唯一のことは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;data-mutant-attributes=&quot;X&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して問題の要素で追跡したいものを設定することです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="256a28d4376dc4fd2551ee3b0e81c596b91990f9" translate="yes" xml:space="preserve">
          <source>Of course, there's a downside! I can't work out how to control the width at which content gets cut off (&lt;code&gt;overflow:hidden&lt;/code&gt;); because of the padding-bottom hack, the width and height are intimately related.  There may be a way though, so will come back to it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もちろん、欠点もあります！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンテンツが切り取られる幅を制御する方法がわかりません（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;overflow:hidden&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パディングボトムハックのため、幅と高さは密接に関連しています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法があるかもしれませんので、戻ってきます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2bc1952a8bf48728325987e2c9a91f1d7d47df08" translate="yes" xml:space="preserve">
          <source>Ok, so I think I came up with a super simple answer...
no &lt;code&gt;max-height&lt;/code&gt;, uses &lt;code&gt;relative&lt;/code&gt; positioning, works on &lt;code&gt;li&lt;/code&gt; elements, &amp;amp; is pure CSS.
I have not tested in anything but Firefox, though judging by the CSS, it should work on all browsers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;わかりましたので、私は非常に単純な答えを思いついたと思います... &lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なく&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;relative&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;位置を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;li&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要素で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;動作し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、純粋なCSSです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私はFirefox以外では何もテストしていませんが、CSSから判断すると、すべてのブラウザーで動作するはずです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0e9737c174109995bff8c7d7a213cc5b3d1ea679" translate="yes" xml:space="preserve">
          <source>One could move the collapsable content into an inner div and calculate the max height by getting the height of the inner div (via JQuery it'd be the outerHeight()).</source>
          <target state="translated">折りたたみ可能なコンテンツを内側の div に移動し、内側の div の高さを取得して最大の高さを計算することができます (JQuery を使用すると outerHeight()になります)。</target>
        </trans-unit>
        <trans-unit id="ff20158e7375fb5b2f4cd2e45257433b79c527bb" translate="yes" xml:space="preserve">
          <source>One would like to just be able to dispense with the &lt;code&gt;.measuringWrapper&lt;/code&gt; and just set the DIV's height to auto and have that animate, but that doesn't seem to work (the height gets set, but no animation occurs).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;.measuringWrapper&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を省略して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、DIVの高さをautoに設定し、そのアニメーションをアニメーション化したいのですが、機能しません（高さが設定されますが、アニメーションは発生しません）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="042aa6d6a63ef4409a0e20afcb0ca7083c68c8af" translate="yes" xml:space="preserve">
          <source>Pros:</source>
          <target state="translated">Pros:</target>
        </trans-unit>
        <trans-unit id="f7db3c128a3b0adb74dfcabd984f6d887f4c2472" translate="yes" xml:space="preserve">
          <source>Remember that there is always a work around... ; )</source>
          <target state="translated">周りの作業が常にあることを覚えておいてください...;)</target>
        </trans-unit>
        <trans-unit id="433621060787dfc734124f79979a0aa8363e5877" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://jsfiddle.net/thechrisjordan/3Fc7D/23/&quot;&gt;JSFiddle demo&lt;/a&gt; provided by Chris Jordan in another &lt;a href=&quot;https://stackoverflow.com/a/20226830/18706&quot;&gt;answer&lt;/a&gt; here.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;こちらの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;別の&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/20226830/18706&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;回答&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Chris Jordanが提供する&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/thechrisjordan/3Fc7D/23/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSFiddleデモを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c43b6bdb3dc84560f0ba0cd9e1e4cc54dbd9fa71" translate="yes" xml:space="preserve">
          <source>See example: &lt;a href=&quot;http://jsfiddle.net/0hnjehjc/1/&quot;&gt;http://jsfiddle.net/0hnjehjc/1/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例を参照してください：&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/0hnjehjc/1/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//jsfiddle.net/0hnjehjc/1/&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="19ca30ba0740e580d0fe52840cadccfc6c2d4460" translate="yes" xml:space="preserve">
          <source>So the li:hover is when the mouse enters the state and then the transition on the non-hovered property will be the mouse leave.</source>
          <target state="translated">つまり、li:hoverはマウスが状態に入ったときに、hoverしていないプロパティ上の遷移がマウスの離脱になります。</target>
        </trans-unit>
        <trans-unit id="427423a2603e2edc93cb11e8088e764e483e5642" translate="yes" xml:space="preserve">
          <source>Something like this, pseudo code</source>
          <target state="translated">こんな感じで、疑似コード</target>
        </trans-unit>
        <trans-unit id="b27ccb2e81731aca12e3de8961ec4e2fd03553b3" translate="yes" xml:space="preserve">
          <source>Tested in Chrome (Win, Mac, Android, iOS), Firefox (Win, Mac, Android), Edge, IE11 (except for a flexbox layout issue with my demo that I didn't bother debugging), and Safari (Mac, iOS). Speaking of flexbox, it should be possible to make this work without using any flexbox; in fact I think you could make almost everything work in IE7 &amp;ndash; except for the fact that you won't have CSS transitions, making it a rather pointless exercise.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Chrome（Win、Mac、Android、iOS）、Firefox（Win、Mac、Android）、Edge、IE11（デモでフレックスボックスのレイアウトの問題を除いて、デバッグを気にしなかった）、およびSafari（Mac、iOS）でテスト済み）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フレックスボックスと言えば、フレックスボックスを使用せずにこれを機能させることができるはずです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際、CSSトランジションがなく、かなり無意味な練習になるという事実を除いて、ほとんどすべてをIE7で機能させることができると思います。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="82617ac9f4409cc6a1b7dfa3e8fbac676131c12c" translate="yes" xml:space="preserve">
          <source>That's it. If you need to collapse the list, either of the two following statements will do:</source>
          <target state="translated">それだけです。リストを折りたたむ必要がある場合は、以下の2つのステートメントのいずれかを実行します。</target>
        </trans-unit>
        <trans-unit id="4f77331dbbb04f4ee1758a9195289b6881ace90d" translate="yes" xml:space="preserve">
          <source>Thats it! This solution uses &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver&quot;&gt;MutationObserver&lt;/a&gt; to follow changes in the DOM. Because of this, you don't really have to set anything up or use javascript to manually animate things. Changes are tracked automatically. However, because it uses MutationObserver, this will only transition in IE11+.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それでおしまい！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このソリューションでは、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MutationObserver&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;してDOMの変更を追跡します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このため、実際に何かを設定したり、JavaScriptを使用して手動でアニメーション化したりする必要はありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変更は自動的に追跡されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、MutationObserverを使用しているため、IE11 +でのみ移行します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4c9689b2c3653ee7b496cef2cc62cc7247a35d65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; starts off at &lt;code&gt;height: 0;&lt;/code&gt;. On hover, the height is set to &lt;code&gt;height:auto;&lt;/code&gt;. However, this is causing it to simply appear, &lt;em&gt;not&lt;/em&gt; transition,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でオフを開始する&lt;/font&gt;&lt;/font&gt; &lt;code&gt;height: 0;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ホバーすると、高さが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;height:auto;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、これにより、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;遷移で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なく&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;単に表示されます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b5eb6e0bbb1897f9afbe6f7247deb8eb0bddbeb4" translate="yes" xml:space="preserve">
          <source>The accepted answer works for most cases, but it doesn't work well when your &lt;code&gt;div&lt;/code&gt; can vary greatly in height &amp;mdash; the animation speed is not dependent on the actual height of the content, and it can look choppy.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;受け入れられた回答はほとんどの場合に機能しますが、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;div&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;高さが大幅に異なる&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合はうまく機能しません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アニメーションの速度はコンテンツの実際の高さに依存せず、途切れて見える場合があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="05208b5f2d1d50d948ba897b0ac015c6adf3022c" translate="yes" xml:space="preserve">
          <source>The following CSS only solution also requires a hard-coded size that
should be bigger than most of the occurring real sizes.  However this
solution also works if the real size is in some situations bigger than
the hard-coded size. In that event the transition might jump a bit,
but it will never leave a partially visible element.
So this solution could also be used for unknown content, e.g. from
a database, where you just know that the content is usually not bigger
than x pixels, but there are exceptions.</source>
          <target state="translated">以下のCSSのみの解決策では、ハードコードされたサイズを必要としますが、それはほとんどの実際のサイズよりも大きくなければなりません。しかし、この解決策は、実際のサイズがハードコードされたサイズよりも大きい場合にも動作します。その場合、トランジションは少しジャンプするかもしれませんが、部分的に見える要素が残ることはありません。そのため、この解決策は、例えばデータベースなどの未知のコンテンツにも使用できます。</target>
        </trans-unit>
        <trans-unit id="a6a5dd19f3fbb644448c5114b16c3008a506319c" translate="yes" xml:space="preserve">
          <source>The following code uses a transition on margin-bottom from -150px to
0px.  This alone works fine as long as the content element is not
higher than 150px. In addition it uses a transition on max-height for the
middle element from 0px to 100%.  This finally hides the middle element
if the content element is higher than 150px.
For max-height the transition is just used to delay its application
by a second when closing, not for a smooth visiual effect (
and therefore it can run from  0px to 100%).</source>
          <target state="translated">以下のコードでは、margin-bottomの遷移を-150pxから0pxにしています。これだけでもcontent要素が150px以上にならなければ問題なく動作します。さらに、中間要素のmax-heightのトランジションを0pxから100%にしています。これは最終的にcontent要素が150pxより高い場合に中間要素を非表示にします。max-heightの場合、トランジションは閉じたときにその適用を1秒遅らせるために使われているだけで、スムーズな視覚効果を得るために使われているわけではありません(したがって、0pxから100%の間で実行することができます)。</target>
        </trans-unit>
        <trans-unit id="80f98956b76b83d7c951d9bda50cfc131b881e26" translate="yes" xml:space="preserve">
          <source>The left bar shows how the negative bottom margin pushes the bottom upwards, reducing the visible height. The middle bar shows how the minimum height ensures that in the collapsing case, the transition doesn't end early, and in the expanding case, the transition doesn't start late. The right bar shows how the combination of the two causes the box to transition from full height to zero height in the correct amount of time.</source>
          <target state="translated">左のバーは、負のボトムマージンがボトムを上に押し上げ、見えている高さを減少させていることを示しています。真ん中のバーは、最小の高さが、折りたたみの場合は遷移が早く終わらず、拡大の場合は遷移が遅くならないようにすることを示しています。右のバーは、この2つを組み合わせることで、ボックスが高さいっぱいの状態から高さゼロの状態へと適切な時間で遷移する様子を示しています。</target>
        </trans-unit>
        <trans-unit id="5dd74999a17ec12a1cd8d209227d362b7dc3a153" translate="yes" xml:space="preserve">
          <source>The max-height solution from Jake works well, if the hard-coded
max-height value supplied is not much bigger than the real height
(because otherwise there are undesirable delays and timing problems).
On the other hand if the hard-coded value accidentially is 
not bigger than the real height the element won't open up completely.</source>
          <target state="translated">ジェイクのmax-heightソリューションは、ハードコードされたmax-height値が実際の高さよりもあまり大きくない場合にうまく機能します(そうしないと、望ましくない遅延やタイミングの問題が発生するからです)。一方、ハードコードされた値が実際の高さよりも大きくない場合、要素は完全には開きません。</target>
        </trans-unit>
        <trans-unit id="48b37506e8a75b40244e3b592f8b74310ebd561c" translate="yes" xml:space="preserve">
          <source>The overall benefit is that on the transition back in (the collapse), the user sees the &lt;code&gt;translateY&lt;/code&gt; animation immediately, so it doesn't really matter how long the &lt;code&gt;max-height&lt;/code&gt; takes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;全体的な利点は、戻る（折りたたみ）への移行時に、ユーザーは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すぐに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;translateY&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アニメーションを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;見る&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことができるため、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どれだけ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かかる&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かは問題ではありません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="12ea4cc780314d13d7317656a41da3a5a066542f" translate="yes" xml:space="preserve">
          <source>The reasoning is that the delay for small &lt;code&gt;max-heights&lt;/code&gt; is far less noticeable (if at all) compared to large &lt;code&gt;max-heights&lt;/code&gt;, and I can also set my &lt;code&gt;max-height&lt;/code&gt; value relative to the &lt;code&gt;font-size&lt;/code&gt; of the &lt;code&gt;li&lt;/code&gt; rather than some arbitrary huge number by using &lt;code&gt;ems&lt;/code&gt; or &lt;code&gt;rems&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;推論は、小さな&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-heights&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;遅延は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;大きな&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-heights&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と比較して（もしあれば）はるかに目立たないこと&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;であり、任意の任意の&lt;/font&gt; &lt;code&gt;font-size&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;では&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なく&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;li&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;font-size&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相対的に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定することもでき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt; &lt;code&gt;ems&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt; &lt;code&gt;rems&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して膨大な数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="06e2a7bea37c675f05a5af5a876a16baaf6fdd41" translate="yes" xml:space="preserve">
          <source>The second problem is the reason why we're not actually using &lt;code&gt;min-height&lt;/code&gt; for the minimum height transition. Instead, there is an &lt;code&gt;::after&lt;/code&gt; pseudo-element in the container with a &lt;code&gt;height&lt;/code&gt; that transitions from 50px to zero. This has the same effect as a &lt;code&gt;min-height&lt;/code&gt;: It won't let the container shrink below whatever height the pseudo-element currently has. But because we're using &lt;code&gt;height&lt;/code&gt;, not &lt;code&gt;min-height&lt;/code&gt;, we can now use &lt;code&gt;max-height&lt;/code&gt; (once again applied with a delay) to set the pseudo-element's actual height to zero once the transition is over, ensuring that at least outside the transition, even small elements have the correct height. Because &lt;code&gt;min-height&lt;/code&gt; is &lt;a href=&quot;https://stackoverflow.com/q/13845224/115866&quot;&gt;stronger&lt;/a&gt; than &lt;code&gt;max-height&lt;/code&gt;, this wouldn't work if we used the container's &lt;code&gt;min-height&lt;/code&gt; instead of the pseudo-element's &lt;code&gt;height&lt;/code&gt;. Just like the &lt;code&gt;max-height&lt;/code&gt; in the previous paragraph, this &lt;code&gt;max-height&lt;/code&gt; also needs a value for the opposite end of the transition. But in this case we can just pick the 50px.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2番目の問題は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、最小の高さの遷移に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;min-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用していない理由です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。代わり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に、コンテナに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;::after&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;疑似要素があり、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が50pxからゼロに移行します。これは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;min-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と同じ効果&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があります。疑似要素が現在持っている高さよりもコンテナを縮小させません。しかし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;min-height&lt;/code&gt; &lt;/font&gt; &lt;code&gt;height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ではなく&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;height&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しているため、遷移が終了すると、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（もう一度遅延が適用されます）を使用して、疑似要素の実際の高さをゼロに設定できます。これにより、少なくともトランジション、小さな要素でも正しい高さがあります。そのため&lt;/font&gt;&lt;/font&gt; &lt;code&gt;min-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; &lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/q/13845224/115866&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;より&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;強い&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、疑似要素の&lt;/font&gt; &lt;code&gt;height&lt;/code&gt; &lt;code&gt;min-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;代わりに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンテナの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最小高さ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用した場合、これは機能しません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;前の段落&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;と同様に、この&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も遷移の反対側の端の値が必要です。ただし、この場合は50pxを選択するだけです。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ca09b4bcf43f30772e389ae33c547556201644c" translate="yes" xml:space="preserve">
          <source>The solution that I've always used was to first fade out, then shrink the &lt;code&gt;font-size&lt;/code&gt;, &lt;code&gt;padding&lt;/code&gt; and &lt;code&gt;margin&lt;/code&gt; values. It doesn't look the same as a wipe, but it works without a static &lt;code&gt;height&lt;/code&gt; or &lt;code&gt;max-height&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私がいつも使用していた解決策は、最初にフェードアウトし、次に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;font-size&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;padding&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;margin&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;縮小する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことでした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ワイプと同じようには見えませんが、静的な&lt;/font&gt;&lt;/font&gt; &lt;code&gt;height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;や&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がなくても機能します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d296e41e527a4c3744dc4c4b6685966fc1762c47" translate="yes" xml:space="preserve">
          <source>The trick is to use a hidden &amp;amp; duplicated &lt;code&gt;div&lt;/code&gt; to get the browser to understand what 100% means.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;秘訣は、非表示の複製された&lt;/font&gt;&lt;/font&gt; &lt;code&gt;div&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して、ブラウザーに100％の意味を理解させることです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e40968c673e794e54a3a68dee9794b6e4d4562d5" translate="yes" xml:space="preserve">
          <source>The upshot though is that we get performant transitioning using CSS only, and a single transition function to smoothly achieve the transition; the holy grail!</source>
          <target state="translated">その結果、CSSのみを使用してパフォーマンスの高いトランジションを実現し、単一のトランジション関数を使用してスムーズにトランジションを実現することができました。</target>
        </trans-unit>
        <trans-unit id="1bebfb120a1cdea03b97b1e2e700d93c55c6e36a" translate="yes" xml:space="preserve">
          <source>The value for margin bottom should be negative and as close as
possible to the real height of the content element. If it('s absoute
value) is bigger there are similar delay and timing problems as with
the max-height solutions, which however can be limited as long as the
hard coded size is not much bigger than the real one. If the absolute
value for margin-bottom is smaller than the real height the 
tansition jumps a bit. In any case after the transition the
content element is either fully displayed or fully removed.</source>
          <target state="translated">margin bottom の値は負の値で、content 要素の実際の高さにできるだけ近づけるべきです。この値(の絶対値)が大きい場合、max-height の場合と同様の遅延やタイミングの問題がありますが、ハードコーディングされたサイズが実際のサイズよりも大きくない限り、制限される可能性があります。margin-bottom の絶対値が実際の高さよりも小さい場合、タンディションは少しジャンプします。いずれにしても、遷移の後、content要素は完全に表示されるか、完全に削除されます。</target>
        </trans-unit>
        <trans-unit id="e1c3f9008f5212ef12a37ecf831a2eb3257207fc" translate="yes" xml:space="preserve">
          <source>The way it works is by always having flex-basis: auto on the element with content, and transitioning flex-grow and flex-shrink instead.</source>
          <target state="translated">この方法では、コンテンツを持つ要素上で常に flex-basis:auto を持ち、代わりに flex-grow と flex-shrink を遷移させることで動作します。</target>
        </trans-unit>
        <trans-unit id="e82b0a34de41485fdb008cd2e3a304361649dc15" translate="yes" xml:space="preserve">
          <source>There are in fact &lt;em&gt;two&lt;/em&gt; transitions involved in making this happen. One of them transitions the &lt;code&gt;margin-bottom&lt;/code&gt; from 0px (in the expanded state) to &lt;code&gt;-2000px&lt;/code&gt; in the collapsed state (similar to &lt;a href=&quot;https://stackoverflow.com/a/25200087/115866&quot;&gt;this answer&lt;/a&gt;). The 2000 here is the first magic number, it's based on the assumption that your box won't be higher than this (2000 pixels seems like a reasonable choice).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを実現するに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、実際には&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2つの&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;移行が必要です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それらの1つは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;margin-bottom&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を0px（エキスパンド状態）から&lt;/font&gt;&lt;/font&gt; &lt;code&gt;-2000px&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に折りたたみ状態（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/25200087/115866&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この回答&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と同様&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;移行&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここでの2000は最初のマジックナンバーです。これは、ボックスがこれより高くならないという想定に基づいています（2000ピクセルは妥当な選択のようです）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77b49990493b6166b1264c0d51a642c59eb55a65" translate="yes" xml:space="preserve">
          <source>There is no delay at the beginning, and the transition doesn't stop early. In both directions (expanding and collapsing), if you specify a transition duration of 300ms in your CSS, then the transition takes 300ms, period.</source>
          <target state="translated">冒頭に遅延はなく、遷移が早く止まることもありません。両方向(拡大・縮小)では、CSSで遷移時間を300msと指定した場合、遷移には300msの時間がかかります、ピリオド。</target>
        </trans-unit>
        <trans-unit id="c803cbcc872687ef08c8bf14891faf1a42800850" translate="yes" xml:space="preserve">
          <source>There was little mention of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight&quot;&gt;&lt;code&gt;Element.scrollHeight&lt;/code&gt;&lt;/a&gt; property which can be useful here and still may be used with a pure CSS transition. The property always contains the &quot;full&quot; height of an element, regardless of whether and how its content overflows as a result of collapsed height (e.g. &lt;code&gt;height: 0&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight&quot;&gt; &lt;code&gt;Element.scrollHeight&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;についてはほとんど触れられていませんが、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここでは便利であり、純粋なCSSトランジションで引き続き使用できます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティは、折りたたまれた高さの結果としてコンテンツがオーバーフローするかどうか、またどのようにオーバーフローするかに関係なく、常に要素の「完全な」高さを含みます（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;height: 0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92ec93a3695bd08ea2f70981c0e1ba7485e009ff" translate="yes" xml:space="preserve">
          <source>This allows you to have a div that at first shows content up to 200px height and on hover it's size becomes at least as high as the whole content of the div. The Div does not become 3000px but 3000px is the limit that I am imposing. Make sure to have the transition on the non :hover, otherwise you might get some strange rendering. In this way the :hover inherits from the non :hover.</source>
          <target state="translated">これにより、最初は高さ200pxまでのコンテンツが表示され、ホバーした時には少なくともDivのコンテンツ全体の高さと同じくらいの大きさになるようなdivを持つことができます。divが3000pxになるわけではありませんが、私が課しているのは3000pxが限界です。遷移は :hover 以外の部分で行うようにしてください。このように :hover は非 :hover を継承しています。</target>
        </trans-unit>
        <trans-unit id="9158c77ed9ff0fbe4e96edc70e2c72fcc3dd0e0f" translate="yes" xml:space="preserve">
          <source>This isn't exactly a &quot;solution&quot; to the problem, but more of a workaround. It only works as written with text, but can be changed to work with other elements as needed I'm sure.</source>
          <target state="translated">これは正確には問題の「解決策」ではありませんが、むしろ回避策のようなものです。これはテキストで書かれた通りにしか動作しませんが、必要に応じて他の要素で動作するように変更することができます。</target>
        </trans-unit>
        <trans-unit id="94dbc60f75ac5eab03378e5d0c88da1d93a42254" translate="yes" xml:space="preserve">
          <source>This means both &lt;code&gt;max-height&lt;/code&gt; and &lt;code&gt;translateY&lt;/code&gt; are used: &lt;code&gt;max-height&lt;/code&gt; allows the element to push down elements below it, while &lt;code&gt;translateY&lt;/code&gt; gives the &quot;instant&quot; effect we want. The issue with &lt;code&gt;max-height&lt;/code&gt; still exists, but its effect is lessened.
This means you can set a much larger height for your &lt;code&gt;max-height&lt;/code&gt; value and worry about it less.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;translateY&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;両方&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が使用される&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことを意味し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、要素がその下の要素を押し下げることを許可しますが、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;translateY&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、必要な「インスタント」効果を提供します。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の問題は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;まだ存在していますが、その影響は少なくなっています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はるかに大きな高さを設定して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、心配する必要はありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65c2fe19f147aff6f45f49326f76241d9dfb4c17" translate="yes" xml:space="preserve">
          <source>This method is suitable whenever you're able to duplicate the DOM of the element you wish to animate.</source>
          <target state="translated">この方法は、アニメーション化したい要素の DOM を複製できる場合に適しています。</target>
        </trans-unit>
        <trans-unit id="6a976ad0e2118f4af99df249a6bded299079d4df" translate="yes" xml:space="preserve">
          <source>This solution uses a few 'techniques':</source>
          <target state="translated">このソリューションでは、いくつかの「テクニック」を使用します。</target>
        </trans-unit>
        <trans-unit id="d5e8b8bdcabe1f5fc7b97de256e2edc2918e4a43" translate="yes" xml:space="preserve">
          <source>To get around this (while still using no JavaScript), I added another HTML element that transitions the &lt;code&gt;transform: translateY&lt;/code&gt; CSS value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを回避するために（JavaScriptをまだ使用していない間）、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;transform: translateY&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を遷移する別のHTML要素、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;translateY&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; CSS値&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を追加しました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24b89c6dcf5fee533b423297f7d993734b85299e" translate="yes" xml:space="preserve">
          <source>Transition does not work form px to % or to auto. You need to use same unit of measure.
This works fine for me. Using HTML5 makes it perfect....</source>
          <target state="translated">pxから%への遷移、またはオートへの遷移は動作しません。同じ単位を使う必要があります。これは私の場合は問題なく動作します。HTML5を使えば完璧です。</target>
        </trans-unit>
        <trans-unit id="176b3752e597542de9aaf271b5f6b1d1d7f26ae8" translate="yes" xml:space="preserve">
          <source>Two problems remain to fix:</source>
          <target state="translated">解決すべき問題が2つ残っています。</target>
        </trans-unit>
        <trans-unit id="7ea4ce8ef76a982f7eefe51d923e903e88ba6b67" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;max-height&lt;/code&gt; in the transition and not &lt;code&gt;height&lt;/code&gt;. And set a value on &lt;code&gt;max-height&lt;/code&gt; to something bigger than your box will ever get.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;移行していない中で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、ボックスがこれまでに得られるよりも大きな&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値に設定します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9fdc58c3df28c380f1a1f0660f6472bce5906f93" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;max-height&lt;/code&gt; with different transition easing and delay for each state.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;状態ごとに異なる遷移の緩和と遅延のある&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6cfd7e5a76df1889f12d19ff28b2d0f58ee590c" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;margin-bottom&lt;/code&gt; transition alone by itself has two issues:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;margin-bottom&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;遷移を単独で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用すると、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2つの問題があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ee76abdb648309cfaecf3c8f37763f1211d8fbb" translate="yes" xml:space="preserve">
          <source>We can trigger desired animated &quot;expansion&quot; of height, using CSS only, with something like the following (here assuming &lt;code&gt;ul&lt;/code&gt; variable refers to the list):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CSSのみを使用して、次のような高さのアニメーション化された「拡張」をトリガーできます（ここでは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ul&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数がリストを参照して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いると想定し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ています）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba3d8c8958eafd78014f6d85d61eb8fa9003fb43" translate="yes" xml:space="preserve">
          <source>We solve the first problem by giving the container element a &lt;code&gt;max-height: 0&lt;/code&gt; in the collapsed case, with a &lt;code&gt;0s 0.3s&lt;/code&gt; transition. This means that it's not really a transition, but the &lt;code&gt;max-height&lt;/code&gt; is applied with a delay; it only applies once the transition is over. For this to work correctly, we also need to pick a numerical &lt;code&gt;max-height&lt;/code&gt; for the opposite, non-collapsed, state. But unlike in the 2000px case, where picking too large of a number affects the quality of the transition, in this case, it really doesn't matter. So we can just pick a number that is so high that we &lt;em&gt;know&lt;/em&gt; that no height will ever come close to this. I picked a million pixels. If you feel you may need to support content of a height of more than a million pixels, then 1) I'm sorry, and 2) just add a couple of zeros.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初の問題を解決するには、コンテナ要素に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-height: 0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;折りたたまれた場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;0&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;遷移&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0s 0.3s&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。つまり、実際には遷移ではありませんが、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は遅延して適用されます。移行が終了したときにのみ適用されます。これが正しく機能する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ためには、反対の折りたたまれていない状態の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数値の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も選択する必要があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。しかし、2000pxの場合とは異なり、選択する数値が多すぎると、トランジションの品質に影響しますが、この場合、それは本当に問題ではありません。だから私たちは&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;知っ&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ているほど高い数を選ぶことができます&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;高さがこれに近づくことはありません。 100万ピクセルを選択しました。 100万ピクセルを超える高さのコンテンツをサポートする必要があると思われる場合は、1）申し訳ありません。2）いくつかのゼロを追加します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b0080221020a68b5b8583559e559590a69867ffe" translate="yes" xml:space="preserve">
          <source>While (like in other solutions) there &lt;em&gt;are&lt;/em&gt; magic numbers (like &quot;pick a length that is higher than your box is ever going to be&quot;), it's not fatal if your assumption ends up being wrong. The transition may not look amazing in that case, but before and after the transition, this is not a problem: In the expanded (&lt;code&gt;height: auto&lt;/code&gt;) state, the whole content always has the correct height (unlike e.g. if you pick a &lt;code&gt;max-height&lt;/code&gt; that turns out to be too low). And in the collapsed state, the height is zero as it should.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（他のソリューションのように）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;マジックナンバー&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あり&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ますが&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（「ボックスがこれまでよりも長い長さを選択する」など）、想定が間違っていても致命的ではありません。移行は、その場合には驚くほど見ていないかもしれませんが、移行前と後に、これは問題ではありません：拡大（で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;height: auto&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）あなたが選ぶ場合の状態、全体の内容が常に正しい高さ（とは異なり、例えばを持って&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max-height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;低すぎることが判明した&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;高さ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。そして、折りたたまれた状態では、高さが本来あるべきゼロです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9606f351884fa0311c03608ca2bab6f0bfd9af96" translate="yes" xml:space="preserve">
          <source>Working example:</source>
          <target state="translated">実務例。</target>
        </trans-unit>
        <trans-unit id="a651458deec7c14e2ad2feb864af7b4c83e2d889" translate="yes" xml:space="preserve">
          <source>You also just get/set the element's own height:</source>
          <target state="translated">また、要素の高さを取得します。</target>
        </trans-unit>
        <trans-unit id="61b54c6459502fcb733ad684d85a42e8cc47a036" translate="yes" xml:space="preserve">
          <source>You can see more in the test</source>
          <target state="translated">テストでもっと見ることができます。</target>
        </trans-unit>
        <trans-unit id="eef3ab62d5379be06789db8a2fc5cd4ca279ca0f" translate="yes" xml:space="preserve">
          <source>You can still perform the actual animation with CSS, but you need to use JavaScript to compute the height of the items, instead of trying to use &lt;code&gt;auto&lt;/code&gt;. No jQuery is required, although you may have to modify this a bit if you want compatibility (works in the latest version of Chrome :)).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CSSでも実際のアニメーションを実行できますが、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;auto&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する代わりに、JavaScriptを使用してアイテムの高さを計算する必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jQueryは必要ありませんが、互換性が必要な場合はこれを少し変更する必要がある場合があります（Chromeの最新バージョンで動作します）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a1fad9c3a1bc5d0bc47e0b2182633ba0393438b" translate="yes" xml:space="preserve">
          <source>You can transition from height:0 to height:auto providing that you also provide min-height and max-height.</source>
          <target state="translated">min-height と max-height を指定しておけば、 height:0 から height:auto へ遷移できます。</target>
        </trans-unit>
        <trans-unit id="d0d4d5fcf837d212814e44b4c2da54e484312275" translate="yes" xml:space="preserve">
          <source>You can't currently animate on height when one of the heights involved is &lt;code&gt;auto&lt;/code&gt;, you have to set two explicit heights.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;現在、高さの1つが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;auto&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合は、高さをアニメートできません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。2つの明示的な高さを設定する必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f5d2d4cc78ee493aa51655afb82486691d697b1" translate="yes" xml:space="preserve">
          <source>You can, with a little bit of non-semantic jiggery-pokery. My usual approach is to animate the height of an outer DIV which has a single child which is a style-less DIV used only for measuring the content height.</source>
          <target state="translated">あなたは、少しの非セマンティックなジグジュリーポケリーで、することができます。私の通常のアプローチは、コンテンツの高さを測定するためだけに使用されるスタイルレスDIVである単一の子を持つ外側のDIVの高さをアニメーション化することです。</target>
        </trans-unit>
        <trans-unit id="b7570d9547f8a90422915fee000ec4ab9fcdac48" translate="yes" xml:space="preserve">
          <source>You could then use a click function to set and remove the height using &lt;code&gt;css()&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、クリック関数を使用して、&lt;/font&gt; &lt;code&gt;css()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して高さを設定および削除できます&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="81cf9f50b3b21cdabf1bf2562dc750950463485d" translate="yes" xml:space="preserve">
          <source>You don't quite get the full wipe effect, but playing around with the transition-duration and padding values should get you close enough. If you don't want to explicitly set height/max-height, this should be what you're looking for.</source>
          <target state="translated">完全なワイプ効果を得ることはできませんが、 transition-duration と padding の値を弄れば十分に近い効果が得られるはずです。明示的に height-max-height を設定したくない場合は、これが必要なものです。</target>
        </trans-unit>
        <trans-unit id="12294ccf644336ab224779215665adbc3d4034c4" translate="yes" xml:space="preserve">
          <source>You should dump this Javascript immediately after target_box's closing tag in an inline script tag.</source>
          <target state="translated">このJavascriptは、target_boxの終了タグの直後にインラインのscriptタグにダンプしてください。</target>
        </trans-unit>
        <trans-unit id="dcdf87989bba77916be0129b2228aab1653554a9" translate="yes" xml:space="preserve">
          <source>You should use scaleY instead.</source>
          <target state="translated">代わりに scaleY を使うべきです。</target>
        </trans-unit>
        <trans-unit id="db2c6aa37aefd0e19dbcd57982ad9624d6c55357" translate="yes" xml:space="preserve">
          <source>You would specify a &lt;code&gt;height&lt;/code&gt; on &lt;code&gt;.parent&lt;/code&gt;, in &lt;code&gt;px&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, or leave as &lt;code&gt;auto&lt;/code&gt;. This div then masks out the &lt;code&gt;.child&lt;/code&gt; div when it slides down.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次のように指定し&lt;/font&gt;&lt;/font&gt; &lt;code&gt;height&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.parent&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;px&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;%&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、またはとして残して&lt;/font&gt;&lt;/font&gt; &lt;code&gt;auto&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、このdivは、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;下にスライドすると&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.child&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; divを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;マスク&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c8026a3ddfa298c7825cd0ae4c1692146bba081" translate="yes" xml:space="preserve">
          <source>and because ul height is set to the content it can get over your body content that's why I did this for ul:</source>
          <target state="translated">と、ulの高さがコンテンツに設定されているので、体のコンテンツを超えてしまうことがあるので、ulのためにこれをやってみました。</target>
        </trans-unit>
        <trans-unit id="04ad0adbbdf2899ed0141ee35ced7ffef8250abd" translate="yes" xml:space="preserve">
          <source>and hover is :</source>
          <target state="translated">で、ホバーは.</target>
        </trans-unit>
        <trans-unit id="c4be4ea2abd043a92cc4298b4fc2f540a89321e4" translate="yes" xml:space="preserve">
          <source>and hover:</source>
          <target state="translated">とホバーします。</target>
        </trans-unit>
        <trans-unit id="0fa982317a03d2a36895352f5f78503eee8dc477" translate="yes" xml:space="preserve">
          <source>and the function:</source>
          <target state="translated">と機能を説明しています。</target>
        </trans-unit>
        <trans-unit id="448c170311f61b3584158854b8dc38ba7fab80e5" translate="yes" xml:space="preserve">
          <source>and the reverse problem, where in the non-hidden case, boxes of less than 50 pixels height are too high even when the transition isn't running, because the minimum height keeps them at 50 pixels.</source>
          <target state="translated">と逆の問題で、非非表示の場合、トランジションが実行されていなくても、高さが50ピクセル以下のボックスは、最小の高さが50ピクセルに保たれているため、高さが高すぎるという問題があります。</target>
        </trans-unit>
        <trans-unit id="c632644d60056004fc2c34986ab0662e983c0851" translate="yes" xml:space="preserve">
          <source>e.g:</source>
          <target state="translated">e.g:</target>
        </trans-unit>
        <trans-unit id="f10634551fb9740210c0fc031de400b3bc3de984" translate="yes" xml:space="preserve">
          <source>element needs to be put in a fixed height flex container</source>
          <target state="translated">要素を固定高さのフレックスコンテナに入れる必要がある</target>
        </trans-unit>
        <trans-unit id="d1a448e7ccba53af98e77023d1a4d2adf2dfe3cb" translate="yes" xml:space="preserve">
          <source>float shrink-wrapping, (necessitating an extra div to apply the float clearing hack)</source>
          <target state="translated">フロートシュリンクラッピング</target>
        </trans-unit>
        <trans-unit id="94d5fa80d2047b42166c5a6f260c08c7ce3f9b60" translate="yes" xml:space="preserve">
          <source>hopefully someone find this useful in future.</source>
          <target state="translated">うまくいけば、誰かがこれを見つけてくれることを期待しています。</target>
        </trans-unit>
        <trans-unit id="c1c32c9b3424db8933d1c8c8b3cc35c3fcfe70db" translate="yes" xml:space="preserve">
          <source>no JS</source>
          <target state="translated">ノーJS</target>
        </trans-unit>
        <trans-unit id="0f7d0d088b6ea936fb25b477722d734706fe8b40" translate="yes" xml:space="preserve">
          <source>simple</source>
          <target state="translated">simple</target>
        </trans-unit>
        <trans-unit id="25a213a71cd419ae0e8267b47c015e3a96d5fd72" translate="yes" xml:space="preserve">
          <source>smooth transition</source>
          <target state="translated">スムーズトランジション</target>
        </trans-unit>
        <trans-unit id="955441a22c44ca83c4ab1672a3ed704821725465" translate="yes" xml:space="preserve">
          <source>the point from above, where boxes of more than 2000 pixels height aren't completely hidden in the collapsed state,</source>
          <target state="translated">高さ2000ピクセル以上のボックスが潰れた状態で完全に隠されていない上からのポイント</target>
        </trans-unit>
        <trans-unit id="a62563931a83391cd45df5df2fb5c63a09cf8f22" translate="yes" xml:space="preserve">
          <source>the second time after transition is delay and it will get hidden after my drop down list has been closed animately ...</source>
          <target state="translated">遷移後の2回目は遅延であり、私のドロップダウンリストがアニメーションで閉じられた後、それが非表示になります...</target>
        </trans-unit>
        <trans-unit id="467885433d6e6759c6e42459ca6a1749f1a754dd" translate="yes" xml:space="preserve">
          <source>unsemantic use of &lt;a href=&quot;https://caniuse.com/#feat=css-writing-mode&quot;&gt;https://caniuse.com/#feat=css-writing-mode&lt;/a&gt; and some transformations to undo it (this allows use of the padding hack above in a vertical context)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://caniuse.com/#feat=css-writing-mode&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://caniuse.com/#feat=css-writing-modeの&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;セマンティックでない使用と、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それを元に戻すためのいくつかの変換（これにより、垂直コンテキストで上記のパディングハックを使用できるようになります）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
