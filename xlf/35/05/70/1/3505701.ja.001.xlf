<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/3505701">
    <body>
      <group id="3505701">
        <trans-unit id="1805a7f5ffc6ff186f180d0af446a8415528fbc8" translate="yes" xml:space="preserve">
          <source>(Hopefully it's clear that &lt;code&gt;apply&lt;/code&gt; corresponds to @Hadley's &lt;code&gt;aaply&lt;/code&gt; and &lt;code&gt;aggregate&lt;/code&gt; corresponds to @Hadley's &lt;code&gt;ddply&lt;/code&gt; etc. Slide 20 of the same slideshare will clarify if you don't get it from this image.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（うまくいけば、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;apply&lt;/code&gt; が&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;aaply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aaplyに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;対応し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;aggregate&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Hadley&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ddply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;対応すること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は明らかです。同じスライド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;シェアの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スライド20は、この画像から取得しない場合に明確になります。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b8dcc2930de696ff7d1ab6a5c456f21daeed461" translate="yes" xml:space="preserve">
          <source>(on the left is input, on the top is output)</source>
          <target state="translated">(左が入力、上が出力)</target>
        </trans-unit>
        <trans-unit id="f1953e60a38f21655f8f051ed21c335abb9c46d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://adv-r.had.co.nz/Functional-programming.html&quot;&gt;Advanced R: Functional Programming&lt;/a&gt;, by Hadley Wickham</source>
          <target state="translated">&lt;a href=&quot;http://adv-r.had.co.nz/Functional-programming.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Advanced R：関数型プログラミング&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、Hadley Wickham作&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="792419730656e483005ae7e0a7cf2155988f50bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.bioinformaticszen.com/post/simple-functional-programming-in-r/&quot;&gt;Simple Functional Programming in R&lt;/a&gt;, by Michael Barton</source>
          <target state="translated">&lt;a href=&quot;http://www.bioinformaticszen.com/post/simple-functional-programming-in-r/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Michael Bartonによる&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;R&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;での&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;単純な関数型プログラミング&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2bc5cefb965abb614acd13a24b43b58311cd227d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BY&lt;/code&gt; is a S3 generic for split-apply-combine computing with vector, matrix and data.frame method. It is significantly faster than &lt;code&gt;tapply&lt;/code&gt;, &lt;code&gt;by&lt;/code&gt; and &lt;code&gt;aggregate&lt;/code&gt; (an also faster than &lt;code&gt;plyr&lt;/code&gt;, on large data &lt;code&gt;dplyr&lt;/code&gt; is faster though).</source>
          <target state="translated">&lt;code&gt;BY&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、ベクトル、行列、およびdata.frameメソッドを使用した分割-適用-結合コンピューティング用のS3ジェネリックです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これはかなり速いより&lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;及び&lt;/font&gt;&lt;/font&gt; &lt;code&gt;aggregate&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（またより速く&lt;/font&gt;&lt;/font&gt; &lt;code&gt;plyr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、大規模なデータに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;dplyr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;速いけれどもです）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43f5a570136985c02d6c8f681abb33bebc26adbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggregate(matrix, grouping, f)&lt;/code&gt;: similar to &lt;code&gt;by&lt;/code&gt;, but instead of pretty printing the output, aggregate sticks everything into a dataframe.</source>
          <target state="translated">&lt;code&gt;aggregate(matrix, grouping, f)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と似て&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いますが、出力をきれいに出力する代わりに、aggregateはすべてをデータフレームに貼り付けます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5ba4b592d998cc6de1829427766fa2cca43f789c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggregate&lt;/code&gt; can be seen as another a different way of use &lt;code&gt;tapply&lt;/code&gt; if we use it in such a way.</source>
          <target state="translated">&lt;code&gt;aggregate&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の使用の他の別の方法として見ることができ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私たちは、このようなAの方法でそれを使用している場合。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="40a096807c9e596e07eb21425ccd8e3066107e18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apply(matrix, 1/2, f)&lt;/code&gt;: input is a matrix. output is a vector, where element &lt;code&gt;i&lt;/code&gt; is f(row/col i of the matrix)</source>
          <target state="translated">&lt;code&gt;apply(matrix, 1/2, f)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：入力は行列です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;出力はベクトルで、要素&lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はf（行列の行/列i）です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f6ab4aaedbf3874858bbe6f9c2d96f9690e522e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apply&lt;/code&gt;  is  &lt;em&gt;generic&lt;/em&gt;: applies a function to a matrix's rows or columns (or, more generally, to dimensions of an array)</source>
          <target state="translated">&lt;code&gt;apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; is &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;generic&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：関数を行列の行または列（または、より一般的には、配列の次元）に適用します&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="795b46afd6c85bb3c35d17a3f08a78606bb094de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;by(dataframe, grouping, f)&lt;/code&gt;: let &lt;code&gt;g&lt;/code&gt; be a grouping. apply &lt;code&gt;f&lt;/code&gt; to each column of the group/dataframe. pretty print the grouping and the value of &lt;code&gt;f&lt;/code&gt; at each column.</source>
          <target state="translated">&lt;code&gt;by(dataframe, grouping, f)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;g&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;グループ化とします。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;グループ/データフレームの各列に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;適用します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;各列&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のグループと&lt;/font&gt;&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の値をきれいに出力し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="52ff4d6800d1dd0c3e6955b2e567c66e5c73b827" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dapply&lt;/code&gt; (Data-Apply) applies functions to rows or (default) columns of matrices and data.frames and (default) returns an object of the same type and with the same attributes (unless the result of each computation is atomic and &lt;code&gt;drop = TRUE&lt;/code&gt;). The performance is comparable to &lt;code&gt;lapply&lt;/code&gt; for data.frame columns, and about 2x faster than &lt;code&gt;apply&lt;/code&gt; for matrix rows or columns. Parallelism is available via &lt;code&gt;mclapply&lt;/code&gt; (only for MAC).</source>
          <target state="translated">&lt;code&gt;dapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（Data-Apply）は、行列とdata.framesの行または（デフォルト）列に関数を適用し、（デフォルト）同じタイプのオブジェクトを返します（各計算の結果がアトミックであり、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;drop = TRUE&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ない限り）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パフォーマンスは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;data.frame列の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;lapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;匹敵し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、マトリックスの行または列に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;よりも約2倍高速です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;並列処理は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;mclapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を介して利用できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（MACの場合のみ）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="69666ccf513b6c63b220c5bab38038d7f5ba7ffa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eapply&lt;/code&gt; is like &lt;code&gt;lapply&lt;/code&gt; except that rather than applying a function to every element in a list, it applies a function to every element in an environment. For example if you want to find a list of user defined functions in the global environment:</source>
          <target state="translated">&lt;code&gt;eapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、リスト内のすべての要素に関数を適用するのではなく、環境内のすべての要素に関数を適用することを除いて、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;lapply&lt;/code&gt; に似&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、グローバル環境でユーザー定義関数のリストを検索する場合は、次のようにします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="145f7f696ec9b235bbb9eb97d31ae690a2e8cd1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lapply(vec, f)&lt;/code&gt;: same as &lt;code&gt;sapply&lt;/code&gt;, but output is a list?</source>
          <target state="translated">&lt;code&gt;lapply(vec, f)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と同じ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ですが、出力はリストですか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e47a79ca8f50705eae04d08a05855e48f28178fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lapply&lt;/code&gt; is a &lt;em&gt;list&lt;/em&gt; apply which acts on a list or vector and returns a list.</source>
          <target state="translated">&lt;code&gt;lapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;リスト&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;またはベクターに作用してリストを返す&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;リスト&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;適用です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c50559c0014849672b4098d6e2aa757af7198e51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outer&lt;/code&gt; is a very useful function hidden as a more mundane one. If you read the help for &lt;code&gt;outer&lt;/code&gt; its description says:</source>
          <target state="translated">&lt;code&gt;outer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、よりありふれた機能として隠されている非常に便利な機能です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;outer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のヘルプを読んだ場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、その説明は言う：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0178f3543a8a9f85d794e745a1f90527e86e12e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;plyr&lt;/code&gt; and &lt;code&gt;reshape&lt;/code&gt; functions have replaced almost all of these functions in my every day use. But, also from the Intro to Plyr document:</source>
          <target state="translated">&lt;code&gt;plyr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;reshape&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機能は私の毎日の使用でこれらの機能のほとんどすべて交換しました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、Intro to Plyrドキュメントからも：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e044d92d9bcde4ae7986118ae52a64eda475966d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rapply&lt;/code&gt; is a &lt;em&gt;recursive&lt;/em&gt; apply for nested lists, i.e. lists within lists</source>
          <target state="translated">&lt;code&gt;rapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ネストされたリスト、つまりリスト内のリストに対する&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;再帰的な&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;適用です&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d9a3f2667dede4c96b90ecb4515529c578a08fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sapply(vec, f)&lt;/code&gt;: input is a vector. output is a vector/matrix, where element &lt;code&gt;i&lt;/code&gt; is &lt;code&gt;f(vec[i])&lt;/code&gt;, giving you a matrix if &lt;code&gt;f&lt;/code&gt; has a multi-element output</source>
          <target state="translated">&lt;code&gt;sapply(vec, f)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：入力はベクトルです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;出力はベクトル/行列です。ここで、要素&lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(vec[i])&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に複数要素の出力がある&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合に行列を提供します&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="09aeb2790a51b15796019f862bcf2cb3977be4e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sapply&lt;/code&gt; is a &lt;em&gt;simple&lt;/em&gt;&lt;code&gt;lapply&lt;/code&gt; (function defaults to returning a vector or matrix when possible)</source>
          <target state="translated">&lt;code&gt;sapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;単純な&lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;code&gt;lapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（可能な場合、関数はデフォルトでベクトルまたは行列を返します）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee7019ca56502ec2ab16d6cabf15ca9d8d772a2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tapply(vector, grouping, f)&lt;/code&gt;: output is a matrix/array, where an element in the matrix/array is the value of &lt;code&gt;f&lt;/code&gt; at a grouping &lt;code&gt;g&lt;/code&gt; of the vector, and &lt;code&gt;g&lt;/code&gt; gets pushed to the row/col names</source>
          <target state="translated">&lt;code&gt;tapply(vector, grouping, f)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：出力は行列/配列です。行列/配列の要素&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、ベクトルの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;グループ化&lt;/font&gt; &lt;code&gt;g&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;での&lt;/font&gt;&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の値で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あり、&lt;/font&gt; &lt;code&gt;g&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;は行/列名にプッシュされます&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="433984a78abd2ae11bdb07adf6b9b3d552483da0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tapply&lt;/code&gt; is a &lt;em&gt;tagged&lt;/em&gt; apply where the tags identify the subsets</source>
          <target state="translated">&lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タグ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がサブセットを識別する&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タグ付き&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;適用です&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="207c301123f0f63666b49798c64ed7d15c26ba3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vapply&lt;/code&gt; is a &lt;em&gt;verified apply&lt;/em&gt; (allows the return object type to be prespecified)</source>
          <target state="translated">&lt;code&gt;vapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;検証済みの適用です&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（戻りオブジェクトタイプを事前に指定できます）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="42326709ba82652092b684ba82cf4a02c44e99d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Building the Right Background&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;適切な背景の構築&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c8e30ded3d4ff471478912fc550d39fb9b8996b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Map&lt;/strong&gt; - &lt;em&gt;A wrapper to &lt;code&gt;mapply&lt;/code&gt; with &lt;code&gt;SIMPLIFY = FALSE&lt;/code&gt;, so it is guaranteed to return a list.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;地図&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するためのラッパー&lt;/font&gt;&lt;/font&gt; &lt;code&gt;mapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;SIMPLIFY = FALSE&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、リストを返すことが保証されるようにします。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf6995e1e74f28085c44c0e18650e88b69ff5648" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mnemonics&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Mnemonics&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29de0c71eb0b6b3c270cfbf4c47ee35678cd4dc5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;apply&lt;/strong&gt; - &lt;em&gt;When you want to apply a function to the rows or columns
of a matrix (and higher-dimensional analogues); not generally advisable for data frames as it will coerce to a matrix first.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;適用&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたが行または列行列の（と高次元類似体）に関数を適用したい場合には、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;データフレームは最初に行列に強制変換されるため、通常はお勧めできません。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1198af8398685a4b3eefc736d7feafb39825cc8e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eapply&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;eapply&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12d2547ae09e4b0ff07faff75ca0526451d32fed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;lapply&lt;/strong&gt; - &lt;em&gt;When you want to apply a function to each element of a
list in turn and get a list back.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lapply&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたは順番にリストの各要素に関数を適用し、リストの背中を取得したいときに。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c00f5e94a9b1e2f24f66043142a4cf38a1a05f5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mapply&lt;/strong&gt; - &lt;em&gt;For when you have several data structures (e.g.
vectors, lists) and you want to apply a function to the 1st elements
of each, and then the 2nd elements of each, etc., coercing the result
to a vector/array as in &lt;code&gt;sapply&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mapply&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のようにベクトル/配列に結果を強制するなど、あなたはいくつかのデータ構造（例えばベクトル、リスト）があり、それぞれの第一の要素に関数を適用したいときのために、それぞれの後、第二の要素&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d067d65c0cd420c55ffd94f3737e8af23a5682d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;outer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;outer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7ce9976396e572bbf898147c747a1c5aa4741e4d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;rapply&lt;/strong&gt; - &lt;em&gt;For when you want to apply a function to each element of a &lt;strong&gt;nested list&lt;/strong&gt; structure, recursively.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;rapply&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたは、各要素に関数を適用したいときのために&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、ネストされたリストの&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;再帰的、構造。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8c8b0ffbe4133124c6745b28c16d2efa019260e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;sapply&lt;/strong&gt; - &lt;em&gt;When you want to apply a function to each element of a
list in turn, but you want a &lt;strong&gt;vector&lt;/strong&gt; back, rather than a list.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;sapply&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたは順番にリストの各要素に関数を適用したいのですが、あなたが欲しい&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ベクトル&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バックではなく、リストを。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2ebb5131c5380e27c12e2a66948e7f4e57aa2866" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;sweep&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;sweep&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d99bf971a4f0a4008fe9ed5724dabc1a0860c7e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tapply&lt;/strong&gt; - &lt;em&gt;For when you want to apply a function to &lt;strong&gt;subsets&lt;/strong&gt; of a
vector and the subsets are defined by some other vector, usually a
factor.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tapply&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたがに関数を適用したいときのために&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;サブセット&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ベクトルのサブセットとは、いくつかの他のベクター、通常の要因によって定義されています。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="80e860939fc563a6246284d3aa08a953a68a6364" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vapply&lt;/strong&gt; - &lt;em&gt;When you want to use &lt;code&gt;sapply&lt;/code&gt; but perhaps need to
squeeze some more speed out of your code.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;vapply&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたが使用したい場合は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;おそらくあなたのコードのうち、いくつかのより多くの速度を絞る必要があります。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e3f30b81b210b8622273cfcb66c3ee875d05ce82" translate="yes" xml:space="preserve">
          <source>A factor (of the same length!) defining groups:</source>
          <target state="translated">グループを定義する因子(同じ長さの!)。</target>
        </trans-unit>
        <trans-unit id="e93fc4a676b7817a152cfba7b19f9e4991c23f4f" translate="yes" xml:space="preserve">
          <source>A vector:</source>
          <target state="translated">ベクトルです。</target>
        </trans-unit>
        <trans-unit id="79d3ad25c48ab94802530b2aafd0e91e4c58fde6" translate="yes" xml:space="preserve">
          <source>AGGREGATE</source>
          <target state="translated">AGGREGATE</target>
        </trans-unit>
        <trans-unit id="8549852f07ae3974eae665873a5055c210d41fdf" translate="yes" xml:space="preserve">
          <source>Add up the values in &lt;code&gt;x&lt;/code&gt; within each subgroup defined by &lt;code&gt;y&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;y&lt;/code&gt; で&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義された各サブグループ内の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の値を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;合計し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4224cfeb24c1866eb2605df39795f0b3bba6be98" translate="yes" xml:space="preserve">
          <source>As I've said, the power of &lt;code&gt;by&lt;/code&gt; arises when we can't use &lt;code&gt;tapply&lt;/code&gt;; the following code is one example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すでに述べたように、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のパワーは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用できないときに発生し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次のコードは1つの例です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64c3f5e89864d5e803ba483fadc3c80068321744" translate="yes" xml:space="preserve">
          <source>BY</source>
          <target state="translated">BY</target>
        </trans-unit>
        <trans-unit id="f1374f949a602757ba5a3214eea8511202307a30" translate="yes" xml:space="preserve">
          <source>Can someone explain how to use which one when?</source>
          <target state="translated">誰か、どれがいつどのように使うのか説明してくれませんか?</target>
        </trans-unit>
        <trans-unit id="d4f1e277b3f50dd44168450d74472bce8eef51e2" translate="yes" xml:space="preserve">
          <source>Conceptually, learning &lt;code&gt;plyr&lt;/code&gt; is no more difficult than understanding the base &lt;code&gt;*apply&lt;/code&gt; functions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;概念的には、層を学習&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;することは、基本的な&lt;/font&gt; &lt;code&gt;*apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;理解することと&lt;/font&gt;&lt;/font&gt; &lt;code&gt;plyr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;難しいことではありません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6db1ebd1ead2718580fa3112c20aee1bc9e8f8c6" translate="yes" xml:space="preserve">
          <source>Despite all the great answers here, there are 2 more base functions that deserve to be mentioned, the useful &lt;code&gt;outer&lt;/code&gt; function and the obscure &lt;code&gt;eapply&lt;/code&gt; function</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここでのすべての素晴らしい答えにもかかわらず、言及するに値する2つの基本関数があります。それは、便利な&lt;/font&gt;&lt;/font&gt; &lt;code&gt;outer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数とあいまいな&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24e2e8e5d5b3130b26b46b21382adaa286980dfa" translate="yes" xml:space="preserve">
          <source>Despite the fact (noted in other answers) that much of the functionality of the *apply family is covered by the extremely popular &lt;code&gt;plyr&lt;/code&gt; package, the base functions remain useful and worth knowing.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;* applyファミリーの機能の多くが非常に人気の高い&lt;/font&gt;&lt;/font&gt; &lt;code&gt;plyr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パッケージで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;カバーされているという事実（他の回答に記載）にもかかわらず、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;基本機能は有用であり、知っておく価値があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33323659825b64a6733b2902ea7b878b88bad1d4" translate="yes" xml:space="preserve">
          <source>Each of these behaviors is of course contingent on our function returning vectors or matrices of the same length or dimension.</source>
          <target state="translated">これらの動作は,もちろん,同じ長さや次元のベクトルや行列を返す関数に依存します.</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="ecf13799b713ae6af96db1bafb055b72a7cca7ff" translate="yes" xml:space="preserve">
          <source>First start with &lt;a href=&quot;https://stackoverflow.com/a/7141669/181638&quot;&gt;Joran's excellent answer&lt;/a&gt; -- doubtful anything can better that.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;まず、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/7141669/181638&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ヨランの優れた答え&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から始めましょ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;う。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b294473ce0aa0962dc87681f2d878cf45c74d890" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;vapply&lt;/code&gt;, you basically give R an example of what sort of thing
your function will return, which can save some time coercing returned
values to fit in a single atomic vector.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;vapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、あなたは基本的にRにいくつかの時間の強制変換返された値は、単一の原子のベクトルに収まるように保存することができ一種の事のあなたの関数が返すものの例を与えます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed1209cf19085861ca38eac23b8ec60e42fd6ae7" translate="yes" xml:space="preserve">
          <source>Frankly I don't use this very much but if you are building a lot of packages or create a lot of environments it may come in handy.</source>
          <target state="translated">正直あまり使っていませんが、たくさんのパッケージを作ったり、たくさんの環境を作ったりする場合には便利かもしれません。</target>
        </trans-unit>
        <trans-unit id="073942b33c13b73f2725a206573a0dcee978d7dc" translate="yes" xml:space="preserve">
          <source>From slide 21 of &lt;a href=&quot;http://www.slideshare.net/hadley/plyr-one-data-analytic-strategy&quot;&gt;http://www.slideshare.net/hadley/plyr-one-data-analytic-strategy&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://www.slideshare.net/hadley/plyr-one-data-analytic-strategy&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.slideshare.net/hadley/plyr-one-data-analytic-strategyの&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スライド21から&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c72217386986d91197e347e5cf75dbd99553d217" translate="yes" xml:space="preserve">
          <source>Grouping functions (tapply, by, aggregate) and the *apply family</source>
          <target state="translated">グループ化関数 (tapply,by,aggregate)および *apply ファミリー</target>
        </trans-unit>
        <trans-unit id="e5d0966f8344de9f19376feea4a6c7ddda3858c0" translate="yes" xml:space="preserve">
          <source>However, I've never quite understood the differences between them -- how {&lt;code&gt;sapply&lt;/code&gt;, &lt;code&gt;lapply&lt;/code&gt;, etc.} apply the function to the input/grouped input, what the output will look like, or even what the input can be -- so I often just go through them all until I get what I want.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、それらの違いをまったく理解していません-{ &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;lapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;など}が関数を入力/グループ化された入力にどのように適用するか、出力がどのように見えるか、または入力がどうなるかさえ-なので、私はしばしば私が欲しいものを手に入れるまでそれらすべてを通り抜けます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="42344cf5262eeb706b5515265fc86a0aa582d9c0" translate="yes" xml:space="preserve">
          <source>I have personally used this when I have a vector of values and a vector of conditions and wish to see which values meet which conditions.</source>
          <target state="translated">個人的には、値のベクトルと条件のベクトルを持っていて、どの値がどの条件に合致するかを確認したいときに使っています。</target>
        </trans-unit>
        <trans-unit id="1616091eeaec0b858a60df43b33f5b43bf2c762c" translate="yes" xml:space="preserve">
          <source>I have tested two different functions &lt;code&gt;sum&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; at once. Volume tested is 50M on input and 50K on output. I have also included two currently popular packages which were not widely used at the time when question was asked, &lt;code&gt;data.table&lt;/code&gt; and &lt;code&gt;dplyr&lt;/code&gt;. Both are definitely worth to look if you are aiming for good performance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2つの異なる関数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sum&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;length&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を一度に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テストし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テストされたボリュームは、入力で50M、出力で50Kです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、質問時に当時あまり使用されていなかった2つの現在人気のあるパッケージ、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;data.table&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;dplyr&lt;/code&gt; も含めました&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたが良いパフォーマンスを目指しているなら、どちらも間違いなく見る価値があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2880bd00f7e6e0e7bb78e5e543b7b5d33f3f1fbc" translate="yes" xml:space="preserve">
          <source>I recently discovered the rather useful &lt;code&gt;sweep&lt;/code&gt; function and add it here for the sake of completeness:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は最近、かなり便利な&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sweep&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;発見し、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;完全を期すためにここに追加しました。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0c92455fd0191ce3ccc4a0d791e69bfc8d5887b8" translate="yes" xml:space="preserve">
          <source>If our function returns a 2 dimensional matrix, &lt;code&gt;sapply&lt;/code&gt; will do essentially the same thing, treating each returned matrix as a single long vector:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数が2次元行列を返す場合、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は基本的に同じことを行い、返された各行列を単一の長いベクトルとして扱います。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f7b3a4b73954723e93956828b57861ad770328c" translate="yes" xml:space="preserve">
          <source>If using the &lt;code&gt;apply&lt;/code&gt; family still feels a bit alien to you, then it might be that you're missing a key point of view.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ファミリ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もまだ少し異質だと感じる場合は、重要な視点が欠けている可能性があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5abe4e2ed64beb50523a33d6e4093877c2c67f0" translate="yes" xml:space="preserve">
          <source>If we print these two objects, &lt;code&gt;ct&lt;/code&gt; and &lt;code&gt;cb&lt;/code&gt;, we &quot;essentially&quot; have the same results and the only differences are in how they are shown and the different &lt;code&gt;class&lt;/code&gt; attributes, respectively &lt;code&gt;by&lt;/code&gt; for &lt;code&gt;cb&lt;/code&gt; and &lt;code&gt;array&lt;/code&gt; for &lt;code&gt;ct&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我々はこれら二つのオブジェクト、印刷する場合は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ct&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;や&lt;/font&gt;&lt;/font&gt; &lt;code&gt;cb&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、我々は「本質的に」同じ結果を持っており、唯一の違いは、彼らが示されている方法であり、異なる&lt;/font&gt;&lt;/font&gt; &lt;code&gt;class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、それぞれ、属性&lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のための&lt;/font&gt;&lt;/font&gt; &lt;code&gt;cb&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のための&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ct&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2dabc0ea31b98cc6bb6ec5dc86bf708089c396f9" translate="yes" xml:space="preserve">
          <source>If you find yourself typing &lt;code&gt;unlist(lapply(...))&lt;/code&gt;, stop and consider
&lt;code&gt;sapply&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;unlist(lapply(...))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;入力していることに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;気付いた&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、停止して&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を検討して &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed1bdb5aececd38b9d2a70d3c52ec1b8f27248ae" translate="yes" xml:space="preserve">
          <source>If you want row/column means or sums for a 2D matrix, be sure to
investigate the highly optimized, lightning-quick &lt;code&gt;colMeans&lt;/code&gt;,
&lt;code&gt;rowMeans&lt;/code&gt;, &lt;code&gt;colSums&lt;/code&gt;, &lt;code&gt;rowSums&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2D行列の行/列の平均または合計が必要な場合は、高度に最適化された、電光石火の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;colMeans&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;rowMeans&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;colSums&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;rowSums&lt;/code&gt; を調べてください&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15ea23a7823b6e40020ff0faabedbdbd40bcd1b7" translate="yes" xml:space="preserve">
          <source>In more advanced uses of &lt;code&gt;sapply&lt;/code&gt; it will attempt to coerce the
result to a multi-dimensional array, if appropriate. For example, if our function returns vectors of the same length, &lt;code&gt;sapply&lt;/code&gt; will use them as columns of a matrix:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;sapply&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;より高度な使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;では、必要に応じて結果を多次元配列に強制しようとします。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、関数が同じ長さのベクトルを返す場合、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はそれらを行列の列として使用します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="434a3c65e8ece3a563c33e6b15ed775ed4d5576e" translate="yes" xml:space="preserve">
          <source>In the &lt;em&gt;collapse&lt;/em&gt; package recently released on CRAN, I have attempted to compress most of the common apply functionality into just 2 functions:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CRANで最近リリースされ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;た&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;折りたたみ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パッケージでは、一般的な適用機能のほとんどを2つの機能に圧縮しようとしました。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26970bbac670d32e9f07402e253eb0c8a43c0efb" translate="yes" xml:space="preserve">
          <source>In the package vignettes I provide benchmarks. Programming with the fast functions is significantly faster than programming with &lt;em&gt;dplyr&lt;/em&gt; or &lt;em&gt;data.table&lt;/em&gt;, especially on smaller data, but also on large data.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パッケージビネットでは、ベンチマークを提供します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;高速関数を使用したプログラミングは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、特に小さなデータだけでなく大きなデータの場合も、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;dplyr&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;data.table&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用した&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プログラミングよりも大幅に高速です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00dccfdeba870780f2b0cf96c9c2b778dfd82d25" translate="yes" xml:space="preserve">
          <source>It is maybe worth mentioning &lt;code&gt;ave&lt;/code&gt;. &lt;code&gt;ave&lt;/code&gt; is &lt;code&gt;tapply&lt;/code&gt;'s friendly cousin. It returns results in a form that you can plug straight back into your data frame.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;ave&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;について言及する価値があるかもしれません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ave&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のフレンドリーないとこです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;データフレームに直接プラグインできる形式で結果を返します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ebcff795ed9ab0a78f5cc86d17b0c716e336492" translate="yes" xml:space="preserve">
          <source>Let's say you have a matrix and want to &lt;a href=&quot;https://en.wikipedia.org/wiki/Standard_score&quot;&gt;standardize&lt;/a&gt; it column-wise:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;マトリックスがあり、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それを列ごと&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Standard_score&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;標準化&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たいと&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d039976874a865c11995a6712a43c9c63bf86472" translate="yes" xml:space="preserve">
          <source>Lists of grouping variables can also be supplied to &lt;code&gt;g&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;グループ化変数のリストを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;g&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に提供することもでき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d3e4fffce1864045760a2239bf4e53ff1ca293ff" translate="yes" xml:space="preserve">
          <source>More complex examples can be handled where the subgroups are defined
by the unique combinations of a list of several factors. &lt;code&gt;tapply&lt;/code&gt; is
similar in spirit to the split-apply-combine functions that are
common in R (&lt;code&gt;aggregate&lt;/code&gt;, &lt;code&gt;by&lt;/code&gt;, &lt;code&gt;ave&lt;/code&gt;, &lt;code&gt;ddply&lt;/code&gt;, etc.) Hence its
black sheep status.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;複数の要因のリストの一意の組み合わせによってサブグループが定義されている場合、より複雑な例を処理できます。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、Rで共通のsplit-apply-combine関数（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;aggregate&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ave&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ddply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;など）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と精神的に似て&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;います。したがって、その黒い羊の状態です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7a97f0d8be41cbc74171ac86598164bcd9398eee" translate="yes" xml:space="preserve">
          <source>My current (probably incorrect/incomplete) understanding is...</source>
          <target state="translated">私の現在の(おそらく不完全な)理解は...</target>
        </trans-unit>
        <trans-unit id="f516ce9423b5a071ff553733359532709f5c0f7f" translate="yes" xml:space="preserve">
          <source>NB: for this simple example the same result can of course be achieved more easily by</source>
          <target state="translated">注:この単純な例では、同じ結果を得るには、もちろん</target>
        </trans-unit>
        <trans-unit id="3c130f124e73d850d56b6eebf19e5d0353c4287a" translate="yes" xml:space="preserve">
          <source>Note that if the first argument is a &lt;code&gt;data frame&lt;/code&gt;, the dispatched function must have a method for that class of objects. For example is we use this code with the &lt;code&gt;mean&lt;/code&gt; function we will have this code that has no sense at all:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初の引数が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;data frame&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合、ディスパッチされた関数には、そのオブジェクトクラスのメソッドが必要です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;mean&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このコードを使用する場合、このコード&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はまったく意味がありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f7117ac513bd9fdafc1565b9e0629cdd8232b7b4" translate="yes" xml:space="preserve">
          <source>On the side note, here is how the various &lt;code&gt;plyr&lt;/code&gt; functions correspond to the base &lt;code&gt;*apply&lt;/code&gt; functions (from the intro to plyr document from the plyr webpage &lt;a href=&quot;http://had.co.nz/plyr/&quot;&gt;http://had.co.nz/plyr/&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;補足として、さまざまな&lt;/font&gt;&lt;/font&gt; &lt;code&gt;plyr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数が基本の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;*apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どのように&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;対応する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かを示し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます（紹介からplyr Webページ&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://had.co.nz/plyr/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://had.co.nz/plyr/の&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; plyrドキュメントまで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2e06015562e0a0a70cb1cfd45183fd40ee0c6321" translate="yes" xml:space="preserve">
          <source>One of the goals of &lt;code&gt;plyr&lt;/code&gt; is to provide consistent naming conventions for each of the functions, encoding the input and output data types in the function name. It also provides consistency in output, in that output from &lt;code&gt;dlply()&lt;/code&gt; is easily passable to &lt;code&gt;ldply()&lt;/code&gt; to produce useful output, etc.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;plyr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の目的の1つは、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数ごとに一貫した命名規則を提供し、入力と出力のデータ型を関数名でエンコードすることです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;dlply()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;からの出力を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ldply（）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に簡単に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ldply()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て有用な出力を生成できるなど&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、出力の一貫性も提供します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d4862e7057c9381bc0cf9bf92dbd66266b2b7fdf" translate="yes" xml:space="preserve">
          <source>Other times the results are the same and the differences are just in the class (and then how it is shown/printed and not only  -- example, how to subset it) object:</source>
          <target state="translated">他の回の結果は同じであり、違いはちょうどクラスである(そして、どのようにそれがshowprintedされているとだけではない-例えば、どのようにそれをサブセットする方法)オブジェクト。</target>
        </trans-unit>
        <trans-unit id="3335ee171d908a3621dc06632d52226f28970963" translate="yes" xml:space="preserve">
          <source>R has many *apply functions which are ably described in the help files (e.g. &lt;code&gt;?apply&lt;/code&gt;). There are enough of them, though, that beginning useRs may have difficulty deciding which one is appropriate for their situation or even remembering them all. They may have a general sense that &quot;I should be using an *apply function here&quot;, but it can be tough to keep them all straight at first.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Rには多くの* apply関数があり、ヘルプファイルに適切に記述されています（例&lt;/font&gt;&lt;/font&gt; &lt;code&gt;?apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、それらの数は十分にありますが、useRの開始時に、どちらが自分の状況に適しているかを判断したり、すべてを覚えたりすることさえ難しい場合があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「ここでは* apply関数を使用する必要がある」という一般的な感覚があるかもしれませんが、最初はすべてをまっすぐにするのは難しい場合があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="530db03a8729816d21b4c56f5bfdaa13a9047253" translate="yes" xml:space="preserve">
          <source>R says that arguments must have the same lengths, say &quot;we want to calculate the &lt;code&gt;summary&lt;/code&gt; of all variable in &lt;code&gt;iris&lt;/code&gt; along the factor &lt;code&gt;Species&lt;/code&gt;&quot;: but R just can't do that because it does not know how to handle.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Rは、引数は同じ長さでなければならない、「&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因子&lt;/font&gt; &lt;code&gt;Species&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;沿った&lt;/font&gt; &lt;code&gt;iris&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;内のすべての変数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;summary&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を計算したい」と言い&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：しかし、Rは処理方法がわからないため、それを行うことができません。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2fed8506c5186d5124e888be6dedecdcc52ee262" translate="yes" xml:space="preserve">
          <source>Related functions &lt;code&gt;tapply&lt;/code&gt; and &lt;code&gt;sweep&lt;/code&gt; have no corresponding function in &lt;code&gt;plyr&lt;/code&gt;, and remain useful. &lt;code&gt;merge&lt;/code&gt; is useful for combining summaries with the original data.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関連する関数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sweep&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;plyr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;対応する関数がない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、有用です。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;merge&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、要約を元のデータと組み合わせる場合に役立ちます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45a795bb11b371dc54a13f074dc06116a2053093" translate="yes" xml:space="preserve">
          <source>Side question: I still haven't learned plyr or reshape -- would &lt;code&gt;plyr&lt;/code&gt; or &lt;code&gt;reshape&lt;/code&gt; replace all of these entirely?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;副次的な質問：私はまだプライヤまたはリシェイプを学んでいません- &lt;/font&gt;&lt;/font&gt; &lt;code&gt;plyr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;reshape&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はこれらすべてを完全に置き換えますか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fa9aa9997dace54ef65cd54cc1e5ecc2d22a7ac1" translate="yes" xml:space="preserve">
          <source>Since I realized that (the very excellent) answers of this post lack of &lt;code&gt;by&lt;/code&gt; and &lt;code&gt;aggregate&lt;/code&gt; explanations. Here is my contribution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私はこの投稿の（非常に優れた）回答に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;aggregate&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;説明&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がないことに気付いたので&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これが私の貢献です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1de8dba368e7754dc199c99b017f5c51265ee8dc" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Syntax:</target>
        </trans-unit>
        <trans-unit id="8eb565cf18da9375134d50e39a4d2ee0132162d7" translate="yes" xml:space="preserve">
          <source>Talking about performance: A main goal of &lt;em&gt;collapse&lt;/em&gt; is to foster high-performance programming in R and to move beyond split-apply-combine alltogether. For this purpose the package has a full set of C++ based fast generic functions: &lt;code&gt;fmean&lt;/code&gt;, &lt;code&gt;fmedian&lt;/code&gt;, &lt;code&gt;fmode&lt;/code&gt;, &lt;code&gt;fsum&lt;/code&gt;, &lt;code&gt;fprod&lt;/code&gt;, &lt;code&gt;fsd&lt;/code&gt;, &lt;code&gt;fvar&lt;/code&gt;, &lt;code&gt;fmin&lt;/code&gt;, &lt;code&gt;fmax&lt;/code&gt;, &lt;code&gt;ffirst&lt;/code&gt;, &lt;code&gt;flast&lt;/code&gt;, &lt;code&gt;fNobs&lt;/code&gt;, &lt;code&gt;fNdistinct&lt;/code&gt;, &lt;code&gt;fscale&lt;/code&gt;, &lt;code&gt;fbetween&lt;/code&gt;, &lt;code&gt;fwithin&lt;/code&gt;, &lt;code&gt;fHDbetween&lt;/code&gt;, &lt;code&gt;fHDwithin&lt;/code&gt;, &lt;code&gt;flag&lt;/code&gt;, &lt;code&gt;fdiff&lt;/code&gt; and &lt;code&gt;fgrowth&lt;/code&gt;. They perform grouped computations in a single pass through the data (i.e. no splitting and recombining).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パフォーマンスについて話す：&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;折りたたみの&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;主な目標は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、Rでの高パフォーマンスプログラミングを促進し、split-apply-combine全体を超えて移動することです。この目的のため、パッケージには、C ++ベースの高速な汎用的な機能の完全なセットがあります。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fmean&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fmedian&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fmode&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fsum&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fprod&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fsd&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fvar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fmin&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fmax&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ffirst&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;flast&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fNobs&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fNdistinct&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fscale&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fbetween&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fwithin&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fHDbetween&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fHDwithin&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;flag&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fdiff&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fgrowth&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらは、データの単一パスでグループ化された計算を実行します（つまり、分割や再結合は行いません）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3d55c46ae1ed01daade9ebc62d6cf653f93d190e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;by&lt;/code&gt; function, as stated in the documentation can be though, as a &quot;wrapper&quot; for &lt;code&gt;tapply&lt;/code&gt;. The power of &lt;code&gt;by&lt;/code&gt; arises when we want to compute a task that &lt;code&gt;tapply&lt;/code&gt; can't handle. One example is this code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機能、ドキュメントに記載されているようにするための「ラッパー」として、しかしすることができ&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;の威力は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;が処理できない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タスクを計算するときに発生し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1つの例は次のコードです。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="93a484a54e5fe0c3929cb845a2d6aacfc398df74" translate="yes" xml:space="preserve">
          <source>The basic idea is to &lt;em&gt;sweep&lt;/em&gt; through an array row- or column-wise and return a modified array. An example will make this clear (source: &lt;a href=&quot;https://www.datacamp.com/community/tutorials/r-tutorial-apply-family#sweep&quot;&gt;datacamp&lt;/a&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;基本的な考え方は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、配列を行方向または列方向&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スイープ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;し、変更された配列を返すことです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例はこれを明確にします（ソース：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.datacamp.com/community/tutorials/r-tutorial-apply-family#sweep&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;datacamp&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="82d8d02c0ed4a6810f4dd3955969e3d43090cb10" translate="yes" xml:space="preserve">
          <source>The black sheep of the *apply family, of sorts. The help file's use of
the phrase &quot;ragged array&quot; can be a bit &lt;a href=&quot;https://stackoverflow.com/questions/6297201/explain-r-tapply-description/6297396#6297396&quot;&gt;confusing&lt;/a&gt;, but it is actually
quite simple.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ある種の* applyファミリーの黒い羊。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ヘルプファイルで「不規則な配列」という語句を使用することは少し&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/6297201/explain-r-tapply-description/6297396#6297396&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;わかりにくい&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かもしれませんが、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際には非常に簡単です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0c01b5f7fdcc71df01dc8c4f5f05d40a3e1eee17" translate="yes" xml:space="preserve">
          <source>The power of &lt;code&gt;aggregate&lt;/code&gt; is that it can handle easily subsets of the data with &lt;code&gt;subset&lt;/code&gt; argument and that it has methods for &lt;code&gt;ts&lt;/code&gt; objects and &lt;code&gt;formula&lt;/code&gt; as well.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;aggregate&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の力は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;subset&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引数を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用してデータのサブセットを簡単に処理できること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ts&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトと&lt;/font&gt;&lt;/font&gt; &lt;code&gt;formula&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドも備えていること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00bd4bf27baabf01d43614bbd4bd0e753b25be1c" translate="yes" xml:space="preserve">
          <source>The previous code achieve the same goal and results, at some points what tool to use is just a matter of personal tastes and needs; the previous two objects have very different needs in terms of subsetting.</source>
          <target state="translated">前のコードは同じ目標と結果を達成し、どのようなツールを使用するかは、いくつかの点で個人の好みとニーズの問題です。</target>
        </trans-unit>
        <trans-unit id="ff50cd936792cdfecf5569c5eb84da9de69695e6" translate="yes" xml:space="preserve">
          <source>The two immediate differences are that the second argument of &lt;code&gt;aggregate&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a list while &lt;code&gt;tapply&lt;/code&gt;&lt;strong&gt;can&lt;/strong&gt; (not mandatory) be a list and that the output of &lt;code&gt;aggregate&lt;/code&gt; is a data frame while the one of &lt;code&gt;tapply&lt;/code&gt; is an &lt;code&gt;array&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2つの即時の違いは、第二引数ということである&lt;/font&gt;&lt;/font&gt; &lt;code&gt;aggregate&lt;/code&gt; &lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なければならない&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しながらリストで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;缶&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（必須ではないが）リストでの出力こと&lt;/font&gt;&lt;/font&gt; &lt;code&gt;aggregate&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の中にデータフレームで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; が&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ある&lt;/font&gt;&lt;/font&gt; &lt;code&gt;array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95f18985a9146ebd5676f6d37f21b74fa58ebb7d" translate="yes" xml:space="preserve">
          <source>Then the following mnemonics may help to remember the distinctions between each.  Whilst some are obvious, others may be less so --- for these you'll find justification in Joran's discussions.</source>
          <target state="translated">では、以下のようなニーモニックを使えば、それぞれの区別を覚えるのに役立つかもしれない。明らかなものもあれば、そうでないものもあります。</target>
        </trans-unit>
        <trans-unit id="7fb37b5972193434f7631f5c36e1b6681d47e80e" translate="yes" xml:space="preserve">
          <source>There are lots of great answers which discuss differences in the use cases for each function. None of the answer discuss the differences in performance. That is reasonable cause various functions expects various input and produces various output, yet most of them have a general common objective to evaluate by series/groups. My answer is going to focus on performance. Due to above the input creation from the vectors is included in the timing, also the &lt;code&gt;apply&lt;/code&gt; function is not measured.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;各関数のユースケースの違いを説明する素晴らしい答えがたくさんあります。パフォーマンスの違いについては、どの回答でも説明されていません。これは合理的な原因です。さまざまな関数がさまざまな入力を期待し、さまざまな出力を生成しますが、それらのほとんどはシリーズ/グループで評価する一般的な共通の目的を持っています。私の答えはパフォーマンスに焦点を当てます。上記のため、ベクトルからの入力作成はタイミングに含まれているため、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機能&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;測定されません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a070d9cc3861b0056b5615076e7516700314305a" translate="yes" xml:space="preserve">
          <source>There are other times when we can't use &lt;code&gt;by&lt;/code&gt; or &lt;code&gt;tapply&lt;/code&gt; and we have to use &lt;code&gt;aggregate&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用できず、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;aggregate&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用しなければ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ならない場合もあります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91b368884977357baae35ac63f30b5b6162707b9" translate="yes" xml:space="preserve">
          <source>There is nothing in the base package that works like &lt;code&gt;ave&lt;/code&gt; for whole data frames (as &lt;code&gt;by&lt;/code&gt; is like &lt;code&gt;tapply&lt;/code&gt; for data frames). But you can fudge it:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;基本パッケージには何ものように動作することはありません&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ave&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（と全体のデータフレームのため&lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ようなものです&lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;データフレームの場合）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、それをファッジすることができます：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="889cf5792e268bf7d2415a5e11d6c799acb65f3a" translate="yes" xml:space="preserve">
          <source>These elements make &lt;code&gt;aggregate&lt;/code&gt; easier to work with that &lt;code&gt;tapply&lt;/code&gt; in some situations.
Here are some examples (available in documentation):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらの要素により&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、状況&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、その&lt;/font&gt;&lt;/font&gt; &lt;code&gt;aggregate&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;簡単に操作できるようになり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここにいくつかの例があります（ドキュメントで利用可能）：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45ac14c6e218241ef740fdd9066b2edc6f9764fd" translate="yes" xml:space="preserve">
          <source>These two articles can help.  They provide the necessary background to motivate the &lt;strong&gt;functional programming techniques&lt;/strong&gt; that are being provided by the &lt;code&gt;apply&lt;/code&gt; family of functions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらの2つの記事が役立ちます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ファミリーの関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;によって提供されている&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数型プログラミング手法&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を動機付けるために必要な背景を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;提供し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="07a01588cf3c6d8303d1a01dea0a8191d306661b" translate="yes" xml:space="preserve">
          <source>This answer is intended to act as a sort of &lt;strong&gt;signpost&lt;/strong&gt; for new useRs to help direct them to the correct *apply function for their particular problem. Note, this is &lt;strong&gt;not&lt;/strong&gt; intended to simply regurgitate or replace the R documentation! The hope is that this answer helps you to decide which *apply function suits your situation and then it is up to you to research it further. With one exception, performance differences will not be addressed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この回答は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、新しいuseRの特定の問題に対する正しい* apply関数に誘導するための&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一種の&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;道標&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;として機能することを目的と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、Rのドキュメントを単に逆流させたり、置き換えたりするためのもので&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はあり&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ません&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この答えが、どの*適用関数が自分の状況に適しているかを判断するのに役立ち、その後さらに調査するのはあなた次第です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1つの例外を除いて、パフォーマンスの違いは解決されません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bc6b9a04ef0933b1d61766035ff2aad0fe9eb0c1" translate="yes" xml:space="preserve">
          <source>This is multivariate in the sense that your function must accept
multiple arguments.</source>
          <target state="translated">これは、関数が複数の引数を受け入れなければならないという意味で多変量です。</target>
        </trans-unit>
        <trans-unit id="27d6d56a0781cf20793578d341bb9f60dd695fa0" translate="yes" xml:space="preserve">
          <source>This is the workhorse of many of the other *apply functions. Peel
back their code and you will often find &lt;code&gt;lapply&lt;/code&gt; underneath.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、他の* apply関数の多くの主力です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;彼らのコードの皮をむくと、しばしば&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その下に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;lapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が見つかり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0d671dba14e38455b370b123be9e8115cdf6e718" translate="yes" xml:space="preserve">
          <source>To give you some idea of how uncommon &lt;code&gt;rapply&lt;/code&gt; is, I forgot about it when first posting this answer! Obviously, I'm sure many people use it, but YMMV. &lt;code&gt;rapply&lt;/code&gt; is best illustrated with a user-defined function to apply:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;rapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いかに珍しいかを理解するため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に、最初にこの回答を投稿したときに忘れていました！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もちろん、多くの人が使っていると思いますが、YMMVです。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;rapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、適用するユーザー定義関数で最もよく説明されています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f5a6338cd0aa36bf20caa2b8dc6859a24608fa2" translate="yes" xml:space="preserve">
          <source>Unless we specify &lt;code&gt;simplify = &quot;array&quot;&lt;/code&gt;, in which case it will use the individual matrices to build a multi-dimensional array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Simple &lt;/font&gt;&lt;/font&gt; &lt;code&gt;simplify = &quot;array&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を指定しない限り&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、その場合、個々の行列を使用して多次元配列を構築します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2acebbc0c80ee9801997ba55780979a3feca8225" translate="yes" xml:space="preserve">
          <source>Users of Lisp will recognise the paradigm immediately.  If you're not familiar with Lisp, once you get your head around FP, you'll have gained a powerful point of view for use in R -- and &lt;code&gt;apply&lt;/code&gt; will make a lot more sense.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lispのユーザーはパラダイムをすぐに認識します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたはLispのに慣れていない場合は、FPの周りにあなたの頭を得れば、あなたはRで使用するためのビューの強力なポイントを獲得しているだろう-と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、より多くの意味を行います。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="96c64a0347495d732ced31bb04703b745a007077" translate="yes" xml:space="preserve">
          <source>We can achieve the same with &lt;code&gt;tapply&lt;/code&gt; but the syntax is slightly harder and the output (in some circumstances) less readable:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でも同じことができ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ますが、構文が少し難しくなり、（状況によっては）出力が読みにくくなります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2352db4d026fa42d2f845891f273c6e4fcc50735" translate="yes" xml:space="preserve">
          <source>We cannot obtain the previous result with &lt;code&gt;tapply&lt;/code&gt; in one call but we have to calculate the mean along &lt;code&gt;Month&lt;/code&gt; for each elements and then combine them (also note that we have to call the &lt;code&gt;na.rm = TRUE&lt;/code&gt;, because the &lt;code&gt;formula&lt;/code&gt; methods of the &lt;code&gt;aggregate&lt;/code&gt; function has by default the &lt;code&gt;na.action = na.omit&lt;/code&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1回の呼び出し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して以前の結果を取得することはできませんが、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;各要素の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Month&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;沿った平均を計算し、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それらを結合する必要があります（また&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;aggregate&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数の&lt;/font&gt; &lt;code&gt;formula&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;na.rm = TRUE&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を呼び出す必要があることに注意してください）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デフォルトでは&lt;/font&gt; &lt;code&gt;na.action = na.omit&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;）があります：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9ebc773ba5f40884a865cf1d4d35666a7d2e89fb" translate="yes" xml:space="preserve">
          <source>Whenever I want to do something &quot;map&quot;py in R, I usually try to use a function in the &lt;code&gt;apply&lt;/code&gt; family.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Rで「マップ」pyを実行したいときはいつでも、通常、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ファミリーの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数を使用しようとします&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3c80fabfd63e474afefbef9c6dc99569b9f74aa8" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;by&lt;/code&gt; function R dispatch a specific method for &lt;code&gt;data frame&lt;/code&gt; class and then let the &lt;code&gt;summary&lt;/code&gt; function works even if the length of the first argument (and the type too) are different.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数Rのための特定の方法ディスパッチ&lt;/font&gt; &lt;code&gt;data frame&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスを、次いでせ&lt;/font&gt; &lt;code&gt;summary&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数は最初の引数の長さ（及びすぎるタイプ）が異なっていても機能します。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2119474583938219f9f95e55acfc503bb5d49dea" translate="yes" xml:space="preserve">
          <source>it works indeed and the result is very surprising. It is an object of class &lt;code&gt;by&lt;/code&gt; that along &lt;code&gt;Species&lt;/code&gt; (say, for each of them) computes the &lt;code&gt;summary&lt;/code&gt; of each variable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それは確かに機能し、結果は非常に驚くべきものです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、&lt;/font&gt; &lt;code&gt;Species&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;沿って&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（たとえば、それぞれについて）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;各変数の&lt;/font&gt; &lt;code&gt;summary&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;計算する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;こと&lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスのオブジェクト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b659bcabd2a34ac09355cbf90d5a44ba30486e6a" translate="yes" xml:space="preserve">
          <source>which makes it seem like this is only useful for linear algebra type things.  However, it can be used much like &lt;code&gt;mapply&lt;/code&gt; to apply a function to two vectors of inputs. The difference is that &lt;code&gt;mapply&lt;/code&gt; will apply the function to the first two elements and then the second two etc, whereas &lt;code&gt;outer&lt;/code&gt; will apply the function to every combination of one element from the first vector and one from the second. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、線形代数型のものにのみ有用であるように見えます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;mapply&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ように使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、2つの入力ベクトルに関数を適用できます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;違いは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;mapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が最初の2つの要素に関数を適用し、次に2番目の2つに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数を適用する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などです。一方、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;outer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は最初のベクトル&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の1つの要素と2番目の要素の1つの要素の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての組み合わせに関数を適用します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例えば：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea18e6950071047d016564a4bff9f0e224ebe7de" translate="yes" xml:space="preserve">
          <source>while with &lt;code&gt;by&lt;/code&gt; we just can't achieve that in fact the following function call returns an error (but most likely it is related to the supplied function, &lt;code&gt;mean&lt;/code&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;間&lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、我々はただ実際には、次の関数呼び出しがエラーを返します（ただし、ほとんどの場合、それが供給機能に関連している、ということを達成することはできません&lt;/font&gt;&lt;/font&gt; &lt;code&gt;mean&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
