<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/3505701">
    <body>
      <group id="3505701">
        <trans-unit id="1805a7f5ffc6ff186f180d0af446a8415528fbc8" translate="yes" xml:space="preserve">
          <source>(Hopefully it's clear that &lt;code&gt;apply&lt;/code&gt; corresponds to @Hadley's &lt;code&gt;aaply&lt;/code&gt; and &lt;code&gt;aggregate&lt;/code&gt; corresponds to @Hadley's &lt;code&gt;ddply&lt;/code&gt; etc. Slide 20 of the same slideshare will clarify if you don't get it from this image.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Con suerte, est&amp;aacute; claro que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; corresponde a @ de Hadley &lt;/font&gt;&lt;/font&gt; &lt;code&gt;aaply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;aggregate&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; corresponde a @ de Hadley &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ddply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de diapositivas, etc. 20 de la misma slideshare aclarar&amp;aacute; si no la obtiene de esta imagen.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b8dcc2930de696ff7d1ab6a5c456f21daeed461" translate="yes" xml:space="preserve">
          <source>(on the left is input, on the top is output)</source>
          <target state="translated">(a la izquierda es la entrada,en la parte superior es la salida)</target>
        </trans-unit>
        <trans-unit id="f1953e60a38f21655f8f051ed21c335abb9c46d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://adv-r.had.co.nz/Functional-programming.html&quot;&gt;Advanced R: Functional Programming&lt;/a&gt;, by Hadley Wickham</source>
          <target state="translated">&lt;a href=&quot;http://adv-r.had.co.nz/Functional-programming.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;R avanzado: programaci&amp;oacute;n funcional&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , por Hadley Wickham&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="792419730656e483005ae7e0a7cf2155988f50bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.bioinformaticszen.com/post/simple-functional-programming-in-r/&quot;&gt;Simple Functional Programming in R&lt;/a&gt;, by Michael Barton</source>
          <target state="translated">&lt;a href=&quot;http://www.bioinformaticszen.com/post/simple-functional-programming-in-r/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Programaci&amp;oacute;n funcional simple en R&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , por Michael Barton&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2bc5cefb965abb614acd13a24b43b58311cd227d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BY&lt;/code&gt; is a S3 generic for split-apply-combine computing with vector, matrix and data.frame method. It is significantly faster than &lt;code&gt;tapply&lt;/code&gt;, &lt;code&gt;by&lt;/code&gt; and &lt;code&gt;aggregate&lt;/code&gt; (an also faster than &lt;code&gt;plyr&lt;/code&gt;, on large data &lt;code&gt;dplyr&lt;/code&gt; is faster though).</source>
          <target state="translated">&lt;code&gt;BY&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es un gen&amp;eacute;rico S3 para la computaci&amp;oacute;n dividida-aplicada-combinada con el m&amp;eacute;todo de vector, matriz y data.frame. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es significativamente m&amp;aacute;s r&amp;aacute;pido que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;aggregate&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;agregado&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (y tambi&amp;eacute;n m&amp;aacute;s r&amp;aacute;pido que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;plyr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , sin &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;embargo&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;dplyr&lt;/code&gt; de&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; datos &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;grandes&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es m&amp;aacute;s r&amp;aacute;pido).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43f5a570136985c02d6c8f681abb33bebc26adbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggregate(matrix, grouping, f)&lt;/code&gt;: similar to &lt;code&gt;by&lt;/code&gt;, but instead of pretty printing the output, aggregate sticks everything into a dataframe.</source>
          <target state="translated">&lt;code&gt;aggregate(matrix, grouping, f)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : similar a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero en lugar de imprimir bastante la salida, el agregado pega todo en un marco de datos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5ba4b592d998cc6de1829427766fa2cca43f789c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggregate&lt;/code&gt; can be seen as another a different way of use &lt;code&gt;tapply&lt;/code&gt; if we use it in such a way.</source>
          <target state="translated">&lt;code&gt;aggregate&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; puede verse como otra forma diferente de usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; si lo usamos de esa manera.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="40a096807c9e596e07eb21425ccd8e3066107e18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apply(matrix, 1/2, f)&lt;/code&gt;: input is a matrix. output is a vector, where element &lt;code&gt;i&lt;/code&gt; is f(row/col i of the matrix)</source>
          <target state="translated">&lt;code&gt;apply(matrix, 1/2, f)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : la entrada es una matriz. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la salida es un vector, donde el elemento &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es f (fila / col i de la matriz)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f6ab4aaedbf3874858bbe6f9c2d96f9690e522e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apply&lt;/code&gt;  is  &lt;em&gt;generic&lt;/em&gt;: applies a function to a matrix's rows or columns (or, more generally, to dimensions of an array)</source>
          <target state="translated">&lt;code&gt;apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;gen&amp;eacute;rico&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : aplica una funci&amp;oacute;n a las filas o columnas de una matriz (o, m&amp;aacute;s generalmente, a las dimensiones de una matriz)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="795b46afd6c85bb3c35d17a3f08a78606bb094de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;by(dataframe, grouping, f)&lt;/code&gt;: let &lt;code&gt;g&lt;/code&gt; be a grouping. apply &lt;code&gt;f&lt;/code&gt; to each column of the group/dataframe. pretty print the grouping and the value of &lt;code&gt;f&lt;/code&gt; at each column.</source>
          <target state="translated">&lt;code&gt;by(dataframe, grouping, f)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : sea &lt;/font&gt;&lt;/font&gt; &lt;code&gt;g&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; una agrupaci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aplique &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a cada columna del grupo / marco de datos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Imprime la agrupaci&amp;oacute;n y el valor de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en cada columna.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="52ff4d6800d1dd0c3e6955b2e567c66e5c73b827" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dapply&lt;/code&gt; (Data-Apply) applies functions to rows or (default) columns of matrices and data.frames and (default) returns an object of the same type and with the same attributes (unless the result of each computation is atomic and &lt;code&gt;drop = TRUE&lt;/code&gt;). The performance is comparable to &lt;code&gt;lapply&lt;/code&gt; for data.frame columns, and about 2x faster than &lt;code&gt;apply&lt;/code&gt; for matrix rows or columns. Parallelism is available via &lt;code&gt;mclapply&lt;/code&gt; (only for MAC).</source>
          <target state="translated">&lt;code&gt;dapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (Data-Apply) aplica funciones a filas o columnas (por defecto) de matrices y data.frames y (por defecto) devuelve un objeto del mismo tipo y con los mismos atributos (a menos que el resultado de cada c&amp;aacute;lculo sea at&amp;oacute;mico y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;drop = TRUE&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El rendimiento es comparable al &lt;/font&gt;&lt;/font&gt; &lt;code&gt;lapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para las columnas data.frame, y aproximadamente 2 veces m&amp;aacute;s r&amp;aacute;pido que el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para las filas o columnas de la matriz. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El paralelismo est&amp;aacute; disponible a trav&amp;eacute;s de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;mclapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (solo para MAC).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="69666ccf513b6c63b220c5bab38038d7f5ba7ffa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eapply&lt;/code&gt; is like &lt;code&gt;lapply&lt;/code&gt; except that rather than applying a function to every element in a list, it applies a function to every element in an environment. For example if you want to find a list of user defined functions in the global environment:</source>
          <target state="translated">&lt;code&gt;eapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;lapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; excepto que en lugar de aplicar una funci&amp;oacute;n a cada elemento de una lista, aplica una funci&amp;oacute;n a cada elemento en un entorno. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo, si desea encontrar una lista de funciones definidas por el usuario en el entorno global:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="145f7f696ec9b235bbb9eb97d31ae690a2e8cd1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lapply(vec, f)&lt;/code&gt;: same as &lt;code&gt;sapply&lt;/code&gt;, but output is a list?</source>
          <target state="translated">&lt;code&gt;lapply(vec, f)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : igual que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero la salida es una lista?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e47a79ca8f50705eae04d08a05855e48f28178fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lapply&lt;/code&gt; is a &lt;em&gt;list&lt;/em&gt; apply which acts on a list or vector and returns a list.</source>
          <target state="translated">&lt;code&gt;lapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aplicaci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lista&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que act&amp;uacute;a en una lista o vector y devuelve una lista.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c50559c0014849672b4098d6e2aa757af7198e51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outer&lt;/code&gt; is a very useful function hidden as a more mundane one. If you read the help for &lt;code&gt;outer&lt;/code&gt; its description says:</source>
          <target state="translated">&lt;code&gt;outer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una funci&amp;oacute;n muy &amp;uacute;til oculta como una m&amp;aacute;s mundana. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si lees la ayuda para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;outer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; su descripci&amp;oacute;n dice:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0178f3543a8a9f85d794e745a1f90527e86e12e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;plyr&lt;/code&gt; and &lt;code&gt;reshape&lt;/code&gt; functions have replaced almost all of these functions in my every day use. But, also from the Intro to Plyr document:</source>
          <target state="translated">&lt;code&gt;plyr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reshape&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funciones han reemplazado casi todas estas funciones en cada uno de mis d&amp;iacute;as utilizaci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero, tambi&amp;eacute;n del documento de Introducci&amp;oacute;n a Plyr:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e044d92d9bcde4ae7986118ae52a64eda475966d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rapply&lt;/code&gt; is a &lt;em&gt;recursive&lt;/em&gt; apply for nested lists, i.e. lists within lists</source>
          <target state="translated">&lt;code&gt;rapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;solicitud &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;recursiva&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para listas anidadas, es decir, listas dentro de listas&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d9a3f2667dede4c96b90ecb4515529c578a08fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sapply(vec, f)&lt;/code&gt;: input is a vector. output is a vector/matrix, where element &lt;code&gt;i&lt;/code&gt; is &lt;code&gt;f(vec[i])&lt;/code&gt;, giving you a matrix if &lt;code&gt;f&lt;/code&gt; has a multi-element output</source>
          <target state="translated">&lt;code&gt;sapply(vec, f)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : la entrada es un vector. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la salida es un vector / matriz, donde el elemento &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(vec[i])&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que le da una matriz si &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene una salida de elementos m&amp;uacute;ltiples&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="09aeb2790a51b15796019f862bcf2cb3977be4e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sapply&lt;/code&gt; is a &lt;em&gt;simple&lt;/em&gt;&lt;code&gt;lapply&lt;/code&gt; (function defaults to returning a vector or matrix when possible)</source>
          <target state="translated">&lt;code&gt;sapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es un &lt;/font&gt; &lt;code&gt;lapply&lt;/code&gt; &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;simple&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (la funci&amp;oacute;n por defecto es devolver un vector o matriz cuando sea posible)&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee7019ca56502ec2ab16d6cabf15ca9d8d772a2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tapply(vector, grouping, f)&lt;/code&gt;: output is a matrix/array, where an element in the matrix/array is the value of &lt;code&gt;f&lt;/code&gt; at a grouping &lt;code&gt;g&lt;/code&gt; of the vector, and &lt;code&gt;g&lt;/code&gt; gets pushed to the row/col names</source>
          <target state="translated">&lt;code&gt;tapply(vector, grouping, f)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : la salida es una matriz / matriz, donde un elemento en la matriz / matriz es el valor de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en una agrupaci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;g&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; del vector, y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;g&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es empujado a los nombres de fila / columna&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="433984a78abd2ae11bdb07adf6b9b3d552483da0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tapply&lt;/code&gt; is a &lt;em&gt;tagged&lt;/em&gt; apply where the tags identify the subsets</source>
          <target state="translated">&lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aplicaci&amp;oacute;n &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;etiquetada&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; donde las etiquetas identifican los subconjuntos&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="207c301123f0f63666b49798c64ed7d15c26ba3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vapply&lt;/code&gt; is a &lt;em&gt;verified apply&lt;/em&gt; (allows the return object type to be prespecified)</source>
          <target state="translated">&lt;code&gt;vapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aplicaci&amp;oacute;n verificada&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (permite que el tipo de objeto de retorno se especifique previamente)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="42326709ba82652092b684ba82cf4a02c44e99d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Building the Right Background&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Construyendo el fondo correcto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c8e30ded3d4ff471478912fc550d39fb9b8996b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Map&lt;/strong&gt; - &lt;em&gt;A wrapper to &lt;code&gt;mapply&lt;/code&gt; with &lt;code&gt;SIMPLIFY = FALSE&lt;/code&gt;, so it is guaranteed to return a list.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mapa&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;un contenedor para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;mapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; con &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SIMPLIFY &lt;/font&gt;&lt;/font&gt; &lt;code&gt;SIMPLIFY = FALSE&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , por lo que se garantiza que devolver&amp;aacute; una lista.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf6995e1e74f28085c44c0e18650e88b69ff5648" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mnemonics&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Mnemonics&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29de0c71eb0b6b3c270cfbf4c47ee35678cd4dc5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;apply&lt;/strong&gt; - &lt;em&gt;When you want to apply a function to the rows or columns
of a matrix (and higher-dimensional analogues); not generally advisable for data frames as it will coerce to a matrix first.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aplicar&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cuando desea aplicar una funci&amp;oacute;n a las filas o columnas de una matriz (y an&amp;aacute;logos de dimensiones superiores); &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;generalmente no es aconsejable para marcos de datos, ya que primero se convertir&amp;aacute; en una matriz.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1198af8398685a4b3eefc736d7feafb39825cc8e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eapply&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;eapply&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12d2547ae09e4b0ff07faff75ca0526451d32fed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;lapply&lt;/strong&gt; - &lt;em&gt;When you want to apply a function to each element of a
list in turn and get a list back.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lapply&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cuando desea aplicar una funci&amp;oacute;n a cada elemento de una lista y recuperar una lista.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c00f5e94a9b1e2f24f66043142a4cf38a1a05f5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mapply&lt;/strong&gt; - &lt;em&gt;For when you have several data structures (e.g.
vectors, lists) and you want to apply a function to the 1st elements
of each, and then the 2nd elements of each, etc., coercing the result
to a vector/array as in &lt;code&gt;sapply&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mapply&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;para cuando tiene varias estructuras de datos (por ejemplo, vectores, listas) y desea aplicar una funci&amp;oacute;n a los primeros elementos de cada uno, y luego a los segundos elementos de cada uno, etc., coaccionando el resultado a un vector / matriz como en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d067d65c0cd420c55ffd94f3737e8af23a5682d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;outer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;outer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7ce9976396e572bbf898147c747a1c5aa4741e4d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;rapply&lt;/strong&gt; - &lt;em&gt;For when you want to apply a function to each element of a &lt;strong&gt;nested list&lt;/strong&gt; structure, recursively.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;rapply&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;para cuando desea aplicar una funci&amp;oacute;n a cada elemento de una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;estructura de &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lista anidada&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , de forma recursiva.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8c8b0ffbe4133124c6745b28c16d2efa019260e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;sapply&lt;/strong&gt; - &lt;em&gt;When you want to apply a function to each element of a
list in turn, but you want a &lt;strong&gt;vector&lt;/strong&gt; back, rather than a list.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;sapply&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cuando desea aplicar una funci&amp;oacute;n a cada elemento de una lista, pero desea &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;recuperar &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;un &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;vector&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , en lugar de una lista.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2ebb5131c5380e27c12e2a66948e7f4e57aa2866" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;sweep&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;sweep&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d99bf971a4f0a4008fe9ed5724dabc1a0860c7e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tapply&lt;/strong&gt; - &lt;em&gt;For when you want to apply a function to &lt;strong&gt;subsets&lt;/strong&gt; of a
vector and the subsets are defined by some other vector, usually a
factor.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tapply&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;para cuando desea aplicar una funci&amp;oacute;n a &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;subconjuntos&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de un vector y los subconjuntos est&amp;aacute;n definidos por alg&amp;uacute;n otro vector, generalmente un factor.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="80e860939fc563a6246284d3aa08a953a68a6364" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vapply&lt;/strong&gt; - &lt;em&gt;When you want to use &lt;code&gt;sapply&lt;/code&gt; but perhaps need to
squeeze some more speed out of your code.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;vapply&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cuando desea usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pero tal vez necesite exprimir un poco m&amp;aacute;s la velocidad de su c&amp;oacute;digo.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e3f30b81b210b8622273cfcb66c3ee875d05ce82" translate="yes" xml:space="preserve">
          <source>A factor (of the same length!) defining groups:</source>
          <target state="translated">Un factor (¡de la misma longitud!)que define los grupos:</target>
        </trans-unit>
        <trans-unit id="e93fc4a676b7817a152cfba7b19f9e4991c23f4f" translate="yes" xml:space="preserve">
          <source>A vector:</source>
          <target state="translated">Un vector:</target>
        </trans-unit>
        <trans-unit id="79d3ad25c48ab94802530b2aafd0e91e4c58fde6" translate="yes" xml:space="preserve">
          <source>AGGREGATE</source>
          <target state="translated">AGGREGATE</target>
        </trans-unit>
        <trans-unit id="8549852f07ae3974eae665873a5055c210d41fdf" translate="yes" xml:space="preserve">
          <source>Add up the values in &lt;code&gt;x&lt;/code&gt; within each subgroup defined by &lt;code&gt;y&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sume los valores en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; dentro de cada subgrupo definido por &lt;/font&gt;&lt;/font&gt; &lt;code&gt;y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4224cfeb24c1866eb2605df39795f0b3bba6be98" translate="yes" xml:space="preserve">
          <source>As I've said, the power of &lt;code&gt;by&lt;/code&gt; arises when we can't use &lt;code&gt;tapply&lt;/code&gt;; the following code is one example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como he dicho, el poder de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; surge cuando no podemos usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El siguiente c&amp;oacute;digo es un ejemplo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64c3f5e89864d5e803ba483fadc3c80068321744" translate="yes" xml:space="preserve">
          <source>BY</source>
          <target state="translated">BY</target>
        </trans-unit>
        <trans-unit id="f1374f949a602757ba5a3214eea8511202307a30" translate="yes" xml:space="preserve">
          <source>Can someone explain how to use which one when?</source>
          <target state="translated">¿Alguien puede explicar cómo usar cuál y cuándo?</target>
        </trans-unit>
        <trans-unit id="d4f1e277b3f50dd44168450d74472bce8eef51e2" translate="yes" xml:space="preserve">
          <source>Conceptually, learning &lt;code&gt;plyr&lt;/code&gt; is no more difficult than understanding the base &lt;code&gt;*apply&lt;/code&gt; functions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Conceptualmente, aprender &lt;/font&gt;&lt;/font&gt; &lt;code&gt;plyr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no es m&amp;aacute;s dif&amp;iacute;cil que comprender la base &lt;/font&gt;&lt;/font&gt; &lt;code&gt;*apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funciones.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6db1ebd1ead2718580fa3112c20aee1bc9e8f8c6" translate="yes" xml:space="preserve">
          <source>Despite all the great answers here, there are 2 more base functions that deserve to be mentioned, the useful &lt;code&gt;outer&lt;/code&gt; function and the obscure &lt;code&gt;eapply&lt;/code&gt; function</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A pesar de todas las grandes respuestas aqu&amp;iacute;, hay 2 funciones m&amp;aacute;s b&amp;aacute;sicas que merecen ser mencionados, la utilidad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;outer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funci&amp;oacute;n y la oscura &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24e2e8e5d5b3130b26b46b21382adaa286980dfa" translate="yes" xml:space="preserve">
          <source>Despite the fact (noted in other answers) that much of the functionality of the *apply family is covered by the extremely popular &lt;code&gt;plyr&lt;/code&gt; package, the base functions remain useful and worth knowing.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A pesar del hecho (se&amp;ntilde;alado en otras respuestas) de que gran parte de la funcionalidad de la familia * apply est&amp;aacute; cubierta por el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;paquete &lt;/font&gt;&lt;/font&gt; &lt;code&gt;plyr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; extremadamente popular &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, las funciones b&amp;aacute;sicas siguen siendo &amp;uacute;tiles y vale la pena conocerlas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33323659825b64a6733b2902ea7b878b88bad1d4" translate="yes" xml:space="preserve">
          <source>Each of these behaviors is of course contingent on our function returning vectors or matrices of the same length or dimension.</source>
          <target state="translated">Cada uno de estos comportamientos depende,por supuesto,de que nuestra función devuelva vectores o matrices de la misma longitud o dimensión.</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="ecf13799b713ae6af96db1bafb055b72a7cca7ff" translate="yes" xml:space="preserve">
          <source>First start with &lt;a href=&quot;https://stackoverflow.com/a/7141669/181638&quot;&gt;Joran's excellent answer&lt;/a&gt; -- doubtful anything can better that.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Primero comience con &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/7141669/181638&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la excelente respuesta de Joran&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : dudoso cualquier cosa puede mejorar eso.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b294473ce0aa0962dc87681f2d878cf45c74d890" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;vapply&lt;/code&gt;, you basically give R an example of what sort of thing
your function will return, which can save some time coercing returned
values to fit in a single atomic vector.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;vapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , b&amp;aacute;sicamente le da a R un ejemplo de qu&amp;eacute; tipo de cosas devolver&amp;aacute; su funci&amp;oacute;n, lo que puede ahorrar algo de tiempo forzando los valores devueltos para que quepan en un solo vector at&amp;oacute;mico.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed1209cf19085861ca38eac23b8ec60e42fd6ae7" translate="yes" xml:space="preserve">
          <source>Frankly I don't use this very much but if you are building a lot of packages or create a lot of environments it may come in handy.</source>
          <target state="translated">Francamente no uso mucho esto,pero si construyes muchos paquetes o creas muchos ambientes,puede ser útil.</target>
        </trans-unit>
        <trans-unit id="073942b33c13b73f2725a206573a0dcee978d7dc" translate="yes" xml:space="preserve">
          <source>From slide 21 of &lt;a href=&quot;http://www.slideshare.net/hadley/plyr-one-data-analytic-strategy&quot;&gt;http://www.slideshare.net/hadley/plyr-one-data-analytic-strategy&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De la diapositiva 21 de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.slideshare.net/hadley/plyr-one-data-analytic-strategy&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.slideshare.net/hadley/plyr-one-data-analytic-strategy&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c72217386986d91197e347e5cf75dbd99553d217" translate="yes" xml:space="preserve">
          <source>Grouping functions (tapply, by, aggregate) and the *apply family</source>
          <target state="translated">Funciones de agrupación (tapply,by,aggregate)y la familia *apply</target>
        </trans-unit>
        <trans-unit id="e5d0966f8344de9f19376feea4a6c7ddda3858c0" translate="yes" xml:space="preserve">
          <source>However, I've never quite understood the differences between them -- how {&lt;code&gt;sapply&lt;/code&gt;, &lt;code&gt;lapply&lt;/code&gt;, etc.} apply the function to the input/grouped input, what the output will look like, or even what the input can be -- so I often just go through them all until I get what I want.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, nunca he entendido las diferencias entre ellos: c&amp;oacute;mo { &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;lapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , etc.} aplica la funci&amp;oacute;n a la entrada / entrada agrupada, c&amp;oacute;mo se ver&amp;aacute; la salida, o incluso cu&amp;aacute;l puede ser la entrada, as&amp;iacute; que A menudo los reviso todos hasta que obtengo lo que quiero.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="42344cf5262eeb706b5515265fc86a0aa582d9c0" translate="yes" xml:space="preserve">
          <source>I have personally used this when I have a vector of values and a vector of conditions and wish to see which values meet which conditions.</source>
          <target state="translated">Yo personalmente lo he utilizado cuando tengo un vector de valores y un vector de condiciones y deseo ver qué valores cumplen qué condiciones.</target>
        </trans-unit>
        <trans-unit id="1616091eeaec0b858a60df43b33f5b43bf2c762c" translate="yes" xml:space="preserve">
          <source>I have tested two different functions &lt;code&gt;sum&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; at once. Volume tested is 50M on input and 50K on output. I have also included two currently popular packages which were not widely used at the time when question was asked, &lt;code&gt;data.table&lt;/code&gt; and &lt;code&gt;dplyr&lt;/code&gt;. Both are definitely worth to look if you are aiming for good performance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;He probado dos funciones diferentes de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sum&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;length&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a la vez. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El volumen probado es 50M en entrada y 50K en salida. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n he incluido dos paquetes actualmente populares que no se usaban ampliamente en el momento en que se hicieron las preguntas, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;data.table&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;dplyr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Definitivamente vale la pena mirar ambos si buscas un buen rendimiento.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2880bd00f7e6e0e7bb78e5e543b7b5d33f3f1fbc" translate="yes" xml:space="preserve">
          <source>I recently discovered the rather useful &lt;code&gt;sweep&lt;/code&gt; function and add it here for the sake of completeness:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Recientemente descubr&amp;iacute; la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sweep&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; bastante &amp;uacute;til &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;y la agregu&amp;eacute; aqu&amp;iacute; por completo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0c92455fd0191ce3ccc4a0d791e69bfc8d5887b8" translate="yes" xml:space="preserve">
          <source>If our function returns a 2 dimensional matrix, &lt;code&gt;sapply&lt;/code&gt; will do essentially the same thing, treating each returned matrix as a single long vector:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si nuestra funci&amp;oacute;n devuelve una matriz bidimensional, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; har&amp;aacute; esencialmente lo mismo, tratando cada matriz devuelta como un &amp;uacute;nico vector largo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f7b3a4b73954723e93956828b57861ad770328c" translate="yes" xml:space="preserve">
          <source>If using the &lt;code&gt;apply&lt;/code&gt; family still feels a bit alien to you, then it might be that you're missing a key point of view.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si usar la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; familia todav&amp;iacute;a te resulta un poco extra&amp;ntilde;o, entonces es posible que te est&amp;eacute;s perdiendo un punto de vista clave.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5abe4e2ed64beb50523a33d6e4093877c2c67f0" translate="yes" xml:space="preserve">
          <source>If we print these two objects, &lt;code&gt;ct&lt;/code&gt; and &lt;code&gt;cb&lt;/code&gt;, we &quot;essentially&quot; have the same results and the only differences are in how they are shown and the different &lt;code&gt;class&lt;/code&gt; attributes, respectively &lt;code&gt;by&lt;/code&gt; for &lt;code&gt;cb&lt;/code&gt; and &lt;code&gt;array&lt;/code&gt; for &lt;code&gt;ct&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si imprimimos estos dos objetos, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ct&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;cb&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &quot;esencialmente&quot; tenemos los mismos resultados y las &amp;uacute;nicas diferencias est&amp;aacute;n en c&amp;oacute;mo se muestran y los diferentes &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;atributos de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , respectivamente &lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; for &lt;/font&gt;&lt;/font&gt; &lt;code&gt;cb&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ct&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2dabc0ea31b98cc6bb6ec5dc86bf708089c396f9" translate="yes" xml:space="preserve">
          <source>If you find yourself typing &lt;code&gt;unlist(lapply(...))&lt;/code&gt;, stop and consider
&lt;code&gt;sapply&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si te encuentras escribiendo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;unlist(lapply(...))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , detente y considera &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed1bdb5aececd38b9d2a70d3c52ec1b8f27248ae" translate="yes" xml:space="preserve">
          <source>If you want row/column means or sums for a 2D matrix, be sure to
investigate the highly optimized, lightning-quick &lt;code&gt;colMeans&lt;/code&gt;,
&lt;code&gt;rowMeans&lt;/code&gt;, &lt;code&gt;colSums&lt;/code&gt;, &lt;code&gt;rowSums&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si desea medios o sumas de fila / columna para una matriz 2D, aseg&amp;uacute;rese de investigar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;colMeans&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;rowMeans&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;colSums&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;rowSums&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; altamente optimizados y r&amp;aacute;pidos &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;como un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;rayo&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15ea23a7823b6e40020ff0faabedbdbd40bcd1b7" translate="yes" xml:space="preserve">
          <source>In more advanced uses of &lt;code&gt;sapply&lt;/code&gt; it will attempt to coerce the
result to a multi-dimensional array, if appropriate. For example, if our function returns vectors of the same length, &lt;code&gt;sapply&lt;/code&gt; will use them as columns of a matrix:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En usos m&amp;aacute;s avanzados de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , intentar&amp;aacute; forzar el resultado a una matriz multidimensional, si corresponde. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo, si nuestra funci&amp;oacute;n devuelve vectores de la misma longitud, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; los usar&amp;aacute; como columnas de una matriz:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="434a3c65e8ece3a563c33e6b15ed775ed4d5576e" translate="yes" xml:space="preserve">
          <source>In the &lt;em&gt;collapse&lt;/em&gt; package recently released on CRAN, I have attempted to compress most of the common apply functionality into just 2 functions:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;paquete de &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;colapso&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; lanzado recientemente en CRAN, he intentado comprimir la mayor parte de la funcionalidad de aplicaci&amp;oacute;n com&amp;uacute;n en solo 2 funciones:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26970bbac670d32e9f07402e253eb0c8a43c0efb" translate="yes" xml:space="preserve">
          <source>In the package vignettes I provide benchmarks. Programming with the fast functions is significantly faster than programming with &lt;em&gt;dplyr&lt;/em&gt; or &lt;em&gt;data.table&lt;/em&gt;, especially on smaller data, but also on large data.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En las vi&amp;ntilde;etas del paquete proporciono puntos de referencia. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La programaci&amp;oacute;n con las funciones r&amp;aacute;pidas es significativamente m&amp;aacute;s r&amp;aacute;pida que la programaci&amp;oacute;n con &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;dplyr&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;data.table&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , especialmente en datos m&amp;aacute;s peque&amp;ntilde;os, pero tambi&amp;eacute;n en datos grandes.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00dccfdeba870780f2b0cf96c9c2b778dfd82d25" translate="yes" xml:space="preserve">
          <source>It is maybe worth mentioning &lt;code&gt;ave&lt;/code&gt;. &lt;code&gt;ave&lt;/code&gt; is &lt;code&gt;tapply&lt;/code&gt;'s friendly cousin. It returns results in a form that you can plug straight back into your data frame.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Quiz&amp;aacute;s valga la pena mencionar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ave&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ave&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;prima amigable de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Devuelve los resultados en un formulario que puede volver a conectar directamente a su marco de datos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ebcff795ed9ab0a78f5cc86d17b0c716e336492" translate="yes" xml:space="preserve">
          <source>Let's say you have a matrix and want to &lt;a href=&quot;https://en.wikipedia.org/wiki/Standard_score&quot;&gt;standardize&lt;/a&gt; it column-wise:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Digamos que tiene una matriz y desea &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Standard_score&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;estandarizarla&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en columnas:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d039976874a865c11995a6712a43c9c63bf86472" translate="yes" xml:space="preserve">
          <source>Lists of grouping variables can also be supplied to &lt;code&gt;g&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las listas de variables de agrupaci&amp;oacute;n tambi&amp;eacute;n se pueden suministrar a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;g&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d3e4fffce1864045760a2239bf4e53ff1ca293ff" translate="yes" xml:space="preserve">
          <source>More complex examples can be handled where the subgroups are defined
by the unique combinations of a list of several factors. &lt;code&gt;tapply&lt;/code&gt; is
similar in spirit to the split-apply-combine functions that are
common in R (&lt;code&gt;aggregate&lt;/code&gt;, &lt;code&gt;by&lt;/code&gt;, &lt;code&gt;ave&lt;/code&gt;, &lt;code&gt;ddply&lt;/code&gt;, etc.) Hence its
black sheep status.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se pueden manejar ejemplos m&amp;aacute;s complejos donde los subgrupos est&amp;aacute;n definidos por las combinaciones &amp;uacute;nicas de una lista de varios factores. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es similar en esp&amp;iacute;ritu a las funciones dividir-aplicar-combinar que son comunes en R ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;aggregate&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ave&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ddply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , etc.) De ah&amp;iacute; su estado de oveja negra.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7a97f0d8be41cbc74171ac86598164bcd9398eee" translate="yes" xml:space="preserve">
          <source>My current (probably incorrect/incomplete) understanding is...</source>
          <target state="translated">Mi actual (probablemente incorrecta-incompleta)comprensión es...</target>
        </trans-unit>
        <trans-unit id="f516ce9423b5a071ff553733359532709f5c0f7f" translate="yes" xml:space="preserve">
          <source>NB: for this simple example the same result can of course be achieved more easily by</source>
          <target state="translated">NB:para este simple ejemplo el mismo resultado puede,por supuesto,ser alcanzado más fácilmente por</target>
        </trans-unit>
        <trans-unit id="3c130f124e73d850d56b6eebf19e5d0353c4287a" translate="yes" xml:space="preserve">
          <source>Note that if the first argument is a &lt;code&gt;data frame&lt;/code&gt;, the dispatched function must have a method for that class of objects. For example is we use this code with the &lt;code&gt;mean&lt;/code&gt; function we will have this code that has no sense at all:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que si el primer argumento es un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;data frame&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , la funci&amp;oacute;n despachada debe tener un m&amp;eacute;todo para esa clase de objetos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo, si usamos este c&amp;oacute;digo con la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;mean&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , tendremos este c&amp;oacute;digo que no tiene ning&amp;uacute;n sentido:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f7117ac513bd9fdafc1565b9e0629cdd8232b7b4" translate="yes" xml:space="preserve">
          <source>On the side note, here is how the various &lt;code&gt;plyr&lt;/code&gt; functions correspond to the base &lt;code&gt;*apply&lt;/code&gt; functions (from the intro to plyr document from the plyr webpage &lt;a href=&quot;http://had.co.nz/plyr/&quot;&gt;http://had.co.nz/plyr/&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En la nota al margen, as&amp;iacute; es como las diversas &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funciones de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;plyr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; corresponden a las &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funciones de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;*apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; base &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;*&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (de la introducci&amp;oacute;n al documento de plyr de la p&amp;aacute;gina web de plyr &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://had.co.nz/plyr/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://had.co.nz/plyr/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2e06015562e0a0a70cb1cfd45183fd40ee0c6321" translate="yes" xml:space="preserve">
          <source>One of the goals of &lt;code&gt;plyr&lt;/code&gt; is to provide consistent naming conventions for each of the functions, encoding the input and output data types in the function name. It also provides consistency in output, in that output from &lt;code&gt;dlply()&lt;/code&gt; is easily passable to &lt;code&gt;ldply()&lt;/code&gt; to produce useful output, etc.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Uno de los objetivos de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;plyr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es proporcionar convenciones de nomenclatura consistentes para cada una de las funciones, codificando los tipos de datos de entrada y salida en el nombre de la funci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n proporciona consistencia en la salida, ya que la salida de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;dlply()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es f&amp;aacute;cilmente pasable a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ldply()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para producir una salida &amp;uacute;til, etc.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d4862e7057c9381bc0cf9bf92dbd66266b2b7fdf" translate="yes" xml:space="preserve">
          <source>Other times the results are the same and the differences are just in the class (and then how it is shown/printed and not only  -- example, how to subset it) object:</source>
          <target state="translated">Otras veces los resultados son los mismos y las diferencias son sólo en la clase (y luego cómo se muestra impreso y no sólo-por ejemplo,cómo subconjuntarlo)objeto:</target>
        </trans-unit>
        <trans-unit id="3335ee171d908a3621dc06632d52226f28970963" translate="yes" xml:space="preserve">
          <source>R has many *apply functions which are ably described in the help files (e.g. &lt;code&gt;?apply&lt;/code&gt;). There are enough of them, though, that beginning useRs may have difficulty deciding which one is appropriate for their situation or even remembering them all. They may have a general sense that &quot;I should be using an *apply function here&quot;, but it can be tough to keep them all straight at first.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;R tiene muchas * funciones de aplicaci&amp;oacute;n que se describen h&amp;aacute;bilmente en los archivos de ayuda (por ejemplo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;?apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, hay suficientes de ellos para que el uso inicial de R pueda tener dificultades para decidir cu&amp;aacute;l es el apropiado para su situaci&amp;oacute;n o incluso para recordarlos a todos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pueden tener un sentido general de que &quot;deber&amp;iacute;a estar usando una funci&amp;oacute;n * apply aqu&amp;iacute;&quot;, pero puede ser dif&amp;iacute;cil mantenerlos todos al principio.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="530db03a8729816d21b4c56f5bfdaa13a9047253" translate="yes" xml:space="preserve">
          <source>R says that arguments must have the same lengths, say &quot;we want to calculate the &lt;code&gt;summary&lt;/code&gt; of all variable in &lt;code&gt;iris&lt;/code&gt; along the factor &lt;code&gt;Species&lt;/code&gt;&quot;: but R just can't do that because it does not know how to handle.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;R dice que los argumentos deben tener la misma longitud, digamos &quot;queremos calcular el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;summary&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de todas las variables en el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;iris&lt;/code&gt; a lo&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; largo del factor &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Species&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;: pero R simplemente no puede hacer eso porque no sabe c&amp;oacute;mo manejarlo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2fed8506c5186d5124e888be6dedecdcc52ee262" translate="yes" xml:space="preserve">
          <source>Related functions &lt;code&gt;tapply&lt;/code&gt; and &lt;code&gt;sweep&lt;/code&gt; have no corresponding function in &lt;code&gt;plyr&lt;/code&gt;, and remain useful. &lt;code&gt;merge&lt;/code&gt; is useful for combining summaries with the original data.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las funciones relacionadas &lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sweep&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no tienen una funci&amp;oacute;n correspondiente en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;plyr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y siguen siendo &amp;uacute;tiles. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;merge&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es &amp;uacute;til para combinar res&amp;uacute;menes con los datos originales.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45a795bb11b371dc54a13f074dc06116a2053093" translate="yes" xml:space="preserve">
          <source>Side question: I still haven't learned plyr or reshape -- would &lt;code&gt;plyr&lt;/code&gt; or &lt;code&gt;reshape&lt;/code&gt; replace all of these entirely?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuesti&amp;oacute;n lado: Todav&amp;iacute;a no he aprendido plyr o la forma - que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;plyr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reshape&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; reemplazar la totalidad de &amp;eacute;stos por completo?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fa9aa9997dace54ef65cd54cc1e5ecc2d22a7ac1" translate="yes" xml:space="preserve">
          <source>Since I realized that (the very excellent) answers of this post lack of &lt;code&gt;by&lt;/code&gt; and &lt;code&gt;aggregate&lt;/code&gt; explanations. Here is my contribution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Desde que me di cuenta de que (los muy excelentes) respuestas de esta entrada falta de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;aggregate&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; explicaciones. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; est&amp;aacute; mi contribuci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1de8dba368e7754dc199c99b017f5c51265ee8dc" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Syntax:</target>
        </trans-unit>
        <trans-unit id="8eb565cf18da9375134d50e39a4d2ee0132162d7" translate="yes" xml:space="preserve">
          <source>Talking about performance: A main goal of &lt;em&gt;collapse&lt;/em&gt; is to foster high-performance programming in R and to move beyond split-apply-combine alltogether. For this purpose the package has a full set of C++ based fast generic functions: &lt;code&gt;fmean&lt;/code&gt;, &lt;code&gt;fmedian&lt;/code&gt;, &lt;code&gt;fmode&lt;/code&gt;, &lt;code&gt;fsum&lt;/code&gt;, &lt;code&gt;fprod&lt;/code&gt;, &lt;code&gt;fsd&lt;/code&gt;, &lt;code&gt;fvar&lt;/code&gt;, &lt;code&gt;fmin&lt;/code&gt;, &lt;code&gt;fmax&lt;/code&gt;, &lt;code&gt;ffirst&lt;/code&gt;, &lt;code&gt;flast&lt;/code&gt;, &lt;code&gt;fNobs&lt;/code&gt;, &lt;code&gt;fNdistinct&lt;/code&gt;, &lt;code&gt;fscale&lt;/code&gt;, &lt;code&gt;fbetween&lt;/code&gt;, &lt;code&gt;fwithin&lt;/code&gt;, &lt;code&gt;fHDbetween&lt;/code&gt;, &lt;code&gt;fHDwithin&lt;/code&gt;, &lt;code&gt;flag&lt;/code&gt;, &lt;code&gt;fdiff&lt;/code&gt; and &lt;code&gt;fgrowth&lt;/code&gt;. They perform grouped computations in a single pass through the data (i.e. no splitting and recombining).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hablando sobre el rendimiento: un objetivo principal del &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;colapso&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es fomentar la programaci&amp;oacute;n de alto rendimiento en R y avanzar m&amp;aacute;s all&amp;aacute; de dividir, aplicar y combinar en conjunto. Para ello, el paquete tiene un conjunto completo de C ++ basadas r&amp;aacute;pido funciones gen&amp;eacute;ricas: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fmean&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fmedian&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fmode&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fsum&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fprod&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fsd&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fvar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fmin&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fmax&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ffirst&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;flast&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fNobs&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fNdistinct&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fscale&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fbetween&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fwithin&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fHDbetween&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ,&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fHDwithin&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;flag&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fdiff&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fgrowth&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Realizan c&amp;aacute;lculos agrupados en una sola pasada a trav&amp;eacute;s de los datos (es decir, sin divisi&amp;oacute;n y recombinaci&amp;oacute;n).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3d55c46ae1ed01daade9ebc62d6cf653f93d190e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;by&lt;/code&gt; function, as stated in the documentation can be though, as a &quot;wrapper&quot; for &lt;code&gt;tapply&lt;/code&gt;. The power of &lt;code&gt;by&lt;/code&gt; arises when we want to compute a task that &lt;code&gt;tapply&lt;/code&gt; can't handle. One example is this code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;embargo, la funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , como se indica en la documentaci&amp;oacute;n, puede ser un &quot;contenedor&quot; para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El poder de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; surge cuando queremos calcular una tarea que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no puede manejar. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un ejemplo es este c&amp;oacute;digo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="93a484a54e5fe0c3929cb845a2d6aacfc398df74" translate="yes" xml:space="preserve">
          <source>The basic idea is to &lt;em&gt;sweep&lt;/em&gt; through an array row- or column-wise and return a modified array. An example will make this clear (source: &lt;a href=&quot;https://www.datacamp.com/community/tutorials/r-tutorial-apply-family#sweep&quot;&gt;datacamp&lt;/a&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La idea b&amp;aacute;sica es &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;barrer a&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; trav&amp;eacute;s de una matriz en fila o columna y devolver una matriz modificada. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un ejemplo lo aclarar&amp;aacute; (fuente: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.datacamp.com/community/tutorials/r-tutorial-apply-family#sweep&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;campamento de datos&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="82d8d02c0ed4a6810f4dd3955969e3d43090cb10" translate="yes" xml:space="preserve">
          <source>The black sheep of the *apply family, of sorts. The help file's use of
the phrase &quot;ragged array&quot; can be a bit &lt;a href=&quot;https://stackoverflow.com/questions/6297201/explain-r-tapply-description/6297396#6297396&quot;&gt;confusing&lt;/a&gt;, but it is actually
quite simple.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las ovejas negras de la familia * aplica, de alg&amp;uacute;n tipo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El uso del archivo de ayuda de la frase &quot;matriz irregular&quot; puede ser un poco &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/6297201/explain-r-tapply-description/6297396#6297396&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;confuso&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero en realidad es bastante simple.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0c01b5f7fdcc71df01dc8c4f5f05d40a3e1eee17" translate="yes" xml:space="preserve">
          <source>The power of &lt;code&gt;aggregate&lt;/code&gt; is that it can handle easily subsets of the data with &lt;code&gt;subset&lt;/code&gt; argument and that it has methods for &lt;code&gt;ts&lt;/code&gt; objects and &lt;code&gt;formula&lt;/code&gt; as well.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El poder del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;aggregate&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es que puede manejar f&amp;aacute;cilmente subconjuntos de datos con &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;argumentos de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;subset&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y que tambi&amp;eacute;n tiene m&amp;eacute;todos para &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos y &lt;/font&gt; &lt;code&gt;formula&lt;/code&gt; &lt;/font&gt; &lt;code&gt;ts&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00bd4bf27baabf01d43614bbd4bd0e753b25be1c" translate="yes" xml:space="preserve">
          <source>The previous code achieve the same goal and results, at some points what tool to use is just a matter of personal tastes and needs; the previous two objects have very different needs in terms of subsetting.</source>
          <target state="translated">El código anterior logra el mismo objetivo y resultados,en algunos puntos la herramienta a utilizar es sólo una cuestión de gustos y necesidades personales;los dos objetos anteriores tienen necesidades muy diferentes en términos de subconjunto.</target>
        </trans-unit>
        <trans-unit id="ff50cd936792cdfecf5569c5eb84da9de69695e6" translate="yes" xml:space="preserve">
          <source>The two immediate differences are that the second argument of &lt;code&gt;aggregate&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a list while &lt;code&gt;tapply&lt;/code&gt;&lt;strong&gt;can&lt;/strong&gt; (not mandatory) be a list and that the output of &lt;code&gt;aggregate&lt;/code&gt; is a data frame while the one of &lt;code&gt;tapply&lt;/code&gt; is an &lt;code&gt;array&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las dos diferencias inmediatas son que el segundo argumento del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;aggregate&lt;/code&gt; &lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;debe&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ser una lista, mientras que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;puede&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (no es obligatorio) ser una lista y que la salida del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;aggregate&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es un marco de datos, mientras que el de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95f18985a9146ebd5676f6d37f21b74fa58ebb7d" translate="yes" xml:space="preserve">
          <source>Then the following mnemonics may help to remember the distinctions between each.  Whilst some are obvious, others may be less so --- for these you'll find justification in Joran's discussions.</source>
          <target state="translated">Entonces los siguientes mnemotécnicos pueden ayudar a recordar las distinciones entre cada uno.Mientras que algunos son obvios,otros pueden ser menos...para estos encontrarás justificación en las discusiones de Joran.</target>
        </trans-unit>
        <trans-unit id="7fb37b5972193434f7631f5c36e1b6681d47e80e" translate="yes" xml:space="preserve">
          <source>There are lots of great answers which discuss differences in the use cases for each function. None of the answer discuss the differences in performance. That is reasonable cause various functions expects various input and produces various output, yet most of them have a general common objective to evaluate by series/groups. My answer is going to focus on performance. Due to above the input creation from the vectors is included in the timing, also the &lt;code&gt;apply&lt;/code&gt; function is not measured.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hay muchas respuestas excelentes que analizan las diferencias en los casos de uso para cada funci&amp;oacute;n. Ninguna de las respuestas discute las diferencias en el rendimiento. Eso es razonable porque varias funciones esperan diversas entradas y producen varias salidas, aunque la mayor&amp;iacute;a de ellas tienen un objetivo com&amp;uacute;n general para evaluar por series / grupos. Mi respuesta se centrar&amp;aacute; en el rendimiento. Debido a lo anterior, la creaci&amp;oacute;n de entrada de los vectores se incluye en el tiempo, tampoco &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se mide la funci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a070d9cc3861b0056b5615076e7516700314305a" translate="yes" xml:space="preserve">
          <source>There are other times when we can't use &lt;code&gt;by&lt;/code&gt; or &lt;code&gt;tapply&lt;/code&gt; and we have to use &lt;code&gt;aggregate&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hay otros momentos en que no podemos usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y tenemos que usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;aggregate&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91b368884977357baae35ac63f30b5b6162707b9" translate="yes" xml:space="preserve">
          <source>There is nothing in the base package that works like &lt;code&gt;ave&lt;/code&gt; for whole data frames (as &lt;code&gt;by&lt;/code&gt; is like &lt;code&gt;tapply&lt;/code&gt; for data frames). But you can fudge it:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No hay nada en el paquete base que funciona como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ave&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de tramas de datos enteros (como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de tramas de datos). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero puedes evitarlo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="889cf5792e268bf7d2415a5e11d6c799acb65f3a" translate="yes" xml:space="preserve">
          <source>These elements make &lt;code&gt;aggregate&lt;/code&gt; easier to work with that &lt;code&gt;tapply&lt;/code&gt; in some situations.
Here are some examples (available in documentation):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Estos elementos hacen que el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;aggregate&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sea ​​m&amp;aacute;s f&amp;aacute;cil de trabajar con ese &lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en algunas situaciones. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; hay algunos ejemplos (disponibles en la documentaci&amp;oacute;n):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45ac14c6e218241ef740fdd9066b2edc6f9764fd" translate="yes" xml:space="preserve">
          <source>These two articles can help.  They provide the necessary background to motivate the &lt;strong&gt;functional programming techniques&lt;/strong&gt; that are being provided by the &lt;code&gt;apply&lt;/code&gt; family of functions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Estos dos art&amp;iacute;culos pueden ayudar. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ellos proporcionan los antecedentes necesarios para motivar a las &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;t&amp;eacute;cnicas de programaci&amp;oacute;n funcionales&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que est&amp;aacute;n siendo proporcionados por el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; familia de funciones.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="07a01588cf3c6d8303d1a01dea0a8191d306661b" translate="yes" xml:space="preserve">
          <source>This answer is intended to act as a sort of &lt;strong&gt;signpost&lt;/strong&gt; for new useRs to help direct them to the correct *apply function for their particular problem. Note, this is &lt;strong&gt;not&lt;/strong&gt; intended to simply regurgitate or replace the R documentation! The hope is that this answer helps you to decide which *apply function suits your situation and then it is up to you to research it further. With one exception, performance differences will not be addressed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta respuesta est&amp;aacute; destinada a actuar como una especie de &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se&amp;ntilde;al&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para los nuevos useRs para ayudarlos a dirigirlos a la funci&amp;oacute;n * * correcta para su problema particular. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iexcl;Tenga en cuenta que esto &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pretende simplemente regurgitar o reemplazar la documentaci&amp;oacute;n de R! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La esperanza es que esta respuesta lo ayude a decidir qu&amp;eacute; funci&amp;oacute;n de * aplicaci&amp;oacute;n se adapta a su situaci&amp;oacute;n y luego depende de usted investigarla m&amp;aacute;s a fondo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Con una excepci&amp;oacute;n, no se abordar&amp;aacute;n las diferencias de rendimiento.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bc6b9a04ef0933b1d61766035ff2aad0fe9eb0c1" translate="yes" xml:space="preserve">
          <source>This is multivariate in the sense that your function must accept
multiple arguments.</source>
          <target state="translated">Esto es multivariante en el sentido de que su función debe aceptar múltiples argumentos.</target>
        </trans-unit>
        <trans-unit id="27d6d56a0781cf20793578d341bb9f60dd695fa0" translate="yes" xml:space="preserve">
          <source>This is the workhorse of many of the other *apply functions. Peel
back their code and you will often find &lt;code&gt;lapply&lt;/code&gt; underneath.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este es el caballo de batalla de muchas de las otras * funciones de aplicaci&amp;oacute;n. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;lapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; su c&amp;oacute;digo y a menudo encontrar&amp;aacute; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lapply&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; debajo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0d671dba14e38455b370b123be9e8115cdf6e718" translate="yes" xml:space="preserve">
          <source>To give you some idea of how uncommon &lt;code&gt;rapply&lt;/code&gt; is, I forgot about it when first posting this answer! Obviously, I'm sure many people use it, but YMMV. &lt;code&gt;rapply&lt;/code&gt; is best illustrated with a user-defined function to apply:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para darte una idea de lo poco &lt;/font&gt;&lt;/font&gt; &lt;code&gt;rapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;rapidez&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &amp;iexcl;lo olvid&amp;eacute; cuando &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;publiqu&amp;eacute;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; esta respuesta por primera vez! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Obviamente, estoy seguro de que muchas personas lo usan, pero YMMV. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;rapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se ilustra mejor con una funci&amp;oacute;n definida por el usuario para aplicar:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f5a6338cd0aa36bf20caa2b8dc6859a24608fa2" translate="yes" xml:space="preserve">
          <source>Unless we specify &lt;code&gt;simplify = &quot;array&quot;&lt;/code&gt;, in which case it will use the individual matrices to build a multi-dimensional array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A menos que especifiquemos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;simplify = &quot;array&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , en cuyo caso utilizar&amp;aacute; las matrices individuales para construir una matriz multidimensional:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2acebbc0c80ee9801997ba55780979a3feca8225" translate="yes" xml:space="preserve">
          <source>Users of Lisp will recognise the paradigm immediately.  If you're not familiar with Lisp, once you get your head around FP, you'll have gained a powerful point of view for use in R -- and &lt;code&gt;apply&lt;/code&gt; will make a lot more sense.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los usuarios de Lisp reconocer&amp;aacute;n el paradigma de inmediato. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si no est&amp;aacute; familiarizado con Lisp, una vez que conozca FP, habr&amp;aacute; adquirido un poderoso punto de vista para usar en R, y la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tendr&amp;aacute; mucho m&amp;aacute;s sentido.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="96c64a0347495d732ced31bb04703b745a007077" translate="yes" xml:space="preserve">
          <source>We can achieve the same with &lt;code&gt;tapply&lt;/code&gt; but the syntax is slightly harder and the output (in some circumstances) less readable:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Podemos lograr lo mismo con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pero la sintaxis es un poco m&amp;aacute;s dif&amp;iacute;cil y la salida (en algunas circunstancias) menos legible:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2352db4d026fa42d2f845891f273c6e4fcc50735" translate="yes" xml:space="preserve">
          <source>We cannot obtain the previous result with &lt;code&gt;tapply&lt;/code&gt; in one call but we have to calculate the mean along &lt;code&gt;Month&lt;/code&gt; for each elements and then combine them (also note that we have to call the &lt;code&gt;na.rm = TRUE&lt;/code&gt;, because the &lt;code&gt;formula&lt;/code&gt; methods of the &lt;code&gt;aggregate&lt;/code&gt; function has by default the &lt;code&gt;na.action = na.omit&lt;/code&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No podemos obtener el resultado anterior con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;tapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en una llamada, pero tenemos que calcular la media a lo largo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Month&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para cada elemento y luego combinarlos (tambi&amp;eacute;n tenga en cuenta que tenemos que llamar a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;na.rm = TRUE&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , porque los &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todos de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;formula&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;aggregate&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene por defecto la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;na.action = na.omit&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9ebc773ba5f40884a865cf1d4d35666a7d2e89fb" translate="yes" xml:space="preserve">
          <source>Whenever I want to do something &quot;map&quot;py in R, I usually try to use a function in the &lt;code&gt;apply&lt;/code&gt; family.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada vez que quiero hacer algo &quot;map&quot; py en R, generalmente trato de usar una funci&amp;oacute;n en la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;familia &lt;/font&gt;&lt;/font&gt; &lt;code&gt;apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3c80fabfd63e474afefbef9c6dc99569b9f74aa8" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;by&lt;/code&gt; function R dispatch a specific method for &lt;code&gt;data frame&lt;/code&gt; class and then let the &lt;code&gt;summary&lt;/code&gt; function works even if the length of the first argument (and the type too) are different.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Con la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , despache un m&amp;eacute;todo espec&amp;iacute;fico para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;data frame&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; clase de &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;marco de datos&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y luego deje que la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;summary&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funcione incluso si la longitud del primer argumento (y el tipo tambi&amp;eacute;n) son diferentes.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2119474583938219f9f95e55acfc503bb5d49dea" translate="yes" xml:space="preserve">
          <source>it works indeed and the result is very surprising. It is an object of class &lt;code&gt;by&lt;/code&gt; that along &lt;code&gt;Species&lt;/code&gt; (say, for each of them) computes the &lt;code&gt;summary&lt;/code&gt; of each variable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funciona de hecho y el resultado es muy sorprendente. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es un objeto de clase &lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que a lo largo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Species&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (por ejemplo, para cada uno de ellos) calcula el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;summary&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de cada variable.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b659bcabd2a34ac09355cbf90d5a44ba30486e6a" translate="yes" xml:space="preserve">
          <source>which makes it seem like this is only useful for linear algebra type things.  However, it can be used much like &lt;code&gt;mapply&lt;/code&gt; to apply a function to two vectors of inputs. The difference is that &lt;code&gt;mapply&lt;/code&gt; will apply the function to the first two elements and then the second two etc, whereas &lt;code&gt;outer&lt;/code&gt; will apply the function to every combination of one element from the first vector and one from the second. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lo que hace que parezca que esto solo es &amp;uacute;til para cosas de tipo &amp;aacute;lgebra lineal. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, se puede usar de manera muy similar a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;mapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para aplicar una funci&amp;oacute;n a dos vectores de entradas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La diferencia es que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;mapply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se aplicar&amp;aacute; la funci&amp;oacute;n de los dos primeros elementos y luego el segundo dos etc, mientras que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;outer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se aplicar&amp;aacute; la funci&amp;oacute;n para cada combinaci&amp;oacute;n de un elemento del primer vector y una de la segunda. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea18e6950071047d016564a4bff9f0e224ebe7de" translate="yes" xml:space="preserve">
          <source>while with &lt;code&gt;by&lt;/code&gt; we just can't achieve that in fact the following function call returns an error (but most likely it is related to the supplied function, &lt;code&gt;mean&lt;/code&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mientras que con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;by&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; simplemente no podemos lograr que, de hecho, la siguiente llamada de funci&amp;oacute;n devuelva un error (pero lo m&amp;aacute;s probable es que est&amp;eacute; relacionado con la funci&amp;oacute;n proporcionada, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;mean&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
