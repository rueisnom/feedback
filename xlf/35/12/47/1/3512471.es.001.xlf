<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/3512471">
    <body>
      <group id="3512471">
        <trans-unit id="bcf0d126ecf0118f14796b2398997a40ae04dbcd" translate="yes" xml:space="preserve">
          <source>... I would get the following result:</source>
          <target state="translated">...Obtendría el siguiente resultado:</target>
        </trans-unit>
        <trans-unit id="e676d3c3446448a15304f4211ad1b20f882e04f5" translate="yes" xml:space="preserve">
          <source>... over it, we are trying to use the first group, add an underscore, use the third group, then the second group, add another underscore, and then the fourth group. The resulting string would be like the one below.</source>
          <target state="translated">...sobre él,estamos tratando de usar el primer grupo,añadir un guión bajo,usar el tercer grupo,luego el segundo grupo,añadir otro guión bajo,y luego el cuarto grupo.La cadena resultante sería como la siguiente.</target>
        </trans-unit>
        <trans-unit id="8d7b22b0b137294fd5060dc96e83c2e36087c17e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;([A-Z][A-Z0-9]*)\b[^&amp;gt;]*&amp;gt;.*?&amp;lt;/\1&amp;gt;&lt;/code&gt;  [ Finds an xml tag (without ns support) ]</source>
          <target state="translated">&lt;code&gt;&amp;lt;([A-Z][A-Z0-9]*)\b[^&amp;gt;]*&amp;gt;.*?&amp;lt;/\1&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; [Encuentra una etiqueta xml (sin soporte ns)]&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d6e0fe4cd1a0261b6f7dffe18465ce0c6bd73555" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(,)&lt;/code&gt;--&amp;gt; Captured Group 2</source>
          <target state="translated">&lt;code&gt;(,)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&amp;gt; Grupo capturado 2&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b87d78ba8679f96c2130a3dbc6e88950fee8228" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(?:=)&lt;/code&gt;--&amp;gt; Non-Captured Group 2</source>
          <target state="translated">&lt;code&gt;(?:=)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&amp;gt; Grupo 2 no capturado&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f413d73a52a778e7fb5b3df9208b4ab712159ac3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(?:animal)&lt;/code&gt; --&amp;gt; Non-Captured Group 1</source>
          <target state="translated">&lt;code&gt;(?:animal)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&amp;gt; Grupo 1 no capturado&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0b7963c035deb8fbc21e44b7caa16b852993ff4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;([A-Z][A-Z0-9]*)&lt;/code&gt; is a capturing group (in this case it is the tagname)</source>
          <target state="translated">&lt;code&gt;([A-Z][A-Z0-9]*)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es un grupo de captura (en este caso es el nombre de la etiqueta)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b68561957d734503999badcc4801abfc5e772b12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(\w+)&lt;/code&gt;--&amp;gt; Captured Group 1</source>
          <target state="translated">&lt;code&gt;(\w+)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&amp;gt; Grupo capturado 1&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d61c24f1edc0bdca1ad0588eda1164c670624b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?:&lt;/code&gt; is used when you want to group an expression, but you do not want to save it as a matched/captured portion of the string.</source>
          <target state="translated">&lt;code&gt;?:&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se utiliza cuando desea agrupar una expresi&amp;oacute;n, pero no desea guardarla como una parte coincidente / capturada de la cadena.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9754acdd6f94185fe697370370027059e969e2d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\1&lt;/code&gt; --&amp;gt; result of captured group 1 i.e In Line 1 is cat, In Line 2 is cat, In Line 3 is dog.</source>
          <target state="translated">&lt;code&gt;\1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&amp;gt; resultado del grupo 1 capturado, es decir, en la l&amp;iacute;nea 1 es cat, en la l&amp;iacute;nea 2 es cat, en la l&amp;iacute;nea 3 es dog.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="627a7a83cc0fc15be9e5f95c9c58a8fc0bb38fc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\2&lt;/code&gt; --&amp;gt; result of captured group 2 i.e comma (,)</source>
          <target state="translated">&lt;code&gt;\2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&amp;gt; resultado del grupo 2 capturado, es decir, coma (,)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="772db0e3b9f2b34f24b763cded895c8fddc1e5b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Hope this explains the use of non capturing group.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Espero que esto explique el uso del grupo no capturador.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5f71ecb148d8f60d740e36bab1c15ed940f0c5d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Let me try this with an example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;D&amp;eacute;jame probar esto con un ejemplo:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="75885fa7b4b4d05f5599fa72d28b180a52274c86" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Search String:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cadena de b&amp;uacute;squeda:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e74407f6e0ab790de8a950e7d4735f204a851f27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;So, the output will be as below:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, la salida ser&amp;aacute; la siguiente:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8036b5b4c918d300090aa8d7a6011feed1eb6ef3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tl;dr&lt;/strong&gt; non-capturing groups, as the name suggests are the parts of the regex that you do not want to be included in the match and &lt;code&gt;?:&lt;/code&gt; is a way to define a group as being non-capturing.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tl; dr&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; grupos que no capturan, como su nombre indica son las partes de la expresi&amp;oacute;n regular que no desea que se incluyan en la coincidencia y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;?:&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una forma de definir que un grupo no captura.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b862ccef0aa65d103454beb2c0a3b6164a052d1e" translate="yes" xml:space="preserve">
          <source>An example would be something to match an IP address:</source>
          <target state="translated">Un ejemplo sería algo que coincida con una dirección IP:</target>
        </trans-unit>
        <trans-unit id="c7b878320593df0bcf3070cb1d7927cca232be0b" translate="yes" xml:space="preserve">
          <source>As per the order of code &lt;code&gt;(?:animal)&lt;/code&gt; should be group 1 and &lt;code&gt;(?:=)&lt;/code&gt; should be group 2 and continues..</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Seg&amp;uacute;n el orden del c&amp;oacute;digo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:animal)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; debe ser el grupo 1 y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:=)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Debe ser el grupo 2 y contin&amp;uacute;a.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a92a14f93428452b73ba027e5dca4c177ffbb9b8" translate="yes" xml:space="preserve">
          <source>As requested, let me try to explain groups too.</source>
          <target state="translated">Como se ha pedido,déjeme intentar explicarle los grupos también.</target>
        </trans-unit>
        <trans-unit id="b609a4cf5e3a806bf6ea63e5189d426110b52753" translate="yes" xml:space="preserve">
          <source>But I don't care about the protocol -- I just want the host and path of the URL. So, I change the regex to include the non-capturing group &lt;code&gt;(?:)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero no me importa el protocolo, solo quiero el host y la ruta de la URL. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, cambio la expresi&amp;oacute;n regular para incluir el grupo sin captura &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd1c31df99c682d3fcad72a5e0aa95676b0bee1f" translate="yes" xml:space="preserve">
          <source>Consider a scenario where you want to match &lt;code&gt;cat is animal&lt;/code&gt;
when you would like match cat and animal and both should have a &lt;code&gt;is&lt;/code&gt; in between them.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Considere un escenario en el que desea hacer coincidir &lt;/font&gt;&lt;/font&gt; &lt;code&gt;cat is animal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cuando se desea gato partido y animal y ambos deben tener una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; entre ellos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5b1e5874ffbd61df419bd16b3496a99760914305" translate="yes" xml:space="preserve">
          <source>Consider the expressions &lt;code&gt;(a|b)c&lt;/code&gt; and &lt;code&gt;a|bc&lt;/code&gt;, due to priority of concatenation over &lt;code&gt;|&lt;/code&gt;, these expressions represent two different languages (&lt;code&gt;{ac, bc}&lt;/code&gt; and &lt;code&gt;{a, bc}&lt;/code&gt; respectively).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Considere las expresiones &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(a|b)c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a|bc&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , debido a la prioridad de concatenaci&amp;oacute;n sobre &lt;/font&gt;&lt;/font&gt; &lt;code&gt;|&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, estas expresiones representan dos idiomas diferentes ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{ac, bc}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{a, bc}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; respectivamente).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="264905281596046843b12de293d71e42b7e7688d" translate="yes" xml:space="preserve">
          <source>Consider the following text:</source>
          <target state="translated">Considere el siguiente texto:</target>
        </trans-unit>
        <trans-unit id="16a0b451f01e21349e7ff6a5419e8ec27f88d8d0" translate="yes" xml:space="preserve">
          <source>EDIT:</source>
          <target state="translated">EDIT:</target>
        </trans-unit>
        <trans-unit id="bf23515c405d573441877e64b3bcc3048bf11b42" translate="yes" xml:space="preserve">
          <source>Example of using later on in the regex (backreference):</source>
          <target state="translated">Ejemplo de uso más adelante en el regex (retro-referencia):</target>
        </trans-unit>
        <trans-unit id="4d143a48e760953f2206a56df2a4440e50f1f46f" translate="yes" xml:space="preserve">
          <source>Groups that &lt;strong&gt;capture&lt;/strong&gt; you can use later on in the regex to match &lt;strong&gt;OR&lt;/strong&gt; you can use them in the replacement part of the regex.  Making a &lt;strong&gt;non-capturing&lt;/strong&gt; group simply exempts that group from being used for either of these reasons.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los grupos que &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;capturan&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pueden usar m&amp;aacute;s adelante en la expresi&amp;oacute;n regular para que coincidan &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;O&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; puede usarlos en la parte de reemplazo de la expresi&amp;oacute;n regular. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Crear un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;grupo &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;sin captura&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; simplemente exime a ese grupo de ser utilizado por cualquiera de estos motivos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e1b6cc0dc3dd4dd8335f0eae667eaa49d2144ff7" translate="yes" xml:space="preserve">
          <source>HISTORICAL MOTIVATION:</source>
          <target state="translated">MOTIVACIÓN HISTÓRICA:</target>
        </trans-unit>
        <trans-unit id="213aee9e28e115d3ca4ebcad92457d21b2b7d23c" translate="yes" xml:space="preserve">
          <source>How are non-capturing groups, i.e. &lt;code&gt;(?:)&lt;/code&gt;, used in regular expressions and what are they good for?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;C&amp;oacute;mo se &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;usan los &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;grupos que no capturan, es decir &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , en expresiones regulares y para qu&amp;eacute; sirven?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="224d7bd00a2a5cf12a7b471ed8d149017cff7c49" translate="yes" xml:space="preserve">
          <source>However, the parenthesis are also used as a matching group (as explained by the other answers...).</source>
          <target state="translated">Sin embargo,los paréntesis también se utilizan como grupo de correspondencia (como se explica en las otras respuestas...).</target>
        </trans-unit>
        <trans-unit id="3ab0fc4bdf1f3f852c478c53fe809cbcf1b57a77" translate="yes" xml:space="preserve">
          <source>I cannot comment on the top answers to say this: I would like to add an explicit point which is only implied in the top answers:</source>
          <target state="translated">No puedo comentar las respuestas superiores para decir esto:Me gustaría añadir un punto explícito que sólo está implícito en las respuestas superiores:</target>
        </trans-unit>
        <trans-unit id="278b25ea15e8f1a2876947ecd7cf6f00824ee9c6" translate="yes" xml:space="preserve">
          <source>I think I would give you the answer. Don't use capture variables without checking that the match succeeded.</source>
          <target state="translated">Creo que yo te daría la respuesta.No uses variables de captura sin comprobar que la coincidencia tuvo éxito.</target>
        </trans-unit>
        <trans-unit id="7c72585f7f59b0950dbe2ce10550a24b61487618" translate="yes" xml:space="preserve">
          <source>I thought if the first group &lt;code&gt;(?:([A-Za-z]+):)&lt;/code&gt; is a non-capturing group then why it is returning &lt;code&gt;http&lt;/code&gt; string in the output array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pens&amp;eacute; que si el primer grupo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:([A-Za-z]+):)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es un grupo que no captura, entonces por qu&amp;eacute; est&amp;aacute; devolviendo una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cadena &lt;/font&gt;&lt;/font&gt; &lt;code&gt;http&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en la matriz de salida.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e7e9bcc060a5f0ae1d16003068494f777d48d5e" translate="yes" xml:space="preserve">
          <source>If the pattern is matched , then &lt;code&gt;$1&lt;/code&gt; is captured as next grouped pattern.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si el patr&amp;oacute;n coincide, entonces &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se captura &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como el siguiente patr&amp;oacute;n agrupado.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a74cff867e72f6b90bcf3a4fed1c8ad63142468e" translate="yes" xml:space="preserve">
          <source>In complex regular expressions you may have the situation arise where you wish to use a large number of groups some of which are there for repetition matching and some of which are there to provide back references. By default the text matching each group is loaded into the backreference array. Where we have lots of groups and only need to be able to reference some of them from the backreference array we can override this default behaviour to tell the regular expression that certain groups are there only for repetition handling and do not need to be captured and stored in the backreference array.</source>
          <target state="translated">En las expresiones regulares complejas puede darse la situación de que se desee utilizar un gran número de grupos,algunos de los cuales están ahí para la coincidencia de repeticiones y otros para proporcionar referencias retrospectivas.Por defecto,el texto que corresponde a cada grupo se carga en la matriz de referencias traseras.Cuando tenemos muchos grupos y sólo necesitamos poder hacer referencia a algunos de ellos de la matriz de referencias retrospectivas,podemos anular este comportamiento por defecto para indicar a la expresión regular que ciertos grupos están ahí sólo para el manejo de la repetición y no necesitan ser capturados y almacenados en la matriz de referencias retrospectivas.</target>
        </trans-unit>
        <trans-unit id="9daca7626ec573ded51fa04dac04f67eb08735f4" translate="yes" xml:space="preserve">
          <source>In the above example, to avoid capturing bronto in &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;(?:)&lt;/code&gt; is used.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En el ejemplo anterior, para evitar capturar bronto en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se usa &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="369d761cfe07f98f24131cbd8cb9afa94cec6de3" translate="yes" xml:space="preserve">
          <source>Input url string:</source>
          <target state="translated">Introducir cadena de url:</target>
        </trans-unit>
        <trans-unit id="ecf8bc5cb8774a51996a3b1d64ef1449713980c6" translate="yes" xml:space="preserve">
          <source>It is Useful if you don't want the matches to be saved.</source>
          <target state="translated">Es útil si no quieres que se guarden los fósforos.</target>
        </trans-unit>
        <trans-unit id="819f9a951ddc20cbf71662734141f8ed11468fd1" translate="yes" xml:space="preserve">
          <source>It makes the group non-capturing, which means that the substring matched by that group will not be included in the list of captures. An example in ruby to illustrate the difference:</source>
          <target state="translated">Hace que el grupo no sea capturado,lo que significa que la subcadena coincidente con ese grupo no se incluirá en la lista de capturas.Un ejemplo en rubí para ilustrar la diferencia:</target>
        </trans-unit>
        <trans-unit id="1f7fbb7891b3402052270ff4133b332e8ed65674" translate="yes" xml:space="preserve">
          <source>Its as simple as that.</source>
          <target state="translated">Es tan simple como eso.</target>
        </trans-unit>
        <trans-unit id="04eecf74cbc06fc131595c71a1e320387b05f571" translate="yes" xml:space="preserve">
          <source>Its extremely simple, We can understand with simple date example, suppose if the date is mentioned as 1st January 2019 or 2nd May 2019 or any other date and we simply want to convert it to &lt;strong&gt;dd/mm/yyyy&lt;/strong&gt; format we would not need the month's name which is January or February for that matter, so in order to capture the numeric part, but not the (optional) suffix you can use a non-capturing group.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es extremadamente simple, podemos entenderlo con un ejemplo de fecha simple, supongamos que si la fecha se menciona como 1 de enero de 2019 o 2 de mayo de 2019 o cualquier otra fecha y simplemente queremos convertirla al &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;formato &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;dd / mm / aaaa&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , no necesitar&amp;iacute;amos el mes nombre que es enero o febrero para el caso, por lo que para capturar la parte num&amp;eacute;rica, pero no el sufijo (opcional), puede usar un grupo que no sea de captura.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9976df8cd06470bec3bcac27c19305b473d398a3" translate="yes" xml:space="preserve">
          <source>Later on in the regex is &lt;code&gt;\1&lt;/code&gt; which means it will only match the same text that was in the first group (the &lt;code&gt;([A-Z][A-Z0-9]*)&lt;/code&gt; group) (in this case it is matching the end tag).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;M&amp;aacute;s adelante en la expresi&amp;oacute;n regular es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;\1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que significa que solo coincidir&amp;aacute; con el mismo texto que estaba en el primer grupo (el grupo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;([A-Z][A-Z0-9]*)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) (en este caso coincide con la etiqueta final )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43adfd1cdfc25034d3502f087497ed3ea98160ef" translate="yes" xml:space="preserve">
          <source>Let me try to explain this with an example.</source>
          <target state="translated">Déjeme tratar de explicar esto con un ejemplo.</target>
        </trans-unit>
        <trans-unit id="f3283cce490022a6d472f45cdb3f88d5b2aec05f" translate="yes" xml:space="preserve">
          <source>Let's say you have an email address &lt;code&gt;example@example.com&lt;/code&gt;. The following regex will create two &lt;strong&gt;groups&lt;/strong&gt;, the id part and @example.com part. &lt;code&gt;(\p{Alpha}*[a-z])(@example.com)&lt;/code&gt;. For simplicity's sake, we are extracting the whole domain name including the &lt;code&gt;@&lt;/code&gt; character.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Supongamos que tiene una direcci&amp;oacute;n de correo electr&amp;oacute;nico &lt;/font&gt;&lt;/font&gt; &lt;code&gt;example@example.com&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La siguiente expresi&amp;oacute;n regular crear&amp;aacute; dos &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;grupos&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , la parte de identificaci&amp;oacute;n y la parte @ example.com. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(\p{Alpha}*[a-z])(@example.com)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En aras de la simplicidad, estamos extrayendo todo el nombre de dominio, incluido el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;car&amp;aacute;cter &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f885c63824e77156466ae1912e924f5afcb9e053" translate="yes" xml:space="preserve">
          <source>Let's try some substitutions now. Consider the following text:</source>
          <target state="translated">Intentemos algunas sustituciones ahora.Considere el siguiente texto:</target>
        </trans-unit>
        <trans-unit id="f8209e598b57132f617e3bbea18d61afb1923684" translate="yes" xml:space="preserve">
          <source>Line 1 - &lt;code&gt;animal=cat,dog,cat,tiger,dog&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;L&amp;iacute;nea 1 - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;animal=cat,dog,cat,tiger,dog&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ed24d8e3e1c0c95d9b4755a92be4a9f54e6fb231" translate="yes" xml:space="preserve">
          <source>Line 2 - &lt;code&gt;animal=cat,cat,dog,dog,tiger&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;L&amp;iacute;nea 2 - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;animal=cat,cat,dog,dog,tiger&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98fc7b56a6846f9710703ab5eae4f0a03fe308a1" translate="yes" xml:space="preserve">
          <source>Line 3 - &lt;code&gt;animal=dog,dog,cat,cat,tiger&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;L&amp;iacute;nea 3 - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;animal=dog,dog,cat,cat,tiger&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="928f909cd25d5693fce4bc6308324fad51c64621" translate="yes" xml:space="preserve">
          <source>Non-capturing groups are great if you are trying to capture many different things and there are some groups you don't want to capture.</source>
          <target state="translated">Los grupos no capturables son muy buenos si estás tratando de capturar muchas cosas diferentes y hay algunos grupos que no quieres capturar.</target>
        </trans-unit>
        <trans-unit id="0dec0b6d33a858c36135ae23afa7bbe2e863c0c0" translate="yes" xml:space="preserve">
          <source>Note that I don't care about saving the first 3 octets, but the &lt;code&gt;(?:...)&lt;/code&gt; grouping allows me to shorten the regex without incurring the overhead of capturing and storing a match.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que no me importa guardar los primeros 3 octetos, pero la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;agrupaci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:...)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; me permite acortar la expresi&amp;oacute;n regular sin incurrir en la sobrecarga de capturar y almacenar una coincidencia.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a9d7295831f17a416ec0423a517b61f8dedbbc67" translate="yes" xml:space="preserve">
          <source>Now let's say, you only need the id part of the address. What you want to do is to grab the first group of the match result, surrounded by &lt;code&gt;()&lt;/code&gt; in the regex and the way to do this is to use the non-capturing group syntax, i.e. &lt;code&gt;?:&lt;/code&gt;. So the regex &lt;code&gt;(\p{Alpha}*[a-z])(?:@example.com)&lt;/code&gt; will return just the id part of the email.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora digamos que solo necesita la parte de identificaci&amp;oacute;n de la direcci&amp;oacute;n. Lo que se quiere hacer es agarrar el primer grupo del resultado del partido, rodeado de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en la expresi&amp;oacute;n regular y la manera de hacer esto es utilizar la sintaxis no la captura de grupo, es decir &lt;/font&gt;&lt;/font&gt; &lt;code&gt;?:&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Entonces, la expresi&amp;oacute;n regular &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(\p{Alpha}*[a-z])(?:@example.com)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; devolver&amp;aacute; solo la parte de identificaci&amp;oacute;n del correo electr&amp;oacute;nico.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0d2c52f7e270ca5e6bb3a810803588ff5f551b65" translate="yes" xml:space="preserve">
          <source>Now, if I apply the regex below over it...</source>
          <target state="translated">Ahora,si aplico el regex de abajo sobre él...</target>
        </trans-unit>
        <trans-unit id="36f361b61189aff42b7eebd5607b8d7f76a4b27b" translate="yes" xml:space="preserve">
          <source>Now, let's use this dumb regex over it:</source>
          <target state="translated">Ahora,vamos a usar este tonto regex sobre él:</target>
        </trans-unit>
        <trans-unit id="a79bbab80e5f51a1ba97e8d1a5a565646de7af3e" translate="yes" xml:space="preserve">
          <source>Now, my result looks like this:</source>
          <target state="translated">Ahora,mi resultado se ve así:</target>
        </trans-unit>
        <trans-unit id="1f274cd072a23fa7cccb71fc8297c70751c9a459" translate="yes" xml:space="preserve">
          <source>Ok, imagine you have some kind of XML or HTML (be aware that &lt;a href=&quot;https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags&quot;&gt;regex may not be the best tool for the job&lt;/a&gt;, but it is nice as an example). You want to parse the tags, so you could do something like this (I have added spaces to make it easier to understand):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ok, imagine que tiene alg&amp;uacute;n tipo de XML o HTML (tenga en cuenta que la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;expresi&amp;oacute;n regular puede no ser la mejor herramienta para el trabajo&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero es bueno como ejemplo). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Desea analizar las etiquetas, por lo que podr&amp;iacute;a hacer algo como esto (he agregado espacios para que sea m&amp;aacute;s f&amp;aacute;cil de entender):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d884c7d7d1bf713f8c2c281bc9fe3cd4f545114" translate="yes" xml:space="preserve">
          <source>One interesting thing that I came across is the fact that you can have a capturing group inside a non-capturing group. Have a look at below regex for matching web urls:</source>
          <target state="translated">Una cosa interesante que encontré es el hecho de que puedes tener un grupo de captura dentro de un grupo de no captura.Mira debajo de regex para ver las url de la web que coinciden:</target>
        </trans-unit>
        <trans-unit id="f1c9dcb4cd92829730ac3cc2143bc86b38c1daa8" translate="yes" xml:space="preserve">
          <source>Open your Google Chrome devTools and then Console tab: and type this:</source>
          <target state="translated">Abre tu Google Chrome devTools y luego la pestaña Consola:y escribe esto:</target>
        </trans-unit>
        <trans-unit id="5b59a89b13d60aab47b70580d466c5ce41419ec3" translate="yes" xml:space="preserve">
          <source>Regex Code: &lt;code&gt;(?:animal)(?:=)(\w+)(,)\1\2&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C&amp;oacute;digo de expresi&amp;oacute;n regular: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:animal)(?:=)(\w+)(,)\1\2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a76abf14694f69d61d1bb18343ad634bb670d59a" translate="yes" xml:space="preserve">
          <source>Run it and you will see:</source>
          <target state="translated">Pásalo y verás:</target>
        </trans-unit>
        <trans-unit id="3642e9d0e043b335858ccab6c89ee4552a574fd9" translate="yes" xml:space="preserve">
          <source>Say you want to match numeric text, but some numbers could be written as 1st, 2nd, 3rd, 4th,...  If you want to capture the numeric part, but not the (optional) suffix you can use a non-capturing group.</source>
          <target state="translated">Digamos que quieres hacer coincidir un texto numérico,pero algunos números podrían escribirse como 1,2,3,4,...Si quieres capturar la parte numérica,pero no el sufijo (opcional)puedes usar un grupo no capturador.</target>
        </trans-unit>
        <trans-unit id="662b07a2d3845512550aba285e519dc9184a801a" translate="yes" xml:space="preserve">
          <source>See? The first group has not been captured. The parser uses it to match the text, but ignores it later, in the final result.</source>
          <target state="translated">¿Veis? El primer grupo no ha sido capturado.El analizador lo usa para hacer coincidir el texto,pero lo ignora después,en el resultado final.</target>
        </trans-unit>
        <trans-unit id="a755f44d8210aa9fb1addd2d290074c17bf1ba87" translate="yes" xml:space="preserve">
          <source>So if you notice that there is a nested group &lt;code&gt;([A-Za-z]+)&lt;/code&gt; inside the non-capturing group. That nested group &lt;code&gt;([A-Za-z]+)&lt;/code&gt; is a capturing group (not having &lt;code&gt;?:&lt;/code&gt; at the beginning) in itself inside a non-capturing group &lt;code&gt;(?:([A-Za-z]+):)&lt;/code&gt;. That's why the text &lt;code&gt;http&lt;/code&gt; still gets captured but the colon &lt;code&gt;:&lt;/code&gt; character which is inside the non-capturing group but outside the capturing group doesn't get reported in the output array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, si observa que hay un grupo anidado &lt;/font&gt;&lt;/font&gt; &lt;code&gt;([A-Za-z]+)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; dentro del grupo que no captura. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ese grupo anidado &lt;/font&gt;&lt;/font&gt; &lt;code&gt;([A-Za-z]+)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es un grupo de captura (que no tiene &lt;/font&gt;&lt;/font&gt; &lt;code&gt;?:&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Al principio) en s&amp;iacute; mismo dentro de un grupo no capturador &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:([A-Za-z]+):)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es por eso que el texto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;http&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; todav&amp;iacute;a se captura, pero los dos puntos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;:&lt;/code&gt; el&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; car&amp;aacute;cter que est&amp;aacute; dentro del grupo que no captura pero fuera del grupo de captura no se informa en la matriz de salida.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="19e7e3ad72117c5317984ec5b1edb5657293488f" translate="yes" xml:space="preserve">
          <source>So in this code by giving &lt;code&gt;\1&lt;/code&gt; and &lt;code&gt;\2&lt;/code&gt; we recall or repeat the result of captured group 1 and 2 respectively later in the code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, en este c&amp;oacute;digo al dar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;\1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;\2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; recordamos o repetimos el resultado del grupo capturado 1 y 2 respectivamente m&amp;aacute;s adelante en el c&amp;oacute;digo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="357367b5957f0c6f83afcc57e98869313f465e4c" translate="yes" xml:space="preserve">
          <source>So, if we apply the substitution string:</source>
          <target state="translated">Así que,si aplicamos la cadena de sustitución:</target>
        </trans-unit>
        <trans-unit id="4fa2a8f807d64fdaff79b5a7ca7af29c6812c71c" translate="yes" xml:space="preserve">
          <source>That will match numbers in the form 1, 2, 3... or in the form 1st, 2nd, 3rd,... but it will only capture the numeric part.</source>
          <target state="translated">Eso coincidirá con los números en la forma 1,2,3...o en la forma 1,2,3,...pero sólo capturará la parte numérica.</target>
        </trans-unit>
        <trans-unit id="73f6c8798d99899797302d167e109c75e80214a3" translate="yes" xml:space="preserve">
          <source>Thats pretty much the reason they exist.  While you are learning about groups, learn about &lt;a href=&quot;http://www.regular-expressions.info/atomic.html&quot;&gt;Atomic Groups&lt;/a&gt;, they do a lot!  There is also lookaround groups but they are a little more complex and not used so much.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esa es la raz&amp;oacute;n por la que existen. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mientras aprende sobre grupos, aprenda sobre &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.regular-expressions.info/atomic.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Grupos at&amp;oacute;micos&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &amp;iexcl;hacen mucho! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n hay grupos de b&amp;uacute;squeda, pero son un poco m&amp;aacute;s complejos y no se usan tanto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="14a69e4759845310875b34b062b2002490ab9bcb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JavaScript&lt;/code&gt; RegExp engine capture three groups, the items with indexes 1,2,3. Now  use non-capturing mark to see the result.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;motor RegExp de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JavaScript&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; captura tres grupos, los elementos con &amp;iacute;ndices 1,2,3. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora use la marca de no captura para ver el resultado.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="13d974c0959db61c745376ce8ffaca83f53ce956" translate="yes" xml:space="preserve">
          <source>The capture variables, &lt;code&gt;$1&lt;/code&gt;, etc, are not valid unless the match succeeded, and they're not cleared, either.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las variables de captura, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , etc., no son v&amp;aacute;lidas a menos que la coincidencia haya tenido &amp;eacute;xito, y tampoco se borran.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0c26a1ed699881851d0465a73258cd4e904856c5" translate="yes" xml:space="preserve">
          <source>The existence of non-capturing groups can be explained with the use of parenthesis.</source>
          <target state="translated">La existencia de grupos no capturados puede explicarse con el uso de paréntesis.</target>
        </trans-unit>
        <trans-unit id="c70a8b4f8a2ad825460fd6179f0c38d96e7d7f06" translate="yes" xml:space="preserve">
          <source>The first group in my regex &lt;code&gt;(?:([A-Za-z]+):)&lt;/code&gt; is a non-capturing group which matches the protocol scheme and colon &lt;code&gt;:&lt;/code&gt; character i.e. &lt;code&gt;http:&lt;/code&gt; but when I was running below code, I was seeing the 1st index of the returned array was containing the string &lt;code&gt;http&lt;/code&gt; when I was thinking that &lt;code&gt;http&lt;/code&gt; and colon &lt;code&gt;:&lt;/code&gt; both will not get reported as they are inside a non-capturing group.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El primer grupo en mi expresi&amp;oacute;n regular &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:([A-Za-z]+):)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es un grupo que no captura y que coincide con el esquema de protocolo y los dos puntos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;:&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es decir, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;http:&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pero cuando estaba ejecutando debajo del c&amp;oacute;digo, estaba viendo el primer &amp;iacute;ndice de la matriz devuelta conten&amp;iacute;a la cadena &lt;/font&gt;&lt;/font&gt; &lt;code&gt;http&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cuando pensaba que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;http&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y dos puntos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;:&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ambos no se informar&amp;aacute;n ya que est&amp;aacute;n dentro de un grupo que no captura.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="933f274efc29a60ddcbc9dd53e5bc757b24ff8f8" translate="yes" xml:space="preserve">
          <source>The first regex has a named group (TAG), while the second one uses a common group. Both regexes do the same thing: they use the value from the first group (the name of the tag) to match the closing tag. The difference is that the first one uses the name to match the value, and the second one uses the group index (which starts at 1).</source>
          <target state="translated">El primer regex tiene un grupo denominado (TAG),mientras que el segundo utiliza un grupo común.Ambos regex hacen lo mismo:usan el valor del primer grupo (el nombre de la etiqueta)para coincidir con la etiqueta de cierre.La diferencia es que el primero usa el nombre para coincidir con el valor,y el segundo usa el índice de grupo (que comienza en 1).</target>
        </trans-unit>
        <trans-unit id="ae54010f75119dee887bb47e46927d86541df658" translate="yes" xml:space="preserve">
          <source>The non-capturing group &lt;code&gt;(?...)&lt;/code&gt; 
does &lt;strong&gt;not remove&lt;/strong&gt; any characters from the original full match, &lt;strong&gt;it only&lt;/strong&gt; reorganises the regex visually to the programmer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El grupo sin captura &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?...)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no elimina&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cualquier car&amp;aacute;cter del juego original completo, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;s&amp;oacute;lo se&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; reorganiza la expresi&amp;oacute;n regular visualmente al programador.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f9d8170d98950c22e6026933d7548298a3e52f98" translate="yes" xml:space="preserve">
          <source>The result is:</source>
          <target state="translated">El resultado es:</target>
        </trans-unit>
        <trans-unit id="318ceae08ec25fde53661e4228851bc15eebe840" translate="yes" xml:space="preserve">
          <source>This is obvious what is non capturing group.</source>
          <target state="translated">Esto es obvio lo que es un grupo no capturador.</target>
        </trans-unit>
        <trans-unit id="b66439f3881a02902ca6010d6d2bd92a7434e78a" translate="yes" xml:space="preserve">
          <source>This regex matches words with at least 3 characters, and uses groups to separate the first three letters. The result is this:</source>
          <target state="translated">Este regex empareja palabras con al menos 3 caracteres,y usa grupos para separar las tres primeras letras.El resultado es este:</target>
        </trans-unit>
        <trans-unit id="a07a319e45b5785cb254dadda8ec13bc616e6c15" translate="yes" xml:space="preserve">
          <source>To access a specific part of the regex without defined extraneous characters you would always need to use &lt;code&gt;.group(&amp;lt;index&amp;gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para acceder a una parte espec&amp;iacute;fica de la expresi&amp;oacute;n regular sin caracteres extra&amp;ntilde;os definidos, siempre necesitar&amp;aacute; usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.group(&amp;lt;index&amp;gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84b6e00b2a2f4b65773933ec5844cb70ef7e26f8" translate="yes" xml:space="preserve">
          <source>To play around with regexes, I recommend &lt;a href=&quot;http://regex101.com/&quot;&gt;http://regex101.com/&lt;/a&gt;, which offers a good amount of details on how the regex works; it also offers a few regex engines to choose from.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para jugar con expresiones regulares, recomiendo &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://regex101.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://regex101.com/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que ofrece una buena cantidad de detalles sobre c&amp;oacute;mo funciona la expresi&amp;oacute;n regular; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n ofrece algunos motores regex para elegir.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b243fe5772ab0c1a785f69808ef43d49a3b3e9d5" translate="yes" xml:space="preserve">
          <source>Well I am a JavaScript developer and will try to explain its significance pertaining to JavaScript.</source>
          <target state="translated">Bueno,soy un desarrollador de JavaScript y trataré de explicar su importancia en relación con el JavaScript.</target>
        </trans-unit>
        <trans-unit id="53d569ad77d1085fc503c918599e5104238c6aff" translate="yes" xml:space="preserve">
          <source>Well, groups serve many purposes. They can help you to extract exact information from a bigger match (which can also be named), they let you rematch a previous matched group, and can be used for substitutions. Let's try some examples, shall we?</source>
          <target state="translated">Bueno,los grupos sirven para muchos propósitos.Pueden ayudarte a extraer información exacta de un partido más grande (que también puede ser nombrado),te permiten volver a emparejar un grupo anterior,y pueden ser usados para sustituciones.Probemos con algunos ejemplos,¿sí?</target>
        </trans-unit>
        <trans-unit id="f734eb4f0ab2949982e36e9579f7d8ba1c487224" translate="yes" xml:space="preserve">
          <source>What is a non-capturing group in regular expressions</source>
          <target state="translated">¿Qué es un grupo de no captura en expresiones regulares</target>
        </trans-unit>
        <trans-unit id="70142d01328081ebf39c9733293e91db29341e97" translate="yes" xml:space="preserve">
          <source>When you want to have parenthesis but not capture the sub-expression you use NON-CAPTURING GROUPS. In the example, &lt;code&gt;(?:a|b)c&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando desea tener par&amp;eacute;ntesis pero no capturar la subexpresi&amp;oacute;n, usa GRUPOS NO CAPTURANTES. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En el ejemplo, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:a|b)c&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a4477b8c9f4bec5e436c46e7090f42132a3ba00" translate="yes" xml:space="preserve">
          <source>You can use capturing groups to organize and parse an expression.  A non-capturing group has the first benefit, but doesn't have the overhead of the second.  You can still say a non-capturing group is optional, for example.</source>
          <target state="translated">Puedes usar grupos de captura para organizar y analizar una expresión.Un grupo no capturador tiene el primer beneficio,pero no tiene los gastos generales del segundo.Puedes decir que un grupo de no captura es opcional,por ejemplo.</target>
        </trans-unit>
        <trans-unit id="3e558ad69a8ba496c74b18d311adf75066f0d177" translate="yes" xml:space="preserve">
          <source>You can use named groups for substitutions too, using &lt;code&gt;${name}&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n puede usar grupos con nombre para las sustituciones, usando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;${name}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="329f9f97cceaba3b659f997963c599aa962deb8a" translate="yes" xml:space="preserve">
          <source>but by giving the &lt;code&gt;?:&lt;/code&gt; we make the match-group non captured (which do not count off in matched group, so the grouping number starts from the first captured group and not the non captured), so that the repetition of the result of match-group &lt;code&gt;(?:animal)&lt;/code&gt; can't be called later in code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pero al dar el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;?:&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; hacemos que el grupo de coincidencia no sea capturado (lo que no cuenta en el grupo coincidente, por lo que el n&amp;uacute;mero de agrupaci&amp;oacute;n comienza desde el primer grupo capturado y no el no capturado), de modo que la repetici&amp;oacute;n del resultado de la coincidencia -grupo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:animal)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no se puede llamar m&amp;aacute;s tarde en el c&amp;oacute;digo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cda3502beefadf8b98a36ab2b6b179e5765a5f31" translate="yes" xml:space="preserve">
          <source>so the regular expression would be,</source>
          <target state="translated">así que la expresión regular sería,</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
