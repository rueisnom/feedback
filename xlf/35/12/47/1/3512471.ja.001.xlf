<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/3512471">
    <body>
      <group id="3512471">
        <trans-unit id="bcf0d126ecf0118f14796b2398997a40ae04dbcd" translate="yes" xml:space="preserve">
          <source>... I would get the following result:</source>
          <target state="translated">...私なら以下のような結果になります。</target>
        </trans-unit>
        <trans-unit id="e676d3c3446448a15304f4211ad1b20f882e04f5" translate="yes" xml:space="preserve">
          <source>... over it, we are trying to use the first group, add an underscore, use the third group, then the second group, add another underscore, and then the fourth group. The resulting string would be like the one below.</source>
          <target state="translated">...その上で、最初のグループを使用し、アンダースコアを追加し、3番目のグループを使用し、2番目のグループを使用し、別のアンダースコアを追加し、4番目のグループを使用しようとしています。結果として得られる文字列は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="8d7b22b0b137294fd5060dc96e83c2e36087c17e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;([A-Z][A-Z0-9]*)\b[^&amp;gt;]*&amp;gt;.*?&amp;lt;/\1&amp;gt;&lt;/code&gt;  [ Finds an xml tag (without ns support) ]</source>
          <target state="translated">&lt;code&gt;&amp;lt;([A-Z][A-Z0-9]*)\b[^&amp;gt;]*&amp;gt;.*?&amp;lt;/\1&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; [xmlタグを検索します（nsサポートなし）]&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d6e0fe4cd1a0261b6f7dffe18465ce0c6bd73555" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(,)&lt;/code&gt;--&amp;gt; Captured Group 2</source>
          <target state="translated">&lt;code&gt;(,)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&amp;gt;キャプチャされたグループ2&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b87d78ba8679f96c2130a3dbc6e88950fee8228" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(?:=)&lt;/code&gt;--&amp;gt; Non-Captured Group 2</source>
          <target state="translated">&lt;code&gt;(?:=)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&amp;gt;キャプチャされていないグループ2&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f413d73a52a778e7fb5b3df9208b4ab712159ac3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(?:animal)&lt;/code&gt; --&amp;gt; Non-Captured Group 1</source>
          <target state="translated">&lt;code&gt;(?:animal)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&amp;gt;キャプチャされていないグループ1&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0b7963c035deb8fbc21e44b7caa16b852993ff4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;([A-Z][A-Z0-9]*)&lt;/code&gt; is a capturing group (in this case it is the tagname)</source>
          <target state="translated">&lt;code&gt;([A-Z][A-Z0-9]*)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はキャプチャグループです（この場合はタグ名です）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b68561957d734503999badcc4801abfc5e772b12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(\w+)&lt;/code&gt;--&amp;gt; Captured Group 1</source>
          <target state="translated">&lt;code&gt;(\w+)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&amp;gt;キャプチャされたグループ1&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d61c24f1edc0bdca1ad0588eda1164c670624b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?:&lt;/code&gt; is used when you want to group an expression, but you do not want to save it as a matched/captured portion of the string.</source>
          <target state="translated">&lt;code&gt;?:&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;式をグループ化したいが、文字列の一致/キャプチャされた部分として保存したくない場合に使用されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9754acdd6f94185fe697370370027059e969e2d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\1&lt;/code&gt; --&amp;gt; result of captured group 1 i.e In Line 1 is cat, In Line 2 is cat, In Line 3 is dog.</source>
          <target state="translated">&lt;code&gt;\1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;gt;キャプチャされたグループ1の結果。つまり、ライン1は猫、ライン2は猫、ライン3は犬です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="627a7a83cc0fc15be9e5f95c9c58a8fc0bb38fc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\2&lt;/code&gt; --&amp;gt; result of captured group 2 i.e comma (,)</source>
          <target state="translated">&lt;code&gt;\2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;gt;キャプチャされたグループ2の結果、つまりコンマ（、）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="772db0e3b9f2b34f24b763cded895c8fddc1e5b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Hope this explains the use of non capturing group.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これが非捕捉グループの使用を説明することを願っています。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5f71ecb148d8f60d740e36bab1c15ed940f0c5d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Let me try this with an example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例でこれを試してみましょう：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="75885fa7b4b4d05f5599fa72d28b180a52274c86" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Search String:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;検索文字列：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e74407f6e0ab790de8a950e7d4735f204a851f27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;So, the output will be as below:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、出力は次のようになります。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8036b5b4c918d300090aa8d7a6011feed1eb6ef3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tl;dr&lt;/strong&gt; non-capturing groups, as the name suggests are the parts of the regex that you do not want to be included in the match and &lt;code&gt;?:&lt;/code&gt; is a way to define a group as being non-capturing.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名前が示すように、&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tl; dr&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非キャプチャグループは一致に含めたくない正規表現の一部であり、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;?:&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はグループを非キャプチャとして定義する方法です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b862ccef0aa65d103454beb2c0a3b6164a052d1e" translate="yes" xml:space="preserve">
          <source>An example would be something to match an IP address:</source>
          <target state="translated">例としては、IPアドレスと一致するものが挙げられます。</target>
        </trans-unit>
        <trans-unit id="c7b878320593df0bcf3070cb1d7927cca232be0b" translate="yes" xml:space="preserve">
          <source>As per the order of code &lt;code&gt;(?:animal)&lt;/code&gt; should be group 1 and &lt;code&gt;(?:=)&lt;/code&gt; should be group 2 and continues..</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コードの順序に従って&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:animal)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はグループ1であり、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:=)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はグループ2である必要があり、続行します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a92a14f93428452b73ba027e5dca4c177ffbb9b8" translate="yes" xml:space="preserve">
          <source>As requested, let me try to explain groups too.</source>
          <target state="translated">ご要望通り、グループの説明もさせてください。</target>
        </trans-unit>
        <trans-unit id="b609a4cf5e3a806bf6ea63e5189d426110b52753" translate="yes" xml:space="preserve">
          <source>But I don't care about the protocol -- I just want the host and path of the URL. So, I change the regex to include the non-capturing group &lt;code&gt;(?:)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、プロトコルについては気にしません。URLのホストとパスだけが必要です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そこで、非キャプチャグループ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を含むように正規表現を変更し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd1c31df99c682d3fcad72a5e0aa95676b0bee1f" translate="yes" xml:space="preserve">
          <source>Consider a scenario where you want to match &lt;code&gt;cat is animal&lt;/code&gt;
when you would like match cat and animal and both should have a &lt;code&gt;is&lt;/code&gt; in between them.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたが一致するシナリオを検討&lt;/font&gt;&lt;/font&gt; &lt;code&gt;cat is animal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; あなたがマッチ猫と動物のようになるとの両方が持つべきとき&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それらの間で。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5b1e5874ffbd61df419bd16b3496a99760914305" translate="yes" xml:space="preserve">
          <source>Consider the expressions &lt;code&gt;(a|b)c&lt;/code&gt; and &lt;code&gt;a|bc&lt;/code&gt;, due to priority of concatenation over &lt;code&gt;|&lt;/code&gt;, these expressions represent two different languages (&lt;code&gt;{ac, bc}&lt;/code&gt; and &lt;code&gt;{a, bc}&lt;/code&gt; respectively).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;a|bc&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;よりも連結の優先度が高いため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、式&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(a|b)c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;a | bcを&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;検討します&lt;/font&gt;&lt;/font&gt; &lt;code&gt;|&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、これらの式は2つの異なる言語を表します（それぞれ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;{ac, bc}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;{a, bc}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="264905281596046843b12de293d71e42b7e7688d" translate="yes" xml:space="preserve">
          <source>Consider the following text:</source>
          <target state="translated">次の文章を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="16a0b451f01e21349e7ff6a5419e8ec27f88d8d0" translate="yes" xml:space="preserve">
          <source>EDIT:</source>
          <target state="translated">EDIT:</target>
        </trans-unit>
        <trans-unit id="bf23515c405d573441877e64b3bcc3048bf11b42" translate="yes" xml:space="preserve">
          <source>Example of using later on in the regex (backreference):</source>
          <target state="translated">正規表現(バックリファレンス)で後から使う例。</target>
        </trans-unit>
        <trans-unit id="4d143a48e760953f2206a56df2a4440e50f1f46f" translate="yes" xml:space="preserve">
          <source>Groups that &lt;strong&gt;capture&lt;/strong&gt; you can use later on in the regex to match &lt;strong&gt;OR&lt;/strong&gt; you can use them in the replacement part of the regex.  Making a &lt;strong&gt;non-capturing&lt;/strong&gt; group simply exempts that group from being used for either of these reasons.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;グループ&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のキャプチャ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたが一致する正規表現中に、後に使用することができます&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたが正規表現の交換部品でそれらを使用することができます。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非キャプチャ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;グループを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成すると&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、これらの理由のいずれかでそのグループの使用が免除されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e1b6cc0dc3dd4dd8335f0eae667eaa49d2144ff7" translate="yes" xml:space="preserve">
          <source>HISTORICAL MOTIVATION:</source>
          <target state="translated">歴史的動機。</target>
        </trans-unit>
        <trans-unit id="213aee9e28e115d3ca4ebcad92457d21b2b7d23c" translate="yes" xml:space="preserve">
          <source>How are non-capturing groups, i.e. &lt;code&gt;(?:)&lt;/code&gt;, used in regular expressions and what are they good for?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非キャプチャグループ、つまり&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は正規表現でどのように使用され、どのような目的に適していますか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="224d7bd00a2a5cf12a7b471ed8d149017cff7c49" translate="yes" xml:space="preserve">
          <source>However, the parenthesis are also used as a matching group (as explained by the other answers...).</source>
          <target state="translated">ただし、(他の回答で説明されているように...)カッコ内はマッチンググループとしても使われています。</target>
        </trans-unit>
        <trans-unit id="3ab0fc4bdf1f3f852c478c53fe809cbcf1b57a77" translate="yes" xml:space="preserve">
          <source>I cannot comment on the top answers to say this: I would like to add an explicit point which is only implied in the top answers:</source>
          <target state="translated">これを言うためにトップアンサーにコメントすることはできません。上の回答でしか暗示されていない明示的な指摘を加えたいと思います。</target>
        </trans-unit>
        <trans-unit id="278b25ea15e8f1a2876947ecd7cf6f00824ee9c6" translate="yes" xml:space="preserve">
          <source>I think I would give you the answer. Don't use capture variables without checking that the match succeeded.</source>
          <target state="translated">私なら答えを出すと思います。マッチが成功したことを確認せずにキャプチャ変数を使うのはやめましょう。</target>
        </trans-unit>
        <trans-unit id="7c72585f7f59b0950dbe2ce10550a24b61487618" translate="yes" xml:space="preserve">
          <source>I thought if the first group &lt;code&gt;(?:([A-Za-z]+):)&lt;/code&gt; is a non-capturing group then why it is returning &lt;code&gt;http&lt;/code&gt; string in the output array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初のグループ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:([A-Za-z]+):)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が非キャプチャグループである場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、出力配列に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;http&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返す理由を考え&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ました。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e7e9bcc060a5f0ae1d16003068494f777d48d5e" translate="yes" xml:space="preserve">
          <source>If the pattern is matched , then &lt;code&gt;$1&lt;/code&gt; is captured as next grouped pattern.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パターンが一致した場合、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次のグループ化されたパターンとして&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がキャプチャされます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a74cff867e72f6b90bcf3a4fed1c8ad63142468e" translate="yes" xml:space="preserve">
          <source>In complex regular expressions you may have the situation arise where you wish to use a large number of groups some of which are there for repetition matching and some of which are there to provide back references. By default the text matching each group is loaded into the backreference array. Where we have lots of groups and only need to be able to reference some of them from the backreference array we can override this default behaviour to tell the regular expression that certain groups are there only for repetition handling and do not need to be captured and stored in the backreference array.</source>
          <target state="translated">複雑な正規表現では、多数のグループを使用したい場合があるでしょう。デフォルトでは、各グループにマッチするテキストが後方参照配列にロードされます。たくさんのグループがあり、そのうちのいくつかだけを後方参照配列から参照する必要がある場合は、このデフォルトの動作をオーバーライドして、特定のグループは繰り返し処理のためだけに存在し、後方参照配列に取り込まれて保存される必要がないことを正規表現に伝えることができます。</target>
        </trans-unit>
        <trans-unit id="9daca7626ec573ded51fa04dac04f67eb08735f4" translate="yes" xml:space="preserve">
          <source>In the above example, to avoid capturing bronto in &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;(?:)&lt;/code&gt; is used.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記の例では、ブロントを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キャプチャしないようにするため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用しています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="369d761cfe07f98f24131cbd8cb9afa94cec6de3" translate="yes" xml:space="preserve">
          <source>Input url string:</source>
          <target state="translated">url文字列を入力します。</target>
        </trans-unit>
        <trans-unit id="ecf8bc5cb8774a51996a3b1d64ef1449713980c6" translate="yes" xml:space="preserve">
          <source>It is Useful if you don't want the matches to be saved.</source>
          <target state="translated">マッチを保存したくない場合に便利です。</target>
        </trans-unit>
        <trans-unit id="819f9a951ddc20cbf71662734141f8ed11468fd1" translate="yes" xml:space="preserve">
          <source>It makes the group non-capturing, which means that the substring matched by that group will not be included in the list of captures. An example in ruby to illustrate the difference:</source>
          <target state="translated">これはグループを捕捉しないものにします。つまり、そのグループにマッチした部分文字列は捕捉リストに含まれないことを意味します。この違いを説明するための ruby の例を示します。</target>
        </trans-unit>
        <trans-unit id="1f7fbb7891b3402052270ff4133b332e8ed65674" translate="yes" xml:space="preserve">
          <source>Its as simple as that.</source>
          <target state="translated">それはそれと同じくらい簡単です。</target>
        </trans-unit>
        <trans-unit id="04eecf74cbc06fc131595c71a1e320387b05f571" translate="yes" xml:space="preserve">
          <source>Its extremely simple, We can understand with simple date example, suppose if the date is mentioned as 1st January 2019 or 2nd May 2019 or any other date and we simply want to convert it to &lt;strong&gt;dd/mm/yyyy&lt;/strong&gt; format we would not need the month's name which is January or February for that matter, so in order to capture the numeric part, but not the (optional) suffix you can use a non-capturing group.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非常に単純です。単純な日付の例で理解できます。日付が2019年1月1日、2019年5月2日、またはその他の日付として言及されており、単にそれを&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;dd / mm / yyyy&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;形式&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に変換したい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合、月の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;日付&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は必要ありません。つまり、1月または2月の名前なので、数値部分をキャプチャするために（オプションの）サフィックスをキャプチャするために、非キャプチャグループを使用できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9976df8cd06470bec3bcac27c19305b473d398a3" translate="yes" xml:space="preserve">
          <source>Later on in the regex is &lt;code&gt;\1&lt;/code&gt; which means it will only match the same text that was in the first group (the &lt;code&gt;([A-Z][A-Z0-9]*)&lt;/code&gt; group) (in this case it is matching the end tag).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;後の正規表現では&lt;/font&gt;&lt;/font&gt; &lt;code&gt;\1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。つまり、最初のグループ（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;([A-Z][A-Z0-9]*)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;グループ）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と同じテキストのみに一致します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（この場合、終了タグに一致しています） ）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43adfd1cdfc25034d3502f087497ed3ea98160ef" translate="yes" xml:space="preserve">
          <source>Let me try to explain this with an example.</source>
          <target state="translated">例を挙げて説明してみます。</target>
        </trans-unit>
        <trans-unit id="f3283cce490022a6d472f45cdb3f88d5b2aec05f" translate="yes" xml:space="preserve">
          <source>Let's say you have an email address &lt;code&gt;example@example.com&lt;/code&gt;. The following regex will create two &lt;strong&gt;groups&lt;/strong&gt;, the id part and @example.com part. &lt;code&gt;(\p{Alpha}*[a-z])(@example.com)&lt;/code&gt;. For simplicity's sake, we are extracting the whole domain name including the &lt;code&gt;@&lt;/code&gt; character.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メールアドレス&lt;/font&gt;&lt;/font&gt; &lt;code&gt;example@example.com&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を持っているとしましょう&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次の正規表現は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、id部分と@ example.com部分の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2つの&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;グループ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を作成し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(\p{Alpha}*[a-z])(@example.com)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;簡単にするために、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を含むドメイン名全体を抽出しています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f885c63824e77156466ae1912e924f5afcb9e053" translate="yes" xml:space="preserve">
          <source>Let's try some substitutions now. Consider the following text:</source>
          <target state="translated">今からいくつか代用してみましょう。次の文章を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="f8209e598b57132f617e3bbea18d61afb1923684" translate="yes" xml:space="preserve">
          <source>Line 1 - &lt;code&gt;animal=cat,dog,cat,tiger,dog&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1行目&lt;/font&gt;&lt;/font&gt; &lt;code&gt;animal=cat,dog,cat,tiger,dog&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ed24d8e3e1c0c95d9b4755a92be4a9f54e6fb231" translate="yes" xml:space="preserve">
          <source>Line 2 - &lt;code&gt;animal=cat,cat,dog,dog,tiger&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2行目&lt;/font&gt;&lt;/font&gt; &lt;code&gt;animal=cat,cat,dog,dog,tiger&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98fc7b56a6846f9710703ab5eae4f0a03fe308a1" translate="yes" xml:space="preserve">
          <source>Line 3 - &lt;code&gt;animal=dog,dog,cat,cat,tiger&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3行目&lt;/font&gt;&lt;/font&gt; &lt;code&gt;animal=dog,dog,cat,cat,tiger&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="928f909cd25d5693fce4bc6308324fad51c64621" translate="yes" xml:space="preserve">
          <source>Non-capturing groups are great if you are trying to capture many different things and there are some groups you don't want to capture.</source>
          <target state="translated">キャプチャしないグループは、いろいろなものをキャプチャーしようとしていて、キャプチャーしたくないグループがある場合にはいいと思います。</target>
        </trans-unit>
        <trans-unit id="0dec0b6d33a858c36135ae23afa7bbe2e863c0c0" translate="yes" xml:space="preserve">
          <source>Note that I don't care about saving the first 3 octets, but the &lt;code&gt;(?:...)&lt;/code&gt; grouping allows me to shorten the regex without incurring the overhead of capturing and storing a match.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初の3オクテットを保存する必要はありませんが、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:...)&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;グループ化により、一致をキャプチャして保存するオーバーヘッドを発生させることなく、正規表現を短縮できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a9d7295831f17a416ec0423a517b61f8dedbbc67" translate="yes" xml:space="preserve">
          <source>Now let's say, you only need the id part of the address. What you want to do is to grab the first group of the match result, surrounded by &lt;code&gt;()&lt;/code&gt; in the regex and the way to do this is to use the non-capturing group syntax, i.e. &lt;code&gt;?:&lt;/code&gt;. So the regex &lt;code&gt;(\p{Alpha}*[a-z])(?:@example.com)&lt;/code&gt; will return just the id part of the email.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで、アドレスのid部分だけが必要だとしましょう。やりたいことは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、正規表現で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;囲まれた一致結果の最初のグループを取得する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことです。これを行う方法は、非キャプチャグループ構文、つまり&lt;/font&gt;&lt;/font&gt; &lt;code&gt;?:&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用すること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。したがって、正規表現&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(\p{Alpha}*[a-z])(?:@example.com)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、メールのid部分のみを返します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0d2c52f7e270ca5e6bb3a810803588ff5f551b65" translate="yes" xml:space="preserve">
          <source>Now, if I apply the regex below over it...</source>
          <target state="translated">さて、その上に下の正規表現を適用すると...</target>
        </trans-unit>
        <trans-unit id="36f361b61189aff42b7eebd5607b8d7f76a4b27b" translate="yes" xml:space="preserve">
          <source>Now, let's use this dumb regex over it:</source>
          <target state="translated">さて、このおぼろげな正規表現を使ってみましょう。</target>
        </trans-unit>
        <trans-unit id="a79bbab80e5f51a1ba97e8d1a5a565646de7af3e" translate="yes" xml:space="preserve">
          <source>Now, my result looks like this:</source>
          <target state="translated">さて、私の結果は次のようになりました。</target>
        </trans-unit>
        <trans-unit id="1f274cd072a23fa7cccb71fc8297c70751c9a459" translate="yes" xml:space="preserve">
          <source>Ok, imagine you have some kind of XML or HTML (be aware that &lt;a href=&quot;https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags&quot;&gt;regex may not be the best tool for the job&lt;/a&gt;, but it is nice as an example). You want to parse the tags, so you could do something like this (I have added spaces to make it easier to understand):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;OK、ある種のXMLまたはHTMLがあると想像してみてください（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正規表現は仕事に最適なツールではないかもしれませんが&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、例としてはすばらしいことです）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タグを解析したいので、次のようなことができます（理解しやすいようにスペースを追加しました）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d884c7d7d1bf713f8c2c281bc9fe3cd4f545114" translate="yes" xml:space="preserve">
          <source>One interesting thing that I came across is the fact that you can have a capturing group inside a non-capturing group. Have a look at below regex for matching web urls:</source>
          <target state="translated">私が出くわした面白いことの一つは、キャプチャしないグループの中にキャプチャグループを持つことができるという事実です。一致するウェブURLのために、以下の正規表現を見てください。</target>
        </trans-unit>
        <trans-unit id="f1c9dcb4cd92829730ac3cc2143bc86b38c1daa8" translate="yes" xml:space="preserve">
          <source>Open your Google Chrome devTools and then Console tab: and type this:</source>
          <target state="translated">Google Chrome devToolsを開き、Consoleタブ:と入力してください。</target>
        </trans-unit>
        <trans-unit id="5b59a89b13d60aab47b70580d466c5ce41419ec3" translate="yes" xml:space="preserve">
          <source>Regex Code: &lt;code&gt;(?:animal)(?:=)(\w+)(,)\1\2&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正規表現コード：（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:animal)(?:=)(\w+)(,)\1\2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a76abf14694f69d61d1bb18343ad634bb670d59a" translate="yes" xml:space="preserve">
          <source>Run it and you will see:</source>
          <target state="translated">実行するとわかります。</target>
        </trans-unit>
        <trans-unit id="3642e9d0e043b335858ccab6c89ee4552a574fd9" translate="yes" xml:space="preserve">
          <source>Say you want to match numeric text, but some numbers could be written as 1st, 2nd, 3rd, 4th,...  If you want to capture the numeric part, but not the (optional) suffix you can use a non-capturing group.</source>
          <target state="translated">数字のテキストを一致させたいとしますが、いくつかの数字は1st,2nd,3rd,4th,...と書かれているかもしれません。数値部分をキャプチャしたいが、(オプションの)接尾辞をキャプチャしたくない場合は、キャプチャしないグループを使用することができます。</target>
        </trans-unit>
        <trans-unit id="662b07a2d3845512550aba285e519dc9184a801a" translate="yes" xml:space="preserve">
          <source>See? The first group has not been captured. The parser uses it to match the text, but ignores it later, in the final result.</source>
          <target state="translated">ほらね?最初のグループはキャプチャされていません。パーサーはそれを使用してテキストにマッチさせますが、最終的な結果では後で無視されます。</target>
        </trans-unit>
        <trans-unit id="a755f44d8210aa9fb1addd2d290074c17bf1ba87" translate="yes" xml:space="preserve">
          <source>So if you notice that there is a nested group &lt;code&gt;([A-Za-z]+)&lt;/code&gt; inside the non-capturing group. That nested group &lt;code&gt;([A-Za-z]+)&lt;/code&gt; is a capturing group (not having &lt;code&gt;?:&lt;/code&gt; at the beginning) in itself inside a non-capturing group &lt;code&gt;(?:([A-Za-z]+):)&lt;/code&gt;. That's why the text &lt;code&gt;http&lt;/code&gt; still gets captured but the colon &lt;code&gt;:&lt;/code&gt; character which is inside the non-capturing group but outside the capturing group doesn't get reported in the output array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、非キャプチャグループ内に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ネストされたグループ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;([A-Za-z]+)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があることに気づいた場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのネストされたグループ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;([A-Za-z]+)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それ自体が非キャプチャグループ&lt;/font&gt; &lt;code&gt;(?:([A-Za-z]+):)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;内のキャプチャグループ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;?:&lt;/code&gt; が&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ない&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのため、テキスト&lt;/font&gt;&lt;/font&gt; &lt;code&gt;http&lt;/code&gt; は&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引き続きキャプチャされますが、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非キャプチャグループ内にあるがキャプチャグループ外にある&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コロン&lt;/font&gt;&lt;/font&gt; &lt;code&gt;:&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字は、出力配列で報告されません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="19e7e3ad72117c5317984ec5b1edb5657293488f" translate="yes" xml:space="preserve">
          <source>So in this code by giving &lt;code&gt;\1&lt;/code&gt; and &lt;code&gt;\2&lt;/code&gt; we recall or repeat the result of captured group 1 and 2 respectively later in the code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、このコードでは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;\1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;\2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与えること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;により、キャプチャされたグループ1と2の結果をそれぞれコードの後半で呼び出すか繰り返します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="357367b5957f0c6f83afcc57e98869313f465e4c" translate="yes" xml:space="preserve">
          <source>So, if we apply the substitution string:</source>
          <target state="translated">そこで、置換文字列を適用すると</target>
        </trans-unit>
        <trans-unit id="4fa2a8f807d64fdaff79b5a7ca7af29c6812c71c" translate="yes" xml:space="preserve">
          <source>That will match numbers in the form 1, 2, 3... or in the form 1st, 2nd, 3rd,... but it will only capture the numeric part.</source>
          <target state="translated">それは1,2,3...または1st,2nd,3rd,...の形の数字にマッチしますが、それは数字の部分だけをキャプチャします。</target>
        </trans-unit>
        <trans-unit id="73f6c8798d99899797302d167e109c75e80214a3" translate="yes" xml:space="preserve">
          <source>Thats pretty much the reason they exist.  While you are learning about groups, learn about &lt;a href=&quot;http://www.regular-expressions.info/atomic.html&quot;&gt;Atomic Groups&lt;/a&gt;, they do a lot!  There is also lookaround groups but they are a little more complex and not used so much.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それが彼らが存在する理由のほとんどです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;グループについて学習している間、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.regular-expressions.info/atomic.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原子グループ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;について学習しますが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、それらは多くのことを行います！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ルックアラウンドグループもありますが、少し複雑であまり使用されていません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="14a69e4759845310875b34b062b2002490ab9bcb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JavaScript&lt;/code&gt; RegExp engine capture three groups, the items with indexes 1,2,3. Now  use non-capturing mark to see the result.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;JavaScript&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正規表現エンジンのキャプチャ三つのグループ、インデックス1,2,3を持つアイテム。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、非キャプチャーマークを使用して結果を確認します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="13d974c0959db61c745376ce8ffaca83f53ce956" translate="yes" xml:space="preserve">
          <source>The capture variables, &lt;code&gt;$1&lt;/code&gt;, etc, are not valid unless the match succeeded, and they're not cleared, either.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キャプチャ変数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などは、一致が成功しない限り無効であり、それらもクリアされません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0c26a1ed699881851d0465a73258cd4e904856c5" translate="yes" xml:space="preserve">
          <source>The existence of non-capturing groups can be explained with the use of parenthesis.</source>
          <target state="translated">非捕獲グループの存在は、括弧を使って説明することができます。</target>
        </trans-unit>
        <trans-unit id="c70a8b4f8a2ad825460fd6179f0c38d96e7d7f06" translate="yes" xml:space="preserve">
          <source>The first group in my regex &lt;code&gt;(?:([A-Za-z]+):)&lt;/code&gt; is a non-capturing group which matches the protocol scheme and colon &lt;code&gt;:&lt;/code&gt; character i.e. &lt;code&gt;http:&lt;/code&gt; but when I was running below code, I was seeing the 1st index of the returned array was containing the string &lt;code&gt;http&lt;/code&gt; when I was thinking that &lt;code&gt;http&lt;/code&gt; and colon &lt;code&gt;:&lt;/code&gt; both will not get reported as they are inside a non-capturing group.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私の正規表現の最初のグループ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:([A-Za-z]+):)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、プロトコルスキームとコロン&lt;/font&gt;&lt;/font&gt; &lt;code&gt;:&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字、つまり&lt;/font&gt;&lt;/font&gt; &lt;code&gt;http:&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一致する非キャプチャグループ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、コードの下で実行していると、返される配列の第一のインデックスは、文字列含むた&lt;/font&gt;&lt;/font&gt; &lt;code&gt;http&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私が考えていたときに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;http&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;やコロン&lt;/font&gt;&lt;/font&gt; &lt;code&gt;:&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;彼らは非キャプチャグループ内にあるとの両方が報告されません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="933f274efc29a60ddcbc9dd53e5bc757b24ff8f8" translate="yes" xml:space="preserve">
          <source>The first regex has a named group (TAG), while the second one uses a common group. Both regexes do the same thing: they use the value from the first group (the name of the tag) to match the closing tag. The difference is that the first one uses the name to match the value, and the second one uses the group index (which starts at 1).</source>
          <target state="translated">最初の正規表現は名前付きグループ (tag)を持ち、2 番目の正規表現は共通のグループを使用します。どちらの正規表現も同じことをします。最初のグループの値(タグの名前)を使用して、閉じたタグにマッチさせます。違いは、最初のものは名前を使用して値をマッチさせ、2番目のものはグループインデックス(1から始まる)を使用することです。</target>
        </trans-unit>
        <trans-unit id="ae54010f75119dee887bb47e46927d86541df658" translate="yes" xml:space="preserve">
          <source>The non-capturing group &lt;code&gt;(?...)&lt;/code&gt; 
does &lt;strong&gt;not remove&lt;/strong&gt; any characters from the original full match, &lt;strong&gt;it only&lt;/strong&gt; reorganises the regex visually to the programmer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非キャプチャグループ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?...)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、元の完全一致から文字を&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;削除&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;せ&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ず&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、プログラマに対して視覚的に正規表現を再編成する&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;だけ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f9d8170d98950c22e6026933d7548298a3e52f98" translate="yes" xml:space="preserve">
          <source>The result is:</source>
          <target state="translated">結果が出ています。</target>
        </trans-unit>
        <trans-unit id="318ceae08ec25fde53661e4228851bc15eebe840" translate="yes" xml:space="preserve">
          <source>This is obvious what is non capturing group.</source>
          <target state="translated">これは、非捕捉グループとは何かを明らかにしています。</target>
        </trans-unit>
        <trans-unit id="b66439f3881a02902ca6010d6d2bd92a7434e78a" translate="yes" xml:space="preserve">
          <source>This regex matches words with at least 3 characters, and uses groups to separate the first three letters. The result is this:</source>
          <target state="translated">この正規表現は、少なくとも3文字以上の単語をマッチさせ、最初の3文字を分離するためにグループを使用します。その結果がこのようになります。</target>
        </trans-unit>
        <trans-unit id="a07a319e45b5785cb254dadda8ec13bc616e6c15" translate="yes" xml:space="preserve">
          <source>To access a specific part of the regex without defined extraneous characters you would always need to use &lt;code&gt;.group(&amp;lt;index&amp;gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;無関係な文字を定義せずに正規表現の特定の部分にアクセスするには、常に&lt;/font&gt; &lt;code&gt;.group(&amp;lt;index&amp;gt;)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する必要があります&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="84b6e00b2a2f4b65773933ec5844cb70ef7e26f8" translate="yes" xml:space="preserve">
          <source>To play around with regexes, I recommend &lt;a href=&quot;http://regex101.com/&quot;&gt;http://regex101.com/&lt;/a&gt;, which offers a good amount of details on how the regex works; it also offers a few regex engines to choose from.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正規表現をいじるには、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://regex101.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http：&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; //regex101.com/をお勧め&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します。これには、正規表現がどのように機能するかについての詳細がたくさんあります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、いくつかの正規表現エンジンから選択できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b243fe5772ab0c1a785f69808ef43d49a3b3e9d5" translate="yes" xml:space="preserve">
          <source>Well I am a JavaScript developer and will try to explain its significance pertaining to JavaScript.</source>
          <target state="translated">さて、私はJavaScriptの開発者ですが、JavaScriptの意義を説明してみたいと思います。</target>
        </trans-unit>
        <trans-unit id="53d569ad77d1085fc503c918599e5104238c6aff" translate="yes" xml:space="preserve">
          <source>Well, groups serve many purposes. They can help you to extract exact information from a bigger match (which can also be named), they let you rematch a previous matched group, and can be used for substitutions. Let's try some examples, shall we?</source>
          <target state="translated">さて、グループには多くの目的があります。グループは、より大きなマッチ(名前を付けることもできます)から正確な情報を抽出するのに役立ちますし、以前にマッチしたグループを再マッチさせることができますし、置換にも使えます。いくつかの例を試してみましょう。</target>
        </trans-unit>
        <trans-unit id="f734eb4f0ab2949982e36e9579f7d8ba1c487224" translate="yes" xml:space="preserve">
          <source>What is a non-capturing group in regular expressions</source>
          <target state="translated">正規表現における非捕捉群とは</target>
        </trans-unit>
        <trans-unit id="70142d01328081ebf39c9733293e91db29341e97" translate="yes" xml:space="preserve">
          <source>When you want to have parenthesis but not capture the sub-expression you use NON-CAPTURING GROUPS. In the example, &lt;code&gt;(?:a|b)c&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かっこは必要だがサブ式をキャプチャしない場合は、NON-CAPTURING GROUPSを使用します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例では、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:a|b)c&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a4477b8c9f4bec5e436c46e7090f42132a3ba00" translate="yes" xml:space="preserve">
          <source>You can use capturing groups to organize and parse an expression.  A non-capturing group has the first benefit, but doesn't have the overhead of the second.  You can still say a non-capturing group is optional, for example.</source>
          <target state="translated">キャプチャグループを使用して、式を整理して解析することができます。非捕捉グループには最初の利点がありますが、2番目の利点のオーバーヘッドはありません。例えば、非捕捉グループはオプションであると言うことができます。</target>
        </trans-unit>
        <trans-unit id="3e558ad69a8ba496c74b18d311adf75066f0d177" translate="yes" xml:space="preserve">
          <source>You can use named groups for substitutions too, using &lt;code&gt;${name}&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;${name}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して、名前付きグループを置換に使用することもできます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="329f9f97cceaba3b659f997963c599aa962deb8a" translate="yes" xml:space="preserve">
          <source>but by giving the &lt;code&gt;?:&lt;/code&gt; we make the match-group non captured (which do not count off in matched group, so the grouping number starts from the first captured group and not the non captured), so that the repetition of the result of match-group &lt;code&gt;(?:animal)&lt;/code&gt; can't be called later in code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし与えること&lt;/font&gt;&lt;/font&gt; &lt;code&gt;?:&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我々はそう試合の結果を繰り返していること、（グループ数は最初のキャプチャグループから始まり、ない非捕獲ので、マッチしたグループではオフにカウントされません）捕獲マッチグループの非を作ります-group &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(?:animal)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、後でコードで呼び出すことはできません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cda3502beefadf8b98a36ab2b6b179e5765a5f31" translate="yes" xml:space="preserve">
          <source>so the regular expression would be,</source>
          <target state="translated">なので、正規表現はこうなります。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
