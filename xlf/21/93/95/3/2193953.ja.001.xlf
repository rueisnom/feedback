<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/2193953">
    <body>
      <group id="2193953">
        <trans-unit id="d73574d6f19562ecf335886ff020a307c1c7ad76" translate="yes" xml:space="preserve">
          <source>ASO files are cached compiled versions of your class files. Although the IDE is a lot better at letting go of old caches when changes are made, sometimes you have to manually delete them. To delete ASO files: Control&amp;gt;Delete ASO Files.</source>
          <target state="translated">ASOファイルは、クラスファイルのキャッシュされたコンパイル済みバージョンです。 IDEは、変更が加えられたときに古いキャッシュを手放すのに優れていますが、手動で削除する必要がある場合があります。 ASOファイルを削除するには：[制御]&amp;gt; [ASOファイルの削除]。</target>
        </trans-unit>
        <trans-unit id="7d277db034811a7526ae54e1e01f46594f8892d1" translate="yes" xml:space="preserve">
          <source>Also, to use your new namespaced class you can also do</source>
          <target state="translated">また、新しい名前空間クラスを使用するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="cb4116324243a4986aced120d909b4e4d4c19628" translate="yes" xml:space="preserve">
          <source>Do you have several swf-files? If your class is imported in one of the swf's, other swf's will also use the same version of the class. One old import with * in one swf will do it. Recompile everything and see if it works.</source>
          <target state="translated">複数の swf ファイルを持っていますか?ある swf ファイルにクラスがインポートされている場合、他の swf ファイルも同じバージョンのクラスを使用します。1つのswfに*を入れて古いインポートをすると、それが可能になります。すべてを再コンパイルして、動作するかどうかを確認してください。</target>
        </trans-unit>
        <trans-unit id="1b97c3666f563c1bc3be49a0cf06fea8a1539d4d" translate="yes" xml:space="preserve">
          <source>Flash CS4 refuses to let go</source>
          <target state="translated">Flash CS4は手放すことを拒否</target>
        </trans-unit>
        <trans-unit id="f98469c6788d8e3ee9814167b1194658018254fc" translate="yes" xml:space="preserve">
          <source>Flash and I don't really talk anymore. I write my code, it compiles it. There's a new girl in town named Summer who looks almost identical to Jenine, as if someone had just copied her source-code wholesale into a new class, but Flash hasn't shown any interest. Most days it just mopes around and writes bad poetry in my comments when it thinks I'm not looking.</source>
          <target state="translated">フラッシュとはもう話をしていない 私は自分のコードを書き、それをコンパイルする。町にサマーという名前の 新しい女の子が来た ジェニンとほとんど同じに見える 誰かが彼女のソースコードを 新しいクラスにコピーしたかのように でもフラッシュは興味を示さない ほとんどの日はうろうろしていて 私が見ていないと思っていると 私のコメントに悪い詩を書いているだけです</target>
        </trans-unit>
        <trans-unit id="bd8400f320c3dc5155d39a9094555137346c5c56" translate="yes" xml:space="preserve">
          <source>Flash checks whether a source file needs recompiling by looking at timestamps. If its compiled version is &lt;em&gt;older&lt;/em&gt; than the source file, it will recompile. But it doesn't check whether the compiled version was generated from the same source file or not.</source>
          <target state="translated">Flashは、タイムスタンプを確認して、ソースファイルの再コンパイルが必要かどうかを確認します。 コンパイルされたバージョンがソースファイルより&lt;em&gt;古い&lt;/em&gt;場合、再コンパイルされます。 ただし、コンパイルされたバージョンが同じソースファイルから生成されたかどうかはチェックしません。</target>
        </trans-unit>
        <trans-unit id="1a0462fd753ba85c7c7e2587115b6e5b44abe635" translate="yes" xml:space="preserve">
          <source>Flash still has the ASO file, which is the compiled byte code for your classes. On Windows, you can see the ASO files here:</source>
          <target state="translated">FlashにはまだASOファイルがあり、それはあなたのクラスのコンパイルされたバイトコードです。Windowsでは、ASOファイルはここで見ることができます。</target>
        </trans-unit>
        <trans-unit id="62acc74772d843947ff6af236346bd6eb9b429d4" translate="yes" xml:space="preserve">
          <source>I don't think Flash ever recovered. To this day it still clings to the memory of Jenine. Her old, imperfect definitions still float through my project like abandoned ghosts. Whenever I force Flash to compile, it still lovingly inserts her into my movie, nestling her definition in amongst the other, living classes, like a small shrine. I wonder if they can see her.</source>
          <target state="translated">フラッシュは回復しなかった 今日に至るまで ジェニンの記憶にしがみついている 彼女の古い不完全な定義は、今でも私のプロジェクトの中で、捨てられた亡霊のように浮かんでいます。フラッシュを強制的にコンパイルさせても、彼女の定義は他の生きているクラスの中に紛れ込んで、小さな祠のように、愛情を込めてムービーに挿入されます。彼らは彼女を見ることができるのだろうか。</target>
        </trans-unit>
        <trans-unit id="c3feb2f3c8858cf6163afac0efd2acaacea2f943" translate="yes" xml:space="preserve">
          <source>I have a Flash project, and it has many source files. I have a fairly heavily-used class, call it Jenine. I recently (and, perhaps, callously) relocated Jenine from one namespace to another. I thought we were ready - I thought it was time. The new Jenine was better in every way - she had lost some code bloat, she had decoupled herself from a few vestigial class relationships, and she had finally come home to the namespace that she had always secretly known in her heart was the one she truly belonged to. She was among her own kind.</source>
          <target state="translated">私はFlashプロジェクトを持っていて、多くのソースファイルを持っています。私はかなり頻繁に使われるクラスを持っていて、それを Jenine と呼んでいます。私は最近(おそらく無愛想にも)Jenineをある名前空間から別の名前空間に移しました。準備ができたと思っていました。新しいジェニンはあらゆる面でより良くなっていた。コードの肥大化をなくし、いくつかの曖昧なクラス関係から自分自身を切り離し、ついに心の中で密かに知っていた名前空間に帰ってきた。彼女は自分と同じ種族の中にいたのだ。</target>
        </trans-unit>
        <trans-unit id="8a042028dbcb2cb29f21d1e72e6a102db852a41e" translate="yes" xml:space="preserve">
          <source>I have found one related behaviour that may help (sounds like your specific problem runs deeper though):</source>
          <target state="translated">役に立ちそうな関連する行動を一つ見つけました(あなたの特定の問題はもっと深いところにあるように聞こえますが)。</target>
        </trans-unit>
        <trans-unit id="c21ee6e3c1f7eb9f77fb58a8fb7e24467a366688" translate="yes" xml:space="preserve">
          <source>I hope no one else has had a similar experience, that this is just a singular, painful ripple in the horrifying dark lagoon that is the Flash code-base. Does anyone have any idea how to erase whatever cache the compiler is using?</source>
          <target state="translated">同じような経験をした人がいないことを願っています。これは、Flashのコードベースである恐ろしい暗黒のラグーンの中で、たった一つの痛々しい波紋に過ぎないのです。コンパイラが使用しているキャッシュを消去する方法を知っている人はいますか?</target>
        </trans-unit>
        <trans-unit id="f61ea7b947529703a4f4d9bf512527ed5c302b13" translate="yes" xml:space="preserve">
          <source>On a Mac, the directory structure is similar in &lt;code&gt;/Users/username/Library/Application Support/&lt;/code&gt;</source>
          <target state="translated">Macでは、ディレクトリ構造は &lt;code&gt;/Users/username/Library/Application Support/&lt;/code&gt; 似ています。</target>
        </trans-unit>
        <trans-unit id="8b8608e23687d506a725e37f43061433334713f2" translate="yes" xml:space="preserve">
          <source>Specifically, if you have your actionscript files under version control, and you Revert a change, the reverted file will usually have an older timestamp, and Flash will ignore it.</source>
          <target state="translated">具体的には、バージョン管理下にあるActionScriptファイルで、変更を元に戻すと、元に戻されたファイルのタイムスタンプは古いものになり、Flashはそれを無視してしまいます。</target>
        </trans-unit>
        <trans-unit id="d9ba9a0306cedc55648e8ff775d2f46d0ee7e8e8" translate="yes" xml:space="preserve">
          <source>This is also the cause of the &quot;I-am-not-seeing-my-changes-so-let-me-add-a-trace-now-everything-works&quot; bug that was introduced in CS3.</source>
          <target state="translated">これはCS3で導入された「I-am-not-seeing-my-changes-so-let-me-add-a-trace-now-everything-works」バグの原因でもあります。</target>
        </trans-unit>
        <trans-unit id="1f6e6660542b743d6a0bf6eb2726d60459ca5496" translate="yes" xml:space="preserve">
          <source>Try deleting your ASO files.</source>
          <target state="translated">ASOファイルを削除してみてください。</target>
        </trans-unit>
        <trans-unit id="4f197129cf99d88d3550cf38418c385060543034" translate="yes" xml:space="preserve">
          <source>Unfortunately, Flash would have none of that. Perhaps it had formed an attachment. Perhaps it didn't &lt;em&gt;want&lt;/em&gt; Jenine to be decoupled. Either way, it clung to the old, perfect version of Jenine in its memory. It refused to move on. It ignored her (function) calls. It tried to forget her new, public interfaces. Instead, every instance of Jenine that it constructed was always a copy of the old version, down to its classpath:</source>
          <target state="translated">残念ながら、Flashにはそれがありません。 おそらくそれは愛着を形成していたのでしょう。 多分それはジェニーンが分離されることを&lt;em&gt;望ま&lt;/em&gt;なかった。 いずれにせよ、それは記憶の中でジェニーンの古くて完璧なバージョンに固執していた。 それは先へ進むことを拒否しました。 彼女の（関数）呼び出しは無視されました。 彼女の新しいパブリックインターフェイスを忘れようとしました。 代わりに、構築したJenineのすべてのインスタンスは、常にクラスパスまでの古いバージョンのコピーでした。</target>
        </trans-unit>
        <trans-unit id="dab7f0abe94ce9148bd79871143ab56e71a44616" translate="yes" xml:space="preserve">
          <source>Use a &lt;code&gt;grep&lt;/code&gt; analog to find the strings &lt;code&gt;oldnamespace&lt;/code&gt; and &lt;code&gt;Jenine&lt;/code&gt; inside the files in your whole project folder. Then you'd know what step to do next.</source>
          <target state="translated">&lt;code&gt;grep&lt;/code&gt; analogを使用して、プロジェクトフォルダー全体のファイル内の文字列 &lt;code&gt;oldnamespace&lt;/code&gt; とJenineを見つけます。 次に、次のステップを知っています。</target>
        </trans-unit>
        <trans-unit id="c519e309815238df40c20381e14f193f6c5cda92" translate="yes" xml:space="preserve">
          <source>We fought. I'm not proud of some of the things I said or did. In the end, in a towering fit of rage, I deleted all references of Jenine completely. She was utterly, completely erased from the system. My cursor fell upon the &quot;Empty Trash&quot; menu option like the cold lid of a casket.</source>
          <target state="translated">私たちは戦った。私は自分の言動に誇りを持てません 最後には 怒りのあまり ジェニンの言及を完全に削除しました 彼女はシステムから完全に完全に消去された 私のカーソルは &quot;ゴミを空にする&quot; メニューオプションに落ちた 棺の冷たい蓋のように</target>
        </trans-unit>
        <trans-unit id="c0dc213989d838868abeb0f8e0dc480527551709" translate="yes" xml:space="preserve">
          <source>What if you compile it using another machine? A fresh installed one would be lovely. I hope &lt;em&gt;your machine&lt;/em&gt; is not jealous.</source>
          <target state="translated">別のマシンを使用してコンパイルするとどうなりますか？ 新しくインストールされたものは素敵です。 私は&lt;em&gt;あなたの機械&lt;/em&gt;が嫉妬しないことを望み&lt;em&gt;ます&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ec02af0c8c8a553632bf2b8bfe0ba20502dea09" translate="yes" xml:space="preserve">
          <source>You can remove those files by hand, or in Flash you can select &lt;code&gt;Control-&amp;gt;Delete ASO files&lt;/code&gt; to remove them.</source>
          <target state="translated">これらのファイルは手動で削除することも、Flashで &lt;code&gt;Control-&amp;gt;Delete ASO files&lt;/code&gt; を選択して削除することもできます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
