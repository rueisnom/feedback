<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/218384">
    <body>
      <group id="218384">
        <trans-unit id="46c79bb66ada9c56c9356e3a5d4614b774e8bdc4" translate="yes" xml:space="preserve">
          <source>&quot;Test.java:4&quot; gives the source filename of the class, AND it tells us that the statement where this occurred is in line 4 of the file.</source>
          <target state="translated">&quot;Test.java:4&quot; da el nombre del archivo fuente de la clase,Y nos dice que la declaración donde esto ocurrió está en la línea 4 del archivo.</target>
        </trans-unit>
        <trans-unit id="f8604be0c3c1ed69f32edb319a462c6359c0f2ff" translate="yes" xml:space="preserve">
          <source>&quot;at Test.main&quot; says that we were in the &lt;code&gt;main&lt;/code&gt; method of the &lt;code&gt;Test&lt;/code&gt; class.</source>
          <target state="translated">&quot;at Test.main&quot; dice que est&amp;aacute;bamos en el m&amp;eacute;todo &lt;code&gt;main&lt;/code&gt; de la clase &lt;code&gt;Test&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12c1a4fa7b528e612a2c55a656eae759beb053c2" translate="yes" xml:space="preserve">
          <source>(This is a technicality, but I think it bears mentioning: A reference that points to null isn't the same as a C pointer that points to an invalid memory location.  A null pointer is literally not pointing &lt;em&gt;anywhere&lt;/em&gt;, which is subtly different than pointing to a location that happens to be invalid.)</source>
          <target state="translated">(Esto es un tecnicismo, pero creo que vale la pena mencionar: una referencia que apunta a nulo no es lo mismo que un puntero C que apunta a una ubicaci&amp;oacute;n de memoria no v&amp;aacute;lida. Un puntero nulo literalmente no apunta a &lt;em&gt;ninguna parte&lt;/em&gt; , que es sutilmente diferente de apuntando a una ubicaci&amp;oacute;n que resulta no v&amp;aacute;lida).</target>
        </trans-unit>
        <trans-unit id="3728b911d50de4ab1fcf39dee7550bebda59d186" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NullPointerException&lt;/code&gt;s are exceptions that occur when you try to use a reference that points to no location in memory (null) as though it were referencing an object.  Calling a method on a null reference or trying to access a field of a null reference will trigger a &lt;code&gt;NullPointerException&lt;/code&gt;.  These are the most common, but other ways are listed on the &lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/lang/NullPointerException.html&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; javadoc page.</source>
          <target state="translated">Las excepciones &lt;code&gt;NullPointerException&lt;/code&gt; son excepciones que ocurren cuando intenta utilizar una referencia que apunta a ninguna ubicaci&amp;oacute;n en la memoria (nulo) como si estuviera haciendo referencia a un objeto. Llamar a un m&amp;eacute;todo en una referencia nula o intentar acceder a un campo de una referencia nula activar&amp;aacute; una &lt;code&gt;NullPointerException&lt;/code&gt; . Estos son los m&amp;aacute;s comunes, pero se enumeran otras formas en la p&amp;aacute;gina de javadoc &lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/lang/NullPointerException.html&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="49dafbcd2fe39c57babb5928a1f4a08427635d46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Identify the null values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Identificar los valores nulos.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="551e0b7660ec60a1ba024654ebf85dd6e11ea8a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a2fb070431451825a43dbcb68523c4e1049f4a93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Summary:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Summary:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7654b80f753ecf9a584b54f4799cf0bb000071db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Trace where these values come from&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Rastrear de d&amp;oacute;nde provienen estos valores&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2bed1aff07e6c53e21f30814c172aaa955a67f89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Trace where these values should be set&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Rastrear d&amp;oacute;nde deben establecerse estos valores&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2d6017504b728ef2dbcbb062072c2f986d225f4" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;1 - Not quite true. There are things called nested exceptions...&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;1 - No del todo cierto.&lt;/sup&gt; &lt;sup&gt;Hay cosas llamadas excepciones anidadas ...&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="09098c16c787fffa3d5bef267be27f9b94eec756" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;This particular NPE can be avoided if the comparison order is reversed; namely, use &lt;code&gt;.equals&lt;/code&gt; on a guaranteed non-null object.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;Este NPE particular puede evitarse si se invierte el orden de comparaci&amp;oacute;n;&lt;/sup&gt; &lt;sup&gt;a saber, use &lt;code&gt;.equals&lt;/code&gt; en un objeto no nulo garantizado.&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="230dd3a64393775192474761fa0c5cca37186f78" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NullPointerException&lt;/code&gt; is thrown at runtime whenever your program attempts to use a &lt;code&gt;null&lt;/code&gt; as if it was a real reference. For example, if you write this:</source>
          <target state="translated">Se lanza una &lt;code&gt;NullPointerException&lt;/code&gt; en tiempo de ejecuci&amp;oacute;n cada vez que su programa intenta utilizar un &lt;code&gt;null&lt;/code&gt; como si fuera una referencia real. Por ejemplo, si escribe esto:</target>
        </trans-unit>
        <trans-unit id="a9e0552c7dd394c9a31c99c24d2f880c9a4d06fd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;null&lt;/code&gt; pointer is one that points to nowhere.  When you dereference a pointer &lt;code&gt;p&lt;/code&gt;, you say &quot;give me the data at the location stored in &quot;p&quot;.  When &lt;code&gt;p&lt;/code&gt; is a &lt;code&gt;null&lt;/code&gt; pointer, the location stored in &lt;code&gt;p&lt;/code&gt; is &lt;code&gt;nowhere&lt;/code&gt;, you're saying &quot;give me the data at the location 'nowhere'&quot;.  Obviously, it can't do this, so it throws a &lt;code&gt;null pointer exception&lt;/code&gt;.</source>
          <target state="translated">Un puntero &lt;code&gt;null&lt;/code&gt; es aquel que apunta a ninguna parte. Cuando desreferencia un puntero &lt;code&gt;p&lt;/code&gt; , dices &quot;dame los datos en la ubicaci&amp;oacute;n almacenada en&quot; p &quot;. Cuando &lt;code&gt;p&lt;/code&gt; es un puntero &lt;code&gt;null&lt;/code&gt; , la ubicaci&amp;oacute;n almacenada en &lt;code&gt;p&lt;/code&gt; &lt;code&gt;nowhere&lt;/code&gt; est&amp;aacute; en ninguna parte , est&amp;aacute;s diciendo&quot; dame los datos en la ubicaci&amp;oacute;n 'en ninguna parte' &quot;. Obviamente, no puede hacer esto, por lo que arroja una &lt;code&gt;null pointer exception&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6c4c5d7a89d4a6783980274bfbadea09013a5b5" translate="yes" xml:space="preserve">
          <source>A good place to start is the &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/lang/NullPointerException.html&quot;&gt;JavaDocs&lt;/a&gt;. They have this covered:</source>
          <target state="translated">Un buen lugar para comenzar es &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/lang/NullPointerException.html&quot;&gt;JavaDocs&lt;/a&gt; . Tienen esto cubierto:</target>
        </trans-unit>
        <trans-unit id="2e2d1cdef73de0035e0ec0fce5be6a96a237140d" translate="yes" xml:space="preserve">
          <source>A lot of explanations are already present to explain how it happens and how to fix it, but you should also follow &lt;strong&gt;best practices&lt;/strong&gt; to avoid &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/NullPointerException.html&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt;s at all.</source>
          <target state="translated">Ya hay muchas explicaciones para explicar c&amp;oacute;mo sucede y c&amp;oacute;mo solucionarlo, pero tambi&amp;eacute;n debe seguir las &lt;strong&gt;mejores pr&amp;aacute;cticas&lt;/strong&gt; para evitar las &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/NullPointerException.html&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="638d693f2f038480214d58b990af25de39a3580e" translate="yes" xml:space="preserve">
          <source>A null pointer exception is an indicator that you are using an object without initializing it.</source>
          <target state="translated">Una excepción de puntero nulo es un indicador de que se está utilizando un objeto sin inicializarlo.</target>
        </trans-unit>
        <trans-unit id="b54dde997bbaa1c77cec63081960af235d128fa6" translate="yes" xml:space="preserve">
          <source>A null pointer exception is thrown when an application attempts to use null in a case where an object is required. These include:</source>
          <target state="translated">Se lanza una excepción de puntero nulo cuando una aplicación intenta utilizar nulo en un caso en que se requiere un objeto.Estos incluyen:</target>
        </trans-unit>
        <trans-unit id="63cfcf1fbbdb802eace27ba6ed8669bc6cd6c3d1" translate="yes" xml:space="preserve">
          <source>Accessing or modifying the field of a &lt;code&gt;null&lt;/code&gt; object.</source>
          <target state="translated">Acceder o modificar el campo de un objeto &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7bec35c01df22161ef1985731a3e114df5d788b9" translate="yes" xml:space="preserve">
          <source>Accessing or modifying the field of a null object.</source>
          <target state="translated">Acceder o modificar el campo de un objeto nulo.</target>
        </trans-unit>
        <trans-unit id="081b055d444278a91fcdc52fd056525afd4590b2" translate="yes" xml:space="preserve">
          <source>Accessing or modifying the slots of &lt;code&gt;null&lt;/code&gt; as if it were an array.</source>
          <target state="translated">Acceder o modificar las ranuras de &lt;code&gt;null&lt;/code&gt; como si fuera una matriz.</target>
        </trans-unit>
        <trans-unit id="3071a717183323279cc12121c92bbf3a0674c2d0" translate="yes" xml:space="preserve">
          <source>Accessing or modifying the slots of null as if it were an array.</source>
          <target state="translated">Acceder o modificar las ranuras de nulo como si fuera una matriz.</target>
        </trans-unit>
        <trans-unit id="3c82e5aec8823b4eada017e77cc5f6f29a9a4682" translate="yes" xml:space="preserve">
          <source>All elements inside of an array &lt;a href=&quot;http://docs.oracle.com/javase/specs/jls/se7/html/jls-4.html#jls-4.12.5&quot;&gt;are initialized to their common initial value&lt;/a&gt;; for any type of object array, that means that all elements are &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Todos los elementos dentro de una matriz &lt;a href=&quot;http://docs.oracle.com/javase/specs/jls/se7/html/jls-4.html#jls-4.12.5&quot;&gt;se inicializan a su valor inicial com&amp;uacute;n&lt;/a&gt; ; para cualquier tipo de matriz de objetos, eso significa que todos los elementos son &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5256dfc3f6349ad33fe733f72303dfc4540eb37" translate="yes" xml:space="preserve">
          <source>Alternatively, there may be cases where the purpose of the method is not solely to operate on the passed in object, and therefore a null parameter may be acceptable. In this case, you would need to check for a &lt;strong&gt;null parameter&lt;/strong&gt; and behave differently. You should also explain this in the documentation. For example, &lt;code&gt;doSomething()&lt;/code&gt; could be written as:</source>
          <target state="translated">Alternativamente, puede haber casos en los que el prop&amp;oacute;sito del m&amp;eacute;todo no sea &amp;uacute;nicamente operar sobre el objeto pasado, y por lo tanto un par&amp;aacute;metro nulo puede ser aceptable. En este caso, necesitar&amp;iacute;a verificar un &lt;strong&gt;par&amp;aacute;metro nulo&lt;/strong&gt; y comportarse de manera diferente. Tambi&amp;eacute;n debe explicar esto en la documentaci&amp;oacute;n. Por ejemplo, &lt;code&gt;doSomething()&lt;/code&gt; podr&amp;iacute;a escribirse como:</target>
        </trans-unit>
        <trans-unit id="c610b12b0bdb7da0de89b6112dad5051859e5f8a" translate="yes" xml:space="preserve">
          <source>And on another place in your code:</source>
          <target state="translated">Y en otro lugar de tu código:</target>
        </trans-unit>
        <trans-unit id="fec17b583e2fe54653432fe84eafb118f367f489" translate="yes" xml:space="preserve">
          <source>Another occurrence of a &lt;code&gt;NullPointerException&lt;/code&gt; occurs when one declares an object array, then immediately tries to dereference elements inside of it.</source>
          <target state="translated">Otra ocurrencia de una &lt;code&gt;NullPointerException&lt;/code&gt; ocurre cuando uno declara una matriz de objetos, e inmediatamente trata de desreferenciar elementos dentro de ella.</target>
        </trans-unit>
        <trans-unit id="ec98bf54606e720fcaaa69af937b822723782a2b" translate="yes" xml:space="preserve">
          <source>Applications should throw instances of this class to indicate other
  illegal uses of the null object.</source>
          <target state="translated">Las solicitudes deben arrojar instancias de esta clase para indicar otros usos ilegales del objeto nulo.</target>
        </trans-unit>
        <trans-unit id="bc2a7a3d52ad00a39aa87d3ee50b3aaad37ba8df" translate="yes" xml:space="preserve">
          <source>Applications should throw instances of this class to indicate other illegal uses of the &lt;code&gt;null&lt;/code&gt; object.</source>
          <target state="translated">Las aplicaciones deben lanzar instancias de esta clase para indicar otros usos ilegales del objeto &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3bb9c94bc952d51ad045ffee95f408bcacb6ca66" translate="yes" xml:space="preserve">
          <source>As you should know, Java types are divided into &lt;em&gt;primitive types&lt;/em&gt; (&lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, etc.) and &lt;em&gt;reference types&lt;/em&gt;. Reference types in Java allow you to use the special value &lt;code&gt;null&lt;/code&gt; which is the Java way of saying &quot;no object&quot;.</source>
          <target state="translated">Como debe saber, los tipos de Java se dividen en &lt;em&gt;tipos primitivos&lt;/em&gt; ( &lt;code&gt;boolean&lt;/code&gt; os , &lt;code&gt;int&lt;/code&gt; , etc.) y &lt;em&gt;tipos de referencia&lt;/em&gt; . Los tipos de referencia en Java le permiten utilizar el valor especial &lt;code&gt;null&lt;/code&gt; que es la forma en Java de decir &quot;sin objeto&quot;.</target>
        </trans-unit>
        <trans-unit id="56bc238aac80b83b0ad417696ff3ad35156f1e99" translate="yes" xml:space="preserve">
          <source>At this time you have just &lt;strong&gt;declared&lt;/strong&gt; this object but not &lt;strong&gt;initialized or instantiated&lt;/strong&gt;. And whenever you try to access any property or method in it, it will throw  &lt;code&gt;NullPointerException&lt;/code&gt; which makes sense.</source>
          <target state="translated">En este momento, acaba de &lt;strong&gt;declarar&lt;/strong&gt; este objeto pero no se ha &lt;strong&gt;inicializado o instanciado&lt;/strong&gt; . Y cada vez que intente acceder a cualquier propiedad o m&amp;eacute;todo, arrojar&amp;aacute; &lt;code&gt;NullPointerException&lt;/code&gt; ,lo que tiene sentido.</target>
        </trans-unit>
        <trans-unit id="c3ca15f5dab40cddc958cc899caa21a2ead819af" translate="yes" xml:space="preserve">
          <source>Avoid returning null in methods, for example returning empty collections when applicable.</source>
          <target state="translated">Evite devolver los métodos nulos,por ejemplo,devolviendo las colecciones vacías cuando corresponda.</target>
        </trans-unit>
        <trans-unit id="5bf95245956d03bfda307dee31c95faa928638e7" translate="yes" xml:space="preserve">
          <source>Avoiding &amp;ldquo;!= null&amp;rdquo; statements in Java?</source>
          <target state="translated">&amp;iquest;Evitar las declaraciones &quot;! = Null&quot; en Java?</target>
        </trans-unit>
        <trans-unit id="e712d8332074c0bc1572f647f4af0f2ae63f7453" translate="yes" xml:space="preserve">
          <source>Because you are using &lt;code&gt;student&lt;/code&gt;, but you forgot to initialize it like in the
correct code shown below:</source>
          <target state="translated">Porque est&amp;aacute; utilizando &lt;code&gt;student&lt;/code&gt; , pero olvid&amp;oacute; inicializarlo como en el c&amp;oacute;digo correcto que se muestra a continuaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="b92e2b55b4354330a3c96dc3a92d018a12ff9a30" translate="yes" xml:space="preserve">
          <source>But (I hear you say) what if the NPE was thrown inside the &lt;code&gt;length()&lt;/code&gt; method call?</source>
          <target state="translated">Pero (te escucho decir) &amp;iquest;qu&amp;eacute; pasa si el NPE se arroj&amp;oacute; dentro de la llamada al m&amp;eacute;todo &lt;code&gt;length()&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="70de7c517ab05f22376120259b795a5d367579bd" translate="yes" xml:space="preserve">
          <source>But, when you try to declare a reference &lt;em&gt;type&lt;/em&gt;, something different happens. Take the following code:</source>
          <target state="translated">Pero, cuando intenta declarar un &lt;em&gt;tipo de&lt;/em&gt; referencia, sucede algo diferente. Toma el siguiente c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="3b760c60d971f57b8c1e7ecdfb80c460f606d442" translate="yes" xml:space="preserve">
          <source>Calling the instance method of a &lt;code&gt;null&lt;/code&gt; object.</source>
          <target state="translated">Llamando al m&amp;eacute;todo de instancia de un objeto &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="634a22d75f5bdbe844d7fa3fc013a702dcded4d8" translate="yes" xml:space="preserve">
          <source>Calling the instance method of a null object.</source>
          <target state="translated">Llamando al método de instancia de un objeto nulo.</target>
        </trans-unit>
        <trans-unit id="2a0a9d9e68fd881b18d0b16e39eef09d5cd31ae1" translate="yes" xml:space="preserve">
          <source>Declaration: &lt;code&gt;Item item[] = new Item[5];&lt;/code&gt;</source>
          <target state="translated">Declaraci&amp;oacute;n: &lt;code&gt;Item item[] = new Item[5];&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="019ac43ed7ec529c737b8e34b517aec2236183b6" translate="yes" xml:space="preserve">
          <source>Declaration: &lt;code&gt;Object object;&lt;/code&gt;</source>
          <target state="translated">Declaraci&amp;oacute;n: &lt;code&gt;Object object;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c746af47b00ccd6d6e07567df1b2eaa4c74bbcd" translate="yes" xml:space="preserve">
          <source>Declare</source>
          <target state="translated">Declare</target>
        </trans-unit>
        <trans-unit id="90599a45b68a2a1c4b1602b265e701d17c3453c2" translate="yes" xml:space="preserve">
          <source>Dereferencing usually happens when using &lt;code&gt;.&lt;/code&gt; to access a method or field, or using &lt;code&gt;[&lt;/code&gt; to index an array.</source>
          <target state="translated">La desreferencia generalmente ocurre cuando se usa &lt;code&gt;.&lt;/code&gt; para acceder a un m&amp;eacute;todo o campo, o usando &lt;code&gt;[&lt;/code&gt; para indexar una matriz.</target>
        </trans-unit>
        <trans-unit id="d1d4b339edce051f7810e587e0c51e16ae74146a" translate="yes" xml:space="preserve">
          <source>Either the &lt;code&gt;print&lt;/code&gt; or &lt;code&gt;printString&lt;/code&gt; method can &lt;em&gt;check for null&lt;/em&gt;, for example:</source>
          <target state="translated">El m&amp;eacute;todo &lt;code&gt;print&lt;/code&gt; o &lt;code&gt;printString&lt;/code&gt; puede &lt;em&gt;verificar nulo&lt;/em&gt; , por ejemplo:</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="37aefda29876d0fc65311b06db99106714c1d07e" translate="yes" xml:space="preserve">
          <source>Fail fast and use asserts to avoid propagation of null objects through the whole application when they shouldn't be null.</source>
          <target state="translated">Falla rápido y usa afirmaciones para evitar la propagación de objetos nulos a través de toda la aplicación cuando no deberían ser nulos.</target>
        </trans-unit>
        <trans-unit id="c1fb00189acb7a631f566fbdba728784b7fb6217" translate="yes" xml:space="preserve">
          <source>Finally, &lt;a href=&quot;https://stackoverflow.com/q/3988788/2775450&quot;&gt;How to pinpoint the exception &amp;amp; cause using Stack Trace&lt;/a&gt;</source>
          <target state="translated">Finalmente, &lt;a href=&quot;https://stackoverflow.com/q/3988788/2775450&quot;&gt;c&amp;oacute;mo identificar la excepci&amp;oacute;n y la causa usando Stack Trace&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e523347a7b87520e096c7d1a14d92c4714f695c7" translate="yes" xml:space="preserve">
          <source>First observation: the compilation succeeds! The problem in the program is NOT a compilation error. It is a &lt;em&gt;runtime&lt;/em&gt; error. (Some IDEs may warn your program will always throw an exception ... but the standard &lt;code&gt;javac&lt;/code&gt; compiler doesn't.)</source>
          <target state="translated">Primera observaci&amp;oacute;n: &amp;iexcl;la compilaci&amp;oacute;n tiene &amp;eacute;xito! El problema en el programa NO es un error de compilaci&amp;oacute;n. Es un error de &lt;em&gt;tiempo de ejecuci&amp;oacute;n&lt;/em&gt; . (Algunos IDEs pueden advertir que su programa siempre arrojar&amp;aacute; una excepci&amp;oacute;n ... pero el compilador &lt;code&gt;javac&lt;/code&gt; est&amp;aacute;ndar no lo hace).</target>
        </trans-unit>
        <trans-unit id="8034a9b3e958bafca5b80be28a9299b4df2a9530" translate="yes" xml:space="preserve">
          <source>For example, below is a student class which will use it in our code.</source>
          <target state="translated">Por ejemplo,abajo hay una clase de estudiantes que lo usará en nuestro código.</target>
        </trans-unit>
        <trans-unit id="369b0266a6a685e58d0bf30452751bfdd1e0a29b" translate="yes" xml:space="preserve">
          <source>For instance, you may have a method as follows:</source>
          <target state="translated">Por ejemplo,puede tener un método como el siguiente:</target>
        </trans-unit>
        <trans-unit id="e426a7d0a0945c9b135618483f0d59c549ba4902" translate="yes" xml:space="preserve">
          <source>Here, we see that the exception is thrown on line 13 (in the &lt;code&gt;printString&lt;/code&gt; method). Look at the line and check which values are null by
adding &lt;em&gt;logging statements&lt;/em&gt; or using a &lt;em&gt;debugger&lt;/em&gt;. We find out that &lt;code&gt;s&lt;/code&gt; is null, and calling the &lt;code&gt;length&lt;/code&gt; method on it throws the exception. We can see that the program stops throwing the exception when &lt;code&gt;s.length()&lt;/code&gt; is removed from the method.</source>
          <target state="translated">Aqu&amp;iacute;, vemos que la excepci&amp;oacute;n se produce en la l&amp;iacute;nea 13 (en el m&amp;eacute;todo &lt;code&gt;printString&lt;/code&gt; ). Mire la l&amp;iacute;nea y verifique qu&amp;eacute; valores son nulos agregando &lt;em&gt;declaraciones de registro&lt;/em&gt; o utilizando un &lt;em&gt;depurador&lt;/em&gt; . Descubrimos que &lt;code&gt;s&lt;/code&gt; es nulo, y llamar al m&amp;eacute;todo de &lt;code&gt;length&lt;/code&gt; arroja la excepci&amp;oacute;n. Podemos ver que el programa deja de lanzar la excepci&amp;oacute;n cuando se &lt;code&gt;s.length()&lt;/code&gt; del m&amp;eacute;todo.</target>
        </trans-unit>
        <trans-unit id="24b11a882fed564b0eb9222ebda986752854af8c" translate="yes" xml:space="preserve">
          <source>How can that throw an NPE?</source>
          <target state="translated">¿Cómo puede eso lanzar un NPE?</target>
        </trans-unit>
        <trans-unit id="61b251a05ff88cf9158093feb2fc5a5c219ef28a" translate="yes" xml:space="preserve">
          <source>How do I fix it?</source>
          <target state="translated">¿Cómo lo arreglo?</target>
        </trans-unit>
        <trans-unit id="327df277bc05aac18f0fa7fb4e2e987135c7512d" translate="yes" xml:space="preserve">
          <source>I still can't find the problem</source>
          <target state="translated">Todavía no puedo encontrar el problema</target>
        </trans-unit>
        <trans-unit id="66b032c360e09ab3e68584d1ba075e1987c06cf7" translate="yes" xml:space="preserve">
          <source>I would add, very important, make a good use of the &lt;code&gt;final&lt;/code&gt; modifier.
&lt;a href=&quot;https://stackoverflow.com/questions/137868/using-final-modifier-whenever-applicable-in-java&quot;&gt;Using the &quot;final&quot; modifier whenever applicable in Java&lt;/a&gt;</source>
          <target state="translated">A&amp;ntilde;adir&amp;iacute;a, muy importante, hacer un buen uso del modificador &lt;code&gt;final&lt;/code&gt; . &lt;a href=&quot;https://stackoverflow.com/questions/137868/using-final-modifier-whenever-applicable-in-java&quot;&gt;Usar el modificador &quot;final&quot; siempre que sea aplicable en Java&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6308f70b4f0ae15d5eb767dca1766a9e484da9fb" translate="yes" xml:space="preserve">
          <source>If the exception has an associated error message, that will be output after the exception name. &lt;code&gt;NullPointerException&lt;/code&gt; is unusual in this respect, because it rarely has an error message.</source>
          <target state="translated">Si la excepci&amp;oacute;n tiene un mensaje de error asociado, se generar&amp;aacute; despu&amp;eacute;s del nombre de la excepci&amp;oacute;n. &lt;code&gt;NullPointerException&lt;/code&gt; es inusual a este respecto, porque rara vez tiene un mensaje de error.</target>
        </trans-unit>
        <trans-unit id="fb26238ed800420e5c53a71b6bf0a0b7a52eaeb2" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;bar&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; then &lt;code&gt;bar[pos]&lt;/code&gt; will throw an NPE.</source>
          <target state="translated">Si el valor de la &lt;code&gt;bar&lt;/code&gt; ra es &lt;code&gt;null&lt;/code&gt; , la &lt;code&gt;bar[pos]&lt;/code&gt; arrojar&amp;aacute; un NPE.</target>
        </trans-unit>
        <trans-unit id="37e77872a7e487d9afdbefdbf2345bfd255ec57b" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;bar[pos]&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; then calling &lt;code&gt;length()&lt;/code&gt; on it will throw an NPE.</source>
          <target state="translated">Si el valor de la &lt;code&gt;bar[pos]&lt;/code&gt; es &lt;code&gt;null&lt;/code&gt; , llamar a &lt;code&gt;length()&lt;/code&gt; en &amp;eacute;l arrojar&amp;aacute; un NPE.</target>
        </trans-unit>
        <trans-unit id="2fb4addbf00588879005cb609de5d3b982823f43" translate="yes" xml:space="preserve">
          <source>If you are not giving the initialization section then the &lt;code&gt;NullPointerException&lt;/code&gt; arise.</source>
          <target state="translated">Si no est&amp;aacute; dando la secci&amp;oacute;n de inicializaci&amp;oacute;n, entonces surge la &lt;code&gt;NullPointerException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e65cd02770e6747d2781dbef1dbe7a0838997ff2" translate="yes" xml:space="preserve">
          <source>If you attempt to dereference &lt;code&gt;num&lt;/code&gt; BEFORE creating the object you get a &lt;code&gt;NullPointerException&lt;/code&gt;. In the most trivial cases, the compiler will catch the problem and let you know that &quot;&lt;code&gt;num may not have been initialized&lt;/code&gt;,&quot; but sometimes you may write code that does not directly create the object.</source>
          <target state="translated">Si intenta desreferenciar &lt;code&gt;num&lt;/code&gt; ANTES de crear el objeto, obtendr&amp;aacute; una &lt;code&gt;NullPointerException&lt;/code&gt; . En los casos m&amp;aacute;s triviales, el compilador detectar&amp;aacute; el problema y le har&amp;aacute; saber que &quot; &lt;code&gt;num may not have been initialized&lt;/code&gt; &quot;, pero a veces puede escribir c&amp;oacute;digo que no crea directamente el objeto.</target>
        </trans-unit>
        <trans-unit id="b405ab91b8fae348c65830646a2f15cfa73ec595" translate="yes" xml:space="preserve">
          <source>If you count the lines in the file above, line 4 is the one that I labeled with the &quot;HERE&quot; comment.</source>
          <target state="translated">Si cuentas las líneas del archivo de arriba,la línea 4 es la que etiqueté con el comentario &quot;AQUÍ&quot;.</target>
        </trans-unit>
        <trans-unit id="a3f749cff981330fc865245f1db404f2d1866f2b" translate="yes" xml:space="preserve">
          <source>If you tried to debug the problem and still don't have a solution, you can post a question for more help, but make sure to include what you've tried so far. At a minimum, &lt;strong&gt;include the stacktrace&lt;/strong&gt; in the question, and &lt;strong&gt;mark the important line numbers&lt;/strong&gt; in the code. Also, try simplifying the code first (see &lt;a href=&quot;http://sscce.org/&quot;&gt;SSCCE&lt;/a&gt;).</source>
          <target state="translated">Si trat&amp;oacute; de depurar el problema y a&amp;uacute;n no tiene una soluci&amp;oacute;n, puede publicar una pregunta para obtener m&amp;aacute;s ayuda, pero aseg&amp;uacute;rese de incluir lo que ha intentado hasta ahora. Como m&amp;iacute;nimo, &lt;strong&gt;incluya el stacktrace&lt;/strong&gt; en la pregunta y &lt;strong&gt;marque los n&amp;uacute;meros de l&amp;iacute;nea importantes&lt;/strong&gt; en el c&amp;oacute;digo. Adem&amp;aacute;s, intente simplificar el c&amp;oacute;digo primero (vea &lt;a href=&quot;http://sscce.org/&quot;&gt;SSCCE&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d37b6038f9a6cd2dff562dfe87901f623ec47b9e" translate="yes" xml:space="preserve">
          <source>If you want to use any object then you have two phases:</source>
          <target state="translated">Si quieres usar cualquier objeto,tienes dos fases:</target>
        </trans-unit>
        <trans-unit id="9d544f7bccdff6bb68a69fb25d6a390dd45d80a2" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;http://en.wikipedia.org/wiki/Java_%28programming_language%29&quot;&gt;Java&lt;/a&gt; all the variables you declare are actually &quot;references&quot; to the objects (or primitives) and not the objects themselves.</source>
          <target state="translated">En &lt;a href=&quot;http://en.wikipedia.org/wiki/Java_%28programming_language%29&quot;&gt;Java,&lt;/a&gt; todas las variables que declaras son en realidad &quot;referencias&quot; a los objetos (o primitivas) y no a los objetos en s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="758063698f54411c5380c94bde31ca08d17694ea" translate="yes" xml:space="preserve">
          <source>In Java, everything (excluding primitive types) is in the form of a class.</source>
          <target state="translated">En Java,todo (excluyendo los tipos primitivos)tiene la forma de una clase.</target>
        </trans-unit>
        <trans-unit id="2d1e8941405e95d8f2a50326004d775c905ad0da" translate="yes" xml:space="preserve">
          <source>In fact there is only one way: it can only happen if &lt;code&gt;foo&lt;/code&gt; has the value &lt;code&gt;null&lt;/code&gt;.  We then try to run the &lt;code&gt;length()&lt;/code&gt; method on &lt;code&gt;null&lt;/code&gt; and .... BANG!</source>
          <target state="translated">De hecho, solo hay una forma: solo puede suceder si &lt;code&gt;foo&lt;/code&gt; tiene el valor &lt;code&gt;null&lt;/code&gt; . Luego intentamos ejecutar el m&amp;eacute;todo &lt;code&gt;length()&lt;/code&gt; en &lt;code&gt;null&lt;/code&gt; y ... &amp;iexcl;BANG!</target>
        </trans-unit>
        <trans-unit id="e072b7c921ded7d305ef1e675e84ddd558ea97ee" translate="yes" xml:space="preserve">
          <source>In general, it's because something hasn't been initialized properly.</source>
          <target state="translated">En general,es porque algo no ha sido inicializado correctamente.</target>
        </trans-unit>
        <trans-unit id="e84992bf73e77db6c21133edfc7e60f3abe481d5" translate="yes" xml:space="preserve">
          <source>In short the stack trace will tell us unambiguously which statement of the program has thrown the NPE.</source>
          <target state="translated">En resumen,el rastro de la pila nos dirá sin ambigüedades qué declaración del programa ha lanzado el NPE.</target>
        </trans-unit>
        <trans-unit id="ff129ea13cbf7d94f4945873a0e66ab25fb80786" translate="yes" xml:space="preserve">
          <source>In the second line, the &lt;code&gt;new&lt;/code&gt; keyword is used to instantiate (or create) an object of type &lt;code&gt;Integer&lt;/code&gt; and the pointer variable &lt;code&gt;num&lt;/code&gt; is assigned to that &lt;code&gt;Integer&lt;/code&gt; object.</source>
          <target state="translated">En la segunda l&amp;iacute;nea, la &lt;code&gt;new&lt;/code&gt; palabra clave se usa para crear instancias (o crear) un objeto de tipo &lt;code&gt;Integer&lt;/code&gt; y la variable de puntero &lt;code&gt;num&lt;/code&gt; se asigna a ese objeto &lt;code&gt;Integer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f88263ab738c6ace334b24405051e63bb3e43df8" translate="yes" xml:space="preserve">
          <source>In this example, the variable &lt;code&gt;x&lt;/code&gt; is an &lt;code&gt;int&lt;/code&gt; and Java will initialize it to &lt;code&gt;0&lt;/code&gt; for you. When you assign it the value of &lt;code&gt;10&lt;/code&gt; on the second line, your value of &lt;code&gt;10&lt;/code&gt; is written into the memory location referred to by &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">En este ejemplo, la variable &lt;code&gt;x&lt;/code&gt; es un &lt;code&gt;int&lt;/code&gt; y Java lo inicializar&amp;aacute; a &lt;code&gt;0&lt;/code&gt; para usted. Cuando le asigna el valor de &lt;code&gt;10&lt;/code&gt; en la segunda l&amp;iacute;nea, su valor de &lt;code&gt;10&lt;/code&gt; se escribe en la ubicaci&amp;oacute;n de memoria a la que se refiere &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58e9dc951da0b9f4f2e75e6349c8988645b66556" translate="yes" xml:space="preserve">
          <source>In which case, &lt;code&gt;obj&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;. If the method is intended to do something to the passed-in object, it is appropriate to throw the &lt;code&gt;NullPointerException&lt;/code&gt; because it's a programmer error and the programmer will need that information for debugging purposes.  Please include the name of the object variable in the exception message, like</source>
          <target state="translated">En cuyo caso, &lt;code&gt;obj&lt;/code&gt; es &lt;code&gt;null&lt;/code&gt; . Si el m&amp;eacute;todo tiene la intenci&amp;oacute;n de hacer algo al objeto pasado, es apropiado lanzar la &lt;code&gt;NullPointerException&lt;/code&gt; porque es un error del programador y el programador necesitar&amp;aacute; esa informaci&amp;oacute;n para prop&amp;oacute;sitos de depuraci&amp;oacute;n. Incluya el nombre de la variable del objeto en el mensaje de excepci&amp;oacute;n, como</target>
        </trans-unit>
        <trans-unit id="eaa842988aa6b70454294a66ea91b95dd8434276" translate="yes" xml:space="preserve">
          <source>In which case, you are not creating the object &lt;code&gt;obj&lt;/code&gt;, but rather assuming that it was created before the &lt;code&gt;doSomething()&lt;/code&gt; method was called. Note, it is possible to call the method like this:</source>
          <target state="translated">En cuyo caso, no est&amp;aacute; creando el objeto &lt;code&gt;obj&lt;/code&gt; , sino asumiendo que se cre&amp;oacute; antes de que se llamara al m&amp;eacute;todo &lt;code&gt;doSomething()&lt;/code&gt; . Tenga en cuenta que es posible llamar al m&amp;eacute;todo de esta manera:</target>
        </trans-unit>
        <trans-unit id="0ef62b29237cb984a3dfc705f60d31635eca26a1" translate="yes" xml:space="preserve">
          <source>Indeed it is! And that is the problem. When we initialize like this:</source>
          <target state="translated">¡Claro que sí! Y ese es el problema.Cuando iniciamos así:</target>
        </trans-unit>
        <trans-unit id="68fa16ffd48f366e4fa8d57fea78ff03fcab0191" translate="yes" xml:space="preserve">
          <source>Initialization</source>
          <target state="translated">Initialization</target>
        </trans-unit>
        <trans-unit id="dd695f048156244b311843d310329edc10ad3530" translate="yes" xml:space="preserve">
          <source>Initialization: &lt;code&gt;item[0] = new Item();&lt;/code&gt;</source>
          <target state="translated">Inicializaci&amp;oacute;n: &lt;code&gt;item[0] = new Item();&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fa4a5d2f4df0ef578634d30eb2c60e497f43b6cf" translate="yes" xml:space="preserve">
          <source>Initialization: &lt;code&gt;object = new Object();&lt;/code&gt;</source>
          <target state="translated">Inicializaci&amp;oacute;n: &lt;code&gt;object = new Object();&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1926c212a3dc9c16b0c0d64823cf41cde00923e6" translate="yes" xml:space="preserve">
          <source>It is also the case that if you attempt to use a null reference with &lt;code&gt;synchronized&lt;/code&gt;, that will also throw this exception, &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se7/html/jls-14.html#jls-14.19&quot;&gt;per the JLS&lt;/a&gt;:</source>
          <target state="translated">Tambi&amp;eacute;n es el caso de que si intenta utilizar una referencia nula con &lt;code&gt;synchronized&lt;/code&gt; , tambi&amp;eacute;n arrojar&amp;aacute; esta excepci&amp;oacute;n, &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se7/html/jls-14.html#jls-14.19&quot;&gt;seg&amp;uacute;n el JLS&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="2d16dbce2624ff3130d8e2270cf0f83a79ee462c" translate="yes" xml:space="preserve">
          <source>It tells you the full name of the exception that was thrown; i.e. &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;.</source>
          <target state="translated">Le dice el nombre completo de la excepci&amp;oacute;n que se produjo; es decir, &lt;code&gt;java.lang.NullPointerException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8417e2fba268434b1c803e3ff401a4e1a47b61fc" translate="yes" xml:space="preserve">
          <source>It tells you the name of the Java thread in which the exception was thrown.  For a simple program with one thread (like this one), it will be &quot;main&quot;. Let's move on ...</source>
          <target state="translated">Te dice el nombre del hilo de Java en el que se lanzó la excepción.Para un programa simple con un solo hilo (como este),será &quot;main&quot;.Sigamos adelante...</target>
        </trans-unit>
        <trans-unit id="2a253b1e78bf697c2a11dc2ac9d828a12960e3d4" translate="yes" xml:space="preserve">
          <source>It's like you are trying to access an object which is &lt;code&gt;null&lt;/code&gt;. Consider below example:</source>
          <target state="translated">Es como si estuviera intentando acceder a un objeto que es &lt;code&gt;null&lt;/code&gt; . Considere el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="76418c77d1fc266f3a62cf5f684db71e4d1120d9" translate="yes" xml:space="preserve">
          <source>Let's illustrate with the simple example (above) first. We start by looking at the line that the stack trace has told us is where the NPE happened:</source>
          <target state="translated">Ilustrémoslo con el simple ejemplo (arriba)primero.Empezamos mirando la línea que el rastro de la pila nos ha dicho que es donde ocurrió el NPE:</target>
        </trans-unit>
        <trans-unit id="d339292be5c375475471a2ad89e7eae3c587ba51" translate="yes" xml:space="preserve">
          <source>Looking at the first line, how could that throw an NPE?  There are two ways:</source>
          <target state="translated">Mirando la primera línea,¿cómo podría eso lanzar un NPE? Hay dos maneras:</target>
        </trans-unit>
        <trans-unit id="3048bc36d2ef3a5ca1d47ab6ade02d04a15cfa52" translate="yes" xml:space="preserve">
          <source>Next check where this value comes from. By following the callers of the method, we see that &lt;code&gt;s&lt;/code&gt; is passed in with &lt;code&gt;printString(name)&lt;/code&gt; in the &lt;code&gt;print()&lt;/code&gt; method, and &lt;code&gt;this.name&lt;/code&gt; is null.</source>
          <target state="translated">Luego verifique de d&amp;oacute;nde proviene este valor. Siguiendo a los llamadores del m&amp;eacute;todo, vemos que &lt;code&gt;s&lt;/code&gt; se pasa con &lt;code&gt;printString(name)&lt;/code&gt; en el m&amp;eacute;todo &lt;code&gt;print()&lt;/code&gt; , y &lt;code&gt;this.name&lt;/code&gt; es nulo.</target>
        </trans-unit>
        <trans-unit id="68bd69464f365c0fbf0e01313f81d5c88e5bffca" translate="yes" xml:space="preserve">
          <source>Next, we need to figure out which of those scenarios explains what is actually happening. We will start by exploring the first one:</source>
          <target state="translated">A continuación,tenemos que averiguar cuál de esos escenarios explica lo que realmente está sucediendo.Empezaremos explorando el primero:</target>
        </trans-unit>
        <trans-unit id="8eceeaca2b7a976cb9ee01b6b05534d3a2006ca8" translate="yes" xml:space="preserve">
          <source>Note that in a more complicated example, there will be lots of lines in the NPE stack trace. But you can be sure that the second line (the first &quot;at&quot; line) will tell you where the NPE was thrown&lt;sup&gt;1&lt;/sup&gt;.</source>
          <target state="translated">Tenga en cuenta que, en un ejemplo m&amp;aacute;s complicado, habr&amp;aacute; muchas l&amp;iacute;neas en la traza de la pila NPE. Pero puede estar seguro de que la segunda l&amp;iacute;nea (la primera l&amp;iacute;nea &quot;en&quot;) le dir&amp;aacute; d&amp;oacute;nde se arroj&amp;oacute; el NPE &lt;sup&gt;1&lt;/sup&gt; .</target>
        </trans-unit>
        <trans-unit id="7efbcba01f44f10b16dc449b3a4ce5b93ec278ac" translate="yes" xml:space="preserve">
          <source>OK, so let's try a slightly more tricky example. This will require some &lt;em&gt;logical deduction&lt;/em&gt;.</source>
          <target state="translated">Bien, intentemos con un ejemplo un poco m&amp;aacute;s complicado. Esto requerir&amp;aacute; alguna &lt;em&gt;deducci&amp;oacute;n l&amp;oacute;gica&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="09140446828a190f98d3e888ff50d49babf39577" translate="yes" xml:space="preserve">
          <source>On the first line inside &lt;code&gt;main&lt;/code&gt;, I'm explicitly setting the &lt;code&gt;Object&lt;/code&gt; reference &lt;code&gt;obj&lt;/code&gt; equal to &lt;code&gt;null&lt;/code&gt;.  This means I have a reference, but it isn't pointing to any object.  After that, I try to treat the reference as though it points to an object by calling a method on it.  This results in a &lt;code&gt;NullPointerException&lt;/code&gt; because there is no code to execute in the location that the reference is pointing.</source>
          <target state="translated">En la primera l&amp;iacute;nea dentro de &lt;code&gt;main&lt;/code&gt; , estoy configurando expl&amp;iacute;citamente el &lt;code&gt;Object&lt;/code&gt; referencia &lt;code&gt;obj&lt;/code&gt; igual a &lt;code&gt;null&lt;/code&gt; . Esto significa que tengo una referencia, pero no apunta a ning&amp;uacute;n objeto. Despu&amp;eacute;s de eso, trato de tratar la referencia como si apuntara a un objeto llamando a un m&amp;eacute;todo. Esto da como resultado una &lt;code&gt;NullPointerException&lt;/code&gt; porque no hay c&amp;oacute;digo para ejecutar en la ubicaci&amp;oacute;n a la que apunta la referencia.</target>
        </trans-unit>
        <trans-unit id="5b3e2ae3b2ddecc346c758e8d3b5549b755c1e92" translate="yes" xml:space="preserve">
          <source>Or you can design the class so that &lt;code&gt;name&lt;/code&gt;&lt;em&gt;always has a non-null value&lt;/em&gt;:</source>
          <target state="translated">O puede dise&amp;ntilde;ar la clase para que ese &lt;code&gt;name&lt;/code&gt; &lt;em&gt;siempre tenga un valor no nulo&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="cc52fe609e5da3175933559d437d1fdb72e364c5" translate="yes" xml:space="preserve">
          <source>Other fixes</source>
          <target state="translated">Otros arreglos</target>
        </trans-unit>
        <trans-unit id="5332d8134d57cacdb6ee04717450e635f41c6767" translate="yes" xml:space="preserve">
          <source>Otherwise, if the value of the Expression is null, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">De lo contrario, si el valor de la Expresi&amp;oacute;n es nulo, se &lt;code&gt;NullPointerException&lt;/code&gt; una NullPointerException .</target>
        </trans-unit>
        <trans-unit id="59f63782fa2d7a08a6249d7857f98b11c193fbd3" translate="yes" xml:space="preserve">
          <source>Prefer &lt;code&gt;valueOf()&lt;/code&gt; over &lt;code&gt;toString()&lt;/code&gt;.</source>
          <target state="translated">Prefiere &lt;code&gt;valueOf()&lt;/code&gt; sobre &lt;code&gt;toString()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6eb6b961bbe76bed259ea3835d017bb805fcd01" translate="yes" xml:space="preserve">
          <source>Probably the quickest example code I could come up with to illustrate a &lt;code&gt;NullPointerException&lt;/code&gt; would be:</source>
          <target state="translated">Probablemente, el c&amp;oacute;digo de ejemplo m&amp;aacute;s r&amp;aacute;pido que se me ocurri&amp;oacute; para ilustrar una &lt;code&gt;NullPointerException&lt;/code&gt; ser&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="e1aa69767a9902b2d9d069ada53c5e09041f46fc" translate="yes" xml:space="preserve">
          <source>Question: How do I read the NPE stacktrace?</source>
          <target state="translated">Pregunta:¿Cómo puedo leer el rastro de la pila del NPE?</target>
        </trans-unit>
        <trans-unit id="2a7214e14c4e2559dd384c3596ba27c46d122f5b" translate="yes" xml:space="preserve">
          <source>Question: How do I track down the cause of the NPE exception in my code?</source>
          <target state="translated">Pregunta:¿Cómo puedo rastrear la causa de la excepción de la NPE en mi código?</target>
        </trans-unit>
        <trans-unit id="110059053a369d1fac95bf75cd737030c08abcd5" translate="yes" xml:space="preserve">
          <source>Question: What causes a &lt;code&gt;NullPointerException&lt;/code&gt; (NPE)?</source>
          <target state="translated">Pregunta: &amp;iquest;Qu&amp;eacute; causa una &lt;code&gt;NullPointerException&lt;/code&gt; (NPE)?</target>
        </trans-unit>
        <trans-unit id="f7b4ef7eaa8bdc43a3fc8327ee8e3b2a393de223" translate="yes" xml:space="preserve">
          <source>Reference: &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/lang/NullPointerException.html&quot;&gt;http://docs.oracle.com/javase/8/docs/api/java/lang/NullPointerException.html&lt;/a&gt;</source>
          <target state="translated">Referencia: &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/lang/NullPointerException.html&quot;&gt;http://docs.oracle.com/javase/8/docs/api/java/lang/NullPointerException.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20c7030469d7703e9338b3a13079900db1ad58d0" translate="yes" xml:space="preserve">
          <source>Same for the array concept:</source>
          <target state="translated">Lo mismo para el concepto de la matriz:</target>
        </trans-unit>
        <trans-unit id="a328a8219b1d929d6ed454cdd41b31e02977388d" translate="yes" xml:space="preserve">
          <source>Second observation: when I run the program, it outputs two lines of &quot;gobbledy-gook&quot;. &lt;strong&gt;WRONG!!&lt;/strong&gt; That's not gobbledy-gook. It is a stacktrace ... and it provides &lt;em&gt;vital information&lt;/em&gt; that will help you track down the error in your code, if you take the time to read it carefully.</source>
          <target state="translated">Segunda observaci&amp;oacute;n: cuando ejecuto el programa, genera dos l&amp;iacute;neas de &quot;gobbledy-gook&quot;. &lt;strong&gt;&amp;iexcl;&amp;iexcl;INCORRECTO!!&lt;/strong&gt; Eso no es gobbledy-gook. Es un seguimiento de pila ... y proporciona &lt;em&gt;informaci&amp;oacute;n vital&lt;/em&gt; que lo ayudar&amp;aacute; a rastrear el error en su c&amp;oacute;digo, si se toma el tiempo de leerlo cuidadosamente.</target>
        </trans-unit>
        <trans-unit id="5ece6ed3284a8e7793f5f8e6191387a1ca65d15c" translate="yes" xml:space="preserve">
          <source>See also:
&lt;a href=&quot;http://javarevisited.blogspot.com/2013/05/ava-tips-and-best-practices-to-avoid-nullpointerexception-program-application.html&quot;&gt;A good list of best practices&lt;/a&gt;</source>
          <target state="translated">Ver tambi&amp;eacute;n: &lt;a href=&quot;http://javarevisited.blogspot.com/2013/05/ava-tips-and-best-practices-to-avoid-nullpointerexception-program-application.html&quot;&gt;una buena lista de mejores pr&amp;aacute;cticas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c66fb315fd8a9161821812042eba9ece0fca8b7e" translate="yes" xml:space="preserve">
          <source>See this below example as well:</source>
          <target state="translated">Véase también el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="3f608da5633e1fbbbac554cb0e0f6193783c3e96" translate="yes" xml:space="preserve">
          <source>So let's look at what it says:</source>
          <target state="translated">Así que vamos a ver lo que dice:</target>
        </trans-unit>
        <trans-unit id="a957e6b089e86c3afa609e7f79243914d473cc8f" translate="yes" xml:space="preserve">
          <source>So now we have two &quot;at&quot; lines. The first one is for this line:</source>
          <target state="translated">Así que ahora tenemos dos líneas &quot;at&quot;.La primera es para esta línea:</target>
        </trans-unit>
        <trans-unit id="ad6c8b1add16d8acb60150ed283087c1e312a08e" translate="yes" xml:space="preserve">
          <source>So what about our second scenario? Well, we can see that &lt;code&gt;pos&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;, so that means that &lt;code&gt;foo[1]&lt;/code&gt; must be &lt;code&gt;null&lt;/code&gt;. Is that possible?</source>
          <target state="translated">Entonces, &amp;iquest;qu&amp;eacute; pasa con nuestro segundo escenario? Bueno, podemos ver que &lt;code&gt;pos&lt;/code&gt; es &lt;code&gt;1&lt;/code&gt; , por lo que significa que &lt;code&gt;foo[1]&lt;/code&gt; debe ser &lt;code&gt;null&lt;/code&gt; . &amp;iquest;Es eso posible?</target>
        </trans-unit>
        <trans-unit id="edded83678c3da726f6a8903ea8346cc771eea21" translate="yes" xml:space="preserve">
          <source>So where did that &lt;code&gt;null&lt;/code&gt; come from? In this case it is obvious, and it is obvious what we need to do to fix it. (Assign a non-null value to &lt;code&gt;foo&lt;/code&gt;.)</source>
          <target state="translated">Entonces, &amp;iquest;de d&amp;oacute;nde vino ese &lt;code&gt;null&lt;/code&gt; ? En este caso, es obvio, y es obvio lo que debemos hacer para solucionarlo. (Asigne un valor no nulo a &lt;code&gt;foo&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4b796033ff61d122122d65b5810f1c0b31a4da7c" translate="yes" xml:space="preserve">
          <source>So you have a &lt;code&gt;NullPointerException&lt;/code&gt;. How do you fix it? Let's take a simple example which throws a &lt;code&gt;NullPointerException&lt;/code&gt;:</source>
          <target state="translated">Entonces tienes una &lt;code&gt;NullPointerException&lt;/code&gt; . Como lo arreglas? Tomemos un ejemplo simple que arroja una &lt;code&gt;NullPointerException&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3a73c967d00d54d26fc9adb9c9ba33d3cc383d28" translate="yes" xml:space="preserve">
          <source>Sonar with findbugs can detect NPE.
&lt;a href=&quot;https://stackoverflow.com/questions/20899931/can-sonar-catch-null-pointer-exceptions-caused-by-jvm-dynamically&quot;&gt;Can sonar catch null pointer exceptions caused by JVM Dynamically&lt;/a&gt;</source>
          <target state="translated">La sonda con findbugs puede detectar NPE. &lt;a href=&quot;https://stackoverflow.com/questions/20899931/can-sonar-catch-null-pointer-exceptions-caused-by-jvm-dynamically&quot;&gt;&amp;iquest;Puede la sonda detectar excepciones de puntero nulo causadas por JVM din&amp;aacute;micamente?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0b3f0dcd539c143def5976a02527992145f3bd87" translate="yes" xml:space="preserve">
          <source>Suppose that I compile and run the program above:</source>
          <target state="translated">Supongamos que compilo y ejecuto el programa de arriba:</target>
        </trans-unit>
        <trans-unit id="fc52468f6c93bbc71a7e83fc6a1c10802582b2cc" translate="yes" xml:space="preserve">
          <source>Taking the length of &lt;code&gt;null&lt;/code&gt; as if it were an array.</source>
          <target state="translated">Tomando la longitud de &lt;code&gt;null&lt;/code&gt; como si fuera una matriz.</target>
        </trans-unit>
        <trans-unit id="a7a05060b85348fb26d1541414ea261fc8549ebe" translate="yes" xml:space="preserve">
          <source>Taking the length of null as if it were an array.</source>
          <target state="translated">Tomando la longitud del nulo como si fuera una matriz.</target>
        </trans-unit>
        <trans-unit id="70e38b9cf4b5f335ee765ffbb4c9d75eed7a25c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NullPointerException&lt;/code&gt; occurs when you declare a variable but did not create an object and assign to the variable before trying to use the contents of the variable (called &lt;em&gt;dereferencing&lt;/em&gt;). So you are pointing to something that does not actually exist.</source>
          <target state="translated">La &lt;code&gt;NullPointerException&lt;/code&gt; produce cuando declara una variable pero no crea un objeto y no la asigna a la variable antes de intentar usar el contenido de la variable (denominada &lt;em&gt;desreferenciaci&amp;oacute;n&lt;/em&gt; ). Entonces est&amp;aacute;s se&amp;ntilde;alando algo que en realidad no existe.</target>
        </trans-unit>
        <trans-unit id="4dd2a758bfbc7c2e200907cb43a178174a1ef438" translate="yes" xml:space="preserve">
          <source>The below code gives you a null pointer exception.</source>
          <target state="translated">El siguiente código le da una excepción de puntero nulo.</target>
        </trans-unit>
        <trans-unit id="5afcbf74c6133d5e8acb0880821ac443b031db8d" translate="yes" xml:space="preserve">
          <source>The first line declares a variable named &lt;code&gt;num&lt;/code&gt;, but it does not actually contain a primitive value yet. Instead, it contains a pointer (because the type is &lt;code&gt;Integer&lt;/code&gt; which is a reference type). Since you have not yet said what to point to, Java sets it to &lt;code&gt;null&lt;/code&gt;, which means &quot;&lt;strong&gt;I am pointing to &lt;em&gt;nothing&lt;/em&gt;&lt;/strong&gt;&quot;.</source>
          <target state="translated">La primera l&amp;iacute;nea declara una variable llamada &lt;code&gt;num&lt;/code&gt; , pero a&amp;uacute;n no contiene un valor primitivo. En su lugar, contiene un puntero (porque el tipo es &lt;code&gt;Integer&lt;/code&gt; , que es un tipo de referencia). Como todav&amp;iacute;a no ha dicho a qu&amp;eacute; apuntar, Java lo establece como &lt;code&gt;null&lt;/code&gt; , lo que significa &quot; &lt;strong&gt;no estoy se&amp;ntilde;alando a &lt;em&gt;nada&lt;/em&gt;&lt;/strong&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="94ff3f2d90b51f92f5a22e77c70e18165e13575b" translate="yes" xml:space="preserve">
          <source>The first line of the stack trace tells you a number of things:</source>
          <target state="translated">La primera línea del rastro de la pila te dice varias cosas:</target>
        </trans-unit>
        <trans-unit id="11b1b8cb1b03ae2aa5fe1b9dc487442dbfdff843" translate="yes" xml:space="preserve">
          <source>The first step is identifying exactly &lt;em&gt;which values are causing the exception&lt;/em&gt;. For this, we need to do some debugging. It's important to learn to read a &lt;em&gt;stacktrace&lt;/em&gt;. This will show you where the exception was thrown:</source>
          <target state="translated">El primer paso es identificar exactamente &lt;em&gt;qu&amp;eacute; valores est&amp;aacute;n causando la excepci&amp;oacute;n&lt;/em&gt; . Para esto, necesitamos hacer alguna depuraci&amp;oacute;n. Es importante aprender a leer un &lt;em&gt;stacktrace&lt;/em&gt; . Esto le mostrar&amp;aacute; d&amp;oacute;nde se produjo la excepci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="5f86a6ec7cb1a7454d5e5706d38263349a9ab618" translate="yes" xml:space="preserve">
          <source>The object lives in the VM memory space and the only way to access it is using &lt;code&gt;this&lt;/code&gt; references. Take this example:</source>
          <target state="translated">El objeto vive en el espacio de memoria de VM y la &amp;uacute;nica forma de acceder a &amp;eacute;l es utilizando &lt;code&gt;this&lt;/code&gt; referencias. Toma este ejemplo:</target>
        </trans-unit>
        <trans-unit id="e2b9b98cc8af92a275b3f463db51d343e34aca5d" translate="yes" xml:space="preserve">
          <source>The second line is the most important one in diagnosing an NPE.</source>
          <target state="translated">La segunda línea es la más importante en el diagnóstico de un NPE.</target>
        </trans-unit>
        <trans-unit id="200bc558e7d3cbedcdab6266531c26406b51859d" translate="yes" xml:space="preserve">
          <source>The variable can have a &lt;em&gt;default value&lt;/em&gt; (and &lt;code&gt;setName&lt;/code&gt; can prevent it being set to null):</source>
          <target state="translated">La variable puede tener un &lt;em&gt;valor predeterminado&lt;/em&gt; (y &lt;code&gt;setName&lt;/code&gt; puede evitar que se establezca en nulo):</target>
        </trans-unit>
        <trans-unit id="a42f342c5074f18b2ee8c62146f8c92dc81607f4" translate="yes" xml:space="preserve">
          <source>There are many ways that you could use a &lt;code&gt;null&lt;/code&gt; value that will result in a &lt;code&gt;NullPointerException&lt;/code&gt;. In fact, the only things that you &lt;em&gt;can&lt;/em&gt; do with a &lt;code&gt;null&lt;/code&gt; without causing an NPE are:</source>
          <target state="translated">Hay muchas maneras en que podr&amp;iacute;a usar un valor &lt;code&gt;null&lt;/code&gt; que dar&amp;aacute; como resultado una &lt;code&gt;NullPointerException&lt;/code&gt; . De hecho, las &amp;uacute;nicas cosas que &lt;em&gt;puede&lt;/em&gt; hacer con un &lt;code&gt;null&lt;/code&gt; sin causar un NPE son:</target>
        </trans-unit>
        <trans-unit id="87a50685fb8181533a1a38415f42609ffed3b6b7" translate="yes" xml:space="preserve">
          <source>This an important thing to know - when there are no more references to an object (in the example above when &lt;code&gt;reference&lt;/code&gt; and &lt;code&gt;otherReference&lt;/code&gt; both point to null) then the object is &quot;unreachable&quot;. There is no way we can work with it, so this object is ready to be garbage collected, and at some point, the VM will free the memory used by this object and will allocate another.</source>
          <target state="translated">Es importante saberlo: cuando no hay m&amp;aacute;s referencias a un objeto (en el ejemplo anterior, cuando la &lt;code&gt;reference&lt;/code&gt; y &lt;code&gt;otherReference&lt;/code&gt; referencia apuntan a nulo), el objeto es &quot;inalcanzable&quot;. No hay forma de que podamos trabajar con &amp;eacute;l, por lo que este objeto est&amp;aacute; listo para ser recolectado, y en alg&amp;uacute;n momento, la m&amp;aacute;quina virtual liberar&amp;aacute; la memoria utilizada por este objeto y asignar&amp;aacute; otro.</target>
        </trans-unit>
        <trans-unit id="4027f6004fa781ce93560b2dd9d73f25224a03bd" translate="yes" xml:space="preserve">
          <source>This is enough to give us a solution: add a call to &lt;code&gt;printer.setName()&lt;/code&gt; before calling &lt;code&gt;printer.print()&lt;/code&gt;.</source>
          <target state="translated">Esto es suficiente para darnos una soluci&amp;oacute;n: agregue una llamada a &lt;code&gt;printer.setName()&lt;/code&gt; antes de llamar a &lt;code&gt;printer.print()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ca84ac3076d9c11cfc10289571d11019273ee9b" translate="yes" xml:space="preserve">
          <source>This is the hard part. The short answer is to apply logical inference to the evidence provided by the stack trace, the source code and the relevant API documentation.</source>
          <target state="translated">Esta es la parte difícil.La respuesta corta es aplicar la inferencia lógica a la evidencia proporcionada por el rastro de la pila,el código fuente y la documentación pertinente de la API.</target>
        </trans-unit>
        <trans-unit id="7676e926601728e6f60a78aa4a791254b0dcaa71" translate="yes" xml:space="preserve">
          <source>This tells us a number of things:</source>
          <target state="translated">Esto nos dice varias cosas:</target>
        </trans-unit>
        <trans-unit id="c54f75a574b2c4fd91cac2f701399ef8dfb71a73" translate="yes" xml:space="preserve">
          <source>Throwing &lt;code&gt;null&lt;/code&gt; as if it were a Throwable value.</source>
          <target state="translated">Lanzamiento &lt;code&gt;null&lt;/code&gt; como si fuera un valor Lanzable.</target>
        </trans-unit>
        <trans-unit id="07a54638a8e2bc759d8cf4b233a15f1d6bf23eb7" translate="yes" xml:space="preserve">
          <source>Throwing null as if it were a Throwable value.</source>
          <target state="translated">Lanzamiento nulo como si fuera un valor de lanzamiento.</target>
        </trans-unit>
        <trans-unit id="619270eb9d34c9bc6746a84f38e87b07725f7c5b" translate="yes" xml:space="preserve">
          <source>Thrown when an application attempts to use null in a case where an
  object is required. These include:</source>
          <target state="translated">Lanzado cuando una aplicación intenta utilizar nulos en un caso en que se requiere un objeto.Estos incluyen:</target>
        </trans-unit>
        <trans-unit id="d45e625248d1bd8fbefc6c9c54d4c25071618a70" translate="yes" xml:space="preserve">
          <source>Use annotations &lt;a href=&quot;https://javaee.github.io/javaee-spec/javadocs/javax/validation/constraints/NotNull.html&quot;&gt;&lt;code&gt;@NotNull&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://javadoc.io/static/com.github.spotbugs/spotbugs-annotations/3.1.12/edu/umd/cs/findbugs/annotations/Nullable.html&quot;&gt;&lt;code&gt;@Nullable&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Use anotaciones &lt;a href=&quot;https://javaee.github.io/javaee-spec/javadocs/javax/validation/constraints/NotNull.html&quot;&gt; &lt;code&gt;@NotNull&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;https://javadoc.io/static/com.github.spotbugs/spotbugs-annotations/3.1.12/edu/umd/cs/findbugs/annotations/Nullable.html&quot;&gt; &lt;code&gt;@Nullable&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a45ab3058a4a8d1f2705a89ea1c87802cd3caa9" translate="yes" xml:space="preserve">
          <source>Use equals with a known object first: &lt;code&gt;if(&quot;knownObject&quot;.equals(unknownObject)&lt;/code&gt;</source>
          <target state="translated">Utilice iguales con un objeto conocido primero: &lt;code&gt;if(&quot;knownObject&quot;.equals(unknownObject)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8c9a4702b1c2baf074df6f4b2f4056e68b58c6b2" translate="yes" xml:space="preserve">
          <source>Use null safe &lt;a href=&quot;https://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html&quot;&gt;&lt;code&gt;StringUtils&lt;/code&gt;&lt;/a&gt; methods &lt;code&gt;StringUtils.isEmpty(null)&lt;/code&gt;.</source>
          <target state="translated">Utilice m&amp;eacute;todos &lt;code&gt;StringUtils.isEmpty(null)&lt;/code&gt; seguros y &lt;a href=&quot;https://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html&quot;&gt; &lt;code&gt;StringUtils&lt;/code&gt; &lt;/a&gt; StringUtils.isEmpty (null) .</target>
        </trans-unit>
        <trans-unit id="8e7aac8f8901568e201b480a0f51d1e38bd4e704" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;final&lt;/code&gt; modifier to enforce good initialization.</source>
          <target state="translated">Use el modificador &lt;code&gt;final&lt;/code&gt; para forzar una buena inicializaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5571a8c84a86d2b329356c5ece6f990e0c2ee9e8" translate="yes" xml:space="preserve">
          <source>Well, if that happened, the stack trace would look different. The first &quot;at&quot; line would say that the exception was thrown in some line in the &lt;code&gt;java.lang.String&lt;/code&gt; class, and line 4 of &lt;code&gt;Test.java&lt;/code&gt; would be the second &quot;at&quot; line.</source>
          <target state="translated">Bueno, si eso sucediera, el seguimiento de la pila se ver&amp;iacute;a diferente. La primera l&amp;iacute;nea &quot;at&quot; dir&amp;iacute;a que la excepci&amp;oacute;n se lanz&amp;oacute; en alguna l&amp;iacute;nea de la clase &lt;code&gt;java.lang.String&lt;/code&gt; , y la l&amp;iacute;nea 4 de &lt;code&gt;Test.java&lt;/code&gt; ser&amp;iacute;a la segunda l&amp;iacute;nea &quot;at&quot;.</target>
        </trans-unit>
        <trans-unit id="2ea8cb4ce3fa7d8910d932e12186ed6c797ff3eb" translate="yes" xml:space="preserve">
          <source>What are Null Pointer Exceptions (&lt;code&gt;java.lang.NullPointerException&lt;/code&gt;) and what causes them?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; son las excepciones de puntero nulo ( &lt;code&gt;java.lang.NullPointerException&lt;/code&gt; ) y qu&amp;eacute; las causa?</target>
        </trans-unit>
        <trans-unit id="a23e7c7dd6bd4a210d09c8c4d18ed8b71c338010" translate="yes" xml:space="preserve">
          <source>What is a NullPointerException, and how do I fix it</source>
          <target state="translated">¿Qué es una excepción de punto nulo y cómo lo arreglo?</target>
        </trans-unit>
        <trans-unit id="fd79d84a8b29d705a7298fe1cdcfa64995856eae" translate="yes" xml:space="preserve">
          <source>What is a NullPointerException?</source>
          <target state="translated">¿Qué es un NullPointerException?</target>
        </trans-unit>
        <trans-unit id="0edb28c818192a20185dc07fb4a9521f4d21afac" translate="yes" xml:space="preserve">
          <source>What methods/tools can be used to determine the cause so that you stop
  the exception from causing the program to terminate prematurely?</source>
          <target state="translated">¿Qué métodos se pueden utilizar para determinar la causa de manera que se evite que la excepción haga que el programa termine prematuramente?</target>
        </trans-unit>
        <trans-unit id="045d1c645b9d61717b1c4818404fbc1b9d0fe6eb" translate="yes" xml:space="preserve">
          <source>When you attempt to execute one object method, the reference asks the living object to execute that method. But if the reference is referencing NULL (nothing, zero, void, nada)  then there is no way the method gets executed. Then the runtime let you know this by throwing a NullPointerException.</source>
          <target state="translated">Cuando se intenta ejecutar un método de objeto,la referencia pide al objeto vivo que ejecute ese método.Pero si la referencia hace referencia a NULL (nada,cero,vacío,nada)entonces no hay forma de que el método se ejecute.Entonces el tiempo de ejecución te lo hace saber lanzando un NullPointerException.</target>
        </trans-unit>
        <trans-unit id="b38b6a98cef1c3244acc9814b85d017efbbe9ca2" translate="yes" xml:space="preserve">
          <source>When you declare a reference variable (i.e. an object) you are really creating a pointer to an object. Consider the following code where you declare a variable of primitive type &lt;code&gt;int&lt;/code&gt;:</source>
          <target state="translated">Cuando declara una variable de referencia (es decir, un objeto), realmente est&amp;aacute; creando un puntero a un objeto. Considere el siguiente c&amp;oacute;digo donde declara una variable de tipo primitivo &lt;code&gt;int&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="971a4d1346f3c7ff4aec8932ef90985736642518" translate="yes" xml:space="preserve">
          <source>Where does &lt;code&gt;bar&lt;/code&gt; come from? It is a parameter to the &lt;code&gt;test&lt;/code&gt; method call, and if we look at how &lt;code&gt;test&lt;/code&gt; was called, we can see that it comes from the &lt;code&gt;foo&lt;/code&gt; static variable. In addition, we can see clearly that we initialized &lt;code&gt;foo&lt;/code&gt; to a non-null value.  That is sufficient to tentatively dismiss this explanation. (In theory, something else could &lt;em&gt;change&lt;/em&gt;&lt;code&gt;foo&lt;/code&gt; to &lt;code&gt;null&lt;/code&gt; ... but that is not happening here.)</source>
          <target state="translated">&amp;iquest;De d&amp;oacute;nde viene el &lt;code&gt;bar&lt;/code&gt; ? Es un par&amp;aacute;metro para la llamada al m&amp;eacute;todo de &lt;code&gt;test&lt;/code&gt; , y si observamos c&amp;oacute;mo se llam&amp;oacute; a la &lt;code&gt;test&lt;/code&gt; , podemos ver que proviene de la variable est&amp;aacute;tica &lt;code&gt;foo&lt;/code&gt; . Adem&amp;aacute;s, podemos ver claramente que inicializamos &lt;code&gt;foo&lt;/code&gt; a un valor no nulo. Eso es suficiente para descartar provisionalmente esta explicaci&amp;oacute;n. (En teor&amp;iacute;a, algo m&amp;aacute;s podr&amp;iacute;a &lt;em&gt;cambiar&lt;/em&gt; a &lt;code&gt;null&lt;/code&gt; ... pero eso no est&amp;aacute; sucediendo aqu&amp;iacute;).</target>
        </trans-unit>
        <trans-unit id="8734be1e4922d39775902ac36f9de454e8f5cd18" translate="yes" xml:space="preserve">
          <source>Where is &lt;code&gt;this.name&lt;/code&gt; set? In the &lt;code&gt;setName(String)&lt;/code&gt; method. With some more debugging, we can see that this method isn't called at all. If the method was called, make sure to check the &lt;em&gt;order&lt;/em&gt; that these methods are called, and the set method isn't called &lt;em&gt;after&lt;/em&gt; the print method.</source>
          <target state="translated">&amp;iquest;D&amp;oacute;nde se establece &lt;code&gt;this.name&lt;/code&gt; ? En el &lt;code&gt;setName(String)&lt;/code&gt; . Con un poco m&amp;aacute;s de depuraci&amp;oacute;n, podemos ver que este m&amp;eacute;todo no se llama en absoluto. Si se llam&amp;oacute; al m&amp;eacute;todo, aseg&amp;uacute;rese de verificar el &lt;em&gt;orden en&lt;/em&gt; que se llama a estos m&amp;eacute;todos, y el m&amp;eacute;todo establecido no se llama &lt;em&gt;despu&amp;eacute;s&lt;/em&gt; del m&amp;eacute;todo de impresi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="706f4059c0a82014b57c44cebf4ce048cfdc2bda" translate="yes" xml:space="preserve">
          <source>You &lt;em&gt;must&lt;/em&gt; initialize the elements in the array &lt;em&gt;before&lt;/em&gt; accessing or dereferencing them.</source>
          <target state="translated">&lt;em&gt;Debe&lt;/em&gt; inicializar los elementos en la matriz &lt;em&gt;antes de&lt;/em&gt; acceder o desreferenciarlos.</target>
        </trans-unit>
        <trans-unit id="c84e0b49f0f58904617fb6abbab17f59ee3f10cf" translate="yes" xml:space="preserve">
          <source>Your reference is &quot;pointing&quot; to null, thus &quot;Null -&amp;gt; Pointer&quot;.</source>
          <target state="translated">Su referencia est&amp;aacute; &quot;apuntando&quot; a nulo, por lo tanto, &quot;Nulo -&amp;gt; Puntero&quot;.</target>
        </trans-unit>
        <trans-unit id="b2766c956c0871691da99343bea9fdce861530cc" translate="yes" xml:space="preserve">
          <source>and the second one is for this line:</source>
          <target state="translated">y la segunda es para esta línea:</target>
        </trans-unit>
        <trans-unit id="2b6f2c4a758bdfa568fbd16a03a6270d7b0cb1d4" translate="yes" xml:space="preserve">
          <source>assign it to a reference variable or read it from a reference variable,</source>
          <target state="translated">asignarlo a una variable de referencia o leerlo de una variable de referencia,</target>
        </trans-unit>
        <trans-unit id="4794f1fa5f6182550ad52c39225ba650ca2c5cac" translate="yes" xml:space="preserve">
          <source>assign it to an array element or read it from an array element (provided that array reference itself is non-null!),</source>
          <target state="translated">asignarlo a un elemento de la matriz o leerlo de un elemento de la matriz (¡siempre que la referencia de la matriz en sí no sea nula!),</target>
        </trans-unit>
        <trans-unit id="fea64947f3e1c19acb6fae94b6a25dd469358299" translate="yes" xml:space="preserve">
          <source>pass it as a parameter or return it as a result, or</source>
          <target state="translated">pasarla como un parámetro o devolverla como resultado,o</target>
        </trans-unit>
        <trans-unit id="60ce2f688c217a588196b5698debb2b0bed8b3dc" translate="yes" xml:space="preserve">
          <source>test it using the &lt;code&gt;==&lt;/code&gt; or &lt;code&gt;!=&lt;/code&gt; operators, or &lt;code&gt;instanceof&lt;/code&gt;.</source>
          <target state="translated">pru&amp;eacute;belo utilizando los operadores &lt;code&gt;==&lt;/code&gt; o &lt;code&gt;!=&lt;/code&gt; , o &lt;code&gt;instanceof&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48dd492845e5923b030e505964695a889432ed8e" translate="yes" xml:space="preserve">
          <source>the statement labelled &quot;HERE&quot; is going to attempt to run the &lt;code&gt;length()&lt;/code&gt; method on a &lt;code&gt;null&lt;/code&gt; reference, and this will throw a &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">la declaraci&amp;oacute;n etiquetada &quot;AQU&amp;Iacute;&quot; intentar&amp;aacute; ejecutar el m&amp;eacute;todo &lt;code&gt;length()&lt;/code&gt; en una referencia &lt;code&gt;null&lt;/code&gt; , y esto arrojar&amp;aacute; una &lt;code&gt;NullPointerException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5c707c98218e538788fb9a4baa24f7af56308cd" translate="yes" xml:space="preserve">
          <source>we allocate a &lt;code&gt;String[]&lt;/code&gt; with two elements &lt;em&gt;that are initialized to &lt;code&gt;null&lt;/code&gt;&lt;/em&gt;. After that, we have not changed the contents of &lt;code&gt;foo&lt;/code&gt; ... so &lt;code&gt;foo[1]&lt;/code&gt; will still be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">asignamos una &lt;code&gt;String[]&lt;/code&gt; con dos elementos &lt;em&gt;que se inicializan a &lt;code&gt;null&lt;/code&gt; &lt;/em&gt; . Despu&amp;eacute;s de eso, no hemos cambiado el contenido de &lt;code&gt;foo&lt;/code&gt; ... por lo que &lt;code&gt;foo[1]&lt;/code&gt; seguir&amp;aacute; siendo &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
