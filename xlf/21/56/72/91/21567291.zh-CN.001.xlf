<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/21567291">
    <body>
      <group id="21567291">
        <trans-unit id="ec7c214a1fdc8780b60bcb590f4198cc7cd9b775" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What's the difference?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有什么不同？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fd943620ecdfe6d8c4a83ff65c22201fa31d31a9" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;1: &lt;code&gt;std::skipws&lt;/code&gt; is manipulator that tells the input stream to discard leading whitespace when performing formatted input. This can be turned off with the &lt;code&gt;std::noskipws&lt;/code&gt; manipulator.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::skipws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是操纵器，它告诉输入流在执行格式化输入时放弃前导空白。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::noskipws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;机械手&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将其关闭&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="b985457f75403e475b47db94270c83136e39c4ee" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;2: Input streams deem certain characters as whitespace by default, such the space character, newline character, form feed, carriage return, etc.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2：默认情况下，输入流将某些字符视为空格，例如空格字符，换行符，换页符，回车符等。&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="54861e0dd6e7e7340d75914d2f06224b2a47e8e4" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;3: This is the signature of &lt;code&gt;std::basic_istream&amp;lt;...&amp;gt;::ignore()&lt;/code&gt;. You can call it with zero arguments to discard a single character from the stream, one argument to discard a certain amount of characters, or two arguments to discard &lt;code&gt;count&lt;/code&gt; characters or until it reaches &lt;code&gt;delim&lt;/code&gt;, whichever one comes first. You normally use &lt;code&gt;std::numeric_limits&amp;lt;std::streamsize&amp;gt;::max()&lt;/code&gt; as the value of &lt;code&gt;count&lt;/code&gt; if you don't know how many characters there are before the delimiter, but you want to discard them anyway.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3：这是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::basic_istream&amp;lt;...&amp;gt;::ignore()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的签名&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。您可以使用零个参数来调用它，以从流中丢弃单个字符，一个参数来丢弃流中的某些字符，或者使用两个参数来丢弃&lt;/font&gt;&lt;/font&gt; &lt;code&gt;count&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;字符，或者直到它到达&lt;/font&gt;&lt;/font&gt; &lt;code&gt;delim&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为止&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，以先到者为准。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您不知道在定界符之前有多少个字符，则&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::numeric_limits&amp;lt;std::streamsize&amp;gt;::max()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;count&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的值&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但是无论如何您都希望丢弃它们。&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="88f90b25366407b37d1a00c8dcc4e4e535f6dc18" translate="yes" xml:space="preserve">
          <source>A newline is always appended to your input when you select</source>
          <target state="translated">当你选择了 &quot;输入法 &quot;时,总会在你的输入中附加一个新行。</target>
        </trans-unit>
        <trans-unit id="3ba0e9b83fcbdba251f0dc44b8e0d3fa71cec891" translate="yes" xml:space="preserve">
          <source>Another overload of this function takes a delimiter of type &lt;code&gt;charT&lt;/code&gt;. A delimiter character is a character that represents the boundary between sequences of input. This particular overload sets the delimiter to the newline character &lt;code&gt;input.widen('\n')&lt;/code&gt; by default since one was not supplied.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此函数的另一个重载采用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;charT&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类型的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定界符&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;分隔符是代表输入序列之间边界的字符。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;默认情况下，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此特殊重载将分隔符设置为换行符&lt;/font&gt;&lt;/font&gt; &lt;code&gt;input.widen('\n')&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，因为未提供。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="052521750e9a3c56e9fde37e02efbbf787c20b0c" translate="yes" xml:space="preserve">
          <source>Another way to discard the whitespace is to use the &lt;code&gt;std::ws&lt;/code&gt; function which is a manipulator designed to extract and discard leading whitespace from the beginning of an input stream:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;丢弃空白的另一种方法是使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::ws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数，该函数是用于从输入流的开头提取和丢弃前导空白的操纵器：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ebd400daeaa87b9872c1451d8dc28b406e3f2dd3" translate="yes" xml:space="preserve">
          <source>Because this leading newline inhibits the expected functionality of your program, it follows that it must be skipped our ignored somehow. One option is to call &lt;code&gt;std::cin.ignore()&lt;/code&gt; after the the first extraction. It will discard the next available character so that the newline is no longer in the way.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于此领先的换行符抑制了程序的预期功能，因此必须以某种方式将其跳过。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一种选择是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在第一次提取后&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::cin.ignore()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它将丢弃下一个可用字符，以使换行符不再受阻。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b9eceb7a86a9f577ef80586c5c1d7fde9ff493d" translate="yes" xml:space="preserve">
          <source>Enter</source>
          <target state="translated">Enter</target>
        </trans-unit>
        <trans-unit id="a51d561ae289fee633489fe4e190348071c52ee1" translate="yes" xml:space="preserve">
          <source>Everything will be OK if you change your initial code in the following way:</source>
          <target state="translated">如果你用下面的方法改变你的初始代码,一切都会OK。</target>
        </trans-unit>
        <trans-unit id="2849cb13a335fb59ef4ed494dc8432c9a3a24fa2" translate="yes" xml:space="preserve">
          <source>I have the following piece of code that prompts the user for their name and state:</source>
          <target state="translated">我有以下代码,提示用户的名字和状态。</target>
        </trans-unit>
        <trans-unit id="617bd29fce2e70b33c9e8d355f4bc533284670e9" translate="yes" xml:space="preserve">
          <source>If the delimiter has been found</source>
          <target state="translated">如果已经找到了分界线</target>
        </trans-unit>
        <trans-unit id="1305802d6e249da94f4f7a07e0bea5b8321d5036" translate="yes" xml:space="preserve">
          <source>If the end-of-file (EOF) character has been found</source>
          <target state="translated">如果找到了文件结束字符(EOF),那么就会出现以下情况</target>
        </trans-unit>
        <trans-unit id="306ba67ef99ba715c1d94551412622dd4f53a4ec" translate="yes" xml:space="preserve">
          <source>If the stream has extracted the maximum amount of characters a &lt;code&gt;std::basic_string&amp;lt;charT&amp;gt;&lt;/code&gt; can hold</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果流提取了最大数量的字符，则&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::basic_string&amp;lt;charT&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以容纳&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9ba38a94a4a02a8ac31ed6e31b42019bc855bb4a" translate="yes" xml:space="preserve">
          <source>If you are mixing formatted input with unformatted input and you need to discard residual whitespace, use &lt;code&gt;std::ws&lt;/code&gt;. Otherwise, if you need to clear out invalid input regardless of what it is, use &lt;code&gt;ignore()&lt;/code&gt;. In our example, we only need to clear whitespace since the stream consumed your input of &lt;code&gt;&quot;John&quot;&lt;/code&gt; for the &lt;code&gt;name&lt;/code&gt; variable. All that was left was the newline character.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果要将格式化的输入与未格式化的输入混合在一起，并且需要丢弃残留的空白，请使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::ws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;否则，如果您需要清除无效输入而不管它是什么，请使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ignore()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在我们的示例中，我们只需要清除空白，因为流消耗了您&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对&lt;/font&gt; &lt;code&gt;name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;变量&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;John&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;输入&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;剩下的只是换行符。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="84a322941debc5bf79050fd668f579d2e95fc9c4" translate="yes" xml:space="preserve">
          <source>In-Depth Explanation:</source>
          <target state="translated">深入解读。</target>
        </trans-unit>
        <trans-unit id="7f321a5d5b1b57e654ad8e7d23fbb0e6633caed5" translate="yes" xml:space="preserve">
          <source>Now, these are a few of the conditions whereby &lt;code&gt;std::getline()&lt;/code&gt; terminates input:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，这些是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::getline()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;终止输入&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的一些条件&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24f096b221f9534bcad007f2b5a32b490950b5b5" translate="yes" xml:space="preserve">
          <source>Return</source>
          <target state="translated">Return</target>
        </trans-unit>
        <trans-unit id="9784d91c3b7fceefefbe649b337cd37547c26834" translate="yes" xml:space="preserve">
          <source>Since the above condition is false, the sentry object will not discard the whitespace. The reason &lt;code&gt;noskipws&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; by this function is because the point of &lt;code&gt;std::getline()&lt;/code&gt; is to read raw, unformatted characters into a &lt;code&gt;std::basic_string&amp;lt;charT&amp;gt;&lt;/code&gt; object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于上述条件为假，因此哨兵对象将不会丢弃空白。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此功能&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;noskipws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;设置为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的原因&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::getline()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是将未格式化的原始字符读取到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::basic_string&amp;lt;charT&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象中。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b2c45bc9b8a5268549eb87988ee9abf386351d8" translate="yes" xml:space="preserve">
          <source>The Solution:</source>
          <target state="translated">的解决方案。</target>
        </trans-unit>
        <trans-unit id="69c8c8d928a345d55b90e7a352d075898f33e91b" translate="yes" xml:space="preserve">
          <source>The above is a sentry object which is instantiated in all formatted/unformatted I/O functions in a standard C++ implementation. Sentry objects are used for preparing the stream for I/O and determining whether or not it is in a fail state. You'll only find that in the &lt;em&gt;unformatted&lt;/em&gt; input functions, the second argument to the sentry constructor is &lt;code&gt;true&lt;/code&gt;. That argument means that leading whitespace will &lt;em&gt;not&lt;/em&gt; be discarded from the beginning of the input sequence. Here is the relevant quote from the Standard [&amp;sect;27.7.2.1.3/2]:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上面是一个哨兵对象，它在标准C ++实现中的所有格式化/未格式化I / O函数中实例化。 Sentry对象用于为I / O准备流并确定其是否处于故障状态。您只会发现在&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;未格式化的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;输入函数中，sentry构造函数的第二个参数为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。该参数意味着&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从输入序列的开头&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不会&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;丢弃&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;前导空格&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。以下是标准[&amp;sect;27.7.2.1.3/ 2]中的相关报价：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="be721a2e400755675c47f55aefe8d028d7a02def" translate="yes" xml:space="preserve">
          <source>The difference is that &lt;code&gt;ignore(std::streamsize count = 1, int_type delim = Traits::eof())&lt;/code&gt;&lt;sup&gt;3&lt;/sup&gt; indiscriminately discards characters until it either discards &lt;code&gt;count&lt;/code&gt; characters, finds the delimiter (specified by the second argument &lt;code&gt;delim&lt;/code&gt;) or hits the end of the stream. &lt;code&gt;std::ws&lt;/code&gt; is only used for discarding whitespace characters from the beginning of the stream.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;区别在于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ignore(std::streamsize count = 1, int_type delim = Traits::eof())&lt;/code&gt; &lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不加选择地丢弃字符，直到丢弃&lt;/font&gt;&lt;/font&gt; &lt;code&gt;count&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;字符，找到定界符（由第二个参数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;delim&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指定&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）或结束流。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::ws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仅用于从流的开头丢弃空白字符。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="beb3607e8d8a4eda931f55fb5f54ea024fd0e1a5" translate="yes" xml:space="preserve">
          <source>The third condition is the one we're dealing with. Your input into &lt;code&gt;state&lt;/code&gt; is represented thusly:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;第三个条件是我们正在处理的条件。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您对&lt;/font&gt;&lt;/font&gt; &lt;code&gt;state&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;输入&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此表示：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="be5b756cffe7eb6f28666a60b997bad4e4f0ff19" translate="yes" xml:space="preserve">
          <source>There's no way to stop this behavior of &lt;code&gt;std::getline()&lt;/code&gt;. What you'll have to do is discard the new line yourself before &lt;code&gt;std::getline()&lt;/code&gt; runs (but do it &lt;em&gt;after&lt;/em&gt; the formatted extraction). This can be done by using &lt;code&gt;ignore()&lt;/code&gt; to discard the rest of the input until we reach a fresh new line:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;无法阻止&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::getline()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这种行为&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。您需要做的是在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::getline()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运行&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之前自己丢弃新行&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（但&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在格式化提取&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之后&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;执行）。这可以通过使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ignore()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;丢弃其余的输入，直到我们到达新的一行来完成：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de39c9c8eccb3d48cd77f434ca497754395456e5" translate="yes" xml:space="preserve">
          <source>This happens because an implicit line feed also known as newline character &lt;code&gt;\n&lt;/code&gt; is appended to all user input from a terminal as it's telling the stream to start a new line. You can safely account for this by using &lt;a href=&quot;http://en.cppreference.com/w/cpp/string/basic_string/getline&quot;&gt;&lt;code&gt;std::getline&lt;/code&gt;&lt;/a&gt; when checking for multiple lines of user input. The default behavior of &lt;code&gt;std::getline&lt;/code&gt; will read everything up to and including the newline character &lt;code&gt;\n&lt;/code&gt; from the input stream object which is &lt;code&gt;std::cin&lt;/code&gt; in this case.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;发生这种情况的原因是，在隐式换行符（也称为换行符&lt;/font&gt;&lt;/font&gt; &lt;code&gt;\n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;被附加到来自终端的所有用户输入时，因为它告诉流开始新行。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在检查多行用户输入时&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/string/basic_string/getline&quot;&gt; &lt;code&gt;std::getline&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;安全地解决这一问题&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::getline&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的默认行为&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将从输入流对象（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在本例中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为&lt;/font&gt; &lt;code&gt;std::cin&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;读取直到包括换行符&lt;/font&gt;&lt;/font&gt; &lt;code&gt;\n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在内的所有内容&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c2f0e692274b5741fba942bfcca92c9d72b216ab" translate="yes" xml:space="preserve">
          <source>This has little to do with the input you provided yourself but rather with the default behavior &lt;code&gt;std::getline()&lt;/code&gt; exhibits. When you provided your input for the name (&lt;code&gt;std::cin &amp;gt;&amp;gt; name&lt;/code&gt;), you not only submitted the following characters, but also an implicit newline was appended to the stream:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这与您自己提供的输入无关，而与默认行为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::getline()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;显示的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;行为有关&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。当您提供名称输入（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::cin &amp;gt;&amp;gt; name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）时，您不仅提交了以下字符，而且还向流添加了隐式换行符：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aead94030654d0d4376565f7c7d2c09982ef7a93" translate="yes" xml:space="preserve">
          <source>This is the overload of &lt;code&gt;std::getline()&lt;/code&gt; that you called:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您调用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::getline()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的重载&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2885605d4d66577c4326b3736993f9e0d974cf56" translate="yes" xml:space="preserve">
          <source>Unlike the formatted input operators, &lt;code&gt;std::getline()&lt;/code&gt; is an &lt;em&gt;unformatted&lt;/em&gt; input function. And all unformatted input functions have the following code somewhat in common:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与格式化的输入运算符不同，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::getline()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;未格式化的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;输入函数。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有未格式化的输入函数都有一些共同的以下代码：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7652cb2c60ebc2c8990bfa640aaa291d02b1e548" translate="yes" xml:space="preserve">
          <source>What I find is that the name has been successfully extracted, but not the state. Here is the input and resulting output:</source>
          <target state="translated">我发现的是,名字已经成功提取了,但没有提取到状态。下面是输入和输出结果。</target>
        </trans-unit>
        <trans-unit id="f484fecbd5602cfbd1cd7e1256c7746ee1c70397" translate="yes" xml:space="preserve">
          <source>Why does std::getline() skip input after a formatted extraction</source>
          <target state="translated">为什么std:::getline()在格式化提取后会跳过输入?</target>
        </trans-unit>
        <trans-unit id="9a5b63c2c27331b350ca1f1ac9bc40e93e0def5f" translate="yes" xml:space="preserve">
          <source>Why does this happen?</source>
          <target state="translated">为什么会出现这种情况?</target>
        </trans-unit>
        <trans-unit id="48807d13b9d5be24aaf6ca75c32641493050f84e" translate="yes" xml:space="preserve">
          <source>Why has the name of the state been omitted from the output? I've given the proper input, but the code somehow ignores it. Why does this happen?</source>
          <target state="translated">为什么在输出中省略了国家的名称?我已经给了正确的输入,但代码却莫名其妙地忽略了它。为什么会出现这种情况?</target>
        </trans-unit>
        <trans-unit id="c633f6012ce2a23b10616accc184e616c83199a2" translate="yes" xml:space="preserve">
          <source>You may have noticed that you don't typically run into this problem when extracting with the formatted input operator (&lt;code&gt;operator&amp;gt;&amp;gt;()&lt;/code&gt;). This is because input streams use whitespace as delimiters for input and have the &lt;code&gt;std::skipws&lt;/code&gt;&lt;sup&gt;1&lt;/sup&gt; manipulator set on by default. Streams will discard the leading whitespace from the stream when beginning to perform formatted input.&lt;sup&gt;2&lt;/sup&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可能已经注意到，使用格式化的输入运算符（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;operator&amp;gt;&amp;gt;()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）进行&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;提取时，通常不会遇到此问题&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是因为输入流使用空格作为输入的分隔符，并且&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;默认情况下启用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::skipws&lt;/code&gt; &lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;操作器。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当开始执行格式化输入时，流将丢弃流中的前导空白。&lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1b877967a4435b6ab378c6d234c358ea451509a3" translate="yes" xml:space="preserve">
          <source>You'll need to include &lt;code&gt;&amp;lt;limits&amp;gt;&lt;/code&gt; to use &lt;code&gt;std::numeric_limits&lt;/code&gt;. &lt;code&gt;std::basic_istream&amp;lt;...&amp;gt;::ignore()&lt;/code&gt; is a function that discards a specified amount of characters until it either finds a delimiter or reaches the end of the stream (&lt;code&gt;ignore()&lt;/code&gt; also discards the delimiter if it finds it). The &lt;code&gt;max()&lt;/code&gt; function returns the largest amount of characters that a stream can accept.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您需要包括&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;limits&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;才能使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::numeric_limits&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::basic_istream&amp;lt;...&amp;gt;::ignore()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是一个函数，丢弃指定的字符量直至找到定界符或到达流的结尾（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ignore()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;也丢弃该定界符如果它发现它） 。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数返回一个流可以接受的最大字符量。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3852f688831d420a220fab41247f52313cf624d3" translate="yes" xml:space="preserve">
          <source>[...] If &lt;code&gt;noskipws&lt;/code&gt; is zero and &lt;code&gt;is.flags() &amp;amp; ios_base::skipws&lt;/code&gt; is nonzero, the function extracts and discards each character as long as the next available input character &lt;code&gt;c&lt;/code&gt; is a whitespace character. [...]</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[...]如果&lt;/font&gt;&lt;/font&gt; &lt;code&gt;noskipws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为零且&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is.flags() &amp;amp; ios_base::skipws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为非零，则只要下一个可用的输入字符&lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为空白字符&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，该函数就会提取并丢弃每个&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;字符。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[...]&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="f53a910c78329f1a95fd48bc21f823b8b460ee47" translate="yes" xml:space="preserve">
          <source>when submitting from a terminal. It is also used in files for moving toward the next line. The newline is left in the buffer after the extraction into &lt;code&gt;name&lt;/code&gt; until the next I/O operation where it is either discarded or consumed. When the flow of control reaches &lt;code&gt;std::getline()&lt;/code&gt;, the newline will be discarded, but the input will cease immediately. The reason this happens is because the default functionality of this function dictates that it should (it attempts to read a line and stops when it finds a newline).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从终端提交时。它也用于文件中以移至下一行。提取&lt;/font&gt;&lt;/font&gt; &lt;code&gt;name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;后，换行符将保留在缓冲区中，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;直到下一个I / O操作被丢弃或消耗为止。当控制流到达&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::getline()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，换行符将被丢弃，但输入将立即停止。发生这种情况的原因是，此功能的默认功能指示它应该这样做（它尝试读取行并在找到换行符时停止）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71669d4354037a18ace2fdfc8f29b7515fffc4e7" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;next_pointer&lt;/code&gt; is the next character to be parsed. Since the character stored at the next position in the input sequence is the delimiter, &lt;code&gt;std::getline()&lt;/code&gt; will quietly discard that character, increment &lt;code&gt;next_pointer&lt;/code&gt; to the next available character, and stop input. This means that the rest of the characters that you have provided still remain in the buffer for the next I/O operation. You'll notice that if you perform another read from the line into &lt;code&gt;state&lt;/code&gt;, your extraction will yield the correct result as the last call to &lt;code&gt;std::getline()&lt;/code&gt; discarded the delimiter.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;其中&lt;/font&gt;&lt;/font&gt; &lt;code&gt;next_pointer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是要解析的下一个字符。由于存储在输入序列中下一个位置的字符是定界符，因此&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::getline()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将安静地丢弃该字符，将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;next_pointer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;递增&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;到下一个可用字符，并停止输入。这意味着您提供的其余字符仍保留在缓冲区中，以便进行下一个I / O操作。您会注意到，如果您从该行再次读取到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;state&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则提取操作将产生正确的结果，因为最后一次调用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::getline()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;丢弃定界符。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
