<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/21567291">
    <body>
      <group id="21567291">
        <trans-unit id="ec7c214a1fdc8780b60bcb590f4198cc7cd9b775" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What's the difference?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;차이점이 뭐야?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fd943620ecdfe6d8c4a83ff65c22201fa31d31a9" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;1: &lt;code&gt;std::skipws&lt;/code&gt; is manipulator that tells the input stream to discard leading whitespace when performing formatted input. This can be turned off with the &lt;code&gt;std::noskipws&lt;/code&gt; manipulator.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::skipws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 형식화 된 입력을 수행 할 때 선행 공백을 무시하도록 입력 스트림에 지시하는 조작기입니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::noskipws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 조작기를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하여 끌 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="b985457f75403e475b47db94270c83136e39c4ee" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;2: Input streams deem certain characters as whitespace by default, such the space character, newline character, form feed, carriage return, etc.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2 : 입력 스트림은 공백 문자, 줄 바꿈 문자, 용지 공급, 캐리지 리턴 등과 같이 기본적으로 특정 문자를 공백으로 간주합니다.&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="54861e0dd6e7e7340d75914d2f06224b2a47e8e4" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;3: This is the signature of &lt;code&gt;std::basic_istream&amp;lt;...&amp;gt;::ignore()&lt;/code&gt;. You can call it with zero arguments to discard a single character from the stream, one argument to discard a certain amount of characters, or two arguments to discard &lt;code&gt;count&lt;/code&gt; characters or until it reaches &lt;code&gt;delim&lt;/code&gt;, whichever one comes first. You normally use &lt;code&gt;std::numeric_limits&amp;lt;std::streamsize&amp;gt;::max()&lt;/code&gt; as the value of &lt;code&gt;count&lt;/code&gt; if you don't know how many characters there are before the delimiter, but you want to discard them anyway.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3 : 이것은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::basic_istream&amp;lt;...&amp;gt;::ignore()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 서명입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스트림에서 단일 문자를 버리는 인수 0 개, 특정 문자 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;count&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 버리는 인수 1 개 또는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;카운트&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 문자 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 버리는 인수 2 개 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;delim&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;도달 할 때까지 ( &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;둘 중 먼저 오는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;중 하나)를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;호출 할 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;구분 기호 앞에 몇 문자가 있는지 모르지만 어쨌든 버리고 싶을 경우 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적으로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::numeric_limits&amp;lt;std::streamsize&amp;gt;::max()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;count&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 값으로 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="88f90b25366407b37d1a00c8dcc4e4e535f6dc18" translate="yes" xml:space="preserve">
          <source>A newline is always appended to your input when you select</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선택하면 항상 줄 바꿈이 입력에 추가됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ba0e9b83fcbdba251f0dc44b8e0d3fa71cec891" translate="yes" xml:space="preserve">
          <source>Another overload of this function takes a delimiter of type &lt;code&gt;charT&lt;/code&gt;. A delimiter character is a character that represents the boundary between sequences of input. This particular overload sets the delimiter to the newline character &lt;code&gt;input.widen('\n')&lt;/code&gt; by default since one was not supplied.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 함수의 또 다른 과부하는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;charT&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유형의 구분 기호를 사용합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;구분 문자는 입력 시퀀스 사이의 경계를 나타내는 문자입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 특정 과부하는 구분 기호를 줄 바꿈 문자 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;input.widen('\n')&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 으로 설정합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="052521750e9a3c56e9fde37e02efbbf787c20b0c" translate="yes" xml:space="preserve">
          <source>Another way to discard the whitespace is to use the &lt;code&gt;std::ws&lt;/code&gt; function which is a manipulator designed to extract and discard leading whitespace from the beginning of an input stream:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;공백을 버리는 또 다른 방법 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 입력 스트림의 시작 부분에서 선행 공백을 추출하고 삭제하도록 설계된 조작자 인 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::ws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수를 사용하는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ebd400daeaa87b9872c1451d8dc28b406e3f2dd3" translate="yes" xml:space="preserve">
          <source>Because this leading newline inhibits the expected functionality of your program, it follows that it must be skipped our ignored somehow. One option is to call &lt;code&gt;std::cin.ignore()&lt;/code&gt; after the the first extraction. It will discard the next available character so that the newline is no longer in the way.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 주요 줄 바꿈은 프로그램의 예상 기능을 방해하므로 무시 된 방식으로 건너 뛰어야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 추출 후 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::cin.ignore()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 호출하는 옵션이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;개행이 더 이상 방해되지 않도록 사용 가능한 다음 문자를 버립니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b9eceb7a86a9f577ef80586c5c1d7fde9ff493d" translate="yes" xml:space="preserve">
          <source>Enter</source>
          <target state="translated">Enter</target>
        </trans-unit>
        <trans-unit id="a51d561ae289fee633489fe4e190348071c52ee1" translate="yes" xml:space="preserve">
          <source>Everything will be OK if you change your initial code in the following way:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같은 방법으로 초기 코드를 변경하면 모든 것이 정상입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2849cb13a335fb59ef4ed494dc8432c9a3a24fa2" translate="yes" xml:space="preserve">
          <source>I have the following piece of code that prompts the user for their name and state:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용자에게 이름과 상태를 묻는 프롬프트가 표시되는 다음 코드가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="617bd29fce2e70b33c9e8d355f4bc533284670e9" translate="yes" xml:space="preserve">
          <source>If the delimiter has been found</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;구분자가 발견 된 경우&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1305802d6e249da94f4f7a07e0bea5b8321d5036" translate="yes" xml:space="preserve">
          <source>If the end-of-file (EOF) character has been found</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파일 끝 (EOF) 문자를 찾은 경우&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="306ba67ef99ba715c1d94551412622dd4f53a4ec" translate="yes" xml:space="preserve">
          <source>If the stream has extracted the maximum amount of characters a &lt;code&gt;std::basic_string&amp;lt;charT&amp;gt;&lt;/code&gt; can hold</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스트림이 최대 문자 수를 추출한 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::basic_string&amp;lt;charT&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 보유 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9ba38a94a4a02a8ac31ed6e31b42019bc855bb4a" translate="yes" xml:space="preserve">
          <source>If you are mixing formatted input with unformatted input and you need to discard residual whitespace, use &lt;code&gt;std::ws&lt;/code&gt;. Otherwise, if you need to clear out invalid input regardless of what it is, use &lt;code&gt;ignore()&lt;/code&gt;. In our example, we only need to clear whitespace since the stream consumed your input of &lt;code&gt;&quot;John&quot;&lt;/code&gt; for the &lt;code&gt;name&lt;/code&gt; variable. All that was left was the newline character.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;형식화 입력을 형식화되지 않은 입력과 혼합하고 잔여 공백을 버려야하는 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::ws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇지 않으면 유효하지 않은 입력을 지우고 싶다면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ignore()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스트림의 귀하의 의견 소비하기 때문에 우리의 예에서, 우리는 분명 공백에 필요 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;John&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 대한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변수입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;남은 것은 개행 문자뿐이었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="84a322941debc5bf79050fd668f579d2e95fc9c4" translate="yes" xml:space="preserve">
          <source>In-Depth Explanation:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;심층 설명 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f321a5d5b1b57e654ad8e7d23fbb0e6633caed5" translate="yes" xml:space="preserve">
          <source>Now, these are a few of the conditions whereby &lt;code&gt;std::getline()&lt;/code&gt; terminates input:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::getline()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 입력을 종료 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 몇 가지 조건이 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24f096b221f9534bcad007f2b5a32b490950b5b5" translate="yes" xml:space="preserve">
          <source>Return</source>
          <target state="translated">Return</target>
        </trans-unit>
        <trans-unit id="9784d91c3b7fceefefbe649b337cd37547c26834" translate="yes" xml:space="preserve">
          <source>Since the above condition is false, the sentry object will not discard the whitespace. The reason &lt;code&gt;noskipws&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; by this function is because the point of &lt;code&gt;std::getline()&lt;/code&gt; is to read raw, unformatted characters into a &lt;code&gt;std::basic_string&amp;lt;charT&amp;gt;&lt;/code&gt; object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 조건이 거짓이기 때문에 센트리 객체는 공백을 버리지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 함수에 의해 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;noskipws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;설정 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되는 이유 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::getline()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 포인트가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;형식화되지 않은 원시 문자를 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::basic_string&amp;lt;charT&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 오브젝트 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로 읽어 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오기&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 때문 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b2c45bc9b8a5268549eb87988ee9abf386351d8" translate="yes" xml:space="preserve">
          <source>The Solution:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해결책:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="69c8c8d928a345d55b90e7a352d075898f33e91b" translate="yes" xml:space="preserve">
          <source>The above is a sentry object which is instantiated in all formatted/unformatted I/O functions in a standard C++ implementation. Sentry objects are used for preparing the stream for I/O and determining whether or not it is in a fail state. You'll only find that in the &lt;em&gt;unformatted&lt;/em&gt; input functions, the second argument to the sentry constructor is &lt;code&gt;true&lt;/code&gt;. That argument means that leading whitespace will &lt;em&gt;not&lt;/em&gt; be discarded from the beginning of the input sequence. Here is the relevant quote from the Standard [&amp;sect;27.7.2.1.3/2]:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위는 표준 C ++ 구현에서 모든 형식화 / 형식화되지 않은 I / O 함수에서 인스턴스화 된 센트리 객체입니다. 센트리 객체는 I / O 용 스트림을 준비하고 스트림이 페일 상태인지 여부를 결정하는 데 사용됩니다. 당신은 단지에서 찾을 수 있습니다 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;포맷되지 않은&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입력 기능, 보초 생성자에 두 번째 인수가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . 이 인수는 선행 공백이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입력 시퀀스의 시작 부분에서 삭제 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되지 않음을&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의미합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 다음은 표준 [&amp;sect;27.7.2.1.3 / 2]의 관련 인용문입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="be721a2e400755675c47f55aefe8d028d7a02def" translate="yes" xml:space="preserve">
          <source>The difference is that &lt;code&gt;ignore(std::streamsize count = 1, int_type delim = Traits::eof())&lt;/code&gt;&lt;sup&gt;3&lt;/sup&gt; indiscriminately discards characters until it either discards &lt;code&gt;count&lt;/code&gt; characters, finds the delimiter (specified by the second argument &lt;code&gt;delim&lt;/code&gt;) or hits the end of the stream. &lt;code&gt;std::ws&lt;/code&gt; is only used for discarding whitespace characters from the beginning of the stream.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;차이점은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ignore(std::streamsize count = 1, int_type delim = Traits::eof())&lt;/code&gt; &lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3 &lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;count&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 문자 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 버리고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;구분 기호를 찾거나 (두 번째 인수 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;delim&lt;/code&gt; 로&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 지정) 구분 문자를 찾 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;거나 끝까지 닿을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;때까지 문자를 무차별 적으로 버립니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스트림의. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::ws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 스트림 시작 부분에서 공백 문자를 버릴 때만 사용됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="beb3607e8d8a4eda931f55fb5f54ea024fd0e1a5" translate="yes" xml:space="preserve">
          <source>The third condition is the one we're dealing with. Your input into &lt;code&gt;state&lt;/code&gt; is represented thusly:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;세 번째 조건은 우리가 다루고있는 조건입니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;state&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입력 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 다음과 같이 나타납니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="be5b756cffe7eb6f28666a60b997bad4e4f0ff19" translate="yes" xml:space="preserve">
          <source>There's no way to stop this behavior of &lt;code&gt;std::getline()&lt;/code&gt;. What you'll have to do is discard the new line yourself before &lt;code&gt;std::getline()&lt;/code&gt; runs (but do it &lt;em&gt;after&lt;/em&gt; the formatted extraction). This can be done by using &lt;code&gt;ignore()&lt;/code&gt; to discard the rest of the input until we reach a fresh new line:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;std::getline()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의이 동작을 중지 할 방법이 없습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::getline()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 실행 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되기 전에 새 줄을 직접 버려야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(그러나 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;형식이 지정된 추출 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;후에&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 수행하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;). &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ignore()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하여 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;새로운 줄에 도달 할 때까지 나머지 입력을 버릴 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de39c9c8eccb3d48cd77f434ca497754395456e5" translate="yes" xml:space="preserve">
          <source>This happens because an implicit line feed also known as newline character &lt;code&gt;\n&lt;/code&gt; is appended to all user input from a terminal as it's telling the stream to start a new line. You can safely account for this by using &lt;a href=&quot;http://en.cppreference.com/w/cpp/string/basic_string/getline&quot;&gt;&lt;code&gt;std::getline&lt;/code&gt;&lt;/a&gt; when checking for multiple lines of user input. The default behavior of &lt;code&gt;std::getline&lt;/code&gt; will read everything up to and including the newline character &lt;code&gt;\n&lt;/code&gt; from the input stream object which is &lt;code&gt;std::cin&lt;/code&gt; in this case.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 개행 문자 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;\n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이라고도하는 암시 적 줄 바꿈 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 스트림에서 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;줄 바꾸기 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 지시 할 때 터미널의 모든 사용자 입력에 추가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되기 때문에 발생 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여러 줄의 사용자 입력을 확인할 때 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/string/basic_string/getline&quot;&gt; &lt;code&gt;std::getline&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 사용하여이를 안전하게 처리 할 수 ​​있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::getline&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 기본 동작은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우 &lt;/font&gt; &lt;code&gt;std::cin&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입력 스트림 객체에서 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;개행 문자 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;\n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;포함하여 모든 것을 읽습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c2f0e692274b5741fba942bfcca92c9d72b216ab" translate="yes" xml:space="preserve">
          <source>This has little to do with the input you provided yourself but rather with the default behavior &lt;code&gt;std::getline()&lt;/code&gt; exhibits. When you provided your input for the name (&lt;code&gt;std::cin &amp;gt;&amp;gt; name&lt;/code&gt;), you not only submitted the following characters, but also an implicit newline was appended to the stream:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 사용자가 제공 한 입력과 거의 관련이 없지만 기본 동작 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::getline()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 표시합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이름 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::cin &amp;gt;&amp;gt; name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대한 입력을 제공 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한 경우 다음 문자를 제출했을뿐 아니라 내재 된 개행도 스트림에 추가되었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aead94030654d0d4376565f7c7d2c09982ef7a93" translate="yes" xml:space="preserve">
          <source>This is the overload of &lt;code&gt;std::getline()&lt;/code&gt; that you called:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이 호출 한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::getline()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 과부하입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2885605d4d66577c4326b3736993f9e0d974cf56" translate="yes" xml:space="preserve">
          <source>Unlike the formatted input operators, &lt;code&gt;std::getline()&lt;/code&gt; is an &lt;em&gt;unformatted&lt;/em&gt; input function. And all unformatted input functions have the following code somewhat in common:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;형식화 된 입력 연산자와 달리 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::getline()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;형식화되지 않은&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입력 함수입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 형식화되지 않은 모든 입력 함수에는 다음과 같은 공통 코드가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7652cb2c60ebc2c8990bfa640aaa291d02b1e548" translate="yes" xml:space="preserve">
          <source>What I find is that the name has been successfully extracted, but not the state. Here is the input and resulting output:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 찾은 것은 이름이 성공적으로 추출되었지만 상태는 아닙니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입력 및 결과 출력은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f484fecbd5602cfbd1cd7e1256c7746ee1c70397" translate="yes" xml:space="preserve">
          <source>Why does std::getline() skip input after a formatted extraction</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;포맷 된 추출 후 std :: getline ()이 입력을 건너 뛰는 이유는 무엇입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a5b63c2c27331b350ca1f1ac9bc40e93e0def5f" translate="yes" xml:space="preserve">
          <source>Why does this happen?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;왜 이런 일이 발생합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="48807d13b9d5be24aaf6ca75c32641493050f84e" translate="yes" xml:space="preserve">
          <source>Why has the name of the state been omitted from the output? I've given the proper input, but the code somehow ignores it. Why does this happen?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;출력에서 상태 이름이 생략 된 이유는 무엇입니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;적절한 입력을 받았지만 코드는 그것을 무시합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;왜 이런 일이 발생합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c633f6012ce2a23b10616accc184e616c83199a2" translate="yes" xml:space="preserve">
          <source>You may have noticed that you don't typically run into this problem when extracting with the formatted input operator (&lt;code&gt;operator&amp;gt;&amp;gt;()&lt;/code&gt;). This is because input streams use whitespace as delimiters for input and have the &lt;code&gt;std::skipws&lt;/code&gt;&lt;sup&gt;1&lt;/sup&gt; manipulator set on by default. Streams will discard the leading whitespace from the stream when beginning to perform formatted input.&lt;sup&gt;2&lt;/sup&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;형식화 된 입력 연산자 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;operator&amp;gt;&amp;gt;()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추출 할 때 일반적으로이 문제가 발생하지 않는 것을 알 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입력 스트림은 공백을 입력의 구분자로 사용하고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::skipws&lt;/code&gt; &lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 조작자가 기본적으로 설정되어 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있기 때문 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스트림은 형식화 된 입력을 수행하기 시작할 때 스트림에서 선행 공백을 버립니다. &lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1b877967a4435b6ab378c6d234c358ea451509a3" translate="yes" xml:space="preserve">
          <source>You'll need to include &lt;code&gt;&amp;lt;limits&amp;gt;&lt;/code&gt; to use &lt;code&gt;std::numeric_limits&lt;/code&gt;. &lt;code&gt;std::basic_istream&amp;lt;...&amp;gt;::ignore()&lt;/code&gt; is a function that discards a specified amount of characters until it either finds a delimiter or reaches the end of the stream (&lt;code&gt;ignore()&lt;/code&gt; also discards the delimiter if it finds it). The &lt;code&gt;max()&lt;/code&gt; function returns the largest amount of characters that a stream can accept.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;std::numeric_limits&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용하려면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;limits&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 포함해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt; &lt;code&gt;std::basic_istream&amp;lt;...&amp;gt;::ignore()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; (파기는 하나 구분자를 발견 또는 스트림의 끝에 도달 할 때까지 캐릭터의 특정 량 해당 함수 &lt;/font&gt; &lt;code&gt;ignore()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또한 폐기 그것을 구분 찾으면) . &lt;/font&gt; &lt;code&gt;max()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수는 스트림을 수용 할 수있는 문자의 가장 큰 금액을 반환합니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3852f688831d420a220fab41247f52313cf624d3" translate="yes" xml:space="preserve">
          <source>[...] If &lt;code&gt;noskipws&lt;/code&gt; is zero and &lt;code&gt;is.flags() &amp;amp; ios_base::skipws&lt;/code&gt; is nonzero, the function extracts and discards each character as long as the next available input character &lt;code&gt;c&lt;/code&gt; is a whitespace character. [...]</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[...] &lt;/font&gt;&lt;/font&gt; &lt;code&gt;noskipws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 0이고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is.flags() &amp;amp; ios_base::skipws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 0이 아닌 경우, 함수는 사용 가능한 다음 입력 문자 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 공백 문자 인 한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;각 문자를 추출하여 버립니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[...]&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="f53a910c78329f1a95fd48bc21f823b8b460ee47" translate="yes" xml:space="preserve">
          <source>when submitting from a terminal. It is also used in files for moving toward the next line. The newline is left in the buffer after the extraction into &lt;code&gt;name&lt;/code&gt; until the next I/O operation where it is either discarded or consumed. When the flow of control reaches &lt;code&gt;std::getline()&lt;/code&gt;, the newline will be discarded, but the input will cease immediately. The reason this happens is because the default functionality of this function dictates that it should (it attempts to read a line and stops when it finds a newline).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;터미널에서 제출할 때. 파일에서 다음 줄로 이동하는 데에도 사용됩니다. 줄 바꾸기는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 추출한 후 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;버려지거나 소비되는 다음 I / O 조작까지 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;버퍼에 남아 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다. 제어 흐름이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::getline()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 도달 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 줄 바꿈이 삭제되지만 입력은 즉시 중단됩니다. 이것이 발생하는 이유는이 함수의 기본 기능이 기능을 지시하기 때문입니다 (행을 읽으려고 시도하고 개행을 찾으면 중지합니다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71669d4354037a18ace2fdfc8f29b7515fffc4e7" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;next_pointer&lt;/code&gt; is the next character to be parsed. Since the character stored at the next position in the input sequence is the delimiter, &lt;code&gt;std::getline()&lt;/code&gt; will quietly discard that character, increment &lt;code&gt;next_pointer&lt;/code&gt; to the next available character, and stop input. This means that the rest of the characters that you have provided still remain in the buffer for the next I/O operation. You'll notice that if you perform another read from the line into &lt;code&gt;state&lt;/code&gt;, your extraction will yield the correct result as the last call to &lt;code&gt;std::getline()&lt;/code&gt; discarded the delimiter.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;next_pointer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 구문 분석 할 다음 문자입니다. 입력 순서에서 다음 위치에 저장된 문자가 분리 문자이므로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::getline()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 해당 문자를 자동으로 버리고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;next_pointer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용 가능한 다음 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자로 증가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;시키고&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입력을 중지합니다. 이는 사용자가 제공 한 나머지 문자가 다음 I / O 조작을 위해 여전히 버퍼에 남아 있음을 의미합니다. line에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;state&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 다른 읽기를 수행 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::getline()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대한 마지막 호출 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 구분 기호를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;버렸을&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 때 추출하면 올바른 결과가 산출 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
