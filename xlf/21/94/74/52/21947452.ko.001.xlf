<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/21947452">
    <body>
      <group id="21947452">
        <trans-unit id="a3a1914fb6bbd9ed6a786f127a2ddddd5444ba94" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Pure speculation&lt;/em&gt; is that you're using a terminal that attempts to do &lt;a href=&quot;http://en.wikipedia.org/wiki/Word_wrap&quot;&gt;word-wrapping&lt;/a&gt; rather than character-wrapping, and treats &lt;code&gt;B&lt;/code&gt; as a word character but &lt;code&gt;#&lt;/code&gt; as a non-word character. So when it reaches the end of a line and searches for a place to break the line, it sees a &lt;code&gt;#&lt;/code&gt; almost immediately and happily breaks there; whereas with the &lt;code&gt;B&lt;/code&gt;, it has to keep searching for longer, and may have more text to wrap (which may be expensive on some terminals, e.g., outputting backspaces, then outputting spaces to overwrite the letters being wrapped).</source>
          <target state="translated">&lt;em&gt;순수한 추측&lt;/em&gt; 은 문자 &lt;a href=&quot;http://en.wikipedia.org/wiki/Word_wrap&quot;&gt;줄 바꿈&lt;/a&gt; 대신 단어 줄 바꿈 을 시도하는 터미널을 사용하고 &lt;code&gt;B&lt;/code&gt; 를 단어 문자로 취급하지만 &lt;code&gt;#&lt;/code&gt; 은 비 단어 문자로 취급한다는 것입니다. 따라서 줄의 끝에 도달하고 줄을 끊을 곳을 찾으면 &lt;code&gt;#&lt;/code&gt; 이 거의 즉시보고 행복하게 끊어집니다. 반면에 &lt;code&gt;B&lt;/code&gt; 를 사용하면 더 오래 검색해야하며 줄 바꿈 할 텍스트가 더 많아 질 수 있습니다 (일부 터미널에서는 백 스페이스를 출력 한 다음 공백을 출력하여 줄 바꿈 된 문자를 덮어 쓰기).</target>
        </trans-unit>
        <trans-unit id="d00ba4e43e189d3844bf8e3ddf963a7bc604e2ec" translate="yes" xml:space="preserve">
          <source>After more research I realized that the problem is &lt;a href=&quot;http://en.wikipedia.org/wiki/Line_wrap_and_word_wrap&quot;&gt;line-wrapping&lt;/a&gt; of the max buffer of Netbeans (it's not restricted to &lt;code&gt;System.out.println&lt;/code&gt; command), demonstrated by this code:</source>
          <target state="translated">더 많은 연구를 한 결과 문제는 Netbeans의 최대 버퍼 ( &lt;code&gt;System.out.println&lt;/code&gt; 명령으로 제한되지 않음)의 &lt;a href=&quot;http://en.wikipedia.org/wiki/Line_wrap_and_word_wrap&quot;&gt;줄 바꿈이라는 것&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="895e6b3e57857cc92ca9e1a5d7242d694fe7e4fd" translate="yes" xml:space="preserve">
          <source>And so on..</source>
          <target state="translated">등등..</target>
        </trans-unit>
        <trans-unit id="84549a50f2f1a2af52238da68ea8a1e587dd3a25" translate="yes" xml:space="preserve">
          <source>Another advice is that to change settings of NetBeans IDE. First of all, go to NetBeans &lt;strong&gt;Tools&lt;/strong&gt; and click &lt;strong&gt;Options&lt;/strong&gt;. After that click &lt;strong&gt;Editor&lt;/strong&gt; and go to &lt;strong&gt;Formatting&lt;/strong&gt; tab. Then select &lt;em&gt;Anywhere&lt;/em&gt; in &lt;strong&gt;Line Wrap&lt;/strong&gt; Option. It will take almost 6.24% less time to compile the program.</source>
          <target state="translated">또 다른 조언은 NetBeans IDE의 설정을 변경하는 것입니다. 우선 NetBeans &lt;strong&gt;도구&lt;/strong&gt; 로 이동하여 &lt;strong&gt;옵션을&lt;/strong&gt; 클릭하십시오. 그런 다음 &lt;strong&gt;편집기&lt;/strong&gt; 를 클릭하고 &lt;strong&gt;서식&lt;/strong&gt; 탭으로 이동하십시오. 그런 다음 &lt;strong&gt;Line Wrap&lt;/strong&gt; Option에서 &lt;em&gt;Anywhere&lt;/em&gt; 를 선택하십시오. 프로그램을 컴파일하는 데 거의 6.24 %의 시간이 걸립니다.</target>
        </trans-unit>
        <trans-unit id="aff9d86b3f4dd0854be3788ffe3205179e3429a4" translate="yes" xml:space="preserve">
          <source>As others who pointed out that it works for them normally, I tried &lt;a href=&quot;http://ideone.com&quot;&gt;Ideone.com&lt;/a&gt; for instance, and both pieces of code execute at the same speed.</source>
          <target state="translated">정상적으로 작동한다고 지적한 다른 사람들과 같이, 나는 예를 들어 &lt;a href=&quot;http://ideone.com&quot;&gt;Ideone.com&lt;/a&gt; 을 시도 했으며 두 코드 조각 모두 동일한 속도로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="6f2cbfb7d7451d4e947a0f953d558c7dc8640fa5" translate="yes" xml:space="preserve">
          <source>As suggested in the comments, printing only &lt;code&gt;System.out.print(&quot;#&quot;);&lt;/code&gt; takes &lt;code&gt;7.8871&lt;/code&gt; seconds, whereas &lt;code&gt;System.out.print(&quot;B&quot;);&lt;/code&gt; gives &lt;code&gt;still printing...&lt;/code&gt;.</source>
          <target state="translated">주석에서 제안한대로 &lt;code&gt;System.out.print(&quot;#&quot;);&lt;/code&gt; &lt;code&gt;7.8871&lt;/code&gt; 초 소요, &lt;code&gt;System.out.print(&quot;B&quot;);&lt;/code&gt; &lt;code&gt;still printing...&lt;/code&gt; 제공합니다 ....</target>
        </trans-unit>
        <trans-unit id="b04279c484d7242cdae7380002da72b87805607c" translate="yes" xml:space="preserve">
          <source>But that's pure speculation.</source>
          <target state="translated">그러나 그것은 순수한 추측입니다.</target>
        </trans-unit>
        <trans-unit id="fa49b818484dd92ac9d31e916dcb454d4b347afb" translate="yes" xml:space="preserve">
          <source>Eclipse works perfectly with &quot;B&quot;</source>
          <target state="translated">Eclipse는 &quot;B&quot;와 완벽하게 작동</target>
        </trans-unit>
        <trans-unit id="a134c31a8098585d80249319a066650077e13a95" translate="yes" xml:space="preserve">
          <source>Eclipse:</source>
          <target state="translated">Eclipse:</target>
        </trans-unit>
        <trans-unit id="d7f45040624014ff8cce3d133338827ad32fbd55" translate="yes" xml:space="preserve">
          <source>First Matrix: &lt;code&gt;O&lt;/code&gt; and &lt;code&gt;#&lt;/code&gt;.</source>
          <target state="translated">첫 번째 행렬 : &lt;code&gt;O&lt;/code&gt; 및 &lt;code&gt;#&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef687a4dcb3d14672de4e60cf283407a54b735b4" translate="yes" xml:space="preserve">
          <source>First Matrix: O and # = &lt;strong&gt;&lt;em&gt;6.03 seconds&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">첫 번째 행렬 : O 및 # = &lt;strong&gt;&lt;em&gt;6.03 초&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2aa440310dd36554d21adc15b9c08b43cce92a32" translate="yes" xml:space="preserve">
          <source>I generated two matrices of &lt;code&gt;1000&lt;/code&gt; x &lt;code&gt;1000&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;1000&lt;/code&gt; x &lt;code&gt;1000&lt;/code&gt; 의 두 행렬을 생성했습니다.</target>
        </trans-unit>
        <trans-unit id="e2575368ff26477b1cc282b272e404ddb7650e62" translate="yes" xml:space="preserve">
          <source>I got the &lt;strong&gt;same time on both cases&lt;/strong&gt; - around &lt;strong&gt;1.564 seconds&lt;/strong&gt;.</source>
          <target state="translated">나는 &lt;strong&gt;두 경우 모두&lt;/strong&gt; 약 &lt;strong&gt;1.564 초&lt;/strong&gt; &lt;strong&gt;에 같은 시간을&lt;/strong&gt; 가졌다.</target>
        </trans-unit>
        <trans-unit id="29402d08e849a83e6bcf62f503db3ab1885a4378" translate="yes" xml:space="preserve">
          <source>I performed tests on Eclipse vs Netbeans 8.0.2, both with Java version 1.8;
I used &lt;code&gt;System.nanoTime()&lt;/code&gt; for measurements.</source>
          <target state="translated">Java 버전 1.8을 사용하여 Eclipse vs Netbeans 8.0.2에서 테스트를 수행했습니다. 측정에 &lt;code&gt;System.nanoTime()&lt;/code&gt; 을 사용했습니다.</target>
        </trans-unit>
        <trans-unit id="8c03fe946324aee8adf2e93eaa361b2b8da4f5bc" translate="yes" xml:space="preserve">
          <source>I ran this test from &lt;em&gt;Netbeans 7.2&lt;/em&gt;, with the output into its console</source>
          <target state="translated">&lt;em&gt;Netbeans 7.2&lt;/em&gt; 에서이 테스트를 콘솔로 출력하여 실행했습니다.</target>
        </trans-unit>
        <trans-unit id="6559a355d14c046bd733851b6f8f5958df98c8f8" translate="yes" xml:space="preserve">
          <source>I used &lt;code&gt;System.nanoTime()&lt;/code&gt; for measurements</source>
          <target state="translated">측정에 &lt;code&gt;System.nanoTime()&lt;/code&gt; 을 사용했습니다.</target>
        </trans-unit>
        <trans-unit id="c0bbd75ba5876af1caaf4dbf9bba06e8fdb50abb" translate="yes" xml:space="preserve">
          <source>Looking at your code closely you have used a line break at the end of first loop. But you didn't use any line break in second loop. So you are going to print a word with 1000 characters in the second loop. That causes a word-wrapping problem. If we use a non-word character &quot; &quot; after B, it takes only &lt;strong&gt;&lt;em&gt;5.35 seconds&lt;/em&gt;&lt;/strong&gt; to compile the program. And If we use a line break in the second loop after passing 100 values or 50 values, it takes only &lt;strong&gt;&lt;em&gt;8.56 seconds&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;7.05 seconds&lt;/em&gt;&lt;/strong&gt; respectively.</source>
          <target state="translated">코드를 자세히 보면 첫 번째 루프 끝에서 줄 바꿈을 사용했습니다. 그러나 두 번째 루프에서는 줄 바꿈을 사용하지 않았습니다. 따라서 두 번째 루프에서 1000 자로 단어를 인쇄합니다. 단어 줄 바꿈 문제가 발생합니다. B 뒤에 단어가 아닌 문자 &quot;&quot;를 사용하면 프로그램을 컴파일하는 데 &lt;strong&gt;&lt;em&gt;5.35 초&lt;/em&gt;&lt;/strong&gt; 밖에 걸리지 않습니다. 100 값 또는 50 값을 전달한 후 두 번째 루프에서 줄 바꿈을 사용하면 각각 &lt;strong&gt;&lt;em&gt;8.56 초&lt;/em&gt;&lt;/strong&gt; 와 &lt;strong&gt;&lt;em&gt;7.05 초만 걸립니다&lt;/em&gt;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a7514bfe62ed57cb50a422f65681d74f43f4cdaa" translate="yes" xml:space="preserve">
          <source>Netbeans has a line-wrapping problem that can be solved (because the problem does not occur in eclipse)(without adding space after B (&quot;B &quot;)).</source>
          <target state="translated">Netbeans에는 줄 바꿈 문제가 있습니다 (이클립스에서는 문제가 발생하지 않기 때문에) (B 다음에 공백을 추가하지 않고 ( &quot;B&quot;)) 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="124c0301627d7202c133068f845ad9269b84d93e" translate="yes" xml:space="preserve">
          <source>Netbeans:</source>
          <target state="translated">Netbeans:</target>
        </trans-unit>
        <trans-unit id="029dfa62fca3cc5c7903cf197d38aa8776ded775" translate="yes" xml:space="preserve">
          <source>Second Matrix: &lt;code&gt;O&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;.</source>
          <target state="translated">두 번째 행렬 : &lt;code&gt;O&lt;/code&gt; 및 &lt;code&gt;B&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3841cfd806bc4abd0ef710591eb3040a42031181" translate="yes" xml:space="preserve">
          <source>Second Matrix: O and B = &lt;strong&gt;&lt;em&gt;50.97 seconds&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">두 번째 매트릭스 : O와 B = &lt;strong&gt;&lt;em&gt;50.97 초&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f6b8c894024ddbfc793efca19b63b4369e4b278" translate="yes" xml:space="preserve">
          <source>So, it looks like Netbeans has bad performance on print to console.</source>
          <target state="translated">따라서 Netbeans의 콘솔에서 인쇄시 성능이 좋지 않은 것 같습니다.</target>
        </trans-unit>
        <trans-unit id="6ed816d75e1c95434823496141b81fdcea2cbda9" translate="yes" xml:space="preserve">
          <source>Summary:</source>
          <target state="translated">Summary:</target>
        </trans-unit>
        <trans-unit id="37a7a9b529a7c53625236a6c6fedeadb0f43675e" translate="yes" xml:space="preserve">
          <source>Test Conditions:</source>
          <target state="translated">시험 조건:</target>
        </trans-unit>
        <trans-unit id="17f53f9206ac99385962988eb52106cb8c8bd9b6" translate="yes" xml:space="preserve">
          <source>The time results are less then 1 millisecond every iteration except &lt;strong&gt;every fifth iteration&lt;/strong&gt;, when the time result is around 225 millisecond. Something like (in nanoseconds):</source>
          <target state="translated">시간 결과가 약 225 밀리 초인 경우 &lt;strong&gt;다섯 번째 반복을&lt;/strong&gt; 제외한 &lt;strong&gt;모든&lt;/strong&gt; 반복마다 시간 결과가 1 밀리 초 미만입니다. (나노초 단위)</target>
        </trans-unit>
        <trans-unit id="2c81208117716a951edeb9e22aee386a475bac6a" translate="yes" xml:space="preserve">
          <source>Using &quot;#&quot;: &lt;strong&gt;1.536 seconds&lt;/strong&gt;</source>
          <target state="translated">&quot;#&quot;사용 : &lt;strong&gt;1.536 초&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d9e1fe06b1c5bbebb553eb4ba1e878b39f46d330" translate="yes" xml:space="preserve">
          <source>Using &quot;B&quot;: &lt;strong&gt;44.164 seconds&lt;/strong&gt;</source>
          <target state="translated">&quot;B&quot;사용 : &lt;strong&gt;44.164 초&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5042afadfdcc473223542828bcaed45f6f017bb" translate="yes" xml:space="preserve">
          <source>Using the following code, the first matrix took 8.52 seconds to complete:</source>
          <target state="translated">다음 코드를 사용하여 첫 번째 행렬을 완료하는 데 8.52 초가 걸렸습니다.</target>
        </trans-unit>
        <trans-unit id="3d691193b1ec0a4be6c3f21e1e251a5c012c0ce7" translate="yes" xml:space="preserve">
          <source>What is the reason behind the dramatically different run times?</source>
          <target state="translated">실행 시간이 크게 다른 이유는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="3cfac184ec6fc62dec3e807af01aa3117c254ad1" translate="yes" xml:space="preserve">
          <source>Why is printing “B” dramatically slower than printing “#”</source>
          <target state="translated">&quot;B&quot;인쇄가 &quot;#&quot;인쇄보다 현저하게 느린 이유</target>
        </trans-unit>
        <trans-unit id="060ad14bc500490daed239e8944dec1213e2d537" translate="yes" xml:space="preserve">
          <source>With this code, the second matrix took 259.152 seconds to complete:</source>
          <target state="translated">이 코드를 사용하여 두 번째 행렬을 완료하는 데 259.152 초가 걸렸습니다.</target>
        </trans-unit>
        <trans-unit id="f34d7783bb5a5c8aa27b3314e1e25fcd60e1b23d" translate="yes" xml:space="preserve">
          <source>Yes the culprit is definitely word-wrapping. When I tested your two programs, NetBeans IDE 8.2 gave me the following result.</source>
          <target state="translated">그렇습니다. 범인은 확실히 줄 바꿈입니다. 두 프로그램을 테스트했을 때 NetBeans IDE 8.2는 다음과 같은 결과를 얻었습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
