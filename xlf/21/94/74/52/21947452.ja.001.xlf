<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/21947452">
    <body>
      <group id="21947452">
        <trans-unit id="a3a1914fb6bbd9ed6a786f127a2ddddd5444ba94" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Pure speculation&lt;/em&gt; is that you're using a terminal that attempts to do &lt;a href=&quot;http://en.wikipedia.org/wiki/Word_wrap&quot;&gt;word-wrapping&lt;/a&gt; rather than character-wrapping, and treats &lt;code&gt;B&lt;/code&gt; as a word character but &lt;code&gt;#&lt;/code&gt; as a non-word character. So when it reaches the end of a line and searches for a place to break the line, it sees a &lt;code&gt;#&lt;/code&gt; almost immediately and happily breaks there; whereas with the &lt;code&gt;B&lt;/code&gt;, it has to keep searching for longer, and may have more text to wrap (which may be expensive on some terminals, e.g., outputting backspaces, then outputting spaces to overwrite the letters being wrapped).</source>
          <target state="translated">&lt;em&gt;純粋な推測&lt;/em&gt;は、文字の&lt;a href=&quot;http://en.wikipedia.org/wiki/Word_wrap&quot;&gt;折り返し&lt;/a&gt;ではなく単語の折り返しを試み、 &lt;code&gt;B&lt;/code&gt; を単語の文字として扱い、 &lt;code&gt;#&lt;/code&gt; を非単語の文字として扱う端末を使用していることです。 したがって、行の終わりに達して行を改行する場所を検索すると、ほとんどすぐに &lt;code&gt;#&lt;/code&gt; が表示され、そこで改行されます。 &lt;code&gt;B&lt;/code&gt; の場合は、検索を長く続ける必要があり、折り返すテキストが多くなる可能性があります（一部の端末では、バックスペースの出力、折り返しの文字を上書きするためのスペースの出力など、コストがかかる場合があります）。</target>
        </trans-unit>
        <trans-unit id="d00ba4e43e189d3844bf8e3ddf963a7bc604e2ec" translate="yes" xml:space="preserve">
          <source>After more research I realized that the problem is &lt;a href=&quot;http://en.wikipedia.org/wiki/Line_wrap_and_word_wrap&quot;&gt;line-wrapping&lt;/a&gt; of the max buffer of Netbeans (it's not restricted to &lt;code&gt;System.out.println&lt;/code&gt; command), demonstrated by this code:</source>
          <target state="translated">さらに調査したところ、問題はNetbeansの最大バッファーの&lt;a href=&quot;http://en.wikipedia.org/wiki/Line_wrap_and_word_wrap&quot;&gt;行折り返し&lt;/a&gt;であることがわかりました（これは &lt;code&gt;System.out.println&lt;/code&gt; コマンドに限定されません）。次のコードで示します。</target>
        </trans-unit>
        <trans-unit id="895e6b3e57857cc92ca9e1a5d7242d694fe7e4fd" translate="yes" xml:space="preserve">
          <source>And so on..</source>
          <target state="translated">といった感じで</target>
        </trans-unit>
        <trans-unit id="84549a50f2f1a2af52238da68ea8a1e587dd3a25" translate="yes" xml:space="preserve">
          <source>Another advice is that to change settings of NetBeans IDE. First of all, go to NetBeans &lt;strong&gt;Tools&lt;/strong&gt; and click &lt;strong&gt;Options&lt;/strong&gt;. After that click &lt;strong&gt;Editor&lt;/strong&gt; and go to &lt;strong&gt;Formatting&lt;/strong&gt; tab. Then select &lt;em&gt;Anywhere&lt;/em&gt; in &lt;strong&gt;Line Wrap&lt;/strong&gt; Option. It will take almost 6.24% less time to compile the program.</source>
          <target state="translated">もう1つのアドバイスは、NetBeans IDEの設定を変更することです。 まず、NetBeans &lt;strong&gt;ツール&lt;/strong&gt;に移動し、[ &lt;strong&gt;オプション&lt;/strong&gt; ]をクリックします。 その後、「 &lt;strong&gt;エディター」&lt;/strong&gt;をクリックして、「 &lt;strong&gt;フォーマット」&lt;/strong&gt;タブに移動します。 次に、[ &lt;strong&gt;ラインラップ&lt;/strong&gt;オプションの&lt;strong&gt;任意の場所]を&lt;/strong&gt;選択します。 プログラムのコンパイルにかかる時間が6.24％近く短縮されます。</target>
        </trans-unit>
        <trans-unit id="aff9d86b3f4dd0854be3788ffe3205179e3429a4" translate="yes" xml:space="preserve">
          <source>As others who pointed out that it works for them normally, I tried &lt;a href=&quot;http://ideone.com&quot;&gt;Ideone.com&lt;/a&gt; for instance, and both pieces of code execute at the same speed.</source>
          <target state="translated">他の人が正常に機能することを指摘したので、たとえば&lt;a href=&quot;http://ideone.com&quot;&gt;Ideone.com&lt;/a&gt;を試しましたが、どちらのコードも同じ速度で実行されます。</target>
        </trans-unit>
        <trans-unit id="6f2cbfb7d7451d4e947a0f953d558c7dc8640fa5" translate="yes" xml:space="preserve">
          <source>As suggested in the comments, printing only &lt;code&gt;System.out.print(&quot;#&quot;);&lt;/code&gt; takes &lt;code&gt;7.8871&lt;/code&gt; seconds, whereas &lt;code&gt;System.out.print(&quot;B&quot;);&lt;/code&gt; gives &lt;code&gt;still printing...&lt;/code&gt;.</source>
          <target state="translated">コメントで示唆されているように、 &lt;code&gt;System.out.print(&quot;#&quot;);&lt;/code&gt; のみを出力します。 &lt;code&gt;7.8871&lt;/code&gt; 秒かかりますが、 &lt;code&gt;System.out.print(&quot;B&quot;);&lt;/code&gt; &lt;code&gt;still printing...&lt;/code&gt; を与える...。</target>
        </trans-unit>
        <trans-unit id="b04279c484d7242cdae7380002da72b87805607c" translate="yes" xml:space="preserve">
          <source>But that's pure speculation.</source>
          <target state="translated">しかし、それは純粋な憶測です。</target>
        </trans-unit>
        <trans-unit id="fa49b818484dd92ac9d31e916dcb454d4b347afb" translate="yes" xml:space="preserve">
          <source>Eclipse works perfectly with &quot;B&quot;</source>
          <target state="translated">Eclipseは &quot;B &quot;で完璧に動作します。</target>
        </trans-unit>
        <trans-unit id="a134c31a8098585d80249319a066650077e13a95" translate="yes" xml:space="preserve">
          <source>Eclipse:</source>
          <target state="translated">Eclipse:</target>
        </trans-unit>
        <trans-unit id="d7f45040624014ff8cce3d133338827ad32fbd55" translate="yes" xml:space="preserve">
          <source>First Matrix: &lt;code&gt;O&lt;/code&gt; and &lt;code&gt;#&lt;/code&gt;.</source>
          <target state="translated">最初のマトリックス： &lt;code&gt;O&lt;/code&gt; と &lt;code&gt;#&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef687a4dcb3d14672de4e60cf283407a54b735b4" translate="yes" xml:space="preserve">
          <source>First Matrix: O and # = &lt;strong&gt;&lt;em&gt;6.03 seconds&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">最初のマトリックス：Oおよび＃= &lt;strong&gt;&lt;em&gt;6.03秒&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2aa440310dd36554d21adc15b9c08b43cce92a32" translate="yes" xml:space="preserve">
          <source>I generated two matrices of &lt;code&gt;1000&lt;/code&gt; x &lt;code&gt;1000&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;1000&lt;/code&gt; x &lt;code&gt;1000&lt;/code&gt; の 2つの行列を生成しました。</target>
        </trans-unit>
        <trans-unit id="e2575368ff26477b1cc282b272e404ddb7650e62" translate="yes" xml:space="preserve">
          <source>I got the &lt;strong&gt;same time on both cases&lt;/strong&gt; - around &lt;strong&gt;1.564 seconds&lt;/strong&gt;.</source>
          <target state="translated">私は&lt;strong&gt;両方のケースで同じ時間&lt;/strong&gt;を得ました-およそ&lt;strong&gt;1.564秒&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="29402d08e849a83e6bcf62f503db3ab1885a4378" translate="yes" xml:space="preserve">
          <source>I performed tests on Eclipse vs Netbeans 8.0.2, both with Java version 1.8;
I used &lt;code&gt;System.nanoTime()&lt;/code&gt; for measurements.</source>
          <target state="translated">私はEclipseとNetbeans 8.0.2のテストを両方ともJavaバージョン1.8で行いました。 測定には &lt;code&gt;System.nanoTime()&lt;/code&gt; を使用しました。</target>
        </trans-unit>
        <trans-unit id="8c03fe946324aee8adf2e93eaa361b2b8da4f5bc" translate="yes" xml:space="preserve">
          <source>I ran this test from &lt;em&gt;Netbeans 7.2&lt;/em&gt;, with the output into its console</source>
          <target state="translated">私はこのテストを&lt;em&gt;Netbeans 7.2&lt;/em&gt;から&lt;em&gt;実行&lt;/em&gt;し、コンソールに出力しました</target>
        </trans-unit>
        <trans-unit id="6559a355d14c046bd733851b6f8f5958df98c8f8" translate="yes" xml:space="preserve">
          <source>I used &lt;code&gt;System.nanoTime()&lt;/code&gt; for measurements</source>
          <target state="translated">測定に &lt;code&gt;System.nanoTime()&lt;/code&gt; を使用しました</target>
        </trans-unit>
        <trans-unit id="c0bbd75ba5876af1caaf4dbf9bba06e8fdb50abb" translate="yes" xml:space="preserve">
          <source>Looking at your code closely you have used a line break at the end of first loop. But you didn't use any line break in second loop. So you are going to print a word with 1000 characters in the second loop. That causes a word-wrapping problem. If we use a non-word character &quot; &quot; after B, it takes only &lt;strong&gt;&lt;em&gt;5.35 seconds&lt;/em&gt;&lt;/strong&gt; to compile the program. And If we use a line break in the second loop after passing 100 values or 50 values, it takes only &lt;strong&gt;&lt;em&gt;8.56 seconds&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;7.05 seconds&lt;/em&gt;&lt;/strong&gt; respectively.</source>
          <target state="translated">コードを注意深く見ると、最初のループの終わりに改行が使用されています。 しかし、2番目のループでは改行を使用しませんでした。 したがって、2番目のループで1000文字の単語を印刷します。 これにより、折り返しの問題が発生します。 Bの後に単語以外の文字 &quot;&quot;を使用すると、プログラムのコンパイルに&lt;strong&gt;&lt;em&gt;5.35秒&lt;/em&gt;&lt;/strong&gt;しかかかりません。 また、100個の値または50個の値を渡した後、2番目のループで改行を使用すると、それぞれ&lt;strong&gt;&lt;em&gt;8.56秒&lt;/em&gt;&lt;/strong&gt;と&lt;strong&gt;&lt;em&gt;7.05秒&lt;/em&gt;&lt;/strong&gt;しかかかりません。</target>
        </trans-unit>
        <trans-unit id="a7514bfe62ed57cb50a422f65681d74f43f4cdaa" translate="yes" xml:space="preserve">
          <source>Netbeans has a line-wrapping problem that can be solved (because the problem does not occur in eclipse)(without adding space after B (&quot;B &quot;)).</source>
          <target state="translated">Netbeansには線引きの問題がありますが、これは解決できます(eclipseでは問題が発生しないので)(Bの後にスペースを追加しなくても(「B」))。</target>
        </trans-unit>
        <trans-unit id="124c0301627d7202c133068f845ad9269b84d93e" translate="yes" xml:space="preserve">
          <source>Netbeans:</source>
          <target state="translated">Netbeans:</target>
        </trans-unit>
        <trans-unit id="029dfa62fca3cc5c7903cf197d38aa8776ded775" translate="yes" xml:space="preserve">
          <source>Second Matrix: &lt;code&gt;O&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;.</source>
          <target state="translated">2番目のマトリックス： &lt;code&gt;O&lt;/code&gt; および &lt;code&gt;B&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3841cfd806bc4abd0ef710591eb3040a42031181" translate="yes" xml:space="preserve">
          <source>Second Matrix: O and B = &lt;strong&gt;&lt;em&gt;50.97 seconds&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">2番目のマトリックス：OおよびB = &lt;strong&gt;&lt;em&gt;50.97秒&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f6b8c894024ddbfc793efca19b63b4369e4b278" translate="yes" xml:space="preserve">
          <source>So, it looks like Netbeans has bad performance on print to console.</source>
          <target state="translated">ということで、Netbeansはprint to consoleでのパフォーマンスが悪いようです。</target>
        </trans-unit>
        <trans-unit id="6ed816d75e1c95434823496141b81fdcea2cbda9" translate="yes" xml:space="preserve">
          <source>Summary:</source>
          <target state="translated">Summary:</target>
        </trans-unit>
        <trans-unit id="37a7a9b529a7c53625236a6c6fedeadb0f43675e" translate="yes" xml:space="preserve">
          <source>Test Conditions:</source>
          <target state="translated">テスト条件。</target>
        </trans-unit>
        <trans-unit id="17f53f9206ac99385962988eb52106cb8c8bd9b6" translate="yes" xml:space="preserve">
          <source>The time results are less then 1 millisecond every iteration except &lt;strong&gt;every fifth iteration&lt;/strong&gt;, when the time result is around 225 millisecond. Something like (in nanoseconds):</source>
          <target state="translated">時間の結果は、時間の結果が約225ミリ秒の場合、 &lt;strong&gt;5回&lt;/strong&gt;ごとの反復を除い&lt;strong&gt;て&lt;/strong&gt; 、反復ごとに1ミリ秒未満です。 （ナノ秒単位）のようなもの：</target>
        </trans-unit>
        <trans-unit id="2c81208117716a951edeb9e22aee386a475bac6a" translate="yes" xml:space="preserve">
          <source>Using &quot;#&quot;: &lt;strong&gt;1.536 seconds&lt;/strong&gt;</source>
          <target state="translated">「＃」を使用： &lt;strong&gt;1.536秒&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d9e1fe06b1c5bbebb553eb4ba1e878b39f46d330" translate="yes" xml:space="preserve">
          <source>Using &quot;B&quot;: &lt;strong&gt;44.164 seconds&lt;/strong&gt;</source>
          <target state="translated">「B」を使用： &lt;strong&gt;44.164秒&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5042afadfdcc473223542828bcaed45f6f017bb" translate="yes" xml:space="preserve">
          <source>Using the following code, the first matrix took 8.52 seconds to complete:</source>
          <target state="translated">以下のコードを使用すると、最初の行列が完成するまでに8.52秒かかりました。</target>
        </trans-unit>
        <trans-unit id="3d691193b1ec0a4be6c3f21e1e251a5c012c0ce7" translate="yes" xml:space="preserve">
          <source>What is the reason behind the dramatically different run times?</source>
          <target state="translated">ランタイムが劇的に違う理由とは?</target>
        </trans-unit>
        <trans-unit id="3cfac184ec6fc62dec3e807af01aa3117c254ad1" translate="yes" xml:space="preserve">
          <source>Why is printing “B” dramatically slower than printing “#”</source>
          <target state="translated">なぜ &quot;B &quot;は&quot;#&quot;よりも劇的に遅いのか?</target>
        </trans-unit>
        <trans-unit id="060ad14bc500490daed239e8944dec1213e2d537" translate="yes" xml:space="preserve">
          <source>With this code, the second matrix took 259.152 seconds to complete:</source>
          <target state="translated">このコードでは、2 番目の行列が完成するまでに 259.152 秒かかりました。</target>
        </trans-unit>
        <trans-unit id="f34d7783bb5a5c8aa27b3314e1e25fcd60e1b23d" translate="yes" xml:space="preserve">
          <source>Yes the culprit is definitely word-wrapping. When I tested your two programs, NetBeans IDE 8.2 gave me the following result.</source>
          <target state="translated">はい、犯人は間違いなくワードラッピングです。あなたの2つのプログラムをテストしたところ、NetBeans IDE 8.2では以下のような結果が出ました。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
