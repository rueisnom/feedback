<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/21947452">
    <body>
      <group id="21947452">
        <trans-unit id="a3a1914fb6bbd9ed6a786f127a2ddddd5444ba94" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Pure speculation&lt;/em&gt; is that you're using a terminal that attempts to do &lt;a href=&quot;http://en.wikipedia.org/wiki/Word_wrap&quot;&gt;word-wrapping&lt;/a&gt; rather than character-wrapping, and treats &lt;code&gt;B&lt;/code&gt; as a word character but &lt;code&gt;#&lt;/code&gt; as a non-word character. So when it reaches the end of a line and searches for a place to break the line, it sees a &lt;code&gt;#&lt;/code&gt; almost immediately and happily breaks there; whereas with the &lt;code&gt;B&lt;/code&gt;, it has to keep searching for longer, and may have more text to wrap (which may be expensive on some terminals, e.g., outputting backspaces, then outputting spaces to overwrite the letters being wrapped).</source>
          <target state="translated">&lt;em&gt;纯粹的猜测&lt;/em&gt;是，您使用的终端试图进行&lt;a href=&quot;http://en.wikipedia.org/wiki/Word_wrap&quot;&gt;换行&lt;/a&gt;而不是字符换行，并且将 &lt;code&gt;B&lt;/code&gt; 视为单词字符，而将 &lt;code&gt;#&lt;/code&gt; 视为非单词字符。 因此，当它到达一行的末尾并搜索要中断该行的位置时，几乎会立即看到一个 &lt;code&gt;#&lt;/code&gt; 并愉快地在该处中断； 而使用 &lt;code&gt;B&lt;/code&gt; 时 ，它必须继续搜索更长的时间，并且可能要包装更多的文本（在某些终端上可能很昂贵，例如，输出退格键，然后输出空格以覆盖要包装的字母）。</target>
        </trans-unit>
        <trans-unit id="d00ba4e43e189d3844bf8e3ddf963a7bc604e2ec" translate="yes" xml:space="preserve">
          <source>After more research I realized that the problem is &lt;a href=&quot;http://en.wikipedia.org/wiki/Line_wrap_and_word_wrap&quot;&gt;line-wrapping&lt;/a&gt; of the max buffer of Netbeans (it's not restricted to &lt;code&gt;System.out.println&lt;/code&gt; command), demonstrated by this code:</source>
          <target state="translated">经过更多研究，我意识到问题在于Netbeans的最大缓冲区的&lt;a href=&quot;http://en.wikipedia.org/wiki/Line_wrap_and_word_wrap&quot;&gt;换行&lt;/a&gt; （不限于 &lt;code&gt;System.out.println&lt;/code&gt; 命令），由以下代码演示：</target>
        </trans-unit>
        <trans-unit id="895e6b3e57857cc92ca9e1a5d7242d694fe7e4fd" translate="yes" xml:space="preserve">
          <source>And so on..</source>
          <target state="translated">等等.....</target>
        </trans-unit>
        <trans-unit id="84549a50f2f1a2af52238da68ea8a1e587dd3a25" translate="yes" xml:space="preserve">
          <source>Another advice is that to change settings of NetBeans IDE. First of all, go to NetBeans &lt;strong&gt;Tools&lt;/strong&gt; and click &lt;strong&gt;Options&lt;/strong&gt;. After that click &lt;strong&gt;Editor&lt;/strong&gt; and go to &lt;strong&gt;Formatting&lt;/strong&gt; tab. Then select &lt;em&gt;Anywhere&lt;/em&gt; in &lt;strong&gt;Line Wrap&lt;/strong&gt; Option. It will take almost 6.24% less time to compile the program.</source>
          <target state="translated">另一个建议是更改NetBeans IDE的设置。 首先，转到NetBeans &lt;strong&gt;工具&lt;/strong&gt; ，然后单击&lt;strong&gt;选项&lt;/strong&gt; 。 之后，单击&amp;ldquo; &lt;strong&gt;编辑器&amp;rdquo;，&lt;/strong&gt;然后转到&amp;ldquo; &lt;strong&gt;格式&amp;rdquo;&lt;/strong&gt;选项卡。 然后选择&amp;ldquo; &lt;strong&gt;行换行&lt;/strong&gt;选项中的任何位置&amp;rdquo;。 编译该程序所需的时间几乎减少了6.24％。</target>
        </trans-unit>
        <trans-unit id="aff9d86b3f4dd0854be3788ffe3205179e3429a4" translate="yes" xml:space="preserve">
          <source>As others who pointed out that it works for them normally, I tried &lt;a href=&quot;http://ideone.com&quot;&gt;Ideone.com&lt;/a&gt; for instance, and both pieces of code execute at the same speed.</source>
          <target state="translated">正如其他指出它对他们正常工作的人&lt;a href=&quot;http://ideone.com&quot;&gt;一样&lt;/a&gt; ，例如，我尝试了Ideone.com ，并且这两段代码以相同的速度执行。</target>
        </trans-unit>
        <trans-unit id="6f2cbfb7d7451d4e947a0f953d558c7dc8640fa5" translate="yes" xml:space="preserve">
          <source>As suggested in the comments, printing only &lt;code&gt;System.out.print(&quot;#&quot;);&lt;/code&gt; takes &lt;code&gt;7.8871&lt;/code&gt; seconds, whereas &lt;code&gt;System.out.print(&quot;B&quot;);&lt;/code&gt; gives &lt;code&gt;still printing...&lt;/code&gt;.</source>
          <target state="translated">如注释中所建议，仅打印 &lt;code&gt;System.out.print(&quot;#&quot;);&lt;/code&gt; 花费 &lt;code&gt;7.8871&lt;/code&gt; 秒，而 &lt;code&gt;System.out.print(&quot;B&quot;);&lt;/code&gt; &lt;code&gt;still printing...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b04279c484d7242cdae7380002da72b87805607c" translate="yes" xml:space="preserve">
          <source>But that's pure speculation.</source>
          <target state="translated">但那是纯粹的投机。</target>
        </trans-unit>
        <trans-unit id="fa49b818484dd92ac9d31e916dcb454d4b347afb" translate="yes" xml:space="preserve">
          <source>Eclipse works perfectly with &quot;B&quot;</source>
          <target state="translated">Eclipse与 &quot;B &quot;完美配合</target>
        </trans-unit>
        <trans-unit id="a134c31a8098585d80249319a066650077e13a95" translate="yes" xml:space="preserve">
          <source>Eclipse:</source>
          <target state="translated">Eclipse:</target>
        </trans-unit>
        <trans-unit id="d7f45040624014ff8cce3d133338827ad32fbd55" translate="yes" xml:space="preserve">
          <source>First Matrix: &lt;code&gt;O&lt;/code&gt; and &lt;code&gt;#&lt;/code&gt;.</source>
          <target state="translated">第一矩阵： &lt;code&gt;O&lt;/code&gt; 和 &lt;code&gt;#&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef687a4dcb3d14672de4e60cf283407a54b735b4" translate="yes" xml:space="preserve">
          <source>First Matrix: O and # = &lt;strong&gt;&lt;em&gt;6.03 seconds&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">第一矩阵：O和＃= &lt;strong&gt;&lt;em&gt;6.03秒&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2aa440310dd36554d21adc15b9c08b43cce92a32" translate="yes" xml:space="preserve">
          <source>I generated two matrices of &lt;code&gt;1000&lt;/code&gt; x &lt;code&gt;1000&lt;/code&gt;:</source>
          <target state="translated">我生成了两个 &lt;code&gt;1000&lt;/code&gt; x &lt;code&gt;1000&lt;/code&gt; 的矩阵：</target>
        </trans-unit>
        <trans-unit id="e2575368ff26477b1cc282b272e404ddb7650e62" translate="yes" xml:space="preserve">
          <source>I got the &lt;strong&gt;same time on both cases&lt;/strong&gt; - around &lt;strong&gt;1.564 seconds&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;在这两种情况下，&lt;/strong&gt;我得到了&lt;strong&gt;相同的时间&lt;/strong&gt; -大约&lt;strong&gt;1.564秒&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="29402d08e849a83e6bcf62f503db3ab1885a4378" translate="yes" xml:space="preserve">
          <source>I performed tests on Eclipse vs Netbeans 8.0.2, both with Java version 1.8;
I used &lt;code&gt;System.nanoTime()&lt;/code&gt; for measurements.</source>
          <target state="translated">我在Java版本1.8和Eclipse vs Netbeans 8.0.2上进行了测试； 我使用 &lt;code&gt;System.nanoTime()&lt;/code&gt; 进行测量。</target>
        </trans-unit>
        <trans-unit id="8c03fe946324aee8adf2e93eaa361b2b8da4f5bc" translate="yes" xml:space="preserve">
          <source>I ran this test from &lt;em&gt;Netbeans 7.2&lt;/em&gt;, with the output into its console</source>
          <target state="translated">我从&lt;em&gt;Netbeans 7.2&lt;/em&gt;运行了此测试，并将输出输出到其控制台中</target>
        </trans-unit>
        <trans-unit id="6559a355d14c046bd733851b6f8f5958df98c8f8" translate="yes" xml:space="preserve">
          <source>I used &lt;code&gt;System.nanoTime()&lt;/code&gt; for measurements</source>
          <target state="translated">我使用 &lt;code&gt;System.nanoTime()&lt;/code&gt; 进行测量</target>
        </trans-unit>
        <trans-unit id="c0bbd75ba5876af1caaf4dbf9bba06e8fdb50abb" translate="yes" xml:space="preserve">
          <source>Looking at your code closely you have used a line break at the end of first loop. But you didn't use any line break in second loop. So you are going to print a word with 1000 characters in the second loop. That causes a word-wrapping problem. If we use a non-word character &quot; &quot; after B, it takes only &lt;strong&gt;&lt;em&gt;5.35 seconds&lt;/em&gt;&lt;/strong&gt; to compile the program. And If we use a line break in the second loop after passing 100 values or 50 values, it takes only &lt;strong&gt;&lt;em&gt;8.56 seconds&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;7.05 seconds&lt;/em&gt;&lt;/strong&gt; respectively.</source>
          <target state="translated">仔细查看代码，您在第一个循环的末尾使用了换行符。 但是您没有在第二个循环中使用任何换行符。 因此，您将在第二个循环中打印一个包含1000个字符的单词。 这会导致换行问题。 如果我们在B后面使用非单词字符&amp;ldquo;&amp;rdquo;，则仅需&lt;strong&gt;&lt;em&gt;5.35秒&lt;/em&gt;&lt;/strong&gt;即可编译程序。 如果我们在传递100个值或50个值后在第二个循环中使用换行符，则分别只需要&lt;strong&gt;&lt;em&gt;8.56秒&lt;/em&gt;&lt;/strong&gt;和&lt;strong&gt;&lt;em&gt;7.05秒&lt;/em&gt;&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="a7514bfe62ed57cb50a422f65681d74f43f4cdaa" translate="yes" xml:space="preserve">
          <source>Netbeans has a line-wrapping problem that can be solved (because the problem does not occur in eclipse)(without adding space after B (&quot;B &quot;)).</source>
          <target state="translated">Netbeans有一个包线问题可以解决(因为这个问题在eclipse中不会出现)(不在B(&quot;B&quot;)后面加空格)。</target>
        </trans-unit>
        <trans-unit id="124c0301627d7202c133068f845ad9269b84d93e" translate="yes" xml:space="preserve">
          <source>Netbeans:</source>
          <target state="translated">Netbeans:</target>
        </trans-unit>
        <trans-unit id="029dfa62fca3cc5c7903cf197d38aa8776ded775" translate="yes" xml:space="preserve">
          <source>Second Matrix: &lt;code&gt;O&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;.</source>
          <target state="translated">第二矩阵： &lt;code&gt;O&lt;/code&gt; 和 &lt;code&gt;B&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3841cfd806bc4abd0ef710591eb3040a42031181" translate="yes" xml:space="preserve">
          <source>Second Matrix: O and B = &lt;strong&gt;&lt;em&gt;50.97 seconds&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">第二矩阵：O和B = &lt;strong&gt;&lt;em&gt;50.97秒&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f6b8c894024ddbfc793efca19b63b4369e4b278" translate="yes" xml:space="preserve">
          <source>So, it looks like Netbeans has bad performance on print to console.</source>
          <target state="translated">所以,看来Netbeans在打印到控制台上的性能很差。</target>
        </trans-unit>
        <trans-unit id="6ed816d75e1c95434823496141b81fdcea2cbda9" translate="yes" xml:space="preserve">
          <source>Summary:</source>
          <target state="translated">Summary:</target>
        </trans-unit>
        <trans-unit id="37a7a9b529a7c53625236a6c6fedeadb0f43675e" translate="yes" xml:space="preserve">
          <source>Test Conditions:</source>
          <target state="translated">测试条件。</target>
        </trans-unit>
        <trans-unit id="17f53f9206ac99385962988eb52106cb8c8bd9b6" translate="yes" xml:space="preserve">
          <source>The time results are less then 1 millisecond every iteration except &lt;strong&gt;every fifth iteration&lt;/strong&gt;, when the time result is around 225 millisecond. Something like (in nanoseconds):</source>
          <target state="translated">除时间间隔大约为225毫秒外， &lt;strong&gt;每次迭代&lt;/strong&gt;的时间结果均小于1毫秒（ &lt;strong&gt;每五次迭代&lt;/strong&gt;除外）。 大约（以纳秒为单位）：</target>
        </trans-unit>
        <trans-unit id="2c81208117716a951edeb9e22aee386a475bac6a" translate="yes" xml:space="preserve">
          <source>Using &quot;#&quot;: &lt;strong&gt;1.536 seconds&lt;/strong&gt;</source>
          <target state="translated">使用&amp;ldquo;＃&amp;rdquo;： &lt;strong&gt;1.536秒&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d9e1fe06b1c5bbebb553eb4ba1e878b39f46d330" translate="yes" xml:space="preserve">
          <source>Using &quot;B&quot;: &lt;strong&gt;44.164 seconds&lt;/strong&gt;</source>
          <target state="translated">使用&amp;ldquo; B&amp;rdquo;： &lt;strong&gt;44.164秒&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5042afadfdcc473223542828bcaed45f6f017bb" translate="yes" xml:space="preserve">
          <source>Using the following code, the first matrix took 8.52 seconds to complete:</source>
          <target state="translated">使用下面的代码,第一个矩阵用了8.52秒完成。</target>
        </trans-unit>
        <trans-unit id="3d691193b1ec0a4be6c3f21e1e251a5c012c0ce7" translate="yes" xml:space="preserve">
          <source>What is the reason behind the dramatically different run times?</source>
          <target state="translated">跑动时间的巨大差异背后的原因是什么?</target>
        </trans-unit>
        <trans-unit id="3cfac184ec6fc62dec3e807af01aa3117c254ad1" translate="yes" xml:space="preserve">
          <source>Why is printing “B” dramatically slower than printing “#”</source>
          <target state="translated">为什么打印 &quot;B &quot;的速度比打印 &quot;#&quot;的速度要慢很多?</target>
        </trans-unit>
        <trans-unit id="060ad14bc500490daed239e8944dec1213e2d537" translate="yes" xml:space="preserve">
          <source>With this code, the second matrix took 259.152 seconds to complete:</source>
          <target state="translated">用这个代码,第二个矩阵用了259.152秒就完成了。</target>
        </trans-unit>
        <trans-unit id="f34d7783bb5a5c8aa27b3314e1e25fcd60e1b23d" translate="yes" xml:space="preserve">
          <source>Yes the culprit is definitely word-wrapping. When I tested your two programs, NetBeans IDE 8.2 gave me the following result.</source>
          <target state="translated">是的,罪魁祸首肯定是文字包装。我在测试你的两个程序时,NetBeans IDE 8.2给我的结果如下。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
