<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/2167916">
    <body>
      <group id="2167916">
        <trans-unit id="9cc57b90d77ac052cad14045ea589d3882bb7516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date()&lt;/code&gt; takes a Unix timeatamp as its second parameter and returns a formatted date for you:</source>
          <target state="translated">&lt;code&gt;date()&lt;/code&gt; принимает в качестве второго параметра timeatamp Unix и возвращает отформатированную дату:</target>
        </trans-unit>
        <trans-unit id="e527b1bd254a4f346f4cceb84bdcc49030f20d27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PHP 5.2 and lower&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PHP 5.2 и ниже&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="092e4234c1eb4ef892e009caeee334b76e40fd30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PHP 5.3 and up&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PHP 5.3 и выше&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df137e69c8f432229739fa9d63ee647f70f74478" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Basics&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Основы&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d8d97e3f2670d27077e8554771499c964d22ac6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;USE&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;USE&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc50621d24d039e6a8dc7b57f63f90f27af128af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Using &lt;code&gt;DateTime()&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Использование &lt;code&gt;DateTime()&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5915b7fd64e7fef492dd0b7f96aa1316d7987f6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Working with Unix timestamps&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Работа с метками времени Unix&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40082b9c32cc3e530da3ddc09ddafcbf05785e3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Working with non-standard and ambiguous date formats&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Работа с нестандартными и неоднозначными форматами даты&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="66ad404c9045536065c4c47a3771d49575b803a4" translate="yes" xml:space="preserve">
          <source>As of PHP 5.2, PHP offered the &lt;a href=&quot;http://docs.php.net/manual/en/class.datetime.php&quot;&gt;&lt;code&gt;DateTime()&lt;/code&gt;&lt;/a&gt; class which offers us more powerful tools for working with dates (and time). We can rewrite the above code using &lt;code&gt;DateTime()&lt;/code&gt; as so:</source>
          <target state="translated">Начиная с PHP 5.2, PHP предлагал класс &lt;a href=&quot;http://docs.php.net/manual/en/class.datetime.php&quot;&gt; &lt;code&gt;DateTime()&lt;/code&gt; &lt;/a&gt; который предлагает нам более мощные инструменты для работы с датами (и временем). Мы можем переписать приведенный выше код с помощью &lt;code&gt;DateTime()&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="5b67781fde86a80f0029b5a5894abdd27e0ff8ab" translate="yes" xml:space="preserve">
          <source>But I'd of course like it to return a current date rather than the crack 'o dawn. What am I doing wrong?</source>
          <target state="translated">Но я бы,конечно,хотел,чтобы она вернула текущую дату,а не трещину на рассвете.Что я делаю не так?</target>
        </trans-unit>
        <trans-unit id="524fc0aec45dac63ac40b38941df52e84d522cc6" translate="yes" xml:space="preserve">
          <source>But that's a lot of work! I recommend using a different format that strftime() can understand. strftime() understands &lt;em&gt;any&lt;/em&gt;  date input short of &lt;code&gt;the next time joe will slip on the ice&lt;/code&gt;. for example, this works:</source>
          <target state="translated">Но это много работы! Я рекомендую использовать другой формат, который strftime () может понять. strftime () понимает &lt;em&gt;любую&lt;/em&gt; дату, введенную &lt;code&gt;the next time joe will slip on the ice&lt;/code&gt; . например, это работает:</target>
        </trans-unit>
        <trans-unit id="7070941e65f1d1444839e612c9e215bf80286d0e" translate="yes" xml:space="preserve">
          <source>Convert one date format into another in PHP</source>
          <target state="translated">Преобразование одного формата даты в другой в PHP</target>
        </trans-unit>
        <trans-unit id="2f94931dc6dbc48dc34eb06552409111f5f02d26" translate="yes" xml:space="preserve">
          <source>DateTime() works with Unix timestamps by adding an &lt;code&gt;@&lt;/code&gt; before the timestamp:</source>
          <target state="translated">DateTime () работает с метками времени Unix, добавляя &lt;code&gt;@&lt;/code&gt; перед меткой времени:</target>
        </trans-unit>
        <trans-unit id="40198e4bcb3064a0b20aeb7089fdab04bcd9d548" translate="yes" xml:space="preserve">
          <source>Divide the substr by 1000</source>
          <target state="translated">Разделить подложку на 1000</target>
        </trans-unit>
        <trans-unit id="592d816e9895e71bf1f9cb7878f0ccbf6d59c1db" translate="yes" xml:space="preserve">
          <source>Here's some sample calls - you will note it also handles any time zone data (though as noted above, any non GMT time is returned in your time zone).</source>
          <target state="translated">Вот некоторые примеры звонков-вы заметите,что он также обрабатывает данные любого часового пояса (хотя,как было отмечено выше,любое время,отличное от GMT,возвращается в вашем часовом поясе).</target>
        </trans-unit>
        <trans-unit id="22e52845e690ffb85ae425e49263d746dcf8be45" translate="yes" xml:space="preserve">
          <source>Here's the code:</source>
          <target state="translated">Вот код:</target>
        </trans-unit>
        <trans-unit id="5e2d33e1605e46d9a170cf2027cff84226a7bcd8" translate="yes" xml:space="preserve">
          <source>Here's the output:</source>
          <target state="translated">Вот выход:</target>
        </trans-unit>
        <trans-unit id="f5d8a479bc8753cd7f37d64b2122e27c9b3fd666" translate="yes" xml:space="preserve">
          <source>I have this:</source>
          <target state="translated">У меня есть это:</target>
        </trans-unit>
        <trans-unit id="10d3efe4d19da1fb96dcc4651e5a3ce3b131b7cb" translate="yes" xml:space="preserve">
          <source>I know this is old, but, in running into a vendor that inconsistently uses 5 different date formats in their APIs (and test servers with a variety of PHP versions from the 5's through the latest 7's), I decided to write a universal converter that works with a myriad of PHP versions.</source>
          <target state="translated">Я знаю,что это старо,но,столкнувшись с поставщиком,который непоследовательно использует 5 различных форматов дат в своих API (и тестовых серверах с различными PHP версиями от 5 до последних 7),я решил написать универсальный конвертер,который работает с огромным количеством PHP-версий.</target>
        </trans-unit>
        <trans-unit id="4cfa2ca2a67c2716e32f276c77524bd15ced7782" translate="yes" xml:space="preserve">
          <source>I think this will help...</source>
          <target state="translated">Я думаю,это поможет...</target>
        </trans-unit>
        <trans-unit id="bea53c84ce623f8bf082c3aa6606f19eb4b8c6c4" translate="yes" xml:space="preserve">
          <source>If the timestamp you have is in milliseconds (it may end in &lt;code&gt;000&lt;/code&gt; and/or the timestamp is thirteen characters long) you will need to convert it to seconds before you can can convert it to another format. There's two ways to do this:</source>
          <target state="translated">Если у вас есть метка времени в миллисекундах (она может заканчиваться на &lt;code&gt;000&lt;/code&gt; и / или метка времени длиной тринадцать символов), вам потребуется преобразовать ее в секунды, прежде чем вы сможете преобразовать ее в другой формат. Есть два способа сделать это:</target>
        </trans-unit>
        <trans-unit id="aae6015889405a09b53cab8940d5fa057a047669" translate="yes" xml:space="preserve">
          <source>If you are not transforming from one date format to another, but just want the current date (or datetime) in a specific format then it's even easier:</source>
          <target state="translated">Если вы не переходите из одного формата даты в другой,а просто хотите,чтобы текущая дата (или время)была в определенном формате,то это еще проще:</target>
        </trans-unit>
        <trans-unit id="38c4b759af56854e2731695e698d1c32d7b4c983" translate="yes" xml:space="preserve">
          <source>If you're running PHP 5.2 you can use the &lt;code&gt;U&lt;/code&gt; formatting option instead:</source>
          <target state="translated">Если вы используете PHP 5.2, вы можете использовать вместо этого форматирование &lt;code&gt;U&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4248b4a377be4f59b690bac95bf9e6d417681513" translate="yes" xml:space="preserve">
          <source>In PHP 5.4 we gained the ability to do class member access on instantiation has been added which allows us to turn our &lt;code&gt;DateTime()&lt;/code&gt; code into a one-liner:</source>
          <target state="translated">В PHP 5.4 мы получили возможность делать доступ к членам класса при создании экземпляра, что позволяет нам превратить наш код &lt;code&gt;DateTime()&lt;/code&gt; в однострочную строку:</target>
        </trans-unit>
        <trans-unit id="7fb3654fa534e78ba083c5c18920562d4e8e343e" translate="yes" xml:space="preserve">
          <source>Is there a simple way to convert one date format into another date format in PHP?</source>
          <target state="translated">Существует ли простой способ преобразования одного формата даты в другой в PHP?</target>
        </trans-unit>
        <trans-unit id="e73aa107f5f6e9f3f34234fa09bf9bb1eb4fb28a" translate="yes" xml:space="preserve">
          <source>Just using strings, for me is a good solution, less problems with mysql. Detects the current format and changes it if necessary, this solution is only for spanish/french format and english format, without use php datetime function.</source>
          <target state="translated">Просто использование строк,для меня это хорошее решение,меньше проблем с mysql.Определяет текущий формат и меняет его при необходимости,это решение только для испано-французского и английского форматов,без использования функции даты php.</target>
        </trans-unit>
        <trans-unit id="ef2cb3b3168fdb4656e4c56ca5fc191eae3c711c" translate="yes" xml:space="preserve">
          <source>Keep in mind that &lt;code&gt;strtotime()&lt;/code&gt; requires the date to be in a &lt;a href=&quot;https://php.net/manual/en/datetime.formats.php&quot;&gt;valid format&lt;/a&gt;. Failure to provide a valid format will result in &lt;code&gt;strtotime()&lt;/code&gt; returning false which will cause your date to be 1969-12-31.</source>
          <target state="translated">Помните, что &lt;code&gt;strtotime()&lt;/code&gt; требует, чтобы дата была в &lt;a href=&quot;https://php.net/manual/en/datetime.formats.php&quot;&gt;правильном формате&lt;/a&gt; . Если вы не &lt;code&gt;strtotime()&lt;/code&gt; правильный формат, strtotime () вернет false, и ваша дата будет 1969-12-31.</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="5f60f78ebabe5acd857f520a5c9b9030e9c16056" translate="yes" xml:space="preserve">
          <source>Or as a one-liner:</source>
          <target state="translated">Или как один лайнер:</target>
        </trans-unit>
        <trans-unit id="6ca6e1ef534908a305fe58ae0913d7f96c39a49d" translate="yes" xml:space="preserve">
          <source>Output : 2018-04-18</source>
          <target state="translated">Выход:2018-04-18</target>
        </trans-unit>
        <trans-unit id="f0291b4e19300e243502db3542133d391bd3ec01" translate="yes" xml:space="preserve">
          <source>Sending null for the format will make the function return the datetime in Epoch/Unix Time. Otherwise, send any format string that date() supports, as well as with &quot;.u&quot; for milliseconds (I handle milliseconds as well, even though date() returns zeros).</source>
          <target state="translated">Отправка нуля для формата заставит функцию вернуть время даты в EpochUnix Time.В противном случае,отправьте любую строку формата,поддерживаемую функцией date(),а также с &quot;.u&quot; для миллисекунд (я тоже обрабатываю миллисекунды,даже если date()возвращает нули).</target>
        </trans-unit>
        <trans-unit id="294a01d7779f29a9c3dfe67549306d563b8eaeba" translate="yes" xml:space="preserve">
          <source>The easiest way to do this is</source>
          <target state="translated">Самый простой способ сделать это -</target>
        </trans-unit>
        <trans-unit id="ed619fce4c3922df18faa9e9c15c87290ac8d883" translate="yes" xml:space="preserve">
          <source>The following is an easy method to convert dates to different formats.</source>
          <target state="translated">Ниже приведен простой метод преобразования дат в различные форматы.</target>
        </trans-unit>
        <trans-unit id="ed65ba104f1ccb22b0e48b76f96565a5bafa8d16" translate="yes" xml:space="preserve">
          <source>The only thing not in this version is the ability to select the time zone you want the returned datetime to be in. Originally, I wrote this to change any datetime to Epoch Time, so, I didn't need time zone support. It's trivial to add though.</source>
          <target state="translated">Единственное,чего нет в этой версии-это возможность выбора часового пояса,в котором вы хотите видеть возвращаемое время.Первоначально я написал это,чтобы изменить любое время даты на Epoch Time,так что мне не нужна была поддержка часового пояса.Это тривиально,чтобы добавить,однако.</target>
        </trans-unit>
        <trans-unit id="4fda8dc699c7da16a7547525a61d8fa9e965bbae" translate="yes" xml:space="preserve">
          <source>The second parameter to &lt;code&gt;date()&lt;/code&gt; needs to be a proper timestamp (seconds since January 1, 1970). You are passing a string, which date() can't recognize.</source>
          <target state="translated">Второй параметр &lt;code&gt;date()&lt;/code&gt; должен быть правильной отметкой времени (секунды с 1 января 1970 г.). Вы передаете строку, которую date () не может распознать.</target>
        </trans-unit>
        <trans-unit id="5f3f813bd56d8ecaebf9d97d8da38da1b46be9c8" translate="yes" xml:space="preserve">
          <source>The simplist way to convert one date format into another is to use &lt;a href=&quot;http://docs.php.net/manual/en/function.strtotime.php&quot;&gt;&lt;code&gt;strtotime()&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;http://docs.php.net/manual/en/function.date.php&quot;&gt;&lt;code&gt;date()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;strtotime()&lt;/code&gt; will convert the date into a &lt;a href=&quot;http://en.wikipedia.org/wiki/Unix_time&quot;&gt;Unix Timestamp&lt;/a&gt;. That Unix Timestamp can then be passed to &lt;code&gt;date()&lt;/code&gt; to convert it to the new format.</source>
          <target state="translated">Самый простой способ конвертировать один формат даты в другой - использовать &lt;a href=&quot;http://docs.php.net/manual/en/function.strtotime.php&quot;&gt; &lt;code&gt;strtotime()&lt;/code&gt; &lt;/a&gt; с &lt;a href=&quot;http://docs.php.net/manual/en/function.date.php&quot;&gt; &lt;code&gt;date()&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;strtotime()&lt;/code&gt; преобразует дату в метку &lt;a href=&quot;http://en.wikipedia.org/wiki/Unix_time&quot;&gt;времени Unix&lt;/a&gt; . Эта временная метка Unix может быть передана в &lt;code&gt;date()&lt;/code&gt; для преобразования ее в новый формат.</target>
        </trans-unit>
        <trans-unit id="e3a51b94cfd2badb2557c38227d1c994677d4b84" translate="yes" xml:space="preserve">
          <source>This also avoids the use of strtotime, which can be hard to work with at times.</source>
          <target state="translated">Это также позволяет избежать использования strtotime,с которым иногда бывает трудно работать.</target>
        </trans-unit>
        <trans-unit id="e841dbad3ed35519f713f17667c74a7c82c44d1b" translate="yes" xml:space="preserve">
          <source>This converter will take virtually any input, including any standard datetime format (including with or without milliseconds) &lt;em&gt;and&lt;/em&gt; any Epoch Time representation (including with or without milliseconds) and convert it to virtually any other format.</source>
          <target state="translated">Этот преобразователь будет принимать практически любые входные данные, включая любой стандартный формат даты и времени (в том числе с миллисекундами или без), &lt;em&gt;и&lt;/em&gt; любое представление времени эпохи (в том числе с или без миллисекунд) и преобразовывать его практически в любой другой формат.</target>
        </trans-unit>
        <trans-unit id="c21fecbbfa3436423480b344512f1803fdcfafa3" translate="yes" xml:space="preserve">
          <source>This is the other way you can convert date format</source>
          <target state="translated">Это другой способ,которым вы можете конвертировать формат даты</target>
        </trans-unit>
        <trans-unit id="0eb9e97a9fab919106d7b2b105b05cb5063a0356" translate="yes" xml:space="preserve">
          <source>This native way will help to convert any inputted format to the desired format.</source>
          <target state="translated">Этот &quot;родной&quot; способ поможет преобразовать любой вводимый формат в нужный.</target>
        </trans-unit>
        <trans-unit id="f9e83a69fef590c985a9942547854af908b828db" translate="yes" xml:space="preserve">
          <source>This other question also refers to the same topic: &lt;a href=&quot;https://stackoverflow.com/questions/2487921/php-convert-date-format-yyyy-mm-dd-dd-mm-yyyy-not-in-sql&quot;&gt;Convert date format yyyy-mm-dd =&amp;gt; dd-mm-yyyy&lt;/a&gt;.</source>
          <target state="translated">Этот другой вопрос также относится к той же теме: &lt;a href=&quot;https://stackoverflow.com/questions/2487921/php-convert-date-format-yyyy-mm-dd-dd-mm-yyyy-not-in-sql&quot;&gt;конвертировать формат даты гггг-мм-дд =&amp;gt; дд-мм-гггг&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b810e8f3500321e20eb8369489b65bd75effc4b1" translate="yes" xml:space="preserve">
          <source>This solved for me,</source>
          <target state="translated">Это решило для меня,</target>
        </trans-unit>
        <trans-unit id="a0511411d5221591603c75246c7e6ea025936524" translate="yes" xml:space="preserve">
          <source>To call it:</source>
          <target state="translated">Называть это:</target>
        </trans-unit>
        <trans-unit id="6e05b11cc6d1cb285dbc122beee98b6b0fd78c1b" translate="yes" xml:space="preserve">
          <source>To convert &lt;code&gt;$date&lt;/code&gt; from &lt;code&gt;dd-mm-yyyy hh:mm:ss&lt;/code&gt; to a proper MySQL datetime
I go like this:</source>
          <target state="translated">Чтобы преобразовать &lt;code&gt;$date&lt;/code&gt; из &lt;code&gt;dd-mm-yyyy hh:mm:ss&lt;/code&gt; в правильное время MySQL, я иду так:</target>
        </trans-unit>
        <trans-unit id="750c43f502c0ac16279edfb8209a65fad97d0e72" translate="yes" xml:space="preserve">
          <source>To get a Unix Timestamp you can use &lt;code&gt;strtotime()&lt;/code&gt; which returns a Unix Timestamp:</source>
          <target state="translated">Чтобы получить &lt;code&gt;strtotime()&lt;/code&gt; времени Unix, вы можете использовать strtotime (), которая возвращает метку времени Unix:</target>
        </trans-unit>
        <trans-unit id="2997e78db0ffebadda510e09ad95e367281ae0d6" translate="yes" xml:space="preserve">
          <source>Trim the last three digits off using &lt;a href=&quot;http://php.net/manual/en/function.substr.php&quot;&gt;&lt;code&gt;substr()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Обрезать последние три цифры с помощью &lt;a href=&quot;http://php.net/manual/en/function.substr.php&quot;&gt; &lt;code&gt;substr()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="efc451724babdf5067498219d4a06790d87e31a9" translate="yes" xml:space="preserve">
          <source>Trimming the last three digits can be acheived several ways, but using &lt;code&gt;substr()&lt;/code&gt; is the easiest:</source>
          <target state="translated">Обрезка последних трех цифр может быть достигнута несколькими способами, но использовать &lt;code&gt;substr()&lt;/code&gt; проще всего:</target>
        </trans-unit>
        <trans-unit id="b21480ff457e048e3c7a6593bfb52719279e1f05" translate="yes" xml:space="preserve">
          <source>Try this:</source>
          <target state="translated">Попробуй это:</target>
        </trans-unit>
        <trans-unit id="fa9da9bd4b554c563d84fd169f86abd9670f6f77" translate="yes" xml:space="preserve">
          <source>Unfortunately not all dates that a developer has to work with are in a standard format. Fortunately PHP 5.3 provided us with a solution for that. &lt;a href=&quot;http://docs.php.net/manual/en/datetime.createfromformat.php&quot;&gt;&lt;code&gt;DateTime::createFromFormat()&lt;/code&gt;&lt;/a&gt; allows us to tell PHP what format a date string is in so it can be successfully parsed into a DateTime object for further manipulation.</source>
          <target state="translated">К сожалению, не все даты, с которыми должен работать разработчик, имеют стандартный формат. К счастью, PHP 5.3 предоставил нам решение для этого. &lt;a href=&quot;http://docs.php.net/manual/en/datetime.createfromformat.php&quot;&gt; &lt;code&gt;DateTime::createFromFormat()&lt;/code&gt; &lt;/a&gt; позволяет нам сообщить PHP, в каком формате находится строка даты, чтобы ее можно было успешно проанализировать в объект DateTime для дальнейших манипуляций.</target>
        </trans-unit>
        <trans-unit id="47f904833c37b4ea2f96523cc861628420b3cff4" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://php.net/manual/en/datetime.createfromformat.php&quot;&gt;&lt;code&gt;DateTime::createFromFormat&lt;/code&gt;&lt;/a&gt;. It allows you to specify an exact mask - using the &lt;code&gt;date()&lt;/code&gt; syntax - to parse incoming string dates with.</source>
          <target state="translated">Используйте &lt;a href=&quot;http://php.net/manual/en/datetime.createfromformat.php&quot;&gt; &lt;code&gt;DateTime::createFromFormat&lt;/code&gt; &lt;/a&gt; . Это позволяет вам указать точную маску - используя синтаксис &lt;code&gt;date()&lt;/code&gt; - для разбора входных строковых дат.</target>
        </trans-unit>
        <trans-unit id="65158d295a893ea49db49b0c10b25654e8ae066b" translate="yes" xml:space="preserve">
          <source>With DateTime() you can use &lt;a href=&quot;http://php.net/manual/en/datetime.gettimestamp.php&quot;&gt;&lt;code&gt;DateTime::getTimestamp()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">С DateTime () вы можете использовать &lt;a href=&quot;http://php.net/manual/en/datetime.gettimestamp.php&quot;&gt; &lt;code&gt;DateTime::getTimestamp()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="697b012fe3e5c45ae13b0e99bb57f5874dabeb57" translate="yes" xml:space="preserve">
          <source>You are first giving it the format $dateString is in. Then you are telling it the format you want $newDateString to be in.</source>
          <target state="translated">Сначала вы даете ему формат,в котором находится $dateString.Затем вы указываете,в каком формате должен быть $newDateString.</target>
        </trans-unit>
        <trans-unit id="4f472abbb10afffc83cc2c1d08be7869e7f25d9a" translate="yes" xml:space="preserve">
          <source>You can also convert the timestamp into seconds by dividing by 1000. Because the timestamp is too large for 32 bit systems to do math on you will need to use the &lt;a href=&quot;http://php.net/manual/en/book.bc.php&quot;&gt;BCMath&lt;/a&gt; library to do the math as strings:</source>
          <target state="translated">Вы также можете преобразовать отметку времени в секунды, разделив ее на 1000. Поскольку отметка времени слишком велика для математических вычислений 32-битных систем, вам потребуется использовать библиотеку &lt;a href=&quot;http://php.net/manual/en/book.bc.php&quot;&gt;BCMath&lt;/a&gt; для выполнения математических операций в виде строк:</target>
        </trans-unit>
        <trans-unit id="d0c782ab759641dfeeca3e9f41ab6c93aea3a86c" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;http://de.php.net/manual/en/function.strtotime.php&quot;&gt;&lt;strong&gt;strtotime()&lt;/strong&gt;&lt;/a&gt; to convert a date string into a timestamp. However, even strtotime() doesn't recognize the &lt;code&gt;y-m-d-h-i-s&lt;/code&gt; format.</source>
          <target state="translated">Вы можете использовать &lt;a href=&quot;http://de.php.net/manual/en/function.strtotime.php&quot;&gt;&lt;strong&gt;strtotime ()&lt;/strong&gt;&lt;/a&gt; для преобразования строки даты в метку времени. Однако даже strtotime () не распознает формат &lt;code&gt;y-m-d-h-i-s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fcff7a54c7a41bbacb7ff5ffa25b93a804699be9" translate="yes" xml:space="preserve">
          <source>You need to convert the $old_date back into a timestamp, as the &lt;a href=&quot;http://www.php.net/manual/en/function.date.php&quot;&gt;date function&lt;/a&gt; requires a timestamp as its second argument.</source>
          <target state="translated">Вам необходимо преобразовать $ old_date обратно в метку времени, так как &lt;a href=&quot;http://www.php.net/manual/en/function.date.php&quot;&gt;функция даты&lt;/a&gt; требует метку времени в качестве второго аргумента.</target>
        </trans-unit>
        <trans-unit id="4017038b3e5ecb4d97a1265b8f743698632aab8f" translate="yes" xml:space="preserve">
          <source>You will have to parse the elements (year, month, day, hour, minute, second) manually using &lt;code&gt;substr()&lt;/code&gt; and hand the results to &lt;a href=&quot;http://de.php.net/manual/en/function.mktime.php&quot;&gt;&lt;strong&gt;mktime()&lt;/strong&gt;&lt;/a&gt; that will build you a timestamp.</source>
          <target state="translated">Вам нужно будет проанализировать элементы (год, месяц, день, час, минута, секунда) вручную, используя &lt;code&gt;substr()&lt;/code&gt; и передать результаты в &lt;a href=&quot;http://de.php.net/manual/en/function.mktime.php&quot;&gt;&lt;strong&gt;mktime (),&lt;/strong&gt;&lt;/a&gt; которая создаст временную метку.</target>
        </trans-unit>
        <trans-unit id="9c6cba22dbf0fd099096ec8b2ad447f63146c77b" translate="yes" xml:space="preserve">
          <source>separator of time is ':'</source>
          <target state="translated">разделитель времени-&quot;:</target>
        </trans-unit>
        <trans-unit id="a30c6c59ad764304cd2e4fa90b870dc5c71aca70" translate="yes" xml:space="preserve">
          <source>strtotime will work that out. the dates are just not the same and all in us-format.</source>
          <target state="translated">strtotime с этим разберутся.даты просто не совпадают и все в нашем формате.</target>
        </trans-unit>
        <trans-unit id="6f7b035ba81a5523511bae90d23a493a8ff8b18c" translate="yes" xml:space="preserve">
          <source>you are doing wrong here, this should be</source>
          <target state="translated">ты делаешь здесь неправильно,это должно быть</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
