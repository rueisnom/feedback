<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/2167916">
    <body>
      <group id="2167916">
        <trans-unit id="9cc57b90d77ac052cad14045ea589d3882bb7516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date()&lt;/code&gt; takes a Unix timeatamp as its second parameter and returns a formatted date for you:</source>
          <target state="translated">&lt;code&gt;date()&lt;/code&gt; 는 두 번째 매개 변수로 Unix 타임 스탬프를 사용하고 형식화 된 날짜를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e527b1bd254a4f346f4cceb84bdcc49030f20d27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PHP 5.2 and lower&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PHP 5.2 이하&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="092e4234c1eb4ef892e009caeee334b76e40fd30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PHP 5.3 and up&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PHP 5.3 이상&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df137e69c8f432229739fa9d63ee647f70f74478" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Basics&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;기초&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d8d97e3f2670d27077e8554771499c964d22ac6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;USE&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;USE&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc50621d24d039e6a8dc7b57f63f90f27af128af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Using &lt;code&gt;DateTime()&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;DateTime()&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5915b7fd64e7fef492dd0b7f96aa1316d7987f6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Working with Unix timestamps&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;유닉스 타임 스탬프 작업&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40082b9c32cc3e530da3ddc09ddafcbf05785e3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Working with non-standard and ambiguous date formats&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;비표준적이고 모호한 날짜 형식으로 작업&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="66ad404c9045536065c4c47a3771d49575b803a4" translate="yes" xml:space="preserve">
          <source>As of PHP 5.2, PHP offered the &lt;a href=&quot;http://docs.php.net/manual/en/class.datetime.php&quot;&gt;&lt;code&gt;DateTime()&lt;/code&gt;&lt;/a&gt; class which offers us more powerful tools for working with dates (and time). We can rewrite the above code using &lt;code&gt;DateTime()&lt;/code&gt; as so:</source>
          <target state="translated">PHP 5.2부터 PHP는 &lt;a href=&quot;http://docs.php.net/manual/en/class.datetime.php&quot;&gt; &lt;code&gt;DateTime()&lt;/code&gt; &lt;/a&gt; 클래스를 제공하여 날짜 및 시간 작업을위한보다 강력한 도구를 제공합니다. &lt;code&gt;DateTime()&lt;/code&gt; 을 사용하여 위 코드를 다시 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b67781fde86a80f0029b5a5894abdd27e0ff8ab" translate="yes" xml:space="preserve">
          <source>But I'd of course like it to return a current date rather than the crack 'o dawn. What am I doing wrong?</source>
          <target state="translated">그러나 물론 금일 새벽이 아닌 현재 날짜를 반환하고 싶습니다. 내가 뭘 잘못하고 있죠?</target>
        </trans-unit>
        <trans-unit id="524fc0aec45dac63ac40b38941df52e84d522cc6" translate="yes" xml:space="preserve">
          <source>But that's a lot of work! I recommend using a different format that strftime() can understand. strftime() understands &lt;em&gt;any&lt;/em&gt;  date input short of &lt;code&gt;the next time joe will slip on the ice&lt;/code&gt;. for example, this works:</source>
          <target state="translated">그러나 그것은 많은 일입니다! strftime ()이 이해할 수있는 다른 형식을 사용하는 것이 좋습니다. strftime () &lt;code&gt;the next time joe will slip on the ice&lt;/code&gt; 날짜보다 짧은 날짜 입력을 이해 &lt;em&gt;합니다&lt;/em&gt; . 예를 들어 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="7070941e65f1d1444839e612c9e215bf80286d0e" translate="yes" xml:space="preserve">
          <source>Convert one date format into another in PHP</source>
          <target state="translated">PHP에서 날짜 형식을 다른 형식으로 변환</target>
        </trans-unit>
        <trans-unit id="2f94931dc6dbc48dc34eb06552409111f5f02d26" translate="yes" xml:space="preserve">
          <source>DateTime() works with Unix timestamps by adding an &lt;code&gt;@&lt;/code&gt; before the timestamp:</source>
          <target state="translated">DateTime ()은 타임 스탬프 앞에 &lt;code&gt;@&lt;/code&gt; 를 추가하여 Unix 타임 스탬프와 함께 작동합니다.</target>
        </trans-unit>
        <trans-unit id="40198e4bcb3064a0b20aeb7089fdab04bcd9d548" translate="yes" xml:space="preserve">
          <source>Divide the substr by 1000</source>
          <target state="translated">substr을 1000으로 나눕니다.</target>
        </trans-unit>
        <trans-unit id="592d816e9895e71bf1f9cb7878f0ccbf6d59c1db" translate="yes" xml:space="preserve">
          <source>Here's some sample calls - you will note it also handles any time zone data (though as noted above, any non GMT time is returned in your time zone).</source>
          <target state="translated">다음은 몇 가지 샘플 호출입니다. 위에서 언급했듯이 GMT 이외의 시간은 표준 시간대로 반환되지만 모든 시간대 데이터도 처리합니다.</target>
        </trans-unit>
        <trans-unit id="22e52845e690ffb85ae425e49263d746dcf8be45" translate="yes" xml:space="preserve">
          <source>Here's the code:</source>
          <target state="translated">코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5e2d33e1605e46d9a170cf2027cff84226a7bcd8" translate="yes" xml:space="preserve">
          <source>Here's the output:</source>
          <target state="translated">출력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f5d8a479bc8753cd7f37d64b2122e27c9b3fd666" translate="yes" xml:space="preserve">
          <source>I have this:</source>
          <target state="translated">나는 이것을 가지고있다:</target>
        </trans-unit>
        <trans-unit id="10d3efe4d19da1fb96dcc4651e5a3ce3b131b7cb" translate="yes" xml:space="preserve">
          <source>I know this is old, but, in running into a vendor that inconsistently uses 5 different date formats in their APIs (and test servers with a variety of PHP versions from the 5's through the latest 7's), I decided to write a universal converter that works with a myriad of PHP versions.</source>
          <target state="translated">나는 이것이 오래되었다는 것을 알고 있지만 API에서 5 가지 날짜 형식을 일관되게 사용하는 공급 업체 (및 5에서 최신 7까지 다양한 PHP 버전의 테스트 서버 테스트)를 실행하면서 범용 변환기를 작성하기로 결정했습니다. 수많은 PHP 버전에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="4cfa2ca2a67c2716e32f276c77524bd15ced7782" translate="yes" xml:space="preserve">
          <source>I think this will help...</source>
          <target state="translated">나는 이것이 도움이 될 것이라고 생각한다 ...</target>
        </trans-unit>
        <trans-unit id="bea53c84ce623f8bf082c3aa6606f19eb4b8c6c4" translate="yes" xml:space="preserve">
          <source>If the timestamp you have is in milliseconds (it may end in &lt;code&gt;000&lt;/code&gt; and/or the timestamp is thirteen characters long) you will need to convert it to seconds before you can can convert it to another format. There's two ways to do this:</source>
          <target state="translated">가지고있는 타임 스탬프가 밀리 초인 경우 ( &lt;code&gt;000&lt;/code&gt; 으로 끝나거나 타임 스탬프가 13 자 길이 인 경우) 다른 형식으로 변환하려면 시간을 초로 변환해야합니다. 이를 수행하는 두 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="aae6015889405a09b53cab8940d5fa057a047669" translate="yes" xml:space="preserve">
          <source>If you are not transforming from one date format to another, but just want the current date (or datetime) in a specific format then it's even easier:</source>
          <target state="translated">한 날짜 형식에서 다른 날짜 형식으로 변환하지 않고 특정 형식의 현재 날짜 또는 날짜 시간을 원하면 훨씬 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="38c4b759af56854e2731695e698d1c32d7b4c983" translate="yes" xml:space="preserve">
          <source>If you're running PHP 5.2 you can use the &lt;code&gt;U&lt;/code&gt; formatting option instead:</source>
          <target state="translated">PHP 5.2를 사용하는 경우 &lt;code&gt;U&lt;/code&gt; 형식화 옵션을 대신 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4248b4a377be4f59b690bac95bf9e6d417681513" translate="yes" xml:space="preserve">
          <source>In PHP 5.4 we gained the ability to do class member access on instantiation has been added which allows us to turn our &lt;code&gt;DateTime()&lt;/code&gt; code into a one-liner:</source>
          <target state="translated">PHP 5.4에서는 인스턴스화에서 클래스 멤버 액세스를 수행하는 기능이 추가되어 &lt;code&gt;DateTime()&lt;/code&gt; 코드를 단일 라이너로 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7fb3654fa534e78ba083c5c18920562d4e8e343e" translate="yes" xml:space="preserve">
          <source>Is there a simple way to convert one date format into another date format in PHP?</source>
          <target state="translated">PHP에서 한 날짜 형식을 다른 날짜 형식으로 변환하는 간단한 방법이 있습니까?</target>
        </trans-unit>
        <trans-unit id="e73aa107f5f6e9f3f34234fa09bf9bb1eb4fb28a" translate="yes" xml:space="preserve">
          <source>Just using strings, for me is a good solution, less problems with mysql. Detects the current format and changes it if necessary, this solution is only for spanish/french format and english format, without use php datetime function.</source>
          <target state="translated">문자열을 사용하면 나에게 좋은 솔루션이며 mysql의 문제는 줄어 듭니다. 현재 형식을 감지하고 필요한 경우 변경합니다.이 솔루션은 php datetime 함수를 사용하지 않고 스페인어 / 프랑스어 형식 및 영어 형식에만 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="ef2cb3b3168fdb4656e4c56ca5fc191eae3c711c" translate="yes" xml:space="preserve">
          <source>Keep in mind that &lt;code&gt;strtotime()&lt;/code&gt; requires the date to be in a &lt;a href=&quot;https://php.net/manual/en/datetime.formats.php&quot;&gt;valid format&lt;/a&gt;. Failure to provide a valid format will result in &lt;code&gt;strtotime()&lt;/code&gt; returning false which will cause your date to be 1969-12-31.</source>
          <target state="translated">&lt;code&gt;strtotime()&lt;/code&gt; 에는 날짜가 &lt;a href=&quot;https://php.net/manual/en/datetime.formats.php&quot;&gt;유효한 형식&lt;/a&gt; 이어야 합니다 . 유효한 형식을 제공하지 않으면 &lt;code&gt;strtotime()&lt;/code&gt; false를 반환하여 날짜가 1969-12-31이됩니다.</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="5f60f78ebabe5acd857f520a5c9b9030e9c16056" translate="yes" xml:space="preserve">
          <source>Or as a one-liner:</source>
          <target state="translated">또는 단일 라이너로 :</target>
        </trans-unit>
        <trans-unit id="6ca6e1ef534908a305fe58ae0913d7f96c39a49d" translate="yes" xml:space="preserve">
          <source>Output : 2018-04-18</source>
          <target state="translated">출력 : 2018-04-18</target>
        </trans-unit>
        <trans-unit id="f0291b4e19300e243502db3542133d391bd3ec01" translate="yes" xml:space="preserve">
          <source>Sending null for the format will make the function return the datetime in Epoch/Unix Time. Otherwise, send any format string that date() supports, as well as with &quot;.u&quot; for milliseconds (I handle milliseconds as well, even though date() returns zeros).</source>
          <target state="translated">형식에 대해 null을 보내면 함수가 날짜 시간을 Epoch / Unix Time으로 반환합니다. 그렇지 않으면, date ()가 지원하는 모든 형식 문자열과 밀리 초 동안 &quot;.u&quot;를 전송하십시오 (date ()가 0을 반환하더라도 밀리 초도 처리 함).</target>
        </trans-unit>
        <trans-unit id="294a01d7779f29a9c3dfe67549306d563b8eaeba" translate="yes" xml:space="preserve">
          <source>The easiest way to do this is</source>
          <target state="translated">가장 쉬운 방법은</target>
        </trans-unit>
        <trans-unit id="ed619fce4c3922df18faa9e9c15c87290ac8d883" translate="yes" xml:space="preserve">
          <source>The following is an easy method to convert dates to different formats.</source>
          <target state="translated">다음은 날짜를 다른 형식으로 변환하는 쉬운 방법입니다.</target>
        </trans-unit>
        <trans-unit id="ed65ba104f1ccb22b0e48b76f96565a5bafa8d16" translate="yes" xml:space="preserve">
          <source>The only thing not in this version is the ability to select the time zone you want the returned datetime to be in. Originally, I wrote this to change any datetime to Epoch Time, so, I didn't need time zone support. It's trivial to add though.</source>
          <target state="translated">이 버전에없는 유일한 것은 반환 된 날짜 / 시간을 입력 할 시간대를 선택할 수있는 기능입니다. 원래는 날짜 / 시간을 Epoch Time으로 변경하기 위해 작성 했으므로 시간대 지원이 필요하지 않았습니다. 그래도 추가하는 것은 쉽지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4fda8dc699c7da16a7547525a61d8fa9e965bbae" translate="yes" xml:space="preserve">
          <source>The second parameter to &lt;code&gt;date()&lt;/code&gt; needs to be a proper timestamp (seconds since January 1, 1970). You are passing a string, which date() can't recognize.</source>
          <target state="translated">&lt;code&gt;date()&lt;/code&gt; 의 두 번째 매개 변수는 적절한 시간 소인이어야합니다 (1970 년 1 월 1 일 이후의 초). date ()가 인식 할 수없는 문자열을 전달하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f3f813bd56d8ecaebf9d97d8da38da1b46be9c8" translate="yes" xml:space="preserve">
          <source>The simplist way to convert one date format into another is to use &lt;a href=&quot;http://docs.php.net/manual/en/function.strtotime.php&quot;&gt;&lt;code&gt;strtotime()&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;http://docs.php.net/manual/en/function.date.php&quot;&gt;&lt;code&gt;date()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;strtotime()&lt;/code&gt; will convert the date into a &lt;a href=&quot;http://en.wikipedia.org/wiki/Unix_time&quot;&gt;Unix Timestamp&lt;/a&gt;. That Unix Timestamp can then be passed to &lt;code&gt;date()&lt;/code&gt; to convert it to the new format.</source>
          <target state="translated">한 날짜 형식을 다른 날짜 형식으로 변환하는 간단한 방법은 &lt;a href=&quot;http://docs.php.net/manual/en/function.strtotime.php&quot;&gt; &lt;code&gt;strtotime()&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;http://docs.php.net/manual/en/function.date.php&quot;&gt; &lt;code&gt;date()&lt;/code&gt; &lt;/a&gt; 와 함께 사용하는 것입니다. &lt;code&gt;strtotime()&lt;/code&gt; 은 날짜를 &lt;a href=&quot;http://en.wikipedia.org/wiki/Unix_time&quot;&gt;Unix Timestamp&lt;/a&gt; 로 변환합니다. 그런 다음 해당 Unix Timestamp를 &lt;code&gt;date()&lt;/code&gt; 로 전달하여 새 형식으로 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3a51b94cfd2badb2557c38227d1c994677d4b84" translate="yes" xml:space="preserve">
          <source>This also avoids the use of strtotime, which can be hard to work with at times.</source>
          <target state="translated">또한 strtotime을 사용하지 않아도되기 때문에 때때로 작업하기 어려울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e841dbad3ed35519f713f17667c74a7c82c44d1b" translate="yes" xml:space="preserve">
          <source>This converter will take virtually any input, including any standard datetime format (including with or without milliseconds) &lt;em&gt;and&lt;/em&gt; any Epoch Time representation (including with or without milliseconds) and convert it to virtually any other format.</source>
          <target state="translated">이 변환기는 표준 날짜 시간 형식 (밀리 초 포함 또는 제외) &lt;em&gt;및&lt;/em&gt; 모든 Epoch Time 표시 (밀리 초 포함 또는 포함되지 않음)를 포함하여 거의 모든 입력을 가져 와서 거의 다른 형식으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="c21fecbbfa3436423480b344512f1803fdcfafa3" translate="yes" xml:space="preserve">
          <source>This is the other way you can convert date format</source>
          <target state="translated">이것은 날짜 형식을 변환 할 수있는 다른 방법입니다.</target>
        </trans-unit>
        <trans-unit id="0eb9e97a9fab919106d7b2b105b05cb5063a0356" translate="yes" xml:space="preserve">
          <source>This native way will help to convert any inputted format to the desired format.</source>
          <target state="translated">이 기본 방식은 입력 된 형식을 원하는 형식으로 변환하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="f9e83a69fef590c985a9942547854af908b828db" translate="yes" xml:space="preserve">
          <source>This other question also refers to the same topic: &lt;a href=&quot;https://stackoverflow.com/questions/2487921/php-convert-date-format-yyyy-mm-dd-dd-mm-yyyy-not-in-sql&quot;&gt;Convert date format yyyy-mm-dd =&amp;gt; dd-mm-yyyy&lt;/a&gt;.</source>
          <target state="translated">이 다른 질문은 같은 주제를 참조하십시오 : &lt;a href=&quot;https://stackoverflow.com/questions/2487921/php-convert-date-format-yyyy-mm-dd-dd-mm-yyyy-not-in-sql&quot;&gt;날짜 형식 변환 yyyy-mm-dd =&amp;gt; dd-mm-yyyy&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b810e8f3500321e20eb8369489b65bd75effc4b1" translate="yes" xml:space="preserve">
          <source>This solved for me,</source>
          <target state="translated">이것은 나를 위해 해결되었습니다.</target>
        </trans-unit>
        <trans-unit id="a0511411d5221591603c75246c7e6ea025936524" translate="yes" xml:space="preserve">
          <source>To call it:</source>
          <target state="translated">그것을 호출하려면 :</target>
        </trans-unit>
        <trans-unit id="6e05b11cc6d1cb285dbc122beee98b6b0fd78c1b" translate="yes" xml:space="preserve">
          <source>To convert &lt;code&gt;$date&lt;/code&gt; from &lt;code&gt;dd-mm-yyyy hh:mm:ss&lt;/code&gt; to a proper MySQL datetime
I go like this:</source>
          <target state="translated">&lt;code&gt;$date&lt;/code&gt; 를 &lt;code&gt;dd-mm-yyyy hh:mm:ss&lt;/code&gt; 에서 적절한 MySQL 날짜 시간으로 변환하려면 다음과 같이하십시오.</target>
        </trans-unit>
        <trans-unit id="750c43f502c0ac16279edfb8209a65fad97d0e72" translate="yes" xml:space="preserve">
          <source>To get a Unix Timestamp you can use &lt;code&gt;strtotime()&lt;/code&gt; which returns a Unix Timestamp:</source>
          <target state="translated">유닉스 타임 스탬프를 얻으려면 &lt;code&gt;strtotime()&lt;/code&gt; 을 사용하여 유닉스 타임 스탬프를 반환 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="2997e78db0ffebadda510e09ad95e367281ae0d6" translate="yes" xml:space="preserve">
          <source>Trim the last three digits off using &lt;a href=&quot;http://php.net/manual/en/function.substr.php&quot;&gt;&lt;code&gt;substr()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.substr.php&quot;&gt; &lt;code&gt;substr()&lt;/code&gt; &lt;/a&gt; 사용하여 마지막 세 자리를 자릅니다.</target>
        </trans-unit>
        <trans-unit id="efc451724babdf5067498219d4a06790d87e31a9" translate="yes" xml:space="preserve">
          <source>Trimming the last three digits can be acheived several ways, but using &lt;code&gt;substr()&lt;/code&gt; is the easiest:</source>
          <target state="translated">마지막 세 자리를 트리밍하는 방법에는 여러 가지가 있지만 &lt;code&gt;substr()&lt;/code&gt; 것이 가장 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="b21480ff457e048e3c7a6593bfb52719279e1f05" translate="yes" xml:space="preserve">
          <source>Try this:</source>
          <target state="translated">이 시도:</target>
        </trans-unit>
        <trans-unit id="fa9da9bd4b554c563d84fd169f86abd9670f6f77" translate="yes" xml:space="preserve">
          <source>Unfortunately not all dates that a developer has to work with are in a standard format. Fortunately PHP 5.3 provided us with a solution for that. &lt;a href=&quot;http://docs.php.net/manual/en/datetime.createfromformat.php&quot;&gt;&lt;code&gt;DateTime::createFromFormat()&lt;/code&gt;&lt;/a&gt; allows us to tell PHP what format a date string is in so it can be successfully parsed into a DateTime object for further manipulation.</source>
          <target state="translated">불행히도 개발자가 작업해야하는 모든 날짜가 표준 형식 인 것은 아닙니다. 다행스럽게도 PHP 5.3은 이에 대한 해결책을 제공했습니다. &lt;a href=&quot;http://docs.php.net/manual/en/datetime.createfromformat.php&quot;&gt; &lt;code&gt;DateTime::createFromFormat()&lt;/code&gt; &lt;/a&gt; 사용하면 PHP가 날짜 문자열이 어떤 형식인지 알 수 있으므로 추가 조작을 위해 DateTime 객체로 구문 분석 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47f904833c37b4ea2f96523cc861628420b3cff4" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://php.net/manual/en/datetime.createfromformat.php&quot;&gt;&lt;code&gt;DateTime::createFromFormat&lt;/code&gt;&lt;/a&gt;. It allows you to specify an exact mask - using the &lt;code&gt;date()&lt;/code&gt; syntax - to parse incoming string dates with.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/datetime.createfromformat.php&quot;&gt; &lt;code&gt;DateTime::createFromFormat&lt;/code&gt; &lt;/a&gt; 사용하십시오. 들어오는 문자열 날짜를 구문 분석하기 위해 &lt;code&gt;date()&lt;/code&gt; 구문을 사용하여 정확한 마스크를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="65158d295a893ea49db49b0c10b25654e8ae066b" translate="yes" xml:space="preserve">
          <source>With DateTime() you can use &lt;a href=&quot;http://php.net/manual/en/datetime.gettimestamp.php&quot;&gt;&lt;code&gt;DateTime::getTimestamp()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">DateTime ()을 사용하면 &lt;a href=&quot;http://php.net/manual/en/datetime.gettimestamp.php&quot;&gt; &lt;code&gt;DateTime::getTimestamp()&lt;/code&gt; &lt;/a&gt; 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="697b012fe3e5c45ae13b0e99bb57f5874dabeb57" translate="yes" xml:space="preserve">
          <source>You are first giving it the format $dateString is in. Then you are telling it the format you want $newDateString to be in.</source>
          <target state="translated">먼저 $ dateString의 형식을 지정합니다. 그런 다음 $ newDateString을 원하는 형식으로 지정합니다.</target>
        </trans-unit>
        <trans-unit id="4f472abbb10afffc83cc2c1d08be7869e7f25d9a" translate="yes" xml:space="preserve">
          <source>You can also convert the timestamp into seconds by dividing by 1000. Because the timestamp is too large for 32 bit systems to do math on you will need to use the &lt;a href=&quot;http://php.net/manual/en/book.bc.php&quot;&gt;BCMath&lt;/a&gt; library to do the math as strings:</source>
          <target state="translated">타임 스탬프를 1000으로 나누어서 타임 스탬프를 초로 변환 할 수도 있습니다. 타임 스탬프가 너무 커서 32 비트 시스템에서 수학을 수행 할 수 없으므로 &lt;a href=&quot;http://php.net/manual/en/book.bc.php&quot;&gt;BCMath&lt;/a&gt; 라이브러리를 사용하여 수학을 문자열로 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="d0c782ab759641dfeeca3e9f41ab6c93aea3a86c" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;http://de.php.net/manual/en/function.strtotime.php&quot;&gt;&lt;strong&gt;strtotime()&lt;/strong&gt;&lt;/a&gt; to convert a date string into a timestamp. However, even strtotime() doesn't recognize the &lt;code&gt;y-m-d-h-i-s&lt;/code&gt; format.</source>
          <target state="translated">&lt;a href=&quot;http://de.php.net/manual/en/function.strtotime.php&quot;&gt;&lt;strong&gt;strtotime ()&lt;/strong&gt;&lt;/a&gt; 을 사용하여 날짜 문자열을 시간 소인으로 변환 할 수 있습니다. 그러나 strtotime ()조차도 &lt;code&gt;y-m-d-h-i-s&lt;/code&gt; 형식을 인식하지 못합니다.</target>
        </trans-unit>
        <trans-unit id="fcff7a54c7a41bbacb7ff5ffa25b93a804699be9" translate="yes" xml:space="preserve">
          <source>You need to convert the $old_date back into a timestamp, as the &lt;a href=&quot;http://www.php.net/manual/en/function.date.php&quot;&gt;date function&lt;/a&gt; requires a timestamp as its second argument.</source>
          <target state="translated">&lt;a href=&quot;http://www.php.net/manual/en/function.date.php&quot;&gt;날짜 함수&lt;/a&gt; 에는 두 번째 인수로 시간 소인이 필요하므로 $ old_date를 시간 소인으로 다시 변환해야합니다.</target>
        </trans-unit>
        <trans-unit id="4017038b3e5ecb4d97a1265b8f743698632aab8f" translate="yes" xml:space="preserve">
          <source>You will have to parse the elements (year, month, day, hour, minute, second) manually using &lt;code&gt;substr()&lt;/code&gt; and hand the results to &lt;a href=&quot;http://de.php.net/manual/en/function.mktime.php&quot;&gt;&lt;strong&gt;mktime()&lt;/strong&gt;&lt;/a&gt; that will build you a timestamp.</source>
          <target state="translated">&lt;code&gt;substr()&lt;/code&gt; 사용하여 수동으로 요소 (년, 월, 일,시, 분, 초)를 구문 분석하고 결과를 타임 스탬프를 만드는 &lt;a href=&quot;http://de.php.net/manual/en/function.mktime.php&quot;&gt;&lt;strong&gt;mktime ()으로 전달&lt;/strong&gt;&lt;/a&gt; 해야합니다.</target>
        </trans-unit>
        <trans-unit id="9c6cba22dbf0fd099096ec8b2ad447f63146c77b" translate="yes" xml:space="preserve">
          <source>separator of time is ':'</source>
          <target state="translated">시간의 구분자는 ':'</target>
        </trans-unit>
        <trans-unit id="a30c6c59ad764304cd2e4fa90b870dc5c71aca70" translate="yes" xml:space="preserve">
          <source>strtotime will work that out. the dates are just not the same and all in us-format.</source>
          <target state="translated">strtotime은 그것을 해결할 것입니다. 날짜는 동일하지 않으며 모두 미국 형식입니다.</target>
        </trans-unit>
        <trans-unit id="6f7b035ba81a5523511bae90d23a493a8ff8b18c" translate="yes" xml:space="preserve">
          <source>you are doing wrong here, this should be</source>
          <target state="translated">당신은 여기서 잘못하고 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
