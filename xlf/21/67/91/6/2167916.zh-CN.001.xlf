<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/2167916">
    <body>
      <group id="2167916">
        <trans-unit id="9cc57b90d77ac052cad14045ea589d3882bb7516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date()&lt;/code&gt; takes a Unix timeatamp as its second parameter and returns a formatted date for you:</source>
          <target state="translated">&lt;code&gt;date()&lt;/code&gt; 将Unix timeatamp作为其第二个参数，并为您返回格式化的日期：</target>
        </trans-unit>
        <trans-unit id="e527b1bd254a4f346f4cceb84bdcc49030f20d27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PHP 5.2 and lower&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PHP 5.2及更低版本&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="092e4234c1eb4ef892e009caeee334b76e40fd30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PHP 5.3 and up&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PHP 5.3及以上&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df137e69c8f432229739fa9d63ee647f70f74478" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Basics&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;基础&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d8d97e3f2670d27077e8554771499c964d22ac6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;USE&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;USE&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc50621d24d039e6a8dc7b57f63f90f27af128af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Using &lt;code&gt;DateTime()&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;使用 &lt;code&gt;DateTime()&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5915b7fd64e7fef492dd0b7f96aa1316d7987f6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Working with Unix timestamps&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;使用Unix时间戳&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40082b9c32cc3e530da3ddc09ddafcbf05785e3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Working with non-standard and ambiguous date formats&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;使用非标准且含糊的日期格式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="66ad404c9045536065c4c47a3771d49575b803a4" translate="yes" xml:space="preserve">
          <source>As of PHP 5.2, PHP offered the &lt;a href=&quot;http://docs.php.net/manual/en/class.datetime.php&quot;&gt;&lt;code&gt;DateTime()&lt;/code&gt;&lt;/a&gt; class which offers us more powerful tools for working with dates (and time). We can rewrite the above code using &lt;code&gt;DateTime()&lt;/code&gt; as so:</source>
          <target state="translated">从PHP 5.2开始，PHP提供了&lt;a href=&quot;http://docs.php.net/manual/en/class.datetime.php&quot;&gt; &lt;code&gt;DateTime()&lt;/code&gt; &lt;/a&gt;类，该类为我们提供了用于处理日期（和时间）的更强大的工具。 我们可以这样使用 &lt;code&gt;DateTime()&lt;/code&gt; 重写上面的代码：</target>
        </trans-unit>
        <trans-unit id="5b67781fde86a80f0029b5a5894abdd27e0ff8ab" translate="yes" xml:space="preserve">
          <source>But I'd of course like it to return a current date rather than the crack 'o dawn. What am I doing wrong?</source>
          <target state="translated">但我当然希望它能返回当前的日期,而不是黎明时分。我到底做错了什么?</target>
        </trans-unit>
        <trans-unit id="524fc0aec45dac63ac40b38941df52e84d522cc6" translate="yes" xml:space="preserve">
          <source>But that's a lot of work! I recommend using a different format that strftime() can understand. strftime() understands &lt;em&gt;any&lt;/em&gt;  date input short of &lt;code&gt;the next time joe will slip on the ice&lt;/code&gt;. for example, this works:</source>
          <target state="translated">但这是很多工作！ 我建议使用strftime（）可以理解的其他格式。 strftime（）知道&lt;em&gt;任何&lt;/em&gt;输入的日期，除非 &lt;code&gt;the next time joe will slip on the ice&lt;/code&gt; 。 例如，这有效：</target>
        </trans-unit>
        <trans-unit id="7070941e65f1d1444839e612c9e215bf80286d0e" translate="yes" xml:space="preserve">
          <source>Convert one date format into another in PHP</source>
          <target state="translated">在PHP中将一种日期格式转换为另一种日期格式</target>
        </trans-unit>
        <trans-unit id="2f94931dc6dbc48dc34eb06552409111f5f02d26" translate="yes" xml:space="preserve">
          <source>DateTime() works with Unix timestamps by adding an &lt;code&gt;@&lt;/code&gt; before the timestamp:</source>
          <target state="translated">DateTime（）与Unix时间戳一起使用，方法是在时间戳之前添加一个 &lt;code&gt;@&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="40198e4bcb3064a0b20aeb7089fdab04bcd9d548" translate="yes" xml:space="preserve">
          <source>Divide the substr by 1000</source>
          <target state="translated">将substr除以1000</target>
        </trans-unit>
        <trans-unit id="592d816e9895e71bf1f9cb7878f0ccbf6d59c1db" translate="yes" xml:space="preserve">
          <source>Here's some sample calls - you will note it also handles any time zone data (though as noted above, any non GMT time is returned in your time zone).</source>
          <target state="translated">下面是一些示例调用-你会注意到它也可以处理任何时区数据(尽管如上文所述,任何非GMT时间都会在你的时区返回)。</target>
        </trans-unit>
        <trans-unit id="22e52845e690ffb85ae425e49263d746dcf8be45" translate="yes" xml:space="preserve">
          <source>Here's the code:</source>
          <target state="translated">代码是这样的。</target>
        </trans-unit>
        <trans-unit id="5e2d33e1605e46d9a170cf2027cff84226a7bcd8" translate="yes" xml:space="preserve">
          <source>Here's the output:</source>
          <target state="translated">这里是输出。</target>
        </trans-unit>
        <trans-unit id="f5d8a479bc8753cd7f37d64b2122e27c9b3fd666" translate="yes" xml:space="preserve">
          <source>I have this:</source>
          <target state="translated">我有这个。</target>
        </trans-unit>
        <trans-unit id="10d3efe4d19da1fb96dcc4651e5a3ce3b131b7cb" translate="yes" xml:space="preserve">
          <source>I know this is old, but, in running into a vendor that inconsistently uses 5 different date formats in their APIs (and test servers with a variety of PHP versions from the 5's through the latest 7's), I decided to write a universal converter that works with a myriad of PHP versions.</source>
          <target state="translated">我知道这是个老问题了,但是,在遇到一个供应商在他们的API中不一致地使用5种不同的日期格式(测试服务器的PHP版本从5代到最新的7代都有),我决定写一个通用的转换器,可以和无数的PHP版本一起使用。</target>
        </trans-unit>
        <trans-unit id="4cfa2ca2a67c2716e32f276c77524bd15ced7782" translate="yes" xml:space="preserve">
          <source>I think this will help...</source>
          <target state="translated">我想这个会有帮助的.....</target>
        </trans-unit>
        <trans-unit id="bea53c84ce623f8bf082c3aa6606f19eb4b8c6c4" translate="yes" xml:space="preserve">
          <source>If the timestamp you have is in milliseconds (it may end in &lt;code&gt;000&lt;/code&gt; and/or the timestamp is thirteen characters long) you will need to convert it to seconds before you can can convert it to another format. There's two ways to do this:</source>
          <target state="translated">如果您使用的时间戳是毫秒（可能以 &lt;code&gt;000&lt;/code&gt; 结尾和/或时​​间戳是13个字符长），则需要先将其转换为秒，然后才能将其转换为另一种格式。 有两种方法可以做到这一点：</target>
        </trans-unit>
        <trans-unit id="aae6015889405a09b53cab8940d5fa057a047669" translate="yes" xml:space="preserve">
          <source>If you are not transforming from one date format to another, but just want the current date (or datetime) in a specific format then it's even easier:</source>
          <target state="translated">如果你不是要从一种日期格式转换到另一种日期格式,而只是想让当前的日期(或日期时间)以特定的格式显示,那就更简单了。</target>
        </trans-unit>
        <trans-unit id="38c4b759af56854e2731695e698d1c32d7b4c983" translate="yes" xml:space="preserve">
          <source>If you're running PHP 5.2 you can use the &lt;code&gt;U&lt;/code&gt; formatting option instead:</source>
          <target state="translated">如果您运行的是PHP 5.2，则可以改用 &lt;code&gt;U&lt;/code&gt; 格式选项：</target>
        </trans-unit>
        <trans-unit id="4248b4a377be4f59b690bac95bf9e6d417681513" translate="yes" xml:space="preserve">
          <source>In PHP 5.4 we gained the ability to do class member access on instantiation has been added which allows us to turn our &lt;code&gt;DateTime()&lt;/code&gt; code into a one-liner:</source>
          <target state="translated">在PHP 5.4中，我们获得了在实例化时进行类成员访问的功能，该功能使我们可以将 &lt;code&gt;DateTime()&lt;/code&gt; 代码转换为单行代码：</target>
        </trans-unit>
        <trans-unit id="7fb3654fa534e78ba083c5c18920562d4e8e343e" translate="yes" xml:space="preserve">
          <source>Is there a simple way to convert one date format into another date format in PHP?</source>
          <target state="translated">有没有一种简单的方法可以在PHP中将一种日期格式转换为另一种日期格式?</target>
        </trans-unit>
        <trans-unit id="e73aa107f5f6e9f3f34234fa09bf9bb1eb4fb28a" translate="yes" xml:space="preserve">
          <source>Just using strings, for me is a good solution, less problems with mysql. Detects the current format and changes it if necessary, this solution is only for spanish/french format and english format, without use php datetime function.</source>
          <target state="translated">只需使用字符串,对我来说是一个很好的解决方案,少了mysql的问题。检测当前格式并在必要时修改,这个方案只针对spanishfrench格式和English格式,不使用php的datetime函数。</target>
        </trans-unit>
        <trans-unit id="ef2cb3b3168fdb4656e4c56ca5fc191eae3c711c" translate="yes" xml:space="preserve">
          <source>Keep in mind that &lt;code&gt;strtotime()&lt;/code&gt; requires the date to be in a &lt;a href=&quot;https://php.net/manual/en/datetime.formats.php&quot;&gt;valid format&lt;/a&gt;. Failure to provide a valid format will result in &lt;code&gt;strtotime()&lt;/code&gt; returning false which will cause your date to be 1969-12-31.</source>
          <target state="translated">请记住， &lt;code&gt;strtotime()&lt;/code&gt; 要求日期采用&lt;a href=&quot;https://php.net/manual/en/datetime.formats.php&quot;&gt;有效格式&lt;/a&gt; 。 无法提供有效格式将导致 &lt;code&gt;strtotime()&lt;/code&gt; 返回false，这将导致您的日期为1969-12-31。</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="5f60f78ebabe5acd857f520a5c9b9030e9c16056" translate="yes" xml:space="preserve">
          <source>Or as a one-liner:</source>
          <target state="translated">或者作为单行本。</target>
        </trans-unit>
        <trans-unit id="6ca6e1ef534908a305fe58ae0913d7f96c39a49d" translate="yes" xml:space="preserve">
          <source>Output : 2018-04-18</source>
          <target state="translated">输出:2018-04-18</target>
        </trans-unit>
        <trans-unit id="f0291b4e19300e243502db3542133d391bd3ec01" translate="yes" xml:space="preserve">
          <source>Sending null for the format will make the function return the datetime in Epoch/Unix Time. Otherwise, send any format string that date() supports, as well as with &quot;.u&quot; for milliseconds (I handle milliseconds as well, even though date() returns zeros).</source>
          <target state="translated">发送空的格式将使函数返回以EpochUnix时间为单位的日期时间。否则,发送date()支持的任何格式字符串,以及用&quot;.u &quot;表示毫秒(虽然date()会返回零,但我也会处理毫秒)。</target>
        </trans-unit>
        <trans-unit id="294a01d7779f29a9c3dfe67549306d563b8eaeba" translate="yes" xml:space="preserve">
          <source>The easiest way to do this is</source>
          <target state="translated">最简单的方法是</target>
        </trans-unit>
        <trans-unit id="ed619fce4c3922df18faa9e9c15c87290ac8d883" translate="yes" xml:space="preserve">
          <source>The following is an easy method to convert dates to different formats.</source>
          <target state="translated">以下是一个简单的方法,可以将日期转换为不同的格式。</target>
        </trans-unit>
        <trans-unit id="ed65ba104f1ccb22b0e48b76f96565a5bafa8d16" translate="yes" xml:space="preserve">
          <source>The only thing not in this version is the ability to select the time zone you want the returned datetime to be in. Originally, I wrote this to change any datetime to Epoch Time, so, I didn't need time zone support. It's trivial to add though.</source>
          <target state="translated">这个版本中唯一没有的地方是可以选择你希望返回的日期时间在哪个时区。最初,我写这个是为了把任何日期时间改成Epoch Time,所以,我不需要时区支持。虽然添加这个功能很琐碎。</target>
        </trans-unit>
        <trans-unit id="4fda8dc699c7da16a7547525a61d8fa9e965bbae" translate="yes" xml:space="preserve">
          <source>The second parameter to &lt;code&gt;date()&lt;/code&gt; needs to be a proper timestamp (seconds since January 1, 1970). You are passing a string, which date() can't recognize.</source>
          <target state="translated">&lt;code&gt;date()&lt;/code&gt; 的第二个参数必须是正确的时间戳（自1970年1月1日以来的秒数）。 您正在传递一个字符串，date（）无法识别。</target>
        </trans-unit>
        <trans-unit id="5f3f813bd56d8ecaebf9d97d8da38da1b46be9c8" translate="yes" xml:space="preserve">
          <source>The simplist way to convert one date format into another is to use &lt;a href=&quot;http://docs.php.net/manual/en/function.strtotime.php&quot;&gt;&lt;code&gt;strtotime()&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;http://docs.php.net/manual/en/function.date.php&quot;&gt;&lt;code&gt;date()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;strtotime()&lt;/code&gt; will convert the date into a &lt;a href=&quot;http://en.wikipedia.org/wiki/Unix_time&quot;&gt;Unix Timestamp&lt;/a&gt;. That Unix Timestamp can then be passed to &lt;code&gt;date()&lt;/code&gt; to convert it to the new format.</source>
          <target state="translated">将一种日期格式转换为另一种格式的简化方法是将&lt;a href=&quot;http://docs.php.net/manual/en/function.strtotime.php&quot;&gt; &lt;code&gt;strtotime()&lt;/code&gt; &lt;/a&gt;与&lt;a href=&quot;http://docs.php.net/manual/en/function.date.php&quot;&gt; &lt;code&gt;date()&lt;/code&gt; 一起使用&lt;/a&gt; 。 &lt;code&gt;strtotime()&lt;/code&gt; 会将日期转换为&lt;a href=&quot;http://en.wikipedia.org/wiki/Unix_time&quot;&gt;Unix Timestamp&lt;/a&gt; 。 然后可以将该Unix时间戳传递给 &lt;code&gt;date()&lt;/code&gt; ,以将其转换为新格式。</target>
        </trans-unit>
        <trans-unit id="e3a51b94cfd2badb2557c38227d1c994677d4b84" translate="yes" xml:space="preserve">
          <source>This also avoids the use of strtotime, which can be hard to work with at times.</source>
          <target state="translated">这也避免了strtotime的使用,有时会很难操作。</target>
        </trans-unit>
        <trans-unit id="e841dbad3ed35519f713f17667c74a7c82c44d1b" translate="yes" xml:space="preserve">
          <source>This converter will take virtually any input, including any standard datetime format (including with or without milliseconds) &lt;em&gt;and&lt;/em&gt; any Epoch Time representation (including with or without milliseconds) and convert it to virtually any other format.</source>
          <target state="translated">该转换器几乎将接受任何输入，包括任何标准日期时间格式（包括或不包括毫秒） &lt;em&gt;和&lt;/em&gt;任何时间时间表示形式（包括或不包括毫秒），并将其转换成几乎任何其他格式。</target>
        </trans-unit>
        <trans-unit id="c21fecbbfa3436423480b344512f1803fdcfafa3" translate="yes" xml:space="preserve">
          <source>This is the other way you can convert date format</source>
          <target state="translated">这是你可以转换日期格式的另一种方式。</target>
        </trans-unit>
        <trans-unit id="0eb9e97a9fab919106d7b2b105b05cb5063a0356" translate="yes" xml:space="preserve">
          <source>This native way will help to convert any inputted format to the desired format.</source>
          <target state="translated">这种原生方式将有助于将任何输入的格式转换为所需的格式。</target>
        </trans-unit>
        <trans-unit id="f9e83a69fef590c985a9942547854af908b828db" translate="yes" xml:space="preserve">
          <source>This other question also refers to the same topic: &lt;a href=&quot;https://stackoverflow.com/questions/2487921/php-convert-date-format-yyyy-mm-dd-dd-mm-yyyy-not-in-sql&quot;&gt;Convert date format yyyy-mm-dd =&amp;gt; dd-mm-yyyy&lt;/a&gt;.</source>
          <target state="translated">这个另一个问题也涉及相同的主题： &lt;a href=&quot;https://stackoverflow.com/questions/2487921/php-convert-date-format-yyyy-mm-dd-dd-mm-yyyy-not-in-sql&quot;&gt;转换日期格式yyyy-mm-dd =&amp;gt; dd-mm-yyyy&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="b810e8f3500321e20eb8369489b65bd75effc4b1" translate="yes" xml:space="preserve">
          <source>This solved for me,</source>
          <target state="translated">这为我解决了。</target>
        </trans-unit>
        <trans-unit id="a0511411d5221591603c75246c7e6ea025936524" translate="yes" xml:space="preserve">
          <source>To call it:</source>
          <target state="translated">要叫它。</target>
        </trans-unit>
        <trans-unit id="6e05b11cc6d1cb285dbc122beee98b6b0fd78c1b" translate="yes" xml:space="preserve">
          <source>To convert &lt;code&gt;$date&lt;/code&gt; from &lt;code&gt;dd-mm-yyyy hh:mm:ss&lt;/code&gt; to a proper MySQL datetime
I go like this:</source>
          <target state="translated">要将 &lt;code&gt;$date&lt;/code&gt; 从 &lt;code&gt;dd-mm-yyyy hh:mm:ss&lt;/code&gt; 转换为正确的MySQL日期时间，我会这样：</target>
        </trans-unit>
        <trans-unit id="750c43f502c0ac16279edfb8209a65fad97d0e72" translate="yes" xml:space="preserve">
          <source>To get a Unix Timestamp you can use &lt;code&gt;strtotime()&lt;/code&gt; which returns a Unix Timestamp:</source>
          <target state="translated">要获取Unix时间戳，您可以使用 &lt;code&gt;strtotime()&lt;/code&gt; 返回Unix时间戳：</target>
        </trans-unit>
        <trans-unit id="2997e78db0ffebadda510e09ad95e367281ae0d6" translate="yes" xml:space="preserve">
          <source>Trim the last three digits off using &lt;a href=&quot;http://php.net/manual/en/function.substr.php&quot;&gt;&lt;code&gt;substr()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">使用&lt;a href=&quot;http://php.net/manual/en/function.substr.php&quot;&gt; &lt;code&gt;substr()&lt;/code&gt; &lt;/a&gt;修剪掉最后三位数</target>
        </trans-unit>
        <trans-unit id="efc451724babdf5067498219d4a06790d87e31a9" translate="yes" xml:space="preserve">
          <source>Trimming the last three digits can be acheived several ways, but using &lt;code&gt;substr()&lt;/code&gt; is the easiest:</source>
          <target state="translated">可以通过几种方法来修剪最后三个数字，但是使用 &lt;code&gt;substr()&lt;/code&gt; 是最简单的：</target>
        </trans-unit>
        <trans-unit id="b21480ff457e048e3c7a6593bfb52719279e1f05" translate="yes" xml:space="preserve">
          <source>Try this:</source>
          <target state="translated">试试这个。</target>
        </trans-unit>
        <trans-unit id="fa9da9bd4b554c563d84fd169f86abd9670f6f77" translate="yes" xml:space="preserve">
          <source>Unfortunately not all dates that a developer has to work with are in a standard format. Fortunately PHP 5.3 provided us with a solution for that. &lt;a href=&quot;http://docs.php.net/manual/en/datetime.createfromformat.php&quot;&gt;&lt;code&gt;DateTime::createFromFormat()&lt;/code&gt;&lt;/a&gt; allows us to tell PHP what format a date string is in so it can be successfully parsed into a DateTime object for further manipulation.</source>
          <target state="translated">不幸的是，并非开发人员必须使用的所有日期都采用标准格式。 幸运的是，PHP 5.3为我们提供了一个解决方案。 &lt;a href=&quot;http://docs.php.net/manual/en/datetime.createfromformat.php&quot;&gt; &lt;code&gt;DateTime::createFromFormat()&lt;/code&gt; &lt;/a&gt;允许我们告诉PHP日期字符串的格式，因此可以将其成功解析为DateTime对象以进行进一步操作。</target>
        </trans-unit>
        <trans-unit id="47f904833c37b4ea2f96523cc861628420b3cff4" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://php.net/manual/en/datetime.createfromformat.php&quot;&gt;&lt;code&gt;DateTime::createFromFormat&lt;/code&gt;&lt;/a&gt;. It allows you to specify an exact mask - using the &lt;code&gt;date()&lt;/code&gt; syntax - to parse incoming string dates with.</source>
          <target state="translated">使用&lt;a href=&quot;http://php.net/manual/en/datetime.createfromformat.php&quot;&gt; &lt;code&gt;DateTime::createFromFormat&lt;/code&gt; &lt;/a&gt; 。 它允许您使用 &lt;code&gt;date()&lt;/code&gt; 语法指定精确的掩码，以解析传入的字符串日期。</target>
        </trans-unit>
        <trans-unit id="65158d295a893ea49db49b0c10b25654e8ae066b" translate="yes" xml:space="preserve">
          <source>With DateTime() you can use &lt;a href=&quot;http://php.net/manual/en/datetime.gettimestamp.php&quot;&gt;&lt;code&gt;DateTime::getTimestamp()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">使用DateTime（），您可以使用&lt;a href=&quot;http://php.net/manual/en/datetime.gettimestamp.php&quot;&gt; &lt;code&gt;DateTime::getTimestamp()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="697b012fe3e5c45ae13b0e99bb57f5874dabeb57" translate="yes" xml:space="preserve">
          <source>You are first giving it the format $dateString is in. Then you are telling it the format you want $newDateString to be in.</source>
          <target state="translated">你首先要给它$dateString的格式,然后告诉它你要$newDateString的格式。然后,你要告诉它你希望$newDateString的格式。</target>
        </trans-unit>
        <trans-unit id="4f472abbb10afffc83cc2c1d08be7869e7f25d9a" translate="yes" xml:space="preserve">
          <source>You can also convert the timestamp into seconds by dividing by 1000. Because the timestamp is too large for 32 bit systems to do math on you will need to use the &lt;a href=&quot;http://php.net/manual/en/book.bc.php&quot;&gt;BCMath&lt;/a&gt; library to do the math as strings:</source>
          <target state="translated">您还可以通过除以1000将时间戳转换为秒。由于时间戳对于32位系统而言太大，无法进行数学运算，因此您需要使用&lt;a href=&quot;http://php.net/manual/en/book.bc.php&quot;&gt;BCMath&lt;/a&gt;库以字符串形式进行数学运算：</target>
        </trans-unit>
        <trans-unit id="d0c782ab759641dfeeca3e9f41ab6c93aea3a86c" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;http://de.php.net/manual/en/function.strtotime.php&quot;&gt;&lt;strong&gt;strtotime()&lt;/strong&gt;&lt;/a&gt; to convert a date string into a timestamp. However, even strtotime() doesn't recognize the &lt;code&gt;y-m-d-h-i-s&lt;/code&gt; format.</source>
          <target state="translated">您可以使用&lt;a href=&quot;http://de.php.net/manual/en/function.strtotime.php&quot;&gt;&lt;strong&gt;strtotime（）&lt;/strong&gt;&lt;/a&gt;将日期字符串转换为时间戳。 但是，即使strtotime（）也无法识别 &lt;code&gt;y-m-d-h-i-s&lt;/code&gt; 格式。</target>
        </trans-unit>
        <trans-unit id="fcff7a54c7a41bbacb7ff5ffa25b93a804699be9" translate="yes" xml:space="preserve">
          <source>You need to convert the $old_date back into a timestamp, as the &lt;a href=&quot;http://www.php.net/manual/en/function.date.php&quot;&gt;date function&lt;/a&gt; requires a timestamp as its second argument.</source>
          <target state="translated">您需要将$ old_date转换回时间戳，因为&lt;a href=&quot;http://www.php.net/manual/en/function.date.php&quot;&gt;date函数&lt;/a&gt;需要一个时间戳作为第二个参数。</target>
        </trans-unit>
        <trans-unit id="4017038b3e5ecb4d97a1265b8f743698632aab8f" translate="yes" xml:space="preserve">
          <source>You will have to parse the elements (year, month, day, hour, minute, second) manually using &lt;code&gt;substr()&lt;/code&gt; and hand the results to &lt;a href=&quot;http://de.php.net/manual/en/function.mktime.php&quot;&gt;&lt;strong&gt;mktime()&lt;/strong&gt;&lt;/a&gt; that will build you a timestamp.</source>
          <target state="translated">您将不得不使用 &lt;code&gt;substr()&lt;/code&gt; 手动解析元素（年，月，日，时，分，秒） ，并将结果传递给&lt;a href=&quot;http://de.php.net/manual/en/function.mktime.php&quot;&gt;&lt;strong&gt;mktime（）&lt;/strong&gt;&lt;/a&gt; ，这将为您建立一个时间戳。</target>
        </trans-unit>
        <trans-unit id="9c6cba22dbf0fd099096ec8b2ad447f63146c77b" translate="yes" xml:space="preserve">
          <source>separator of time is ':'</source>
          <target state="translated">时间的分隔符是':'</target>
        </trans-unit>
        <trans-unit id="a30c6c59ad764304cd2e4fa90b870dc5c71aca70" translate="yes" xml:space="preserve">
          <source>strtotime will work that out. the dates are just not the same and all in us-format.</source>
          <target state="translated">strtotime会解决这个问题,只是日期不一样,而且都是我们的格式。</target>
        </trans-unit>
        <trans-unit id="6f7b035ba81a5523511bae90d23a493a8ff8b18c" translate="yes" xml:space="preserve">
          <source>you are doing wrong here, this should be</source>
          <target state="translated">你在这里做错了,这应该是</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
