<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/215718">
    <body>
      <group id="215718">
        <trans-unit id="b5825ff58f9e82e24d04cfda6316ecce0102dd5d" translate="yes" xml:space="preserve">
          <source>(OBS: &lt;code&gt;$file&lt;/code&gt; needs to be prefixed with &lt;code&gt;./&lt;/code&gt; if it is a relative path for &lt;code&gt;git show $revision:$file&lt;/code&gt; to work)</source>
          <target state="translated">(OBS: &lt;code&gt;$file&lt;/code&gt; должен начинаться с префикса &lt;code&gt;./&lt;/code&gt; , если это относительный путь для &lt;code&gt;git show $revision:$file&lt;/code&gt; to work)</target>
        </trans-unit>
        <trans-unit id="591b8c37c7f90285bacc6d2a2421434d66dd7763" translate="yes" xml:space="preserve">
          <source>(The second &lt;code&gt;add&lt;/code&gt; stages the file in the index, but it does &lt;em&gt;not&lt;/em&gt; get
committed.)</source>
          <target state="translated">(Второе &lt;code&gt;add&lt;/code&gt; помещает файл в индекс, но оно не фиксируется.)</target>
        </trans-unit>
        <trans-unit id="a36fc01ed773a54675b80694c5408121c02a0738" translate="yes" xml:space="preserve">
          <source>. The final history result is:</source>
          <target state="translated">.Окончательный результат по истории:</target>
        </trans-unit>
        <trans-unit id="fee3678a710ca3d67435ace9c7cfbf9bb5fbf45c" translate="yes" xml:space="preserve">
          <source>... check out the branch of changes you want to apply to the &lt;code&gt;master&lt;/code&gt; branch. The &lt;code&gt;rebase&lt;/code&gt; command takes the commits from &lt;code&gt;&amp;lt;my branch&amp;gt;&lt;/code&gt; (that are not found in &lt;code&gt;master&lt;/code&gt;) and reapplies them to the head of &lt;code&gt;master&lt;/code&gt;. In other words, the parent of the first commit in &lt;code&gt;&amp;lt;my branch&amp;gt;&lt;/code&gt; is no longer a previous commit in the &lt;code&gt;master&lt;/code&gt; history, but the current head of &lt;code&gt;master&lt;/code&gt;. The two commands are the same as:</source>
          <target state="translated">... проверить ветку изменений, которые вы хотите применить к &lt;code&gt;master&lt;/code&gt; ветке. Команда &lt;code&gt;rebase&lt;/code&gt; берет коммиты из &lt;code&gt;&amp;lt;my branch&amp;gt;&lt;/code&gt; (которые не найдены в &lt;code&gt;master&lt;/code&gt; ) и повторно применяет их к голове &lt;code&gt;master&lt;/code&gt; . Другими словами, родительский первый коммит в &lt;code&gt;&amp;lt;my branch&amp;gt;&lt;/code&gt; больше не является предыдущим коммитом в истории &lt;code&gt;master&lt;/code&gt; , а является текущим главой &lt;code&gt;master&lt;/code&gt; . Две команды такие же как:</target>
        </trans-unit>
        <trans-unit id="32457f44393ae83650a6759d1be7de7ec9b74db0" translate="yes" xml:space="preserve">
          <source>... do a fast-forward merge to apply all &lt;code&gt;&amp;lt;my branch&amp;gt;&lt;/code&gt; changes onto &lt;code&gt;master&lt;/code&gt;. Without this step, the rebase commit does not get added to &lt;code&gt;master&lt;/code&gt;. The final result is:</source>
          <target state="translated">... выполнить ускоренное слияние, чтобы применить все изменения &lt;code&gt;&amp;lt;my branch&amp;gt;&lt;/code&gt; к &lt;code&gt;master&lt;/code&gt; . Без этого шага коммит ребаз не будет добавлен в &lt;code&gt;master&lt;/code&gt; . Окончательный результат:</target>
        </trans-unit>
        <trans-unit id="2caad0f2173d2d655cbc3c0c173dfe1327ac0aac" translate="yes" xml:space="preserve">
          <source>1.&lt;code&gt;git checkout file.txt&lt;/code&gt; : this will remove local changes, if you don't need them</source>
          <target state="translated">1. &lt;code&gt;git checkout file.txt&lt;/code&gt; : это удалит локальные изменения, если они вам не нужны</target>
        </trans-unit>
        <trans-unit id="df790f400c1cc6b2a08aa71acda622ee4bd096a0" translate="yes" xml:space="preserve">
          <source>2.&lt;code&gt;git checkout abc1 file.txt&lt;/code&gt; : this will bring your file to your &lt;em&gt;wanted&lt;/em&gt; version</source>
          <target state="translated">2. &lt;code&gt;git checkout abc1 file.txt&lt;/code&gt; : это переведет ваш файл в нужную вам версию.</target>
        </trans-unit>
        <trans-unit id="96eceaf7f9624a618629e12754e8271e7f08f999" translate="yes" xml:space="preserve">
          <source>2.Git revert file to a specific branch</source>
          <target state="translated">2.Git возвращает файл в определённую ветку.</target>
        </trans-unit>
        <trans-unit id="38874695380346721a7604681b87c1e9c7fe8a27" translate="yes" xml:space="preserve">
          <source>3.&lt;code&gt;git commit -m &quot;Restored file.txt to version abc1&quot;&lt;/code&gt; : this will commit your reversion.</source>
          <target state="translated">3. &lt;code&gt;git commit -m &quot;Restored file.txt to version abc1&quot;&lt;/code&gt; : это совершит ваш возврат.</target>
        </trans-unit>
        <trans-unit id="7cf714c2624816bb516ad8b391c6b93811919927" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Git checkout ./foo&lt;/code&gt; means revert path &lt;code&gt;./foo&lt;/code&gt; from the &lt;strong&gt;index&lt;/strong&gt;;
adding &lt;code&gt;HEAD&lt;/code&gt; instructs Git to revert that path in the index to its
&lt;code&gt;HEAD&lt;/code&gt; revision before doing so.</source>
          <target state="translated">&lt;code&gt;Git checkout ./foo&lt;/code&gt; означает вернуть путь &lt;code&gt;./foo&lt;/code&gt; из &lt;strong&gt;индекса&lt;/strong&gt; ; добавление &lt;code&gt;HEAD&lt;/code&gt; указывает Git перед тем, как сделать это, чтобы вернуть этот путь в индексе к его ревизии &lt;code&gt;HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b204ed8a47fce3eb889e67797fb2a6c5c18ba160" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add &amp;lt;file_i_want_to_revert&amp;gt;&lt;/code&gt; &amp;amp;&amp;amp; &lt;code&gt;git commit -m 'reverting file'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;git add &amp;lt;file_i_want_to_revert&amp;gt;&lt;/code&gt; &amp;amp;&amp;amp; &lt;code&gt;git commit -m 'reverting file'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d250d674ef27174ace7c324f83e3c1fabd51414" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git push&lt;/code&gt; : this will push everything on the remote repository</source>
          <target state="translated">&lt;code&gt;git push&lt;/code&gt; : это будет толкать все в удаленном хранилище</target>
        </trans-unit>
        <trans-unit id="efed4d6b61f93b94ee297db82a715a90aa7d15ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;master&lt;/code&gt; and &lt;code&gt;&amp;lt;my branch&amp;gt;&lt;/code&gt; both reference &lt;code&gt;B'&lt;/code&gt;. Also, from this point it is safe to delete the &lt;code&gt;&amp;lt;my branch&amp;gt;&lt;/code&gt; reference.</source>
          <target state="translated">&lt;code&gt;master&lt;/code&gt; и &lt;code&gt;&amp;lt;my branch&amp;gt;&lt;/code&gt; оба ссылаются на &lt;code&gt;B'&lt;/code&gt; . Кроме того, с этого момента можно безопасно удалить ссылку &lt;code&gt;&amp;lt;my branch&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="258460c32a16b76b3e60476dbbd3ff002a43cc10" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Essentially, all that one would manually do in this situation,&lt;br/&gt;
wrapped-up in one beautiful, efficient git-alias - &lt;strong&gt;&lt;a href=&quot;http://thecodeartist.blogspot.in/2015/04/git-prevision-checkout-previous-version-of-file.html&quot;&gt;git-prevision&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;По сути, все, что можно было бы сделать вручную в этой ситуации,&lt;/em&gt; &lt;em&gt;&lt;br/&gt;&lt;/em&gt; &lt;em&gt;завернутый в один красивый, эффективный git-псевдоним - &lt;strong&gt;&lt;a href=&quot;http://thecodeartist.blogspot.in/2015/04/git-prevision-checkout-previous-version-of-file.html&quot;&gt;git-prevision&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf46ceae77448799296a4e0af15b5ca191315bd7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Now say that I messed up something in the file &lt;code&gt;file.txt&lt;/code&gt; and I want to go back to a previous commit &lt;code&gt;abc1&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Теперь скажите, что я что-то &lt;code&gt;file.txt&lt;/code&gt; в файле file.txt, и я хочу вернуться к предыдущему &lt;code&gt;abc1&lt;/code&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="36972d770d4324031e868adb718961ad2fedeaad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What you need to type in your terminal&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Что нужно набрать в своем терминале&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="477090777cdde6459cd1f1f2a79835ec1d98bc30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;You can do it in 4 steps:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Вы можете сделать это в 4 этапа:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b7bb5a088ff06aeaacfda92e37bebcb8cad6aa6" translate="yes" xml:space="preserve">
          <source>A good workflow for managaging waypoints is to use tags to cleanly mark points in your timeline. I can't quite understand your last sentence but what you may want is diverge a branch from a previous point in time. To do this, use the handy checkout command:</source>
          <target state="translated">Хорошим рабочим процессом для управления путевыми точками является использование тегов для чистой маркировки точек на временной шкале.Я не совсем понимаю ваше последнее предложение,но,возможно,вы захотите,чтобы ветка отличалась от предыдущей точки во времени.Для этого используйте удобную команду извлечения:</target>
        </trans-unit>
        <trans-unit id="56d824866a6d08aa48ffad391812836d6ee7590c" translate="yes" xml:space="preserve">
          <source>Add the following to your &lt;code&gt;gitconfig&lt;/code&gt;</source>
          <target state="translated">Добавьте следующее в ваш &lt;code&gt;gitconfig&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d6794f540c9383b891b6eb812b82b44e41bc8136" translate="yes" xml:space="preserve">
          <source>Amusingly, &lt;code&gt;git checkout foo&lt;/code&gt; will not work if the working copy is in a directory named &lt;code&gt;foo&lt;/code&gt;; however, both &lt;code&gt;git checkout HEAD foo&lt;/code&gt; and &lt;code&gt;git checkout ./foo&lt;/code&gt; will:</source>
          <target state="translated">Забавно, но &lt;code&gt;git checkout foo&lt;/code&gt; не будет работать, если рабочая копия находится в каталоге с именем &lt;code&gt;foo&lt;/code&gt; ; однако, как &lt;code&gt;git checkout HEAD foo&lt;/code&gt; ,так и &lt;code&gt;git checkout ./foo&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="266b50f277a5694518b6bfdc6e42edebb1af0559" translate="yes" xml:space="preserve">
          <source>And also, I use this a lot just to see a particular version temporarily:</source>
          <target state="translated">И еще,я часто использую это только для того,чтобы временно увидеть конкретную версию:</target>
        </trans-unit>
        <trans-unit id="676448f80335a1ff6b3b72a7a46372f78112e20d" translate="yes" xml:space="preserve">
          <source>And the even more weird:</source>
          <target state="translated">И тем более странно:</target>
        </trans-unit>
        <trans-unit id="d9cbf88d398665d3532ddefd0bccf8862f319fdf" translate="yes" xml:space="preserve">
          <source>And to revert to last committed version, which is most frequently needed, you can use this simpler command.</source>
          <target state="translated">А чтобы вернуться к последней зафиксированной версии,которая нужна чаще всего,можно воспользоваться этой более простой командой.</target>
        </trans-unit>
        <trans-unit id="2e7c984a77366a93c0e580d56e9199c8b8fd1c66" translate="yes" xml:space="preserve">
          <source>Armed with the knowledge that a commit can have two parents in the case of a merge, you should know that HEAD^1 is the first parent and HEAD~1 is the second parent.</source>
          <target state="translated">Вооружившись знанием того,что коммит может иметь двух родителей в случае слияния,вы должны знать,что HEAD^1-это первый родитель,а HEAD~1-это второй родитель.</target>
        </trans-unit>
        <trans-unit id="7af4315327fae43e58172c56db0d71c9f137aef4" translate="yes" xml:space="preserve">
          <source>As a side note, I've always been uncomfortable with this command because it's used for both ordinary things (changing between branches) and unusual, destructive things (discarding changes in the working directory).</source>
          <target state="translated">На заметку,мне всегда было неудобно с этой командой,потому что она используется как для обычных вещей (переключение между ветвями),так и для необычных,разрушительных вещей (отбрасывание изменений в рабочем каталоге).</target>
        </trans-unit>
        <trans-unit id="f982352059af8695b664ee28e5af660998d5bb71" translate="yes" xml:space="preserve">
          <source>As of git v2.23.0 there's a new &lt;a href=&quot;https://git-scm.com/docs/git-restore/2.23.0&quot;&gt;git restore&lt;/a&gt; method which is supposed to assume part of what &lt;code&gt;git checkout&lt;/code&gt; was responsible for (even the accepted answer mentions that &lt;code&gt;git checkout&lt;/code&gt; is quite confusing). See highlights of changes on &lt;a href=&quot;https://github.blog/2019-08-16-highlights-from-git-2-23/&quot;&gt;github blog&lt;/a&gt;.</source>
          <target state="translated">Начиная с git v2.23.0, появился новый метод &lt;a href=&quot;https://git-scm.com/docs/git-restore/2.23.0&quot;&gt;восстановления git,&lt;/a&gt; который должен предполагать, что за часть &lt;code&gt;git checkout&lt;/code&gt; была возложена ответственность (даже в принятом ответе упоминается, что &lt;code&gt;git checkout&lt;/code&gt; довольно запутанный). Смотрите основные изменения в &lt;a href=&quot;https://github.blog/2019-08-16-highlights-from-git-2-23/&quot;&gt;блоге GitHub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="23294bad7c9328074d6b716db4fb480963f166ef" translate="yes" xml:space="preserve">
          <source>Assume you have</source>
          <target state="translated">Предположим,у вас есть</target>
        </trans-unit>
        <trans-unit id="a33c8a8992133dbbe4b62c8221bb6de59f96f4f8" translate="yes" xml:space="preserve">
          <source>Assuming the hash of the commit you want is &lt;code&gt;c5f567&lt;/code&gt;:</source>
          <target state="translated">Предполагая, что хеш коммита, который вы хотите, &lt;code&gt;c5f567&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="56efa7fa07f7ffa350b60f738f48cb45a284b4e2" translate="yes" xml:space="preserve">
          <source>Basically, it will first generate a patch corresponding to the changes you want to revert, and then reverse-apply the patch to drop those changes.</source>
          <target state="translated">По сути,сначала он сгенерирует патч,соответствующий изменениям,которые вы хотите вернуть,а затем обратно применит патч,чтобы сбросить эти изменения.</target>
        </trans-unit>
        <trans-unit id="ad80726ef525640c921576661fe867ad82814162" translate="yes" xml:space="preserve">
          <source>Between the step 2 and 3 of course you can do &lt;code&gt;git status&lt;/code&gt; to understand what is going on. Usually you should see the &lt;code&gt;file.txt&lt;/code&gt; already added and that is why there is no need of a &lt;code&gt;git add&lt;/code&gt;.</source>
          <target state="translated">Между шагами 2 и 3, конечно, вы можете сделать &lt;code&gt;git status&lt;/code&gt; , чтобы понять, что происходит. Обычно вы должны видеть, что &lt;code&gt;file.txt&lt;/code&gt; уже добавлен, и поэтому нет необходимости в &lt;code&gt;git add&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="782a5604779a6c00915a15ade9bc687e5dc344ff" translate="yes" xml:space="preserve">
          <source>Either will work if there is only one parent in the tree.</source>
          <target state="translated">И то,и другое сработает,если в дереве есть только один родитель.</target>
        </trans-unit>
        <trans-unit id="17102f52fd3cce62fad05455a0f2d18055a91b76" translate="yes" xml:space="preserve">
          <source>First Reset Head For Target File</source>
          <target state="translated">Первая головка сброса для целевого файла</target>
        </trans-unit>
        <trans-unit id="bfdcc24a2297f1b4d866b8b4d6324466d26a0752" translate="yes" xml:space="preserve">
          <source>For example, to checkout the immediate previous revision of a single file &lt;code&gt;x/y/z.c&lt;/code&gt;, run</source>
          <target state="translated">Например, чтобы получить немедленную предыдущую версию отдельного файла &lt;code&gt;x/y/z.c&lt;/code&gt; , запустите</target>
        </trans-unit>
        <trans-unit id="aa9087013701645fca0b992c3de18a64b8371eda" translate="yes" xml:space="preserve">
          <source>For me none of the reply seemed really clear and therefore I would like to add mine which seems super easy.</source>
          <target state="translated">Для меня ни один ответ не показался действительно ясным,и поэтому я хотел бы добавить свой,который кажется супер простым.</target>
        </trans-unit>
        <trans-unit id="33a7a08d0236981d7881b666b88d31938cad645f" translate="yes" xml:space="preserve">
          <source>Git revert file to a specific commit</source>
          <target state="translated">Git возвращает файл к определённому коммиту</target>
        </trans-unit>
        <trans-unit id="c54a4fcc2bb35f19be56660c8cf2efdd74d4b12e" translate="yes" xml:space="preserve">
          <source>Here's how &lt;code&gt;rebase&lt;/code&gt; works:</source>
          <target state="translated">Вот как работает &lt;code&gt;rebase&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="34e88036c4b6ee76e0310acd3938ebc58d579ad3" translate="yes" xml:space="preserve">
          <source>How can I reset or revert a file to a specific revision</source>
          <target state="translated">Как сбросить или вернуть файл к определенной ревизии</target>
        </trans-unit>
        <trans-unit id="28a5668453816bf78805f2d7389b310f348f6c21" translate="yes" xml:space="preserve">
          <source>How git prevision works?</source>
          <target state="translated">Как работает git prevision?</target>
        </trans-unit>
        <trans-unit id="a31a4172bb80c1e2c39c01e2f486f436e980bb1b" translate="yes" xml:space="preserve">
          <source>I had the same issue just now and I found &lt;a href=&quot;https://stackoverflow.com/questions/725749/how-would-you-go-about-reverting-a-single-file-to-previous-commit-state-using-git/727725#727725&quot;&gt;this answer&lt;/a&gt; easiest to understand (&lt;code&gt;commit-ref&lt;/code&gt; is the SHA value of the change in the log you want to go back to):</source>
          <target state="translated">У меня была такая же проблема только сейчас, и я нашел &lt;a href=&quot;https://stackoverflow.com/questions/725749/how-would-you-go-about-reverting-a-single-file-to-previous-commit-state-using-git/727725#727725&quot;&gt;этот ответ&lt;/a&gt; наиболее простым для понимания ( &lt;code&gt;commit-ref&lt;/code&gt; - значение SHA изменения в журнале, к которому вы хотите вернуться):</target>
        </trans-unit>
        <trans-unit id="c482061f28ab6cfd966c23ba70b6c8386d0bc31f" translate="yes" xml:space="preserve">
          <source>I have a commit &lt;code&gt;abc1&lt;/code&gt; and after it I have done several (or one modification) to a file &lt;code&gt;file.txt&lt;/code&gt;.</source>
          <target state="translated">У меня есть коммит &lt;code&gt;abc1&lt;/code&gt; и после него я сделал несколько (или одну модификацию) файла &lt;code&gt;file.txt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07db4bd64374279d69677172755ef734ce8ed408" translate="yes" xml:space="preserve">
          <source>I have done a &lt;code&gt;git log&lt;/code&gt; along with a &lt;code&gt;git diff&lt;/code&gt; to find the revision I need, but just have no idea how to get the file back to its former state in the past.</source>
          <target state="translated">Я сделал &lt;code&gt;git log&lt;/code&gt; вместе с &lt;code&gt;git diff&lt;/code&gt; , чтобы найти нужную мне ревизию, но просто не знаю, как вернуть файл в прежнее состояние в прошлом.</target>
        </trans-unit>
        <trans-unit id="ed87c4bc9d2291fea23c1be89e2820e43eb50040" translate="yes" xml:space="preserve">
          <source>I have made some changes to a file which has been committed a few times as part of a group of files, but now want to reset/revert the changes on it back to a previous version.</source>
          <target state="translated">Я внес некоторые изменения в файл,который был зафиксирован несколько раз как часть группы файлов,но теперь хочу сбросить изменения на нем обратно в предыдущую версию.</target>
        </trans-unit>
        <trans-unit id="24e2abbca211d54018b0666cfb95a48ea4571e8b" translate="yes" xml:space="preserve">
          <source>I have to plug &lt;a href=&quot;https://people.gnome.org/~newren/eg/&quot;&gt;EasyGit&lt;/a&gt; here, which is a wrapper to make git more approachable to novices without confusing seasoned users. One of the things it does is &lt;a href=&quot;http://www.gnome.org/~newren/eg/git-eg-differences.html#revert&quot;&gt;give more meanings to &lt;code&gt;git revert&lt;/code&gt;&lt;/a&gt;. In this case, you would simply say:</source>
          <target state="translated">Здесь я должен подключить &lt;a href=&quot;https://people.gnome.org/~newren/eg/&quot;&gt;EasyGit&lt;/a&gt; , который является оболочкой, чтобы сделать git более доступным для новичков, не запутывая опытных пользователей. Одна из вещей, которые он делает, это &lt;a href=&quot;http://www.gnome.org/~newren/eg/git-eg-differences.html#revert&quot;&gt;дает больше смысла, чтобы &lt;code&gt;git revert&lt;/code&gt; &lt;/a&gt; . В этом случае вы бы просто сказали:</target>
        </trans-unit>
        <trans-unit id="7a7a661de7f3b1fa4ca1341e6a3ca072bff7ff72" translate="yes" xml:space="preserve">
          <source>I think I've found it....from &lt;a href=&quot;http://www-cs-students.stanford.edu/~blynn/gitmagic/ch02.html&quot;&gt;http://www-cs-students.stanford.edu/~blynn/gitmagic/ch02.html&lt;/a&gt;</source>
          <target state="translated">Я думаю, что я нашел это от &lt;a href=&quot;http://www-cs-students.stanford.edu/~blynn/gitmagic/ch02.html&quot;&gt;http://www-cs-students.stanford.edu/~blynn/gitmagic/ch02.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb4b101b427252c1c19d2cc0a0b6e7e25e1a660e" translate="yes" xml:space="preserve">
          <source>Ian</source>
          <target state="translated">Ian</target>
        </trans-unit>
        <trans-unit id="1f01d64d9e95619b3479c465f76dacf05ab7a0f9" translate="yes" xml:space="preserve">
          <source>If  you want to get rid of the changes both the second and the third iteration, it is very simple:</source>
          <target state="translated">Если вы хотите избавиться от изменений как во второй,так и в третьей итерации,то это очень просто:</target>
        </trans-unit>
        <trans-unit id="5ee5f95b6ab776d625e41b6694a827c71b0ca6a0" translate="yes" xml:space="preserve">
          <source>If you just need to go back to the last commited version</source>
          <target state="translated">Если тебе просто нужно вернуться к последней коммитированной версии...</target>
        </trans-unit>
        <trans-unit id="b47839b0ffeee7daaba954b42b6fddbba5089814" translate="yes" xml:space="preserve">
          <source>If you know how many commits you need to go back, you can use:</source>
          <target state="translated">Если вы знаете,сколько коммитов вам нужно вернуть,вы можете использовать:</target>
        </trans-unit>
        <trans-unit id="c450c6eaa44851942bbf746ba2c07e78f9b5b024" translate="yes" xml:space="preserve">
          <source>If you want to revert changes from one commit on a single file only, just as &lt;code&gt;git revert&lt;/code&gt; would do but only for one file (or say a subset of the commit files), I suggest to use both &lt;code&gt;git diff&lt;/code&gt; and &lt;code&gt;git apply&lt;/code&gt; like that (with &lt;code&gt;&amp;lt;sha&amp;gt;&lt;/code&gt; = the hash of the commit you want to revert) :</source>
          <target state="translated">Если вы хотите отменить изменения из одного коммита только для одного файла, так же, как это сделал бы &lt;code&gt;git revert&lt;/code&gt; , но только для одного файла (или, скажем, подмножества файлов коммитов), я предлагаю использовать как &lt;code&gt;git diff&lt;/code&gt; ,так и &lt;code&gt;git apply&lt;/code&gt; таким образом ( с &lt;code&gt;&amp;lt;sha&amp;gt;&lt;/code&gt; = хешем коммита, который вы хотите вернуть):</target>
        </trans-unit>
        <trans-unit id="dff44a3840f7c7129778d6db8cbb9b408316a939" translate="yes" xml:space="preserve">
          <source>If you want to revert to the commit before &lt;code&gt;c5f567&lt;/code&gt;, append &lt;code&gt;~1&lt;/code&gt; (where 1 is the number of commits you want to go back, it can be anything):</source>
          <target state="translated">Если вы хотите вернуться к фиксации до &lt;code&gt;c5f567&lt;/code&gt; , добавьте &lt;code&gt;~1&lt;/code&gt; (где 1 - количество коммитов , которые вы хотите вернуть, это может быть что угодно):</target>
        </trans-unit>
        <trans-unit id="5894247679b1b7d420a38142c3019e2429a5b142" translate="yes" xml:space="preserve">
          <source>In order to go to a previous commit version of the file, get the commit number, say eb917a1
then</source>
          <target state="translated">Чтобы перейти к предыдущей версии коммита,получите номер коммита,скажем,eb917a1,затем</target>
        </trans-unit>
        <trans-unit id="6f7b7fb7f08216536d8432551fbfd4b32855cb8e" translate="yes" xml:space="preserve">
          <source>In the case that you want to revert a file to a previous commit (and the file you want to revert already committed) you can use</source>
          <target state="translated">В случае,если вы хотите вернуть файл в предыдущую фиксацию (а файл,который вы хотите вернуть в предыдущую фиксацию,уже зафиксирован),вы можете воспользоваться функцией</target>
        </trans-unit>
        <trans-unit id="d9f77d9f0d4306c8fffa8b85a2a4b66f96cadd9f" translate="yes" xml:space="preserve">
          <source>It might be easier to remember this command as both the &quot;base&quot; and &quot;modify&quot; branches are explicit.</source>
          <target state="translated">Возможно,эту команду будет проще запомнить,так как и &quot;базовая&quot; и &quot;модифицируемая&quot; ветки явно выражены.</target>
        </trans-unit>
        <trans-unit id="b789119370256ad6dfc91f751f31a3f0970704bf" translate="yes" xml:space="preserve">
          <source>Many answers here claims to use &lt;code&gt;git reset ... &amp;lt;file&amp;gt;&lt;/code&gt; or &lt;code&gt;git checkout ... &amp;lt;file&amp;gt;&lt;/code&gt; but by doing so, you will loose every modifications on &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; committed after the commit you want to revert.</source>
          <target state="translated">Многие ответы здесь утверждают, что используют &lt;code&gt;git reset ... &amp;lt;file&amp;gt;&lt;/code&gt; или &lt;code&gt;git checkout ... &amp;lt;file&amp;gt;&lt;/code&gt; но при этом вы потеряете все изменения в &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; , зафиксированные после коммита, который вы хотите отменить.</target>
        </trans-unit>
        <trans-unit id="25427e58a2647e826b13b2ecd001be46b0498741" translate="yes" xml:space="preserve">
          <source>Many suggestions here, most along the lines of &lt;code&gt;git checkout $revision -- $file&lt;/code&gt;. A couple of obscure alternatives:</source>
          <target state="translated">Здесь много предложений, большинство из них в духе &lt;code&gt;git checkout $revision -- $file&lt;/code&gt; . Пара неясных альтернатив:</target>
        </trans-unit>
        <trans-unit id="9e22435ae74aa5d90740e1410b3c5d93a6ad9762" translate="yes" xml:space="preserve">
          <source>Next, type:</source>
          <target state="translated">Следующий,набирай:</target>
        </trans-unit>
        <trans-unit id="d04438c2ef16c8c18441030c74f69673367ffd85" translate="yes" xml:space="preserve">
          <source>Note that whoever created commit $B may not have been very disciplined and may have committed totally unrelated change in the same commit, and this revert may touch files other than &lt;em&gt;file&lt;/em&gt; you see offending changes, so you may want to check the result carefully after doing so.</source>
          <target state="translated">Обратите внимание, что тот, кто создал коммит $ B, возможно, не был очень дисциплинированным и мог совершить совершенно несвязанное изменение в том же коммите, и этот возврат может коснуться файлов, отличных от &lt;em&gt;файла, в котором&lt;/em&gt; вы видите оскорбительные изменения, поэтому вы можете тщательно проверить результат после выполнения так.</target>
        </trans-unit>
        <trans-unit id="eaa89032148588bf6becd5929ad147db4791f55e" translate="yes" xml:space="preserve">
          <source>Note, however, that &lt;code&gt;git checkout ./foo&lt;/code&gt; and &lt;code&gt;git checkout HEAD ./foo&lt;/code&gt;
are not &lt;strong&gt;exactly&lt;/strong&gt; the same thing; case in point:</source>
          <target state="translated">Однако обратите внимание, что &lt;code&gt;git checkout ./foo&lt;/code&gt; и &lt;code&gt;git checkout HEAD ./foo&lt;/code&gt; - это не одно и то же; Дело в точке:</target>
        </trans-unit>
        <trans-unit id="99b005577479ff4803b3a3f975beb3eb985c1f44" translate="yes" xml:space="preserve">
          <source>Note: Do not forget to type the hash before the last one. Last hash points your current position (HEAD) and changes nothing.</source>
          <target state="translated">Примечание:Не забудьте набрать хэш перед последним.Последний хэш указывает на вашу текущую позицию (HEAD)и ничего не меняет.</target>
        </trans-unit>
        <trans-unit id="fc2161f6412078a566333e0dff9e1c59245fa40b" translate="yes" xml:space="preserve">
          <source>Obviously someone either needs to write an intelligible book on git, or git needs to be better explained in the documentation.  Faced with this same problem I guessed that</source>
          <target state="translated">Очевидно,что кто-то должен либо написать понятную книгу о git'е,либо лучше объяснить git'е в документации.Столкнувшись с той же проблемой,я догадался,что</target>
        </trans-unit>
        <trans-unit id="36ff88d15f466bbdf074101531f8e7fd40a41063" translate="yes" xml:space="preserve">
          <source>Of course, it shall not work if reverted lines had been modified by any commit between &lt;code&gt;&amp;lt;sha1&amp;gt;&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt; (conflict).</source>
          <target state="translated">Конечно, он не будет работать, если измененные строки были изменены каким-либо коммитом между &lt;code&gt;&amp;lt;sha1&amp;gt;&lt;/code&gt; и &lt;code&gt;HEAD&lt;/code&gt; (конфликт).</target>
        </trans-unit>
        <trans-unit id="e835ae5df71dd85f545c0df325e20833f5e4d7d2" translate="yes" xml:space="preserve">
          <source>On the other hand, what you meant is to get rid of the change the second iteration (i.e. commit $B) brought in, while keeping what commit $C did to the file, you would want to revert $B</source>
          <target state="translated">С другой стороны,вы хотели избавиться от изменений,внесённых во вторую итерацию (т.е.зафиксировать $B),сохраняя при этом то,что сделала фиксация $C с файлом,вы захотите вернуть $B</target>
        </trans-unit>
        <trans-unit id="bfdc07321aeb66a2cb401379cbd9a906f8c01f90" translate="yes" xml:space="preserve">
          <source>Or if you want to restore to the content of one commit before c5f567:</source>
          <target state="translated">Или если вы хотите восстановить содержимое одного коммита до c5f567:</target>
        </trans-unit>
        <trans-unit id="5aee3fa460fb5bbeba7d99fec0866d0d23d74cf1" translate="yes" xml:space="preserve">
          <source>Second Checkout That File</source>
          <target state="translated">Вторая проверка этого файла</target>
        </trans-unit>
        <trans-unit id="74101dc7ded8d843039da0a5ce4cf311f55c53cb" translate="yes" xml:space="preserve">
          <source>So based on Greg Hewgill's answer (assuming the commit hash is &lt;code&gt;c5f567&lt;/code&gt;) the command would look like this:</source>
          <target state="translated">Таким образом, основываясь на ответе Грега Хьюгилла (предполагая, что хеш коммита равен &lt;code&gt;c5f567&lt;/code&gt; ), команда будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="9295d6be53a6a7084c6333657fcfa2a14c7e58da" translate="yes" xml:space="preserve">
          <source>Sometimes you just want to go back and forget about every change past a certain point because they're all wrong.</source>
          <target state="translated">Иногда ты просто хочешь вернуться и забыть о каждом изменении,прошедшем определенный момент,потому что все они неправильные.</target>
        </trans-unit>
        <trans-unit id="7f83df967576e38e44e02d4157f199b4088a5d46" translate="yes" xml:space="preserve">
          <source>Start with:</source>
          <target state="translated">Начни с:</target>
        </trans-unit>
        <trans-unit id="7248f99234c1000d0a84df4ff79e22c0ba5db38b" translate="yes" xml:space="preserve">
          <source>That doesn't solve your problem, if you want to revert a change in a specific file and that commit changed more than that file.</source>
          <target state="translated">Это не решает вашу проблему,если вы хотите вернуть изменение в определённый файл,и этот коммит изменился больше,чем этот файл.</target>
        </trans-unit>
        <trans-unit id="41bcc0642be854b987ab1a7f8ef8efd1aba1113a" translate="yes" xml:space="preserve">
          <source>That will reset &lt;code&gt;foo&lt;/code&gt; to HEAD. You can also:</source>
          <target state="translated">Это сбросит &lt;code&gt;foo&lt;/code&gt; в HEAD. Вы также можете:</target>
        </trans-unit>
        <trans-unit id="79ce4f5089dbc29683f3c3193ca4505cdbd8b064" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://git-scm.com/docs/git-checkout&quot;&gt;git checkout&lt;/a&gt; man page gives more information.</source>
          <target state="translated">Страница &lt;a href=&quot;https://git-scm.com/docs/git-checkout&quot;&gt;руководства git checkout&lt;/a&gt; дает больше информации.</target>
        </trans-unit>
        <trans-unit id="c435417cc37b27db84bf6bef140224f6410e3f26" translate="yes" xml:space="preserve">
          <source>The command basically</source>
          <target state="translated">Команда в основном</target>
        </trans-unit>
        <trans-unit id="eb1c80dddaaf5fe9a02dd77be570833e1a09f3b9" translate="yes" xml:space="preserve">
          <source>The default behaviour of this command is to restore the state of a working tree with the content coming from the &lt;code&gt;source&lt;/code&gt; parameter (which in your case will be a commit hash).</source>
          <target state="translated">Поведение этой команды по умолчанию заключается в восстановлении состояния рабочего дерева с содержимым, исходящим из параметра &lt;code&gt;source&lt;/code&gt; (который в вашем случае будет хешем коммита).</target>
        </trans-unit>
        <trans-unit id="a979c03a53462e7a71d762726857558bc4feb921" translate="yes" xml:space="preserve">
          <source>The final two commands ...</source>
          <target state="translated">Последние две команды...</target>
        </trans-unit>
        <trans-unit id="71d786c97f3c8c3dabbf5a6c1aa5932ca628335d" translate="yes" xml:space="preserve">
          <source>The first two commands ...
commit
    git checkout 
    git rebase master</source>
          <target state="translated">Первые две команды...зафиксируйте мастер перезагрузки git'а.</target>
        </trans-unit>
        <trans-unit id="35888d1979e5d94dc9b4782517736b618d84d4f3" translate="yes" xml:space="preserve">
          <source>Then commit the change:</source>
          <target state="translated">Тогда сделай сдачу:</target>
        </trans-unit>
        <trans-unit id="4a43dbba5992c5ed5f8717bfda1566bfa1acd8f4" translate="yes" xml:space="preserve">
          <source>Then just stage and commit the &quot;new&quot; version.</source>
          <target state="translated">Тогда просто организуйте и зафиксируйте &quot;новую&quot; версию.</target>
        </trans-unit>
        <trans-unit id="1408c710688c5aa2a404f03246c0f0bbc8987f44" translate="yes" xml:space="preserve">
          <source>Then to revert a specific file to that commit use the reset command:</source>
          <target state="translated">Затем,чтобы вернуть определенный файл в этот фиксатор,используйте команду сброса:</target>
        </trans-unit>
        <trans-unit id="9298d629c1eee64bd276738a0f7aa9d97e72e801" translate="yes" xml:space="preserve">
          <source>This assumes that you're on the &lt;code&gt;master&lt;/code&gt; branch, and the version you want is 5 commits back.</source>
          <target state="translated">Это предполагает, что вы находитесь в &lt;code&gt;master&lt;/code&gt; ветке, и версия, которую вы хотите - 5 коммитов назад.</target>
        </trans-unit>
        <trans-unit id="8565382ac72e993b2eb3fd4502841b727ad56795" translate="yes" xml:space="preserve">
          <source>This is a very simple step. Checkout file to the commit id we want, here one commit id before, and then just git commit amend and we are done.</source>
          <target state="translated">Это очень простой шаг.Загрузите файл на нужный нам коммит-ид,вот один коммит-ид до этого,а затем просто git'овский коммит-изменение,и мы закончим.</target>
        </trans-unit>
        <trans-unit id="ada69ffef4385015a61c2ce8074ed2c46fb7dac9" translate="yes" xml:space="preserve">
          <source>This is very handy. If we want to bring any file to any prior commit id at the top of commit, we can easily do.</source>
          <target state="translated">Это очень удобно.Если мы хотим перенести любой файл на любой предыдущий коммит в верхней части коммита,мы можем легко это сделать.</target>
        </trans-unit>
        <trans-unit id="1d896a6d995583b5a1820af56009733ca4701bf7" translate="yes" xml:space="preserve">
          <source>This will put that old version in your working directory and from there you can commit it if you want.</source>
          <target state="translated">Это поместит старую версию в ваш рабочий каталог,и оттуда вы сможете зафиксировать ее,если захотите.</target>
        </trans-unit>
        <trans-unit id="03ec1fde279ea516b88fb87f6e809d7e1818fe18" translate="yes" xml:space="preserve">
          <source>This will simply take you to the last committed state of the file</source>
          <target state="translated">Это просто приведет вас к последнему зафиксированному состоянию файла.</target>
        </trans-unit>
        <trans-unit id="ea818889737bcbfb88dad12f938a46c07380ce2a" translate="yes" xml:space="preserve">
          <source>This worked for me:</source>
          <target state="translated">Это сработало на меня:</target>
        </trans-unit>
        <trans-unit id="c134e9370f9e75b44dbecba00222000df80a9011" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git log&lt;/code&gt; to obtain the hash key for specific version and then use &lt;code&gt;git checkout &amp;lt;hashkey&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Используйте &lt;code&gt;git log&lt;/code&gt; , чтобы получить ключ хеша для конкретной версии, а затем используйте &lt;code&gt;git checkout &amp;lt;hashkey&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a591a1721e5fbf13786b3ca56695e4edb0c59652" translate="yes" xml:space="preserve">
          <source>Will revert a given commit.  It sounds like you think &lt;code&gt;git revert&lt;/code&gt; only affects the most recent commit.</source>
          <target state="translated">Вернет данный коммит. Похоже, вы думаете, что &lt;code&gt;git revert&lt;/code&gt; влияет только на самый последний коммит.</target>
        </trans-unit>
        <trans-unit id="69c1097eea16f8b4acf1f313b770df18e8e3b64e" translate="yes" xml:space="preserve">
          <source>You can quickly review the changes made to a file using the diff command:</source>
          <target state="translated">Вы можете быстро просмотреть изменения,внесенные в файл с помощью команды diff:</target>
        </trans-unit>
        <trans-unit id="2fb09fae799bac48e15480aed464437c8def3297" translate="yes" xml:space="preserve">
          <source>You can then rebase that against your mainline when you are ready to merge those changes:</source>
          <target state="translated">Затем,когда вы будете готовы к слиянию этих изменений,вы можете сделать перебазировку по отношению к вашей основной линии:</target>
        </trans-unit>
        <trans-unit id="01164d9f3c13476d5d9fabbd374107899efd0832" translate="yes" xml:space="preserve">
          <source>You can use any reference to a git commit, including the SHA-1 if that's most convenient. The point is that the command looks like this:</source>
          <target state="translated">Вы можете использовать любую ссылку на git-комммит,включая SHA-1,если это наиболее удобно.Дело в том,что команда выглядит так:</target>
        </trans-unit>
        <trans-unit id="5f57292459d1d57869eaa2996b187d8c8c60a9b5" translate="yes" xml:space="preserve">
          <source>You have to be careful when you say &quot;rollback&quot;.  If you used to have one version of a file in commit $A, and then later made two changes in two separate commits $B and $C (so what you are seeing is the third iteration of the file), and if you say &quot;I want to roll back to the first one&quot;, do you really mean it?</source>
          <target state="translated">Ты должен быть осторожен,когда говоришь &quot;откат&quot;.Если раньше у вас была одна версия файла в коммите $A,а позже вы внесли два изменения в два отдельных коммита $B и $C (так что вы видите третью итерацию файла),и если вы говорите &quot;Я хочу откатиться к первой&quot;,вы действительно это имеете в виду?</target>
        </trans-unit>
        <trans-unit id="b38827e3892e482a472af9638ab342c721e63f20" translate="yes" xml:space="preserve">
          <source>You may need to use the &lt;code&gt;--hard&lt;/code&gt; option if you have local modifications.</source>
          <target state="translated">Возможно, вам придется использовать параметр &lt;code&gt;--hard&lt;/code&gt; , если у вас есть локальные изменения.</target>
        </trans-unit>
        <trans-unit id="0aedad02be128eae2a151feac2d2e4a243bad1e9" translate="yes" xml:space="preserve">
          <source>after them all, you can see results in your last commit in the source tree</source>
          <target state="translated">после их всех,вы можете увидеть результаты вашего последнего коммита в дереве исходных текстов.</target>
        </trans-unit>
        <trans-unit id="6dfd3cae2ded57b2c7f78356a7e89bc0d0b88206" translate="yes" xml:space="preserve">
          <source>and then you commit the result.  The command asks &quot;I want to check out the file from the state recorded by the commit $A&quot;.</source>
          <target state="translated">а потом ты совершаешь результат.Команда спрашивает:&quot;Я хочу извлечь файл из состояния,записанного коммитом $A&quot;.</target>
        </trans-unit>
        <trans-unit id="1a2362974d3d2c0b25fb36f35a8ade64d9e09c04" translate="yes" xml:space="preserve">
          <source>change the lines and find your commit that the wrong file sent as commit</source>
          <target state="translated">изменить строки и найти ваш коммит,что неправильный файл,отправленный в качестве коммита</target>
        </trans-unit>
        <trans-unit id="b9857956b1d42fd4d4f61da91f3286aaa7062c53" translate="yes" xml:space="preserve">
          <source>drop all other files in your work area</source>
          <target state="translated">перетаскивать все остальные файлы в вашу рабочую область</target>
        </trans-unit>
        <trans-unit id="7f53a68d324346fc8457a1665141697dcc97ee86" translate="yes" xml:space="preserve">
          <source>e.g.</source>
          <target state="translated">e.g.</target>
        </trans-unit>
        <trans-unit id="ee7f4bc641db71c0b45270dc513a93cbec01f858" translate="yes" xml:space="preserve">
          <source>executes a &lt;code&gt;git checkout&lt;/code&gt; to the commit-id for the specified file.</source>
          <target state="translated">выполняет &lt;code&gt;git checkout&lt;/code&gt; для commit-id для указанного файла.</target>
        </trans-unit>
        <trans-unit id="dedcf5a59e9312a7174bacef0dd537d038abd334" translate="yes" xml:space="preserve">
          <source>for one revision back, etc.</source>
          <target state="translated">за одну ревизию и т.д.</target>
        </trans-unit>
        <trans-unit id="fbba42524404e7cf6b505bb107b82fa16cbb644f" translate="yes" xml:space="preserve">
          <source>git checkout Last_Stable_commit_Number -- fileName</source>
          <target state="translated">проверка git'а Last_Stable_commit_Number --fileName</target>
        </trans-unit>
        <trans-unit id="d94fb3713abc45db59917f6e199151d18491b07f" translate="yes" xml:space="preserve">
          <source>git checkout ref|commitHash -- filePath</source>
          <target state="translated">commitHash --filePath</target>
        </trans-unit>
        <trans-unit id="cd10b39e2f91190a85b673925202f12642ca485e" translate="yes" xml:space="preserve">
          <source>git-aliases, awk and shell-functions to the rescue!</source>
          <target state="translated">git-aliases,awk и shell-функции для спасения!</target>
        </trans-unit>
        <trans-unit id="ff3ddd01b027817c6d90b6fd6a5040a78c805938" translate="yes" xml:space="preserve">
          <source>good luck</source>
          <target state="translated">везение</target>
        </trans-unit>
        <trans-unit id="4a17176adf520427bee47d4d1e93b849273381e8" translate="yes" xml:space="preserve">
          <source>handpick the files to revert and commit them</source>
          <target state="translated">выбрать файлы для возврата и зафиксировать их.</target>
        </trans-unit>
        <trans-unit id="2e8d979b0b0e997402b755543de00bda6c8e85da" translate="yes" xml:space="preserve">
          <source>if you commit a wrong file in your last commits follow the instruction :</source>
          <target state="translated">если вы совершаете ошибку в файле в последних коммитах,следуйте инструкции :</target>
        </trans-unit>
        <trans-unit id="4347cf8245dc69cea2ba122db8097385f180002b" translate="yes" xml:space="preserve">
          <source>open source tree, change to this commit</source>
          <target state="translated">дерево с открытым исходным кодом,изменение на этот коммит</target>
        </trans-unit>
        <trans-unit id="a730a61422c8050e274edbf806241be955c80e8e" translate="yes" xml:space="preserve">
          <source>open your visual studio code and revert back by committing your removed files</source>
          <target state="translated">открыть код визуальной студии и вернуться обратно,зафиксировав удалённые файлы.</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="092be29e704b91b3f5badc3d257df7ad22444361" translate="yes" xml:space="preserve">
          <source>performs a &lt;code&gt;git log&lt;/code&gt; on the specified file and</source>
          <target state="translated">выполняет &lt;code&gt;git log&lt;/code&gt; для указанного файла и</target>
        </trans-unit>
        <trans-unit id="fbdd51ec7a9d25c06a8ee3deedcb888ed4d53229" translate="yes" xml:space="preserve">
          <source>picks the appropriate commit-id in the history of the file and</source>
          <target state="translated">выбирает соответствующий коммит в истории файла и</target>
        </trans-unit>
        <trans-unit id="15bbbb29eb272748b21c4dcfa46c69fc2ac290ac" translate="yes" xml:space="preserve">
          <source>revert the entire commit with the file you want to specifically revert - it will create a new commit on your branch</source>
          <target state="translated">вернуть весь коммит с файлом,который вы хотите вернуть-он создаст новый коммит в вашей ветке</target>
        </trans-unit>
        <trans-unit id="965c698aefff64ee1286f337e7a48a6c02df9611" translate="yes" xml:space="preserve">
          <source>select it and then click on ... buttons right-hand side ... click reverse file</source>
          <target state="translated">выберите его,а затем нажмите на ...кнопки справа ...нажмите на обратный файл</target>
        </trans-unit>
        <trans-unit id="564164e12f79db74a4ea245e85319f9bdbf127e2" translate="yes" xml:space="preserve">
          <source>soft reset that commit - removes the commit and moves the changes to the working area</source>
          <target state="translated">мягкий сброс фиксации-удаляет фиксацию и перемещает изменения в рабочую область.</target>
        </trans-unit>
        <trans-unit id="80de9ccfe165996e273cd72e5bffffff5d4e0134" translate="yes" xml:space="preserve">
          <source>then you can see it on file status tab at the bottom left-hand side 
then click unstage:</source>
          <target state="translated">затем вы можете увидеть его на вкладке состояния файла в нижней левой части,а затем нажмите кнопку нестабильности:</target>
        </trans-unit>
        <trans-unit id="4f339a7749c460a3e9d54829af2aef23da4f888b" translate="yes" xml:space="preserve">
          <source>to restore the state to a given commit and erase all newer commits from the record permanently.</source>
          <target state="translated">восстановить состояние до заданного коммита и стереть все новые коммиты из записи навсегда.</target>
        </trans-unit>
        <trans-unit id="3f78691ba6b220f52f8cb88c1c59986f48871a87" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&amp;lt;N&amp;gt;&lt;/code&gt; is the number of revisions of the file to rollback for file &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">где &lt;code&gt;&amp;lt;N&amp;gt;&lt;/code&gt; - количество ревизий файла для отката для файла &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8cb199f821e44bf15f4a80b7dbe7503020ba66f8" translate="yes" xml:space="preserve">
          <source>which shows you a list of recent commits, and their SHA1 hashes.</source>
          <target state="translated">который показывает список недавних коммитов и их SHA1 хэшей.</target>
        </trans-unit>
        <trans-unit id="2ff9ff768bb2ce0d55c5d259de07282908ee3967" translate="yes" xml:space="preserve">
          <source>would undo the last commit which is seemed to do.</source>
          <target state="translated">отменил бы последний коммит,который,казалось бы,сделал.</target>
        </trans-unit>
        <trans-unit id="73134e5c0867544e90ef49da8ccd9c9049c6c0d8" translate="yes" xml:space="preserve">
          <source>you can see the list of your changes in that commit</source>
          <target state="translated">вы можете увидеть список ваших изменений в этом коммите.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
