<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/2118656">
    <body>
      <group id="2118656">
        <trans-unit id="866488c406c7c36740322c706d4fb76667c9ff6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UICommand&lt;/code&gt; and &lt;code&gt;UIInput&lt;/code&gt; components must be placed inside an &lt;code&gt;UIForm&lt;/code&gt; component, e.g. &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; (and thus not plain HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;), otherwise nothing can be sent to the server. &lt;code&gt;UICommand&lt;/code&gt; components must also not have &lt;code&gt;type=&quot;button&quot;&lt;/code&gt; attribute, otherwise it will be a dead button which is only useful for JavaScript &lt;code&gt;onclick&lt;/code&gt;. See also &lt;a href=&quot;https://stackoverflow.com/questions/3681123/how-to-get-hinputtext-values-from-gui-xhtml-into-java-class-jsf-bean&quot;&gt;How to send form input values and invoke a method in JSF bean&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/questions/12958208/hcommandbutton-does-not-initiate-a-postback&quot;&gt;&amp;lt;h:commandButton&amp;gt; does not initiate a postback&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;UICommand&lt;/code&gt; 및 &lt;code&gt;UIInput&lt;/code&gt; 구성 요소는 &lt;code&gt;UIForm&lt;/code&gt; 구성 요소 내에 배치해야합니다 (예 : &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; (따라서 일반 HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 아님)). 그렇지 않으면 서버로 아무것도 보낼 수 없습니다. &lt;code&gt;UICommand&lt;/code&gt; 구성 요소에는 &lt;code&gt;type=&quot;button&quot;&lt;/code&gt; 속성도 없어야합니다. 그렇지 않으면 JavaScript &lt;code&gt;onclick&lt;/code&gt; 에만 유용한 데드 버튼이됩니다. &lt;a href=&quot;https://stackoverflow.com/questions/3681123/how-to-get-hinputtext-values-from-gui-xhtml-into-java-class-jsf-bean&quot;&gt;JSF Bean에서 양식 입력 값을 전송하고 메소드를 호출하는 방법을&lt;/a&gt; 참조하십시오. &lt;a href=&quot;https://stackoverflow.com/questions/12958208/hcommandbutton-does-not-initiate-a-postback&quot;&gt;&amp;lt;h : commandButton&amp;gt;은 포스트 백을 시작하지 않습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d978d9b3753f9d16c9ec6fe433e3273e16654fc4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(warning: when you post screenshots from HTTP request headers like above from a production environment, then make sure you scramble/obfuscate any session cookies in the screenshot to avoid session hijacking attacks!)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(경고 : 프로덕션 환경에서 위와 같은 HTTP 요청 헤더에서 스크린 샷을 게시 할 때 세션 하이재킹 공격을 피하기 위해 스크린 샷에서 세션 쿠키를 스크램블 / 난독 처리해야합니다!)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b971e4f0bb141033e78686962da9b91c12019960" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is the solution, which is worked for me.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;이것이 나를 위해 일한 해결책입니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b7a820491ba9cea62cbb9eb9033a2f0fe79a2697" translate="yes" xml:space="preserve">
          <source>As the PrimeFaces User's Guide states in section 3.18, the defaults for &lt;code&gt;process&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt; are both &lt;code&gt;@form&lt;/code&gt;, which pretty much opposes the defaults you might expect from plain JSF &lt;code&gt;f:ajax&lt;/code&gt; or RichFaces, which are &lt;code&gt;execute=&quot;@this&quot;&lt;/code&gt; and &lt;code&gt;render=&quot;@none&quot;&lt;/code&gt; respectively.</source>
          <target state="translated">섹션 3.18의 PrimeFaces 사용 설명서에 설명 된대로 &lt;code&gt;process&lt;/code&gt; 및 &lt;code&gt;update&lt;/code&gt; 의 기본값은 &lt;code&gt;@form&lt;/code&gt; 이며, 일반 JSF &lt;code&gt;f:ajax&lt;/code&gt; 또는 RichFaces에서 기대할 수있는 기본값과 거의 반대입니다. 이는 &lt;code&gt;execute=&quot;@this&quot;&lt;/code&gt; 이고 &lt;code&gt;render=&quot;@none&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ab36e796edd5a2aff059837493ac2891867d064d" translate="yes" xml:space="preserve">
          <source>Basically, using sendRedirect() allowed the JSF &quot;container&quot; to take control whereas RequestDispatcher.forward() was obviously not.</source>
          <target state="translated">기본적으로 sendRedirect ()를 사용하면 JSF &quot;컨테이너&quot;가 제어 할 수 있지만 RequestDispatcher.forward ()는 분명히 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3be03732e361b25d3aa4cc4127e47b23cc0bc01a" translate="yes" xml:space="preserve">
          <source>Bottom line, the problem was that the middle-man-servlet was using RequestDispatcher.forward(...) to redirect from the HttpServlet environment to the JSF environment whereas the servlet being called prior to it was redirecting with HttpServletResponse.sendRedirect(...).</source>
          <target state="translated">결론적으로, 문제는 Middle-man-servlet이 RequestDispatcher.forward (...)를 사용하여 HttpServlet 환경에서 JSF 환경으로 리디렉션하는 반면 서블릿은 HttpServletResponse.sendRedirect (.. ).</target>
        </trans-unit>
        <trans-unit id="387a85de6fd64795614cf3a03aeb1eb3a0202d39" translate="yes" xml:space="preserve">
          <source>Bug in the framework. For example, RichFaces has a &quot;&lt;a href=&quot;https://issues.jboss.org/browse/RF-12594&quot;&gt;conversion error&lt;/a&gt;&quot; when using a &lt;code&gt;rich:calendar&lt;/code&gt; UI element with a &lt;code&gt;defaultLabel&lt;/code&gt; attribute (or, in some cases, a &lt;code&gt;rich:placeholder&lt;/code&gt; sub-element). This bug prevents the bean method from being invoked when no value is set for the calendar date. Tracing framework bugs can be accomplished by starting with a simple working example and building the page back up until the bug is discovered.</source>
          <target state="translated">프레임 워크의 버그. 예를 들어, RichFaces에는 &lt;code&gt;defaultLabel&lt;/code&gt; 속성 (또는 경우에 따라 &lt;code&gt;rich:placeholder&lt;/code&gt; 하위 요소)이있는 &lt;code&gt;rich:calendar&lt;/code&gt; UI 요소를 사용할 때 &quot; &lt;a href=&quot;https://issues.jboss.org/browse/RF-12594&quot;&gt;변환 오류&lt;/a&gt; &quot;가 있습니다. 이 버그는 달력 날짜에 값이 설정되지 않은 경우 Bean 메소드가 호출되지 않도록합니다. 간단한 작업 예제로 시작하여 버그가 발견 될 때까지 페이지를 백업하여 프레임 워크 버그를 추적 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f52fd3814b69cf3df3d930cda2ccbc4fa45914c1" translate="yes" xml:space="preserve">
          <source>Click the &lt;em&gt;Network&lt;/em&gt; tab to see the HTTP traffic monitor. Submit the form and investigate if the request headers and form data and the response body are as per expectations. Below screenshot is an example from Chrome which demonstrates a successful ajax submit of a simple form with a single &lt;code&gt;&amp;lt;h:inputText&amp;gt;&lt;/code&gt; and a single &lt;code&gt;&amp;lt;h:commandButton&amp;gt;&lt;/code&gt; with &lt;code&gt;&amp;lt;f:ajax execute=&quot;@form&quot; render=&quot;@form&quot;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;네트워크&lt;/em&gt; 탭을 클릭하여 HTTP 트래픽 모니터를보십시오. 양식을 제출하고 요청 헤더 및 양식 데이터와 응답 본문이 예상과 같은지 조사하십시오. 아래 스크린 샷은 &lt;code&gt;&amp;lt;h:inputText&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;h:commandButton&amp;gt;&lt;/code&gt; 와 &lt;code&gt;&amp;lt;f:ajax execute=&quot;@form&quot; render=&quot;@form&quot;&amp;gt;&lt;/code&gt; 있는 단일 &amp;lt;h : commandButton&amp;gt;을 사용하여 간단한 양식을 성공적으로 제출 한 Chrome의 예입니다 . &amp;gt; .</target>
        </trans-unit>
        <trans-unit id="ad43ac09dd124cb666003cf8589c2e04c4dd12a5" translate="yes" xml:space="preserve">
          <source>Debugging hints</source>
          <target state="translated">디버깅 힌트</target>
        </trans-unit>
        <trans-unit id="5f0f18a890d46086092f46381c0776f9a1e0fb0a" translate="yes" xml:space="preserve">
          <source>For this purpose, you can dispense the &lt;code&gt;type&lt;/code&gt; attribute (default value is &lt;code&gt;&quot;submit&quot;&lt;/code&gt;) or you can explicitly use &lt;code&gt;type=&quot;submit&quot;&lt;/code&gt;.</source>
          <target state="translated">이를 위해 &lt;code&gt;type&lt;/code&gt; 속성을 분배하거나 (기본값은 &lt;code&gt;&quot;submit&quot;&lt;/code&gt; ) &lt;code&gt;type=&quot;submit&quot;&lt;/code&gt; 을 명시 적으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a04bb2946c575867840a2e08c55c9b55395447c2" translate="yes" xml:space="preserve">
          <source>Got stuck with this issue myself and found one more cause for this problem.
If you don't have setter methods in your backing bean for the properties used in your *.xhtml , then the action is simply not invoked.</source>
          <target state="translated">이 문제를 직접 해결하고이 문제의 원인을 하나 더 발견했습니다. * .xhtml에 사용 된 특성에 대한 백킹 Bean에 setter 메소드가없는 경우 조치가 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8b5d5e1850f3f69592961b6908eaccc7e7789e20" translate="yes" xml:space="preserve">
          <source>Here, process=&quot;userGroupSetupForm&quot; atrribute is mandatory for Ajax call. actionListener is calling a method from @ViewScope Bean. Also updating growl message, Datatable: userGroupList and Form: userGroupSetupForm.</source>
          <target state="translated">여기서 Ajax 호출에는 process = &quot;userGroupSetupForm&quot;속성이 필수입니다. actionListener가 @ViewScope Bean에서 메소드를 호출 중입니다. 또한 growl 메시지, Datatable : userGroupList 및 Form : userGroupSetupForm을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="e4f350fbbd6cd44f6756b173b457a31d927cc6ae" translate="yes" xml:space="preserve">
          <source>Hope this will help someone!</source>
          <target state="translated">이것이 누군가를 도울 수 있기를 바랍니다!</target>
        </trans-unit>
        <trans-unit id="9cf3abd217ce1127f62e6207c9f17e88720b5fcb" translate="yes" xml:space="preserve">
          <source>I fixed my problem with placing the:</source>
          <target state="translated">다음과 같은 문제를 해결했습니다.</target>
        </trans-unit>
        <trans-unit id="ada7b48d682b4c15818372e71d2f57a896c7f67a" translate="yes" xml:space="preserve">
          <source>I had a command button on a row of a datatable (the extended version, so &lt;code&gt;&amp;lt;hx:datatable&amp;gt;&lt;/code&gt;) and the UICommand would not fire from certain rows from the table (the rows that would not fire were the rows greater than the default row display size).</source>
          <target state="translated">datatable (확장 버전, &lt;code&gt;&amp;lt;hx:datatable&amp;gt;&lt;/code&gt; ) 행에 명령 단추가 있었고 UICommand가 테이블의 특정 행에서 실행되지 않습니다 (발행되지 않는 행은 기본 행보다 큰 행이었습니다) 디스플레이 크기).</target>
        </trans-unit>
        <trans-unit id="771d92126e32f5d42b83fd8f7b7d8509d3301e8d" translate="yes" xml:space="preserve">
          <source>I had a drop-down component for selecting number of rows to display. The value backing this field was in &lt;code&gt;RequestScope&lt;/code&gt;. The data backing the table itself was in a sort of &lt;code&gt;ViewScope&lt;/code&gt; (in reality, temporarily in &lt;code&gt;SessionScope&lt;/code&gt;).</source>
          <target state="translated">표시 할 행 수를 선택하기위한 드롭 다운 구성 요소가 있습니다. 이 필드를 뒷받침하는 값은 &lt;code&gt;RequestScope&lt;/code&gt; 입니다. 테이블 자체를 백업하는 데이터는 일종의 &lt;code&gt;ViewScope&lt;/code&gt; (실제로는 &lt;code&gt;SessionScope&lt;/code&gt; )에있었습니다.</target>
        </trans-unit>
        <trans-unit id="2a55afc4ed451bf938ab6a7781f2985f0cfdbb57" translate="yes" xml:space="preserve">
          <source>I had lots of fun debugging an issue where a &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt;'s action in &lt;code&gt;richfaces&lt;/code&gt;&lt;code&gt;datatable&lt;/code&gt; refused to fire. The table used to work at some point but stopped for no apparent reason. I left no stone unturned, only to find out that my &lt;code&gt;rich:datatable&lt;/code&gt; was using the wrong &lt;code&gt;rowKeyConverter&lt;/code&gt; which returned nulls that richfaces happily used as row keys. This prevented my &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt; action from getting called.</source>
          <target state="translated">&lt;code&gt;richfaces&lt;/code&gt; &lt;code&gt;datatable&lt;/code&gt; 에서 &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt; 의 작업이 실행되지 않는 문제를 디버깅하는 데 많은 재미가있었습니다. 이 테이블은 어느 시점에서 작동했지만 명백한 이유없이 중단되었습니다. 내 &lt;code&gt;rich:datatable&lt;/code&gt; 이 잘못된 &lt;code&gt;rowKeyConverter&lt;/code&gt; 를 사용하여 richface가 행복하게 행 키로 사용되는 null을 반환한다는 것을 알기 위해 돌을 돌리지 않았습니다. 이로 인해 &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt; 작업이 호출되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="5251cdd4c6bff16176d8657be0cf1a79d3c894cc" translate="yes" xml:space="preserve">
          <source>I had this problem as well and only really started to hone in on the root cause after opening up the browser's web console.  Until that, I was unable to get any error messages (even with &lt;code&gt;&amp;lt;p:messages&amp;gt;&lt;/code&gt;).  The web console showed an HTTP 405 status code coming back from the &lt;code&gt;&amp;lt;h:commandButton type=&quot;submit&quot; action=&quot;#{myBean.submit}&quot;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">나는이 문제도 가지고 있었고 브라우저의 웹 콘솔을 연 후에 근본 원인을 찾기 시작했습니다. 그 때까지 &lt;code&gt;&amp;lt;p:messages&amp;gt;&lt;/code&gt; 조차도 오류 메시지를 얻을 수 없었습니다. 웹 콘솔에 &lt;code&gt;&amp;lt;h:commandButton type=&quot;submit&quot; action=&quot;#{myBean.submit}&quot;&amp;gt;&lt;/code&gt; 에서 HTTP 405 상태 코드가 다시 표시되었습니다.</target>
        </trans-unit>
        <trans-unit id="e9f5e148d29cf7fae55e775799f77920ad0986c8" translate="yes" xml:space="preserve">
          <source>I recently ran into a problem with a UICommand not invoking in a JSF 1.2 application using IBM Extended Faces Components.</source>
          <target state="translated">최근 IBM Extended Faces Components를 사용하여 JSF 1.2 애플리케이션에서 UICommand를 호출하지 못하는 문제가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="192636a4bca94899648371c8cb323c3f1ce21472" translate="yes" xml:space="preserve">
          <source>I think this is alluded to in BalusC #4 above, but not only did the table value need to be View or Session scoped but also the attribute controlling the number of rows to display on that table.</source>
          <target state="translated">위의 BalusC # 4에서 언급 한 것으로 생각되지만 테이블 값은 View 또는 Session 범위뿐만 아니라 해당 테이블에 표시 할 행 수를 제어하는 ​​속성이어야했습니다.</target>
        </trans-unit>
        <trans-unit id="2c2fe531415109359e102a0680cfcc231f4047c0" translate="yes" xml:space="preserve">
          <source>I would mention one more thing that concerns Primefaces's &lt;code&gt;p:commandButton&lt;/code&gt;!</source>
          <target state="translated">Primefaces의 &lt;code&gt;p:commandButton&lt;/code&gt; 과 관련하여 한 가지 더 언급하겠습니다.</target>
        </trans-unit>
        <trans-unit id="9924714aee235af76994537f44085e166f664203" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;UICommand&lt;/code&gt; or &lt;code&gt;UIInput&lt;/code&gt; components are included by a dynamic source such as &lt;code&gt;&amp;lt;ui:include src=&quot;#{bean.include}&quot;&amp;gt;&lt;/code&gt;, then you need to ensure that exactly the same &lt;code&gt;#{bean.include}&lt;/code&gt; value is preserved during the view build time of the form submit request. JSF will reexecute it during building the component tree. Putting the bean in the view scope and/or making sure that you load the data model in &lt;code&gt;@PostConstruct&lt;/code&gt; of the bean (and thus not in a getter method!) should fix it. See also &lt;a href=&quot;https://stackoverflow.com/questions/7108668/how-to-ajax-refresh-dynamic-include-content-by-navigation-menu-jsf-spa&quot;&gt;How to ajax-refresh dynamic include content by navigation menu? (JSF SPA)&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;UICommand&lt;/code&gt; 또는 &lt;code&gt;UIInput&lt;/code&gt; 구성 요소가 &lt;code&gt;&amp;lt;ui:include src=&quot;#{bean.include}&quot;&amp;gt;&lt;/code&gt; 와 같은 동적 소스에 포함 된 경우보기 중에 정확히 동일한 &lt;code&gt;#{bean.include}&lt;/code&gt; 값이 유지되도록해야합니다. 양식 제출 요청의 빌드 시간 컴포넌트 트리를 빌드하는 동안 JSF가 다시 실행합니다. Bean을 뷰 범위에 넣고 /하거나 Bean의 &lt;code&gt;@PostConstruct&lt;/code&gt; 에 데이터 모델을로드했는지 확인하십시오 (따라서 getter 메소드가 아님). &lt;a href=&quot;https://stackoverflow.com/questions/7108668/how-to-ajax-refresh-dynamic-include-content-by-navigation-menu-jsf-spa&quot;&gt;탐색 메뉴로 동적 포함 컨텐츠를 아약스 새로 고치는 방법을&lt;/a&gt; 참조하십시오 . (JSF SPA)</target>
        </trans-unit>
        <trans-unit id="d039e312f75e608caf4b0e9a953fa4288127b59a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;UICommand&lt;/code&gt; or &lt;code&gt;UIInput&lt;/code&gt; components are placed inside an iterating component like &lt;code&gt;&amp;lt;h:dataTable&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;ui:repeat&amp;gt;&lt;/code&gt;, etc, then you need to ensure that exactly the same &lt;code&gt;value&lt;/code&gt; of the iterating component is been preserved during the apply request values phase of the form submit request. JSF will reiterate over it to find the clicked link/button and submitted input values. Putting the bean in the view scope and/or making sure that you load the data model in &lt;code&gt;@PostConstruct&lt;/code&gt; of the bean (and thus not in a getter method!) should fix it. See also &lt;a href=&quot;https://stackoverflow.com/questions/5765853/when-should-i-load-the-collection-from-database-for-hdatatable&quot;&gt;How and when should I load the model from database for h:dataTable&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;UICommand&lt;/code&gt; 또는 &lt;code&gt;UIInput&lt;/code&gt; 구성 요소가 &lt;code&gt;&amp;lt;h:dataTable&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;ui:repeat&amp;gt;&lt;/code&gt; 등과 같은 반복 구성 요소 내에 배치 된 경우 적용 요청 값 적용 단계에서 반복 구성 요소와 정확히 동일한 &lt;code&gt;value&lt;/code&gt; 이 유지되도록해야합니다. 양식 제출 요청. JSF는이를 다시 클릭하여 클릭 한 링크 / 버튼 및 제출 된 입력 값을 찾습니다. Bean을 뷰 범위에 넣고 /하거나 Bean의 &lt;code&gt;@PostConstruct&lt;/code&gt; 에 데이터 모델을로드했는지 확인하십시오 (따라서 getter 메소드가 아님). &lt;a href=&quot;https://stackoverflow.com/questions/5765853/when-should-i-load-the-collection-from-database-for-hdatatable&quot;&gt;h : dataTable에 대한 데이터베이스에서 모델을로드하는 방법 및시기&lt;/a&gt; 도 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3376040c6a80d6d2d66683587c3c37544d43149c" translate="yes" xml:space="preserve">
          <source>If a parent of the &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; with the &lt;code&gt;UICommand&lt;/code&gt; button is beforehand been rendered/updated by an ajax request coming from another form in the same page, then the first action will always fail in JSF 2.2 or older. The second and subsequent actions will work. This is caused by a bug in view state handling which is reported as &lt;a href=&quot;https://github.com/javaee/javaserverfaces-spec/issues/790&quot;&gt;JSF spec issue 790&lt;/a&gt; and currently fixed in JSF 2.3. For older JSF versions, you need to explicitly specify the ID of the &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; in the &lt;code&gt;render&lt;/code&gt; of the &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt;. See also &lt;a href=&quot;https://stackoverflow.com/questions/11408130/hcommandbutton-hcommandlink-does-not-work-on-first-click-works-only-on-second&quot;&gt;h:commandButton/h:commandLink does not work on first click, works only on second click&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;UICommand&lt;/code&gt; 버튼이있는 &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; 의 상위가 동일한 페이지의 다른 양식에서 오는 ajax 요청으로 미리 렌더링 / 업데이트 된 경우 첫 번째 조치는 항상 JSF 2.2 이상에서 실패합니다. 두 번째 및 후속 조치가 작동합니다. 이는 &lt;a href=&quot;https://github.com/javaee/javaserverfaces-spec/issues/790&quot;&gt;JSF 스펙 문제 790&lt;/a&gt; 으로보고되고 현재 JSF 2.3에서 수정 된 뷰 상태 처리의 버그로 인해 발생합니다. 이전 JSF 버전의 경우 &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; 의 &lt;code&gt;render&lt;/code&gt; 에서 &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; 의 ID를 명시 적으로 지정해야합니다. &lt;a href=&quot;https://stackoverflow.com/questions/11408130/hcommandbutton-hcommandlink-does-not-work-on-first-click-works-only-on-second&quot;&gt;h : commandButton / h : commandLink는 첫 번째 클릭에서 작동하지 않고 두 번째 클릭에서만 작동합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d4a9ed5b372bb2f791d112478dcb7a6c28e7e44a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; has &lt;code&gt;enctype=&quot;multipart/form-data&quot;&lt;/code&gt; set in order to support file uploading, then you need to make sure that you're using at least JSF 2.2, or that the servlet filter who is responsible for parsing multipart/form-data requests is properly configured, otherwise the &lt;code&gt;FacesServlet&lt;/code&gt; will end up getting no request parameters at all and thus not be able to apply the request values. How to configure such a filter depends on the file upload component being used. For Tomahawk &lt;code&gt;&amp;lt;t:inputFileUpload&amp;gt;&lt;/code&gt;, check &lt;a href=&quot;https://stackoverflow.com/questions/5418292/jsf-2-0-file-upload/5424229#5424229&quot;&gt;this answer&lt;/a&gt; and for PrimeFaces &lt;code&gt;&amp;lt;p:fileUpload&amp;gt;&lt;/code&gt;, check &lt;a href=&quot;https://stackoverflow.com/questions/8875818/how-to-use-primefaces-pfileupload-listener-method-is-never-invoked/8880083#8880083&quot;&gt;this answer&lt;/a&gt;. Or, if you're actually not uploading a file at all, then remove the attribute altogether.</source>
          <target state="translated">파일 업로드를 지원하기 위해 &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; 에 &lt;code&gt;enctype=&quot;multipart/form-data&quot;&lt;/code&gt; 가 설정되어 있으면 최소한 JSF 2.2를 사용하고 있는지 또는 책임이있는 서블릿 필터를 사용해야합니다. multipart / form-data 요청을 구문 분석하면 올바르게 구성됩니다. 그렇지 않으면 &lt;code&gt;FacesServlet&lt;/code&gt; 이 요청 매개 변수를 전혀 얻지 않으므로 요청 값을 적용 할 수 없습니다. 이러한 필터를 구성하는 방법은 사용중인 파일 업로드 구성 요소에 따라 다릅니다. Tomahawk &lt;code&gt;&amp;lt;t:inputFileUpload&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;https://stackoverflow.com/questions/5418292/jsf-2-0-file-upload/5424229#5424229&quot;&gt;경우이 답변을&lt;/a&gt; 확인하고 PrimeFaces &lt;code&gt;&amp;lt;p:fileUpload&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;https://stackoverflow.com/questions/8875818/how-to-use-primefaces-pfileupload-listener-method-is-never-invoked/8880083#8880083&quot;&gt;경우이 답변을&lt;/a&gt; 확인 하십시오 . 또는 실제로 파일을 전혀 업로드하지 않는 경우 속성을 모두 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="22cd41b11cd350ae8b00095e457defda31bbf524" translate="yes" xml:space="preserve">
          <source>If the row display was increased via the control which value was also bound to the datatable's &lt;code&gt;rows&lt;/code&gt; attribute, none of the rows displayed as a result of this change could fire the UICommand when clicked.</source>
          <target state="translated">datatable의 &lt;code&gt;rows&lt;/code&gt; 속성에 바인딩 된 값을 컨트롤을 통해 행 표시를 늘리면이 변경의 결과로 표시되는 행 중 아무 것도 클릭 할 때 UICommand를 실행할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="78fb12f9d4f9ffdea734456966c80e8cfbfde585" translate="yes" xml:space="preserve">
          <source>If the submitted values still end up being &lt;code&gt;null&lt;/code&gt;, and you're using CDI to manage beans, then make sure that you import the scope annotation from the correct package, else CDI will default to &lt;code&gt;@Dependent&lt;/code&gt; which effectively recreates the bean on every single evaluation of the EL expression. See also &lt;a href=&quot;https://stackoverflow.com/questions/9470440/sessionscoped-bean-looses-scope-and-gets-recreated-all-the-time-fields-become&quot;&gt;@SessionScoped bean looses scope and gets recreated all the time, fields become null&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/questions/19322364/what-is-the-default-managed-bean-scope-in-a-jsf-2-application&quot;&gt;What is the default Managed Bean Scope in a JSF 2 application?&lt;/a&gt;</source>
          <target state="translated">제출 된 값이 여전히 &lt;code&gt;null&lt;/code&gt; 로 끝나고 CDI를 사용하여 Bean을 관리하는 경우 올바른 패키지에서 범위 주석을 가져와야합니다. 그렇지 않으면 CDI는 기본적으로 &lt;code&gt;@Dependent&lt;/code&gt; 로 설정되어 모든 단일 평가에서 Bean을 효과적으로 다시 작성합니다. EL 표현의. &lt;a href=&quot;https://stackoverflow.com/questions/9470440/sessionscoped-bean-looses-scope-and-gets-recreated-all-the-time-fields-become&quot;&gt;@SessionScoped Bean이 범위를 느슨하게하고 항상 다시 작성하는 경우 필드가 널이&lt;/a&gt; 되고 &lt;a href=&quot;https://stackoverflow.com/questions/19322364/what-is-the-default-managed-bean-scope-in-a-jsf-2-application&quot;&gt;JSF 2 애플리케이션의 기본 관리 Bean 범위는 무엇입니까?를 참조하십시오.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f05f88312346985c9a90156785bf6578f9f4e0bd" translate="yes" xml:space="preserve">
          <source>If you are using a PrimeFaces &lt;code&gt;&amp;lt;p:dialog&amp;gt;&lt;/code&gt; or a &lt;code&gt;&amp;lt;p:overlayPanel&amp;gt;&lt;/code&gt;, then make sure that they have their own &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt;. Because, these components are by default by JavaScript relocated to end of HTML &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;. So, if they were originally sitting inside a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;, then they would now not anymore sit in a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;. See also &lt;a href=&quot;https://stackoverflow.com/questions/18958729/pcommandbutton-action-doesnt-work-inside-pdialog&quot;&gt;p:commandbutton action doesn't work inside p:dialog&lt;/a&gt;</source>
          <target state="translated">PrimeFaces &lt;code&gt;&amp;lt;p:dialog&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;p:overlayPanel&amp;gt;&lt;/code&gt; 을 사용하는 경우 고유 한 &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; 이 있는지 확인하십시오. 이러한 컴포넌트는 기본적으로 JavaScript로 HTML &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 의 끝으로 재배치됩니다. 따라서 원래 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 안에 앉아 있었다면 이제는 더 이상 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 에 앉아 있지 않습니다. &lt;a href=&quot;https://stackoverflow.com/questions/18958729/pcommandbutton-action-doesnt-work-inside-pdialog&quot;&gt;p : dialog에서 p : commandbutton 작업이 작동하지 않음&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fcac2640402780d0075832d85cbc7c426c4691e0" translate="yes" xml:space="preserve">
          <source>If you're using &lt;strong&gt;PrimeFaces&lt;/strong&gt; (or some similar API) &lt;code&gt;p:commandButton&lt;/code&gt; or &lt;code&gt;p:commandLink&lt;/code&gt;, chances are that you have forgotten to explicitly add &lt;code&gt;process=&quot;@this&quot;&lt;/code&gt; to your command components.</source>
          <target state="translated">&lt;strong&gt;PrimeFaces&lt;/strong&gt; (또는 유사한 API) &lt;code&gt;p:commandButton&lt;/code&gt; 또는 &lt;code&gt;p:commandLink&lt;/code&gt; 를 사용하는 경우 명령 구성 요소에 &lt;code&gt;process=&quot;@this&quot;&lt;/code&gt; 를 명시 적으로 추가하지 않았을 가능성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1403aaffc997b6c2b3ecacbce732c81da1e089e5" translate="yes" xml:space="preserve">
          <source>If you're using Ajax via JSF 2.x &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; or e.g. PrimeFaces &lt;code&gt;&amp;lt;p:commandXxx&amp;gt;&lt;/code&gt;, make sure that you have a &lt;code&gt;&amp;lt;h:head&amp;gt;&lt;/code&gt; in the master template instead of the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;. Otherwise JSF won't be able to auto-include the necessary JavaScript files which contains the Ajax functions. This would result in a JavaScript error like &quot;mojarra is not defined&quot; or &quot;PrimeFaces is not defined&quot; in browser's JS console. See also &lt;a href=&quot;https://stackoverflow.com/questions/9933777/hcommandlink-actionlistener-is-not-invoked-when-used-with-fajax-and-uirepeat&quot;&gt;h:commandLink actionlistener is not invoked when used with f:ajax and ui:repeat&lt;/a&gt;.</source>
          <target state="translated">JSF 2.x &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; 또는 PrimeFaces &lt;code&gt;&amp;lt;p:commandXxx&amp;gt;&lt;/code&gt; 를 통해 Ajax를 사용하는 경우 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 대신 마스터 템플릿에 &lt;code&gt;&amp;lt;h:head&amp;gt;&lt;/code&gt; 가 있는지 확인하십시오. 그렇지 않으면 JSF는 Ajax 함수가 포함 된 필요한 JavaScript 파일을 자동으로 포함 할 수 없습니다. 브라우저의 JS 콘솔에서 &quot;mojarra is not defined&quot;또는 &quot;PrimeFaces is not defined&quot;와 같은 JavaScript 오류가 발생합니다. &lt;a href=&quot;https://stackoverflow.com/questions/9933777/hcommandlink-actionlistener-is-not-invoked-when-used-with-fajax-and-uirepeat&quot;&gt;f : ajax 및 ui : repeat와 함께 사용하면 h : commandLink actionlistener가 호출되지 않습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="067b0bee847820b1fa42033b6d78512872c7deff" translate="yes" xml:space="preserve">
          <source>If you're using Ajax, and the submitted values end up being &lt;code&gt;null&lt;/code&gt;, then make sure that the &lt;code&gt;UIInput&lt;/code&gt; and &lt;code&gt;UICommand&lt;/code&gt; components of interest are covered by the &lt;code&gt;&amp;lt;f:ajax execute&amp;gt;&lt;/code&gt; or e.g. &lt;code&gt;&amp;lt;p:commandXxx process&amp;gt;&lt;/code&gt;, otherwise they won't be executed/processed. See also &lt;a href=&quot;https://stackoverflow.com/questions/17960929/submitted-form-values-not-updated-in-model-when-adding-fajax-to-hcommandbut&quot;&gt;Submitted form values not updated in model when adding &amp;lt;f:ajax&amp;gt; to &amp;lt;h:commandButton&amp;gt;&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/questions/25339056/understanding-process-and-update-attributes-of-primefaces&quot;&gt;Understanding PrimeFaces process/update and JSF f:ajax execute/render attributes&lt;/a&gt;.</source>
          <target state="translated">Ajax를 사용하고 제출 된 값이 &lt;code&gt;null&lt;/code&gt; 인 경우 관심있는 &lt;code&gt;UIInput&lt;/code&gt; 및 &lt;code&gt;UICommand&lt;/code&gt; 구성 요소가 &lt;code&gt;&amp;lt;f:ajax execute&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;p:commandXxx process&amp;gt;&lt;/code&gt; 로 덮여 있는지 확인하십시오 . 실행 / 처리되지 않습니다. &lt;a href=&quot;https://stackoverflow.com/questions/17960929/submitted-form-values-not-updated-in-model-when-adding-fajax-to-hcommandbut&quot;&gt;&amp;lt;h : commandButton&amp;gt;에 &amp;lt;f : ajax&amp;gt;를 추가&lt;/a&gt; 하고 &lt;a href=&quot;https://stackoverflow.com/questions/25339056/understanding-process-and-update-attributes-of-primefaces&quot;&gt;PrimeFaces 프로세스 / 업데이트 및 JSF f : ajax 실행 / 렌더 속성 이해&lt;/a&gt; 시 모델에서 업데이트되지 않은 제출 된 양식 값을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="26dbf2c15abdeb08213c97b58bcc0aa4ec635e0d" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;h:commandLink&lt;/code&gt; is inside a &lt;code&gt;h:dataTable&lt;/code&gt; there is another reason why the &lt;code&gt;h:commandLink&lt;/code&gt; might not work:</source>
          <target state="translated">&lt;code&gt;h:commandLink&lt;/code&gt; 가 &lt;code&gt;h:dataTable&lt;/code&gt; 내에있는 경우 &lt;code&gt;h:commandLink&lt;/code&gt; 가 작동하지 않는 또 다른 이유가 있습니다.</target>
        </trans-unit>
        <trans-unit id="c76acb4b3d3f7a637166854a94ce22d2fdec0f06" translate="yes" xml:space="preserve">
          <source>In case you still stucks, it's time to debug. In the client side, press F12 in webbrowser to open the web developer toolset. Click the &lt;em&gt;Console&lt;/em&gt; tab so see the JavaScript conosle. It should be free of any JavaScript errors. Below screenshot is an example from Chrome which demonstrates the case of submitting an &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; enabled button while not having &lt;code&gt;&amp;lt;h:head&amp;gt;&lt;/code&gt; declared (as described in point 7 above).</source>
          <target state="translated">여전히 멈췄다면 이제 디버깅해야합니다. 클라이언트 측에서 웹 브라우저에서 F12를 눌러 웹 개발자 툴셋을 엽니 다. &lt;em&gt;콘솔&lt;/em&gt; 탭을 클릭하면 JavaScript conosle이 표시됩니다. JavaScript 오류가 없어야합니다. 아래 스크린 샷은 &lt;code&gt;&amp;lt;h:head&amp;gt;&lt;/code&gt; 가 선언되지 않은 상태에서 &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; 사용 버튼을 제출하는 경우를 보여주는 Chrome의 예입니다 (위의 7 항에서 설명).</target>
        </trans-unit>
        <trans-unit id="183480165efa4b95340f558c47bf0d901be7a5f3" translate="yes" xml:space="preserve">
          <source>In my case, I have a mix of vanilla HttpServlet's providing OAuth authentication via Auth0 and JSF facelets and beans carrying out my application views and business logic.</source>
          <target state="translated">제 경우에는 Auth0 및 JSF 페이스 렛을 통해 OAuth 인증을 제공하는 바닐라 HttpServlet과 애플리케이션 뷰 및 비즈니스 로직을 수행하는 Bean이 혼합되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="934391f3715be29d2e0b4423613ce2cc51ecb036" translate="yes" xml:space="preserve">
          <source>In the server side, make sure that server is started in debug mode. Put a debug breakpoint in a method of the JSF component of interest which you expect to be called during processing the form submit. E.g. in case of &lt;code&gt;UICommand&lt;/code&gt; component, that would be &lt;a href=&quot;http://grepcode.com/file/repo1.maven.org/maven2/javax.faces/javax.faces-api/2.2/javax/faces/component/UICommand.java#UICommand.queueEvent%28javax.faces.event.FacesEvent%29&quot;&gt;&lt;code&gt;UICommand#queueEvent()&lt;/code&gt;&lt;/a&gt; and in case of &lt;code&gt;UIInput&lt;/code&gt; component, that would be &lt;a href=&quot;http://grepcode.com/file/repo1.maven.org/maven2/javax.faces/javax.faces-api/2.2/javax/faces/component/UIInput.java#UIInput.validate%28javax.faces.context.FacesContext%29&quot;&gt;&lt;code&gt;UIInput#validate()&lt;/code&gt;&lt;/a&gt;. Just step through the code execution and inspect if the flow and variables are as per expectations. Below screenshot is an example from Eclipse's debugger.</source>
          <target state="translated">서버 측에서 서버가 디버그 모드에서 시작되었는지 확인하십시오. 양식 제출을 처리하는 동안 호출 될 것으로 예상되는 JSF 구성 요소의 메소드에 디버그 중단 점을 두십시오. 예를 들어 &lt;code&gt;UICommand&lt;/code&gt; 구성 요소의 경우 &lt;a href=&quot;http://grepcode.com/file/repo1.maven.org/maven2/javax.faces/javax.faces-api/2.2/javax/faces/component/UICommand.java#UICommand.queueEvent%28javax.faces.event.FacesEvent%29&quot;&gt; &lt;code&gt;UICommand#queueEvent()&lt;/code&gt; &lt;/a&gt; 이고 &lt;code&gt;UIInput&lt;/code&gt; 구성 요소의 경우 &lt;a href=&quot;http://grepcode.com/file/repo1.maven.org/maven2/javax.faces/javax.faces-api/2.2/javax/faces/component/UIInput.java#UIInput.validate%28javax.faces.context.FacesContext%29&quot;&gt; &lt;code&gt;UIInput#validate()&lt;/code&gt; &lt;/a&gt; 입니다. 코드 실행을 단계별로 진행하고 흐름과 변수가 예상과 같은지 검사하십시오. 아래 스크린 샷은 Eclipse 디버거의 예입니다.</target>
        </trans-unit>
        <trans-unit id="3c8d8b817f472ca51d910bf99f9f2c1366df731c" translate="yes" xml:space="preserve">
          <source>In:</source>
          <target state="translated">In:</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="2ff2e35a47d0ca16aab845cbe22de6fbe450b984" translate="yes" xml:space="preserve">
          <source>Just took me a looong time to find out. (... and I think it's rather unclever to use defaults that are different from JSF!)</source>
          <target state="translated">알아 내기 위해 나에게 충분한 시간을 보냈다. (... 그리고 JSF와 다른 기본값을 사용하는 것은 다소 번거로운 것 같습니다!)</target>
        </trans-unit>
        <trans-unit id="1d86930b3117bca325817a10d4c98d91c0673298" translate="yes" xml:space="preserve">
          <source>Make sure that no &lt;code&gt;Filter&lt;/code&gt; or &lt;code&gt;Servlet&lt;/code&gt; in the same request-response chain has blocked the request fo the &lt;code&gt;FacesServlet&lt;/code&gt; somehow.</source>
          <target state="translated">동일한 요청-응답 체인에있는 &lt;code&gt;Filter&lt;/code&gt; 또는 &lt;code&gt;Servlet&lt;/code&gt; 이 &lt;code&gt;FacesServlet&lt;/code&gt; 의 요청을 어떻게 든 차단하지 않았는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="8665d2dc8b166e8db7e3f138791b0ce08b02a5b7" translate="yes" xml:space="preserve">
          <source>Make sure that no &lt;code&gt;PhaseListener&lt;/code&gt; or any &lt;code&gt;EventListener&lt;/code&gt; in the request-response chain has changed the JSF lifecycle to skip the invoke action phase by for example calling &lt;code&gt;FacesContext#renderResponse()&lt;/code&gt; or &lt;code&gt;FacesContext#responseComplete()&lt;/code&gt;.</source>
          <target state="translated">요청-응답 체인의 &lt;code&gt;PhaseListener&lt;/code&gt; 또는 &lt;code&gt;EventListener&lt;/code&gt; 가 &lt;code&gt;FacesContext#renderResponse()&lt;/code&gt; 또는 &lt;code&gt;FacesContext#responseComplete()&lt;/code&gt; 호출하여 호출 조치 단계를 건너 뛰도록 JSF 라이프 사이클을 변경하지 않았는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c99951cd6fa460dec364216152eeebb4a475e63d" translate="yes" xml:space="preserve">
          <source>Make sure that the &lt;code&gt;ActionEvent&lt;/code&gt; argument of &lt;code&gt;actionListener&lt;/code&gt; is an  &lt;code&gt;javax.faces.event.ActionEvent&lt;/code&gt; and thus not &lt;code&gt;java.awt.event.ActionEvent&lt;/code&gt;, which is what most IDEs suggest as 1st autocomplete option. Having no argument is wrong as well if you use &lt;code&gt;actionListener=&quot;#{bean.method}&quot;&lt;/code&gt;. If you don't want an argument in your method, use &lt;code&gt;actionListener=&quot;#{bean.method()}&quot;&lt;/code&gt;. Or perhaps you actually want to use &lt;code&gt;action&lt;/code&gt; instead of &lt;code&gt;actionListener&lt;/code&gt;. See also &lt;a href=&quot;https://stackoverflow.com/questions/3909267/differences-between-action-and-actionlistener&quot;&gt;Differences between action and actionListener&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;actionListener&lt;/code&gt; 의 &lt;code&gt;ActionEvent&lt;/code&gt; 인수가 &lt;code&gt;javax.faces.event.ActionEvent&lt;/code&gt; 이고 &lt;code&gt;java.awt.event.ActionEvent&lt;/code&gt; 가 아닌지 확인하십시오. 이는 대부분의 IDE가 첫 번째 자동 완성 옵션으로 제안하는 것입니다. &lt;code&gt;actionListener=&quot;#{bean.method}&quot;&lt;/code&gt; 를 사용하는 경우 인수가없는 것도 잘못된 것입니다. 메소드에 인수를 원하지 않으면 &lt;code&gt;actionListener=&quot;#{bean.method()}&quot;&lt;/code&gt; . 또는 실제로 &lt;code&gt;actionListener&lt;/code&gt; 대신 &lt;code&gt;action&lt;/code&gt; 을 사용하고 싶을 수도 있습니다. &lt;a href=&quot;https://stackoverflow.com/questions/3909267/differences-between-action-and-actionlistener&quot;&gt;action과 actionListener의 차이점을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="787bb671c544c94f96b9ebd91b2b2969dcf21603" translate="yes" xml:space="preserve">
          <source>No &lt;code&gt;UIInput&lt;/code&gt; value validation/conversion error should have occurred. You can use &lt;code&gt;&amp;lt;h:messages&amp;gt;&lt;/code&gt; to show any messages which are not shown by any input-specific &lt;code&gt;&amp;lt;h:message&amp;gt;&lt;/code&gt; components. Don't forget to include the &lt;code&gt;id&lt;/code&gt; of &lt;code&gt;&amp;lt;h:messages&amp;gt;&lt;/code&gt; in the &lt;code&gt;&amp;lt;f:ajax render&amp;gt;&lt;/code&gt;, if any, so that it will be updated as well on ajax requests. See also &lt;a href=&quot;https://stackoverflow.com/questions/16175178/hmessages-does-not-display-messages-when-pcommandbutton-is-pressed&quot;&gt;h:messages does not display messages when p:commandButton is pressed&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;UIInput&lt;/code&gt; 값 유효성 검사 / 변환 오류가 발생하지 않아야합니다. &lt;code&gt;&amp;lt;h:messages&amp;gt;&lt;/code&gt; 를 사용하여 입력 별 &lt;code&gt;&amp;lt;h:message&amp;gt;&lt;/code&gt; 구성 요소에 의해 표시되지 않은 메시지를 표시 할 수 있습니다. &lt;code&gt;&amp;lt;f:ajax render&amp;gt;&lt;/code&gt; 에 &lt;code&gt;&amp;lt;h:messages&amp;gt;&lt;/code&gt; 의 &lt;code&gt;id&lt;/code&gt; 를 반드시 포함시켜 아약스 요청에서도 업데이트되도록하십시오. &lt;a href=&quot;https://stackoverflow.com/questions/16175178/hmessages-does-not-display-messages-when-pcommandbutton-is-pressed&quot;&gt;p : commandButton을 누르면 h : messages에 메시지가 표시되지 않음&lt;/a&gt; 도 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="046e5ea2ef03122b66dcfbbd6d14c9c7c885e722" translate="yes" xml:space="preserve">
          <source>Once I refactored my web.xml, and removed a middle-man-servlet, it then &quot;magically&quot; worked.</source>
          <target state="translated">web.xml을 리팩토링하고 중개인 서블릿을 제거하면 &quot;마 법적으로&quot;작동했습니다.</target>
        </trans-unit>
        <trans-unit id="900f6d313ce970b4b46db22096b5f7b210942ed8" translate="yes" xml:space="preserve">
          <source>One more possibility: if the symptom is that the first invocation works, but subsequent ones do not, you may be using PrimeFaces 3.x with JSF 2.2, as detailed here: &lt;a href=&quot;https://stackoverflow.com/questions/15897201/no-viewstate-is-sent&quot;&gt;No ViewState is sent&lt;/a&gt;.</source>
          <target state="translated">또 다른 가능성 : 첫 번째 호출이 작동하지만 후속 호출이 작동하지 않는 증상 인 경우 여기에 설명 된대로 PrimeFaces 3.x를 JSF 2.2와 함께 사용할 수 있습니다. &lt;a href=&quot;https://stackoverflow.com/questions/15897201/no-viewstate-is-sent&quot;&gt;No ViewState is sent&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="acb58217267f8aa5bbd4414adc16b34810b71c1b" translate="yes" xml:space="preserve">
          <source>Placing this attribute in the same scope as the table data itself fixed the problem.</source>
          <target state="translated">이 속성을 테이블 데이터 자체와 동일한 범위에두면 문제가 해결되었습니다.</target>
        </trans-unit>
        <trans-unit id="e70a41047a9be3f21e41f17344e58620a8b2f37b" translate="yes" xml:space="preserve">
          <source>Possible causes</source>
          <target state="translated">가능한 원인들</target>
        </trans-unit>
        <trans-unit id="6c9d7f7a081fedd16ef6bbbaebd4c0160a1cbf0a" translate="yes" xml:space="preserve">
          <source>So if the underlying data-source is request scoped, the &lt;code&gt;h:commandLink&lt;/code&gt; does not work!</source>
          <target state="translated">따라서 기본 데이터 소스의 범위가 요청되면 &lt;code&gt;h:commandLink&lt;/code&gt; 가 작동하지 않습니다!</target>
        </trans-unit>
        <trans-unit id="89bde3332b761fb73fb19320e8a928b98c3b3e89" translate="yes" xml:space="preserve">
          <source>Sometimes, when using &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;h:commandButton&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt;, the &lt;code&gt;action&lt;/code&gt;, &lt;code&gt;actionListener&lt;/code&gt; or &lt;code&gt;listener&lt;/code&gt; method associated with the tag are simply not being invoked. Or, the bean properties are not updated with submitted &lt;code&gt;UIInput&lt;/code&gt; values.</source>
          <target state="translated">때때로 &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;h:commandButton&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; 를 사용할 때 태그와 연관된 &lt;code&gt;action&lt;/code&gt; , &lt;code&gt;actionListener&lt;/code&gt; 또는 &lt;code&gt;listener&lt;/code&gt; 메소드가 호출되지 않는 경우가 있습니다. 또는 Bean 특성이 제출 된 &lt;code&gt;UIInput&lt;/code&gt; 값으로 업데이트되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2b55403f5e52a8b313917ce599cc8d82a298ce25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onclick&lt;/code&gt; attribute of the &lt;code&gt;UICommand&lt;/code&gt; component and the &lt;code&gt;onsubmit&lt;/code&gt; attribute of the &lt;code&gt;UIForm&lt;/code&gt; component should not return &lt;code&gt;false&lt;/code&gt; or cause a JavaScript error. There should in case of &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; also be no JS errors visible in the browser's JS console. Usually googling the exact error message will already give you the answer. See also &lt;a href=&quot;https://stackoverflow.com/questions/16166039/adding-jquery-to-primefaces-results-in-uncaught-typeerror-over-all-place&quot;&gt;Adding jQuery to PrimeFaces results in Uncaught TypeErrors&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;UICommand&lt;/code&gt; 구성 요소의 &lt;code&gt;onclick&lt;/code&gt; 속성 및 &lt;code&gt;UIForm&lt;/code&gt; 구성 요소의 &lt;code&gt;onsubmit&lt;/code&gt; 속성은 &lt;code&gt;false&lt;/code&gt; 를 리턴하거나 JavaScript 오류를 발생시키지 않아야합니다. &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; 의 경우 브라우저의 JS 콘솔에 JS 오류가 표시되지 않아야합니다. 일반적으로 정확한 오류 메시지를 인터넷 검색하면 이미 답변이 제공됩니다. &lt;a href=&quot;https://stackoverflow.com/questions/16166039/adding-jquery-to-primefaces-results-in-uncaught-typeerror-over-all-place&quot;&gt;PrimeFaces에 jQuery를 추가하면 Uncaught TypeErrors가 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="683575e6a93b9626ee5db4bd9e19d0d15619cd91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rendered&lt;/code&gt; attribute of the component and all of its parents and the &lt;code&gt;test&lt;/code&gt; attribute of any parent &lt;code&gt;&amp;lt;c:if&amp;gt;&lt;/code&gt;/&lt;code&gt;&amp;lt;c:when&amp;gt;&lt;/code&gt; should not evaluate to &lt;code&gt;false&lt;/code&gt; during the apply request values phase of the form submit request. JSF will recheck it as part of safeguard against tampered/hacked requests. Storing the variables responsible for the condition in a &lt;code&gt;@ViewScoped&lt;/code&gt; bean or making sure that you're properly preinitializing the condition in &lt;code&gt;@PostConstruct&lt;/code&gt; of a &lt;code&gt;@RequestScoped&lt;/code&gt; bean should fix it. The same applies to the &lt;code&gt;disabled&lt;/code&gt; attribute of the component, which should not evaluate to &lt;code&gt;true&lt;/code&gt; during apply request values phase. See also &lt;a href=&quot;https://stackoverflow.com/questions/13326404/jsf-commandbutton-action-not-invoked&quot;&gt;JSF CommandButton action not invoked&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/questions/18782503/form-submit-in-conditionally-rendered-component-is-not-processed&quot;&gt;Form submit in conditionally rendered component is not processed&lt;/a&gt;.</source>
          <target state="translated">제출 요청 양식의 요청 값 적용 단계에서 컴포넌트 및 모든 상위의 &lt;code&gt;rendered&lt;/code&gt; 속성 및 상위 &lt;code&gt;&amp;lt;c:if&amp;gt;&lt;/code&gt; / &lt;code&gt;&amp;lt;c:when&amp;gt;&lt;/code&gt; 의 &lt;code&gt;test&lt;/code&gt; 속성이 &lt;code&gt;false&lt;/code&gt; 로 평가되지 않아야합니다. JSF는 변조 / 해킹 요청에 대한 보호 수단으로이를 재확인합니다. &lt;code&gt;@ViewScoped&lt;/code&gt; Bean에 조건을 담당하는 변수를 저장하거나 &lt;code&gt;@RequestScoped&lt;/code&gt; Bean의 &lt;code&gt;@PostConstruct&lt;/code&gt; 에서 조건을 올바르게 사전 초기화하고 있는지 확인하여 문제를 해결해야합니다. 구성 요소의 &lt;code&gt;disabled&lt;/code&gt; 속성에도 동일하게 적용되며, 이는 요청 값 적용 단계 중에 &lt;code&gt;true&lt;/code&gt; 로 평가되지 않아야합니다. &lt;a href=&quot;https://stackoverflow.com/questions/13326404/jsf-commandbutton-action-not-invoked&quot;&gt;JSF CommandButton 작업이 호출되지 않고&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/questions/18782503/form-submit-in-conditionally-rendered-component-is-not-processed&quot;&gt;조건부 렌더링 된 구성 요소의 양식 제출이 처리&lt;/a&gt; 되지 않음 도 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c81848ff08fc3983fe3b2c5aa9924909dad9fd69" translate="yes" xml:space="preserve">
          <source>The underlying data-source which is bound to the &lt;code&gt;h:dataTable&lt;/code&gt; must also be available in the second JSF-Lifecycle that is triggered when the link is clicked.</source>
          <target state="translated">&lt;code&gt;h:dataTable&lt;/code&gt; 에 바인드 된 기본 데이터 소스는 링크를 클릭 할 때 트리거되는 두 번째 JSF 라이프 사이클에서도 사용 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="31194f50c39ca6965c1c258a38ee81b4f0441b53" translate="yes" xml:space="preserve">
          <source>To solve;</source>
          <target state="translated">해결하다;</target>
        </trans-unit>
        <trans-unit id="cd38dcc63534233835be9bd9ba0ef22a7253957e" translate="yes" xml:space="preserve">
          <source>What I don't know is why the facelet was able to access the bean properties but could not set them, and this clearly screams for doing away with the mix of servlets and JSF, but I hope this helps someone avoid many hours of head-to-table-banging.</source>
          <target state="translated">내가 모르는 것은 Facelet이 bean 속성에 액세스 할 수 있었지만 설정할 수 없었기 때문에 서블릿과 JSF의 혼합을 없애기 위해 비명을 지르지 만, 이것이 누군가가 많은 시간을 낭비하지 않도록하기를 희망합니다. 테이블 뱅잉.</target>
        </trans-unit>
        <trans-unit id="55d020f4d16abc75661bbb064220f5f235d8332c" translate="yes" xml:space="preserve">
          <source>What are the possible causes and solutions for this?</source>
          <target state="translated">이에 대한 가능한 원인과 해결책은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="52fb4fb0c0ae3500cce8b73c884ba66d78512a5b" translate="yes" xml:space="preserve">
          <source>When you use a &lt;code&gt;p:commandButton&lt;/code&gt; for the action that needs to be done on the server, you can not use &lt;code&gt;type=&quot;button&quot;&lt;/code&gt; because that is for &lt;b&gt;Push buttons&lt;/b&gt; which are used to execute custom javascript without causing an ajax/non-ajax request to the server.</source>
          <target state="translated">서버에서 수행해야하는 조치에 &lt;code&gt;p:commandButton&lt;/code&gt; 을 사용하는 경우 &lt;code&gt;type=&quot;button&quot;&lt;/code&gt; 을 사용할 수 없습니다. 이는 ajax / non-ajax 요청을 발생시키지 않고 사용자 정의 Javascript를 실행하는 데 사용되는 &lt;b&gt;푸시 단추에&lt;/b&gt; 대한 것입니다. 서버에.</target>
        </trans-unit>
        <trans-unit id="00e25c622df489b30b52379657126b136ec6699d" translate="yes" xml:space="preserve">
          <source>Whenever an &lt;code&gt;UICommand&lt;/code&gt; component (&lt;code&gt;&amp;lt;h:commandXxx&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;p:commandXxx&amp;gt;&lt;/code&gt;, etc) fails to invoke the associated action method, or an &lt;code&gt;UIInput&lt;/code&gt; component (&lt;code&gt;&amp;lt;h:inputXxx&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;p:inputXxxx&amp;gt;&lt;/code&gt;, etc) fails to process the submitted values and/or update the model values, and you aren't seeing any googlable exceptions and/or warnings in the server log, also not when you configure an ajax exception handler as per &lt;a href=&quot;https://stackoverflow.com/questions/27526753/exception-handling-in-jsf-ajax-requests&quot;&gt;Exception handling in JSF ajax requests&lt;/a&gt;, nor when you set below context parameter in &lt;code&gt;web.xml&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;UICommand&lt;/code&gt; 구성 요소 ( &lt;code&gt;&amp;lt;h:commandXxx&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;p:commandXxx&amp;gt;&lt;/code&gt; 등)가 연관된 조치 메소드를 호출하지 못하거나 &lt;code&gt;UIInput&lt;/code&gt; 구성 요소 ( &lt;code&gt;&amp;lt;h:inputXxx&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;p:inputXxxx&amp;gt;&lt;/code&gt; 등)가 제출 된 값 및 / 또는 모델 값 업데이트 및 &lt;a href=&quot;https://stackoverflow.com/questions/27526753/exception-handling-in-jsf-ajax-requests&quot;&gt;JSF ajax 요청의 예외 처리에&lt;/a&gt; 따라 ajax 예외 핸들러를 구성 할 때 또는 설정하지 않은 경우 서버 로그에 흔들기 가능한 예외 및 / 또는 경고가 표시되지 않음 &lt;code&gt;web.xml&lt;/code&gt; 의 컨텍스트 매개 변수 아래</target>
        </trans-unit>
        <trans-unit id="8cc2d69e76122736995792000c78c4891eb63435" translate="yes" xml:space="preserve">
          <source>While my answer isn't 100% applicable, but most search engines find this as the first hit, I decided to post it nontheless:</source>
          <target state="translated">내 대답은 100 % 적용 할 수는 없지만 대부분의 검색 엔진은 이것을 첫 번째 인기 항목으로 생각하지만 그럼에도 불구하고 게시하기로 결정했습니다.</target>
        </trans-unit>
        <trans-unit id="423ade3816837a68684473e4349ce56f6c5c7386" translate="yes" xml:space="preserve">
          <source>You cannot nest multiple &lt;code&gt;UIForm&lt;/code&gt; components in each other. This is illegal in HTML. The browser behavior is unspecified. Watch out with include files! You can use &lt;code&gt;UIForm&lt;/code&gt; components in parallel, but they won't process each other during submit. You should also watch out with &quot;God Form&quot; antipattern; make sure that you don't unintentionally process/validate all other (invisible) inputs in the very same form (e.g. having a hidden dialog with required inputs in the very same form). See also &lt;a href=&quot;https://stackoverflow.com/questions/7371903/using-multiple-hform-in-a-jsf-page&quot;&gt;How to use &amp;lt;h:form&amp;gt; in JSF page? Single form? Multiple forms? Nested forms?&lt;/a&gt;.</source>
          <target state="translated">여러 &lt;code&gt;UIForm&lt;/code&gt; 구성 요소를 서로 중첩 할 수 없습니다. 이것은 HTML에서 불법입니다. 브라우저 동작이 지정되지 않았습니다. 포함 파일을 조심하십시오! &lt;code&gt;UIForm&lt;/code&gt; 구성 요소를 병렬로 사용할 수 있지만 제출 중에는 서로 처리되지 않습니다. 또한 &quot;신 양식&quot;반 패턴을 조심해야합니다. 의도하지 않은 다른 모든 (보이지 않는) 입력을 동일한 형식으로 처리하거나 유효성을 검사하지 않도록하십시오 (예 : 매우 유사한 형식의 필수 입력을 가진 숨겨진 대화 상자가있는 경우). &lt;a href=&quot;https://stackoverflow.com/questions/7371903/using-multiple-hform-in-a-jsf-page&quot;&gt;JSF 페이지에서 &amp;lt;h : form&amp;gt;을 사용하는 방법을 참조하십시오.&lt;/a&gt; 단일 양식? 여러 형태? 중첩 된 양식? .</target>
        </trans-unit>
        <trans-unit id="83b9786384a50732d924ecf189d5816e812eb225" translate="yes" xml:space="preserve">
          <source>and you are also not seeing any googlable errors and/or warnings in browser's JavaScript console (press F12 in Chrome/Firefox23+/IE9+ to open the web developer toolset and then open the &lt;em&gt;Console&lt;/em&gt; tab), then work through below list of possible causes.</source>
          <target state="translated">또한 브라우저의 JavaScript 콘솔에 googlable 오류 및 / 또는 경고가 표시되지 않습니다 (Chrome / Firefox23 + / IE9 +에서 F12를 눌러 웹 개발자 툴셋을 연 다음 &lt;em&gt;콘솔&lt;/em&gt; 탭을여십시오). 아래 가능한 원인 목록을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="0108272869d720e2cea513ee55f9f5fad26a791d" translate="yes" xml:space="preserve">
          <source>commandButton/commandLink/ajax action/listener method not invoked or input value not set/updated</source>
          <target state="translated">commandButton / commandLink / ajax 액션 / 리스너 메소드가 호출되지 않거나 입력 값이 설정 / 업데이트되지 않았습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
