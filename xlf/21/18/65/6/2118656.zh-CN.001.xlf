<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/2118656">
    <body>
      <group id="2118656">
        <trans-unit id="866488c406c7c36740322c706d4fb76667c9ff6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UICommand&lt;/code&gt; and &lt;code&gt;UIInput&lt;/code&gt; components must be placed inside an &lt;code&gt;UIForm&lt;/code&gt; component, e.g. &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; (and thus not plain HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;), otherwise nothing can be sent to the server. &lt;code&gt;UICommand&lt;/code&gt; components must also not have &lt;code&gt;type=&quot;button&quot;&lt;/code&gt; attribute, otherwise it will be a dead button which is only useful for JavaScript &lt;code&gt;onclick&lt;/code&gt;. See also &lt;a href=&quot;https://stackoverflow.com/questions/3681123/how-to-get-hinputtext-values-from-gui-xhtml-into-java-class-jsf-bean&quot;&gt;How to send form input values and invoke a method in JSF bean&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/questions/12958208/hcommandbutton-does-not-initiate-a-postback&quot;&gt;&amp;lt;h:commandButton&amp;gt; does not initiate a postback&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;UICommand&lt;/code&gt; 和 &lt;code&gt;UIInput&lt;/code&gt; 组件必须放置在 &lt;code&gt;UIForm&lt;/code&gt; 组件内，例如 &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; （因此不是普通的HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; ），否则无法将任何内容发送到服务器。 &lt;code&gt;UICommand&lt;/code&gt; 组件也不能具有 &lt;code&gt;type=&quot;button&quot;&lt;/code&gt; 属性，否则它将是一个无效按钮，仅对JavaScript &lt;code&gt;onclick&lt;/code&gt; 有用。 另请参见&lt;a href=&quot;https://stackoverflow.com/questions/3681123/how-to-get-hinputtext-values-from-gui-xhtml-into-java-class-jsf-bean&quot;&gt;如何在JSF bean中发送表单输入值和调用方法，&lt;/a&gt;并且&lt;a href=&quot;https://stackoverflow.com/questions/12958208/hcommandbutton-does-not-initiate-a-postback&quot;&gt;&amp;lt;h：commandButton&amp;gt;不会启动回发&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="d978d9b3753f9d16c9ec6fe433e3273e16654fc4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(warning: when you post screenshots from HTTP request headers like above from a production environment, then make sure you scramble/obfuscate any session cookies in the screenshot to avoid session hijacking attacks!)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;（警告：在生产环境中从上述HTTP请求标头发布屏幕截图时，请确保对屏幕截图中的所有会话cookie进行加扰/混淆），以避免会话劫持攻击！）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b971e4f0bb141033e78686962da9b91c12019960" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is the solution, which is worked for me.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;这是为我工作的解决方案。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b7a820491ba9cea62cbb9eb9033a2f0fe79a2697" translate="yes" xml:space="preserve">
          <source>As the PrimeFaces User's Guide states in section 3.18, the defaults for &lt;code&gt;process&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt; are both &lt;code&gt;@form&lt;/code&gt;, which pretty much opposes the defaults you might expect from plain JSF &lt;code&gt;f:ajax&lt;/code&gt; or RichFaces, which are &lt;code&gt;execute=&quot;@this&quot;&lt;/code&gt; and &lt;code&gt;render=&quot;@none&quot;&lt;/code&gt; respectively.</source>
          <target state="translated">如《 PrimeFaces用户指南》第3.18节所述， &lt;code&gt;process&lt;/code&gt; 和 &lt;code&gt;update&lt;/code&gt; 的默认值均为 &lt;code&gt;@form&lt;/code&gt; ，这与您可能希望从普通JSF &lt;code&gt;f:ajax&lt;/code&gt; 或RichFaces获得的默认值相反，它们是 &lt;code&gt;execute=&quot;@this&quot;&lt;/code&gt; 和 &lt;code&gt;render=&quot;@none&quot;&lt;/code&gt; 分别为&amp;ldquo; @none&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="ab36e796edd5a2aff059837493ac2891867d064d" translate="yes" xml:space="preserve">
          <source>Basically, using sendRedirect() allowed the JSF &quot;container&quot; to take control whereas RequestDispatcher.forward() was obviously not.</source>
          <target state="translated">基本上,使用sendRedirect()可以让JSF &quot;容器 &quot;获得控制权,而RequestDispatcher.forward()显然不是。</target>
        </trans-unit>
        <trans-unit id="3be03732e361b25d3aa4cc4127e47b23cc0bc01a" translate="yes" xml:space="preserve">
          <source>Bottom line, the problem was that the middle-man-servlet was using RequestDispatcher.forward(...) to redirect from the HttpServlet environment to the JSF environment whereas the servlet being called prior to it was redirecting with HttpServletResponse.sendRedirect(...).</source>
          <target state="translated">底线,问题是中间人-servlet使用RequestDispatcher.forward(...)从HttpServlet环境重定向到JSF环境,而之前被调用的servlet是用HttpServletResponse.sendRedirect(...)重定向。</target>
        </trans-unit>
        <trans-unit id="387a85de6fd64795614cf3a03aeb1eb3a0202d39" translate="yes" xml:space="preserve">
          <source>Bug in the framework. For example, RichFaces has a &quot;&lt;a href=&quot;https://issues.jboss.org/browse/RF-12594&quot;&gt;conversion error&lt;/a&gt;&quot; when using a &lt;code&gt;rich:calendar&lt;/code&gt; UI element with a &lt;code&gt;defaultLabel&lt;/code&gt; attribute (or, in some cases, a &lt;code&gt;rich:placeholder&lt;/code&gt; sub-element). This bug prevents the bean method from being invoked when no value is set for the calendar date. Tracing framework bugs can be accomplished by starting with a simple working example and building the page back up until the bug is discovered.</source>
          <target state="translated">框架中的错误。 例如，当使用带有 &lt;code&gt;defaultLabel&lt;/code&gt; 属性的 &lt;code&gt;rich:calendar&lt;/code&gt; UI元素（或在某些情况下，是 &lt;code&gt;rich:placeholder&lt;/code&gt; 子元素）时，RichFaces会出现&amp;ldquo; &lt;a href=&quot;https://issues.jboss.org/browse/RF-12594&quot;&gt;转换错误&lt;/a&gt; &amp;rdquo;。 当没有为日历日期设置任何值时，此错误阻止Bean方法被调用。 跟踪框架的错误可以通过从一个简单的工作示例开始并备份页面直到发现该错误来完成。</target>
        </trans-unit>
        <trans-unit id="f52fd3814b69cf3df3d930cda2ccbc4fa45914c1" translate="yes" xml:space="preserve">
          <source>Click the &lt;em&gt;Network&lt;/em&gt; tab to see the HTTP traffic monitor. Submit the form and investigate if the request headers and form data and the response body are as per expectations. Below screenshot is an example from Chrome which demonstrates a successful ajax submit of a simple form with a single &lt;code&gt;&amp;lt;h:inputText&amp;gt;&lt;/code&gt; and a single &lt;code&gt;&amp;lt;h:commandButton&amp;gt;&lt;/code&gt; with &lt;code&gt;&amp;lt;f:ajax execute=&quot;@form&quot; render=&quot;@form&quot;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">单击&lt;em&gt;网络&lt;/em&gt;选项卡以查看HTTP流量监视器。 提交表单并调查请求标题和表单数据以及响应正文是否符合预期。 下面的屏幕快照是一个来自Chrome的示例，该示例演示了一个简单表单的成功ajax提交，该表单带有一个 &lt;code&gt;&amp;lt;h:inputText&amp;gt;&lt;/code&gt; 和一个 &lt;code&gt;&amp;lt;h:commandButton&amp;gt;&lt;/code&gt; 和一个 &lt;code&gt;&amp;lt;f:ajax execute=&quot;@form&quot; render=&quot;@form&quot;&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad43ac09dd124cb666003cf8589c2e04c4dd12a5" translate="yes" xml:space="preserve">
          <source>Debugging hints</source>
          <target state="translated">调试提示</target>
        </trans-unit>
        <trans-unit id="5f0f18a890d46086092f46381c0776f9a1e0fb0a" translate="yes" xml:space="preserve">
          <source>For this purpose, you can dispense the &lt;code&gt;type&lt;/code&gt; attribute (default value is &lt;code&gt;&quot;submit&quot;&lt;/code&gt;) or you can explicitly use &lt;code&gt;type=&quot;submit&quot;&lt;/code&gt;.</source>
          <target state="translated">为此，您可以分配 &lt;code&gt;type&lt;/code&gt; 属性（默认值为 &lt;code&gt;&quot;submit&quot;&lt;/code&gt; ），也可以显式使用 &lt;code&gt;type=&quot;submit&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a04bb2946c575867840a2e08c55c9b55395447c2" translate="yes" xml:space="preserve">
          <source>Got stuck with this issue myself and found one more cause for this problem.
If you don't have setter methods in your backing bean for the properties used in your *.xhtml , then the action is simply not invoked.</source>
          <target state="translated">我自己也被这个问题困住了,并且发现了另一个问题的原因。如果你在你的backing bean中没有为你的*.xhtml中使用的属性设置方法,那么这个动作就不会被调用。</target>
        </trans-unit>
        <trans-unit id="8b5d5e1850f3f69592961b6908eaccc7e7789e20" translate="yes" xml:space="preserve">
          <source>Here, process=&quot;userGroupSetupForm&quot; atrribute is mandatory for Ajax call. actionListener is calling a method from @ViewScope Bean. Also updating growl message, Datatable: userGroupList and Form: userGroupSetupForm.</source>
          <target state="translated">这里,process=&quot;userGroupSetupForm&quot; atrribute是Ajax调用的必选项,actionListener是从@ViewScope Bean中调用一个方法。同时更新咆哮消息,Datatable:userGroupList和Form:userGroupSetupForm。</target>
        </trans-unit>
        <trans-unit id="e4f350fbbd6cd44f6756b173b457a31d927cc6ae" translate="yes" xml:space="preserve">
          <source>Hope this will help someone!</source>
          <target state="translated">希望这篇文章能帮助到大家!</target>
        </trans-unit>
        <trans-unit id="9cf3abd217ce1127f62e6207c9f17e88720b5fcb" translate="yes" xml:space="preserve">
          <source>I fixed my problem with placing the:</source>
          <target state="translated">我把我放置的问题解决了。</target>
        </trans-unit>
        <trans-unit id="ada7b48d682b4c15818372e71d2f57a896c7f67a" translate="yes" xml:space="preserve">
          <source>I had a command button on a row of a datatable (the extended version, so &lt;code&gt;&amp;lt;hx:datatable&amp;gt;&lt;/code&gt;) and the UICommand would not fire from certain rows from the table (the rows that would not fire were the rows greater than the default row display size).</source>
          <target state="translated">我在数据表的一行上有一个命令按钮（扩展版本，所以 &lt;code&gt;&amp;lt;hx:datatable&amp;gt;&lt;/code&gt; ），UICommand不会从表中的某些行触发（不会触发的行是大于默认行的行）显示屏尺寸）。</target>
        </trans-unit>
        <trans-unit id="771d92126e32f5d42b83fd8f7b7d8509d3301e8d" translate="yes" xml:space="preserve">
          <source>I had a drop-down component for selecting number of rows to display. The value backing this field was in &lt;code&gt;RequestScope&lt;/code&gt;. The data backing the table itself was in a sort of &lt;code&gt;ViewScope&lt;/code&gt; (in reality, temporarily in &lt;code&gt;SessionScope&lt;/code&gt;).</source>
          <target state="translated">我有一个下拉组件，用于选择要显示的行数。 支持该字段的值在 &lt;code&gt;RequestScope&lt;/code&gt; 中 。 支持表本身的数据在某种 &lt;code&gt;ViewScope&lt;/code&gt; 中 （实际上，临时在 &lt;code&gt;SessionScope&lt;/code&gt; 中 ）。</target>
        </trans-unit>
        <trans-unit id="2a55afc4ed451bf938ab6a7781f2985f0cfdbb57" translate="yes" xml:space="preserve">
          <source>I had lots of fun debugging an issue where a &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt;'s action in &lt;code&gt;richfaces&lt;/code&gt;&lt;code&gt;datatable&lt;/code&gt; refused to fire. The table used to work at some point but stopped for no apparent reason. I left no stone unturned, only to find out that my &lt;code&gt;rich:datatable&lt;/code&gt; was using the wrong &lt;code&gt;rowKeyConverter&lt;/code&gt; which returned nulls that richfaces happily used as row keys. This prevented my &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt; action from getting called.</source>
          <target state="translated">我调试了很多问题，其中 &lt;code&gt;richfaces&lt;/code&gt; 中的 &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt; 动作被拒绝触发，我感到很开心。 该表曾经在某个时候可以工作，但没有明显的原因停止。 我毫不动摇，只是发现我的 &lt;code&gt;rich:datatable&lt;/code&gt; 使用了错误的 &lt;code&gt;rowKeyConverter&lt;/code&gt; ，该错误返回了null，richfaces愉快地用作行键。 这阻止了我的 &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt; 动作被调用。</target>
        </trans-unit>
        <trans-unit id="5251cdd4c6bff16176d8657be0cf1a79d3c894cc" translate="yes" xml:space="preserve">
          <source>I had this problem as well and only really started to hone in on the root cause after opening up the browser's web console.  Until that, I was unable to get any error messages (even with &lt;code&gt;&amp;lt;p:messages&amp;gt;&lt;/code&gt;).  The web console showed an HTTP 405 status code coming back from the &lt;code&gt;&amp;lt;h:commandButton type=&quot;submit&quot; action=&quot;#{myBean.submit}&quot;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">我也遇到了这个问题，只有在打开浏览器的Web控制台后才真正着手解决根本原因。 在此之前，我无法获得任何错误消息（即使使用 &lt;code&gt;&amp;lt;p:messages&amp;gt;&lt;/code&gt; ）。 Web控制台显示了 &lt;code&gt;&amp;lt;h:commandButton type=&quot;submit&quot; action=&quot;#{myBean.submit}&quot;&amp;gt;&lt;/code&gt; 返回的HTTP 405状态代码。</target>
        </trans-unit>
        <trans-unit id="e9f5e148d29cf7fae55e775799f77920ad0986c8" translate="yes" xml:space="preserve">
          <source>I recently ran into a problem with a UICommand not invoking in a JSF 1.2 application using IBM Extended Faces Components.</source>
          <target state="translated">我最近在使用IBM Extended Faces组件的JSF 1.2应用程序中遇到了一个问题,即UICommand不能在JSF 1.2中调用。</target>
        </trans-unit>
        <trans-unit id="192636a4bca94899648371c8cb323c3f1ce21472" translate="yes" xml:space="preserve">
          <source>I think this is alluded to in BalusC #4 above, but not only did the table value need to be View or Session scoped but also the attribute controlling the number of rows to display on that table.</source>
          <target state="translated">我想这一点在上面的BalusC #4中已经提到了,但是不仅表的值需要View或Session scoped,而且还需要控制要在该表上显示的行数的属性。</target>
        </trans-unit>
        <trans-unit id="2c2fe531415109359e102a0680cfcc231f4047c0" translate="yes" xml:space="preserve">
          <source>I would mention one more thing that concerns Primefaces's &lt;code&gt;p:commandButton&lt;/code&gt;!</source>
          <target state="translated">我还要提到与Primefaces的 &lt;code&gt;p:commandButton&lt;/code&gt; 有关的另一件事！</target>
        </trans-unit>
        <trans-unit id="9924714aee235af76994537f44085e166f664203" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;UICommand&lt;/code&gt; or &lt;code&gt;UIInput&lt;/code&gt; components are included by a dynamic source such as &lt;code&gt;&amp;lt;ui:include src=&quot;#{bean.include}&quot;&amp;gt;&lt;/code&gt;, then you need to ensure that exactly the same &lt;code&gt;#{bean.include}&lt;/code&gt; value is preserved during the view build time of the form submit request. JSF will reexecute it during building the component tree. Putting the bean in the view scope and/or making sure that you load the data model in &lt;code&gt;@PostConstruct&lt;/code&gt; of the bean (and thus not in a getter method!) should fix it. See also &lt;a href=&quot;https://stackoverflow.com/questions/7108668/how-to-ajax-refresh-dynamic-include-content-by-navigation-menu-jsf-spa&quot;&gt;How to ajax-refresh dynamic include content by navigation menu? (JSF SPA)&lt;/a&gt;.</source>
          <target state="translated">如果动态源（如 &lt;code&gt;&amp;lt;ui:include src=&quot;#{bean.include}&quot;&amp;gt;&lt;/code&gt; 包含 &lt;code&gt;UICommand&lt;/code&gt; 或 &lt;code&gt;UIInput&lt;/code&gt; 组件，则需要确保在视图期间保留完全相同的 &lt;code&gt;#{bean.include}&lt;/code&gt; 值。表单提交请求的构建时间。 JSF将在构建组件树期间重新执行它。 将bean放在视图范围内和/或确保将数据模型加载到bean的 &lt;code&gt;@PostConstruct&lt;/code&gt; 中（因此不在getter方法中！）应该可以修复它。 另请参阅&lt;a href=&quot;https://stackoverflow.com/questions/7108668/how-to-ajax-refresh-dynamic-include-content-by-navigation-menu-jsf-spa&quot;&gt;如何通过导航菜单Ajax刷新动态包含内容？&lt;/a&gt; （JSF SPA） 。</target>
        </trans-unit>
        <trans-unit id="d039e312f75e608caf4b0e9a953fa4288127b59a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;UICommand&lt;/code&gt; or &lt;code&gt;UIInput&lt;/code&gt; components are placed inside an iterating component like &lt;code&gt;&amp;lt;h:dataTable&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;ui:repeat&amp;gt;&lt;/code&gt;, etc, then you need to ensure that exactly the same &lt;code&gt;value&lt;/code&gt; of the iterating component is been preserved during the apply request values phase of the form submit request. JSF will reiterate over it to find the clicked link/button and submitted input values. Putting the bean in the view scope and/or making sure that you load the data model in &lt;code&gt;@PostConstruct&lt;/code&gt; of the bean (and thus not in a getter method!) should fix it. See also &lt;a href=&quot;https://stackoverflow.com/questions/5765853/when-should-i-load-the-collection-from-database-for-hdatatable&quot;&gt;How and when should I load the model from database for h:dataTable&lt;/a&gt;.</source>
          <target state="translated">如果将 &lt;code&gt;UICommand&lt;/code&gt; 或 &lt;code&gt;UIInput&lt;/code&gt; 组件放置在诸如 &lt;code&gt;&amp;lt;h:dataTable&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;ui:repeat&amp;gt;&lt;/code&gt; 等的迭代组件内，则需要确保在的应用请求值阶段保留与迭代组件完全相同的值。表单提交请求。 JSF将在其上重申以找到单击的链接/按钮和提交的输入值。 将bean放在视图范围内和/或确保将数据模型加载到bean的 &lt;code&gt;@PostConstruct&lt;/code&gt; 中（因此不在getter方法中！）应该可以修复它。 另请参见&lt;a href=&quot;https://stackoverflow.com/questions/5765853/when-should-i-load-the-collection-from-database-for-hdatatable&quot;&gt;如何以及何时从数据库中为h：dataTable加载模型&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="3376040c6a80d6d2d66683587c3c37544d43149c" translate="yes" xml:space="preserve">
          <source>If a parent of the &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; with the &lt;code&gt;UICommand&lt;/code&gt; button is beforehand been rendered/updated by an ajax request coming from another form in the same page, then the first action will always fail in JSF 2.2 or older. The second and subsequent actions will work. This is caused by a bug in view state handling which is reported as &lt;a href=&quot;https://github.com/javaee/javaserverfaces-spec/issues/790&quot;&gt;JSF spec issue 790&lt;/a&gt; and currently fixed in JSF 2.3. For older JSF versions, you need to explicitly specify the ID of the &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; in the &lt;code&gt;render&lt;/code&gt; of the &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt;. See also &lt;a href=&quot;https://stackoverflow.com/questions/11408130/hcommandbutton-hcommandlink-does-not-work-on-first-click-works-only-on-second&quot;&gt;h:commandButton/h:commandLink does not work on first click, works only on second click&lt;/a&gt;.</source>
          <target state="translated">如果带有 &lt;code&gt;UICommand&lt;/code&gt; 按钮的 &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; 的父对象是事先由来自同一页面中另一种表单的ajax请求呈现/更新的，则第一个操作在JSF 2.2或更早版本中总是会失败。 第二步和后续操作将起作用。 这是由视图状态处理中的错误引起的，该错误报告为&lt;a href=&quot;https://github.com/javaee/javaserverfaces-spec/issues/790&quot;&gt;JSF规范问题790&lt;/a&gt; ，当前已在JSF 2.3中修复。 对于较旧的JSF版本，您需要在 &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; 的 &lt;code&gt;render&lt;/code&gt; 中显式指定 &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; 的ID。 另请参见&lt;a href=&quot;https://stackoverflow.com/questions/11408130/hcommandbutton-hcommandlink-does-not-work-on-first-click-works-only-on-second&quot;&gt;h：commandButton / h：commandLink在第一次单击时不起作用，仅在第二次单击时起作用&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4a9ed5b372bb2f791d112478dcb7a6c28e7e44a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; has &lt;code&gt;enctype=&quot;multipart/form-data&quot;&lt;/code&gt; set in order to support file uploading, then you need to make sure that you're using at least JSF 2.2, or that the servlet filter who is responsible for parsing multipart/form-data requests is properly configured, otherwise the &lt;code&gt;FacesServlet&lt;/code&gt; will end up getting no request parameters at all and thus not be able to apply the request values. How to configure such a filter depends on the file upload component being used. For Tomahawk &lt;code&gt;&amp;lt;t:inputFileUpload&amp;gt;&lt;/code&gt;, check &lt;a href=&quot;https://stackoverflow.com/questions/5418292/jsf-2-0-file-upload/5424229#5424229&quot;&gt;this answer&lt;/a&gt; and for PrimeFaces &lt;code&gt;&amp;lt;p:fileUpload&amp;gt;&lt;/code&gt;, check &lt;a href=&quot;https://stackoverflow.com/questions/8875818/how-to-use-primefaces-pfileupload-listener-method-is-never-invoked/8880083#8880083&quot;&gt;this answer&lt;/a&gt;. Or, if you're actually not uploading a file at all, then remove the attribute altogether.</source>
          <target state="translated">如果 &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; 设置了 &lt;code&gt;enctype=&quot;multipart/form-data&quot;&lt;/code&gt; 以支持文件上传，那么您需要确保至少使用JSF 2.2，或者要确保负责该工作的servlet过滤器解析multipart / form-data请求的配置正确，否则 &lt;code&gt;FacesServlet&lt;/code&gt; 最终将根本没有任何请求参数，从而无法应用请求值。 如何配置此类过滤器取决于所使用的文件上传组件。 对于&amp;ldquo;战斧&amp;rdquo; &lt;code&gt;&amp;lt;t:inputFileUpload&amp;gt;&lt;/code&gt; ，请检查&lt;a href=&quot;https://stackoverflow.com/questions/5418292/jsf-2-0-file-upload/5424229#5424229&quot;&gt;此答案&lt;/a&gt; ；对于PrimeFaces &lt;code&gt;&amp;lt;p:fileUpload&amp;gt;&lt;/code&gt; ，请检查&lt;a href=&quot;https://stackoverflow.com/questions/8875818/how-to-use-primefaces-pfileupload-listener-method-is-never-invoked/8880083#8880083&quot;&gt;此答案&lt;/a&gt; 。 或者，如果您实际上根本没有上传文件，请完全删除该属性。</target>
        </trans-unit>
        <trans-unit id="22cd41b11cd350ae8b00095e457defda31bbf524" translate="yes" xml:space="preserve">
          <source>If the row display was increased via the control which value was also bound to the datatable's &lt;code&gt;rows&lt;/code&gt; attribute, none of the rows displayed as a result of this change could fire the UICommand when clicked.</source>
          <target state="translated">如果通过控件增加了行显示，该值也绑定到了数据表的 &lt;code&gt;rows&lt;/code&gt; 属性，则单击此命令后，由于该更改而显示的所有行都不会触发UICommand。</target>
        </trans-unit>
        <trans-unit id="78fb12f9d4f9ffdea734456966c80e8cfbfde585" translate="yes" xml:space="preserve">
          <source>If the submitted values still end up being &lt;code&gt;null&lt;/code&gt;, and you're using CDI to manage beans, then make sure that you import the scope annotation from the correct package, else CDI will default to &lt;code&gt;@Dependent&lt;/code&gt; which effectively recreates the bean on every single evaluation of the EL expression. See also &lt;a href=&quot;https://stackoverflow.com/questions/9470440/sessionscoped-bean-looses-scope-and-gets-recreated-all-the-time-fields-become&quot;&gt;@SessionScoped bean looses scope and gets recreated all the time, fields become null&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/questions/19322364/what-is-the-default-managed-bean-scope-in-a-jsf-2-application&quot;&gt;What is the default Managed Bean Scope in a JSF 2 application?&lt;/a&gt;</source>
          <target state="translated">如果提交的值仍然最终为 &lt;code&gt;null&lt;/code&gt; ，并且您正在使用CDI管理Bean，请确保从正确的包中导入范围注释，否则CDI将默认为 &lt;code&gt;@Dependent&lt;/code&gt; ，这样可以在每次评估时有效地重新创建Bean。 EL表达式 另请参见&lt;a href=&quot;https://stackoverflow.com/questions/9470440/sessionscoped-bean-looses-scope-and-gets-recreated-all-the-time-fields-become&quot;&gt;@SessionScoped bean始终失去作用域并重新创建，字段变为空，&lt;/a&gt;并且&lt;a href=&quot;https://stackoverflow.com/questions/19322364/what-is-the-default-managed-bean-scope-in-a-jsf-2-application&quot;&gt;JSF 2应用程序中的默认Managed Bean Scope是什么？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f05f88312346985c9a90156785bf6578f9f4e0bd" translate="yes" xml:space="preserve">
          <source>If you are using a PrimeFaces &lt;code&gt;&amp;lt;p:dialog&amp;gt;&lt;/code&gt; or a &lt;code&gt;&amp;lt;p:overlayPanel&amp;gt;&lt;/code&gt;, then make sure that they have their own &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt;. Because, these components are by default by JavaScript relocated to end of HTML &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;. So, if they were originally sitting inside a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;, then they would now not anymore sit in a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;. See also &lt;a href=&quot;https://stackoverflow.com/questions/18958729/pcommandbutton-action-doesnt-work-inside-pdialog&quot;&gt;p:commandbutton action doesn't work inside p:dialog&lt;/a&gt;</source>
          <target state="translated">如果您使用的是PrimeFaces &lt;code&gt;&amp;lt;p:dialog&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;p:overlayPanel&amp;gt;&lt;/code&gt; ，请确保它们具有自己的 &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; 。 因为，默认情况下，JavaScript将这些组件重定位到HTML &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 的末尾。 因此，如果他们最初坐在 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 内 ，那么现在他们将不再坐在 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 内 。 另请参见&lt;a href=&quot;https://stackoverflow.com/questions/18958729/pcommandbutton-action-doesnt-work-inside-pdialog&quot;&gt;p：commandbutton动作在p：dialog中不起作用&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fcac2640402780d0075832d85cbc7c426c4691e0" translate="yes" xml:space="preserve">
          <source>If you're using &lt;strong&gt;PrimeFaces&lt;/strong&gt; (or some similar API) &lt;code&gt;p:commandButton&lt;/code&gt; or &lt;code&gt;p:commandLink&lt;/code&gt;, chances are that you have forgotten to explicitly add &lt;code&gt;process=&quot;@this&quot;&lt;/code&gt; to your command components.</source>
          <target state="translated">如果您使用的是&lt;strong&gt;PrimeFaces&lt;/strong&gt; （或类似的API） &lt;code&gt;p:commandButton&lt;/code&gt; 或 &lt;code&gt;p:commandLink&lt;/code&gt; ，则可能忘记了将 &lt;code&gt;process=&quot;@this&quot;&lt;/code&gt; 显式添加到命令组件中。</target>
        </trans-unit>
        <trans-unit id="1403aaffc997b6c2b3ecacbce732c81da1e089e5" translate="yes" xml:space="preserve">
          <source>If you're using Ajax via JSF 2.x &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; or e.g. PrimeFaces &lt;code&gt;&amp;lt;p:commandXxx&amp;gt;&lt;/code&gt;, make sure that you have a &lt;code&gt;&amp;lt;h:head&amp;gt;&lt;/code&gt; in the master template instead of the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;. Otherwise JSF won't be able to auto-include the necessary JavaScript files which contains the Ajax functions. This would result in a JavaScript error like &quot;mojarra is not defined&quot; or &quot;PrimeFaces is not defined&quot; in browser's JS console. See also &lt;a href=&quot;https://stackoverflow.com/questions/9933777/hcommandlink-actionlistener-is-not-invoked-when-used-with-fajax-and-uirepeat&quot;&gt;h:commandLink actionlistener is not invoked when used with f:ajax and ui:repeat&lt;/a&gt;.</source>
          <target state="translated">如果您通过JSF 2.x &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; 或例如PrimeFaces &lt;code&gt;&amp;lt;p:commandXxx&amp;gt;&lt;/code&gt; 使用Ajax，请确保主模板中有一个 &lt;code&gt;&amp;lt;h:head&amp;gt;&lt;/code&gt; 而不是 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 。 否则，JSF将无法自动包含包含Ajax函数的必要JavaScript文件。 这将导致浏览器的JS控制台出现JavaScript错误，例如&amp;ldquo;未定义mojarra&amp;rdquo;或&amp;ldquo;未定义PrimeFaces&amp;rdquo;。 另请参见&lt;a href=&quot;https://stackoverflow.com/questions/9933777/hcommandlink-actionlistener-is-not-invoked-when-used-with-fajax-and-uirepeat&quot;&gt;与f：ajax和ui：repeat一起使用时，不会调用h：commandLink actionlistener&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="067b0bee847820b1fa42033b6d78512872c7deff" translate="yes" xml:space="preserve">
          <source>If you're using Ajax, and the submitted values end up being &lt;code&gt;null&lt;/code&gt;, then make sure that the &lt;code&gt;UIInput&lt;/code&gt; and &lt;code&gt;UICommand&lt;/code&gt; components of interest are covered by the &lt;code&gt;&amp;lt;f:ajax execute&amp;gt;&lt;/code&gt; or e.g. &lt;code&gt;&amp;lt;p:commandXxx process&amp;gt;&lt;/code&gt;, otherwise they won't be executed/processed. See also &lt;a href=&quot;https://stackoverflow.com/questions/17960929/submitted-form-values-not-updated-in-model-when-adding-fajax-to-hcommandbut&quot;&gt;Submitted form values not updated in model when adding &amp;lt;f:ajax&amp;gt; to &amp;lt;h:commandButton&amp;gt;&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/questions/25339056/understanding-process-and-update-attributes-of-primefaces&quot;&gt;Understanding PrimeFaces process/update and JSF f:ajax execute/render attributes&lt;/a&gt;.</source>
          <target state="translated">如果您使用的是Ajax，并且提交的值最终为 &lt;code&gt;null&lt;/code&gt; ，那么请确保感兴趣的 &lt;code&gt;UIInput&lt;/code&gt; 和 &lt;code&gt;UICommand&lt;/code&gt; 组件被 &lt;code&gt;&amp;lt;f:ajax execute&amp;gt;&lt;/code&gt; 或例如 &lt;code&gt;&amp;lt;p:commandXxx process&amp;gt;&lt;/code&gt; 覆盖，否则它们将不会将被执行/处理。 另请参见&lt;a href=&quot;https://stackoverflow.com/questions/17960929/submitted-form-values-not-updated-in-model-when-adding-fajax-to-hcommandbut&quot;&gt;将&amp;lt;f：ajax&amp;gt;添加到&amp;lt;h：commandButton&amp;gt;&lt;/a&gt;并&lt;a href=&quot;https://stackoverflow.com/questions/25339056/understanding-process-and-update-attributes-of-primefaces&quot;&gt;了解PrimeFaces流程/更新和JSF f：ajax执行/渲染属性&lt;/a&gt; 时，模型中未更新的提交表单值 。</target>
        </trans-unit>
        <trans-unit id="26dbf2c15abdeb08213c97b58bcc0aa4ec635e0d" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;h:commandLink&lt;/code&gt; is inside a &lt;code&gt;h:dataTable&lt;/code&gt; there is another reason why the &lt;code&gt;h:commandLink&lt;/code&gt; might not work:</source>
          <target state="translated">如果您的 &lt;code&gt;h:commandLink&lt;/code&gt; 位于 &lt;code&gt;h:dataTable&lt;/code&gt; 内 ，则 &lt;code&gt;h:commandLink&lt;/code&gt; 可能不起作用还有另一个原因：</target>
        </trans-unit>
        <trans-unit id="c76acb4b3d3f7a637166854a94ce22d2fdec0f06" translate="yes" xml:space="preserve">
          <source>In case you still stucks, it's time to debug. In the client side, press F12 in webbrowser to open the web developer toolset. Click the &lt;em&gt;Console&lt;/em&gt; tab so see the JavaScript conosle. It should be free of any JavaScript errors. Below screenshot is an example from Chrome which demonstrates the case of submitting an &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; enabled button while not having &lt;code&gt;&amp;lt;h:head&amp;gt;&lt;/code&gt; declared (as described in point 7 above).</source>
          <target state="translated">万一您仍然卡住，该进行调试了。 在客户端，按Web浏览器中的F12打开Web开发人员工具集。 单击&lt;em&gt;控制台&lt;/em&gt;选项卡，以便查看JavaScript。 它应该没有任何JavaScript错误。 下面的屏幕截图是来自Chrome的示例，演示了在未声明 &lt;code&gt;&amp;lt;h:head&amp;gt;&lt;/code&gt; 的情况下提交启用 &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; 的按钮的情况（如以上第7点所述）。</target>
        </trans-unit>
        <trans-unit id="183480165efa4b95340f558c47bf0d901be7a5f3" translate="yes" xml:space="preserve">
          <source>In my case, I have a mix of vanilla HttpServlet's providing OAuth authentication via Auth0 and JSF facelets and beans carrying out my application views and business logic.</source>
          <target state="translated">在我的案例中,我有一个混合了vanilla HttpServlet的混合体,通过Auth0和JSF facelet和Bean来提供OAuth身份验证,并执行我的应用视图和业务逻辑。</target>
        </trans-unit>
        <trans-unit id="934391f3715be29d2e0b4423613ce2cc51ecb036" translate="yes" xml:space="preserve">
          <source>In the server side, make sure that server is started in debug mode. Put a debug breakpoint in a method of the JSF component of interest which you expect to be called during processing the form submit. E.g. in case of &lt;code&gt;UICommand&lt;/code&gt; component, that would be &lt;a href=&quot;http://grepcode.com/file/repo1.maven.org/maven2/javax.faces/javax.faces-api/2.2/javax/faces/component/UICommand.java#UICommand.queueEvent%28javax.faces.event.FacesEvent%29&quot;&gt;&lt;code&gt;UICommand#queueEvent()&lt;/code&gt;&lt;/a&gt; and in case of &lt;code&gt;UIInput&lt;/code&gt; component, that would be &lt;a href=&quot;http://grepcode.com/file/repo1.maven.org/maven2/javax.faces/javax.faces-api/2.2/javax/faces/component/UIInput.java#UIInput.validate%28javax.faces.context.FacesContext%29&quot;&gt;&lt;code&gt;UIInput#validate()&lt;/code&gt;&lt;/a&gt;. Just step through the code execution and inspect if the flow and variables are as per expectations. Below screenshot is an example from Eclipse's debugger.</source>
          <target state="translated">在服务器端，请确保服务器以调试模式启动。 将调试断点放在感兴趣的JSF组件的方法中，您希望在处理表单提交期间调用该方法。 例如，如果使用 &lt;code&gt;UICommand&lt;/code&gt; 组件，则将是&lt;a href=&quot;http://grepcode.com/file/repo1.maven.org/maven2/javax.faces/javax.faces-api/2.2/javax/faces/component/UICommand.java#UICommand.queueEvent%28javax.faces.event.FacesEvent%29&quot;&gt; &lt;code&gt;UICommand#queueEvent()&lt;/code&gt; &lt;/a&gt; ；如果使用 &lt;code&gt;UIInput&lt;/code&gt; 组件，则将是&lt;a href=&quot;http://grepcode.com/file/repo1.maven.org/maven2/javax.faces/javax.faces-api/2.2/javax/faces/component/UIInput.java#UIInput.validate%28javax.faces.context.FacesContext%29&quot;&gt; &lt;code&gt;UIInput#validate()&lt;/code&gt; &lt;/a&gt; 。 只需逐步执行代码并检查流程和变量是否符合预期即可。 屏幕截图下方是Eclipse调试器的示例。</target>
        </trans-unit>
        <trans-unit id="3c8d8b817f472ca51d910bf99f9f2c1366df731c" translate="yes" xml:space="preserve">
          <source>In:</source>
          <target state="translated">In:</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="2ff2e35a47d0ca16aab845cbe22de6fbe450b984" translate="yes" xml:space="preserve">
          <source>Just took me a looong time to find out. (... and I think it's rather unclever to use defaults that are different from JSF!)</source>
          <target state="translated">只是我花了很久才发现。(......而且我觉得使用与JSF不同的defaults是相当不礼貌的!)</target>
        </trans-unit>
        <trans-unit id="1d86930b3117bca325817a10d4c98d91c0673298" translate="yes" xml:space="preserve">
          <source>Make sure that no &lt;code&gt;Filter&lt;/code&gt; or &lt;code&gt;Servlet&lt;/code&gt; in the same request-response chain has blocked the request fo the &lt;code&gt;FacesServlet&lt;/code&gt; somehow.</source>
          <target state="translated">确保同一请求-响应链中没有 &lt;code&gt;Filter&lt;/code&gt; 或 &lt;code&gt;Servlet&lt;/code&gt; 以某种方式阻止了 &lt;code&gt;FacesServlet&lt;/code&gt; 的请求。</target>
        </trans-unit>
        <trans-unit id="8665d2dc8b166e8db7e3f138791b0ce08b02a5b7" translate="yes" xml:space="preserve">
          <source>Make sure that no &lt;code&gt;PhaseListener&lt;/code&gt; or any &lt;code&gt;EventListener&lt;/code&gt; in the request-response chain has changed the JSF lifecycle to skip the invoke action phase by for example calling &lt;code&gt;FacesContext#renderResponse()&lt;/code&gt; or &lt;code&gt;FacesContext#responseComplete()&lt;/code&gt;.</source>
          <target state="translated">确保例如通过调用 &lt;code&gt;FacesContext#renderResponse()&lt;/code&gt; 或 &lt;code&gt;FacesContext#responseComplete()&lt;/code&gt; ，请求-响应链中的 &lt;code&gt;PhaseListener&lt;/code&gt; 或任何 &lt;code&gt;EventListener&lt;/code&gt; 都未更改JSF生命周期以跳过调用动作阶段。</target>
        </trans-unit>
        <trans-unit id="c99951cd6fa460dec364216152eeebb4a475e63d" translate="yes" xml:space="preserve">
          <source>Make sure that the &lt;code&gt;ActionEvent&lt;/code&gt; argument of &lt;code&gt;actionListener&lt;/code&gt; is an  &lt;code&gt;javax.faces.event.ActionEvent&lt;/code&gt; and thus not &lt;code&gt;java.awt.event.ActionEvent&lt;/code&gt;, which is what most IDEs suggest as 1st autocomplete option. Having no argument is wrong as well if you use &lt;code&gt;actionListener=&quot;#{bean.method}&quot;&lt;/code&gt;. If you don't want an argument in your method, use &lt;code&gt;actionListener=&quot;#{bean.method()}&quot;&lt;/code&gt;. Or perhaps you actually want to use &lt;code&gt;action&lt;/code&gt; instead of &lt;code&gt;actionListener&lt;/code&gt;. See also &lt;a href=&quot;https://stackoverflow.com/questions/3909267/differences-between-action-and-actionlistener&quot;&gt;Differences between action and actionListener&lt;/a&gt;.</source>
          <target state="translated">确保 &lt;code&gt;actionListener&lt;/code&gt; 的 &lt;code&gt;ActionEvent&lt;/code&gt; 参数是 &lt;code&gt;javax.faces.event.ActionEvent&lt;/code&gt; ，因此不是 &lt;code&gt;java.awt.event.ActionEvent&lt;/code&gt; ，这是大多数IDE建议的第一个自动完成选项。 如果使用 &lt;code&gt;actionListener=&quot;#{bean.method}&quot;&lt;/code&gt; 则没有参数也是错误的。 如果您不想在方法中使用参数，请使用 &lt;code&gt;actionListener=&quot;#{bean.method()}&quot;&lt;/code&gt; 。 或者，也许您实际上是想使用 &lt;code&gt;action&lt;/code&gt; 而不是 &lt;code&gt;actionListener&lt;/code&gt; 。 另请参见&lt;a href=&quot;https://stackoverflow.com/questions/3909267/differences-between-action-and-actionlistener&quot;&gt;action和actionListener之间的区别&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="787bb671c544c94f96b9ebd91b2b2969dcf21603" translate="yes" xml:space="preserve">
          <source>No &lt;code&gt;UIInput&lt;/code&gt; value validation/conversion error should have occurred. You can use &lt;code&gt;&amp;lt;h:messages&amp;gt;&lt;/code&gt; to show any messages which are not shown by any input-specific &lt;code&gt;&amp;lt;h:message&amp;gt;&lt;/code&gt; components. Don't forget to include the &lt;code&gt;id&lt;/code&gt; of &lt;code&gt;&amp;lt;h:messages&amp;gt;&lt;/code&gt; in the &lt;code&gt;&amp;lt;f:ajax render&amp;gt;&lt;/code&gt;, if any, so that it will be updated as well on ajax requests. See also &lt;a href=&quot;https://stackoverflow.com/questions/16175178/hmessages-does-not-display-messages-when-pcommandbutton-is-pressed&quot;&gt;h:messages does not display messages when p:commandButton is pressed&lt;/a&gt;.</source>
          <target state="translated">不应该发生 &lt;code&gt;UIInput&lt;/code&gt; 值验证/转换错误。 您可以使用 &lt;code&gt;&amp;lt;h:messages&amp;gt;&lt;/code&gt; 显示任何输入特定的 &lt;code&gt;&amp;lt;h:message&amp;gt;&lt;/code&gt; 组件未显示的消息 。 不要忘记在 &lt;code&gt;&amp;lt;f:ajax render&amp;gt;&lt;/code&gt; 中包含 &lt;code&gt;&amp;lt;h:messages&amp;gt;&lt;/code&gt; 的 &lt;code&gt;id&lt;/code&gt; （如果有的话），以便在ajax请求中也将对其进行更新。 另请参见&lt;a href=&quot;https://stackoverflow.com/questions/16175178/hmessages-does-not-display-messages-when-pcommandbutton-is-pressed&quot;&gt;当按下p：commandButton时，h：messages不显示消息&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="046e5ea2ef03122b66dcfbbd6d14c9c7c885e722" translate="yes" xml:space="preserve">
          <source>Once I refactored my web.xml, and removed a middle-man-servlet, it then &quot;magically&quot; worked.</source>
          <target state="translated">一旦我重构了我的web.xml,并删除了一个中间的man-servlet,它就 &quot;神奇地 &quot;成功了。</target>
        </trans-unit>
        <trans-unit id="900f6d313ce970b4b46db22096b5f7b210942ed8" translate="yes" xml:space="preserve">
          <source>One more possibility: if the symptom is that the first invocation works, but subsequent ones do not, you may be using PrimeFaces 3.x with JSF 2.2, as detailed here: &lt;a href=&quot;https://stackoverflow.com/questions/15897201/no-viewstate-is-sent&quot;&gt;No ViewState is sent&lt;/a&gt;.</source>
          <target state="translated">另一种可能性：如果症状是第一次调用起作用，但随后的调用不起作用，则可能是在带有JSF 2.2的PrimeFaces 3.x上使用的，如此处所述： &lt;a href=&quot;https://stackoverflow.com/questions/15897201/no-viewstate-is-sent&quot;&gt;没有发送ViewState&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="acb58217267f8aa5bbd4414adc16b34810b71c1b" translate="yes" xml:space="preserve">
          <source>Placing this attribute in the same scope as the table data itself fixed the problem.</source>
          <target state="translated">把这个属性放在和表数据本身相同的范围内,就解决了这个问题。</target>
        </trans-unit>
        <trans-unit id="e70a41047a9be3f21e41f17344e58620a8b2f37b" translate="yes" xml:space="preserve">
          <source>Possible causes</source>
          <target state="translated">可能的原因</target>
        </trans-unit>
        <trans-unit id="6c9d7f7a081fedd16ef6bbbaebd4c0160a1cbf0a" translate="yes" xml:space="preserve">
          <source>So if the underlying data-source is request scoped, the &lt;code&gt;h:commandLink&lt;/code&gt; does not work!</source>
          <target state="translated">因此，如果基础数据源是请求范围的，则 &lt;code&gt;h:commandLink&lt;/code&gt; 不起作用！</target>
        </trans-unit>
        <trans-unit id="89bde3332b761fb73fb19320e8a928b98c3b3e89" translate="yes" xml:space="preserve">
          <source>Sometimes, when using &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;h:commandButton&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt;, the &lt;code&gt;action&lt;/code&gt;, &lt;code&gt;actionListener&lt;/code&gt; or &lt;code&gt;listener&lt;/code&gt; method associated with the tag are simply not being invoked. Or, the bean properties are not updated with submitted &lt;code&gt;UIInput&lt;/code&gt; values.</source>
          <target state="translated">有时，当使用 &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;h:commandButton&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; 时 ，与标签关联的 &lt;code&gt;action&lt;/code&gt; ， &lt;code&gt;actionListener&lt;/code&gt; 或 &lt;code&gt;listener&lt;/code&gt; 方法根本不会被调用。 或者，不使用提交的 &lt;code&gt;UIInput&lt;/code&gt; 值更新Bean属性。</target>
        </trans-unit>
        <trans-unit id="2b55403f5e52a8b313917ce599cc8d82a298ce25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onclick&lt;/code&gt; attribute of the &lt;code&gt;UICommand&lt;/code&gt; component and the &lt;code&gt;onsubmit&lt;/code&gt; attribute of the &lt;code&gt;UIForm&lt;/code&gt; component should not return &lt;code&gt;false&lt;/code&gt; or cause a JavaScript error. There should in case of &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; also be no JS errors visible in the browser's JS console. Usually googling the exact error message will already give you the answer. See also &lt;a href=&quot;https://stackoverflow.com/questions/16166039/adding-jquery-to-primefaces-results-in-uncaught-typeerror-over-all-place&quot;&gt;Adding jQuery to PrimeFaces results in Uncaught TypeErrors&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;UICommand&lt;/code&gt; 组件的 &lt;code&gt;onclick&lt;/code&gt; 属性和UIForm组件的 &lt;code&gt;onsubmit&lt;/code&gt; 属性不应返回 &lt;code&gt;false&lt;/code&gt; 或引起JavaScript错误。 如果 &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; 也应该在浏览器的JS控制台中没有可见的JS错误。 通常，谷歌搜索确切的错误消息将已经为您提供了答案。 另请参见&lt;a href=&quot;https://stackoverflow.com/questions/16166039/adding-jquery-to-primefaces-results-in-uncaught-typeerror-over-all-place&quot;&gt;将jQuery添加到PrimeFaces会导致Uncaught TypeErrors&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="683575e6a93b9626ee5db4bd9e19d0d15619cd91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rendered&lt;/code&gt; attribute of the component and all of its parents and the &lt;code&gt;test&lt;/code&gt; attribute of any parent &lt;code&gt;&amp;lt;c:if&amp;gt;&lt;/code&gt;/&lt;code&gt;&amp;lt;c:when&amp;gt;&lt;/code&gt; should not evaluate to &lt;code&gt;false&lt;/code&gt; during the apply request values phase of the form submit request. JSF will recheck it as part of safeguard against tampered/hacked requests. Storing the variables responsible for the condition in a &lt;code&gt;@ViewScoped&lt;/code&gt; bean or making sure that you're properly preinitializing the condition in &lt;code&gt;@PostConstruct&lt;/code&gt; of a &lt;code&gt;@RequestScoped&lt;/code&gt; bean should fix it. The same applies to the &lt;code&gt;disabled&lt;/code&gt; attribute of the component, which should not evaluate to &lt;code&gt;true&lt;/code&gt; during apply request values phase. See also &lt;a href=&quot;https://stackoverflow.com/questions/13326404/jsf-commandbutton-action-not-invoked&quot;&gt;JSF CommandButton action not invoked&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/questions/18782503/form-submit-in-conditionally-rendered-component-is-not-processed&quot;&gt;Form submit in conditionally rendered component is not processed&lt;/a&gt;.</source>
          <target state="translated">在表单提交请求的应用请求值阶段，组件及其所有父项的 &lt;code&gt;rendered&lt;/code&gt; 属性以及任何父项 &lt;code&gt;&amp;lt;c:if&amp;gt;&lt;/code&gt; / &lt;code&gt;&amp;lt;c:when&amp;gt;&lt;/code&gt; 的 &lt;code&gt;test&lt;/code&gt; 属性不应评估为 &lt;code&gt;false&lt;/code&gt; 。 JSF将对其进行重新检查，以作为防范被篡改/被黑客入侵的保护措施的一部分。 将负责该条件的变量存储在 &lt;code&gt;@ViewScoped&lt;/code&gt; Bean中，或者确保已在 &lt;code&gt;@RequestScoped&lt;/code&gt; Bean的 &lt;code&gt;@PostConstruct&lt;/code&gt; 中正确预初始化了该条件，可以对其进行修复。 这同样适用于组件的 &lt;code&gt;disabled&lt;/code&gt; 属性，在应用请求值阶段，该属性不应评估为 &lt;code&gt;true&lt;/code&gt; 。 另请参见&lt;a href=&quot;https://stackoverflow.com/questions/13326404/jsf-commandbutton-action-not-invoked&quot;&gt;未调用JSF CommandButton操作，&lt;/a&gt;并且&lt;a href=&quot;https://stackoverflow.com/questions/18782503/form-submit-in-conditionally-rendered-component-is-not-processed&quot;&gt;不处理有条件呈现的组件中的Form Submit&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="c81848ff08fc3983fe3b2c5aa9924909dad9fd69" translate="yes" xml:space="preserve">
          <source>The underlying data-source which is bound to the &lt;code&gt;h:dataTable&lt;/code&gt; must also be available in the second JSF-Lifecycle that is triggered when the link is clicked.</source>
          <target state="translated">绑定到 &lt;code&gt;h:dataTable&lt;/code&gt; 的基础数据源也必须在单击链接时触发的第二个JSF-Lifecycle中可用。</target>
        </trans-unit>
        <trans-unit id="31194f50c39ca6965c1c258a38ee81b4f0441b53" translate="yes" xml:space="preserve">
          <source>To solve;</source>
          <target state="translated">为了解决。</target>
        </trans-unit>
        <trans-unit id="cd38dcc63534233835be9bd9ba0ef22a7253957e" translate="yes" xml:space="preserve">
          <source>What I don't know is why the facelet was able to access the bean properties but could not set them, and this clearly screams for doing away with the mix of servlets and JSF, but I hope this helps someone avoid many hours of head-to-table-banging.</source>
          <target state="translated">我不知道的是,为什么facelet能够访问Bean属性却无法设置,这显然是在喊着要抛弃servlets和JSF的混搭,但我希望这能帮助某人避免很多小时的头破血流。</target>
        </trans-unit>
        <trans-unit id="55d020f4d16abc75661bbb064220f5f235d8332c" translate="yes" xml:space="preserve">
          <source>What are the possible causes and solutions for this?</source>
          <target state="translated">可能的原因和解决办法是什么?</target>
        </trans-unit>
        <trans-unit id="52fb4fb0c0ae3500cce8b73c884ba66d78512a5b" translate="yes" xml:space="preserve">
          <source>When you use a &lt;code&gt;p:commandButton&lt;/code&gt; for the action that needs to be done on the server, you can not use &lt;code&gt;type=&quot;button&quot;&lt;/code&gt; because that is for &lt;b&gt;Push buttons&lt;/b&gt; which are used to execute custom javascript without causing an ajax/non-ajax request to the server.</source>
          <target state="translated">当对服务器上需要执行的操作使用 &lt;code&gt;p:commandButton&lt;/code&gt; 时 ，不能使用 &lt;code&gt;type=&quot;button&quot;&lt;/code&gt; 因为该&lt;b&gt;按钮&lt;/b&gt;用于用于执行自定义javascript而不会引起ajax / non-ajax请求的&lt;b&gt;按钮&lt;/b&gt;到服务器。</target>
        </trans-unit>
        <trans-unit id="00e25c622df489b30b52379657126b136ec6699d" translate="yes" xml:space="preserve">
          <source>Whenever an &lt;code&gt;UICommand&lt;/code&gt; component (&lt;code&gt;&amp;lt;h:commandXxx&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;p:commandXxx&amp;gt;&lt;/code&gt;, etc) fails to invoke the associated action method, or an &lt;code&gt;UIInput&lt;/code&gt; component (&lt;code&gt;&amp;lt;h:inputXxx&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;p:inputXxxx&amp;gt;&lt;/code&gt;, etc) fails to process the submitted values and/or update the model values, and you aren't seeing any googlable exceptions and/or warnings in the server log, also not when you configure an ajax exception handler as per &lt;a href=&quot;https://stackoverflow.com/questions/27526753/exception-handling-in-jsf-ajax-requests&quot;&gt;Exception handling in JSF ajax requests&lt;/a&gt;, nor when you set below context parameter in &lt;code&gt;web.xml&lt;/code&gt;,</source>
          <target state="translated">每当 &lt;code&gt;UICommand&lt;/code&gt; 组件（ &lt;code&gt;&amp;lt;h:commandXxx&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;p:commandXxx&amp;gt;&lt;/code&gt; 等）无法调用关联的操作方法，或者 &lt;code&gt;UIInput&lt;/code&gt; 组件（ &lt;code&gt;&amp;lt;h:inputXxx&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;p:inputXxxx&amp;gt;&lt;/code&gt; 等）无法处理提交值和/或更新模型值，并且在服务器日志中看不到任何可谷歌搜索的异常和/或警告，也没有&lt;a href=&quot;https://stackoverflow.com/questions/27526753/exception-handling-in-jsf-ajax-requests&quot;&gt;按照JSF ajax请求中的异常处理&lt;/a&gt;配置ajax异常处理程序，也没有设置在 &lt;code&gt;web.xml&lt;/code&gt; 中的上下文参数下面，</target>
        </trans-unit>
        <trans-unit id="8cc2d69e76122736995792000c78c4891eb63435" translate="yes" xml:space="preserve">
          <source>While my answer isn't 100% applicable, but most search engines find this as the first hit, I decided to post it nontheless:</source>
          <target state="translated">虽然我的答案并不是100%适用,但大多数搜索引擎都会把这个作为第一击,我决定把它贴出来。</target>
        </trans-unit>
        <trans-unit id="423ade3816837a68684473e4349ce56f6c5c7386" translate="yes" xml:space="preserve">
          <source>You cannot nest multiple &lt;code&gt;UIForm&lt;/code&gt; components in each other. This is illegal in HTML. The browser behavior is unspecified. Watch out with include files! You can use &lt;code&gt;UIForm&lt;/code&gt; components in parallel, but they won't process each other during submit. You should also watch out with &quot;God Form&quot; antipattern; make sure that you don't unintentionally process/validate all other (invisible) inputs in the very same form (e.g. having a hidden dialog with required inputs in the very same form). See also &lt;a href=&quot;https://stackoverflow.com/questions/7371903/using-multiple-hform-in-a-jsf-page&quot;&gt;How to use &amp;lt;h:form&amp;gt; in JSF page? Single form? Multiple forms? Nested forms?&lt;/a&gt;.</source>
          <target state="translated">您不能相互嵌套多个 &lt;code&gt;UIForm&lt;/code&gt; 组件。 这在HTML中是非法的。 浏览器行为未指定。 当心包含文件！ 您可以并行使用 &lt;code&gt;UIForm&lt;/code&gt; 组件，但是在提交期间它们不会相互处理。 您还应该提防&amp;ldquo;上帝形态&amp;rdquo;反模式； 确保您不会无意间以相同的形式处理/验证所有其他（不可见的）输入（例如，具有与输入相同形式的隐藏对话框的隐藏对话框）。 另请参见&lt;a href=&quot;https://stackoverflow.com/questions/7371903/using-multiple-hform-in-a-jsf-page&quot;&gt;如何在JSF页面中使用&amp;lt;h：form&amp;gt;？&lt;/a&gt; 单一表格？ 多种形式？ 嵌套表格？ 。</target>
        </trans-unit>
        <trans-unit id="83b9786384a50732d924ecf189d5816e812eb225" translate="yes" xml:space="preserve">
          <source>and you are also not seeing any googlable errors and/or warnings in browser's JavaScript console (press F12 in Chrome/Firefox23+/IE9+ to open the web developer toolset and then open the &lt;em&gt;Console&lt;/em&gt; tab), then work through below list of possible causes.</source>
          <target state="translated">并且您也没有在浏览器的JavaScript控制台中看到任何可谷歌搜索的错误和/或警告（按Chrome / Firefox23 + / IE9 +中的F12打开Web开发人员工具集，然后打开&amp;ldquo; &lt;em&gt;控制台&amp;rdquo;&lt;/em&gt;标签），然后在下面列出可能的原因。</target>
        </trans-unit>
        <trans-unit id="0108272869d720e2cea513ee55f9f5fad26a791d" translate="yes" xml:space="preserve">
          <source>commandButton/commandLink/ajax action/listener method not invoked or input value not set/updated</source>
          <target state="translated">commandButtoncommandLinkajax动作监听器方法未被调用或输入值未设置日期的方法</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
