<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/2118656">
    <body>
      <group id="2118656">
        <trans-unit id="866488c406c7c36740322c706d4fb76667c9ff6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UICommand&lt;/code&gt; and &lt;code&gt;UIInput&lt;/code&gt; components must be placed inside an &lt;code&gt;UIForm&lt;/code&gt; component, e.g. &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; (and thus not plain HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;), otherwise nothing can be sent to the server. &lt;code&gt;UICommand&lt;/code&gt; components must also not have &lt;code&gt;type=&quot;button&quot;&lt;/code&gt; attribute, otherwise it will be a dead button which is only useful for JavaScript &lt;code&gt;onclick&lt;/code&gt;. See also &lt;a href=&quot;https://stackoverflow.com/questions/3681123/how-to-get-hinputtext-values-from-gui-xhtml-into-java-class-jsf-bean&quot;&gt;How to send form input values and invoke a method in JSF bean&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/questions/12958208/hcommandbutton-does-not-initiate-a-postback&quot;&gt;&amp;lt;h:commandButton&amp;gt; does not initiate a postback&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;UICommand&lt;/code&gt; и &lt;code&gt;UIInput&lt;/code&gt; должны быть размещены внутри компонента &lt;code&gt;UIForm&lt;/code&gt; , например, &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; (и, следовательно, не в виде простого HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; ), иначе ничего нельзя отправить на сервер. Компоненты &lt;code&gt;UICommand&lt;/code&gt; также не должны иметь атрибут &lt;code&gt;type=&quot;button&quot;&lt;/code&gt; , иначе это будет мертвая кнопка, которая полезна только для JavaScript при &lt;code&gt;onclick&lt;/code&gt; . См. Также &lt;a href=&quot;https://stackoverflow.com/questions/3681123/how-to-get-hinputtext-values-from-gui-xhtml-into-java-class-jsf-bean&quot;&gt;Как отправить входные значения формы и вызвать метод в bean-компоненте JSF,&lt;/a&gt; и &lt;a href=&quot;https://stackoverflow.com/questions/12958208/hcommandbutton-does-not-initiate-a-postback&quot;&gt;&amp;lt;h: commandButton&amp;gt; не инициирует обратную передачу&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d978d9b3753f9d16c9ec6fe433e3273e16654fc4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(warning: when you post screenshots from HTTP request headers like above from a production environment, then make sure you scramble/obfuscate any session cookies in the screenshot to avoid session hijacking attacks!)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(предупреждение: когда вы публикуете скриншоты из заголовков HTTP-запросов, как описано выше, из производственной среды, убедитесь, что вы зашифровываете / скрываете любые сессионные куки-файлы на снимке экрана, чтобы избежать атак захвата сессии!)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b971e4f0bb141033e78686962da9b91c12019960" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is the solution, which is worked for me.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Это решение, которое работает для меня.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b7a820491ba9cea62cbb9eb9033a2f0fe79a2697" translate="yes" xml:space="preserve">
          <source>As the PrimeFaces User's Guide states in section 3.18, the defaults for &lt;code&gt;process&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt; are both &lt;code&gt;@form&lt;/code&gt;, which pretty much opposes the defaults you might expect from plain JSF &lt;code&gt;f:ajax&lt;/code&gt; or RichFaces, which are &lt;code&gt;execute=&quot;@this&quot;&lt;/code&gt; and &lt;code&gt;render=&quot;@none&quot;&lt;/code&gt; respectively.</source>
          <target state="translated">Как указано в Руководстве пользователя PrimeFaces в разделе 3.18, значениями по умолчанию для &lt;code&gt;process&lt;/code&gt; и &lt;code&gt;update&lt;/code&gt; являются &lt;code&gt;@form&lt;/code&gt; , что в значительной степени противоречит значениям по умолчанию, которые можно ожидать от обычного JSF &lt;code&gt;f:ajax&lt;/code&gt; или RichFaces, для которых выполняются &lt;code&gt;execute=&quot;@this&quot;&lt;/code&gt; и &lt;code&gt;render=&quot;@none&quot;&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="ab36e796edd5a2aff059837493ac2891867d064d" translate="yes" xml:space="preserve">
          <source>Basically, using sendRedirect() allowed the JSF &quot;container&quot; to take control whereas RequestDispatcher.forward() was obviously not.</source>
          <target state="translated">В принципе,использование sendRedirect()позволило JSF &quot;контейнеру&quot; взять управление под контроль,в то время как RequestDispatcher.forward(),очевидно,нет.</target>
        </trans-unit>
        <trans-unit id="3be03732e361b25d3aa4cc4127e47b23cc0bc01a" translate="yes" xml:space="preserve">
          <source>Bottom line, the problem was that the middle-man-servlet was using RequestDispatcher.forward(...) to redirect from the HttpServlet environment to the JSF environment whereas the servlet being called prior to it was redirecting with HttpServletResponse.sendRedirect(...).</source>
          <target state="translated">В итоге,проблема заключалась в том,что средний человек-сервлет использовал RequestDispatcher.forward(...)для перенаправления из среды HttpServlet в среду JSF,в то время как сервлет,вызываемый перед этим,перенаправлялся с помощью HttpServletResponse.sendRedirect(....).</target>
        </trans-unit>
        <trans-unit id="387a85de6fd64795614cf3a03aeb1eb3a0202d39" translate="yes" xml:space="preserve">
          <source>Bug in the framework. For example, RichFaces has a &quot;&lt;a href=&quot;https://issues.jboss.org/browse/RF-12594&quot;&gt;conversion error&lt;/a&gt;&quot; when using a &lt;code&gt;rich:calendar&lt;/code&gt; UI element with a &lt;code&gt;defaultLabel&lt;/code&gt; attribute (or, in some cases, a &lt;code&gt;rich:placeholder&lt;/code&gt; sub-element). This bug prevents the bean method from being invoked when no value is set for the calendar date. Tracing framework bugs can be accomplished by starting with a simple working example and building the page back up until the bug is discovered.</source>
          <target state="translated">Ошибка в рамках. Например, RichFaces имеет &amp;laquo; &lt;a href=&quot;https://issues.jboss.org/browse/RF-12594&quot;&gt;ошибку преобразования&lt;/a&gt; &amp;raquo; при использовании элемента пользовательского интерфейса &lt;code&gt;rich:calendar&lt;/code&gt; с атрибутом &lt;code&gt;defaultLabel&lt;/code&gt; (или, в некоторых случаях, подэлементом &lt;code&gt;rich:placeholder&lt;/code&gt; ). Эта ошибка предотвращает вызов метода bean, если для календарной даты не задано значение. Отследить ошибки в фреймворке можно, начав с простого рабочего примера и создавая страницу обратно, пока ошибка не будет обнаружена.</target>
        </trans-unit>
        <trans-unit id="f52fd3814b69cf3df3d930cda2ccbc4fa45914c1" translate="yes" xml:space="preserve">
          <source>Click the &lt;em&gt;Network&lt;/em&gt; tab to see the HTTP traffic monitor. Submit the form and investigate if the request headers and form data and the response body are as per expectations. Below screenshot is an example from Chrome which demonstrates a successful ajax submit of a simple form with a single &lt;code&gt;&amp;lt;h:inputText&amp;gt;&lt;/code&gt; and a single &lt;code&gt;&amp;lt;h:commandButton&amp;gt;&lt;/code&gt; with &lt;code&gt;&amp;lt;f:ajax execute=&quot;@form&quot; render=&quot;@form&quot;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Нажмите вкладку &lt;em&gt;Сеть,&lt;/em&gt; чтобы увидеть монитор трафика HTTP. Отправьте форму и выясните, соответствуют ли заголовки запроса, данные формы и тело ответа ожиданиям. Ниже на скриншоте показан пример из Chrome, который демонстрирует успешную отправку ajax простой формы с одним &lt;code&gt;&amp;lt;h:inputText&amp;gt;&lt;/code&gt; и одним &lt;code&gt;&amp;lt;h:commandButton&amp;gt;&lt;/code&gt; с &lt;code&gt;&amp;lt;f:ajax execute=&quot;@form&quot; render=&quot;@form&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ad43ac09dd124cb666003cf8589c2e04c4dd12a5" translate="yes" xml:space="preserve">
          <source>Debugging hints</source>
          <target state="translated">Советы по отладке</target>
        </trans-unit>
        <trans-unit id="5f0f18a890d46086092f46381c0776f9a1e0fb0a" translate="yes" xml:space="preserve">
          <source>For this purpose, you can dispense the &lt;code&gt;type&lt;/code&gt; attribute (default value is &lt;code&gt;&quot;submit&quot;&lt;/code&gt;) or you can explicitly use &lt;code&gt;type=&quot;submit&quot;&lt;/code&gt;.</source>
          <target state="translated">Для этого вы можете отказаться от атрибута &lt;code&gt;type&lt;/code&gt; (значение по умолчанию &lt;code&gt;&quot;submit&quot;&lt;/code&gt; ) или вы можете явно использовать &lt;code&gt;type=&quot;submit&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a04bb2946c575867840a2e08c55c9b55395447c2" translate="yes" xml:space="preserve">
          <source>Got stuck with this issue myself and found one more cause for this problem.
If you don't have setter methods in your backing bean for the properties used in your *.xhtml , then the action is simply not invoked.</source>
          <target state="translated">Я сам застрял с этой проблемой и нашел еще одну причину этой проблемы.Если у вас нет методов setter в бобе для свойств,используемых в *.xhtml,то действие просто не вызывается.</target>
        </trans-unit>
        <trans-unit id="8b5d5e1850f3f69592961b6908eaccc7e7789e20" translate="yes" xml:space="preserve">
          <source>Here, process=&quot;userGroupSetupForm&quot; atrribute is mandatory for Ajax call. actionListener is calling a method from @ViewScope Bean. Also updating growl message, Datatable: userGroupList and Form: userGroupSetupForm.</source>
          <target state="translated">Здесь атрибут process=&quot;userGroupSetupForm&quot; является обязательным для вызова Ajax.actionListener вызывает метод из @ViewScope Bean.Также происходит обновление growl сообщения,Datatable:userGroupList и Form:userGroupSetupForm.</target>
        </trans-unit>
        <trans-unit id="e4f350fbbd6cd44f6756b173b457a31d927cc6ae" translate="yes" xml:space="preserve">
          <source>Hope this will help someone!</source>
          <target state="translated">Надеюсь,это кому-нибудь поможет!</target>
        </trans-unit>
        <trans-unit id="9cf3abd217ce1127f62e6207c9f17e88720b5fcb" translate="yes" xml:space="preserve">
          <source>I fixed my problem with placing the:</source>
          <target state="translated">Я решил свою проблему с размещением:</target>
        </trans-unit>
        <trans-unit id="ada7b48d682b4c15818372e71d2f57a896c7f67a" translate="yes" xml:space="preserve">
          <source>I had a command button on a row of a datatable (the extended version, so &lt;code&gt;&amp;lt;hx:datatable&amp;gt;&lt;/code&gt;) and the UICommand would not fire from certain rows from the table (the rows that would not fire were the rows greater than the default row display size).</source>
          <target state="translated">У меня была командная кнопка в строке таблицы данных (расширенная версия, поэтому &lt;code&gt;&amp;lt;hx:datatable&amp;gt;&lt;/code&gt; ), и команда UICommand не запускалась из определенных строк таблицы (строки, которые не запускались, были строк больше строки по умолчанию) Размер дисплея).</target>
        </trans-unit>
        <trans-unit id="771d92126e32f5d42b83fd8f7b7d8509d3301e8d" translate="yes" xml:space="preserve">
          <source>I had a drop-down component for selecting number of rows to display. The value backing this field was in &lt;code&gt;RequestScope&lt;/code&gt;. The data backing the table itself was in a sort of &lt;code&gt;ViewScope&lt;/code&gt; (in reality, temporarily in &lt;code&gt;SessionScope&lt;/code&gt;).</source>
          <target state="translated">У меня был выпадающий компонент для выбора количества строк для отображения. Значение, поддерживающее это поле, было в &lt;code&gt;RequestScope&lt;/code&gt; . Данные, &lt;code&gt;ViewScope&lt;/code&gt; в основе самой таблицы, были в некотором роде ViewScope (на самом деле временно в &lt;code&gt;SessionScope&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2a55afc4ed451bf938ab6a7781f2985f0cfdbb57" translate="yes" xml:space="preserve">
          <source>I had lots of fun debugging an issue where a &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt;'s action in &lt;code&gt;richfaces&lt;/code&gt;&lt;code&gt;datatable&lt;/code&gt; refused to fire. The table used to work at some point but stopped for no apparent reason. I left no stone unturned, only to find out that my &lt;code&gt;rich:datatable&lt;/code&gt; was using the wrong &lt;code&gt;rowKeyConverter&lt;/code&gt; which returned nulls that richfaces happily used as row keys. This prevented my &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt; action from getting called.</source>
          <target state="translated">Мне было очень весело отлаживать проблему, из-за которой действие &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt; в &lt;code&gt;richfaces&lt;/code&gt; &lt;code&gt;datatable&lt;/code&gt; не срабатывало. Стол раньше работал, но остановился без видимой причины. Я не оставил камня на камне, только чтобы узнать, что мой &lt;code&gt;rich:datatable&lt;/code&gt; использовал неправильный &lt;code&gt;rowKeyConverter&lt;/code&gt; , который возвращал нули, которые richfaces с радостью использовали в качестве ключей строки. Это не позволило моему действию &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt; быть вызванным.</target>
        </trans-unit>
        <trans-unit id="5251cdd4c6bff16176d8657be0cf1a79d3c894cc" translate="yes" xml:space="preserve">
          <source>I had this problem as well and only really started to hone in on the root cause after opening up the browser's web console.  Until that, I was unable to get any error messages (even with &lt;code&gt;&amp;lt;p:messages&amp;gt;&lt;/code&gt;).  The web console showed an HTTP 405 status code coming back from the &lt;code&gt;&amp;lt;h:commandButton type=&quot;submit&quot; action=&quot;#{myBean.submit}&quot;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">У меня тоже была эта проблема, и я действительно начал оттачивать основную причину после открытия веб-консоли браузера. До этого я не мог получить никаких сообщений об ошибках (даже с &lt;code&gt;&amp;lt;p:messages&amp;gt;&lt;/code&gt; ). В веб-консоли &lt;code&gt;&amp;lt;h:commandButton type=&quot;submit&quot; action=&quot;#{myBean.submit}&quot;&amp;gt;&lt;/code&gt; код состояния HTTP 405, возвращаемый из &amp;lt;h: commandButton type = &quot;submit&quot; action = &quot;# {myBean.submit}&quot;&amp;gt; .</target>
        </trans-unit>
        <trans-unit id="e9f5e148d29cf7fae55e775799f77920ad0986c8" translate="yes" xml:space="preserve">
          <source>I recently ran into a problem with a UICommand not invoking in a JSF 1.2 application using IBM Extended Faces Components.</source>
          <target state="translated">Недавно я столкнулся с проблемой с UICommand,не ссылающейся в приложении JSF 1.2,использующем IBM Extended Faces Components.</target>
        </trans-unit>
        <trans-unit id="192636a4bca94899648371c8cb323c3f1ce21472" translate="yes" xml:space="preserve">
          <source>I think this is alluded to in BalusC #4 above, but not only did the table value need to be View or Session scoped but also the attribute controlling the number of rows to display on that table.</source>
          <target state="translated">Я думаю,что это упоминается в BalusC #4 выше,но не только значение таблицы должно быть View или Session scoped,но и атрибут,управляющий количеством строк для отображения в этой таблице.</target>
        </trans-unit>
        <trans-unit id="2c2fe531415109359e102a0680cfcc231f4047c0" translate="yes" xml:space="preserve">
          <source>I would mention one more thing that concerns Primefaces's &lt;code&gt;p:commandButton&lt;/code&gt;!</source>
          <target state="translated">Я хотел бы упомянуть еще одну вещь, которая касается &lt;code&gt;p:commandButton&lt;/code&gt; Primefaces !</target>
        </trans-unit>
        <trans-unit id="9924714aee235af76994537f44085e166f664203" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;UICommand&lt;/code&gt; or &lt;code&gt;UIInput&lt;/code&gt; components are included by a dynamic source such as &lt;code&gt;&amp;lt;ui:include src=&quot;#{bean.include}&quot;&amp;gt;&lt;/code&gt;, then you need to ensure that exactly the same &lt;code&gt;#{bean.include}&lt;/code&gt; value is preserved during the view build time of the form submit request. JSF will reexecute it during building the component tree. Putting the bean in the view scope and/or making sure that you load the data model in &lt;code&gt;@PostConstruct&lt;/code&gt; of the bean (and thus not in a getter method!) should fix it. See also &lt;a href=&quot;https://stackoverflow.com/questions/7108668/how-to-ajax-refresh-dynamic-include-content-by-navigation-menu-jsf-spa&quot;&gt;How to ajax-refresh dynamic include content by navigation menu? (JSF SPA)&lt;/a&gt;.</source>
          <target state="translated">Если компоненты &lt;code&gt;UICommand&lt;/code&gt; или &lt;code&gt;UIInput&lt;/code&gt; включены динамическим источником, таким как &lt;code&gt;&amp;lt;ui:include src=&quot;#{bean.include}&quot;&amp;gt;&lt;/code&gt; , то необходимо убедиться, что во время просмотра сохраняется точно такое же значение &lt;code&gt;#{bean.include}&lt;/code&gt; время построения формы отправить запрос. JSF повторно выполнит его во время построения дерева компонентов. Помещение компонента в область просмотра и / или &lt;code&gt;@PostConstruct&lt;/code&gt; загрузки модели данных в @PostConstruct компонента (и, следовательно, не в методе получения!) Должны исправить это. Смотрите также &lt;a href=&quot;https://stackoverflow.com/questions/7108668/how-to-ajax-refresh-dynamic-include-content-by-navigation-menu-jsf-spa&quot;&gt;Как ajax-refresh динамически включать контент с помощью меню навигации?&lt;/a&gt; (JSF SPA) .</target>
        </trans-unit>
        <trans-unit id="d039e312f75e608caf4b0e9a953fa4288127b59a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;UICommand&lt;/code&gt; or &lt;code&gt;UIInput&lt;/code&gt; components are placed inside an iterating component like &lt;code&gt;&amp;lt;h:dataTable&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;ui:repeat&amp;gt;&lt;/code&gt;, etc, then you need to ensure that exactly the same &lt;code&gt;value&lt;/code&gt; of the iterating component is been preserved during the apply request values phase of the form submit request. JSF will reiterate over it to find the clicked link/button and submitted input values. Putting the bean in the view scope and/or making sure that you load the data model in &lt;code&gt;@PostConstruct&lt;/code&gt; of the bean (and thus not in a getter method!) should fix it. See also &lt;a href=&quot;https://stackoverflow.com/questions/5765853/when-should-i-load-the-collection-from-database-for-hdatatable&quot;&gt;How and when should I load the model from database for h:dataTable&lt;/a&gt;.</source>
          <target state="translated">Если компоненты &lt;code&gt;UICommand&lt;/code&gt; или &lt;code&gt;UIInput&lt;/code&gt; находятся внутри итеративного компонента, такого как &lt;code&gt;&amp;lt;h:dataTable&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;ui:repeat&amp;gt;&lt;/code&gt; и т. Д., То необходимо убедиться, что точно такое же &lt;code&gt;value&lt;/code&gt; итеративного компонента было сохранено на этапе применения значений запроса Форма отправки запроса. JSF будет повторять его, чтобы найти нажатую ссылку / кнопку и отправленные значения ввода. Помещение компонента в область просмотра и / или &lt;code&gt;@PostConstruct&lt;/code&gt; загрузки модели данных в @PostConstruct компонента (и, следовательно, не в методе получения!) Должны исправить это. Смотрите также &lt;a href=&quot;https://stackoverflow.com/questions/5765853/when-should-i-load-the-collection-from-database-for-hdatatable&quot;&gt;Как и когда я должен загрузить модель из базы данных для h: dataTable&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3376040c6a80d6d2d66683587c3c37544d43149c" translate="yes" xml:space="preserve">
          <source>If a parent of the &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; with the &lt;code&gt;UICommand&lt;/code&gt; button is beforehand been rendered/updated by an ajax request coming from another form in the same page, then the first action will always fail in JSF 2.2 or older. The second and subsequent actions will work. This is caused by a bug in view state handling which is reported as &lt;a href=&quot;https://github.com/javaee/javaserverfaces-spec/issues/790&quot;&gt;JSF spec issue 790&lt;/a&gt; and currently fixed in JSF 2.3. For older JSF versions, you need to explicitly specify the ID of the &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; in the &lt;code&gt;render&lt;/code&gt; of the &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt;. See also &lt;a href=&quot;https://stackoverflow.com/questions/11408130/hcommandbutton-hcommandlink-does-not-work-on-first-click-works-only-on-second&quot;&gt;h:commandButton/h:commandLink does not work on first click, works only on second click&lt;/a&gt;.</source>
          <target state="translated">Если родительский элемент &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; с кнопкой &lt;code&gt;UICommand&lt;/code&gt; был предварительно обработан / обновлен с помощью ajax-запроса, поступающего из другой формы на той же странице, то первое действие всегда будет неудачным в JSF 2.2 или более ранней версии. Второе и последующие действия будут работать. Это вызвано ошибкой в ​​обработке состояния представления, которая сообщается как &lt;a href=&quot;https://github.com/javaee/javaserverfaces-spec/issues/790&quot;&gt;проблема спецификации JSF 790&lt;/a&gt; и в настоящее время исправлена ​​в JSF 2.3. Для более старых версий JSF вам необходимо явно указать идентификатор &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; в &lt;code&gt;render&lt;/code&gt; &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; . См. Также &lt;a href=&quot;https://stackoverflow.com/questions/11408130/hcommandbutton-hcommandlink-does-not-work-on-first-click-works-only-on-second&quot;&gt;h: commandButton / h: commandLink не работает при первом щелчке, работает только при втором щелчке&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d4a9ed5b372bb2f791d112478dcb7a6c28e7e44a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; has &lt;code&gt;enctype=&quot;multipart/form-data&quot;&lt;/code&gt; set in order to support file uploading, then you need to make sure that you're using at least JSF 2.2, or that the servlet filter who is responsible for parsing multipart/form-data requests is properly configured, otherwise the &lt;code&gt;FacesServlet&lt;/code&gt; will end up getting no request parameters at all and thus not be able to apply the request values. How to configure such a filter depends on the file upload component being used. For Tomahawk &lt;code&gt;&amp;lt;t:inputFileUpload&amp;gt;&lt;/code&gt;, check &lt;a href=&quot;https://stackoverflow.com/questions/5418292/jsf-2-0-file-upload/5424229#5424229&quot;&gt;this answer&lt;/a&gt; and for PrimeFaces &lt;code&gt;&amp;lt;p:fileUpload&amp;gt;&lt;/code&gt;, check &lt;a href=&quot;https://stackoverflow.com/questions/8875818/how-to-use-primefaces-pfileupload-listener-method-is-never-invoked/8880083#8880083&quot;&gt;this answer&lt;/a&gt;. Or, if you're actually not uploading a file at all, then remove the attribute altogether.</source>
          <target state="translated">Если для &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; установлено &lt;code&gt;enctype=&quot;multipart/form-data&quot;&lt;/code&gt; для поддержки загрузки файлов, вам необходимо убедиться, что вы используете как минимум JSF 2.2 или что сервлет-фильтр отвечает за синтаксический анализ запросов multipart / form-data настроен правильно, в противном случае &lt;code&gt;FacesServlet&lt;/code&gt; в итоге не получит параметров запроса вообще и, следовательно, не сможет применить значения запроса. Как настроить такой фильтр, зависит от используемого компонента загрузки файла. Для Tomahawk &lt;code&gt;&amp;lt;t:inputFileUpload&amp;gt;&lt;/code&gt; проверьте &lt;a href=&quot;https://stackoverflow.com/questions/5418292/jsf-2-0-file-upload/5424229#5424229&quot;&gt;этот ответ,&lt;/a&gt; а для PrimeFaces &lt;code&gt;&amp;lt;p:fileUpload&amp;gt;&lt;/code&gt; проверьте &lt;a href=&quot;https://stackoverflow.com/questions/8875818/how-to-use-primefaces-pfileupload-listener-method-is-never-invoked/8880083#8880083&quot;&gt;этот ответ&lt;/a&gt; . Или, если вы вообще не загружаете файл, удалите атрибут вообще.</target>
        </trans-unit>
        <trans-unit id="22cd41b11cd350ae8b00095e457defda31bbf524" translate="yes" xml:space="preserve">
          <source>If the row display was increased via the control which value was also bound to the datatable's &lt;code&gt;rows&lt;/code&gt; attribute, none of the rows displayed as a result of this change could fire the UICommand when clicked.</source>
          <target state="translated">Если отображение строки было увеличено с помощью элемента управления, значение которого также было связано с атрибутом &lt;code&gt;rows&lt;/code&gt; таблицы данных, ни одна из строк, отображаемых в результате этого изменения, не могла запустить UICommand при нажатии.</target>
        </trans-unit>
        <trans-unit id="78fb12f9d4f9ffdea734456966c80e8cfbfde585" translate="yes" xml:space="preserve">
          <source>If the submitted values still end up being &lt;code&gt;null&lt;/code&gt;, and you're using CDI to manage beans, then make sure that you import the scope annotation from the correct package, else CDI will default to &lt;code&gt;@Dependent&lt;/code&gt; which effectively recreates the bean on every single evaluation of the EL expression. See also &lt;a href=&quot;https://stackoverflow.com/questions/9470440/sessionscoped-bean-looses-scope-and-gets-recreated-all-the-time-fields-become&quot;&gt;@SessionScoped bean looses scope and gets recreated all the time, fields become null&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/questions/19322364/what-is-the-default-managed-bean-scope-in-a-jsf-2-application&quot;&gt;What is the default Managed Bean Scope in a JSF 2 application?&lt;/a&gt;</source>
          <target state="translated">Если отправленные значения все равно оказываются &lt;code&gt;null&lt;/code&gt; , и вы используете CDI для управления bean-компонентами, убедитесь, что вы импортировали аннотацию области действия из правильного пакета, иначе CDI по умолчанию будет иметь значение &lt;code&gt;@Dependent&lt;/code&gt; , которое эффективно воссоздает bean-компонент при каждой отдельной оценке. выражения EL. См. Также &lt;a href=&quot;https://stackoverflow.com/questions/9470440/sessionscoped-bean-looses-scope-and-gets-recreated-all-the-time-fields-become&quot;&gt;@SessionScoped bean-компонент теряет область видимости и постоянно воссоздается, поля становятся пустыми&lt;/a&gt; и какова область действия управляемого бина &lt;a href=&quot;https://stackoverflow.com/questions/19322364/what-is-the-default-managed-bean-scope-in-a-jsf-2-application&quot;&gt;по умолчанию в приложении JSF 2?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f05f88312346985c9a90156785bf6578f9f4e0bd" translate="yes" xml:space="preserve">
          <source>If you are using a PrimeFaces &lt;code&gt;&amp;lt;p:dialog&amp;gt;&lt;/code&gt; or a &lt;code&gt;&amp;lt;p:overlayPanel&amp;gt;&lt;/code&gt;, then make sure that they have their own &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt;. Because, these components are by default by JavaScript relocated to end of HTML &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;. So, if they were originally sitting inside a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;, then they would now not anymore sit in a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;. See also &lt;a href=&quot;https://stackoverflow.com/questions/18958729/pcommandbutton-action-doesnt-work-inside-pdialog&quot;&gt;p:commandbutton action doesn't work inside p:dialog&lt;/a&gt;</source>
          <target state="translated">Если вы используете PrimeFaces &lt;code&gt;&amp;lt;p:dialog&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;p:overlayPanel&amp;gt;&lt;/code&gt; , убедитесь, что у них есть собственная &lt;code&gt;&amp;lt;h:form&amp;gt;&lt;/code&gt; . Потому что по умолчанию эти компоненты перемещены в конец HTML &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; . Итак, если бы они изначально находились внутри &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; , то теперь они больше не сидели бы в &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; . Смотрите также действие &lt;a href=&quot;https://stackoverflow.com/questions/18958729/pcommandbutton-action-doesnt-work-inside-pdialog&quot;&gt;p: commandbutton внутри p: не работает&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fcac2640402780d0075832d85cbc7c426c4691e0" translate="yes" xml:space="preserve">
          <source>If you're using &lt;strong&gt;PrimeFaces&lt;/strong&gt; (or some similar API) &lt;code&gt;p:commandButton&lt;/code&gt; or &lt;code&gt;p:commandLink&lt;/code&gt;, chances are that you have forgotten to explicitly add &lt;code&gt;process=&quot;@this&quot;&lt;/code&gt; to your command components.</source>
          <target state="translated">Если вы используете &lt;strong&gt;PrimeFaces&lt;/strong&gt; (или некоторый подобный API) &lt;code&gt;p:commandButton&lt;/code&gt; или &lt;code&gt;p:commandLink&lt;/code&gt; , есть вероятность, что вы забыли явно добавить &lt;code&gt;process=&quot;@this&quot;&lt;/code&gt; к вашим командным компонентам.</target>
        </trans-unit>
        <trans-unit id="1403aaffc997b6c2b3ecacbce732c81da1e089e5" translate="yes" xml:space="preserve">
          <source>If you're using Ajax via JSF 2.x &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; or e.g. PrimeFaces &lt;code&gt;&amp;lt;p:commandXxx&amp;gt;&lt;/code&gt;, make sure that you have a &lt;code&gt;&amp;lt;h:head&amp;gt;&lt;/code&gt; in the master template instead of the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;. Otherwise JSF won't be able to auto-include the necessary JavaScript files which contains the Ajax functions. This would result in a JavaScript error like &quot;mojarra is not defined&quot; or &quot;PrimeFaces is not defined&quot; in browser's JS console. See also &lt;a href=&quot;https://stackoverflow.com/questions/9933777/hcommandlink-actionlistener-is-not-invoked-when-used-with-fajax-and-uirepeat&quot;&gt;h:commandLink actionlistener is not invoked when used with f:ajax and ui:repeat&lt;/a&gt;.</source>
          <target state="translated">Если вы используете Ajax через JSF 2.x &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; или, например, PrimeFaces &lt;code&gt;&amp;lt;p:commandXxx&amp;gt;&lt;/code&gt; , убедитесь, что у вас есть &lt;code&gt;&amp;lt;h:head&amp;gt;&lt;/code&gt; в главном шаблоне вместо &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; . В противном случае JSF не сможет автоматически включать необходимые файлы JavaScript, которые содержат функции Ajax. Это может привести к ошибке JavaScript типа &amp;laquo;mojarra не определен&amp;raquo; или &amp;laquo;PrimeFaces не определен&amp;raquo; в консоли JS браузера. Смотрите также &lt;a href=&quot;https://stackoverflow.com/questions/9933777/hcommandlink-actionlistener-is-not-invoked-when-used-with-fajax-and-uirepeat&quot;&gt;h: commandLink actionlistener не вызывается при использовании с f: ajax и ui: repeat&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="067b0bee847820b1fa42033b6d78512872c7deff" translate="yes" xml:space="preserve">
          <source>If you're using Ajax, and the submitted values end up being &lt;code&gt;null&lt;/code&gt;, then make sure that the &lt;code&gt;UIInput&lt;/code&gt; and &lt;code&gt;UICommand&lt;/code&gt; components of interest are covered by the &lt;code&gt;&amp;lt;f:ajax execute&amp;gt;&lt;/code&gt; or e.g. &lt;code&gt;&amp;lt;p:commandXxx process&amp;gt;&lt;/code&gt;, otherwise they won't be executed/processed. See also &lt;a href=&quot;https://stackoverflow.com/questions/17960929/submitted-form-values-not-updated-in-model-when-adding-fajax-to-hcommandbut&quot;&gt;Submitted form values not updated in model when adding &amp;lt;f:ajax&amp;gt; to &amp;lt;h:commandButton&amp;gt;&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/questions/25339056/understanding-process-and-update-attributes-of-primefaces&quot;&gt;Understanding PrimeFaces process/update and JSF f:ajax execute/render attributes&lt;/a&gt;.</source>
          <target state="translated">Если вы используете Ajax, и отправленные значения в конечном итоге &lt;code&gt;UIInput&lt;/code&gt; &lt;code&gt;null&lt;/code&gt; , убедитесь, что интересующие компоненты UIInput и &lt;code&gt;UICommand&lt;/code&gt; включены в &lt;code&gt;&amp;lt;f:ajax execute&amp;gt;&lt;/code&gt; или, например, &lt;code&gt;&amp;lt;p:commandXxx process&amp;gt;&lt;/code&gt; , иначе они победят ' быть выполнено / обработано. См. Также &lt;a href=&quot;https://stackoverflow.com/questions/17960929/submitted-form-values-not-updated-in-model-when-adding-fajax-to-hcommandbut&quot;&gt;Отправленные значения формы, не обновленные в модели, при добавлении &amp;lt;f: ajax&amp;gt; в &amp;lt;h: commandButton&amp;gt;&lt;/a&gt; и &lt;a href=&quot;https://stackoverflow.com/questions/25339056/understanding-process-and-update-attributes-of-primefaces&quot;&gt;Понимании процессов / обновлений PrimeFaces и JSF f: ajax атрибуты execute / render&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="26dbf2c15abdeb08213c97b58bcc0aa4ec635e0d" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;h:commandLink&lt;/code&gt; is inside a &lt;code&gt;h:dataTable&lt;/code&gt; there is another reason why the &lt;code&gt;h:commandLink&lt;/code&gt; might not work:</source>
          <target state="translated">Если ваш &lt;code&gt;h:commandLink&lt;/code&gt; находится внутри &lt;code&gt;h:dataTable&lt;/code&gt; , есть еще одна причина, по которой &lt;code&gt;h:commandLink&lt;/code&gt; может не работать:</target>
        </trans-unit>
        <trans-unit id="c76acb4b3d3f7a637166854a94ce22d2fdec0f06" translate="yes" xml:space="preserve">
          <source>In case you still stucks, it's time to debug. In the client side, press F12 in webbrowser to open the web developer toolset. Click the &lt;em&gt;Console&lt;/em&gt; tab so see the JavaScript conosle. It should be free of any JavaScript errors. Below screenshot is an example from Chrome which demonstrates the case of submitting an &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; enabled button while not having &lt;code&gt;&amp;lt;h:head&amp;gt;&lt;/code&gt; declared (as described in point 7 above).</source>
          <target state="translated">Если вы все еще застряли, пришло время отладки. На стороне клиента нажмите F12 в веб-браузере, чтобы открыть набор инструментов веб-разработчика. Перейдите на вкладку &amp;laquo; &lt;em&gt;Консоль&lt;/em&gt; &amp;raquo;, чтобы увидеть &lt;em&gt;консоль&lt;/em&gt; JavaScript. Он не должен содержать ошибок JavaScript. Ниже на скриншоте приведен пример из Chrome, который демонстрирует случай отправки кнопки с включенным &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; без объявления &lt;code&gt;&amp;lt;h:head&amp;gt;&lt;/code&gt; (как описано в пункте 7 выше).</target>
        </trans-unit>
        <trans-unit id="183480165efa4b95340f558c47bf0d901be7a5f3" translate="yes" xml:space="preserve">
          <source>In my case, I have a mix of vanilla HttpServlet's providing OAuth authentication via Auth0 and JSF facelets and beans carrying out my application views and business logic.</source>
          <target state="translated">В моем случае,у меня есть смесь ванильного HttpServlet's,обеспечивающего OAuth аутентификацию через Auth0 и JSF фасоли и бобов,выполняющих мои представления приложения и бизнес-логику.</target>
        </trans-unit>
        <trans-unit id="934391f3715be29d2e0b4423613ce2cc51ecb036" translate="yes" xml:space="preserve">
          <source>In the server side, make sure that server is started in debug mode. Put a debug breakpoint in a method of the JSF component of interest which you expect to be called during processing the form submit. E.g. in case of &lt;code&gt;UICommand&lt;/code&gt; component, that would be &lt;a href=&quot;http://grepcode.com/file/repo1.maven.org/maven2/javax.faces/javax.faces-api/2.2/javax/faces/component/UICommand.java#UICommand.queueEvent%28javax.faces.event.FacesEvent%29&quot;&gt;&lt;code&gt;UICommand#queueEvent()&lt;/code&gt;&lt;/a&gt; and in case of &lt;code&gt;UIInput&lt;/code&gt; component, that would be &lt;a href=&quot;http://grepcode.com/file/repo1.maven.org/maven2/javax.faces/javax.faces-api/2.2/javax/faces/component/UIInput.java#UIInput.validate%28javax.faces.context.FacesContext%29&quot;&gt;&lt;code&gt;UIInput#validate()&lt;/code&gt;&lt;/a&gt;. Just step through the code execution and inspect if the flow and variables are as per expectations. Below screenshot is an example from Eclipse's debugger.</source>
          <target state="translated">На стороне сервера убедитесь, что сервер запущен в режиме отладки. Поместите точку отладки в метод интересующего компонента JSF, который вы ожидаете вызвать во время обработки отправки формы. Например, в случае компонента &lt;code&gt;UICommand&lt;/code&gt; это будет &lt;a href=&quot;http://grepcode.com/file/repo1.maven.org/maven2/javax.faces/javax.faces-api/2.2/javax/faces/component/UICommand.java#UICommand.queueEvent%28javax.faces.event.FacesEvent%29&quot;&gt; &lt;code&gt;UICommand#queueEvent()&lt;/code&gt; &lt;/a&gt; а в случае компонента &lt;code&gt;UIInput&lt;/code&gt; это будет &lt;a href=&quot;http://grepcode.com/file/repo1.maven.org/maven2/javax.faces/javax.faces-api/2.2/javax/faces/component/UIInput.java#UIInput.validate%28javax.faces.context.FacesContext%29&quot;&gt; &lt;code&gt;UIInput#validate()&lt;/code&gt; &lt;/a&gt; . Просто выполните выполнение кода и проверьте, соответствуют ли поток и переменные ожиданиям. Ниже на скриншоте приведен пример отладчика Eclipse.</target>
        </trans-unit>
        <trans-unit id="3c8d8b817f472ca51d910bf99f9f2c1366df731c" translate="yes" xml:space="preserve">
          <source>In:</source>
          <target state="translated">In:</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="2ff2e35a47d0ca16aab845cbe22de6fbe450b984" translate="yes" xml:space="preserve">
          <source>Just took me a looong time to find out. (... and I think it's rather unclever to use defaults that are different from JSF!)</source>
          <target state="translated">Просто у меня ушло много времени,чтобы это выяснить.(...и я думаю,что это довольно дьявольски-использовать настройки по умолчанию,отличные от JSF!)</target>
        </trans-unit>
        <trans-unit id="1d86930b3117bca325817a10d4c98d91c0673298" translate="yes" xml:space="preserve">
          <source>Make sure that no &lt;code&gt;Filter&lt;/code&gt; or &lt;code&gt;Servlet&lt;/code&gt; in the same request-response chain has blocked the request fo the &lt;code&gt;FacesServlet&lt;/code&gt; somehow.</source>
          <target state="translated">Убедитесь, что ни один &lt;code&gt;Filter&lt;/code&gt; или &lt;code&gt;Servlet&lt;/code&gt; в той же цепочке запрос-ответ каким- &lt;code&gt;FacesServlet&lt;/code&gt; образом не заблокировал запрос для FacesServlet .</target>
        </trans-unit>
        <trans-unit id="8665d2dc8b166e8db7e3f138791b0ce08b02a5b7" translate="yes" xml:space="preserve">
          <source>Make sure that no &lt;code&gt;PhaseListener&lt;/code&gt; or any &lt;code&gt;EventListener&lt;/code&gt; in the request-response chain has changed the JSF lifecycle to skip the invoke action phase by for example calling &lt;code&gt;FacesContext#renderResponse()&lt;/code&gt; or &lt;code&gt;FacesContext#responseComplete()&lt;/code&gt;.</source>
          <target state="translated">Убедитесь, что ни один &lt;code&gt;PhaseListener&lt;/code&gt; , ни какой-либо &lt;code&gt;EventListener&lt;/code&gt; в цепочке запрос-ответ не изменили жизненный цикл JSF для пропуска фазы действия вызова, например, путем вызова &lt;code&gt;FacesContext#renderResponse()&lt;/code&gt; или &lt;code&gt;FacesContext#responseComplete()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c99951cd6fa460dec364216152eeebb4a475e63d" translate="yes" xml:space="preserve">
          <source>Make sure that the &lt;code&gt;ActionEvent&lt;/code&gt; argument of &lt;code&gt;actionListener&lt;/code&gt; is an  &lt;code&gt;javax.faces.event.ActionEvent&lt;/code&gt; and thus not &lt;code&gt;java.awt.event.ActionEvent&lt;/code&gt;, which is what most IDEs suggest as 1st autocomplete option. Having no argument is wrong as well if you use &lt;code&gt;actionListener=&quot;#{bean.method}&quot;&lt;/code&gt;. If you don't want an argument in your method, use &lt;code&gt;actionListener=&quot;#{bean.method()}&quot;&lt;/code&gt;. Or perhaps you actually want to use &lt;code&gt;action&lt;/code&gt; instead of &lt;code&gt;actionListener&lt;/code&gt;. See also &lt;a href=&quot;https://stackoverflow.com/questions/3909267/differences-between-action-and-actionlistener&quot;&gt;Differences between action and actionListener&lt;/a&gt;.</source>
          <target state="translated">Убедитесь, что аргумент &lt;code&gt;ActionEvent&lt;/code&gt; для &lt;code&gt;actionListener&lt;/code&gt; является &lt;code&gt;javax.faces.event.ActionEvent&lt;/code&gt; и, следовательно, не &lt;code&gt;java.awt.event.ActionEvent&lt;/code&gt; , что большинство IDE предлагают в качестве первого параметра автозаполнения. &lt;code&gt;actionListener=&quot;#{bean.method}&quot;&lt;/code&gt; аргументы, если вы используете actionListener = &quot;# {bean.method}&quot; . Если вам не нужен аргумент в вашем методе, используйте &lt;code&gt;actionListener=&quot;#{bean.method()}&quot;&lt;/code&gt; . Или, возможно, вы действительно хотите использовать &lt;code&gt;action&lt;/code&gt; вместо &lt;code&gt;actionListener&lt;/code&gt; . Смотрите также &lt;a href=&quot;https://stackoverflow.com/questions/3909267/differences-between-action-and-actionlistener&quot;&gt;Различия между action и actionListener&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="787bb671c544c94f96b9ebd91b2b2969dcf21603" translate="yes" xml:space="preserve">
          <source>No &lt;code&gt;UIInput&lt;/code&gt; value validation/conversion error should have occurred. You can use &lt;code&gt;&amp;lt;h:messages&amp;gt;&lt;/code&gt; to show any messages which are not shown by any input-specific &lt;code&gt;&amp;lt;h:message&amp;gt;&lt;/code&gt; components. Don't forget to include the &lt;code&gt;id&lt;/code&gt; of &lt;code&gt;&amp;lt;h:messages&amp;gt;&lt;/code&gt; in the &lt;code&gt;&amp;lt;f:ajax render&amp;gt;&lt;/code&gt;, if any, so that it will be updated as well on ajax requests. See also &lt;a href=&quot;https://stackoverflow.com/questions/16175178/hmessages-does-not-display-messages-when-pcommandbutton-is-pressed&quot;&gt;h:messages does not display messages when p:commandButton is pressed&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;UIInput&lt;/code&gt; проверки / преобразования значения UIInput не должна была возникнуть. Вы можете использовать &lt;code&gt;&amp;lt;h:messages&amp;gt;&lt;/code&gt; для отображения любых сообщений, которые не отображаются никакими компонентами &lt;code&gt;&amp;lt;h:message&amp;gt;&lt;/code&gt; , специфичными для ввода. Не забудьте включить &lt;code&gt;id&lt;/code&gt; &lt;code&gt;&amp;lt;h:messages&amp;gt;&lt;/code&gt; в &lt;code&gt;&amp;lt;f:ajax render&amp;gt;&lt;/code&gt; , если таковой имеется, чтобы он также обновлялся при запросах ajax. См. Также &lt;a href=&quot;https://stackoverflow.com/questions/16175178/hmessages-does-not-display-messages-when-pcommandbutton-is-pressed&quot;&gt;h: messages не отображает сообщения при нажатии кнопки p: commandButton&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="046e5ea2ef03122b66dcfbbd6d14c9c7c885e722" translate="yes" xml:space="preserve">
          <source>Once I refactored my web.xml, and removed a middle-man-servlet, it then &quot;magically&quot; worked.</source>
          <target state="translated">Как только я рефакторинговал свой web.xml и удалил сервлет среднего человека,он &quot;волшебным образом&quot; сработал.</target>
        </trans-unit>
        <trans-unit id="900f6d313ce970b4b46db22096b5f7b210942ed8" translate="yes" xml:space="preserve">
          <source>One more possibility: if the symptom is that the first invocation works, but subsequent ones do not, you may be using PrimeFaces 3.x with JSF 2.2, as detailed here: &lt;a href=&quot;https://stackoverflow.com/questions/15897201/no-viewstate-is-sent&quot;&gt;No ViewState is sent&lt;/a&gt;.</source>
          <target state="translated">Еще одна возможность: если симптом заключается в том, что первый вызов работает, а последующие - нет, возможно, вы используете PrimeFaces 3.x с JSF 2.2, как подробно описано здесь: &lt;a href=&quot;https://stackoverflow.com/questions/15897201/no-viewstate-is-sent&quot;&gt;ViewState не отправляется&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="acb58217267f8aa5bbd4414adc16b34810b71c1b" translate="yes" xml:space="preserve">
          <source>Placing this attribute in the same scope as the table data itself fixed the problem.</source>
          <target state="translated">Размещение этого атрибута в том же объеме,что и табличные данные,само по себе исправило проблему.</target>
        </trans-unit>
        <trans-unit id="e70a41047a9be3f21e41f17344e58620a8b2f37b" translate="yes" xml:space="preserve">
          <source>Possible causes</source>
          <target state="translated">Возможные причины</target>
        </trans-unit>
        <trans-unit id="6c9d7f7a081fedd16ef6bbbaebd4c0160a1cbf0a" translate="yes" xml:space="preserve">
          <source>So if the underlying data-source is request scoped, the &lt;code&gt;h:commandLink&lt;/code&gt; does not work!</source>
          <target state="translated">Поэтому, если базовый источник данных находится в области запроса, &lt;code&gt;h:commandLink&lt;/code&gt; не работает!</target>
        </trans-unit>
        <trans-unit id="89bde3332b761fb73fb19320e8a928b98c3b3e89" translate="yes" xml:space="preserve">
          <source>Sometimes, when using &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;h:commandButton&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt;, the &lt;code&gt;action&lt;/code&gt;, &lt;code&gt;actionListener&lt;/code&gt; or &lt;code&gt;listener&lt;/code&gt; method associated with the tag are simply not being invoked. Or, the bean properties are not updated with submitted &lt;code&gt;UIInput&lt;/code&gt; values.</source>
          <target state="translated">Иногда при использовании &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;h:commandButton&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; метод &lt;code&gt;action&lt;/code&gt; , &lt;code&gt;actionListener&lt;/code&gt; или &lt;code&gt;listener&lt;/code&gt; , связанный с тегом, просто не вызывается. Или свойства компонента не обновляются с использованием переданных значений &lt;code&gt;UIInput&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b55403f5e52a8b313917ce599cc8d82a298ce25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onclick&lt;/code&gt; attribute of the &lt;code&gt;UICommand&lt;/code&gt; component and the &lt;code&gt;onsubmit&lt;/code&gt; attribute of the &lt;code&gt;UIForm&lt;/code&gt; component should not return &lt;code&gt;false&lt;/code&gt; or cause a JavaScript error. There should in case of &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; also be no JS errors visible in the browser's JS console. Usually googling the exact error message will already give you the answer. See also &lt;a href=&quot;https://stackoverflow.com/questions/16166039/adding-jquery-to-primefaces-results-in-uncaught-typeerror-over-all-place&quot;&gt;Adding jQuery to PrimeFaces results in Uncaught TypeErrors&lt;/a&gt;.</source>
          <target state="translated">Атрибут &lt;code&gt;onclick&lt;/code&gt; компонента &lt;code&gt;onsubmit&lt;/code&gt; атрибут &lt;code&gt;UIForm&lt;/code&gt; компонента UIForm не должны возвращать &lt;code&gt;false&lt;/code&gt; или вызывать ошибку JavaScript. В случае &lt;code&gt;&amp;lt;h:commandLink&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;f:ajax&amp;gt;&lt;/code&gt; также не должно быть никаких ошибок JS, видимых в консоли JS браузера. Обычно поиск точного сообщения об ошибке уже даст вам ответ. Смотрите также &lt;a href=&quot;https://stackoverflow.com/questions/16166039/adding-jquery-to-primefaces-results-in-uncaught-typeerror-over-all-place&quot;&gt;Добавление jQuery в PrimeFaces приводит к Uncaught TypeErrors&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="683575e6a93b9626ee5db4bd9e19d0d15619cd91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rendered&lt;/code&gt; attribute of the component and all of its parents and the &lt;code&gt;test&lt;/code&gt; attribute of any parent &lt;code&gt;&amp;lt;c:if&amp;gt;&lt;/code&gt;/&lt;code&gt;&amp;lt;c:when&amp;gt;&lt;/code&gt; should not evaluate to &lt;code&gt;false&lt;/code&gt; during the apply request values phase of the form submit request. JSF will recheck it as part of safeguard against tampered/hacked requests. Storing the variables responsible for the condition in a &lt;code&gt;@ViewScoped&lt;/code&gt; bean or making sure that you're properly preinitializing the condition in &lt;code&gt;@PostConstruct&lt;/code&gt; of a &lt;code&gt;@RequestScoped&lt;/code&gt; bean should fix it. The same applies to the &lt;code&gt;disabled&lt;/code&gt; attribute of the component, which should not evaluate to &lt;code&gt;true&lt;/code&gt; during apply request values phase. See also &lt;a href=&quot;https://stackoverflow.com/questions/13326404/jsf-commandbutton-action-not-invoked&quot;&gt;JSF CommandButton action not invoked&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/questions/18782503/form-submit-in-conditionally-rendered-component-is-not-processed&quot;&gt;Form submit in conditionally rendered component is not processed&lt;/a&gt;.</source>
          <target state="translated">Представленный атрибут компонента и всех его родительских элементов, а также атрибут &lt;code&gt;test&lt;/code&gt; любого родительского элемента &lt;code&gt;&amp;lt;c:if&amp;gt;&lt;/code&gt; / &lt;code&gt;&amp;lt;c:when&amp;gt;&lt;/code&gt; не должны оцениваться как &lt;code&gt;false&lt;/code&gt; во время фазы применения значений запроса в форме отправки запроса. JSF будет перепроверять его как часть защиты от подделанных / взломанных запросов. Хранение переменных, отвечающих за условие, в компоненте &lt;code&gt;@ViewScoped&lt;/code&gt; или проверка правильности предварительной &lt;code&gt;@PostConstruct&lt;/code&gt; условия в @PostConstruct компонента &lt;code&gt;@RequestScoped&lt;/code&gt; должны исправить это. То же самое относится к &lt;code&gt;disabled&lt;/code&gt; атрибуту компонента, который не должен иметь значение &lt;code&gt;true&lt;/code&gt; во время фазы применения значений запроса. См. Также &lt;a href=&quot;https://stackoverflow.com/questions/13326404/jsf-commandbutton-action-not-invoked&quot;&gt;действие JSF CommandButton, которое не вызывается,&lt;/a&gt; и отправка &lt;a href=&quot;https://stackoverflow.com/questions/18782503/form-submit-in-conditionally-rendered-component-is-not-processed&quot;&gt;формы в условно отображаемом компоненте не обрабатывается&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c81848ff08fc3983fe3b2c5aa9924909dad9fd69" translate="yes" xml:space="preserve">
          <source>The underlying data-source which is bound to the &lt;code&gt;h:dataTable&lt;/code&gt; must also be available in the second JSF-Lifecycle that is triggered when the link is clicked.</source>
          <target state="translated">Базовый источник данных, связанный с &lt;code&gt;h:dataTable&lt;/code&gt; , также должен быть доступен во втором жизненном цикле JSF, который запускается при щелчке по ссылке.</target>
        </trans-unit>
        <trans-unit id="31194f50c39ca6965c1c258a38ee81b4f0441b53" translate="yes" xml:space="preserve">
          <source>To solve;</source>
          <target state="translated">Чтобы решить;</target>
        </trans-unit>
        <trans-unit id="cd38dcc63534233835be9bd9ba0ef22a7253957e" translate="yes" xml:space="preserve">
          <source>What I don't know is why the facelet was able to access the bean properties but could not set them, and this clearly screams for doing away with the mix of servlets and JSF, but I hope this helps someone avoid many hours of head-to-table-banging.</source>
          <target state="translated">Чего я не знаю,так это почему фасетка смогла получить доступ к свойствам фасоли,но не смогла их установить,и это явно кричит за то,чтобы покончить со смесью сервлетов и JSF,но я надеюсь,что это поможет кому-нибудь избежать многочасовых ударов с головы до ног.</target>
        </trans-unit>
        <trans-unit id="55d020f4d16abc75661bbb064220f5f235d8332c" translate="yes" xml:space="preserve">
          <source>What are the possible causes and solutions for this?</source>
          <target state="translated">Каковы возможные причины и решения для этого?</target>
        </trans-unit>
        <trans-unit id="52fb4fb0c0ae3500cce8b73c884ba66d78512a5b" translate="yes" xml:space="preserve">
          <source>When you use a &lt;code&gt;p:commandButton&lt;/code&gt; for the action that needs to be done on the server, you can not use &lt;code&gt;type=&quot;button&quot;&lt;/code&gt; because that is for &lt;b&gt;Push buttons&lt;/b&gt; which are used to execute custom javascript without causing an ajax/non-ajax request to the server.</source>
          <target state="translated">Когда вы используете &lt;code&gt;p:commandButton&lt;/code&gt; для действия, которое необходимо выполнить на сервере, вы не можете использовать &lt;code&gt;type=&quot;button&quot;&lt;/code&gt; , потому что это для &lt;b&gt;кнопок,&lt;/b&gt; которые используются для выполнения пользовательского javascript, не вызывая ajax / non-ajax запрос на сервер.</target>
        </trans-unit>
        <trans-unit id="00e25c622df489b30b52379657126b136ec6699d" translate="yes" xml:space="preserve">
          <source>Whenever an &lt;code&gt;UICommand&lt;/code&gt; component (&lt;code&gt;&amp;lt;h:commandXxx&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;p:commandXxx&amp;gt;&lt;/code&gt;, etc) fails to invoke the associated action method, or an &lt;code&gt;UIInput&lt;/code&gt; component (&lt;code&gt;&amp;lt;h:inputXxx&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;p:inputXxxx&amp;gt;&lt;/code&gt;, etc) fails to process the submitted values and/or update the model values, and you aren't seeing any googlable exceptions and/or warnings in the server log, also not when you configure an ajax exception handler as per &lt;a href=&quot;https://stackoverflow.com/questions/27526753/exception-handling-in-jsf-ajax-requests&quot;&gt;Exception handling in JSF ajax requests&lt;/a&gt;, nor when you set below context parameter in &lt;code&gt;web.xml&lt;/code&gt;,</source>
          <target state="translated">Всякий раз, когда компонент &lt;code&gt;UICommand&lt;/code&gt; ( &lt;code&gt;&amp;lt;h:commandXxx&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;p:commandXxx&amp;gt;&lt;/code&gt; и т. Д.) Не может вызвать связанный метод действия, или компонент &lt;code&gt;UIInput&lt;/code&gt; ( &lt;code&gt;&amp;lt;h:inputXxx&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;p:inputXxxx&amp;gt;&lt;/code&gt; и т. Д.) Не может обработать отправленные значения и / или обновите значения модели, и вы не увидите никаких исключений и / или предупреждений, связанных с googlable, в журнале сервера, в том числе при настройке обработчика исключений ajax в соответствии с &lt;a href=&quot;https://stackoverflow.com/questions/27526753/exception-handling-in-jsf-ajax-requests&quot;&gt;обработкой исключений в JJF-запросах ajax&lt;/a&gt; и при установке под контекстным параметром в &lt;code&gt;web.xml&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="8cc2d69e76122736995792000c78c4891eb63435" translate="yes" xml:space="preserve">
          <source>While my answer isn't 100% applicable, but most search engines find this as the first hit, I decided to post it nontheless:</source>
          <target state="translated">Хотя мой ответ не на 100% применим,но большинство поисковых систем находят это как первый хит,я решил тем не менее разместить его:</target>
        </trans-unit>
        <trans-unit id="423ade3816837a68684473e4349ce56f6c5c7386" translate="yes" xml:space="preserve">
          <source>You cannot nest multiple &lt;code&gt;UIForm&lt;/code&gt; components in each other. This is illegal in HTML. The browser behavior is unspecified. Watch out with include files! You can use &lt;code&gt;UIForm&lt;/code&gt; components in parallel, but they won't process each other during submit. You should also watch out with &quot;God Form&quot; antipattern; make sure that you don't unintentionally process/validate all other (invisible) inputs in the very same form (e.g. having a hidden dialog with required inputs in the very same form). See also &lt;a href=&quot;https://stackoverflow.com/questions/7371903/using-multiple-hform-in-a-jsf-page&quot;&gt;How to use &amp;lt;h:form&amp;gt; in JSF page? Single form? Multiple forms? Nested forms?&lt;/a&gt;.</source>
          <target state="translated">Вы не можете &lt;code&gt;UIForm&lt;/code&gt; несколько компонентов UIForm друг в друга. Это незаконно в HTML. Поведение браузера не определено. Остерегайтесь включаемых файлов! Вы можете использовать компоненты &lt;code&gt;UIForm&lt;/code&gt; параллельно, но они не будут обрабатывать друг друга во время отправки. Вы также должны остерегаться &amp;laquo;антипаттерна формы Бога&amp;raquo;; убедитесь, что вы непреднамеренно не обрабатываете / не проверяете все другие (невидимые) входные данные в той же форме (например, наличие скрытого диалога с необходимыми входными данными в той же форме). Смотрите также &lt;a href=&quot;https://stackoverflow.com/questions/7371903/using-multiple-hform-in-a-jsf-page&quot;&gt;Как использовать &amp;lt;h: form&amp;gt; на странице JSF?&lt;/a&gt; Одиночная форма? Несколько форм? Вложенные формы? ,</target>
        </trans-unit>
        <trans-unit id="83b9786384a50732d924ecf189d5816e812eb225" translate="yes" xml:space="preserve">
          <source>and you are also not seeing any googlable errors and/or warnings in browser's JavaScript console (press F12 in Chrome/Firefox23+/IE9+ to open the web developer toolset and then open the &lt;em&gt;Console&lt;/em&gt; tab), then work through below list of possible causes.</source>
          <target state="translated">и вы также не видите никаких ошибок и / или предупреждений, связанных с Google, в консоли JavaScript браузера (нажмите F12 в Chrome / Firefox23 + / IE9 +, чтобы открыть набор инструментов веб-разработчика, а затем откройте вкладку &amp;laquo; &lt;em&gt;Консоль&lt;/em&gt; &amp;raquo;), затем просмотрите приведенный ниже список возможных причин.</target>
        </trans-unit>
        <trans-unit id="0108272869d720e2cea513ee55f9f5fad26a791d" translate="yes" xml:space="preserve">
          <source>commandButton/commandLink/ajax action/listener method not invoked or input value not set/updated</source>
          <target state="translated">командаКнопкаКомандаLinkajax не вызывается или входное значение не задается автоматически</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
