<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/8547778">
    <body>
      <group id="8547778">
        <trans-unit id="89ec615e8896a817a1338b981c5dd02618028624" translate="yes" xml:space="preserve">
          <source>(It shows FLOP/s for different values of &lt;code&gt;n&lt;/code&gt;.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Показывает FLOP / s для разных значений &lt;/font&gt;&lt;/font&gt; &lt;code&gt;n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="12da5ea81004fb4224ae834c50a9dde8a5706fc0" translate="yes" xml:space="preserve">
          <source>5 Regions - Explanations</source>
          <target state="translated">5 Регионы-Пояснения</target>
        </trans-unit>
        <trans-unit id="b14907e1ba792b57aecd8a4bf1e7f6c09685b346" translate="yes" xml:space="preserve">
          <source>&lt;strike&gt;Here, as the data sizes increases, the amount of relative overhead goes down and the performance &quot;saturates&quot;. Here two loops is slower because it has twice as much loop and branching overhead.&lt;/strike&gt;</source>
          <target state="translated">&lt;strike&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Здесь при увеличении размеров данных количество относительных накладных расходов уменьшается, а производительность &amp;laquo;насыщается&amp;raquo;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Здесь два цикла медленнее, потому что он имеет в два раза больше циклов и ветвлений.&lt;/font&gt;&lt;/font&gt;&lt;/strike&gt;</target>
        </trans-unit>
        <trans-unit id="69479992a61ec0eb9e53f2ae7d6230f7aea2402f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1st Case:&lt;/strong&gt; - Only one summation but two independent function calls.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1-й случай:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - только одно суммирование, но два независимых вызова функций.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63a03495083598dadf8617e71321f11f6da3036b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2 x Intel Xeon X5482 Harpertown @ 3.2 GHz:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2 x Intel Xeon X5482 Harpertown @ 3,2 ГГц:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8dd2234cdf691ae3d1c9d696aa07b739c688a8b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2nd Case:&lt;/strong&gt; - Two summations but each has its own function call.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2-й случай:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - Два суммирования, но у каждого свой вызов функции.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac5177fa49c357654e6cf65a86c3c6135e13b3b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;6.206 seconds&lt;/strong&gt; with one loop and &lt;strong&gt;2.116 seconds&lt;/strong&gt; with two loops. This reproduces the OP's results exactly.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;6,206 секунды&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; с одной петлей и &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2,116 секунды&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; с двумя петлями. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это точно воспроизводит результаты ОП.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="152bc0110de9ef28e70c5321422c739a7c563036" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;First Case:&lt;/em&gt;&lt;/strong&gt; On first iteration the &lt;code&gt;Boss&lt;/code&gt; has to initially go 100 feet to give the order slip to &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;A&lt;/code&gt; goes off and does his thing, but then the &lt;code&gt;Boss&lt;/code&gt; has to travel 500 feet to &lt;code&gt;C&lt;/code&gt; to give him his order slip. Then on the next iteration and every other iteration after the &lt;code&gt;Boss&lt;/code&gt; has to go back and forth 500 feet between the two.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Первый случай:&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; на первой итерации&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; должен сначала пройти 100 футов, чтобы отдать ордер&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; уходит и делает свое дело, но затем&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; должен пройти 500 футов к&lt;/font&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; чтобы дать ему ордер. Затем на следующей итерации и на каждой другой итерации после того, как&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; должен идти вперед и назад на 500 футов между ними.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b3d8ae7e9620b4a3b3a01e77c1f42a469984bc3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Second Case:&lt;/em&gt;&lt;/strong&gt;&lt;code&gt;The Boss&lt;/code&gt; has to travel 100 feet on the first iteration to &lt;code&gt;A&lt;/code&gt;, but after that he is already there and just waits for &lt;code&gt;A&lt;/code&gt; to get back until all slips are filled. Then the &lt;code&gt;Boss&lt;/code&gt; has to travel 500 feet on the first iteration to &lt;code&gt;C&lt;/code&gt; because &lt;code&gt;C&lt;/code&gt; is 500 feet from &lt;code&gt;A&lt;/code&gt; since this &lt;code&gt;Boss( Summation, For Loop )&lt;/code&gt; is being called right after working with &lt;code&gt;A&lt;/code&gt; and then just waits like he did with &lt;code&gt;A&lt;/code&gt; until all of &lt;code&gt;C's&lt;/code&gt; order slips are done.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Второй случай:&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt; &lt;code&gt;The Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; должен пройти 100 футов на первой итерации к&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , но после этого он уже там и просто ждет, пока&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вернется, пока все промахи не будут заполнены. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Затем&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; должен пройти 500 футов на первой итерации до&lt;/font&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; потому что&lt;/font&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; находится в 500 футах от&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; так как этот&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss( Summation, For Loop )&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вызывается сразу после работы с&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; а затем просто ждет, как он сделал с&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; пока все&lt;/font&gt;&lt;/font&gt; &lt;code&gt;C's&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; сделаны.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8db4c14c29a7d105d2f99dd7e4cab04e750bd539" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Assessing The Problem&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Оценивая проблему&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bd63d84ed789fbfe62fd115ddd944db74e9a753b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Benchmark Results:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Результаты теста:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a385dd46f24c302ea5ca744977eaa5b99101b83b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Case 1&lt;/strong&gt; is a classic interpolation problem that happens to be an inefficient one. I also think that this was one of the leading reasons of why many machine architectures and developers ended up building and designing multi-core systems with the ability to do multi-threaded applications as well as parallel programming.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Случай 1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это классическая проблема интерполяции, которая оказывается неэффективной. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я также думаю, что это было одной из главных причин того, почему многие машинные архитектуры и разработчики закончили создавать и проектировать многоядерные системы с возможностью выполнения многопоточных приложений, а также параллельного программирования.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db76f0a25108e4cb963d0a08f23235f505a9cc91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Conclusion:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Conclusion:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee9af54fbd9a13fc657b8c9037b7dfde2362914f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Could you provide some solid insight into the details that lead to the different cache behaviors as illustrated by the five regions on the following graph?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Не могли бы вы дать некоторое представление о деталях, которые приводят к разным поведением кэша, как показано пятью областями на следующем графике?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f64c2fa0ab45059d9d2b05c465150bbadd393a29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT : It does in fact look like you are allocating all the arrays separately.&lt;/strong&gt;
Usually when such large allocations are requested, the allocator will request fresh pages from the OS. Therefore, there is a high chance that large allocations will appear at the same offset from a page-boundary.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;РЕДАКТИРОВАТЬ: Это на самом деле выглядит, как будто вы распределяете все массивы отдельно. &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Обычно, когда запрашиваются такие большие выделения, распределитель запрашивает свежие страницы из ОС. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Следовательно, существует высокая вероятность того, что большие выделения появятся с тем же смещением от границы страницы.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff82481600ca4b72142ffa0c5df31cb8e1828e64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Here's the test code:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот тестовый код:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="104d7d0e822b5338538004327c987e53d73680da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;I cannot replicate the results discussed here.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я не могу повторить результаты, обсуждаемые здесь.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="112ae0b490d81db4a257a03413092f9a19eef61c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In the first two tests, the arrays are allocated separately.&lt;/strong&gt; You'll notice that they all have the same alignment relative to the page.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В первых двух тестах массивы выделяются отдельно. &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы заметите, что все они имеют одинаковое выравнивание по отношению к странице.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4eb70f5351695541ea10eb07e79eea4cb293448a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In the second two tests, the arrays are packed together to break that alignment.&lt;/strong&gt; Here you'll notice both loops are faster. Furthermore, the second (double) loop is now the slower one as you would normally expect.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Во вторых двух тестах массивы упакованы вместе, чтобы нарушить это выравнивание. &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Здесь вы заметите, что обе петли быстрее. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Кроме того, второй (двойной) цикл теперь стал медленнее, чем вы обычно ожидаете.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e94c672f74af08d7f271531102f1986340b6dec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;It might also be interesting to point out the differences between CPU/cache architectures, by providing a similar graph for these CPUs.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Также было бы интересно указать на различия между архитектурами ЦП и кэш-памяти, предоставляя подобный график для этих ЦП.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="234647d3ac335a2b9c1c73ef786914ed30da0bc5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Let's Investigate&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Давайте расследовать&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0992f369b3bd576e62bd26ec8024546b329d7025" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Our Assertions:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Наши утверждения:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bce0cd5ffb2a37fba775193b4bf5ba59883c25c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Regarding These Questions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Относительно этих вопросов&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="883cd845c12162f162451345532a4622afe44219" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Region 1:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Регион 1:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c3a069490cad64b2abbf3ad037bad18e1f4ba80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Region 2:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Регион 2:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49b07d776f5d212a4b7f02a4946b33b5f222234c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Region 3:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Регион 3:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cadf6d1e9cc3c16346b4db73abfa9efeefa2911d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Region 4:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Регион 4:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2704be14d7b23daec07410a5dd7685d9fa30cda2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Region 5:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Регион 5:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7ae2cc3d2bb2ec34c48c443e7891cfc09bd5f463" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Summary with Analogy&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Резюме с аналогией&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4984ec011b334dc8f00bd50924d4167bb704d1a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Algorithms:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Алгоритмы:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df9ac0ca08c80980b68a2fa485d69fb68d2aaa69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Approach&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Подход&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eec929ed1c8347dcecf86a47fbb2804dba304932" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Comparison of Arbitrary Values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Сравнение произвольных значений&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec70960c24f99d8101f34115f16fb94cf32e1c01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Consideration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Рассмотрение&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8b01854004cefcf81fbcc247efc2e4e0797a699" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Difference In Distances Traveled&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Разница в пройденных расстояниях&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e3a70475f876caae8f6a04b7f0e07646a22f2ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Ending Results&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Конечные результаты&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3bdeca04c971828619464a9072d48f1805614670" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The OPs Amended Question(s)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Измененные вопросы ОП&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="415a6cc46e0f95521c4e7cb395b0523a2dc5c7de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Observation:&lt;/strong&gt; - &lt;em&gt;The differences between the two algorithms&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Наблюдение:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Различия между двумя алгоритмами&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="76781d11095b245a6f8c86e1771fa82fec1ba4b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Original Question&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Оригинальный вопрос&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c2361582818f9044502e5f10dd5db390bc078247" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Perspective&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Перспектива&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d18f8f2bee619589b857aee842936d61a6270c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Test Cases:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Тестовые случаи:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6f94195bfa3d4122553a525b3ba8b2def28614f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What We Do Know&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Что мы знаем&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f99489672c41c8daa933d99ea58acb903a2b5c58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What We Don't Know&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Что мы не знаем&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="521b0abab75a6ac4655f23b9618ac7ccc724efb0" translate="yes" xml:space="preserve">
          <source>@Mysticial's answer convinced a lot of people (including me), probably because it was the only one that seemed to rely on facts, but it was only one &quot;data point&quot; of the truth.</source>
          <target state="translated">Ответ @Mysticial убедил многих людей (в том числе и меня),наверное,потому,что он был единственным,кто,казалось бы,полагался на факты,но это была только одна &quot;точка данных&quot; правды.</target>
        </trans-unit>
        <trans-unit id="0e15339689c74cb259c9d321c1b1b5454cd6bed7" translate="yes" xml:space="preserve">
          <source>A straight assignment with no computation would be a cleaner test of memory access time and would create a test that is uniform irrespective of the loop count. Maybe I missed something in the conversation, but it is worth thinking twice about. If the plus is left out of the assignment, the cumulative time is almost identical at 31 seconds each.</source>
          <target state="translated">Прямое задание без вычислений было бы более чистым тестом времени доступа к памяти и создало бы тест,который был бы равномерным независимо от количества циклов.Может быть,я что-то пропустил в разговоре,но стоит подумать об этом дважды.Если плюс не включить в задание,то кумулятивное время будет почти одинаковым на 31 секунду каждое.</target>
        </trans-unit>
        <trans-unit id="b2921679a209c3a19ed571424cfe0ea586224ba2" translate="yes" xml:space="preserve">
          <source>After looking at the code for a while it became quite apparent what the problem is and what is generating it. Lets break this down into an algorithmic problem and look at it from the perspective of using mathematical notations then apply an analogy to the math problems as well as to the algorithms.</source>
          <target state="translated">После ознакомления с кодом на некоторое время стало совершенно очевидно,в чем проблема и что его генерирует.Давайте разберемся на алгоритмическую проблему и посмотрим на нее с точки зрения использования математических нотаций,а затем проведем аналогию с математическими проблемами,а также с алгоритмами.</target>
        </trans-unit>
        <trans-unit id="a01e33f4dcdb6ba1ae9f34a97cf8f6deeedf1a8d" translate="yes" xml:space="preserve">
          <source>And</source>
          <target state="translated">And</target>
        </trans-unit>
        <trans-unit id="68af471cbe64993c128953195c25db2546c9c3a6" translate="yes" xml:space="preserve">
          <source>And this approximation is the average difference between these two loops both algorithmically and machine operations involving software optimizations and machine instructions. So when the data set grows linearly, so does the difference in time between the two. Algorithm 1 has more fetches than algorithm 2 which is evident when the &lt;code&gt;Boss&lt;/code&gt; had to travel back and forth the maximum distance between &lt;code&gt;A&lt;/code&gt; &amp;amp; &lt;code&gt;C&lt;/code&gt; for every iteration after the first iteration while Algorithm 2 the &lt;code&gt;Boss&lt;/code&gt; had to travel to &lt;code&gt;A&lt;/code&gt; once and then after being done with &lt;code&gt;A&lt;/code&gt; he had to travel a maximum distance only one time when going from &lt;code&gt;A&lt;/code&gt; to &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;И это приближение является средней разницей между этими двумя циклами как алгоритмически, так и машинными операциями, включающими оптимизацию программного обеспечения и машинные инструкции. Поэтому, когда набор данных растет линейно, увеличивается и разница во времени между ними. Алгоритм 1 имеет больше выборок, чем алгоритм 2, что очевидно, когда &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; должен был пройти назад и вперед максимальное расстояние между &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;amp; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для каждой итерации после первой итерации, в то время как Алгоритм 2 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; должен был пройти к &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; один раз, а затем после того, как это было сделано с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; он должен был путешествовать максимальное расстояние только один раз при переходе от &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; к &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9088cef1499e648db384472fce2fb57166ffcad" translate="yes" xml:space="preserve">
          <source>And this is a hard-to-explain one: Initialized data, that is allocated once and reused for every following test case of different vector size:</source>
          <target state="translated">А это трудно объяснить:Инициализированные данные,которые выделяются один раз и повторно используются для каждого последующего тестового случая различного размера вектора:</target>
        </trans-unit>
        <trans-unit id="6bc397ce8c790298abec880d37b0008e7ad386fd" translate="yes" xml:space="preserve">
          <source>Array sizes ranged from 2^16 to 2^24, using eight loops. I was careful to initialize the source arrays so the &lt;code&gt;+=&lt;/code&gt; assignment wasn't asking the &lt;a href=&quot;http://en.wikipedia.org/wiki/Floating-point_unit&quot;&gt;FPU&lt;/a&gt; to add memory garbage interpreted as a double.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Размеры массивов варьировались от 2 ^ 16 до 2 ^ 24 с использованием восьми циклов. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я был осторожен, чтобы инициализировать исходные массивы, чтобы присвоение &lt;/font&gt;&lt;/font&gt; &lt;code&gt;+=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не просило &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Floating-point_unit&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;FPU&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; добавить мусор памяти, интерпретируемый как double.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d798d18424176f8a0f98a50c4c4dec04767bbde5" translate="yes" xml:space="preserve">
          <source>As @Stephen Cannon points out in the comments, there is very likely possibility that this alignment causes &lt;strong&gt;&lt;em&gt;false aliasing&lt;/em&gt;&lt;/strong&gt; in the load/store units or the cache. I Googled around for this and found that Intel actually has a hardware counter for &lt;strong&gt;&lt;em&gt;partial address aliasing&lt;/em&gt;&lt;/strong&gt; stalls:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как отмечает @Stephen Cannon в комментариях, очень вероятно, что это выравнивание приведет к &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ложному наложению псевдонимов&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в блоках загрузки / хранения или в кеше. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я погуглил по этому поводу и обнаружил, что у Intel на самом деле есть аппаратный счетчик для &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;киосков &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;частичного адреса&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c35e4900a7c68daeafb264cda2682267df9d2546" translate="yes" xml:space="preserve">
          <source>As I have demonstrated without a doubt, there is an underlying issue even before the Hardware and Software becomes involved. Now as for the management of memory and caching along with page files, etc. which all works together in an integrated set of systems between: &lt;code&gt;The Architecture&lt;/code&gt; { Hardware, Firmware, some Embedded Drivers, Kernels and ASM Instruction Sets }, &lt;code&gt;The OS&lt;/code&gt;{ File and Memory Management systems, Drivers and the Registry }, &lt;code&gt;The Compiler&lt;/code&gt; { Translation Units and Optimizations of the Source Code }, and even the &lt;code&gt;Source Code&lt;/code&gt; itself with its set(s) of distinctive algorithms; we can already see that there is a bottleneck that is happening within the first algorithm before we even apply it to any machine with any arbitrary &lt;code&gt;Architecture&lt;/code&gt;, &lt;code&gt;OS&lt;/code&gt;, and &lt;code&gt;Programmable Language&lt;/code&gt; compared to the second algorithm. So there already existed a problem before involving the intrinsics of a modern computer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Без сомнения, я продемонстрировал, что существует проблема, лежащая в основе еще до того, как будут задействованы аппаратное и программное обеспечение. Теперь что касается управления памятью и кэшированием вместе с файлами подкачки и т. Д., Которые все работают вместе в интегрированном наборе систем: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;The Architecture&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; {аппаратное обеспечение, микропрограмма, некоторые встроенные драйверы, ядра и наборы инструкций ASM}, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;The OS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; {файл и системы управления памятью, драйверы и реестр}, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;The Compiler&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; {единицы перевода и оптимизации исходного кода} и даже сам &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Source Code&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; с его набором (-ами) отличительных алгоритмов; мы уже можем видеть, что в первом алгоритме есть узкое место, прежде чем мы даже применим его к любой машине с любым произвольным&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Architecture&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;OS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Programmable Language&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; по сравнению со вторым алгоритмом. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, уже существовала проблема до того, как были задействованы особенности современного компьютера.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db05e8a585a74c2b37aa36f6b4ef683ef80e1764" translate="yes" xml:space="preserve">
          <source>As you might expect, initializing &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;d&lt;/code&gt; inside the loop using &lt;code&gt;InitToZero[j]&lt;/code&gt; gave the combined approach an advantage, as they were done back-to-back before the assignments to &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;, but still within 10%. Go figure.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как и следовало ожидать, инициализация &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; внутри цикла с использованием &lt;/font&gt;&lt;/font&gt; &lt;code&gt;InitToZero[j]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; дала комбинированному подходу преимущество, так как они выполнялись вплотную перед присвоением &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , но все еще в пределах 10%. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Пойди разберись.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6eeb01c453d49806a69030f78b4610c8007b3c99" translate="yes" xml:space="preserve">
          <source>Assuming a fairly dumb caching policy of &lt;em&gt;if the byte is not in the cache, put it there and get the following byte too while we are at it&lt;/em&gt; you will get a scenario something like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Предполагая довольно глупую политику кэширования, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;если байт не находится в кеше, поместите его туда и получите следующий байт, пока мы на нем,&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вы получите сценарий примерно такой:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2621108dbdca1d058df9e1e89bdc18d55d8d9d56" translate="yes" xml:space="preserve">
          <source>Assuming a simple LIFO caching policy, this code:</source>
          <target state="translated">Предполагая простую политику кэширования LIFO,этот код:</target>
        </trans-unit>
        <trans-unit id="3460682488e6d7cc96dbc4d2d00519a722ffcdff" translate="yes" xml:space="preserve">
          <source>At this point, nothing fits in cache. So you're bound by memory bandwidth.</source>
          <target state="translated">На данный момент ничто не помещается в кэш.Значит,вы ограничены пропускной способностью памяти.</target>
        </trans-unit>
        <trans-unit id="847dd1a8dd5a0fcb1deef24af0fdd56bf4308a6a" translate="yes" xml:space="preserve">
          <source>At this point, the data no longer fits in L1 cache. So performance is capped by the L1 &amp;lt;-&amp;gt; L2 cache bandwidth.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;На этом этапе данные больше не помещаются в кэш L1. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, производительность ограничена пропускной способностью кэша L1 &amp;lt;-&amp;gt; L2.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d744e9fe7c6bd65afd8a445005ae9f5103b27665" translate="yes" xml:space="preserve">
          <source>Compiled on MS &lt;a href=&quot;http://en.wikipedia.org/wiki/Visual_C++#32-bit_versions&quot;&gt;Visual C++ 10.0&lt;/a&gt; with full optimization and &lt;a href=&quot;http://en.wikipedia.org/wiki/SSE2&quot;&gt;SSE2&lt;/a&gt; enabled for 32-bit on a &lt;a href=&quot;http://en.wikipedia.org/wiki/Intel_Core_2&quot;&gt;Intel Core 2&lt;/a&gt; Duo (x64), the first example takes 5.5&amp;nbsp;seconds and the double-loop example takes only 1.9&amp;nbsp;seconds. My question is: (Please refer to the my rephrased question at the bottom)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Скомпилированный на MS &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Visual_C++#32-bit_versions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Visual C ++ 10.0&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; с полной оптимизацией и &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;включенным &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/SSE2&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SSE2&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для 32-разрядных на &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Intel_Core_2&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Intel Core 2&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Duo (x64), первый пример занимает 5,5 секунды, а пример с двойной петлей - всего 1,9 секунды. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Мой вопрос: (Пожалуйста, обратитесь к моему перефразированному вопросу внизу)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce5cd38e3fb59188d515e8d4753f99e250f4c136" translate="yes" xml:space="preserve">
          <source>Considering the OP's original question about the 2 variants of the for loops and his amended question towards the behavior of caches along with many of the other excellent answers and useful comments; I'd like to try and do something different here by taking a different approach about this situation and problem.</source>
          <target state="translated">Рассматривая оригинальный вопрос ОП о 2-х вариантах циклов и его измененный вопрос о поведении кэшей,наряду со многими другими отличными ответами и полезными комментариями,я хотел бы попробовать сделать здесь что-то другое,применяя другой подход к этой ситуации и проблеме.</target>
        </trans-unit>
        <trans-unit id="2658124dfdcfa4171d5ed289bdc8e7cce5a9eacb" translate="yes" xml:space="preserve">
          <source>Considering the two loops and all of the discussion about cache and page filing I'd like to take another approach as to looking at this from a different perspective. One that doesn't involve the cache and page files nor the executions to allocate memory, in fact this approach doesn't even concern the actual hardware or the software at all.</source>
          <target state="translated">Учитывая два цикла и всю дискуссию о кэшировании и подаче страниц,я хотел бы применить другой подход,чтобы посмотреть на это с другой точки зрения.Тот,который не включает в себя ни кэш и файлы страниц,ни исполнение для выделения памяти,на самом деле этот подход не касается даже реального оборудования или программного обеспечения вообще.</target>
        </trans-unit>
        <trans-unit id="7cd90e2c4a5daa4b5570598684f8432ccd97991f" translate="yes" xml:space="preserve">
          <source>Could you provide some solid insight into the details that lead to the different cache behaviors as illustrated by the five regions on the following graph?</source>
          <target state="translated">Не могли бы вы предоставить некоторое обоснованное представление о деталях,которые приводят к различным моделям поведения в кэше,как это проиллюстрировано пятью регионами на следующем графике?</target>
        </trans-unit>
        <trans-unit id="45e62524f888dc26206083147534d2d045cfe01f" translate="yes" xml:space="preserve">
          <source>Disassembly for the first loop basically looks like this (this block is repeated about five times in the full program):</source>
          <target state="translated">Разборка для первого цикла в основном выглядит так (этот блок повторяется примерно пять раз в полной программе):</target>
        </trans-unit>
        <trans-unit id="f5aded222c02776b41379bab0f381d5cb63dc8c0" translate="yes" xml:space="preserve">
          <source>EDIT: Results on an &lt;em&gt;actual&lt;/em&gt; Core 2 architecture machine:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;РЕДАКТИРОВАТЬ: Результаты на &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;реальной&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; машине с архитектурой Core 2:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c1cdf0b350bbd524d76c4339c2d1b23bdd3868e0" translate="yes" xml:space="preserve">
          <source>EDIT: The question turned out to be of no relevance, as the behavior severely depends on the sizes of the arrays (n) and the CPU cache. So if there is further interest, I rephrase the question:</source>
          <target state="translated">EDIT:Вопрос оказался несущественным,так как поведение сильно зависит от размеров массивов (n)и кэш-памяти процессора.Поэтому,если есть дальнейший интерес,я перефразирую вопрос:</target>
        </trans-unit>
        <trans-unit id="56c9875ac0dcfe30c44dfb65704f11fe74371099" translate="yes" xml:space="preserve">
          <source>Each loop of the double loop example produces this code (the following block is repeated about three times):</source>
          <target state="translated">Каждый цикл в примере двойного цикла дает такой код (следующий блок повторяется примерно три раза):</target>
        </trans-unit>
        <trans-unit id="7339be587541117a0089da7851906a2b9aeddb3a" translate="yes" xml:space="preserve">
          <source>Every low-level performance related question on Stack&amp;nbsp;Overflow should be required to provide MFLOPS information for the whole range of cache relevant data sizes! It's a waste of everybody's time to think of answers and especially discuss them with others without this information.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Каждый вопрос низкого уровня производительности, связанный с переполнением стека, должен требовать предоставления информации MFLOPS для всего диапазона размеров данных, связанных с кешем! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это пустая трата времени на то, чтобы думать об ответах и ​​особенно обсуждать их с другими без этой информации.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f030db38dc8179d25718d183c7994c1ad7bfec3" translate="yes" xml:space="preserve">
          <source>Hardware is &lt;a href=&quot;http://en.wikipedia.org/wiki/Dell_XPS#XPS_8500&quot;&gt;Dell XPS 8500&lt;/a&gt; with generation 3 &lt;a href=&quot;http://en.wikipedia.org/wiki/Intel_Core#Core_i7&quot;&gt;Core i7&lt;/a&gt; @ 3.4&amp;nbsp;GHz and 8&amp;nbsp;GB memory. For 2^16 to 2^24, using eight loops, the cumulative time was 44.987 and 40.965 respectively. Visual C++ 2010, fully optimized.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Аппаратное обеспечение - &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Dell_XPS#XPS_8500&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Dell XPS 8500&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; с &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;процессором &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Intel_Core#Core_i7&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Core i7&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; @ 3,4 ГГц и 8 ГБ памяти. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для 2 ^ 16 до 2 ^ 24, используя восемь циклов, совокупное время было 44,987 и 40,965 соответственно. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Visual C ++ 2010, полностью оптимизирован.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c1bbe64c3e6e15af998d9942383e89f52b14b186" translate="yes" xml:space="preserve">
          <source>However, in order for false aliasing to occur, there must be a large enough stride between the datasets. This is why you don't see this in region 3.</source>
          <target state="translated">Однако для того,чтобы произошло ложное наложение псевдонимов,между наборами данных должен быть достаточно большой шаг.Вот почему вы не видите этого в области 3.</target>
        </trans-unit>
        <trans-unit id="f3b9fd0727ad4b649df8f9eab11b90ef6e577209" translate="yes" xml:space="preserve">
          <source>However; it is not to say that these new questions are not of importance because they themselves are and they do play a role after all. They do impact the procedures and the overall performance and that is evident with the various graphs and assessments from many who have given their answer(s) and or comment(s). If you pay attention to the analogy of the &lt;code&gt;Boss&lt;/code&gt; and the two workers &lt;code&gt;A&lt;/code&gt; &amp;amp; &lt;code&gt;B&lt;/code&gt; who had to go and retrieve packages from &lt;code&gt;C&lt;/code&gt; &amp;amp; &lt;code&gt;D&lt;/code&gt; respectively and considering the mathematical notations of the two algorithms in question you can see that without even the involvement of the computer &lt;code&gt;Case 2&lt;/code&gt; is approximately 60% faster than &lt;code&gt;Case 1&lt;/code&gt; and when you look at the graphs and charts after these algorithms have been applied to source code, compiled and optimized and executed through the OS to perform operations on the given hardware you even see a little more degradation between the differences in these algorithms.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Однако; Нельзя сказать, что эти новые вопросы не важны, потому что они сами по себе и играют роль в конце концов. Они действительно влияют на процедуры и общую эффективность, и это видно из различных графиков и оценок от многих, которые дали свои ответы и / или комментарии. Если вы обратите внимание на аналогию с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и двумя работниками &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;amp; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;B&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; которые должны были пойти и получить пакеты из &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;amp; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;D&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; соответственно, и с учетом математических обозначений этих двух алгоритмов, вы можете увидеть, что даже без участия Компьютерный &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Case 2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; примерно на 60% быстрее, чем компьютерный &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Case 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и когда вы смотрите на графики и диаграммы после того, как эти алгоритмы были применены к исходному коду, скомпилированы и оптимизированы и выполнены с помощью ОС для выполнения операций на данном оборудовании, вы даже увидите немного большее ухудшение различий в этих алгоритмах.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a7a60ea46f57285511450482a75f3927deb922e3" translate="yes" xml:space="preserve">
          <source>I don't know if poor benchmark code is to blame, or what, but the two methods are within 10% of each other on my machine using the following code, and one loop is usually just slightly faster than two - as you'd expect.</source>
          <target state="translated">Я не знаю,виноват ли в этом плохой код бенчмарка или нет,но эти два метода находятся в пределах 10% друг от друга на моей машине,используя следующий код,и один цикл обычно немного быстрее,чем два-как и следовало ожидать.</target>
        </trans-unit>
        <trans-unit id="00589175b0e2daeb748e811866d66c98117bcd29" translate="yes" xml:space="preserve">
          <source>I played around with various schemes, such as putting the assignment of &lt;code&gt;b[j]&lt;/code&gt;, &lt;code&gt;d[j]&lt;/code&gt; to &lt;code&gt;InitToZero[j]&lt;/code&gt; inside the loops, and also with using &lt;code&gt;+= b[j] = 1&lt;/code&gt; and &lt;code&gt;+= d[j] = 1&lt;/code&gt;, and I got fairly consistent results.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я поиграл с различными схемами, такими как помещение присвоения &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b[j]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d[j]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;InitToZero[j]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; внутри циклов, а также с использованием &lt;/font&gt;&lt;/font&gt; &lt;code&gt;+= b[j] = 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;+= d[j] = 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , и я получил довольно последовательные результаты.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="817cfd78e867bee0df782d3f8d5e3e892f050739" translate="yes" xml:space="preserve">
          <source>I run Visual&amp;nbsp;Studio&amp;nbsp;2015 on an E5-1620 3.5&amp;nbsp;GHz processor with 16&amp;nbsp;GB RAM.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я использую Visual Studio 2015 на процессоре E5-1620 с частотой 3,5 ГГц и 16 ГБ ОЗУ.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00808f1a2f2eb9b821cd5d0d2373ff5c65a160b7" translate="yes" xml:space="preserve">
          <source>I suspect you are beginning to see where I am going.</source>
          <target state="translated">Подозреваю,вы начинаете понимать,куда я иду.</target>
        </trans-unit>
        <trans-unit id="3bc087c8089b4797e291481227838ac53530b7b7" translate="yes" xml:space="preserve">
          <source>I will now begin to explain how all of this works below.</source>
          <target state="translated">Теперь я начну объяснять,как все это работает ниже.</target>
        </trans-unit>
        <trans-unit id="99ed91ab9852dd4c4c00c7c70971a0fa0add2aea" translate="yes" xml:space="preserve">
          <source>I'm not sure exactly what's going on here... Alignment could still play an effect as Agner Fog mentions &lt;a href=&quot;http://www.agner.org/optimize/blog/read.php?i=142&quot;&gt;cache bank conflicts&lt;/a&gt;. (That link is about Sandy Bridge, but the idea should still be applicable to Core 2.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я точно не знаю, что здесь происходит ... Выравнивание может сыграть свою роль, поскольку Агнер Фог упоминает о &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.agner.org/optimize/blog/read.php?i=142&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;конфликтах банков кеша&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Эта ссылка о Sandy Bridge, но идея должна быть применима и к Core 2.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e87dc3e0b3d9d315844cac4303a6acbe9bf72c81" translate="yes" xml:space="preserve">
          <source>I'm not sure why it was decided that MFLOPS was a relevant metric. I though the idea was to focus on memory accesses, so I tried to minimize the amount of floating point computation time. I left in the &lt;code&gt;+=&lt;/code&gt;, but I am not sure why.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я не уверен, почему было решено, что MFLOPS был уместным показателем. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Хотя идея заключалась в том, чтобы сосредоточиться на доступе к памяти, поэтому я попытался минимизировать время вычислений с плавающей запятой. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я ушел в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;+=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , но я не уверен, почему.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7810945b5da00839bd6f4244b4ecc9f6be09aa4c" translate="yes" xml:space="preserve">
          <source>If I've guessed correctly on how you are allocating your arrays, they &lt;strong&gt;&lt;em&gt;are likely to be aligned to the page line&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если я правильно угадал, как вы размещаете свои массивы, они &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, скорее всего, будут выровнены по строке страницы&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6592d47a260c0445aa4f71f91675b748c2da8bb8" translate="yes" xml:space="preserve">
          <source>If you noticed &lt;code&gt;F2()&lt;/code&gt; only exists in &lt;code&gt;Sum&lt;/code&gt; where both &lt;code&gt;Sum1&lt;/code&gt; and &lt;code&gt;Sum2&lt;/code&gt; only contains &lt;code&gt;F1()&lt;/code&gt;. This will also be evident later on as well when we begin to conclude that there is sort of an optimization happening from the second algorithm.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы заметили, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;F2()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; существует только в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sum&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; где и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sum1&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sum2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; содержат только &lt;/font&gt;&lt;/font&gt; &lt;code&gt;F1()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Это также станет очевидным позже, когда мы начнем делать вывод, что со вторым алгоритмом происходит своего рода оптимизация.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29e5b3147124613363d4d8415c0344079da0b91e" translate="yes" xml:space="preserve">
          <source>Imagine you are working on a machine where &lt;code&gt;n&lt;/code&gt; was just the right value for it only to be possible to hold two of your arrays in memory at one time, but the total memory available, via disk caching, was still sufficient to hold all four.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Представьте, что вы работаете на машине, где &lt;/font&gt;&lt;/font&gt; &lt;code&gt;n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; было правильным значением, чтобы можно было одновременно хранить два ваших массива в памяти, но общего объема доступной памяти посредством кэширования на диске все еще было достаточно для хранения всех четырех.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c3438355ba619bc8749166614f228c594f1da22" translate="yes" xml:space="preserve">
          <source>In both cases we have 4 functions to work with and 2 function calls with 2 operations being done on each function call. So we will set these up as functions and function calls to be &lt;code&gt;F1()&lt;/code&gt;, &lt;code&gt;F2()&lt;/code&gt;, &lt;code&gt;f(a)&lt;/code&gt;, &lt;code&gt;f(b)&lt;/code&gt;, &lt;code&gt;f(c)&lt;/code&gt; and &lt;code&gt;f(d)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В обоих случаях у нас есть 4 функции для работы и 2 вызова функций с 2 ​​операциями, выполняемыми для каждого вызова функции. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, мы установим их как функции и вызовы функций: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;F1()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;F2()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(a)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(b)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(c)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(d)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc2ed913dd196a5e776a8b6d35e3db01e80c5fbd" translate="yes" xml:space="preserve">
          <source>In this situation it is the structure of the process of the work being done and it does go to show that &lt;strong&gt;Case 2&lt;/strong&gt; is more efficient from both that partial optimization of having a similar function declaration and definition where it is only the variables that differ by name. And we also see that the total distance traveled in &lt;strong&gt;Case 1&lt;/strong&gt; is much farther than it is in &lt;strong&gt;Case 2&lt;/strong&gt; and we can consider this distance traveled our &lt;em&gt;Time Factor&lt;/em&gt; between the two algorithms. &lt;strong&gt;Case 1&lt;/strong&gt; has considerable more work to do than &lt;strong&gt;Case 2&lt;/strong&gt; does. This was also seen in the evidence of the &lt;code&gt;ASM&lt;/code&gt; that was shown between both cases. Even with what was already said about these cases, it also doesn't account for the fact that in &lt;strong&gt;Case 1&lt;/strong&gt; the boss will have to wait for both &lt;code&gt;A&lt;/code&gt; &amp;amp; &lt;code&gt;C&lt;/code&gt; to get back before he can go back to &lt;code&gt;A&lt;/code&gt; again on the next iteration and it also doesn't account for the fact that if &lt;code&gt;A&lt;/code&gt; or &lt;code&gt;B&lt;/code&gt; is taking an extremely long time then both the &lt;code&gt;Boss&lt;/code&gt; and the other worker(s) are also waiting at an idle. In &lt;strong&gt;Case 2&lt;/strong&gt; the only one being idle is the &lt;code&gt;Boss&lt;/code&gt; until the worker gets back. So even this has an impact on the algorithm.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В этой ситуации это структура процесса выполняемой работы, и он показывает, что &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вариант 2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; более эффективен как при частичной оптимизации, так и при наличии аналогичного объявления функции и определения, где только переменные различаются по имени. , И мы также видим, что общее расстояние, пройденное в &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;случае 1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , намного больше, чем в &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;случае 2,&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и мы можем считать это расстояние пройденным нашим &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Фактором времени&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; между двумя алгоритмами. &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Дело 1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; требует &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;гораздо больше работы, чем &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;дело 2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Это также было видно в доказательстве &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ASM&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;это было показано между обоими случаями. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Даже с учетом того, что уже было сказано об этих случаях, это также не учитывает тот факт, что в &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;случае 1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; боссу придется ждать, пока оба &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;amp; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вернутся, прежде чем он сможет снова вернуться к &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; на следующей итерации и это также не учитывает тот факт, что если &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;B&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; отнимает слишком много времени, то и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и другие работники также ожидают простоя. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;случае 2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; только один бездействует - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; пока рабочий не вернется. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так что даже это влияет на алгоритм.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a80769f1c0a8b8d244565169e5bab5c0615b3ee" translate="yes" xml:space="preserve">
          <source>It is already apparent that many have already done this by looking at the heap allocations, bench mark tests, looking at RAM, Cache and Page Files. Looking at specific data points and specific iteration indexes was also included and the various conversations about this specific problem has many people starting to question other related things about it. So how do we begin to look at this problem by using mathematical algorithms and applying an analogy to it? We start off by making a couple of assertions! Then we build out our algorithm from there.</source>
          <target state="translated">Очевидно,что многие уже сделали это,глядя на распределение кучи,стендовые тесты,глядя на оперативную память,кэш-память и файлы страниц.Глядя на конкретные точки данных и конкретные индексы итераций также был включен и различные разговоры об этой конкретной проблеме имеет много людей,начинающих сомневаться в других связанных с этим вещах.Так как же нам начать смотреть на эту проблему,используя математические алгоритмы и применяя аналогию с ней? Начнем с того,что сделаем пару утверждений! Затем мы строим наш алгоритм оттуда.</target>
        </trans-unit>
        <trans-unit id="a8fc6816b3d2ad8d20c28b136a6c91005b108c66" translate="yes" xml:space="preserve">
          <source>It is the only point, where one-loop (namely with continuous allocation) beats the two-loop version. (This made Mysticial's answer possible, at all.)</source>
          <target state="translated">Это единственный пункт,где одноконтурная (а именно,с непрерывным распределением)превосходит двухконтурную версию.(Это сделало ответ Мистичала вообще возможным.)</target>
        </trans-unit>
        <trans-unit id="95d30c52570fa07e0e4cf2e00d425ec2c718c6fa" translate="yes" xml:space="preserve">
          <source>It may be old C++ and optimizations. On my computer I obtained almost the same speed:</source>
          <target state="translated">Это может быть старый С++и оптимизации.На моем компьютере я получил почти такую же скорость:</target>
        </trans-unit>
        <trans-unit id="fd3c6fcb78898a4d9ab59044ecc39ae0efeecae2" translate="yes" xml:space="preserve">
          <source>It might also be interesting to point out the differences between CPU/cache architectures, by providing a similar graph for these CPUs.</source>
          <target state="translated">Также может быть интересно указать на различия между архитектурами CPUcache,предоставив аналогичный график для этих процессоров.</target>
        </trans-unit>
        <trans-unit id="5f7fc9c2d2d9a467270b23261b4cc69da5f9ed02" translate="yes" xml:space="preserve">
          <source>It possesses the greatest discrepancy between the one and two loop'ed version (almost a factor of three)</source>
          <target state="translated">Обладает наибольшим расхождением между версией с одним и двумя циклами (почти в три раза).</target>
        </trans-unit>
        <trans-unit id="59d7c3084de99bdf974adebf4d8683cc639f6dc2" translate="yes" xml:space="preserve">
          <source>It's because the CPU doesn't have so many cache misses (where it has to wait for the array data to come from the RAM chips). It would be interesting for you to adjust the size of the arrays continually so that you exceed the sizes of the &lt;a href=&quot;http://en.wikipedia.org/wiki/CPU_cache#Multi-level_caches&quot;&gt;level 1 cache&lt;/a&gt; (L1), and then the &lt;a href=&quot;http://en.wikipedia.org/wiki/CPU_cache#Multi-level_caches&quot;&gt;level 2 cache&lt;/a&gt; (L2), of your CPU and plot the time taken for your code to execute against the sizes of the arrays. The graph shouldn't be a straight line like you'd expect.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это связано с тем, что в процессоре не так много промахов кэша (когда ему приходится ждать получения данных массива из микросхем ОЗУ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Было бы интересно непрерывно корректировать размер массивов, чтобы вы превышали размеры &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/CPU_cache#Multi-level_caches&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;кэша 1-го уровня&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (L1), а затем &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/CPU_cache#Multi-level_caches&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;кэша 2-го уровня&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (L2) вашего ЦП и отображали время, необходимое для вашего кода. выполнить по размерам массивов. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;График не должен быть прямой линией, как вы ожидаете.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6e48b4df68ffacb1c2b954a22ff59182a5abdcc" translate="yes" xml:space="preserve">
          <source>It's not because of a different code, but because of caching: RAM is slower than the CPU registers and a cache memory is inside the CPU to avoid to write the RAM every time a variable is changing. But the cache is not big as the RAM is, hence, it maps only a fraction of it.</source>
          <target state="translated">Это не из-за другого кода,а из-за кэширования:оперативная память медленнее,чем регистры CPU,а кэш-память находится внутри CPU,чтобы избежать записи оперативной памяти каждый раз,когда меняется переменная.Но кэш не такой большой,как оперативная память,поэтому он отображает лишь малую ее часть.</target>
        </trans-unit>
        <trans-unit id="4f98a0ef7e9ea5be7322aaa75bdddab7edfda7fc" translate="yes" xml:space="preserve">
          <source>Looking at it from this kind of an approach without involving how the Hardware, OS and Compiler(s) works together to do heap allocations that involves working with RAM, Cache, Page Files, etc.; the mathematics that are at the foundation of these algorithms shows us which of these two is the better solution. We can use an analogy where a &lt;code&gt;Boss&lt;/code&gt; or &lt;code&gt;Summation&lt;/code&gt; that will represent a &lt;code&gt;For Loop&lt;/code&gt; that has to travel between workers &lt;code&gt;A&lt;/code&gt; &amp;amp; &lt;code&gt;B&lt;/code&gt; we can easily see that &lt;strong&gt;Case 2&lt;/strong&gt; is at least &lt;strong&gt;&lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;2&lt;/sub&gt;&lt;/strong&gt; as fast if not a little more than &lt;strong&gt;Case 1&lt;/strong&gt; due to the difference in the distance that is needed to travel and the time taken between the workers. This math lines up almost virtually and perfectly with both the Bench Mark Times as well as the amount of differences in Assembly Instructions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Рассматривая его с точки зрения такого подхода, без учета того, как аппаратное обеспечение, ОС и компилятор (-ы) работают вместе для выделения кучи, которая включает в себя работу с ОЗУ, кэш-памятью, файлами подкачки и т. Д .; математика, лежащая в основе этих алгоритмов, показывает нам, какой из этих двух вариантов является лучшим решением. Мы можем использовать аналогию , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;где &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Summation&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , который будет представлять собой &lt;/font&gt;&lt;/font&gt; &lt;code&gt;For Loop&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , который должен пройти между рабочими &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;amp; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;B&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , мы можем легко увидеть , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;что &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;случай 2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , по &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;крайней мере &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt;&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , как быстро , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;если не немного больше , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;чем &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;случай 1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;из-за разницы в расстоянии, необходимом для поездки, и времени, затрачиваемом между рабочими. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Эта математика почти виртуально и идеально сочетается как с Bench Mark Times, так и с количеством различий в инструкциях по сборке.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="88b8ab7191d7a7de92e0270b1e10017d27a3a95d" translate="yes" xml:space="preserve">
          <source>Note that my initial question was at &lt;strong&gt;n = 100.000&lt;/strong&gt;. This point (by accident) exhibits special behavior:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обратите внимание, что мой начальный вопрос был при &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;n = 100.000&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Эта точка (случайно) демонстрирует особое поведение:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b299d49402d695f6cbcf85018ddd57470d6420e6" translate="yes" xml:space="preserve">
          <source>Now if the &quot;Data&quot; set is fairly small it may not seem all that bad of a difference at first but since &lt;code&gt;Case 1&lt;/code&gt; is about &lt;code&gt;60 - 70%&lt;/code&gt; slower than &lt;code&gt;Case 2&lt;/code&gt; we can look at the growth of this function as being in terms of the differences in time executions:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь, если набор &amp;laquo;данных&amp;raquo; довольно мал, на первый взгляд может показаться, что разница не такая уж и плохая, но, поскольку &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Case 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; примерно на &lt;/font&gt;&lt;/font&gt; &lt;code&gt;60 - 70%&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; медленнее, чем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Case 2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; мы можем рассматривать рост этой функции с точки зрения Различия во времени исполнения:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eca24602b960c6a890ccd38ee6f72f25af9a65d1" translate="yes" xml:space="preserve">
          <source>OK, the right answer definitely has to do something with the CPU cache. But to use the cache argument can be quite difficult, especially without data.</source>
          <target state="translated">Хорошо,правильный ответ определенно должен быть связан с кэш-памятью процессора.Но использовать аргумент кэша может быть довольно сложно,особенно без данных.</target>
        </trans-unit>
        <trans-unit id="580a776c6b642fccec58ff95f40d16a839dd873b" translate="yes" xml:space="preserve">
          <source>Observations:</source>
          <target state="translated">Observations:</target>
        </trans-unit>
        <trans-unit id="d4cd934a3267228345d82320582325609db4ac86" translate="yes" xml:space="preserve">
          <source>One loop: 1.577 ms</source>
          <target state="translated">Одна петля:1,577 мс</target>
        </trans-unit>
        <trans-unit id="067285dbce4f2ae23a4e8256bf22a68036bb1d40" translate="yes" xml:space="preserve">
          <source>PPS: Here is the full code. It uses &lt;a href=&quot;https://www.threadingbuildingblocks.org/&quot;&gt;TBB&lt;/a&gt;&lt;code&gt;Tick_Count&lt;/code&gt; for higher resolution timing, which can be disabled by not defining the &lt;code&gt;TBB_TIMING&lt;/code&gt; Macro:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PPS: вот полный код. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он использует &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.threadingbuildingblocks.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TBB &lt;/font&gt;&lt;/font&gt;&lt;/a&gt; &lt;code&gt;Tick_Count&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для синхронизации с более высоким разрешением, который можно отключить, не определяя &lt;/font&gt;&lt;/font&gt; &lt;code&gt;TBB_TIMING&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="150892f3a6e1c9444336bf5fbf39ad8c8df7f488" translate="yes" xml:space="preserve">
          <source>PS: I am not sure, if this helps:</source>
          <target state="translated">PS:Я не уверен,поможет ли это:</target>
        </trans-unit>
        <trans-unit id="37563549c2b48fdb7b187f4ea1cf03ceecec4985" translate="yes" xml:space="preserve">
          <source>PS: I changed the loops to count down to zero, and the combined method was marginally faster. Scratching my head. Note the new array sizing and loop counts.</source>
          <target state="translated">PS:Я изменил циклы на обратный отсчет до нуля,и комбинированный метод был немного быстрее.Царапал голову.Обратите внимание на новый размер массива и количество циклов.</target>
        </trans-unit>
        <trans-unit id="929017ada05ac8077c3ebc10b0f695a210b9db02" translate="yes" xml:space="preserve">
          <source>Proposal</source>
          <target state="translated">Proposal</target>
        </trans-unit>
        <trans-unit id="5f6bd53d4ce24c4aa4a3ee3123d8ab5b9cf113bb" translate="yes" xml:space="preserve">
          <source>Repeat for &lt;code&gt;c&lt;/code&gt; and &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Повторите для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="52a60be214c602639707f5280f5a30ec124a81d3" translate="yes" xml:space="preserve">
          <source>Say &lt;code&gt;n = 2&lt;/code&gt; and we are working with bytes. In my scenario we thus have &lt;strong&gt;just 4 bytes of RAM&lt;/strong&gt; and the rest of our memory is significantly slower (say 100 times longer access).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Скажите &lt;/font&gt;&lt;/font&gt; &lt;code&gt;n = 2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и мы работаем с байтами. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, в моем сценарии у нас &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;всего 4 байта оперативной памяти,&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; а остальная часть памяти значительно медленнее (скажем, в 100 раз больше доступа).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b768a5099eeede624e8fb1ccf0c00e1ae7bd2c7f" translate="yes" xml:space="preserve">
          <source>Since we are working with an 8 byte pointer and dealing with Heap allocation let's consider this problem here. Let us say that the &lt;code&gt;Boss&lt;/code&gt; is 100 feet from &lt;code&gt;A&lt;/code&gt; and that &lt;code&gt;A&lt;/code&gt; is 500 feet from &lt;code&gt;C&lt;/code&gt;. We don't need to worry about how far the &lt;code&gt;Boss&lt;/code&gt; is initially from &lt;code&gt;C&lt;/code&gt; because of the order of executions. In both cases the &lt;code&gt;Boss&lt;/code&gt; initially travels from &lt;code&gt;A&lt;/code&gt; first then to &lt;code&gt;B&lt;/code&gt;. This analogy isn't to say that this distance is exact; it is just a use test case scenario to show the workings of the algorithms. In many cases when doing heap allocations and working with the cache and page files, these distances between address locations may not vary that much in differences or they can very significantly depending on the nature of the data types and the array sizes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так как мы работаем с 8-байтовым указателем и имеем дело с распределением кучи, давайте рассмотрим эту проблему здесь. Будем говорить , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 100 футов от &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;составляет 500 футов от &lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Нам не нужно беспокоиться о том, как далеко &lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; изначально от &lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; из-за порядка выполнения. В обоих случаях &lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; сначала путешествует из &lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; затем в &lt;/font&gt; &lt;code&gt;B&lt;/code&gt; &lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Эта аналогия не говорит о том, что это расстояние является точным; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;это всего лишь сценарий тестового использования, чтобы показать работу алгоритмов. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Во многих случаях при распределении кучи и работе с кешем и файлами подкачки эти расстояния между адресами могут не сильно различаться или могут очень сильно зависеть от характера типов данных и размеров массива.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b403afffa673d5c9286b0e779fa6f2102008bfda" translate="yes" xml:space="preserve">
          <source>So by these numbers it would almost look as if Algorithm One should be 99% slower than Algorithm Two; however, this is only the &lt;code&gt;The Boss's&lt;/code&gt; part or responsibility of the algorithms and it doesn't account for the actual workers &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;C&lt;/code&gt;, &amp;amp; &lt;code&gt;D&lt;/code&gt; and what they have to do on each and every iteration of the Loop. So the bosses job only accounts for about 15 - 40% of the total work being done. So the bulk of the work which is done through the workers has a slight bigger impact towards keeping the ratio of the speed rate differences to about 50-70%</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, по этим числам это будет выглядеть так, как будто Алгоритм Один должен быть на 99% медленнее, чем Алгоритм Два; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;однако, это только &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;часть или ответственность &lt;/font&gt;&lt;/font&gt; &lt;code&gt;The Boss's&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; за алгоритмы, и она не учитывает фактических работников &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;B&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;D&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и то, что они должны делать на каждой итерации цикла. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, на работу боссов приходится всего около 15-40% всей выполняемой работы. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, основная часть работы, выполняемой рабочими, оказывает чуть большее влияние на поддержание соотношения разности скоростей примерно до 50-70%.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d0c27d22f565b7d4dff65f8ce28522fe98c5a597" translate="yes" xml:space="preserve">
          <source>So trying to have the &lt;code&gt;Boss&lt;/code&gt; focusing on doing two similar things at once and juggling them back and forth instead of focusing on similar consecutive tasks  is going to make him quite angry by the end of the day because he had to travel and work twice as much. Therefor do not lose the scope of the situation by letting your boss getting into an interpolated bottleneck because the boss's spouse and children wouldn't appreciate it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Поэтому попытка заставить &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; сосредоточиться на двух одинаковых вещах одновременно и жонглировать ими взад и вперед вместо того, чтобы концентрироваться на похожих последовательных задачах, к концу дня заставит его сильно рассердиться, потому что ему пришлось путешествовать и работать вдвое больше. , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Поэтому не теряйте масштаб ситуации, позволяя вашему боссу попасть в сложное узкое место, потому что супруга и дети босса этого не оценят.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c92f2896cb97a5cd76721e9be1ae06c663d9ea6d" translate="yes" xml:space="preserve">
          <source>Suppose &lt;code&gt;a1&lt;/code&gt;, &lt;code&gt;b1&lt;/code&gt;, &lt;code&gt;c1&lt;/code&gt;, and &lt;code&gt;d1&lt;/code&gt; point to heap memory and my numerical code has the following core loop.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Предположим, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; указывают на память кучи, и мой числовой код имеет следующий основной цикл.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ae49864322db83eb4df4027d1cc46e331bab97d8" translate="yes" xml:space="preserve">
          <source>That's why I combined his test (using a continuous vs. separate allocation) and @James' Answer's advice.</source>
          <target state="translated">Поэтому я объединил его тест (используя непрерывное vs.раздельное распределение)и совет @James' Answer's.</target>
        </trans-unit>
        <trans-unit id="d13556ea98fb233bf53b98bb4c31b76c5382d7df" translate="yes" xml:space="preserve">
          <source>The OP's code:</source>
          <target state="translated">Код ОП:</target>
        </trans-unit>
        <trans-unit id="49a4378a00b62449fce4898fcf15f09e54099521" translate="yes" xml:space="preserve">
          <source>The first code modifies distant memory addresses alternating them at each loop, thus requiring continuously to invalidate the cache.</source>
          <target state="translated">Первый код модифицирует адреса удаленной памяти,чередуя их в каждом цикле,требуя непрерывной недействительности кэша.</target>
        </trans-unit>
        <trans-unit id="5ef3f200dc1df02296aa0d9d57d5f615abafce03" translate="yes" xml:space="preserve">
          <source>The first loop alternates writing in each variable. The second and third ones only make small jumps of element size.</source>
          <target state="translated">Первый цикл чередует запись в каждую переменную.Второй и третий производят только небольшие скачки размера элемента.</target>
        </trans-unit>
        <trans-unit id="53b362c1ef639785451d5a3c807cb56df98f4cb6" translate="yes" xml:space="preserve">
          <source>The graphs below shows, that most of the answers and especially the majority of comments to the question and answers can be considered completely wrong or true depending on the exact scenario and parameters used.</source>
          <target state="translated">Приведенные ниже графики показывают,что большинство ответов и особенно большинство комментариев к вопросу и ответам могут считаться полностью неверными или истинными в зависимости от точного сценария и используемых параметров.</target>
        </trans-unit>
        <trans-unit id="11061dc8aadf1e63250f11fc975aecbd7a854095" translate="yes" xml:space="preserve">
          <source>The iterations through the first case &lt;code&gt;Sum&lt;/code&gt; calls &lt;code&gt;f(a)&lt;/code&gt; that will add to its self &lt;code&gt;f(b)&lt;/code&gt; then it calls &lt;code&gt;f(c)&lt;/code&gt; that will do the same but add &lt;code&gt;f(d)&lt;/code&gt; to itself for each &lt;code&gt;100000 iterations&lt;/code&gt;. In the second case we have &lt;code&gt;Sum1&lt;/code&gt; and &lt;code&gt;Sum2&lt;/code&gt; And both act the same as if they were the same function being called twice in a row.
In this case we can treat &lt;code&gt;Sum1&lt;/code&gt; and &lt;code&gt;Sum2&lt;/code&gt; as just plain old &lt;code&gt;Sum&lt;/code&gt; where &lt;code&gt;Sum&lt;/code&gt; in this case looks like this: &lt;code&gt;Sum n=1 : [1,100000] { f(a) = f(a) + f(b); }&lt;/code&gt; and now this looks like an optimization where we can just consider it to be the same function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Итерации в первом случае &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sum&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вызывает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(a)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , который прибавит к самому себе &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(b)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; затем &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вызовет &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(c)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , который сделает то же самое, но добавит &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(d)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; к себе для каждых &lt;/font&gt;&lt;/font&gt; &lt;code&gt;100000 iterations&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Во втором случае мы имеем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sum1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sum2&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и оба действуют одинаково, как если бы они были одной и той же функцией, вызываемой дважды подряд. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В этом случае мы можем рассматривать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sum1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sum2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; как просто старую &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;сумму &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sum&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; где &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sum&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в этом случае выглядит следующим образом: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sum n=1 : [1,100000] { f(a) = f(a) + f(b); }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и теперь это выглядит как оптимизация, где мы можем просто считать, что это та же самая функция.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="839acec8e710ad109f431376a6eb49f7c7173d08" translate="yes" xml:space="preserve">
          <source>The performance drop in the single-loop is what we are observing. And as mentioned, this is due to the alignment which (most likely) causes &lt;strong&gt;&lt;em&gt;false aliasing&lt;/em&gt;&lt;/strong&gt; stalls in the processor load/store units.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Мы наблюдаем падение производительности в одном цикле. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;И, как уже упоминалось, это связано с выравниванием, которое (наиболее вероятно) вызывает &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ложные смещения псевдонимов&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в блоках загрузки / хранения процессора.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="47a017a142106a11ba95f378f7d97256b0fed87e" translate="yes" xml:space="preserve">
          <source>The question turned out to be of no relevance, as the behavior severely depends on the sizes of the arrays (n) and the CPU cache. So if there is further interest, I rephrase the question:</source>
          <target state="translated">Вопрос оказался несущественным,так как поведение сильно зависит от размеров массивов (n)и процессорного кэша.Поэтому,если есть дальнейший интерес,я перефразирую вопрос:</target>
        </trans-unit>
        <trans-unit id="55e711a480f8599f3590ea8955ae90c25f96f446" translate="yes" xml:space="preserve">
          <source>The result using initialized data:</source>
          <target state="translated">Результат с использованием инициализированных данных:</target>
        </trans-unit>
        <trans-unit id="fd12f7273e3c644dfeec1cc8b110b33e50ab5389" translate="yes" xml:space="preserve">
          <source>The result using uninitialized data (this is what Mysticial tested):</source>
          <target state="translated">Результат с использованием неинициализированных данных (это то,что тестировал Mysticial):</target>
        </trans-unit>
        <trans-unit id="ec79e2db350f70819922aeda7c7c4a134df70af6" translate="yes" xml:space="preserve">
          <source>The second code don't alternate: it just flow on adjacent addresses twice. This makes all the job to be completed in the cache, invalidating it only after the second loop starts.</source>
          <target state="translated">Второй код не меняется:он просто течет по соседним адресам дважды.Это приводит к тому,что вся работа выполняется в кэше,делая ее недействительной только после начала второго цикла.</target>
        </trans-unit>
        <trans-unit id="962b2d1921173e1b25de62eb8401f26848105752" translate="yes" xml:space="preserve">
          <source>The second loop involves a lot less cache activity, so it's easier for the processor to keep up with the memory demands.</source>
          <target state="translated">Во втором цикле активность кэша гораздо меньше,поэтому процессору легче справляться с требованиями к памяти.</target>
        </trans-unit>
        <trans-unit id="b406d7fb1215ac51706584a1368661dc6d6bb19f" translate="yes" xml:space="preserve">
          <source>There are many answers, that led to a lot of discussion, but let's face it: Cache issues can be very complex and are not one dimensional. They depend heavily on the size of the data, so my question was unfair: It turned out to be at a very interesting point in the cache graph.</source>
          <target state="translated">Есть много ответов,которые вызвали много дискуссий,но давайте посмотрим правде в глаза:Вопросы кэша могут быть очень сложными и не являются одномерными.Они сильно зависят от размера данных,поэтому мой вопрос был несправедливым:он оказался в очень интересной точке графика кэша.</target>
        </trans-unit>
        <trans-unit id="1dde209c4b83d4186745de8cde5c487345b16c11" translate="yes" xml:space="preserve">
          <source>There seems to be a little confusion/misunderstanding here so I will try to elaborate a little using an example.</source>
          <target state="translated">Похоже,что здесь есть небольшое недопонимание,поэтому я постараюсь немного пояснить на примере.</target>
        </trans-unit>
        <trans-unit id="13059574a86e8647f17f49a9a0b752694791c080" translate="yes" xml:space="preserve">
          <source>Think of the &lt;code&gt;For Loops&lt;/code&gt; as being the &lt;code&gt;Summations&lt;/code&gt; that does the iterations as being a &lt;code&gt;Boss&lt;/code&gt; that is giving orders to two people &lt;code&gt;A&lt;/code&gt; &amp;amp; &lt;code&gt;B&lt;/code&gt; and that their jobs are to meat &lt;code&gt;C&lt;/code&gt; &amp;amp; &lt;code&gt;D&lt;/code&gt; respectively and to pick up some package from them and return it. In the analogy here the for loop or summation iterations and condition checks themselves doesn't actually represent the &lt;code&gt;Boss&lt;/code&gt;. What actually represents the &lt;code&gt;Boss&lt;/code&gt; here is not from the actual mathematical algorithms directly, but from the actual concept of &lt;code&gt;Scope&lt;/code&gt; and &lt;code&gt;Code Block&lt;/code&gt; within a routine or sub-routine, method, function, translation unit, etc. The first algorithm has 1 scope where the 2nd algorithm has 2 consecutive scopes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Представьте, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;For Loops&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Summations&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , выполняющие итерации как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который отдает приказы двум людям &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;amp; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;B&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и что их работа &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;заключается в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;том, чтобы добывать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;amp; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;D&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; соответственно, а также собирать с них какую-то посылку и возвращать ее. В аналогии здесь сами итерации цикла или суммирования и проверки условий на самом деле не представляют &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . То, что на самом деле представляет &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; здесь, не непосредственно из фактических математических алгоритмов, а из фактической концепции &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Code Block&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; внутри подпрограммы или подпрограммы, метода, функции, единицы перевода и т. д. Первый алгоритм имеет 1 область действия, где 2-й алгоритм имеет 2 последовательных области действия.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d22a1fbb64d76304433f24947bf410c0f8af3df" translate="yes" xml:space="preserve">
          <source>This is a classic cache thrash scenario.</source>
          <target state="translated">Это классический сценарий трэша в кэше.</target>
        </trans-unit>
        <trans-unit id="b8ffc8c4ef1a03c73bb9e0821c047ab1262b9819" translate="yes" xml:space="preserve">
          <source>This loop is executed 10,000 times via another outer &lt;code&gt;for&lt;/code&gt; loop. To speed it up, I changed the code to:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Этот цикл выполняется 10000 раз через другой внешний &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;цикл &lt;/font&gt;&lt;/font&gt; &lt;code&gt;for&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чтобы ускорить его, я изменил код на:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fdc4cb320e8145a3a5607c0217bc3a252c1582a3" translate="yes" xml:space="preserve">
          <source>This means that all your accesses in each loop will fall on the same cache way. However, Intel processors have had 8-way L1 cache associativity for a while. But in reality, the performance isn't completely uniform. Accessing 4-ways is still slower than say 2-ways.</source>
          <target state="translated">Это означает,что все ваши доступы в каждом цикле будут падать на один и тот же путь к кэшированию.Однако процессоры Intel некоторое время имели 8-полосную ассоциативность кэша L1.Но на самом деле производительность не совсем однородна.Доступ к 4-полосному по-прежнему медленнее,чем,скажем,к 2-полосному.</target>
        </trans-unit>
        <trans-unit id="116c64a804cda018eff54aace684b048096784b8" translate="yes" xml:space="preserve">
          <source>This one is easy. The dataset is so small that the performance is dominated by overhead like looping and branching.</source>
          <target state="translated">Это легко.Набор данных настолько мал,что в производительности доминируют накладные расходы,такие как петлевание и ветвление.</target>
        </trans-unit>
        <trans-unit id="b993a65de9f293825c5e5d9683062a32d8b141b3" translate="yes" xml:space="preserve">
          <source>Total cost = &lt;code&gt;(100 + 100 + 1 + 1) * 2 = 404&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Общая стоимость = &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(100 + 100 + 1 + 1) * 2 = 404&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19d3bb17d59a55f8338d5c4fce0ae33dc728b87f" translate="yes" xml:space="preserve">
          <source>Total cost = &lt;code&gt;(100 + 100 + 100 + 100) * 2 = 800&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Общая стоимость = &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(100 + 100 + 100 + 100) * 2 = 800&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="03360fc5f946227bc07190906ff6d7139444c907" translate="yes" xml:space="preserve">
          <source>Try writing two parallel lines of 20 crosses with a pen and paper separated by 20&amp;nbsp;cm. Try once finishing one and then the other line and try another time by writting a cross in each line alternately.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Попробуйте написать две параллельные линии по 20 крестиков с помощью ручки и бумаги, разделенных на 20 см. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Попробуйте один раз закончить одну, а затем другую строку и попробуйте другой раз, поочередно записывая крестик в каждой строке.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="53bfab4d116eca32e1091f50ff7bca7f57441a62" translate="yes" xml:space="preserve">
          <source>Two loops: 1.507 ms</source>
          <target state="translated">Две петли:1.507 мс</target>
        </trans-unit>
        <trans-unit id="466d5a25d4be7521ae09c87f6a46e0b628a3542a" translate="yes" xml:space="preserve">
          <source>Upon further analysis of this, I believe this is (at least partially) caused by data alignment of the four pointers. This will cause some level of cache bank/way conflicts.</source>
          <target state="translated">При дальнейшем анализе я полагаю,что это (по крайней мере,частично)вызвано выравниванием данных по четырем указателям.Это приведет к некоторому уровню конфликтов кэш-банкинга.</target>
        </trans-unit>
        <trans-unit id="cfeab75af6e84b33c6a6527778a734b3d9e7b1ed" translate="yes" xml:space="preserve">
          <source>We can easily see that 600 is far less than 10 million. Now this isn't exact, because we don't know the actual difference in distance between which address of RAM or from which Cache or Page File each call on each iteration is going to be due to many other unseen variables, but this is just an assessment of the situation to be aware of and trying to look at it from the worst case scenario.</source>
          <target state="translated">Легко заметить,что 600-это гораздо меньше 10 миллионов.Теперь это не совсем точно,потому что мы не знаем реальную разницу в расстоянии между тем,какой адрес оперативной памяти или из какого Cache или Page File каждый вызов на каждой итерации будет связан со многими другими невидимыми переменными,но это всего лишь оценка ситуации,чтобы быть в курсе и пытаться взглянуть на нее с худшего сценария.</target>
        </trans-unit>
        <trans-unit id="fc174d905f4eb44c872c08d03546c6a40948ee8c" translate="yes" xml:space="preserve">
          <source>We do not know how long it will take for each case unless if we set a counter and run a bench mark test. However the bench marks were already included from the original question and from some of the answers and comments as well and we can see a significant difference between the two and this is the whole reasoning of this question to this problem and for the answering of it to begin with.</source>
          <target state="translated">Мы не знаем,сколько времени займет каждый случай,если только не установим счетчик и не проведем стендовый тест.Однако эталонные оценки уже включены в исходный вопрос,а также в некоторые ответы и комментарии,и мы видим существенную разницу между ними,и в этом и заключается вся суть вопроса,с которого начинается ответ на эту проблему и ответ на него.</target>
        </trans-unit>
        <trans-unit id="0e08bbd8348ea9fc71c47393bb70640f1c01606b" translate="yes" xml:space="preserve">
          <source>We know is that his loop will run 100,000 times. We also know that &lt;code&gt;a1&lt;/code&gt;, &lt;code&gt;b1&lt;/code&gt;, &lt;code&gt;c1&lt;/code&gt; &amp;amp; &lt;code&gt;d1&lt;/code&gt; are pointers on a 64-bit architecture. Within C++ on a 32-bit machine all pointers are 4 bytes and on a 64-bit machine they are 8 bytes in size since pointers are of a fixed length. We know that we have 32 bytes in which to allocate for in both cases. The only difference is we are allocating 32 bytes or 2 sets of 2-8bytes on each iteration where in the 2nd case we are allocating 16 bytes for each iteration for both of the independent loops. So both loops still equals 32 bytes in total allocations. With this information let's go ahead and show the general math, algorithm and analogy of it. We do know the amount of times that the same set or group of operations will have to be performed in both cases. We do know the amount of memory that needs to be allocated in both cases. We can asses that the overall work load of the allocations between both cases will be approximately the same.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Мы знаем, что его цикл будет работать 100 000 раз. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Мы также знаем, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;являются указателями на 64-битную архитектуру. В C ++ на 32-разрядной машине все указатели имеют размер 4 байта, а на 64-разрядной машине они имеют размер 8 байтов, поскольку указатели имеют фиксированную длину. Мы знаем, что у нас есть 32 байта для выделения в обоих случаях. Единственное отличие состоит в том, что мы выделяем 32 байта или 2 набора по 2-8 байт на каждую итерацию, тогда как во 2-м случае мы выделяем 16 байтов для каждой итерации для обоих независимых циклов. Таким образом, оба цикла по-прежнему равны 32 байта в общем распределении. С этой информацией давайте продолжим и покажем общую математику, алгоритм и аналогию. Мы знаем, сколько раз один и тот же набор или группа операций должны быть выполнены в обоих случаях. Мы знаем количество памяти, которое нужно выделить в обоих случаях.Мы можем оценить, что общая рабочая нагрузка распределений между обоими случаями будет примерно одинаковой.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6fe2e5f01c8d98ddfcee1b601d0fceb67a183e49" translate="yes" xml:space="preserve">
          <source>We will let our loop and its iterations be a Summation that starts at 1 and ends at 100000 instead of starting with 0 as in the loops for we don't need to worry about the 0 indexing scheme of memory addressing since we are just interested in the algorithm itself.</source>
          <target state="translated">Пусть наш цикл и его итерации будут суммированием,которое начинается на 1 и заканчивается на 100000,а не на 0,как в циклах,так как нам не нужно беспокоиться о схеме адресации памяти по 0,так как нас интересует только сам алгоритм.</target>
        </trans-unit>
        <trans-unit id="92ea6c5b9c179b6799de261eafa3d472f7094b3e" translate="yes" xml:space="preserve">
          <source>Why are elementwise additions much faster in separate loops than in a combined loop</source>
          <target state="translated">Почему в отдельных петлях элементное добавление происходит гораздо быстрее,чем в комбинированном петле.</target>
        </trans-unit>
        <trans-unit id="18d746b56edfc3b8c8160872d27b4b8ee0118420" translate="yes" xml:space="preserve">
          <source>Why is one loop so much slower than two loops?</source>
          <target state="translated">Почему один цикл намного медленнее двух?</target>
        </trans-unit>
        <trans-unit id="564f8c6e76fbd512be2e38dabdfdd61550d0c3cc" translate="yes" xml:space="preserve">
          <source>With</source>
          <target state="translated">With</target>
        </trans-unit>
        <trans-unit id="4b65d240f83b92820bd73e3c9a1ea691dbb385f6" translate="yes" xml:space="preserve">
          <source>With what we seen in the second case it almost appears as if there is optimization since both for loops have the same exact signature, but this isn't the real issue. The issue isn't the work that is being done by &lt;code&gt;f(a)&lt;/code&gt;,&lt;code&gt;f(b)&lt;/code&gt;,&lt;code&gt;f(c)&lt;/code&gt;&amp;amp;&lt;code&gt;f(d)&lt;/code&gt; in both cases and the comparison between the two it is the difference in the distance that the Summation has to travel in both cases that gives you the difference in time execution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;С тем, что мы видели во втором случае, это выглядит почти так, как будто есть оптимизация, так как оба цикла имеют одинаковую точную сигнатуру, но это не является реальной проблемой. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Проблема не в работе, которую выполняют &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(a)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(b)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(c)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(d)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в обоих случаях, а в сравнении между ними, а в разнице в расстоянии суммирования должен путешествовать в обоих случаях, что дает вам разницу во времени исполнения.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5b289bf7d150d141a9a06f034bc238a251f98430" translate="yes" xml:space="preserve">
          <source>Within the first case on each call slip the &lt;code&gt;Boss&lt;/code&gt; goes to &lt;code&gt;A&lt;/code&gt; and gives the order and &lt;code&gt;A&lt;/code&gt; goes off to fetch &lt;code&gt;B's&lt;/code&gt; package then the &lt;code&gt;Boss&lt;/code&gt; goes to &lt;code&gt;C&lt;/code&gt; and gives the orders to do the same and receive the package from &lt;code&gt;D&lt;/code&gt; on each iteration.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В первом случае при каждом вызове &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; идет к &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и отдает приказ, а &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; уходит, чтобы получить &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;пакет &lt;/font&gt;&lt;/font&gt; &lt;code&gt;B's&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; затем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; идет к &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и отдает приказы сделать то же самое и получать пакет от &lt;/font&gt;&lt;/font&gt; &lt;code&gt;D&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; на каждой итерации.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39b360ce4a3ca0bb5ddbee9c9161b830580197e7" translate="yes" xml:space="preserve">
          <source>Within the second case the &lt;code&gt;Boss&lt;/code&gt; works directly with &lt;code&gt;A&lt;/code&gt; to go and fetch &lt;code&gt;B's&lt;/code&gt; package until all packages are received. Then the &lt;code&gt;Boss&lt;/code&gt; works with &lt;code&gt;C&lt;/code&gt; to do the same for getting all of &lt;code&gt;D's&lt;/code&gt; packages.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Во втором случае &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; работает напрямую с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; чтобы пойти и получить &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;пакет &lt;/font&gt;&lt;/font&gt; &lt;code&gt;B's&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; пока все пакеты не будут получены. Тогда &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; работает с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , чтобы сделать то же самое для получения всех &lt;/font&gt;&lt;/font&gt; &lt;code&gt;D's&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; пакетов.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3110f136849c94cb9d21af5da4f6ed9ad5781ffe" translate="yes" xml:space="preserve">
          <source>You are probably not seeing disk caching in your tests but you are probably seeing the side effects of some other form of caching.</source>
          <target state="translated">Скорее всего,вы не видите кэширования дисков в ваших тестах,но,скорее всего,вы видите побочные эффекты какой-то другой формы кэширования.</target>
        </trans-unit>
        <trans-unit id="d64399c3ca292db5e91589fa738bc463f2006e98" translate="yes" xml:space="preserve">
          <source>cache &lt;code&gt;a[0]&lt;/code&gt; and &lt;code&gt;a[1]&lt;/code&gt; then &lt;code&gt;b[0]&lt;/code&gt; and &lt;code&gt;b[1]&lt;/code&gt; and set &lt;code&gt;a[0] = a[0] + b[0]&lt;/code&gt; in cache - there are now four bytes in cache, &lt;code&gt;a[0], a[1]&lt;/code&gt; and &lt;code&gt;b[0], b[1]&lt;/code&gt;. Cost = 100 + 100.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;кэшируем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; затем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и устанавливаем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a[0] = a[0] + b[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в кэш - теперь в кэше четыре байта, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a[0], a[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b[0], b[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Стоимость = 100 + 100.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="684691450b6f67d64ea5716630cb055d1cdb5528" translate="yes" xml:space="preserve">
          <source>eject &lt;code&gt;a[0], a[1], b[0], b[1]&lt;/code&gt; from cache and cache &lt;code&gt;c[0]&lt;/code&gt; and &lt;code&gt;c[1]&lt;/code&gt; then &lt;code&gt;d[0]&lt;/code&gt; and &lt;code&gt;d[1]&lt;/code&gt; and set &lt;code&gt;c[0] = c[0] + d[0]&lt;/code&gt; in cache. Cost = 100 + 100.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;извлеките &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a[0], a[1], b[0], b[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; из кэша и кэша &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; затем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и установите &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c[0] = c[0] + d[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в кеше. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Стоимость = 100 + 100.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a45d1263f7e0797a6fe6f7b721f3312f94b14dd6" translate="yes" xml:space="preserve">
          <source>set &lt;code&gt;a[1] = a[1] + b[1]&lt;/code&gt; in cache. Cost = 1 + 1.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;установить &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a[1] = a[1] + b[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в кеше. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Стоимость = 1 + 1.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e726e4b336529f67262f81f3ff5432cad1d3985d" translate="yes" xml:space="preserve">
          <source>the other loop</source>
          <target state="translated">другой контур</target>
        </trans-unit>
        <trans-unit id="871fc8b4792054b058d6099d151b8f4a8322450f" translate="yes" xml:space="preserve">
          <source>will page out two arrays and page in the other two &lt;strong&gt;every time around the loop&lt;/strong&gt;. This would obviously be &lt;strong&gt;much&lt;/strong&gt; slower.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;будет выводить два массива и страницу в двух других &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;каждый раз вокруг цикла&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это, очевидно, будет &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;намного&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; медленнее.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30905af2bb584e30c36e5d7802c5f32420f342d3" translate="yes" xml:space="preserve">
          <source>would first cause &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to be loaded into RAM and then be worked on entirely in RAM. When the second loop starts, &lt;code&gt;c&lt;/code&gt; and &lt;code&gt;d&lt;/code&gt; would then be loaded from disk into RAM and operated on.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;сначала будет вызывать &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;загрузку &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в RAM, а затем полностью работать в RAM. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда начинается второй цикл, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; затем загружаются с диска в RAM и работают.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
