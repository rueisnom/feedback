<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/8547778">
    <body>
      <group id="8547778">
        <trans-unit id="89ec615e8896a817a1338b981c5dd02618028624" translate="yes" xml:space="preserve">
          <source>(It shows FLOP/s for different values of &lt;code&gt;n&lt;/code&gt;.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;n&lt;/code&gt; 의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 다른 값에 대한 FLOP / s를 보여줍니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="12da5ea81004fb4224ae834c50a9dde8a5706fc0" translate="yes" xml:space="preserve">
          <source>5 Regions - Explanations</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;5 개 지역-설명&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b14907e1ba792b57aecd8a4bf1e7f6c09685b346" translate="yes" xml:space="preserve">
          <source>&lt;strike&gt;Here, as the data sizes increases, the amount of relative overhead goes down and the performance &quot;saturates&quot;. Here two loops is slower because it has twice as much loop and branching overhead.&lt;/strike&gt;</source>
          <target state="translated">&lt;strike&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 데이터 크기가 증가하면 상대적 오버 헤드의 양이 줄어들고 성능이 &quot;포화&quot;됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에서 두 개의 루프는 두 배의 루프와 분기 오버 헤드를 갖기 때문에 느립니다.&lt;/font&gt;&lt;/font&gt;&lt;/strike&gt;</target>
        </trans-unit>
        <trans-unit id="69479992a61ec0eb9e53f2ae7d6230f7aea2402f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1st Case:&lt;/strong&gt; - Only one summation but two independent function calls.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 경우 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -하나의 요약 만 있고 두 개의 독립적 인 함수 호출.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63a03495083598dadf8617e71321f11f6da3036b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2 x Intel Xeon X5482 Harpertown @ 3.2 GHz:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Intel Xeon X5482 Harpertown @ 3.2GHz 2 개 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8dd2234cdf691ae3d1c9d696aa07b739c688a8b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2nd Case:&lt;/strong&gt; - Two summations but each has its own function call.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 경우 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -두 개의 요약이 있지만 각각 고유 한 함수 호출이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac5177fa49c357654e6cf65a86c3c6135e13b3b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;6.206 seconds&lt;/strong&gt; with one loop and &lt;strong&gt;2.116 seconds&lt;/strong&gt; with two loops. This reproduces the OP's results exactly.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;6.206 초&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 한 루프와 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2.116 초&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 두 개의 루프와. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 OP의 결과를 정확하게 재현합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="152bc0110de9ef28e70c5321422c739a7c563036" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;First Case:&lt;/em&gt;&lt;/strong&gt; On first iteration the &lt;code&gt;Boss&lt;/code&gt; has to initially go 100 feet to give the order slip to &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;A&lt;/code&gt; goes off and does his thing, but then the &lt;code&gt;Boss&lt;/code&gt; has to travel 500 feet to &lt;code&gt;C&lt;/code&gt; to give him his order slip. Then on the next iteration and every other iteration after the &lt;code&gt;Boss&lt;/code&gt; has to go back and forth 500 feet between the two.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 사례 :&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 첫 번째 반복의&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 처음에 주문 슬립 제공 100 피트 가야&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하고&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; 는&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 꺼지고 자신의 일을하지만, 다음&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 500 발을 여행하는&lt;/font&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 그에게 자신의 주문 전표를 제공 할 수 있습니다. 그런 다음 다음 반복 및&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이후&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번의 500 피트 앞뒤로&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 반복이 반복&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b3d8ae7e9620b4a3b3a01e77c1f42a469984bc3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Second Case:&lt;/em&gt;&lt;/strong&gt;&lt;code&gt;The Boss&lt;/code&gt; has to travel 100 feet on the first iteration to &lt;code&gt;A&lt;/code&gt;, but after that he is already there and just waits for &lt;code&gt;A&lt;/code&gt; to get back until all slips are filled. Then the &lt;code&gt;Boss&lt;/code&gt; has to travel 500 feet on the first iteration to &lt;code&gt;C&lt;/code&gt; because &lt;code&gt;C&lt;/code&gt; is 500 feet from &lt;code&gt;A&lt;/code&gt; since this &lt;code&gt;Boss( Summation, For Loop )&lt;/code&gt; is being called right after working with &lt;code&gt;A&lt;/code&gt; and then just waits like he did with &lt;code&gt;A&lt;/code&gt; until all of &lt;code&gt;C's&lt;/code&gt; order slips are done.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 경우 :&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt; &lt;code&gt;The Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; 로&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 첫 번째 반복에서 100 피트를 이동해야&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지만 그 후 이미 거기에 있고&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 슬립이 채워질 때까지&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 돌아 오기를&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기다립니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 첫 번째 반복에 5백피트를 여행하는&lt;/font&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 때문에&lt;/font&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; 가&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 500 피트&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 이후&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss( Summation, For Loop )&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 작업 직후에 호출되는&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고 단지 그가했던 것처럼 대기&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 모든 때까지&lt;/font&gt; &lt;code&gt;C's&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 주문 전표가 완료됩니다.&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8db4c14c29a7d105d2f99dd7e4cab04e750bd539" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Assessing The Problem&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문제 평가&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bd63d84ed789fbfe62fd115ddd944db74e9a753b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Benchmark Results:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;벤치 마크 결과 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a385dd46f24c302ea5ca744977eaa5b99101b83b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Case 1&lt;/strong&gt; is a classic interpolation problem that happens to be an inefficient one. I also think that this was one of the leading reasons of why many machine architectures and developers ended up building and designing multi-core systems with the ability to do multi-threaded applications as well as parallel programming.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사례 1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 비효율적 인 전형적인 보간 문제입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 이것이 많은 기계 아키텍처와 개발자가 멀티 스레드 응용 프로그램과 병렬 프로그래밍을 수행 할 수있는 멀티 코어 시스템을 구축하고 설계 한 주요 이유 중 하나라고 생각합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db76f0a25108e4cb963d0a08f23235f505a9cc91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Conclusion:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Conclusion:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee9af54fbd9a13fc657b8c9037b7dfde2362914f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Could you provide some solid insight into the details that lead to the different cache behaviors as illustrated by the five regions on the following graph?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 그래프의 5 개 영역에서 설명하는 것처럼 다른 캐시 동작을 유발하는 세부 사항에 대한 통찰력을 제공 할 수 있습니까?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f64c2fa0ab45059d9d2b05c465150bbadd393a29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT : It does in fact look like you are allocating all the arrays separately.&lt;/strong&gt;
Usually when such large allocations are requested, the allocator will request fresh pages from the OS. Therefore, there is a high chance that large allocations will appear at the same offset from a page-boundary.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;편집 : 실제로 모든 배열을 별도로 할당하는 것처럼 보입니다. &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 일반적으로 이러한 큰 할당이 요청되면 할당자는 OS에서 새로운 페이지를 요청합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 큰 할당이 페이지 경계와 동일한 오프셋에 나타날 가능성이 높습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff82481600ca4b72142ffa0c5df31cb8e1828e64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Here's the test code:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트 코드는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="104d7d0e822b5338538004327c987e53d73680da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;I cannot replicate the results discussed here.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 논의한 결과를 복제 할 수 없습니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="112ae0b490d81db4a257a03413092f9a19eef61c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In the first two tests, the arrays are allocated separately.&lt;/strong&gt; You'll notice that they all have the same alignment relative to the page.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;처음 두 테스트에서 배열은 별도로 할당됩니다. &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것들은 페이지에 대해 모두 동일한 정렬을 가지고 있음을 알 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4eb70f5351695541ea10eb07e79eea4cb293448a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In the second two tests, the arrays are packed together to break that alignment.&lt;/strong&gt; Here you'll notice both loops are faster. Furthermore, the second (double) loop is now the slower one as you would normally expect.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 테스트에서는 배열이 정렬되어 해당 정렬을 해제합니다. &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 두 루프가 더 빠릅니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 두 번째 (더블) 루프는 일반적으로 예상 한 것보다 느립니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e94c672f74af08d7f271531102f1986340b6dec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;It might also be interesting to point out the differences between CPU/cache architectures, by providing a similar graph for these CPUs.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이러한 CPU에 대해 유사한 그래프를 제공하여 CPU / 캐시 아키텍처의 차이점을 지적하는 것도 흥미로울 수 있습니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="234647d3ac335a2b9c1c73ef786914ed30da0bc5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Let's Investigate&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;조사합시다&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0992f369b3bd576e62bd26ec8024546b329d7025" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Our Assertions:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리의 주장 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bce0cd5ffb2a37fba775193b4bf5ba59883c25c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Regarding These Questions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 질문들에 대하여&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="883cd845c12162f162451345532a4622afe44219" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Region 1:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;지역 1 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c3a069490cad64b2abbf3ad037bad18e1f4ba80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Region 2:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;지역 2 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49b07d776f5d212a4b7f02a4946b33b5f222234c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Region 3:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;지역 3 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cadf6d1e9cc3c16346b4db73abfa9efeefa2911d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Region 4:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;지역 4 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2704be14d7b23daec07410a5dd7685d9fa30cda2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Region 5:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;지역 5 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7ae2cc3d2bb2ec34c48c443e7891cfc09bd5f463" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Summary with Analogy&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유추로 요약&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4984ec011b334dc8f00bd50924d4167bb704d1a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Algorithms:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;알고리즘 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df9ac0ca08c80980b68a2fa485d69fb68d2aaa69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Approach&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;접근&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eec929ed1c8347dcecf86a47fbb2804dba304932" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Comparison of Arbitrary Values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;임의의 가치 비교&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec70960c24f99d8101f34115f16fb94cf32e1c01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Consideration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;고려 사항&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8b01854004cefcf81fbcc247efc2e4e0797a699" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Difference In Distances Traveled&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이동 거리의 차이&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e3a70475f876caae8f6a04b7f0e07646a22f2ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Ending Results&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결말 결과&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3bdeca04c971828619464a9072d48f1805614670" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The OPs Amended Question(s)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;OP 수정 된 질문&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="415a6cc46e0f95521c4e7cb395b0523a2dc5c7de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Observation:&lt;/strong&gt; - &lt;em&gt;The differences between the two algorithms&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;관찰 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 알고리즘의 차이점&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="76781d11095b245a6f8c86e1771fa82fec1ba4b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Original Question&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;원래 질문&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c2361582818f9044502e5f10dd5db390bc078247" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Perspective&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;관점&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d18f8f2bee619589b857aee842936d61a6270c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Test Cases:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트 사례 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6f94195bfa3d4122553a525b3ba8b2def28614f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What We Do Know&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리가 아는 것&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f99489672c41c8daa933d99ea58acb903a2b5c58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What We Don't Know&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리가 모르는 것&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="521b0abab75a6ac4655f23b9618ac7ccc724efb0" translate="yes" xml:space="preserve">
          <source>@Mysticial's answer convinced a lot of people (including me), probably because it was the only one that seemed to rely on facts, but it was only one &quot;data point&quot; of the truth.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Mysticial의 대답은 많은 사람들 (나를 포함하여)을 설득했습니다. 아마도 그것이 사실에 의존하는 것처럼 보이는 유일한 사람이었을 것입니다. 그러나 그것은 진실의 한 &quot;데이터 포인트&quot;일뿐입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0e15339689c74cb259c9d321c1b1b5454cd6bed7" translate="yes" xml:space="preserve">
          <source>A straight assignment with no computation would be a cleaner test of memory access time and would create a test that is uniform irrespective of the loop count. Maybe I missed something in the conversation, but it is worth thinking twice about. If the plus is left out of the assignment, the cumulative time is almost identical at 31 seconds each.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;계산이없는 직접 할당은 메모리 액세스 시간을보다 명확하게 테스트하는 것으로 루프 수에 관계없이 균일 한 테스트를 생성합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대화에서 뭔가를 놓쳤을 수도 있지만 두 번 생각할 가치가 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더하기가 할당에서 제외되면 누적 시간은 각각 31 초에서 거의 동일합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2921679a209c3a19ed571424cfe0ea586224ba2" translate="yes" xml:space="preserve">
          <source>After looking at the code for a while it became quite apparent what the problem is and what is generating it. Lets break this down into an algorithmic problem and look at it from the perspective of using mathematical notations then apply an analogy to the math problems as well as to the algorithms.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드를 잠시 살펴본 후 문제가 무엇인지, 코드가 생성되는 것이 분명해졌습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것을 알고리즘 문제로 세분화하고 수학 표기법을 사용하는 관점에서 본 다음 수학 문제와 알고리즘에 비유를 적용합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a01e33f4dcdb6ba1ae9f34a97cf8f6deeedf1a8d" translate="yes" xml:space="preserve">
          <source>And</source>
          <target state="translated">And</target>
        </trans-unit>
        <trans-unit id="68af471cbe64993c128953195c25db2546c9c3a6" translate="yes" xml:space="preserve">
          <source>And this approximation is the average difference between these two loops both algorithmically and machine operations involving software optimizations and machine instructions. So when the data set grows linearly, so does the difference in time between the two. Algorithm 1 has more fetches than algorithm 2 which is evident when the &lt;code&gt;Boss&lt;/code&gt; had to travel back and forth the maximum distance between &lt;code&gt;A&lt;/code&gt; &amp;amp; &lt;code&gt;C&lt;/code&gt; for every iteration after the first iteration while Algorithm 2 the &lt;code&gt;Boss&lt;/code&gt; had to travel to &lt;code&gt;A&lt;/code&gt; once and then after being done with &lt;code&gt;A&lt;/code&gt; he had to travel a maximum distance only one time when going from &lt;code&gt;A&lt;/code&gt; to &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고이 근사치는 알고리즘과 소프트웨어 최적화 및 기계 명령어를 포함하는 기계 작동 모두에서이 두 루프의 평균 차이입니다. 따라서 데이터 세트가 선형으로 커지면 두 데이터 간의 시간 차이도 커집니다. 알고리즘 1이 때 분명 알고리즘 2 이상 페치 갖는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사이에 이동 전후의 최대 거리를 가지고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;amp; &lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 알고리즘 2 동안 첫번째 반복 후마다 반복 용 &lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 여행을 가지고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 후에 수행되는 일단을 와 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그는에서 갈 때 최대 거리를 하나의 시간을 여행했다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에 &lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9088cef1499e648db384472fce2fb57166ffcad" translate="yes" xml:space="preserve">
          <source>And this is a hard-to-explain one: Initialized data, that is allocated once and reused for every following test case of different vector size:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 이것은 설명하기 어려운 것입니다. 초기화 된 데이터. 한 번 할당되고 벡터 크기가 다른 다음 테스트 사례마다 재사용됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6bc397ce8c790298abec880d37b0008e7ad386fd" translate="yes" xml:space="preserve">
          <source>Array sizes ranged from 2^16 to 2^24, using eight loops. I was careful to initialize the source arrays so the &lt;code&gt;+=&lt;/code&gt; assignment wasn't asking the &lt;a href=&quot;http://en.wikipedia.org/wiki/Floating-point_unit&quot;&gt;FPU&lt;/a&gt; to add memory garbage interpreted as a double.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열 크기는 8 개의 루프를 사용하여 2 ^ 16에서 2 ^ 24 사이였습니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;+=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 할당이 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Floating-point_unit&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;FPU&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 이중으로 해석되는 메모리 가비지를 추가하도록 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;요청하지 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;않도록 소스 배열을 초기화하는 데주의를 기울 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;였습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d798d18424176f8a0f98a50c4c4dec04767bbde5" translate="yes" xml:space="preserve">
          <source>As @Stephen Cannon points out in the comments, there is very likely possibility that this alignment causes &lt;strong&gt;&lt;em&gt;false aliasing&lt;/em&gt;&lt;/strong&gt; in the load/store units or the cache. I Googled around for this and found that Intel actually has a hardware counter for &lt;strong&gt;&lt;em&gt;partial address aliasing&lt;/em&gt;&lt;/strong&gt; stalls:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주석에서 @Stephen Cannon이 지적한 것처럼,이 정렬로 인해 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로드 / 저장 장치 또는 캐시에서 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;잘못된 앨리어싱&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 발생할 가능성이 큽니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 이것을 둘러 보았고 인텔은 실제로 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;부분 주소 앨리어싱&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 스톨에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대한 하드웨어 카운터를 가지고 있음을 발견했다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c35e4900a7c68daeafb264cda2682267df9d2546" translate="yes" xml:space="preserve">
          <source>As I have demonstrated without a doubt, there is an underlying issue even before the Hardware and Software becomes involved. Now as for the management of memory and caching along with page files, etc. which all works together in an integrated set of systems between: &lt;code&gt;The Architecture&lt;/code&gt; { Hardware, Firmware, some Embedded Drivers, Kernels and ASM Instruction Sets }, &lt;code&gt;The OS&lt;/code&gt;{ File and Memory Management systems, Drivers and the Registry }, &lt;code&gt;The Compiler&lt;/code&gt; { Translation Units and Optimizations of the Source Code }, and even the &lt;code&gt;Source Code&lt;/code&gt; itself with its set(s) of distinctive algorithms; we can already see that there is a bottleneck that is happening within the first algorithm before we even apply it to any machine with any arbitrary &lt;code&gt;Architecture&lt;/code&gt;, &lt;code&gt;OS&lt;/code&gt;, and &lt;code&gt;Programmable Language&lt;/code&gt; compared to the second algorithm. So there already existed a problem before involving the intrinsics of a modern computer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의심의 여지없이 시연 한 바와 같이 하드웨어 및 소프트웨어가 관여되기 전에도 근본적인 문제가 있습니다. 메모리와 캐싱은 페이지 파일과 함께 캐싱 할 수 있습니다. 페이지 파일 등은 모두 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;The Architecture&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; {하드웨어, 펌웨어, 일부 임베디드 드라이버, 커널 및 ASM 명령어 세트}, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;The OS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; {파일 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사이의 통합 된 시스템 세트에서 함께 작동합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;및 메모리 관리 시스템, 드라이버 및 레지스트리}, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;The Compiler&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; {소스 코드의 번역 단위 및 최적화}, 심지어 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;고유 알고리즘 세트가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Source Code&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 자체; 우리는 임의 알고리즘을 가진 머신에 적용하기 전에 첫 번째 알고리즘 내에서 병목 현상이 발생하고 있음을 이미 알 수 있습니다.&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Architecture&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 알고리즘과 비교 한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아키텍처&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;OS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Programmable Language&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 현대 컴퓨터의 본질을 다루기 전에 이미 문제가있었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db05e8a585a74c2b37aa36f6b4ef683ef80e1764" translate="yes" xml:space="preserve">
          <source>As you might expect, initializing &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;d&lt;/code&gt; inside the loop using &lt;code&gt;InitToZero[j]&lt;/code&gt; gave the combined approach an advantage, as they were done back-to-back before the assignments to &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;, but still within 10%. Go figure.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예상 한 바와 같이, &lt;/font&gt; &lt;code&gt;InitToZero[j]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하여 루프 내에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 초기화 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 &lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt; &lt;code&gt;c&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 할당되기 전에 연속적으로 수행 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되었지만 여전히 10 % 내 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 결합 된 접근 방식에 이점이있었습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그림을 이동.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6eeb01c453d49806a69030f78b4610c8007b3c99" translate="yes" xml:space="preserve">
          <source>Assuming a fairly dumb caching policy of &lt;em&gt;if the byte is not in the cache, put it there and get the following byte too while we are at it&lt;/em&gt; you will get a scenario something like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;바이트가 캐시에없는 경우&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 상당히 멍청한 캐싱 정책을 가정하면 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;거기에 넣고 다음 바이트를 가져 와서 다음과 같은&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 시나리오를 얻습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2621108dbdca1d058df9e1e89bdc18d55d8d9d56" translate="yes" xml:space="preserve">
          <source>Assuming a simple LIFO caching policy, this code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;간단한 LIFO 캐싱 정책을 가정하면 다음 코드는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3460682488e6d7cc96dbc4d2d00519a722ffcdff" translate="yes" xml:space="preserve">
          <source>At this point, nothing fits in cache. So you're bound by memory bandwidth.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 시점에서 캐시에 맞는 것은 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 메모리 대역폭에 구속됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="847dd1a8dd5a0fcb1deef24af0fdd56bf4308a6a" translate="yes" xml:space="preserve">
          <source>At this point, the data no longer fits in L1 cache. So performance is capped by the L1 &amp;lt;-&amp;gt; L2 cache bandwidth.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 시점에서 데이터는 더 이상 L1 캐시에 맞지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 성능은 L1 &amp;lt;-&amp;gt; L2 캐시 대역폭에 의해 제한됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d744e9fe7c6bd65afd8a445005ae9f5103b27665" translate="yes" xml:space="preserve">
          <source>Compiled on MS &lt;a href=&quot;http://en.wikipedia.org/wiki/Visual_C++#32-bit_versions&quot;&gt;Visual C++ 10.0&lt;/a&gt; with full optimization and &lt;a href=&quot;http://en.wikipedia.org/wiki/SSE2&quot;&gt;SSE2&lt;/a&gt; enabled for 32-bit on a &lt;a href=&quot;http://en.wikipedia.org/wiki/Intel_Core_2&quot;&gt;Intel Core 2&lt;/a&gt; Duo (x64), the first example takes 5.5&amp;nbsp;seconds and the double-loop example takes only 1.9&amp;nbsp;seconds. My question is: (Please refer to the my rephrased question at the bottom)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Intel_Core_2&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Intel Core 2&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Duo (x64)에서 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;32 비트에 대해 &lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/SSE2&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SSE2가&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 활성화 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되고 완전 최적화 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;된 MS &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Visual_C++#32-bit_versions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Visual C ++ 10.0&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 컴파일 된 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 예제는 5.5 초, 이중 루프 예제는 1.9 초에 불과합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 질문은 : (하단에 내 대답을 참조하십시오)&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce5cd38e3fb59188d515e8d4753f99e250f4c136" translate="yes" xml:space="preserve">
          <source>Considering the OP's original question about the 2 variants of the for loops and his amended question towards the behavior of caches along with many of the other excellent answers and useful comments; I'd like to try and do something different here by taking a different approach about this situation and problem.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;for 루프의 두 가지 변형에 대한 OP의 원래 질문과 캐시의 동작에 대한 수정 된 질문과 다른 많은 훌륭한 답변과 유용한 주석을 고려합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 상황과 문제에 대해 다른 접근법을 취하여 여기에서 다른 것을 시도하고 싶습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2658124dfdcfa4171d5ed289bdc8e7cce5a9eacb" translate="yes" xml:space="preserve">
          <source>Considering the two loops and all of the discussion about cache and page filing I'd like to take another approach as to looking at this from a different perspective. One that doesn't involve the cache and page files nor the executions to allocate memory, in fact this approach doesn't even concern the actual hardware or the software at all.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 개의 루프와 캐시 및 페이지 정리에 대한 모든 논의를 고려할 때 다른 관점에서이를 보는 다른 접근법을 원합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;캐시와 페이지 파일을 포함하지 않는 메모리 나 메모리 할당을위한 실행은 사실이 접근 방식은 실제 하드웨어 나 소프트웨어와 전혀 관련이 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7cd90e2c4a5daa4b5570598684f8432ccd97991f" translate="yes" xml:space="preserve">
          <source>Could you provide some solid insight into the details that lead to the different cache behaviors as illustrated by the five regions on the following graph?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 그래프의 5 개 영역에서 설명하는 것처럼 다른 캐시 동작을 유발하는 세부 사항에 대한 통찰력을 제공 할 수 있습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45e62524f888dc26206083147534d2d045cfe01f" translate="yes" xml:space="preserve">
          <source>Disassembly for the first loop basically looks like this (this block is repeated about five times in the full program):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 루프의 디스 어셈블리는 기본적으로 다음과 같습니다 (이 블록은 전체 프로그램에서 약 5 번 반복됨).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5aded222c02776b41379bab0f381d5cb63dc8c0" translate="yes" xml:space="preserve">
          <source>EDIT: Results on an &lt;em&gt;actual&lt;/em&gt; Core 2 architecture machine:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;편집 : &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Core 2 아키텍처 시스템의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결과 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c1cdf0b350bbd524d76c4339c2d1b23bdd3868e0" translate="yes" xml:space="preserve">
          <source>EDIT: The question turned out to be of no relevance, as the behavior severely depends on the sizes of the arrays (n) and the CPU cache. So if there is further interest, I rephrase the question:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;편집 : 문제는 배열의 크기 (n)와 CPU 캐시에 따라 크게 다르기 때문에 질문은 관련이없는 것으로 판명되었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 더 관심이 있다면, 나는 그 질문을 바꾸어 놓는다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="56c9875ac0dcfe30c44dfb65704f11fe74371099" translate="yes" xml:space="preserve">
          <source>Each loop of the double loop example produces this code (the following block is repeated about three times):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이중 루프 예제의 각 루프는이 코드를 생성합니다 (다음 블록은 약 3 번 반복됨).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7339be587541117a0089da7851906a2b9aeddb3a" translate="yes" xml:space="preserve">
          <source>Every low-level performance related question on Stack&amp;nbsp;Overflow should be required to provide MFLOPS information for the whole range of cache relevant data sizes! It's a waste of everybody's time to think of answers and especially discuss them with others without this information.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 캐시 관련 데이터 크기에 대한 MFLOPS 정보를 제공하려면 스택 오버플로에 대한 모든 저수준 성능 관련 질문이 필요합니다! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;답변을 생각하고 특히이 정보없이 다른 사람들과 답변을 나누는 것은 모두의 시간 낭비입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f030db38dc8179d25718d183c7994c1ad7bfec3" translate="yes" xml:space="preserve">
          <source>Hardware is &lt;a href=&quot;http://en.wikipedia.org/wiki/Dell_XPS#XPS_8500&quot;&gt;Dell XPS 8500&lt;/a&gt; with generation 3 &lt;a href=&quot;http://en.wikipedia.org/wiki/Intel_Core#Core_i7&quot;&gt;Core i7&lt;/a&gt; @ 3.4&amp;nbsp;GHz and 8&amp;nbsp;GB memory. For 2^16 to 2^24, using eight loops, the cumulative time was 44.987 and 40.965 respectively. Visual C++ 2010, fully optimized.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하드웨어는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3 세대 &lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Intel_Core#Core_i7&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;i7&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; @ 3.4GHz 및 8GB 메모리 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가 장착 된 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Dell_XPS#XPS_8500&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Dell XPS 8500&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;8 ^ 루프를 사용하는 2 ^ 16-2 ^ 24의 경우 누적 시간은 각각 44.987 및 40.965입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;완전히 최적화 된 Visual C ++ 2010&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c1bbe64c3e6e15af998d9942383e89f52b14b186" translate="yes" xml:space="preserve">
          <source>However, in order for false aliasing to occur, there must be a large enough stride between the datasets. This is why you don't see this in region 3.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 잘못된 앨리어싱이 발생하려면 데이터 집합간에 보폭이 충분히 커야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 지역 3에서 이것을 볼 수없는 이유입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f3b9fd0727ad4b649df8f9eab11b90ef6e577209" translate="yes" xml:space="preserve">
          <source>However; it is not to say that these new questions are not of importance because they themselves are and they do play a role after all. They do impact the procedures and the overall performance and that is evident with the various graphs and assessments from many who have given their answer(s) and or comment(s). If you pay attention to the analogy of the &lt;code&gt;Boss&lt;/code&gt; and the two workers &lt;code&gt;A&lt;/code&gt; &amp;amp; &lt;code&gt;B&lt;/code&gt; who had to go and retrieve packages from &lt;code&gt;C&lt;/code&gt; &amp;amp; &lt;code&gt;D&lt;/code&gt; respectively and considering the mathematical notations of the two algorithms in question you can see that without even the involvement of the computer &lt;code&gt;Case 2&lt;/code&gt; is approximately 60% faster than &lt;code&gt;Case 1&lt;/code&gt; and when you look at the graphs and charts after these algorithms have been applied to source code, compiled and optimized and executed through the OS to perform operations on the given hardware you even see a little more degradation between the differences in these algorithms.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하나; 이 새로운 질문들이 그들 자신이기 때문에 중요하지 않다고 말할 수는 없습니다. 그것들은 절차와 전반적인 성과에 영향을 미치며, 답변이나 의견을 제시 한 많은 사람들의 다양한 그래프와 평가를 통해 분명해집니다. &lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt; &lt;code&gt;D&lt;/code&gt; 에서&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 각각 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;패키지를 가져 와서 가져와야 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 두 명의 작업자 &lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt; &lt;code&gt;B&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 유추에주의를 기울이고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문제가있는 두 알고리즘의 수학적 표기법을 고려하면 컴퓨터 &lt;/font&gt; &lt;code&gt;Case 2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt; &lt;code&gt;Case 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 보다 약 60 % 빠릅니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이러한 알고리즘이 소스 코드에 적용된 후 OS를 통해 컴파일 및 최적화 및 실행되어 주어진 하드웨어에서 작업을 수행 한 후 그래프 및 차트를 보면 알고리즘의 차이점 사이에서 약간의 성능 저하를 볼 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a7a60ea46f57285511450482a75f3927deb922e3" translate="yes" xml:space="preserve">
          <source>I don't know if poor benchmark code is to blame, or what, but the two methods are within 10% of each other on my machine using the following code, and one loop is usually just slightly faster than two - as you'd expect.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나쁜 벤치 마크 코드가 무엇인지 비난할지 모르겠지만 다음 코드를 사용하여 두 방법이 내 컴퓨터에서 서로 10 % 이내에 있으며 한 루프는 일반적으로 두 개보다 약간 빠릅니다. 배고 있다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00589175b0e2daeb748e811866d66c98117bcd29" translate="yes" xml:space="preserve">
          <source>I played around with various schemes, such as putting the assignment of &lt;code&gt;b[j]&lt;/code&gt;, &lt;code&gt;d[j]&lt;/code&gt; to &lt;code&gt;InitToZero[j]&lt;/code&gt; inside the loops, and also with using &lt;code&gt;+= b[j] = 1&lt;/code&gt; and &lt;code&gt;+= d[j] = 1&lt;/code&gt;, and I got fairly consistent results.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;루프 내부 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b[j]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d[j]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;InitToZero[j]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;할당&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;+= b[j] = 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;+= d[j] = 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 등 다양한 구성표를 가지고 놀았습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. = 1&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이고 상당히 일관된 결과를 얻었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="817cfd78e867bee0df782d3f8d5e3e892f050739" translate="yes" xml:space="preserve">
          <source>I run Visual&amp;nbsp;Studio&amp;nbsp;2015 on an E5-1620 3.5&amp;nbsp;GHz processor with 16&amp;nbsp;GB RAM.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;16GB RAM이있는 E5-1620 3.5GHz 프로세서에서 Visual Studio 2015를 실행합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00808f1a2f2eb9b821cd5d0d2373ff5c65a160b7" translate="yes" xml:space="preserve">
          <source>I suspect you are beginning to see where I am going.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가가는 곳을보기 시작한 것 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3bc087c8089b4797e291481227838ac53530b7b7" translate="yes" xml:space="preserve">
          <source>I will now begin to explain how all of this works below.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제이 모든 것이 아래에서 어떻게 작동하는지 설명하겠습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99ed91ab9852dd4c4c00c7c70971a0fa0add2aea" translate="yes" xml:space="preserve">
          <source>I'm not sure exactly what's going on here... Alignment could still play an effect as Agner Fog mentions &lt;a href=&quot;http://www.agner.org/optimize/blog/read.php?i=142&quot;&gt;cache bank conflicts&lt;/a&gt;. (That link is about Sandy Bridge, but the idea should still be applicable to Core 2.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정확히 무슨 일이 일어나고 있는지 잘 모르겠습니다 ... Agner Fog가 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.agner.org/optimize/blog/read.php?i=142&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;캐시 뱅크 충돌을&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 언급하면서 정렬은 여전히 ​​효과를 발휘할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(이 링크는 Sandy Bridge에 관한 것이지만 아이디어는 여전히 Core 2에 적용 가능해야합니다.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e87dc3e0b3d9d315844cac4303a6acbe9bf72c81" translate="yes" xml:space="preserve">
          <source>I'm not sure why it was decided that MFLOPS was a relevant metric. I though the idea was to focus on memory accesses, so I tried to minimize the amount of floating point computation time. I left in the &lt;code&gt;+=&lt;/code&gt;, but I am not sure why.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MFLOPS가 관련 측정 항목으로 결정된 이유를 잘 모르겠습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아이디어는 메모리 액세스에 중점을 두었지만 부동 소수점 계산 시간을 최소화하려고했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;+=&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 떠났지만 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그 이유를 모르겠습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7810945b5da00839bd6f4244b4ecc9f6be09aa4c" translate="yes" xml:space="preserve">
          <source>If I've guessed correctly on how you are allocating your arrays, they &lt;strong&gt;&lt;em&gt;are likely to be aligned to the page line&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열을 할당하는 방법에 대해 올바르게 짐작했다면 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;페이지 행에 정렬 될 수 있습니다&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6592d47a260c0445aa4f71f91675b748c2da8bb8" translate="yes" xml:space="preserve">
          <source>If you noticed &lt;code&gt;F2()&lt;/code&gt; only exists in &lt;code&gt;Sum&lt;/code&gt; where both &lt;code&gt;Sum1&lt;/code&gt; and &lt;code&gt;Sum2&lt;/code&gt; only contains &lt;code&gt;F1()&lt;/code&gt;. This will also be evident later on as well when we begin to conclude that there is sort of an optimization happening from the second algorithm.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;F2()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 &lt;/font&gt; &lt;code&gt;Sum1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt; &lt;code&gt;Sum2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 모두 &lt;/font&gt; &lt;code&gt;F1()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 만 포함하는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sum&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에만 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있음을 알았습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 이것은 두 번째 알고리즘에서 발생하는 최적화가 있다고 결론을 내릴 때 나중에 분명해질 것입니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29e5b3147124613363d4d8415c0344079da0b91e" translate="yes" xml:space="preserve">
          <source>Imagine you are working on a machine where &lt;code&gt;n&lt;/code&gt; was just the right value for it only to be possible to hold two of your arrays in memory at one time, but the total memory available, via disk caching, was still sufficient to hold all four.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 한 번에 두 개의 어레이를 메모리에 보유 할 수있는 유일한 값인 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;머신에서 작업하고 있다고 가정 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지만 디스크 캐싱을 통해 사용 가능한 총 메모리는 여전히 4 개를 모두 보유하기에 충분하다고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;상상해보십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c3438355ba619bc8749166614f228c594f1da22" translate="yes" xml:space="preserve">
          <source>In both cases we have 4 functions to work with and 2 function calls with 2 operations being done on each function call. So we will set these up as functions and function calls to be &lt;code&gt;F1()&lt;/code&gt;, &lt;code&gt;F2()&lt;/code&gt;, &lt;code&gt;f(a)&lt;/code&gt;, &lt;code&gt;f(b)&lt;/code&gt;, &lt;code&gt;f(c)&lt;/code&gt; and &lt;code&gt;f(d)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 경우 모두 작업 할 4 개의 함수와 각 함수 호출마다 2 개의 작업이 수행되는 2 개의 함수 호출이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 함수 및 함수 호출로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;F1()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;F2()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(a)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(b)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(c)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(d)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc2ed913dd196a5e776a8b6d35e3db01e80c5fbd" translate="yes" xml:space="preserve">
          <source>In this situation it is the structure of the process of the work being done and it does go to show that &lt;strong&gt;Case 2&lt;/strong&gt; is more efficient from both that partial optimization of having a similar function declaration and definition where it is only the variables that differ by name. And we also see that the total distance traveled in &lt;strong&gt;Case 1&lt;/strong&gt; is much farther than it is in &lt;strong&gt;Case 2&lt;/strong&gt; and we can consider this distance traveled our &lt;em&gt;Time Factor&lt;/em&gt; between the two algorithms. &lt;strong&gt;Case 1&lt;/strong&gt; has considerable more work to do than &lt;strong&gt;Case 2&lt;/strong&gt; does. This was also seen in the evidence of the &lt;code&gt;ASM&lt;/code&gt; that was shown between both cases. Even with what was already said about these cases, it also doesn't account for the fact that in &lt;strong&gt;Case 1&lt;/strong&gt; the boss will have to wait for both &lt;code&gt;A&lt;/code&gt; &amp;amp; &lt;code&gt;C&lt;/code&gt; to get back before he can go back to &lt;code&gt;A&lt;/code&gt; again on the next iteration and it also doesn't account for the fact that if &lt;code&gt;A&lt;/code&gt; or &lt;code&gt;B&lt;/code&gt; is taking an extremely long time then both the &lt;code&gt;Boss&lt;/code&gt; and the other worker(s) are also waiting at an idle. In &lt;strong&gt;Case 2&lt;/strong&gt; the only one being idle is the &lt;code&gt;Boss&lt;/code&gt; until the worker gets back. So even this has an impact on the algorithm.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 상황에서 그것은 수행되는 작업의 프로세스 구조이며, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사례 2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 유사한 함수 선언과 정의를 갖는 부분 최적화, 이름에 따라 다른 변수 인 경우보다 더 효율적 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이라는 것을 보여줍니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 그리고 우리는 또한에 이동 한 총 거리 볼 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;케이스 1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가에있는 것보다 더 많이 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사례 2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 우리는이 거리가 우리의 여행 고려할 수있는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;시간 요소를&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 두 알고리즘 사이. &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사례 1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사례 2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 보다 훨씬 더 많은 작업을 수행 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. 이것은 또한 &lt;/font&gt; &lt;code&gt;ASM&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 증거에서 볼 수 있습니다&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 두 경우 사이에 보여졌습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 사례에 대해 이미 언급 한 내용이 있더라도 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사례 1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 보스가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 반복 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 &lt;/font&gt; &lt;code&gt;A&lt;/code&gt; 로&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 다시 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;돌아 가기 전에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모두 돌아올 때까지 기다려야 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한다는 사실을 설명하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 &lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt; &lt;code&gt;B&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 매우 오랜 시간이 걸리면 &lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 다른 작업자도 유휴 상태를 기다리고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있다는 사실을 고려하지 않습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사례 2&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 단 하나되는 유휴은입니다 &lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 노동자가 돌아 오기까지. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 이것도 알고리즘에 영향을 미칩니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a80769f1c0a8b8d244565169e5bab5c0615b3ee" translate="yes" xml:space="preserve">
          <source>It is already apparent that many have already done this by looking at the heap allocations, bench mark tests, looking at RAM, Cache and Page Files. Looking at specific data points and specific iteration indexes was also included and the various conversations about this specific problem has many people starting to question other related things about it. So how do we begin to look at this problem by using mathematical algorithms and applying an analogy to it? We start off by making a couple of assertions! Then we build out our algorithm from there.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;힙 할당, 벤치 마크 테스트, RAM, 캐시 및 페이지 파일을 보면 많은 사람들이 이미이 작업을 수행했음을 분명히 알 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;특정 데이터 포인트와 특정 반복 인덱스를 살펴 보았으며이 특정 문제에 대한 다양한 대화를 통해 많은 사람들이 다른 관련 문제에 대해 질문하기 시작했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수학 알고리즘을 사용하고 유추를 적용하여이 문제를 어떻게 살펴볼 수 있을까요? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 몇 가지 주장을 시작하여 시작합니다! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 알고리즘을 구축합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8fc6816b3d2ad8d20c28b136a6c91005b108c66" translate="yes" xml:space="preserve">
          <source>It is the only point, where one-loop (namely with continuous allocation) beats the two-loop version. (This made Mysticial's answer possible, at all.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이는 단일 루프 (즉, 연속 할당)가 2 루프 버전을 능가하는 유일한 지점입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(이로 인해 Mysticial의 대답이 가능해졌습니다.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95d30c52570fa07e0e4cf2e00d425ec2c718c6fa" translate="yes" xml:space="preserve">
          <source>It may be old C++ and optimizations. On my computer I obtained almost the same speed:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오래된 C ++ 및 최적화 일 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 컴퓨터에서 나는 거의 같은 속도를 얻었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd3c6fcb78898a4d9ab59044ecc39ae0efeecae2" translate="yes" xml:space="preserve">
          <source>It might also be interesting to point out the differences between CPU/cache architectures, by providing a similar graph for these CPUs.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이러한 CPU에 대해 유사한 그래프를 제공하여 CPU / 캐시 아키텍처의 차이점을 지적하는 것도 흥미로울 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f7fc9c2d2d9a467270b23261b4cc69da5f9ed02" translate="yes" xml:space="preserve">
          <source>It possesses the greatest discrepancy between the one and two loop'ed version (almost a factor of three)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 하나와 두 개의 루프 버전 사이에 가장 큰 불일치를 가지고 있습니다 (거의 세 배)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="59d7c3084de99bdf974adebf4d8683cc639f6dc2" translate="yes" xml:space="preserve">
          <source>It's because the CPU doesn't have so many cache misses (where it has to wait for the array data to come from the RAM chips). It would be interesting for you to adjust the size of the arrays continually so that you exceed the sizes of the &lt;a href=&quot;http://en.wikipedia.org/wiki/CPU_cache#Multi-level_caches&quot;&gt;level 1 cache&lt;/a&gt; (L1), and then the &lt;a href=&quot;http://en.wikipedia.org/wiki/CPU_cache#Multi-level_caches&quot;&gt;level 2 cache&lt;/a&gt; (L2), of your CPU and plot the time taken for your code to execute against the sizes of the arrays. The graph shouldn't be a straight line like you'd expect.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPU에 캐시 누락이 많지 않기 때문입니다 (어레이 데이터가 RAM 칩에서 나올 때까지 기다려야 함). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPU &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/CPU_cache#Multi-level_caches&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;레벨 1 캐시&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (L1), &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/CPU_cache#Multi-level_caches&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;레벨 2 캐시&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (L2) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 크기를 초과하고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드에 걸리는 시간을 플롯 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하도록 배열의 크기를 계속 조정하는 것이 흥미로울 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열의 크기에 대해 실행합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래프는 예상대로 직선이 아니어야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6e48b4df68ffacb1c2b954a22ff59182a5abdcc" translate="yes" xml:space="preserve">
          <source>It's not because of a different code, but because of caching: RAM is slower than the CPU registers and a cache memory is inside the CPU to avoid to write the RAM every time a variable is changing. But the cache is not big as the RAM is, hence, it maps only a fraction of it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 코드 때문이 아니라 캐싱 때문입니다. RAM이 CPU 레지스터보다 느리고 변수가 변경 될 때마다 RAM을 쓰지 않도록 캐시 메모리가 CPU 내부에 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 캐시는 RAM만큼 크지 않으므로 캐시의 일부만 매핑합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4f98a0ef7e9ea5be7322aaa75bdddab7edfda7fc" translate="yes" xml:space="preserve">
          <source>Looking at it from this kind of an approach without involving how the Hardware, OS and Compiler(s) works together to do heap allocations that involves working with RAM, Cache, Page Files, etc.; the mathematics that are at the foundation of these algorithms shows us which of these two is the better solution. We can use an analogy where a &lt;code&gt;Boss&lt;/code&gt; or &lt;code&gt;Summation&lt;/code&gt; that will represent a &lt;code&gt;For Loop&lt;/code&gt; that has to travel between workers &lt;code&gt;A&lt;/code&gt; &amp;amp; &lt;code&gt;B&lt;/code&gt; we can easily see that &lt;strong&gt;Case 2&lt;/strong&gt; is at least &lt;strong&gt;&lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;2&lt;/sub&gt;&lt;/strong&gt; as fast if not a little more than &lt;strong&gt;Case 1&lt;/strong&gt; due to the difference in the distance that is needed to travel and the time taken between the workers. This math lines up almost virtually and perfectly with both the Bench Mark Times as well as the amount of differences in Assembly Instructions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;RAM, 캐시, 페이지 파일 등을 사용하는 힙 할당을 수행하기 위해 하드웨어, OS 및 컴파일러가 함께 작동하는 방식을 포함하지 않고 이러한 종류의 접근 방식에서이를 살펴보십시오. 이 알고리즘의 기초가되는 수학은이 두 가지 중 어느 것이 더 나은 솔루션인지 보여줍니다. 우리는 비유 사용할 수 있습니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 나 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Summation&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 나타냅니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;For Loop&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 근로자 사이의 여행에 가지고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;amp; &lt;/font&gt; &lt;code&gt;B&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 우리가 쉽게 볼 수있는 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사례 2는&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 적어도입니다 &lt;/font&gt;&lt;strong&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1&lt;/font&gt;&lt;/sup&gt;&lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2&lt;/font&gt;&lt;/sub&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 빠른처럼하지 조금 더 이상의 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사례 1&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/sub&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여행하는 데 필요한 거리와 작업자 간 소요 시간의 차이로 인해 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 수학은 벤치 마크 시간과 조립 지침의 차이의 양과 거의 사실상 완벽하게 일치합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="88b8ab7191d7a7de92e0270b1e10017d27a3a95d" translate="yes" xml:space="preserve">
          <source>Note that my initial question was at &lt;strong&gt;n = 100.000&lt;/strong&gt;. This point (by accident) exhibits special behavior:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 초기 질문은 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;n = 100.000&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우연히이 시점은 특별한 행동을 나타냅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b299d49402d695f6cbcf85018ddd57470d6420e6" translate="yes" xml:space="preserve">
          <source>Now if the &quot;Data&quot; set is fairly small it may not seem all that bad of a difference at first but since &lt;code&gt;Case 1&lt;/code&gt; is about &lt;code&gt;60 - 70%&lt;/code&gt; slower than &lt;code&gt;Case 2&lt;/code&gt; we can look at the growth of this function as being in terms of the differences in time executions:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;데이터&quot;세트가 상당히 작 으면 처음에는 차이가 나쁘지 않을 수 있지만 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Case 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 &lt;/font&gt; &lt;code&gt;Case 2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 보다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;약 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;60 - 70%&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 느리기 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;때문에이 기능의 성장을 다음과 같이 볼 수 있습니다. 시간 실행의 차이점 :&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eca24602b960c6a890ccd38ee6f72f25af9a65d1" translate="yes" xml:space="preserve">
          <source>OK, the right answer definitely has to do something with the CPU cache. But to use the cache argument can be quite difficult, especially without data.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정답은 분명히 CPU 캐시와 관련이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 캐시 인수를 사용하는 것은 특히 데이터가 없으면 매우 어려울 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="580a776c6b642fccec58ff95f40d16a839dd873b" translate="yes" xml:space="preserve">
          <source>Observations:</source>
          <target state="translated">Observations:</target>
        </trans-unit>
        <trans-unit id="d4cd934a3267228345d82320582325609db4ac86" translate="yes" xml:space="preserve">
          <source>One loop: 1.577 ms</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하나의 루프 : 1.577ms&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="067285dbce4f2ae23a4e8256bf22a68036bb1d40" translate="yes" xml:space="preserve">
          <source>PPS: Here is the full code. It uses &lt;a href=&quot;https://www.threadingbuildingblocks.org/&quot;&gt;TBB&lt;/a&gt;&lt;code&gt;Tick_Count&lt;/code&gt; for higher resolution timing, which can be disabled by not defining the &lt;code&gt;TBB_TIMING&lt;/code&gt; Macro:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PPS : 전체 코드는 다음과 같습니다. &lt;/font&gt; &lt;code&gt;TBB_TIMING&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 매크로를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정의하지 않으면 비활성화 할 수있는 고해상도 타이밍에 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.threadingbuildingblocks.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TBB &lt;/font&gt;&lt;/font&gt;&lt;/a&gt; &lt;code&gt;Tick_Count&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="150892f3a6e1c9444336bf5fbf39ad8c8df7f488" translate="yes" xml:space="preserve">
          <source>PS: I am not sure, if this helps:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추신 : 이것이 도움이되는지 확실하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="37563549c2b48fdb7b187f4ea1cf03ceecec4985" translate="yes" xml:space="preserve">
          <source>PS: I changed the loops to count down to zero, and the combined method was marginally faster. Scratching my head. Note the new array sizing and loop counts.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추신 : 루프를 0으로 카운트 다운하도록 변경했으며 결합 된 방법이 약간 더 빠릅니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 머리를 긁적. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;새로운 배열 크기 및 루프 수를 확인하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="929017ada05ac8077c3ebc10b0f695a210b9db02" translate="yes" xml:space="preserve">
          <source>Proposal</source>
          <target state="translated">Proposal</target>
        </trans-unit>
        <trans-unit id="5f6bd53d4ce24c4aa4a3ee3123d8ab5b9cf113bb" translate="yes" xml:space="preserve">
          <source>Repeat for &lt;code&gt;c&lt;/code&gt; and &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대해 반복하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="52a60be214c602639707f5280f5a30ec124a81d3" translate="yes" xml:space="preserve">
          <source>Say &lt;code&gt;n = 2&lt;/code&gt; and we are working with bytes. In my scenario we thus have &lt;strong&gt;just 4 bytes of RAM&lt;/strong&gt; and the rest of our memory is significantly slower (say 100 times longer access).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;n = 2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 라고 말하면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;바이트로 작업하고 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 시나리오에서 우리는 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;단지 4 바이트의 RAM&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 가지고 있으며 나머지 메모리는 상당히 느립니다 (예 : 100 배 더 긴 액세스).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b768a5099eeede624e8fb1ccf0c00e1ae7bd2c7f" translate="yes" xml:space="preserve">
          <source>Since we are working with an 8 byte pointer and dealing with Heap allocation let's consider this problem here. Let us say that the &lt;code&gt;Boss&lt;/code&gt; is 100 feet from &lt;code&gt;A&lt;/code&gt; and that &lt;code&gt;A&lt;/code&gt; is 500 feet from &lt;code&gt;C&lt;/code&gt;. We don't need to worry about how far the &lt;code&gt;Boss&lt;/code&gt; is initially from &lt;code&gt;C&lt;/code&gt; because of the order of executions. In both cases the &lt;code&gt;Boss&lt;/code&gt; initially travels from &lt;code&gt;A&lt;/code&gt; first then to &lt;code&gt;B&lt;/code&gt;. This analogy isn't to say that this distance is exact; it is just a use test case scenario to show the workings of the algorithms. In many cases when doing heap allocations and working with the cache and page files, these distances between address locations may not vary that much in differences or they can very significantly depending on the nature of the data types and the array sizes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 8 바이트 포인터로 작업하고 힙 할당을 다루기 때문에 여기 에서이 문제를 고려해 봅시다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 100 피트 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 500 피트 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;라고 가정하겠습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실행 순서로 인해 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 처음에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로부터 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;얼마나 멀리 떨어져 있는지 걱정할 필요가 없습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 두 경우 모두 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 처음에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;B&lt;/code&gt; 로 이동합니다.&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 비유는이 거리가 정확하다고 말하는 것은 아닙니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;알고리즘의 작동을 보여주는 것은 단지 테스트 케이스 시나리오 일뿐입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;많은 경우 힙 할당을 수행하고 캐시 및 페이지 파일을 사용할 때 주소 위치 간의 거리는 크게 다르지 않거나 데이터 유형의 특성 및 배열 크기에 따라 크게 달라질 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b403afffa673d5c9286b0e779fa6f2102008bfda" translate="yes" xml:space="preserve">
          <source>So by these numbers it would almost look as if Algorithm One should be 99% slower than Algorithm Two; however, this is only the &lt;code&gt;The Boss's&lt;/code&gt; part or responsibility of the algorithms and it doesn't account for the actual workers &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;C&lt;/code&gt;, &amp;amp; &lt;code&gt;D&lt;/code&gt; and what they have to do on each and every iteration of the Loop. So the bosses job only accounts for about 15 - 40% of the total work being done. So the bulk of the work which is done through the workers has a slight bigger impact towards keeping the ratio of the speed rate differences to about 50-70%</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서이 숫자로 보면 알고리즘 1은 알고리즘 2보다 99 % 느려 야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 이것은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;알고리즘에 대한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;The Boss's&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 책임 또는 책임 일 뿐이며 실제 작업자 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;B&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;D&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 루프의 모든 반복에서 수행해야 할 작업을 설명하지는 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 보스 작업은 총 작업 중 약 15-40 % 만 차지합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 근로자를 통해 수행되는 대부분의 작업은 속도 차이의 비율을 약 50-70 %로 유지하는 데 약간 더 큰 영향을 미칩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d0c27d22f565b7d4dff65f8ce28522fe98c5a597" translate="yes" xml:space="preserve">
          <source>So trying to have the &lt;code&gt;Boss&lt;/code&gt; focusing on doing two similar things at once and juggling them back and forth instead of focusing on similar consecutive tasks  is going to make him quite angry by the end of the day because he had to travel and work twice as much. Therefor do not lose the scope of the situation by letting your boss getting into an interpolated bottleneck because the boss's spouse and children wouldn't appreciate it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 비슷한 두 가지 일에 집중하고 비슷한 연속 작업에 집중하는 대신 앞뒤로 저글링하도록 노력하는 것은 여행과 일을 두 배로 늘려야했기 때문에 하루가 끝날 때 그를 화나게 할 것입니다. . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 상사의 배우자와 자녀가 그것을 인정하지 않기 때문에 상사가 보간 된 병목에 빠지게함으로써 상황의 범위를 잃지 마십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c92f2896cb97a5cd76721e9be1ae06c663d9ea6d" translate="yes" xml:space="preserve">
          <source>Suppose &lt;code&gt;a1&lt;/code&gt;, &lt;code&gt;b1&lt;/code&gt;, &lt;code&gt;c1&lt;/code&gt;, and &lt;code&gt;d1&lt;/code&gt; point to heap memory and my numerical code has the following core loop.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 힙 메모리를 가리키고 숫자 코드에 다음 코어 루프가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있다고 가정하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ae49864322db83eb4df4027d1cc46e331bab97d8" translate="yes" xml:space="preserve">
          <source>That's why I combined his test (using a continuous vs. separate allocation) and @James' Answer's advice.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래서 나는 그의 테스트 (연속 대 별도 할당 사용)와 @James 'Answer의 조언을 결합했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d13556ea98fb233bf53b98bb4c31b76c5382d7df" translate="yes" xml:space="preserve">
          <source>The OP's code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;OP의 코드 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49a4378a00b62449fce4898fcf15f09e54099521" translate="yes" xml:space="preserve">
          <source>The first code modifies distant memory addresses alternating them at each loop, thus requiring continuously to invalidate the cache.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 코드는 각 루프에서 먼 메모리 주소를 번갈아 변경하여 캐시를 계속 무효화해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5ef3f200dc1df02296aa0d9d57d5f615abafce03" translate="yes" xml:space="preserve">
          <source>The first loop alternates writing in each variable. The second and third ones only make small jumps of element size.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 루프는 각 변수의 쓰기를 번갈아합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째와 세 번째는 요소 크기의 작은 점프 만합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="53b362c1ef639785451d5a3c807cb56df98f4cb6" translate="yes" xml:space="preserve">
          <source>The graphs below shows, that most of the answers and especially the majority of comments to the question and answers can be considered completely wrong or true depending on the exact scenario and parameters used.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래의 그래프는 사용 된 정확한 시나리오와 매개 변수에 따라 대부분의 답변, 특히 질문과 답변에 대한 대부분의 의견이 완전히 잘못되거나 참으로 간주 될 수 있음을 보여줍니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="11061dc8aadf1e63250f11fc975aecbd7a854095" translate="yes" xml:space="preserve">
          <source>The iterations through the first case &lt;code&gt;Sum&lt;/code&gt; calls &lt;code&gt;f(a)&lt;/code&gt; that will add to its self &lt;code&gt;f(b)&lt;/code&gt; then it calls &lt;code&gt;f(c)&lt;/code&gt; that will do the same but add &lt;code&gt;f(d)&lt;/code&gt; to itself for each &lt;code&gt;100000 iterations&lt;/code&gt;. In the second case we have &lt;code&gt;Sum1&lt;/code&gt; and &lt;code&gt;Sum2&lt;/code&gt; And both act the same as if they were the same function being called twice in a row.
In this case we can treat &lt;code&gt;Sum1&lt;/code&gt; and &lt;code&gt;Sum2&lt;/code&gt; as just plain old &lt;code&gt;Sum&lt;/code&gt; where &lt;code&gt;Sum&lt;/code&gt; in this case looks like this: &lt;code&gt;Sum n=1 : [1,100000] { f(a) = f(a) + f(b); }&lt;/code&gt; and now this looks like an optimization where we can just consider it to be the same function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 경우를 통해 반복 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sum&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 호출 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(a)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 그 자체를 추가하는 것 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(b)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 다음 호출 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(c)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 동일한 기능을 수행하지만, 추가한다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(d)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 각각 그 자체 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;100000 iterations&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 경우에는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sum1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sum2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 있으며 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;둘 다 동일한 함수가 연속으로 두 번 호출되는 것처럼 동일하게 작동합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우에 우리는 치료할 수 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sum1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sum2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 평범한 이전으로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sum&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 여기서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sum&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이런이 경우 외관에서 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Sum n=1 : [1,100000] { f(a) = f(a) + f(b); }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이제는 동일한 기능이라고 생각할 수있는 최적화처럼 보입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="839acec8e710ad109f431376a6eb49f7c7173d08" translate="yes" xml:space="preserve">
          <source>The performance drop in the single-loop is what we are observing. And as mentioned, this is due to the alignment which (most likely) causes &lt;strong&gt;&lt;em&gt;false aliasing&lt;/em&gt;&lt;/strong&gt; stalls in the processor load/store units.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;단일 루프의 성능 저하가 관찰하고 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;언급 한 바와 같이, 이것은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로세서로드 / 스토어 유닛에서 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가명 앨리어싱을&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 멈추게 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 정렬에 의한 것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="47a017a142106a11ba95f378f7d97256b0fed87e" translate="yes" xml:space="preserve">
          <source>The question turned out to be of no relevance, as the behavior severely depends on the sizes of the arrays (n) and the CPU cache. So if there is further interest, I rephrase the question:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 문제는 어레이의 크기 (n)와 CPU 캐시에 따라 크게 달라 지므로 관련성이없는 것으로 판명되었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 더 관심이 있다면, 나는 그 질문을 바꾸어 놓는다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="55e711a480f8599f3590ea8955ae90c25f96f446" translate="yes" xml:space="preserve">
          <source>The result using initialized data:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;초기화 된 데이터를 사용한 결과 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd12f7273e3c644dfeec1cc8b110b33e50ab5389" translate="yes" xml:space="preserve">
          <source>The result using uninitialized data (this is what Mysticial tested):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;초기화되지 않은 데이터를 사용한 결과 (Mysticial에서 테스트 한 결과) :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec79e2db350f70819922aeda7c7c4a134df70af6" translate="yes" xml:space="preserve">
          <source>The second code don't alternate: it just flow on adjacent addresses twice. This makes all the job to be completed in the cache, invalidating it only after the second loop starts.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 코드는 대체되지 않습니다. 인접한 주소에서 두 번만 흐릅니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이렇게하면 모든 작업이 캐시에서 완료되고 두 번째 루프가 시작된 후에 만 ​​무효화됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="962b2d1921173e1b25de62eb8401f26848105752" translate="yes" xml:space="preserve">
          <source>The second loop involves a lot less cache activity, so it's easier for the processor to keep up with the memory demands.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 루프는 캐시 작업이 훨씬 적으므로 프로세서가 메모리 요구를보다 쉽게 ​​처리 할 수 ​​있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b406d7fb1215ac51706584a1368661dc6d6bb19f" translate="yes" xml:space="preserve">
          <source>There are many answers, that led to a lot of discussion, but let's face it: Cache issues can be very complex and are not one dimensional. They depend heavily on the size of the data, so my question was unfair: It turned out to be at a very interesting point in the cache graph.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;캐시에 대한 문제는 매우 복잡하고 일차원 적이 지 않을 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그들은 데이터의 크기에 크게 의존하므로 내 질문은 불공평했습니다. 캐시 그래프에서 매우 흥미로운 점으로 밝혀졌습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1dde209c4b83d4186745de8cde5c487345b16c11" translate="yes" xml:space="preserve">
          <source>There seems to be a little confusion/misunderstanding here so I will try to elaborate a little using an example.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에 약간의 혼란 / 오해가있는 것처럼 보이므로 예제를 사용하여 조금 더 자세히 설명하려고 노력할 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="13059574a86e8647f17f49a9a0b752694791c080" translate="yes" xml:space="preserve">
          <source>Think of the &lt;code&gt;For Loops&lt;/code&gt; as being the &lt;code&gt;Summations&lt;/code&gt; that does the iterations as being a &lt;code&gt;Boss&lt;/code&gt; that is giving orders to two people &lt;code&gt;A&lt;/code&gt; &amp;amp; &lt;code&gt;B&lt;/code&gt; and that their jobs are to meat &lt;code&gt;C&lt;/code&gt; &amp;amp; &lt;code&gt;D&lt;/code&gt; respectively and to pick up some package from them and return it. In the analogy here the for loop or summation iterations and condition checks themselves doesn't actually represent the &lt;code&gt;Boss&lt;/code&gt;. What actually represents the &lt;code&gt;Boss&lt;/code&gt; here is not from the actual mathematical algorithms directly, but from the actual concept of &lt;code&gt;Scope&lt;/code&gt; and &lt;code&gt;Code Block&lt;/code&gt; within a routine or sub-routine, method, function, translation unit, etc. The first algorithm has 1 scope where the 2nd algorithm has 2 consecutive scopes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 생각 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;For Loops&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 것으로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Summations&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있는 Being으로 반복을 수행 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이명에 주문을주고있다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;amp; &lt;/font&gt; &lt;code&gt;B&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 자신의 작업 고기 것을 &lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;amp; &lt;/font&gt; &lt;code&gt;D&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 각각 그들에서 일부 패키지를 선택하고 그것을 반환 할 수 있습니다. 여기 비유에서 for 루프 또는 합산 반복 및 조건 확인 자체는 실제로 &lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 나타내지 않습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 실제로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 &lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 나타내는 것은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제 수학적 알고리즘이 아니라 실제 &lt;/font&gt; &lt;code&gt;Scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt; &lt;code&gt;Code Block&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 개념입니다.&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 루틴 또는 서브 루틴, 방법, 함수, 변환 단위 등에서 첫 번째 알고리즘은 1 범위를 가지며 두 번째 알고리즘은 2 개의 연속 범위를 갖습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d22a1fbb64d76304433f24947bf410c0f8af3df" translate="yes" xml:space="preserve">
          <source>This is a classic cache thrash scenario.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 전형적인 캐시 스 래시 시나리오입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b8ffc8c4ef1a03c73bb9e0821c047ab1262b9819" translate="yes" xml:space="preserve">
          <source>This loop is executed 10,000 times via another outer &lt;code&gt;for&lt;/code&gt; loop. To speed it up, I changed the code to:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 루프는 다른 외부 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;for&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 루프 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 통해 10,000 번 실행 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;속도를 높이기 위해 코드를 다음과 같이 변경했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fdc4cb320e8145a3a5607c0217bc3a252c1582a3" translate="yes" xml:space="preserve">
          <source>This means that all your accesses in each loop will fall on the same cache way. However, Intel processors have had 8-way L1 cache associativity for a while. But in reality, the performance isn't completely uniform. Accessing 4-ways is still slower than say 2-ways.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, 각 루프의 모든 액세스는 동일한 캐시 방식에 속합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 인텔 프로세서는 8-way L1 캐시 연관성을 가지고있었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 실제로는 성능이 완전히 균일하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;4-way에 액세스하는 것은 여전히 ​​2-way보다 느립니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="116c64a804cda018eff54aace684b048096784b8" translate="yes" xml:space="preserve">
          <source>This one is easy. The dataset is so small that the performance is dominated by overhead like looping and branching.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 쉽다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;데이터 세트가 너무 작아서 루핑 및 분기와 같은 오버 헤드가 성능을 좌우합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b993a65de9f293825c5e5d9683062a32d8b141b3" translate="yes" xml:space="preserve">
          <source>Total cost = &lt;code&gt;(100 + 100 + 1 + 1) * 2 = 404&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;총 비용 = &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(100 + 100 + 1 + 1) * 2 = 404&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19d3bb17d59a55f8338d5c4fce0ae33dc728b87f" translate="yes" xml:space="preserve">
          <source>Total cost = &lt;code&gt;(100 + 100 + 100 + 100) * 2 = 800&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;총 비용 = &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(100 + 100 + 100 + 100) * 2 = 800&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="03360fc5f946227bc07190906ff6d7139444c907" translate="yes" xml:space="preserve">
          <source>Try writing two parallel lines of 20 crosses with a pen and paper separated by 20&amp;nbsp;cm. Try once finishing one and then the other line and try another time by writting a cross in each line alternately.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;펜과 종이로 20cm 분리 된 20 개의 십자선 두 줄을 써보십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한 줄을 끝내고 다른 줄을 끝내고 각 줄에 십자가를 번갈아 가며 다시 시도하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="53bfab4d116eca32e1091f50ff7bca7f57441a62" translate="yes" xml:space="preserve">
          <source>Two loops: 1.507 ms</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 개의 루프 : 1.507ms&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="466d5a25d4be7521ae09c87f6a46e0b628a3542a" translate="yes" xml:space="preserve">
          <source>Upon further analysis of this, I believe this is (at least partially) caused by data alignment of the four pointers. This will cause some level of cache bank/way conflicts.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것에 대한 추가 분석에 따르면, 이것은 네 포인터의 데이터 정렬에 의해 (적어도 부분적으로) 발생한다고 생각합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이로 인해 일정 수준의 캐시 뱅크 / 웨이 충돌이 발생합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cfeab75af6e84b33c6a6527778a734b3d9e7b1ed" translate="yes" xml:space="preserve">
          <source>We can easily see that 600 is far less than 10 million. Now this isn't exact, because we don't know the actual difference in distance between which address of RAM or from which Cache or Page File each call on each iteration is going to be due to many other unseen variables, but this is just an assessment of the situation to be aware of and trying to look at it from the worst case scenario.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;600이 천만보다 훨씬 적다는 것을 쉽게 알 수 있습니다. RAM의 주소 또는 각 반복마다 호출 할 때마다 캐시 또는 페이지 파일 사이의 거리의 실제 차이를 알지 못하기 때문에 이것은 정확하지 않습니다. 그러나 이것은 보이지 않는 많은 변수 때문입니다. 최악의 시나리오에서 상황을 인식하고 보려는 상황에 대한 평가.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc174d905f4eb44c872c08d03546c6a40948ee8c" translate="yes" xml:space="preserve">
          <source>We do not know how long it will take for each case unless if we set a counter and run a bench mark test. However the bench marks were already included from the original question and from some of the answers and comments as well and we can see a significant difference between the two and this is the whole reasoning of this question to this problem and for the answering of it to begin with.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;카운터를 설정하고 벤치 마크 테스트를 실행하지 않으면 각 경우에 걸리는 시간을 모릅니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 벤치 마크는 이미 원래 질문과 일부 답변 및 의견에서 이미 포함되어 있으며이 둘 사이의 중요한 차이점을 알 수 있습니다.이 질문에 대한이 질문과 그에 대한 대답에 대한 전체 추론입니다. 로 시작하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0e08bbd8348ea9fc71c47393bb70640f1c01606b" translate="yes" xml:space="preserve">
          <source>We know is that his loop will run 100,000 times. We also know that &lt;code&gt;a1&lt;/code&gt;, &lt;code&gt;b1&lt;/code&gt;, &lt;code&gt;c1&lt;/code&gt; &amp;amp; &lt;code&gt;d1&lt;/code&gt; are pointers on a 64-bit architecture. Within C++ on a 32-bit machine all pointers are 4 bytes and on a 64-bit machine they are 8 bytes in size since pointers are of a fixed length. We know that we have 32 bytes in which to allocate for in both cases. The only difference is we are allocating 32 bytes or 2 sets of 2-8bytes on each iteration where in the 2nd case we are allocating 16 bytes for each iteration for both of the independent loops. So both loops still equals 32 bytes in total allocations. With this information let's go ahead and show the general math, algorithm and analogy of it. We do know the amount of times that the same set or group of operations will have to be performed in both cases. We do know the amount of memory that needs to be allocated in both cases. We can asses that the overall work load of the allocations between both cases will be approximately the same.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 그의 루프가 100,000 번 실행된다는 것을 알고 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 또한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;amp; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;64 비트 아키텍처의 포인터입니다. 32 비트 시스템의 C ++에서 모든 포인터는 4 바이트이고 64 비트 시스템에서는 포인터의 길이가 고정되어 있으므로 8 바이트 크기입니다. 우리는 두 경우 모두에 할당 할 32 바이트가 있다는 것을 알고 있습니다. 유일한 차이점은 각 반복마다 32 바이트 또는 2 세트의 8-8 바이트를 할당한다는 것입니다. 두 번째 경우에는 두 개의 독립 루프 모두에 대해 각 반복마다 16 바이트를 할당합니다. 따라서 두 루프는 여전히 총 ​​할당에서 32 바이트와 같습니다. 이 정보를 가지고 일반적인 수학, 알고리즘 및 그 비유를 보여 드리겠습니다. 두 경우 모두 동일한 세트 또는 작업 그룹이 수행되어야하는 횟수를 알고 있습니다. 두 경우 모두 할당해야 할 메모리 양을 알고 있습니다.우리는 두 경우 사이에 할당의 전체 작업 부하가 거의 동일하다고 주장 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6fe2e5f01c8d98ddfcee1b601d0fceb67a183e49" translate="yes" xml:space="preserve">
          <source>We will let our loop and its iterations be a Summation that starts at 1 and ends at 100000 instead of starting with 0 as in the loops for we don't need to worry about the 0 indexing scheme of memory addressing since we are just interested in the algorithm itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;루프에서와 같이 루프와 반복이 0에서 시작하는 대신 1에서 시작하여 100000에서 끝나는 Summation이되도록하겠습니다. 알고리즘 자체.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92ea6c5b9c179b6799de261eafa3d472f7094b3e" translate="yes" xml:space="preserve">
          <source>Why are elementwise additions much faster in separate loops than in a combined loop</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결합 루프보다 개별 루프에서 요소 별 추가가 더 빠른 이유&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="18d746b56edfc3b8c8160872d27b4b8ee0118420" translate="yes" xml:space="preserve">
          <source>Why is one loop so much slower than two loops?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;왜 하나의 루프가 두 개의 루프보다 훨씬 느립니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="564f8c6e76fbd512be2e38dabdfdd61550d0c3cc" translate="yes" xml:space="preserve">
          <source>With</source>
          <target state="translated">With</target>
        </trans-unit>
        <trans-unit id="4b65d240f83b92820bd73e3c9a1ea691dbb385f6" translate="yes" xml:space="preserve">
          <source>With what we seen in the second case it almost appears as if there is optimization since both for loops have the same exact signature, but this isn't the real issue. The issue isn't the work that is being done by &lt;code&gt;f(a)&lt;/code&gt;,&lt;code&gt;f(b)&lt;/code&gt;,&lt;code&gt;f(c)&lt;/code&gt;&amp;amp;&lt;code&gt;f(d)&lt;/code&gt; in both cases and the comparison between the two it is the difference in the distance that the Summation has to travel in both cases that gives you the difference in time execution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 경우에서 보았 듯이 두 for 루프 모두 동일한 정확한 서명을 가지기 때문에 최적화가있는 것처럼 거의 보이지만 실제 문제는 아닙니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문제는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 경우 모두 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(a)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(b)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(c)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;amp; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f(d)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의해 수행되는 작업이 아니며 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;둘 사이의 비교는 Summation 거리의 차이입니다 두 가지 경우 모두 시간 실행의 차이를 제공하는 이동해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5b289bf7d150d141a9a06f034bc238a251f98430" translate="yes" xml:space="preserve">
          <source>Within the first case on each call slip the &lt;code&gt;Boss&lt;/code&gt; goes to &lt;code&gt;A&lt;/code&gt; and gives the order and &lt;code&gt;A&lt;/code&gt; goes off to fetch &lt;code&gt;B's&lt;/code&gt; package then the &lt;code&gt;Boss&lt;/code&gt; goes to &lt;code&gt;C&lt;/code&gt; and gives the orders to do the same and receive the package from &lt;code&gt;D&lt;/code&gt; on each iteration.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;각 통화의 첫 번째 케이스 내에서 미끄러 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 이동 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;과 순서를 제공하고 &lt;/font&gt; &lt;code&gt;A&lt;/code&gt; 가&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가져 꺼집니다 &lt;/font&gt; &lt;code&gt;B's&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 다음 패키지를 &lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 이동 &lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와에서 패키지를 동일한 작업을 수행하고받을 수있는 명령을 제공 &lt;/font&gt; &lt;code&gt;D&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 각 반복에.&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39b360ce4a3ca0bb5ddbee9c9161b830580197e7" translate="yes" xml:space="preserve">
          <source>Within the second case the &lt;code&gt;Boss&lt;/code&gt; works directly with &lt;code&gt;A&lt;/code&gt; to go and fetch &lt;code&gt;B's&lt;/code&gt; package until all packages are received. Then the &lt;code&gt;Boss&lt;/code&gt; works with &lt;code&gt;C&lt;/code&gt; to do the same for getting all of &lt;code&gt;D's&lt;/code&gt; packages.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 경우에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 직접 작업하여 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 패키지를받을 때까지 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;B's&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 패키지를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가져옵니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 그런 다음 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Boss&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 함께 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;D's&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 패키지 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 가져 오기 위해 동일한 작업을 수행 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3110f136849c94cb9d21af5da4f6ed9ad5781ffe" translate="yes" xml:space="preserve">
          <source>You are probably not seeing disk caching in your tests but you are probably seeing the side effects of some other form of caching.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트에서 디스크 캐싱이 표시되지 않지만 다른 형태의 캐싱의 부작용이 표시 될 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d64399c3ca292db5e91589fa738bc463f2006e98" translate="yes" xml:space="preserve">
          <source>cache &lt;code&gt;a[0]&lt;/code&gt; and &lt;code&gt;a[1]&lt;/code&gt; then &lt;code&gt;b[0]&lt;/code&gt; and &lt;code&gt;b[1]&lt;/code&gt; and set &lt;code&gt;a[0] = a[0] + b[0]&lt;/code&gt; in cache - there are now four bytes in cache, &lt;code&gt;a[0], a[1]&lt;/code&gt; and &lt;code&gt;b[0], b[1]&lt;/code&gt;. Cost = 100 + 100.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;캐시 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 다음 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 설정 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a[0] = a[0] + b[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서의 캐시 - 캐시 4 바이트 현재 존재 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a[0], a[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b[0], b[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비용 = 100 + 100&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="684691450b6f67d64ea5716630cb055d1cdb5528" translate="yes" xml:space="preserve">
          <source>eject &lt;code&gt;a[0], a[1], b[0], b[1]&lt;/code&gt; from cache and cache &lt;code&gt;c[0]&lt;/code&gt; and &lt;code&gt;c[1]&lt;/code&gt; then &lt;code&gt;d[0]&lt;/code&gt; and &lt;code&gt;d[1]&lt;/code&gt; and set &lt;code&gt;c[0] = c[0] + d[0]&lt;/code&gt; in cache. Cost = 100 + 100.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;토출 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a[0], a[1], b[0], b[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 캐시에서 캐시 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 다음 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 집합 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c[0] = c[0] + d[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 캐시의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;c [0] + d [0] &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비용 = 100 + 100&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a45d1263f7e0797a6fe6f7b721f3312f94b14dd6" translate="yes" xml:space="preserve">
          <source>set &lt;code&gt;a[1] = a[1] + b[1]&lt;/code&gt; in cache. Cost = 1 + 1.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;세트 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a[1] = a[1] + b[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 캐시. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비용 = 1 + 1&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e726e4b336529f67262f81f3ff5432cad1d3985d" translate="yes" xml:space="preserve">
          <source>the other loop</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 루프&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="871fc8b4792054b058d6099d151b8f4a8322450f" translate="yes" xml:space="preserve">
          <source>will page out two arrays and page in the other two &lt;strong&gt;every time around the loop&lt;/strong&gt;. This would obviously be &lt;strong&gt;much&lt;/strong&gt; slower.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;루프 주위에서 매번&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 두 배열을 페이징하고 다른 배열을 페이징 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 분명히 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;훨씬&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 느려질 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30905af2bb584e30c36e5d7802c5f32420f342d3" translate="yes" xml:space="preserve">
          <source>would first cause &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to be loaded into RAM and then be worked on entirely in RAM. When the second loop starts, &lt;code&gt;c&lt;/code&gt; and &lt;code&gt;d&lt;/code&gt; would then be loaded from disk into RAM and operated on.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;먼저 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 RAM에로드 된 다음 RAM에서 완전히 작동합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 루프가 시작되면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 디스크에서 RAM으로로드되어 작동합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
