<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/1129216">
    <body>
      <group id="1129216">
        <trans-unit id="eaf05f38df1e96b1e29758bb7fe11f67f45b3238" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;https://lodash.com/docs/4.17.10#orderBy&quot;&gt;https://lodash.com/docs/4.17.10#orderBy&lt;/a&gt;)</source>
          <target state="translated">(&lt;a href=&quot;https://lodash.com/docs/4.17.10#orderBy&quot;&gt;https://lodash.com/docs/4.17.10#orderBy&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="0790bb335f7e76d0fc0cbae8da7900ffe6d0e869" translate="yes" xml:space="preserve">
          <source>(Array): Returns the new sorted array.</source>
          <target state="translated">(Массив):Возвращает новый отсортированный массив.</target>
        </trans-unit>
        <trans-unit id="5be6a3762f19b74cbbb70dc39b4a2ed96cda2b8b" translate="yes" xml:space="preserve">
          <source>...and it will work when you do:</source>
          <target state="translated">...и это сработает,когда ты это сделаешь:</target>
        </trans-unit>
        <trans-unit id="408d5dc1c2e5d3cc3cfc29c9c02f09ec45157ced" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://lodash.com&quot;&gt;Lodash.js&lt;/a&gt; (superset of &lt;a href=&quot;http://underscorejs.org&quot;&gt;Underscore.js&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;https://lodash.com&quot;&gt;Lodash.js&lt;/a&gt; (расширенный набор &lt;a href=&quot;http://underscorejs.org&quot;&gt;Underscore.js&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="2fbb80ca28b5ca5da68cfdc28258d11b3e76b0ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.localeCompare(b)&lt;/code&gt; is &lt;a href=&quot;https://caniuse.com/#feat=localecompare&quot;&gt;universally supported&lt;/a&gt; and returns -1,0,1 if &lt;code&gt;a&amp;lt;b&lt;/code&gt;,&lt;code&gt;a==b&lt;/code&gt;,&lt;code&gt;a&amp;gt;b&lt;/code&gt; respectively.</source>
          <target state="translated">&lt;code&gt;a.localeCompare(b)&lt;/code&gt; &lt;a href=&quot;https://caniuse.com/#feat=localecompare&quot;&gt;поддерживается повсеместно&lt;/a&gt; и возвращает -1,0,1, если &lt;code&gt;a&amp;lt;b&lt;/code&gt; , &lt;code&gt;a==b&lt;/code&gt; , &lt;code&gt;a&amp;gt;b&lt;/code&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="d2b655557e5811bc33a49b582a01a2785e6e0481" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sortBy()&lt;/code&gt; accepts a &lt;code&gt;fn&lt;/code&gt; that selects what value from an object to use as comparison, and returns a function that can be passed directly to &lt;code&gt;Array.prototype.sort()&lt;/code&gt;. In this example, we're using &lt;code&gt;o.last_nom&lt;/code&gt; as the value for comparison, so whenever we receive two objects through &lt;code&gt;Array.prototype.sort()&lt;/code&gt; such as</source>
          <target state="translated">&lt;code&gt;sortBy()&lt;/code&gt; принимает &lt;code&gt;fn&lt;/code&gt; , который выбирает какое значение из объекта для использования в качестве сравнения, и возвращает функцию, которая может быть передана непосредственно в &lt;code&gt;Array.prototype.sort()&lt;/code&gt; . В этом примере мы используем &lt;code&gt;o.last_nom&lt;/code&gt; в качестве значения для сравнения, поэтому всякий раз, когда мы получаем два объекта через &lt;code&gt;Array.prototype.sort()&lt;/code&gt; например</target>
        </trans-unit>
        <trans-unit id="8d69f20040f5417a3026a30cd8ea8fd591b92b21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;||&lt;/code&gt; in the last line gives &lt;code&gt;last_nom&lt;/code&gt; priority over &lt;code&gt;first_nom&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;||&lt;/code&gt; в последней строке &lt;code&gt;last_nom&lt;/code&gt; приоритет &lt;code&gt;first_nom&lt;/code&gt; над first_nom .</target>
        </trans-unit>
        <trans-unit id="685e1c5e75fb15c812f0b257c14cb0fdc409a39f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A generic comparision function&lt;/strong&gt; could be something like this:</source>
          <target state="translated">&lt;strong&gt;Универсальная функция сравнения&lt;/strong&gt; может выглядеть примерно так:</target>
        </trans-unit>
        <trans-unit id="56e775da82b01487c7f6ddf6c7ff16cd7c53673d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Arguments&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="06987eb9f0a91d213c532d8530bc7493f4b21909" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example / Usage&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Пример / Использование&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b23cf99ce5b83818e9d5ef595e650e2420ebc090" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Returns&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d3b5280a037ea15a0211f841003278d82fb7548a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The simplest form&lt;/strong&gt; has only one inlined function like this:</source>
          <target state="translated">&lt;strong&gt;Самая простая форма&lt;/strong&gt; имеет только одну встроенную функцию, например:</target>
        </trans-unit>
        <trans-unit id="0a648cd0606cca5d79438d4f156e8c36af2fbb7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;UPDATE&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08701bdc2f148d3c876ad1f088849e6bab353367" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update:&lt;/strong&gt; No longer modifies original array.</source>
          <target state="translated">&lt;strong&gt;Обновление:&lt;/strong&gt; больше не изменяет исходный массив.</target>
        </trans-unit>
        <trans-unit id="22efa9ea9cd26617deceabed98baab042f532ac6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;npm install ramda&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;нпм установить рамду&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="deadfc786056b1159b1820f2c0a8d6f4c1fdbc62" translate="yes" xml:space="preserve">
          <source>A simple function that sort an array of object by a property</source>
          <target state="translated">Простая функция,которая сортирует массив объектов по свойству</target>
        </trans-unit>
        <trans-unit id="e659c76ad7390f47c77fa0c7812bd1f6685ca69a" translate="yes" xml:space="preserve">
          <source>A simple sort function (based on &lt;strong&gt;quick-sort&lt;/strong&gt; algorithm):</source>
          <target state="translated">Простая функция сортировки (на основе алгоритма &lt;strong&gt;быстрой сортировки&lt;/strong&gt; ):</target>
        </trans-unit>
        <trans-unit id="3f05dcbec3e472873d916b9f87770e17bd0e6655" translate="yes" xml:space="preserve">
          <source>A simple way:</source>
          <target state="translated">Простой способ:</target>
        </trans-unit>
        <trans-unit id="685fbc533bb200a572c948ebc9776967065b1366" translate="yes" xml:space="preserve">
          <source>Acording your example, you need to sort by two fields (last name, first name), rather then one. You can use &lt;a href=&quot;http://github.com/agershun/alasql&quot;&gt;Alasql&lt;/a&gt; library to make this sort in one line:</source>
          <target state="translated">Согласно вашему примеру, вам нужно отсортировать по двум полям (фамилия, имя), а не по одному. Вы можете использовать библиотеку &lt;a href=&quot;http://github.com/agershun/alasql&quot;&gt;Alasql,&lt;/a&gt; чтобы сделать эту сортировку одной строкой:</target>
        </trans-unit>
        <trans-unit id="afb583ef1819a5e62dc5b6a9ddb084833c571128" translate="yes" xml:space="preserve">
          <source>Actually this already answers the question. Below part is written because many people contacted me, complaining that &lt;a href=&quot;https://stackoverflow.com/questions/11379361&quot;&gt;it doesn't work with multiple parameters&lt;/a&gt;.</source>
          <target state="translated">На самом деле это уже отвечает на вопрос. Ниже написано, что со мной связались многие, жалуясь, что &lt;a href=&quot;https://stackoverflow.com/questions/11379361&quot;&gt;он не работает с несколькими параметрами&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="faf258efe8955c8bef8669c5d530323dfa07aab3" translate="yes" xml:space="preserve">
          <source>And now you can sort by &lt;strong&gt;a.a.&lt;/strong&gt; this way:</source>
          <target state="translated">И теперь вы можете сортировать по этому пути:</target>
        </trans-unit>
        <trans-unit id="2d4ffa4fbc463d1f4c84aa72ef5b4bd48e76e580" translate="yes" xml:space="preserve">
          <source>Are more pluggable version based on &lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/users/300011/ege-%C3%96zcan&quot;&gt;@ege-&amp;Ouml;zcan&lt;/a&gt;&lt;/strong&gt;'s very lovely &lt;a href=&quot;https://stackoverflow.com/a/4760279/3580261&quot;&gt;answer&lt;/a&gt;.</source>
          <target state="translated">Более подключаемая версия, основанная на очень милом &lt;a href=&quot;https://stackoverflow.com/a/4760279/3580261&quot;&gt;ответе&lt;/a&gt; &lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/users/300011/ege-%C3%96zcan&quot;&gt;@ ege-&amp;Ouml;zcan&lt;/a&gt;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="2666ae133c768dd72d8cf52ff198d969577f7a8a" translate="yes" xml:space="preserve">
          <source>As an added bonus, here's the equivalent in ECMAScript 5 without arrow functions, which is unfortunately more verbose:</source>
          <target state="translated">В качестве дополнительного бонуса,вот эквивалент в ECMAScript 5 без функций стрелок,который,к сожалению,более многословен:</target>
        </trans-unit>
        <trans-unit id="01b5196235994cc09856af607292d53c4f28d84a" translate="yes" xml:space="preserve">
          <source>As of 2018 there is a much shorter and elegant solution. Just use. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort&quot;&gt;Array.prototype.sort()&lt;/a&gt;.</source>
          <target state="translated">По состоянию на 2018 год существует гораздо более короткое и элегантное решение. Просто используйте. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort&quot;&gt;Array.prototype.sort ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="456c2ee19dd778e84e853719ba56200915177c7e" translate="yes" xml:space="preserve">
          <source>Combining Ege's dynamic solution with Vinay's idea, you get a nice robust solution:</source>
          <target state="translated">Сочетая динамическое решение Ege с идеей Vinay,вы получаете отличное надежное решение:</target>
        </trans-unit>
        <trans-unit id="ce98bea7e1a501ce976cc1218cb3ef55962e86cc" translate="yes" xml:space="preserve">
          <source>Don't get why people make it so complicated:</source>
          <target state="translated">Не понимаю,почему люди все так усложняют:</target>
        </trans-unit>
        <trans-unit id="d2864d98334ee8c93f0f6b1e3ea43bc60c2262c2" translate="yes" xml:space="preserve">
          <source>Easiest Way: &lt;em&gt;Lodash&lt;/em&gt;</source>
          <target state="translated">Самый простой способ: &lt;em&gt;Lodash&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="30d9e9e6f4ce5ea49de6402830c224a348be7a83" translate="yes" xml:space="preserve">
          <source>Example Usage:</source>
          <target state="translated">Пример использования:</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Расширить фрагмент</target>
        </trans-unit>
        <trans-unit id="a6646b9e4fb32dfe65aae73cdc7b36ce845efbbb" translate="yes" xml:space="preserve">
          <source>Explanation: &lt;code&gt;Number()&lt;/code&gt; will cast &lt;code&gt;true&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Объяснение: &lt;code&gt;Number()&lt;/code&gt; приведёт &lt;code&gt;true&lt;/code&gt; к &lt;code&gt;1&lt;/code&gt; и &lt;code&gt;false&lt;/code&gt; к &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c9084f8bf17308954515f726d9aa2ab360371fc" translate="yes" xml:space="preserve">
          <source>For stricter engines:</source>
          <target state="translated">Для более строгих двигателей:</target>
        </trans-unit>
        <trans-unit id="29914a14e4783736af4edcbc897367dc32baec6f" translate="yes" xml:space="preserve">
          <source>For the lucky among us who can use ES6, which allows extending the native objects:</source>
          <target state="translated">Для счастливчиков,которые могут использовать ES6,позволяющую расширять родные объекты:</target>
        </trans-unit>
        <trans-unit id="f5f064cab7823d7f1af5bb658e354f5fbacef208" translate="yes" xml:space="preserve">
          <source>From Beauchamp's comment:</source>
          <target state="translated">Из комментария Бошана:</target>
        </trans-unit>
        <trans-unit id="b5244b39f418aae4ec7e158ecde66ac93b5bed47" translate="yes" xml:space="preserve">
          <source>Given the original example:</source>
          <target state="translated">Учитывая первоначальный пример:</target>
        </trans-unit>
        <trans-unit id="9fe00acebc106e4dba1611cdd1d7dc308a244991" translate="yes" xml:space="preserve">
          <source>Goal</source>
          <target state="translated">Goal</target>
        </trans-unit>
        <trans-unit id="ec77c96f2ea6de7752b19589a9c7854150babc9c" translate="yes" xml:space="preserve">
          <source>Having two steps with  &lt;code&gt;last_nom&lt;/code&gt;,&lt;code&gt;first_nom&lt;/code&gt; sort order would look like this:</source>
          <target state="translated">При &lt;code&gt;last_nom&lt;/code&gt; двух шагов с last_nom &lt;code&gt;first_nom&lt;/code&gt; сортировки first_nom будет выглядеть следующим образом:</target>
        </trans-unit>
        <trans-unit id="36021a2a2d56e070889a084872be9cddb9dea599" translate="yes" xml:space="preserve">
          <source>Here's an example how to use it:</source>
          <target state="translated">Вот пример,как его использовать:</target>
        </trans-unit>
        <trans-unit id="2d4671d139bae00bf1fd9c9025be736bc9475a2f" translate="yes" xml:space="preserve">
          <source>Here's an explanation of &lt;code&gt;sortBy()&lt;/code&gt;:</source>
          <target state="translated">Вот объяснение &lt;code&gt;sortBy()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="920de43dceff485c0a2a304489399c01e63d4469" translate="yes" xml:space="preserve">
          <source>How can I sort them by the value of &lt;code&gt;last_nom&lt;/code&gt; in JavaScript?</source>
          <target state="translated">Как я могу отсортировать их по значению &lt;code&gt;last_nom&lt;/code&gt; в JavaScript?</target>
        </trans-unit>
        <trans-unit id="0695135cf1588e47d94043db05a76659514ee112" translate="yes" xml:space="preserve">
          <source>I Just enhanced &lt;a href=&quot;https://stackoverflow.com/users/300011&quot;&gt;Ege &amp;Ouml;zcan&lt;/a&gt;'s dynamic sort to dive deep inside objects. 
If Data looks like this:</source>
          <target state="translated">Я только что улучшил динамическую сортировку &lt;a href=&quot;https://stackoverflow.com/users/300011&quot;&gt;Ege &amp;Ouml;zcan,&lt;/a&gt; чтобы погрузиться глубоко в объекты. Если данные выглядят так:</target>
        </trans-unit>
        <trans-unit id="deb98bae67998bc28426378d56c1ba385d0c50fe" translate="yes" xml:space="preserve">
          <source>I encountered the below and couldn't change it. I also did not want to flatten the object temporarily. Nor did I want to use underscore / lodash, mainly for performance reasons and the fun to implement it myself.</source>
          <target state="translated">Я столкнулся с нижерасположенным и не смог его изменить.Также я не хотел временно сглаживать объект.Также я не хотел использовать подчеркнутость,в основном из соображений производительности и удовольствия,чтобы реализовать его самостоятельно.</target>
        </trans-unit>
        <trans-unit id="37de85c49081f9b0188ef6e799c866a4ffb94a49" translate="yes" xml:space="preserve">
          <source>I have an array of JavaScript objects:</source>
          <target state="translated">У меня есть массив объектов JavaScript:</target>
        </trans-unit>
        <trans-unit id="5ccfae868d44dc0f2309722b194930082a3e07ba" translate="yes" xml:space="preserve">
          <source>I haven't seen this particular approach suggested, so here's a terse comparison method I like to use that works for both &lt;code&gt;string&lt;/code&gt; and &lt;code&gt;number&lt;/code&gt;:</source>
          <target state="translated">Я не видел, чтобы этот конкретный подход предлагался, поэтому вот краткий метод сравнения, который мне нравится использовать, который работает как для &lt;code&gt;string&lt;/code&gt; и для &lt;code&gt;number&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1e8a344759f3534cd3101c2256dd217071e4142d" translate="yes" xml:space="preserve">
          <source>I know about &lt;code&gt;sort(a,b)&lt;/code&gt;, but that only seems to work on strings and numbers. Do I need to add a &lt;code&gt;toString()&lt;/code&gt; method to my objects?</source>
          <target state="translated">Я знаю о &lt;code&gt;sort(a,b)&lt;/code&gt; , но это, кажется, работает только со строками и числами. Нужно ли добавлять метод &lt;code&gt;toString()&lt;/code&gt; к моим объектам?</target>
        </trans-unit>
        <trans-unit id="566e004b73b9018eb725b5fdc9b8d3360d31a45b" translate="yes" xml:space="preserve">
          <source>I know this question is too old, but I didn't see any implementation similar to mine.</source>
          <target state="translated">Я знаю,что этот вопрос слишком старый,но я не видел ни одной реализации,похожей на мою.</target>
        </trans-unit>
        <trans-unit id="a1d0c8f6643e4ddc30d0b0123a0a896879200493" translate="yes" xml:space="preserve">
          <source>If you have duplicate last names you might sort those by first name-</source>
          <target state="translated">Если у вас есть дубликаты фамилий,вы можете отсортировать их по имени...</target>
        </trans-unit>
        <trans-unit id="d35b04aa4945989fb22d68c7ff3bc7cf3e4a90b5" translate="yes" xml:space="preserve">
          <source>In ES6/ES2015 or later you can do this way:</source>
          <target state="translated">В ES6ES2015 или более поздней версии вы можете сделать это:</target>
        </trans-unit>
        <trans-unit id="961f8b9db6ec89bd40419165049dd198b8de05d3" translate="yes" xml:space="preserve">
          <source>Instead of using a custom comparison function, you could also create an object type with custom &lt;code&gt;toString()&lt;/code&gt; method (which is invoked by the default comparison function):</source>
          <target state="translated">Вместо использования пользовательской функции сравнения вы также можете создать тип объекта с помощью пользовательского метода &lt;code&gt;toString()&lt;/code&gt; (который вызывается функцией сравнения по умолчанию):</target>
        </trans-unit>
        <trans-unit id="c479a7c903cc8488af2afc7efd5943796202691f" translate="yes" xml:space="preserve">
          <source>It's easy enough to write your own comparison function:</source>
          <target state="translated">Достаточно просто написать свою собственную функцию сравнения:</target>
        </trans-unit>
        <trans-unit id="cbc249ea4e7a82a7ec0919b9ad1d670f290a6811" translate="yes" xml:space="preserve">
          <source>It's good not to add a framework for every simple piece of logic, but relying on well tested utility frameworks can speed up development and reduce the amount of bugs.</source>
          <target state="translated">Хорошо не добавлять фреймворк для каждого простого элемента логики,но полагаться на хорошо протестированные утилиты фреймворк может ускорить разработку и уменьшить количество ошибок.</target>
        </trans-unit>
        <trans-unit id="0fa28edf6be4ffbdd5ff729f4a7b7c4758875b5f" translate="yes" xml:space="preserve">
          <source>Lodash produces very clean code and promotes a more &lt;em&gt;functional programming&lt;/em&gt; style. In one glimpse it becomes clear what the intent of the code is.</source>
          <target state="translated">Lodash производит очень чистый код и продвигает более &lt;em&gt;функциональный&lt;/em&gt; стиль &lt;em&gt;программирования&lt;/em&gt; . Одним взглядом становится ясно, какова цель кода.</target>
        </trans-unit>
        <trans-unit id="9eaf61c467f14ad9ffb044dec015f58caf257257" translate="yes" xml:space="preserve">
          <source>More info? E.g. we have following nested object:</source>
          <target state="translated">Больше информации? Например,мы проследили за вложенным объектом:</target>
        </trans-unit>
        <trans-unit id="87c1be79d606b3383dbdf93122bd561431d64cc5" translate="yes" xml:space="preserve">
          <source>More readable format:</source>
          <target state="translated">Более читабельный формат:</target>
        </trans-unit>
        <trans-unit id="7edee346283fe35e96e795f35ff5de152f58755b" translate="yes" xml:space="preserve">
          <source>Multiple Parameters</source>
          <target state="translated">Несколько параметров</target>
        </trans-unit>
        <trans-unit id="32d560375c769eb987267a8ce3ab1529b45b7910" translate="yes" xml:space="preserve">
          <source>Negate to reverse order, &lt;code&gt;return -last_nom_order || -first_nom_order || -age_order;&lt;/code&gt;</source>
          <target state="translated">Отрицать в обратном порядке, &lt;code&gt;return -last_nom_order || -first_nom_order || -age_order;&lt;/code&gt; -first_nom_order || -age_order;</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="bcad6173433b52e269afa6bc77fb168e67f86b43" translate="yes" xml:space="preserve">
          <source>Now, in the base solution uses bracket notation to compute the properties to sort for dynamically. Here, though, we would have to construct the bracket notation dynamically also, since you would expect some like &lt;code&gt;People['Name.name']&lt;/code&gt; would work - which doesn't.</source>
          <target state="translated">Теперь в базовом решении используются скобочные обозначения для вычисления свойств для динамической сортировки. Здесь, однако, мы должны были бы также динамически создавать обозначение в скобках, так как можно было бы ожидать, что некоторые, такие как &lt;code&gt;People['Name.name']&lt;/code&gt; , а это не так.</target>
        </trans-unit>
        <trans-unit id="b6d5ee0e5ac2a920d1c93c741329108491c8da3b" translate="yes" xml:space="preserve">
          <source>OP's issue can simply be solved as:</source>
          <target state="translated">Проблема ОП может быть просто решена как:</target>
        </trans-unit>
        <trans-unit id="30850acd7e09351894b8aa2a56a72e2f817539ce" translate="yes" xml:space="preserve">
          <source>Obstacles</source>
          <target state="translated">Obstacles</target>
        </trans-unit>
        <trans-unit id="498de8681b478a786108557a1ace1eb28f1d9afa" translate="yes" xml:space="preserve">
          <source>Old answer that is not correct:</source>
          <target state="translated">Старый ответ неверен:</target>
        </trans-unit>
        <trans-unit id="1fefd0bb4d6f3f3a8e89940a2cb000599c0c0c07" translate="yes" xml:space="preserve">
          <source>One more option:</source>
          <target state="translated">Еще один вариант:</target>
        </trans-unit>
        <trans-unit id="ef939c1b74a04cdc71de1b2c3f68069f2fe5b389" translate="yes" xml:space="preserve">
          <source>Or inline (c/o Marco Demaio):</source>
          <target state="translated">Или встроенный (Ко Марко Демайо):</target>
        </trans-unit>
        <trans-unit id="948128b010a72605e2fbf78fd74c54260e051ab0" translate="yes" xml:space="preserve">
          <source>Or when do you prefer &lt;a href=&quot;https://lodash.com/docs/4.17.15#flow&quot;&gt;flow&lt;/a&gt; over chain</source>
          <target state="translated">Или когда вы предпочитаете &lt;a href=&quot;https://lodash.com/docs/4.17.15#flow&quot;&gt;поток&lt;/a&gt; по цепочке</target>
        </trans-unit>
        <trans-unit id="4e2821849d9c08e68ccd665bf930d3ee092da12e" translate="yes" xml:space="preserve">
          <source>Prior to ES6/ES2015</source>
          <target state="translated">До ES6ES2015</target>
        </trans-unit>
        <trans-unit id="1baa06b4c8bc2d63f9db4d4cc86a2e2b12a7e893" translate="yes" xml:space="preserve">
          <source>Problem</source>
          <target state="translated">Problem</target>
        </trans-unit>
        <trans-unit id="c58dd6bb45a2f9ac6a218c5b7185c3d34c81b4e8" translate="yes" xml:space="preserve">
          <source>Remembering that &lt;code&gt;fn = o =&amp;gt; o.last_nom&lt;/code&gt;, we can expand the compare function to the equivalent</source>
          <target state="translated">Помня, что &lt;code&gt;fn = o =&amp;gt; o.last_nom&lt;/code&gt; , мы можем расширить функцию сравнения до эквивалентной</target>
        </trans-unit>
        <trans-unit id="5822e1abe08b294040c03f0f3ce044677629caa2" translate="yes" xml:space="preserve">
          <source>Script:</source>
          <target state="translated">Script:</target>
        </trans-unit>
        <trans-unit id="2e98d736969feca005890fc917b8627988a081b3" translate="yes" xml:space="preserve">
          <source>See Commplete script in &lt;a href=&quot;http://jsfiddle.net/Gigapedia/ofd0a1nd/1/&quot;&gt;JSFiddle&lt;/a&gt;</source>
          <target state="translated">Смотрите скрипт &lt;a href=&quot;http://jsfiddle.net/Gigapedia/ofd0a1nd/1/&quot;&gt;Commplete&lt;/a&gt; в JSFiddle</target>
        </trans-unit>
        <trans-unit id="751a745af1f2295e108ecd4014fcd7b3a221ad08" translate="yes" xml:space="preserve">
          <source>See that &lt;code&gt;'.toLowerCase()'&lt;/code&gt; is necessary to prevent erros 
in comparing strings.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;'.toLowerCase()'&lt;/code&gt; необходим для предотвращения ошибок при сравнении строк.</target>
        </trans-unit>
        <trans-unit id="49c7e143edcc42258a2f85d00fb2f5795d1a53eb" translate="yes" xml:space="preserve">
          <source>Simple and quick solution to this problem using prototype inheritance:</source>
          <target state="translated">Простое и быстрое решение этой проблемы с помощью наследования прототипов:</target>
        </trans-unit>
        <trans-unit id="3df7de60d412e815cc56b44e99351d0f6ffc3257" translate="yes" xml:space="preserve">
          <source>Simply doing &lt;code&gt;People['Name']['name']&lt;/code&gt;, on the other hand, is static and only allows you to go down the &lt;em&gt;n&lt;/em&gt;-th level.</source>
          <target state="translated">Простое выполнение &lt;code&gt;People['Name']['name']&lt;/code&gt; , с другой стороны, является статичным и позволяет вам только спуститься на &lt;em&gt;n-й&lt;/em&gt; уровень.</target>
        </trans-unit>
        <trans-unit id="1e4ab52faf107ee7c0249a954a4ed3dd4cff785d" translate="yes" xml:space="preserve">
          <source>Since you probably encounter more complex data structures like this array, I would expand the solution.</source>
          <target state="translated">Поскольку вы,вероятно,сталкиваетесь с более сложными структурами данных,такими как этот массив,я бы расширил решение.</target>
        </trans-unit>
        <trans-unit id="7d686476427025af3329f7d68422a05f50b1bcb2" translate="yes" xml:space="preserve">
          <source>So you can have an array of objects like this:</source>
          <target state="translated">Таким образом,вы можете иметь массив таких объектов:</target>
        </trans-unit>
        <trans-unit id="b4f91bdb0e1b0e40fff4debcd0fea22f1999f491" translate="yes" xml:space="preserve">
          <source>Solution</source>
          <target state="translated">Solution</target>
        </trans-unit>
        <trans-unit id="109909121526dfa21cfc07a8f678954b7329a7ed" translate="yes" xml:space="preserve">
          <source>Sort array of objects by string property value</source>
          <target state="translated">Сортировать массив объектов по значению свойства строки</target>
        </trans-unit>
        <trans-unit id="dc4d28dec474ab397c30be8f3db0103e8f0c364c" translate="yes" xml:space="preserve">
          <source>Sort by multiple fields:</source>
          <target state="translated">Сортировать по нескольким полям:</target>
        </trans-unit>
        <trans-unit id="f3502d6e64d1a7822b2b62f5b927220903c45ba7" translate="yes" xml:space="preserve">
          <source>Sorting (more) Complex Arrays of Objects</source>
          <target state="translated">Сортировка (подробнее)Сложные массивы объектов</target>
        </trans-unit>
        <trans-unit id="59c9e0733121e83769900d1cba9c0d364484136b" translate="yes" xml:space="preserve">
          <source>Subclassing Array</source>
          <target state="translated">Массив подразделов</target>
        </trans-unit>
        <trans-unit id="55a8cf52465cdc91b6aab717d8f7d031a34fc9d5" translate="yes" xml:space="preserve">
          <source>Subtraction works on numeric fields: &lt;code&gt;var age_order = left.age - right.age;&lt;/code&gt;</source>
          <target state="translated">Вычитание работает с числовыми полями: &lt;code&gt;var age_order = left.age - right.age;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="97e39b6af24502016b3d55f9dc3afd1f7213fc53" translate="yes" xml:space="preserve">
          <source>Swap the operator to have it sorted by reverse alphabetical order.</source>
          <target state="translated">Поменяйте оператора,чтобы он отсортировал его в обратном алфавитном порядке.</target>
        </trans-unit>
        <trans-unit id="5ff57f4185e884322f43c9c59da60f12f41285ea" translate="yes" xml:space="preserve">
          <source>TL;DR</source>
          <target state="translated">TL;DR</target>
        </trans-unit>
        <trans-unit id="df8a4e60130779519de7ad68f7d5180c53c0743b" translate="yes" xml:space="preserve">
          <source>That would enable this:</source>
          <target state="translated">Это бы дало возможность:</target>
        </trans-unit>
        <trans-unit id="94d79b95d0c489e5bbcb12f8d364863f7a362261" translate="yes" xml:space="preserve">
          <source>The goal is to sort it primarily by &lt;code&gt;People.Name.name&lt;/code&gt; and secondarily by &lt;code&gt;People.Name.surname&lt;/code&gt;</source>
          <target state="translated">Цель состоит в том, чтобы отсортировать его в первую очередь по &lt;code&gt;People.Name.name&lt;/code&gt; , а затем по &lt;code&gt;People.Name.surname&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="082acbdad9772f5f5be439c6315685ecc4157047" translate="yes" xml:space="preserve">
          <source>The logical OR &lt;code&gt;||&lt;/code&gt; operator has a short-circuiting functionality that's very useful here. Because of how it works, the body of the function above means</source>
          <target state="translated">Логическое ИЛИ &lt;code&gt;||&lt;/code&gt; Оператор имеет функцию короткого замыкания, которая очень полезна здесь. Из-за того, как это работает, тело функции выше означает</target>
        </trans-unit>
        <trans-unit id="9609c6d9ea33fa99a452cd0c94aa46eb50331dfe" translate="yes" xml:space="preserve">
          <source>The main addition here will be to walk down the object tree and determine the value of the last leaf, you have to specify, as well as any intermediary leaf.</source>
          <target state="translated">Основным дополнением здесь будет прогулка по дереву объектов и определение значения последнего листа,который необходимо указать,а также любого промежуточного листа.</target>
        </trans-unit>
        <trans-unit id="a021612bae9941142ad365b346f4d4f2e54d2228" translate="yes" xml:space="preserve">
          <source>The point here is that pure JavaScript with functional approach can take you a long way without external libraries or complex code. It is also very effective, since no string parsing have to be done</source>
          <target state="translated">Дело в том,что чистый JavaScript с функциональным подходом может пройти долгий путь без внешних библиотек и сложного кода.Он также очень эффективен,так как не требуется никакого разбора строк.</target>
        </trans-unit>
        <trans-unit id="3f3da28278b977bb99aab14aa8c822c9b8400fd4" translate="yes" xml:space="preserve">
          <source>There are many good answers here, but I would like to point out that they can be extended very simply to achieve a lot more complex sorting. The only thing you have to do is to use the OR operator to chain comparision functions like this:</source>
          <target state="translated">Здесь есть много хороших ответов,но я хотел бы отметить,что они могут быть расширены очень просто для достижения гораздо более сложной сортировки.Единственное,что нужно сделать,это использовать оператор &quot;ИЛИ&quot; для цепочки функций сравнения,подобных этой:</target>
        </trans-unit>
        <trans-unit id="89bef63538bc26f3472cb4e1de8788758df3a06b" translate="yes" xml:space="preserve">
          <source>This function could be extended to support numeric fields, case sensitity, arbitary datatypes etc.</source>
          <target state="translated">Эта функция может быть расширена для поддержки числовых полей,чувствительности к регистру,произвольных типов данных и т.д.</target>
        </trans-unit>
        <trans-unit id="afa086a2b78cf51cf24d0b8a68e401404e3c4c1f" translate="yes" xml:space="preserve">
          <source>This is a simple problem, don't know why people have such complex solution.</source>
          <target state="translated">Это простая проблема,не знаю,почему у людей есть такое сложное решение.</target>
        </trans-unit>
        <trans-unit id="7b6c936e71d894731b069593df937870837eca90" translate="yes" xml:space="preserve">
          <source>This method is like _.sortBy except that it allows specifying the sort orders of the iteratees to sort by. If orders is unspecified, all values are sorted in ascending order. Otherwise, specify an order of &quot;desc&quot; for descending or &quot;asc&quot; for ascending sort order of corresponding values.</source>
          <target state="translated">Этот метод похож на _.sortBy,за исключением того,что он позволяет указать порядок сортировки итераций,по которым будет производиться сортировка.Если ордера не указаны,то все значения сортируются по возрастанию.В противном случае,укажите порядок &quot;нисходящий&quot; для убывающей сортировки или &quot;восходящий&quot; для возрастающей сортировки соответствующих значений.</target>
        </trans-unit>
        <trans-unit id="f951f5d768047fe6faaa6c8d66ca0dc5ebe9f893" translate="yes" xml:space="preserve">
          <source>This solution is based on the behaviour of &lt;code&gt;||&lt;/code&gt; operator which evaluates to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Logical_operators&quot;&gt;first evaluated expression which can be converted to true&lt;/a&gt;.</source>
          <target state="translated">Это решение основано на поведении &lt;code&gt;||&lt;/code&gt; оператор, который оценивает &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Logical_operators&quot;&gt;первое вычисленное выражение, которое может быть преобразовано в true&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b7f248cb4e5c51d10f2cf342d2205f0fa91120cd" translate="yes" xml:space="preserve">
          <source>This version is based on the &lt;a href=&quot;https://en.wikipedia.org/wiki/Schwartzian_transform&quot;&gt;Schwartzian transform idiom&lt;/a&gt;.</source>
          <target state="translated">Эта версия основана на &lt;a href=&quot;https://en.wikipedia.org/wiki/Schwartzian_transform&quot;&gt;идиоме преобразования Шварца&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="22ac867f198bbe668d95c95b88030a5c57f55991" translate="yes" xml:space="preserve">
          <source>Try this example &lt;a href=&quot;http://jsfiddle.net/agershun/4f4Lr9ss/1/&quot;&gt;at jsFiddle&lt;/a&gt;.</source>
          <target state="translated">Попробуйте этот пример &lt;a href=&quot;http://jsfiddle.net/agershun/4f4Lr9ss/1/&quot;&gt;на jsFiddle&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="c4ec0e92ea2bb00ad4f3298da1ca66ad3ac5bf51" translate="yes" xml:space="preserve">
          <source>Use example:</source>
          <target state="translated">Используйте пример:</target>
        </trans-unit>
        <trans-unit id="080aea69ed0585f6c9c95ab405ff44fbeb0fb543" translate="yes" xml:space="preserve">
          <source>Using Ramda,</source>
          <target state="translated">Используя Рамду,</target>
        </trans-unit>
        <trans-unit id="a18e4f510ee6d8aeee1db615bda7fa45c9e3e333" translate="yes" xml:space="preserve">
          <source>Want it reversed? No problem. Use &lt;a href=&quot;https://lodash.com/docs/4.17.15#reverse&quot;&gt;_.reverse&lt;/a&gt;.</source>
          <target state="translated">Хотите, чтобы это было наоборот? Нет проблем. Используйте &lt;a href=&quot;https://lodash.com/docs/4.17.15#reverse&quot;&gt;_.reverse&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7fbd54bfb0efab47f14ced5f46b0a92322af15cd" translate="yes" xml:space="preserve">
          <source>Want to combine both using &lt;a href=&quot;https://lodash.com/docs/4.17.15#chain&quot;&gt;chain&lt;/a&gt;?</source>
          <target state="translated">Хотите совместить обе &lt;a href=&quot;https://lodash.com/docs/4.17.15#chain&quot;&gt;цепочки&lt;/a&gt; ?</target>
        </trans-unit>
        <trans-unit id="7f5038cff32d1a4e74bb009ed2f4b5fff77c22c4" translate="yes" xml:space="preserve">
          <source>We now can use the &lt;a href=&quot;https://lodash.com/docs/4.17.15#property&quot;&gt;_.property&lt;/a&gt; shorthand &lt;code&gt;user.age&lt;/code&gt; to specify the path to the property that should be matched. We will sort the user objects by the nested age property. Yes, it allows for nested property matching!</source>
          <target state="translated">Теперь мы можем использовать сокращение &lt;code&gt;user.age&lt;/code&gt; чтобы указать путь к свойству, которое должно соответствовать. Мы отсортируем пользовательские объекты по вложенному свойству age. Да, это позволяет сопоставлять вложенные свойства!</target>
        </trans-unit>
        <trans-unit id="19b758444752a4dcb43c1647fa85e1bff81f02f1" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;fn1&lt;/code&gt;, &lt;code&gt;fn2&lt;/code&gt;, ... are the sort functions which return [-1,0,1]. This results in &quot;sorting by fn1&quot;, &quot;sorting by fn2&quot; which is pretty much equal to ORDER BY in SQL.</source>
          <target state="translated">Где &lt;code&gt;fn1&lt;/code&gt; , &lt;code&gt;fn2&lt;/code&gt; , ... - функции сортировки, которые возвращают [-1,0,1]. Это приводит к &amp;laquo;сортировке по fn1&amp;raquo;, &amp;laquo;сортировке по fn2&amp;raquo;, которая почти равна ORDER BY в SQL.</target>
        </trans-unit>
        <trans-unit id="690becf4a80f0f5937c7bc25b8d202728a7a121c" translate="yes" xml:space="preserve">
          <source>Which would enable you to do something like this:</source>
          <target state="translated">Что позволило бы тебе сделать что-то подобное:</target>
        </trans-unit>
        <trans-unit id="e097110f8fbf6f7e12eb57ff825177af95ad6701" translate="yes" xml:space="preserve">
          <source>Without nested ternaries:</source>
          <target state="translated">Без вложенных тернариев:</target>
        </trans-unit>
        <trans-unit id="1f3a8961cc3c0dfbac1f833f2f6ab188fb0ae542" translate="yes" xml:space="preserve">
          <source>Working example &lt;a href=&quot;http://jsbin.com/lotifa/2/edit?js,console&quot;&gt;on JSBin&lt;/a&gt;</source>
          <target state="translated">Рабочий пример &lt;a href=&quot;http://jsbin.com/lotifa/2/edit?js,console&quot;&gt;на JSBin&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c0a34fb6db23fd9ae9f6ec32649177b251cff0df" translate="yes" xml:space="preserve">
          <source>You can also create a dynamic sort function that sorts objects by their value that you pass:</source>
          <target state="translated">Также можно создать функцию динамической сортировки,которая сортирует объекты по передаваемому значению:</target>
        </trans-unit>
        <trans-unit id="da067ddfca6e878291ec7eaf398f4688e75afb77" translate="yes" xml:space="preserve">
          <source>You can them use it with chaining them by sort priority:</source>
          <target state="translated">Ты можешь использовать его,приковывая их по приоритету сортировки:</target>
        </trans-unit>
        <trans-unit id="3c94090f45521fa505560d818d146d87684fe4b4" translate="yes" xml:space="preserve">
          <source>You can use</source>
          <target state="translated">Вы можете использовать</target>
        </trans-unit>
        <trans-unit id="8aaf0966ca9de88ed00423893c6750e302bc72b1" translate="yes" xml:space="preserve">
          <source>You can use the function below to generate sort functions with multiple sort parameters.</source>
          <target state="translated">Вы можете использовать функцию,описанную ниже,для генерации функций сортировки с несколькими параметрами сортировки.</target>
        </trans-unit>
        <trans-unit id="eaa79b08656dd826605fddb4561d504870a33325" translate="yes" xml:space="preserve">
          <source>You may need to convert them to the lower case in order to prevent from confusion.</source>
          <target state="translated">Возможно,вам понадобится преобразовать их в нижний регистр,чтобы избежать путаницы.</target>
        </trans-unit>
        <trans-unit id="bc7c5e2dd156919b34965a95a543881ff61e72e7" translate="yes" xml:space="preserve">
          <source>additional desc params for &lt;strong&gt;Ege &amp;Ouml;zcan&lt;/strong&gt; code</source>
          <target state="translated">дополнительные параметры desc для кода &lt;strong&gt;Ege &amp;Ouml;zcan&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="14d76e0ea677b53536f0e1bcd8e4402905430049" translate="yes" xml:space="preserve">
          <source>and changed &lt;strong&gt;_dynamicSort&lt;/strong&gt;'s &lt;em&gt;return&lt;/em&gt; function:</source>
          <target state="translated">и изменил функцию &lt;em&gt;возврата&lt;/em&gt; _dynamicSort:</target>
        </trans-unit>
        <trans-unit id="583c8146c0fd7636650ae88381ba9b1747e52ec5" translate="yes" xml:space="preserve">
          <source>and if you want to sort it over &lt;strong&gt;a.a&lt;/strong&gt; property I think my enhancement helps very well. I add new functionality to objects like this:</source>
          <target state="translated">и если вы хотите отсортировать его по свойствам, я думаю, что мое улучшение очень помогает. Я добавляю новые функциональные возможности к таким объектам:</target>
        </trans-unit>
        <trans-unit id="1f59fa9a439467f6503baeffe55c3ea31faf4f52" translate="yes" xml:space="preserve">
          <source>collection (Array|Object): The collection to iterate over.
[iteratees=[_.identity]] (Array[]|Function[]|Object[]|string[]): The iteratees to sort by.
[orders] (string[]): The sort orders of iteratees.</source>
          <target state="translated">Object):The collection to iterate over.[iteratees=[_.identity]](Array[]</target>
        </trans-unit>
        <trans-unit id="d6423b40a11bcee12314b6ccef031813c2cdb209" translate="yes" xml:space="preserve">
          <source>sortBy_.sortBy(list, iterator, [context])  Returns a sorted copy of
  list, ranked in ascending order by the results of running each value
  through iterator. Iterator may also be the string name of the property
  to sort by (eg. length).</source>
          <target state="translated">sortBy_.sortBy(list,iterator,[context])Возвращает отсортированную копию списка,ранжированного по возрастанию по результатам прогона каждого значения через итератор.Итератором также может быть строковое имя свойства для сортировки по (например,по длине).</target>
        </trans-unit>
        <trans-unit id="6e6af4a6f6b8dd020ff1ccc161165eca878ae248" translate="yes" xml:space="preserve">
          <source>sorts ascending by default.</source>
          <target state="translated">по умолчанию сортирует по возрастанию.</target>
        </trans-unit>
        <trans-unit id="bce3a219b7462cbfc0c0086b83fd33ffe4a24372" translate="yes" xml:space="preserve">
          <source>to compare them.</source>
          <target state="translated">чтобы сравнить их.</target>
        </trans-unit>
        <trans-unit id="e20673804c9f90b32d81557d7cd06d6ac501919d" translate="yes" xml:space="preserve">
          <source>underscore.js</source>
          <target state="translated">underscore.js</target>
        </trans-unit>
        <trans-unit id="c285e07a2de39b6fbee1c5def3798517aaa7efe1" translate="yes" xml:space="preserve">
          <source>use underscore, its small and awesome...</source>
          <target state="translated">используйте подчёркивание,его маленький и потрясающий...</target>
        </trans-unit>
        <trans-unit id="18cbf375a546dc39d742dd985d70e5999b401a29" translate="yes" xml:space="preserve">
          <source>we use</source>
          <target state="translated">мы используем</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
