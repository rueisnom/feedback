<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/11731377">
    <body>
      <group id="11731377">
        <trans-unit id="ef8391e59c1a023244e01b021bd1729ad8c21a90" translate="yes" xml:space="preserve">
          <source>(Mine: java -jar target/dependency/webapp-runner.jar --port 5190 target/*.war )</source>
          <target state="translated">(내 : java -jar target / dependency / webapp-runner.jar --port 5190 target / *. war)</target>
        </trans-unit>
        <trans-unit id="b5cec627593f5d86de855befd0cfb85ff2e671a5" translate="yes" xml:space="preserve">
          <source>------------ 2.1: press:&lt;strong&gt;Windows+R&lt;/strong&gt; --&amp;gt; type:&quot;&lt;strong&gt;services.msc&lt;/strong&gt;&quot;</source>
          <target state="translated">------------ 2.1 : 누릅니다 : &lt;strong&gt;Windows + R-&lt;/strong&gt; &amp;gt; 유형 : &quot; &lt;strong&gt;services.msc&lt;/strong&gt; &quot;</target>
        </trans-unit>
        <trans-unit id="be4e0f02aaf33dddc6b7fceb222626cadcbb2322" translate="yes" xml:space="preserve">
          <source>------------ 2.2: Find &quot;Apache Tomcat #.# Tomcat#&quot; in Name column of list.</source>
          <target state="translated">------------ 2.2 : 목록의 이름 열에서 &quot;Apache Tomcat #. # Tomcat #&quot;을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="173e9a38061f30310ec90115c0fa04d3a1a7f191" translate="yes" xml:space="preserve">
          <source>------------ 2.3: Right Click --&amp;gt; &quot;&lt;strong&gt;stop&lt;/strong&gt;&quot;</source>
          <target state="translated">------------ 2.3 : 마우스 오른쪽 버튼 클릭-&amp;gt; &quot; &lt;strong&gt;중지&lt;/strong&gt; &quot;</target>
        </trans-unit>
        <trans-unit id="91b8d11041aa20511cbe7e9257af91c079127b75" translate="yes" xml:space="preserve">
          <source>1) button-id : The 'id' tag you give to your button in your html/jsp file.</source>
          <target state="translated">1) button-id : html / jsp 파일에서 버튼에 부여한 'id'태그입니다.</target>
        </trans-unit>
        <trans-unit id="74b146e4924e8ffe740e7c55d20617e919fe77d2" translate="yes" xml:space="preserve">
          <source>1: Stop Tomcat</source>
          <target state="translated">1 : Tomcat 중지</target>
        </trans-unit>
        <trans-unit id="50de7c88d6d5d014a6ef5a834d3599f88b6808e5" translate="yes" xml:space="preserve">
          <source>1: The maven build (mvn package) will not report any errors here.</source>
          <target state="translated">1 : maven 빌드 (mvn package)는 여기에 오류를보고하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="274a270c86d2d89f2b13429f439b2bf634f4dc1b" translate="yes" xml:space="preserve">
          <source>2) full-servlet-path: The path that shows in the browser when you run the servlet alone</source>
          <target state="translated">2) 전체 서블릿 경로 : 서블릿 만 실행할 때 브라우저에 표시되는 경로</target>
        </trans-unit>
        <trans-unit id="d059299348ab69329702cab2896c97e38cfb9f52" translate="yes" xml:space="preserve">
          <source>2: Delete the &quot;target&quot; folder.
&lt;strong&gt;(mvn clean will not help you here)&lt;/strong&gt;</source>
          <target state="translated">2 : &quot;target&quot;폴더를 삭제하십시오. &lt;strong&gt;(mvn clean은 여기에 도움이되지 않습니다)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="81253366bea8a825e170b81240a47abbeb3ecd5a" translate="yes" xml:space="preserve">
          <source>2: servlet-class line in web.xml can have CORRECT package path. E.g:</source>
          <target state="translated">2 : web.xml의 서블릿 클래스 행에는 CORRECT 패키지 경로가있을 수 있습니다. 예 :</target>
        </trans-unit>
        <trans-unit id="45e4cb7f42032bd3a7a8f022d8efabbd6d70d597" translate="yes" xml:space="preserve">
          <source>3: mvn package</source>
          <target state="translated">3 : mvn 패키지</target>
        </trans-unit>
        <trans-unit id="b3f109ced9bbd12fb5c4d6de262beabf951ba3ba" translate="yes" xml:space="preserve">
          <source>4: &lt;em&gt;YOUR_DEPLOYMENT_COMMAND_HERE&lt;/em&gt;</source>
          <target state="translated">4 : &lt;em&gt;YOUR_DEPLOYMENT_COMMAND_HERE&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f53b9666f74a092e6d24900856588c39d7ee0af0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/tags/servlets/info&quot;&gt;Our servlets wiki page&lt;/a&gt; - Contains some hello world examples</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/tags/servlets/info&quot;&gt;서블릿 위키 페이지&lt;/a&gt; -hello world 예제가 들어 있습니다.</target>
        </trans-unit>
        <trans-unit id="cee257bd7a775d5243756102b96bb120f117f14d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@WebServlet&lt;/code&gt; works only on Servlet 3.0 or newer</source>
          <target state="translated">&lt;code&gt;@WebServlet&lt;/code&gt; 은 Servlet 3.0 이상에서만 작동합니다</target>
        </trans-unit>
        <trans-unit id="4a9c9b8f24fd28dfb4dba5a0f715e166c4d87683" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Description&lt;/em&gt;: The origin server did not find a current representation for the target resource or is not willing to disclose that one exists</source>
          <target state="translated">&lt;em&gt;설명&lt;/em&gt; : 원본 서버가 대상 자원에 대한 현재 표현을 찾지 못했거나 존재한다고 밝히려하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fa3a68f402e7d5197ab69044cf7d9ace2e7ebfd9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Description&lt;/em&gt;: The requested resource (/servlet) is not available.</source>
          <target state="translated">&lt;em&gt;설명&lt;/em&gt; : 요청한 리소스 (/ 서블릿)를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ede18368a347b70e15f2231b24a9cf9741fe1f5c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Message&lt;/em&gt;: /servlet</source>
          <target state="translated">&lt;em&gt;메시지&lt;/em&gt; : / servlet</target>
        </trans-unit>
        <trans-unit id="e7d7a139342121cd742dd9b773166e870fb5e06e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Full Back Story:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;전체 스토리 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e6d02356a12a437281e7fe2b2c9b0a6d50625d1c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Scenario #1:&lt;/strong&gt; You &lt;strong&gt;accidentially re-deployed&lt;/strong&gt; from the command line while tomcat was &lt;strong&gt;already running&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;시나리오 # 1 :&lt;/strong&gt; Tomcat이 &lt;strong&gt;이미 실행중인&lt;/strong&gt; 동안 &lt;strong&gt;실수로&lt;/strong&gt; 명령 행에서 &lt;strong&gt;재배치했습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="72a6b1a86bdb5acc0399e8ea8b72e95bd4f339d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Scenario #2:&lt;/strong&gt; request.getRequestDispatcher(&quot;&lt;strong&gt;MIS_SPELLED_FILE_NAME&lt;/strong&gt;.jsp&quot;)</source>
          <target state="translated">&lt;strong&gt;시나리오 # 2 :&lt;/strong&gt; request.getRequestDispatcher ( &quot; &lt;strong&gt;MIS_SPELLED_FILE_NAME&lt;/strong&gt; .jsp&quot;)</target>
        </trans-unit>
        <trans-unit id="e71b95ab432c10ccf9447ef5474cf42d07f6641b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Scenario #3: Class Not Found Exceptions&lt;/strong&gt;
(Answer put here because: Question# 17982240  )
(&lt;a href=&quot;https://stackoverflow.com/questions/17982240&quot;&gt;java.lang.ClassNotFoundException for servlet in tomcat with eclipse&lt;/a&gt; )
(was marked as duplicate and directed me here )</source>
          <target state="translated">&lt;strong&gt;시나리오 # 3 : 클래스를 찾을 수 없음 예외&lt;/strong&gt; (답변은 여기에 있습니다 : 질문 # 17982240) ( &lt;a href=&quot;https://stackoverflow.com/questions/17982240&quot;&gt;Eclipse와 Tomcat의 서블릿에 대한 java.lang.ClassNotFoundException&lt;/a&gt; ) (중복으로 표시되어 여기로 안내되었습니다)</target>
        </trans-unit>
        <trans-unit id="3d11a958b6695c4d330e024521eaffdd45846a38" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Short Answer:&lt;/strong&gt; Check file name &lt;strong&gt;spelling&lt;/strong&gt;, make sure &lt;strong&gt;case&lt;/strong&gt; is correct.</source>
          <target state="translated">&lt;strong&gt;짧은 답변 :&lt;/strong&gt; 파일 이름 &lt;strong&gt;철자&lt;/strong&gt; 를 확인하고 &lt;strong&gt;대소 문자&lt;/strong&gt; 가 올바른지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="adec26fb9c76bf7f62c3198ee306e113bc4e4df3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Short Answer:&lt;/strong&gt; Stop Tomcat, &lt;strong&gt;delete target folder&lt;/strong&gt;, mvn package, then re-deploy</source>
          <target state="translated">&lt;strong&gt;짧은 답변 :&lt;/strong&gt; Tomcat 중지, &lt;strong&gt;대상 폴더 삭제&lt;/strong&gt; , mvn 패키지, 다시 배포</target>
        </trans-unit>
        <trans-unit id="4b40b41ff9b79bbad60117438e54398499c8b404" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;right click&lt;/strong&gt;, select &lt;strong&gt;properties&lt;/strong&gt;, then &lt;strong&gt;web project settings&lt;/strong&gt;. Check &lt;strong&gt;the context root cannot be empty&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;마우스 오른쪽 버튼을 클릭&lt;/strong&gt; 하고 &lt;strong&gt;속성&lt;/strong&gt; 을 선택한 다음 &lt;strong&gt;웹 프로젝트 설정&lt;/strong&gt; 을 선택 &lt;strong&gt;합니다&lt;/strong&gt; . &lt;strong&gt;컨텍스트 루트를 비워 둘 수&lt;/strong&gt; 없는지 확인</target>
        </trans-unit>
        <trans-unit id="b08b5c1fa5ee7c0ba71a96bec64fcec446944f4c" translate="yes" xml:space="preserve">
          <source>Accidentially opened a new git-bash window and
tried to deploy a .war file for my heroku project via:</source>
          <target state="translated">새 git-bash 창을 우연히 열고 다음을 통해 heroku 프로젝트에 .war 파일을 배포하려고했습니다.</target>
        </trans-unit>
        <trans-unit id="c80a367345cd94ec547a04ac950c0e5493aaf0a9" translate="yes" xml:space="preserve">
          <source>After a failure to deploy, I realized I had two git-bash windows open,
and &lt;strong&gt;had not used CTLR+C to stop the previous deployment&lt;/strong&gt;.</source>
          <target state="translated">배포 실패 후 두 개의 git-bash 창이 열려 있고 &lt;strong&gt;CTLR + C를 사용하여 이전 배포를 중지하지&lt;/strong&gt; 않았다는 것을 알았습니다.</target>
        </trans-unit>
        <trans-unit id="4f6969f7446f4228b19794745ad6ff91eeb37d87" translate="yes" xml:space="preserve">
          <source>An easy way to verify if the servlet is correctly compiled and placed in classpath is to let the build tool produce a WAR file (e.g. rightclick project, &lt;em&gt;Export &amp;gt; WAR file&lt;/em&gt; in Eclipse) and then inspect its contents with a ZIP tool. If the servlet class is missing in &lt;code&gt;/WEB-INF/classes&lt;/code&gt;, then the project is badly configured or some IDE/project configuration defaults have been mistakenly reverted (e.g. &lt;em&gt;Project &amp;gt; Build Automatically&lt;/em&gt; has been disabled in Eclipse). In case you have no clue, best is to restart from scratch and do not touch any IDE/project configuration defaults.</source>
          <target state="translated">서블릿이 올바르게 컴파일되고 클래스 경로에 배치되는지 확인하는 쉬운 방법은 빌드 도구가 WAR 파일 (예 : Eclipse에서 마우스 오른쪽 단추 클릭 프로젝트, &lt;em&gt;내보내기&amp;gt; WAR 파일&lt;/em&gt; )을 생성 한 다음 ZIP 도구로 내용을 검사하는 것입니다. 서블릿 클래스가 &lt;code&gt;/WEB-INF/classes&lt;/code&gt; 에서 누락 된 경우 프로젝트가 잘못 구성되었거나 일부 IDE / 프로젝트 구성 기본값이 실수로 되돌려졌습니다 (예 : Eclipse에서 &lt;em&gt;Project&amp;gt; Build Automatic&lt;/em&gt; 이 비활성화 됨). 실마리가 없으면 처음부터 다시 시작하고 IDE / 프로젝트 구성 기본값을 건드리지 않는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="9429e838596ece8bc28028824208934441c2dcdf" translate="yes" xml:space="preserve">
          <source>An old thread, but since I didn't find it elsewhere, here is one more possibility:</source>
          <target state="translated">오래된 실이지만 다른 곳에서는 찾지 못했기 때문에 여기에 또 하나의 가능성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f7ad93b9bc21d7c046ba64860b72ddc12494176" translate="yes" xml:space="preserve">
          <source>And find in the server log a &lt;code&gt;java.lang.ClassNotFoundException: com.example.YourServlet&lt;/code&gt;, followed by a &lt;code&gt;java.lang.NoClassDefFoundError: com.example.YourServlet&lt;/code&gt;, in turn followed by &lt;code&gt;javax.servlet.ServletException: Error instantiating servlet class com.example.YourServlet&lt;/code&gt;.</source>
          <target state="translated">그리고 서버 로그에서 &lt;code&gt;java.lang.ClassNotFoundException: com.example.YourServlet&lt;/code&gt; , &lt;code&gt;java.lang.NoClassDefFoundError: com.example.YourServlet&lt;/code&gt; , 차례로 차례로 &lt;code&gt;javax.servlet.ServletException: Error instantiating servlet class com.example.YourServlet&lt;/code&gt; 찾으십시오 . example.YourServlet .</target>
        </trans-unit>
        <trans-unit id="e8fde66d4ba4d2ffe76db21d5dabbb5f3e784d9c" translate="yes" xml:space="preserve">
          <source>And register the servlet instead in &lt;code&gt;web.xml&lt;/code&gt; like this:</source>
          <target state="translated">다음과 같이 &lt;code&gt;web.xml&lt;/code&gt; 에 서블릿을 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="f31a04c0a607763671161201a194397605433d8b" translate="yes" xml:space="preserve">
          <source>Apache Tomcat/8.5.31</source>
          <target state="translated">아파치 톰캣 /8.5.31</target>
        </trans-unit>
        <trans-unit id="9311a5a7c8c675608e7857b5e7dc39e34ec690b3" translate="yes" xml:space="preserve">
          <source>Below is further details for Scenario #1:</source>
          <target state="translated">시나리오 # 1에 대한 자세한 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4fc60ef095769fc27b7820ba6e1bc65385e59105" translate="yes" xml:space="preserve">
          <source>Below is further details for Scenario #3:</source>
          <target state="translated">시나리오 # 3에 대한 자세한 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="45a48f3a7b47cdcff8e92d7e3a184fb2175629a1" translate="yes" xml:space="preserve">
          <source>Browser can't access/find relative resources like CSS, images and links when calling a Servlet which forwards to a JSP</source>
          <target state="translated">브라우저는 JSP로 전달되는 서블릿을 호출 할 때 CSS, 이미지 및 링크와 같은 상대 자원에 액세스하거나 찾을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5725c9dc0820e6a7ad318694bdcf97c570b83593" translate="yes" xml:space="preserve">
          <source>But none of those work. They all keep returning a HTTP 404 error like below in Tomcat 6/7/8:</source>
          <target state="translated">그러나 그 중 어느 것도 작동하지 않습니다. 모두 Tomcat 6/7/8에서 아래와 같이 HTTP 404 오류를 계속 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9307d562fcd4393c48dc6b781472fcff3a97d3eb" translate="yes" xml:space="preserve">
          <source>But this will likely result in a 404 as it's in the wrong context.</source>
          <target state="translated">그러나 이것은 잘못된 맥락에서 404를 초래할 것입니다.</target>
        </trans-unit>
        <trans-unit id="b9659f22f0ae1db5076d13011b3dce97af6d7062" translate="yes" xml:space="preserve">
          <source>But this will likely result in a 404 as it's in the wrong folder.</source>
          <target state="translated">그러나 잘못된 폴더에 있기 때문에 404가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a2081ada0ab60ea8a03c04f68b58631b8953e07" translate="yes" xml:space="preserve">
          <source>Click on Run</source>
          <target state="translated">실행을 클릭하십시오</target>
        </trans-unit>
        <trans-unit id="6f58c0b59cdbdd002e90c2c974a0545ae8bacf63" translate="yes" xml:space="preserve">
          <source>Description The origin server  did not find a current representation
  for  the target resource or is not willing  to disclose that one
  exists.</source>
          <target state="translated">설명 오리진 서버가 대상 자원에 대한 현재 표현을 찾지 못했거나 존재한다고 밝히려하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b5001be1142daaa1300235961153b37007e81bc8" translate="yes" xml:space="preserve">
          <source>Do the following two steps. I hope, it will solve the &quot;404 not found&quot; issue in tomcat server during the development of java servlet application.</source>
          <target state="translated">다음 두 단계를 수행하십시오. Java 서블릿 응용 프로그램을 개발하는 동안 Tomcat 서버의 &quot;404를 찾을 수 없음&quot;문제가 해결되기를 바랍니다.</target>
        </trans-unit>
        <trans-unit id="8895ad91fe7f2f9fbb11ac6ff2709c6fc3acd7dd" translate="yes" xml:space="preserve">
          <source>Don't just start your server, for example Wildfly, using the cmd. It has to be launched within the IDE and now visit your localhost URL. Example: &lt;a href=&quot;http://localhost:8080/HelloWorldServlet/HelloWorld&quot;&gt;http://localhost:8080/HelloWorldServlet/HelloWorld&lt;/a&gt;</source>
          <target state="translated">cmd를 사용하여 서버 (예 : Wildfly)를 시작하지 마십시오. IDE 내에서 시작되어 로컬 호스트 URL을 방문하십시오. 예 : &lt;a href=&quot;http://localhost:8080/HelloWorldServlet/HelloWorld&quot;&gt;http : // localhost : 8080 / HelloWorldServlet / HelloWorld&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e682f594d071ee55a589dfbe5b20d3a97433ecb" translate="yes" xml:space="preserve">
          <source>Error instantiating servlet class com.example.YourServlet</source>
          <target state="translated">서블릿 클래스 com.example을 인스턴스화하는 중 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="8caf401de3e529d1edadce1206b5b498ecd8cf5f" translate="yes" xml:space="preserve">
          <source>File is in: &quot;&lt;strong&gt;/my_stuff&lt;/strong&gt;&quot; folder</source>
          <target state="translated">파일은 &quot; &lt;strong&gt;/ my_stuff&lt;/strong&gt; &quot;폴더에 있습니다.</target>
        </trans-unit>
        <trans-unit id="800eea699b37746a59c8b769da60887886b22430" translate="yes" xml:space="preserve">
          <source>File: PRJ_ROOT/src/main/webapp/WEB-INF/&lt;strong&gt;web.xml&lt;/strong&gt;</source>
          <target state="translated">파일 : PRJ_ROOT / src / main / webapp / WEB-INF / &lt;strong&gt;web.xml&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="77602214dcb3b6d4255d68a8ffca412d3d842cf8" translate="yes" xml:space="preserve">
          <source>File: my_stuff/&lt;strong&gt;MyClass.java&lt;/strong&gt;:</source>
          <target state="translated">파일 : my_stuff / &lt;strong&gt;MyClass.java&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="3fca440acf66feade2247b7789eb83c8035fb7b7" translate="yes" xml:space="preserve">
          <source>First of all, put the servlet class in a Java &lt;code&gt;package&lt;/code&gt;. You should &lt;em&gt;always&lt;/em&gt; put publicly reuseable Java classes in a package, otherwise they are invisible to classes which are in a package, such as the server itself. This way you eliminiate potential environment-specific problems. Packageless servlets work only in specific Tomcat+JDK combinations and this should never be relied upon.</source>
          <target state="translated">우선, 서블릿 클래스를 Java &lt;code&gt;package&lt;/code&gt; 에 넣으십시오. 공개적으로 재사용 가능한 Java 클래스는 &lt;em&gt;항상&lt;/em&gt; 패키지에 넣어야합니다. 그렇지 않으면 서버 자체와 같이 패키지에있는 클래스에는 보이지 않습니다. 이렇게하면 잠재적 인 환경 관련 문제를 줄일 수 있습니다. 패키지가없는 서블릿은 특정 Tomcat + JDK 조합에서만 작동하므로 절대 의존해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="72613fd18546c799f0819c61a56dd315f9d9b70d" translate="yes" xml:space="preserve">
          <source>First of all, run your IDE as Admin. After that, right click the project folder -&amp;gt; Project Facets and make sure that the Java Version is set correct. On my PC. (For Example 1.8) Now it should work.</source>
          <target state="translated">우선, IDE를 Admin으로 실행하십시오. 그런 다음 프로젝트 폴더-&amp;gt; 프로젝트 패싯을 마우스 오른쪽 단추로 클릭하고 Java 버전이 올바르게 설정되었는지 확인하십시오. 내 PC에서 (예 1.8의 경우) 이제 작동합니다.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3594b84339b2741289df2cbcccd0f0dddfa1e538" translate="yes" xml:space="preserve">
          <source>Form action submits to an URL which goes one folder up.</source>
          <target state="translated">양식 작업은 한 폴더 위로 올라가는 URL로 제출합니다.</target>
        </trans-unit>
        <trans-unit id="72fed683ae94af8229cb6d58840440a195da13ed" translate="yes" xml:space="preserve">
          <source>Form action submits to an URL with a leading slash.</source>
          <target state="translated">양식 조치는 슬래시가있는 URL에 제출합니다.</target>
        </trans-unit>
        <trans-unit id="674a2f9286ddcf0c261d355fa8f5006b41a04a5d" translate="yes" xml:space="preserve">
          <source>Form action submits to an URL without a leading slash.</source>
          <target state="translated">양식 조치는 슬래시없이 URL에 제출합니다.</target>
        </trans-unit>
        <trans-unit id="6ead09b0ba385bc6c067e746b20be94ca9918320" translate="yes" xml:space="preserve">
          <source>HTTP Status 404 &amp;mdash; /servlet</source>
          <target state="translated">HTTP 상태 404 &amp;mdash; / servlet</target>
        </trans-unit>
        <trans-unit id="0da74029840f15c6561d87f656f135731176773d" translate="yes" xml:space="preserve">
          <source>HTTP Status 404 &amp;mdash; Not Found</source>
          <target state="translated">HTTP 상태 404 &amp;mdash; 찾을 수 없음</target>
        </trans-unit>
        <trans-unit id="ff1e544f6dd3a5f362619b9163745f2816df2605" translate="yes" xml:space="preserve">
          <source>HTTP Status 404 &amp;ndash; Not Found Type Status Report</source>
          <target state="translated">HTTP 상태 404 &amp;ndash; 찾을 수없는 유형 상태 보고서</target>
        </trans-unit>
        <trans-unit id="dfcb317b128e39332916f53d074b049b81bf6696" translate="yes" xml:space="preserve">
          <source>HTTP Status 404 - Servlet [ServletName] is not available</source>
          <target state="translated">HTTP 상태 404-서블릿 [ServletName]을 사용할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="41618ce632a94afa3200bb50d878a946c1a6c598" translate="yes" xml:space="preserve">
          <source>HTTP Status 404 - The requested resource (/) is not available</source>
          <target state="translated">HTTP 상태 404-요청한 리소스 (/)를 사용할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="141f6c9b114a1000819fcba97ae9d5770e6dd091" translate="yes" xml:space="preserve">
          <source>HTTP Status 404 - The requested resource (/ProjectName/) is not available</source>
          <target state="translated">HTTP 상태 404-요청한 리소스 (/ ProjectName /)를 사용할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="d92f97f2a6e730df416b349f7adcdfa2c0fab3ed" translate="yes" xml:space="preserve">
          <source>HTTP Status 500</source>
          <target state="translated">HTTP 상태 500</target>
        </trans-unit>
        <trans-unit id="a1e689c246c34a93e864e4944f2905a7df932dd0" translate="yes" xml:space="preserve">
          <source>How do I pass current item to Java method by clicking a hyperlink or button in JSP page?</source>
          <target state="translated">JSP 페이지에서 하이퍼 링크 또는 버튼을 클릭하여 현재 항목을 Java 메소드로 전달하려면 어떻게합니까?</target>
        </trans-unit>
        <trans-unit id="4efade0a60778809858fe1b2abb6a89661931c05" translate="yes" xml:space="preserve">
          <source>How to call servlet class from HTML form</source>
          <target state="translated">HTML 양식에서 서블릿 클래스를 호출하는 방법</target>
        </trans-unit>
        <trans-unit id="4b4f60ee886330c79cae09f93b3390a54153cae8" translate="yes" xml:space="preserve">
          <source>I have an HTML form in a JSP file in my &lt;code&gt;WebContent/jsps&lt;/code&gt; folder. I have a servlet class &lt;code&gt;servlet.java&lt;/code&gt; in my default package in &lt;code&gt;src&lt;/code&gt; folder. In my &lt;code&gt;web.xml&lt;/code&gt; it is mapped as &lt;code&gt;/servlet&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WebContent/jsps&lt;/code&gt; 폴더의 JSP 파일에 HTML 양식이 있습니다. &lt;code&gt;src&lt;/code&gt; 폴더의 기본 패키지에 서블릿 클래스 &lt;code&gt;servlet.java&lt;/code&gt; 가 있습니다. 내 &lt;code&gt;web.xml&lt;/code&gt; 에서는 &lt;code&gt;/servlet&lt;/code&gt; 으로 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="7b026efd36d46f71c9e9788b132727e22de91d25" translate="yes" xml:space="preserve">
          <source>I have tried several URLs in &lt;code&gt;action&lt;/code&gt; attribute of the HTML form:</source>
          <target state="translated">HTML 양식의 &lt;code&gt;action&lt;/code&gt; 속성에서 여러 URL을 시도했습니다.</target>
        </trans-unit>
        <trans-unit id="2128fd1aeb196c7c595b9f0f63a2d44281130e7c" translate="yes" xml:space="preserve">
          <source>I removed the old web library such that are spring framework libraries. And build a new path of the libraries. Then it works.</source>
          <target state="translated">스프링 프레임 워크 라이브러리 인 오래된 웹 라이브러리를 제거했습니다. 라이브러리의 새로운 경로를 구축하십시오. 그런 다음 작동합니다.</target>
        </trans-unit>
        <trans-unit id="0b0ec361526f3fb55ee9cd843135355cd165f672" translate="yes" xml:space="preserve">
          <source>I was met with:</source>
          <target state="translated">나는 만났다 :</target>
        </trans-unit>
        <trans-unit id="8d76b9a8a4f4190e6f17b7541bade75e3dbc323e" translate="yes" xml:space="preserve">
          <source>If you would like to open a servlet with javascript without using 'form' and 'submit' button, here is the following code:</source>
          <target state="translated">'form'및 'submit'버튼을 사용하지 않고 자바 스크립트로 서블릿을 열려면 다음 코드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="826ccc2a80cd946b9f6744f1565b7ae178c674d5" translate="yes" xml:space="preserve">
          <source>If you're using &lt;strong&gt;servlet-api 3.0+&lt;/strong&gt;, then your web.xml must &lt;strong&gt;NOT&lt;/strong&gt; include &lt;code&gt;metadata-complete=&quot;true&quot;&lt;/code&gt; attribute</source>
          <target state="translated">&lt;strong&gt;servlet-api 3.0+를&lt;/strong&gt; 사용하는 경우 web.xml에 &lt;code&gt;metadata-complete=&quot;true&quot;&lt;/code&gt; 속성을 포함 &lt;strong&gt;해서는&lt;/strong&gt; 안됩니다</target>
        </trans-unit>
        <trans-unit id="64a64e80a7621f7625ffed91e7422cefb2a3132f" translate="yes" xml:space="preserve">
          <source>If you're using eclipse:</source>
          <target state="translated">일식을 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="c2a716aaed49701515efc0063af77f8d9e04c1a0" translate="yes" xml:space="preserve">
          <source>In case of a &quot;plain&quot; IDE project, the class needs to be placed in its package structure inside &quot;Java Resources&quot; folder and thus &lt;em&gt;not&lt;/em&gt; &quot;WebContent&quot;, this is for web files such as JSP. Below is an example of the folder structure of a default Eclipse &lt;em&gt;Dynamic Web Project&lt;/em&gt; as seen in &lt;em&gt;Navigator&lt;/em&gt; view:</source>
          <target state="translated">&quot;일반&quot;IDE 프로젝트의 경우, 클래스는 &quot;WebContent&quot;가 &lt;em&gt;아닌&lt;/em&gt; &quot;Java Resources&quot;폴더 내의 패키지 구조에 있어야합니다. 이는 JSP와 같은 웹 파일을위한 것입니다. 아래는 &lt;em&gt;네비게이터&lt;/em&gt; 보기에서 볼 수있는 기본 Eclipse &lt;em&gt;동적 웹 프로젝트&lt;/em&gt; 의 폴더 구조 예입니다.</target>
        </trans-unit>
        <trans-unit id="16455dacf1751280b4179ca601a2013475c5fd67" translate="yes" xml:space="preserve">
          <source>In case of a Maven project, the class needs to be placed in its package structure inside &lt;code&gt;main/java&lt;/code&gt;&lt;a href=&quot;https://stackoverflow.com/questions/31051494/how-to-link-a-css-resource-file-in-main-resources-in-jsp/&quot;&gt;and thus &lt;em&gt;not&lt;/em&gt; e.g. &lt;code&gt;main/resources&lt;/code&gt;, this is for non-class files&lt;/a&gt;.  Below is an example of the folder structure of a default Maven webapp project as seen in Eclipse's &lt;em&gt;Navigator&lt;/em&gt; view:</source>
          <target state="translated">Maven 프로젝트의 경우, 클래스는 &lt;code&gt;main/java&lt;/code&gt; 내부의 패키지 구조에 있어야 &lt;a href=&quot;https://stackoverflow.com/questions/31051494/how-to-link-a-css-resource-file-in-main-resources-in-jsp/&quot;&gt;하며 따라서 &lt;code&gt;main/resources&lt;/code&gt; 가 아닌 클래스가 아닌 파일을위한 것&lt;/a&gt; 입니다. 다음은 Eclipse의 &lt;em&gt;네비게이터&lt;/em&gt; 보기에서 볼 수있는 기본 Maven webapp 프로젝트의 폴더 구조 예입니다.</target>
        </trans-unit>
        <trans-unit id="ff35ed17d8053e6bdf018cf153378c4c20055b06" translate="yes" xml:space="preserve">
          <source>In case you want to support path parameters like &lt;code&gt;/servlet/foo/bar&lt;/code&gt;, then use an URL pattern of &lt;code&gt;/servlet/*&lt;/code&gt; instead. See also &lt;a href=&quot;https://stackoverflow.com/questions/8715474/servlet-and-path-parameters-like-xyz-value-test-how-to-map-in-web-xml&quot;&gt;Servlet and path parameters like /xyz/{value}/test, how to map in web.xml?&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;/servlet/foo/bar&lt;/code&gt; 와 같은 경로 매개 변수를 지원하려는 경우 &lt;code&gt;/servlet/*&lt;/code&gt; 의 URL 패턴을 대신 사용하십시오. &lt;a href=&quot;https://stackoverflow.com/questions/8715474/servlet-and-path-parameters-like-xyz-value-test-how-to-map-in-web-xml&quot;&gt;web.xml에 매핑하는 방법 인 / xyz / {value} / test와 같은 서블릿 및 경로 매개 변수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f5e6dc43fe2e140234aa697ed5ab9a15dc43bac7" translate="yes" xml:space="preserve">
          <source>In case you're using a build tool such as Eclipse and/or Maven, then you need to make absolutely sure that the compiled servlet class file resides in its package structure in &lt;code&gt;/WEB-INF/classes&lt;/code&gt; folder of the produced WAR file. In case of &lt;code&gt;package com.example; public class YourServlet&lt;/code&gt;, it must be located in &lt;code&gt;/WEB-INF/classes/com/example/YourServlet.class&lt;/code&gt;. Otherwise you will face in case of &lt;code&gt;@WebServlet&lt;/code&gt; also a 404 error, or in case of &lt;code&gt;&amp;lt;servlet&amp;gt;&lt;/code&gt; a HTTP 500 error like below:</source>
          <target state="translated">Eclipse 및 / 또는 Maven과 같은 빌드 도구를 사용하는 경우 컴파일 된 서블릿 클래스 파일이 생성 된 WAR 파일의 &lt;code&gt;/WEB-INF/classes&lt;/code&gt; 폴더에있는 패키지 구조에 있는지 확인해야합니다. &lt;code&gt;package com.example; public class YourServlet&lt;/code&gt; 경우 ; 공용 클래스 YourServlet 은 &lt;code&gt;/WEB-INF/classes/com/example/YourServlet.class&lt;/code&gt; 에 있어야합니다. 그렇지 않으면 &lt;code&gt;@WebServlet&lt;/code&gt; 의 경우 404 오류가 발생하거나 &lt;code&gt;&amp;lt;servlet&amp;gt;&lt;/code&gt; 의 경우 아래와 같이 HTTP 500 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c3776b58aca9b3b83cd6bc89a0922a51e663b6e8" translate="yes" xml:space="preserve">
          <source>In order to use &lt;code&gt;@WebServlet&lt;/code&gt;, you only need to make sure that your &lt;code&gt;web.xml&lt;/code&gt; file, if any (it's optional since Servlet 3.0), is declared conform Servlet 3.0+ version &lt;a href=&quot;https://stackoverflow.com/questions/6535676/webservlet-annotation-with-tomcat-7&quot;&gt;and thus &lt;em&gt;not&lt;/em&gt; conform e.g. 2.5 version or lower&lt;/a&gt;. Below is a Servlet 4.0 compatible one (which matches Tomcat 9+, WildFly 11+, Payara 5+, etc).</source>
          <target state="translated">&lt;code&gt;@WebServlet&lt;/code&gt; 을 사용하려면 &lt;code&gt;web.xml&lt;/code&gt; 파일 (있는 경우 Servlet 3.0 이후 선택 사항)이 Servlet 3.0+ 버전 준수로 선언 &lt;a href=&quot;https://stackoverflow.com/questions/6535676/webservlet-annotation-with-tomcat-7&quot;&gt;되어 2.5 버전 이하와 일치 &lt;em&gt;하지 않아야&lt;/em&gt;&lt;/a&gt; 합니다. 아래는 Servlet 4.0 호환 버전입니다 (Tomcat 9+, WildFly 11+, Payara 5+ 등).</target>
        </trans-unit>
        <trans-unit id="e0b13061987ce1a0299752af6f2180176aa8ed37" translate="yes" xml:space="preserve">
          <source>It should MATCH the package statement at top
   of your java servlet class.</source>
          <target state="translated">Java 서블릿 클래스의 맨 위에 패키지 명령문이 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="602da574311d6b74668cfac40e7422784f5b6c65" translate="yes" xml:space="preserve">
          <source>JSP in /WEB-INF returns &quot;HTTP Status 404 The requested resource is not available&quot;</source>
          <target state="translated">/ WEB-INF의 JSP는 &quot;HTTP 상태 404 요청 된 리소스를 사용할 수 없습니다&quot;를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3dde4a1d30520701e0706973e522f1b1df66b25c" translate="yes" xml:space="preserve">
          <source>Key:</source>
          <target state="translated">Key:</target>
        </trans-unit>
        <trans-unit id="40d6d87f220a9098461946af8e6b257c8cb5e12c" translate="yes" xml:space="preserve">
          <source>Message /if-student-test.jsp</source>
          <target state="translated">메시지 /if-student-test.jsp</target>
        </trans-unit>
        <trans-unit id="fa2643e8f53f28b091b68cb59984a4eba5e113da" translate="yes" xml:space="preserve">
          <source>My issue was that my method was missing the @RequestBody annotation. After adding the annotation I no longer received the 404 exception.</source>
          <target state="translated">내 문제는 내 메소드에 @RequestBody 주석이 누락되었다는 것입니다. 주석을 추가 한 후 더 이상 404 예외가 발생하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="4732de65c5f504179c7a2f29b50a224abff9b32c" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;/jsps&lt;/code&gt; subfolder is not strictly necessary. You can even do without it and put the JSP file directly in webcontent/webapp root, but I'm just taking over this from your question.</source>
          <target state="translated">&lt;code&gt;/jsps&lt;/code&gt; 하위 폴더는 꼭 필요한 것은 아닙니다. 그것 없이도 JSP 파일을 webcontent / webapp 루트에 직접 넣을 수도 있지만, 나는 당신의 질문에서 이것을 인수하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="11fbc1431e5877d984b55da44446d6982dcfe3a4" translate="yes" xml:space="preserve">
          <source>Note thus that you should not use both ways. Use either annotation based configuarion or XML based configuration. When you have both, then XML based configuration will override annotation based configuration.</source>
          <target state="translated">따라서 두 가지 방법을 모두 사용해서는 안됩니다. 주석 기반 구성 또는 XML 기반 구성을 사용하십시오. 둘 다 있으면 XML 기반 구성이 주석 기반 구성보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="9d8b6d68c2375883337cacab6312d97fcf719651" translate="yes" xml:space="preserve">
          <source>Once you've verified that the servlet works fine when invoked individually, then you can advance to HTML. As to your concrete problem with the HTML form, the &lt;code&gt;&amp;lt;form action&amp;gt;&lt;/code&gt; value needs to be a valid URL. The same applies to &lt;code&gt;&amp;lt;a href&amp;gt;&lt;/code&gt;. You need to understand how absolute/relative URLs work. You know, an URL is a web address as you can enter/see in the webbrowser's address bar. If you're specifying a relative URL as form action, i.e. without the &lt;code&gt;http://&lt;/code&gt; scheme, then it becomes relative to the &lt;em&gt;current&lt;/em&gt; URL as you see in your webbrowser's address bar. It's thus absolutely not relative to the JSP/HTML file location in server's WAR folder structure as many starters seem to think.</source>
          <target state="translated">개별적으로 호출 할 때 서블릿이 제대로 작동하는지 확인한 후에 HTML로 진행할 수 있습니다. HTML 양식의 구체적인 문제와 관련하여 &lt;code&gt;&amp;lt;form action&amp;gt;&lt;/code&gt; 값은 유효한 URL이어야합니다. &lt;code&gt;&amp;lt;a href&amp;gt;&lt;/code&gt; 에도 동일하게 적용됩니다. 절대 / 상대 URL의 작동 방식을 이해해야합니다. 웹 브라우저의 주소 표시 줄에 입력하거나 볼 수있는 URL은 웹 주소입니다. 양식 작업으로 상대 URL을 지정하는 경우 (예 &lt;code&gt;http://&lt;/code&gt; 스킴이없는 경우) 웹 브라우저의 주소 표시 줄에 표시되는 것처럼 &lt;em&gt;현재&lt;/em&gt; URL을 기준으로합니다. 따라서 많은 초보자가 생각하는 것처럼 서버의 WAR 폴더 구조에서 JSP / HTML 파일 위치와 관련이 없습니다.</target>
        </trans-unit>
        <trans-unit id="6426d5697a9127d6c1f5c7ade4affbb13ce539d3" translate="yes" xml:space="preserve">
          <source>Option 1: Via CTRL+C in terminal.</source>
          <target state="translated">옵션 1 : 터미널에서 CTRL + C를 통해.</target>
        </trans-unit>
        <trans-unit id="062defd9d90596eefeb7838ebf547f7f661523db" translate="yes" xml:space="preserve">
          <source>Option 2: (terminal closed while tomcat still running)</source>
          <target state="translated">옵션 2 : (톰캣이 계속 실행되는 동안 터미널이 닫힘)</target>
        </trans-unit>
        <trans-unit id="4ac70eaa5100912964a6ebed6468ae44ddea691c" translate="yes" xml:space="preserve">
          <source>Or as below in Tomcat 8.5/9:</source>
          <target state="translated">또는 Tomcat 8.5 / 9에서 아래와 같이 :</target>
        </trans-unit>
        <trans-unit id="7cd26a2167ab4253bb488cefa2f1a89dbd565438" translate="yes" xml:space="preserve">
          <source>Or, in case you're not on Servlet 3.0+ yet (e.g. Tomcat 6 or older), then remove the &lt;code&gt;@WebServlet&lt;/code&gt; annotation.</source>
          <target state="translated">또는 아직 Servlet 3.0 이상을 사용하지 않는 경우 (예 : Tomcat 6 이상) &lt;code&gt;@WebServlet&lt;/code&gt; 주석을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="2f7c23ff79bfe10c71b5faffadc0852d17917c01" translate="yes" xml:space="preserve">
          <source>Other cases of HTTP Status 404 error:</source>
          <target state="translated">HTTP 상태 404 오류의 다른 경우 :</target>
        </trans-unit>
        <trans-unit id="98f890d5c61e3d745874acbdbbdc8acd3806dc0a" translate="yes" xml:space="preserve">
          <source>Overriding &lt;code&gt;service()&lt;/code&gt; is a bad practice, unless you're reinventing a MVC framework &amp;mdash; which is very unlikely if you're just starting out with servlets and are clueless as to the problem described in the current question ;) See also &lt;a href=&quot;https://stackoverflow.com/questions/3541077/design-patterns-web-based-applications&quot;&gt;Design Patterns web based applications&lt;/a&gt;.</source>
          <target state="translated">MVC 프레임 워크를 재발 명하지 않는 한 &lt;code&gt;service()&lt;/code&gt; 재정의하는 것은 좋지 않은 방법입니다. 서블릿으로 시작하여 현재 질문에 설명 된 문제에 대한 단서가없는 경우는 거의 없습니다.) &lt;a href=&quot;https://stackoverflow.com/questions/3541077/design-patterns-web-based-applications&quot;&gt;디자인 패턴 웹&lt;/a&gt; 참조 기반 응용 프로그램 .</target>
        </trans-unit>
        <trans-unit id="57c3cb2f346fbde46274710b2fbc2254761b178e" translate="yes" xml:space="preserve">
          <source>Please check &lt;strong&gt;context root cannot be empty&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;컨텍스트 루트를 비워 둘 수&lt;/strong&gt; 없는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="cdb5a225b2291e963ed22d566cf481d7bb0cee1e" translate="yes" xml:space="preserve">
          <source>Project-&amp;gt;Properties</source>
          <target state="translated">Project-&amp;gt;Properties</target>
        </trans-unit>
        <trans-unit id="62dab2cda53ef921f019e178ae490c03981f4165" translate="yes" xml:space="preserve">
          <source>Provided that the server runs on &lt;code&gt;localhost:8080&lt;/code&gt;, and that the WAR is successfully deployed on a context path of &lt;code&gt;/contextname&lt;/code&gt; (which defaults to the IDE project name, case sensitive!), and the servlet hasn't failed its initialization (read server logs for any deploy/servlet success/fail messages and the actual context path and servlet mapping), then a servlet with URL pattern of &lt;code&gt;/servlet&lt;/code&gt; is available at &lt;code&gt;http://localhost:8080/contextname/servlet&lt;/code&gt;.</source>
          <target state="translated">서버가 &lt;code&gt;localhost:8080&lt;/code&gt; 에서 실행되고 WAR이 &lt;code&gt;/contextname&lt;/code&gt; 의 컨텍스트 경로 (기본적으로 IDE 프로젝트 이름, 대소 문자 구분)에 배치되었으며 서블릿이 초기화에 실패하지 않은 경우 (서버 읽기) 배포 / 서블릿 성공 / 실패 메시지 및 실제 컨텍스트 경로 및 서블릿 매핑에 대한 로그)를 참조하면 URL 패턴이 &lt;code&gt;/servlet&lt;/code&gt; 인 서블릿 은 &lt;code&gt;http://localhost:8080/contextname/servlet&lt;/code&gt; 에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73b5e5046b075f91b6f2fe24bb2ed1957afe42b4" translate="yes" xml:space="preserve">
          <source>Put servlet class in a &lt;code&gt;package&lt;/code&gt;</source>
          <target state="translated">서블릿 클래스를 &lt;code&gt;package&lt;/code&gt; 에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="5568fdb53e25ae4416fc2545d5e28bd53e284133" translate="yes" xml:space="preserve">
          <source>Referencing a resource placed in WEB-INF folder in JSP file returns HTTP 404 on resource</source>
          <target state="translated">JSP 파일의 WEB-INF 폴더에있는 자원을 참조하면 자원에서 HTTP 404가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="6e3f489457cb12f528643917e67862c5e12e0760" translate="yes" xml:space="preserve">
          <source>Referencing the servlet URL from HTML</source>
          <target state="translated">HTML에서 서블릿 URL 참조</target>
        </trans-unit>
        <trans-unit id="35aa6c866df5f0b6ac9bf88682cfd26cd43db13f" translate="yes" xml:space="preserve">
          <source>Regardless, if the servlet already returns 404 when tested invidivually, then it's entirely pointless to try with a HTML form instead. Logically, it's therefore also entirely pointless to include any HTML form in questions about 404 errors from a servlet.</source>
          <target state="translated">그럼에도 불구하고, 서블릿이 개별적으로 테스트되었을 때 이미 404를 반환하면 HTML 양식을 사용해 보는 것이 전혀 의미가 없습니다. 논리적으로, 서블릿의 404 오류에 대한 질문에 HTML 양식을 포함시키는 것도 전적으로 의미가 없습니다.</target>
        </trans-unit>
        <trans-unit id="f53596244482f9f5792bb33ee73875f10b4ad841" translate="yes" xml:space="preserve">
          <source>Relative URL:/index.jsp (Select your project root URL)</source>
          <target state="translated">상대 URL : /index.jsp (프로젝트 루트 URL 선택)</target>
        </trans-unit>
        <trans-unit id="5341c2fa1daf0efe21a1084d8ede866682363b04" translate="yes" xml:space="preserve">
          <source>SCENARIO 3.1:
   The servlet-class package path is wrong 
   in your web.xml file.</source>
          <target state="translated">시나리오 3.1 : web.xml 파일에서 서블릿 클래스 패키지 경로가 잘못되었습니다.</target>
        </trans-unit>
        <trans-unit id="d91a5bae37231d9132359913b96ed650c4198a3f" translate="yes" xml:space="preserve">
          <source>SCENARIO 3.2:</source>
          <target state="translated">시나리오 3.2 :</target>
        </trans-unit>
        <trans-unit id="371a87eafb4de078ff674d69a5a89c186532eb49" translate="yes" xml:space="preserve">
          <source>See also:</source>
          <target state="translated">또한보십시오:</target>
        </trans-unit>
        <trans-unit id="7bee870fcf57250e43a224283a02d460632eba3e" translate="yes" xml:space="preserve">
          <source>Servlet returns “HTTP Status 404 The requested resource (/servlet) is not available”</source>
          <target state="translated">서블릿이 &quot;HTTP 상태 404 요청 된 자원 (/ 서블릿)을 사용할 수 없음&quot;을 리턴 함</target>
        </trans-unit>
        <trans-unit id="6e3f50e169cb28fbd8bd38a999b28e350e42f508" translate="yes" xml:space="preserve">
          <source>Set servlet URL in &lt;code&gt;url-pattern&lt;/code&gt;</source>
          <target state="translated">URL &lt;code&gt;url-pattern&lt;/code&gt; 에서 서블릿 URL 설정</target>
        </trans-unit>
        <trans-unit id="818ee04886fc44a80bd434b6b4b528c2d8c15594" translate="yes" xml:space="preserve">
          <source>Short Answer #3.1: web.xml has wrong package path in servlet-class tag.</source>
          <target state="translated">짧은 답변 # 3.1 : web.xml의 서블릿 클래스 태그에 잘못된 패키지 경로가 있습니다.</target>
        </trans-unit>
        <trans-unit id="43aeda9277558256b50cb345d93cae30d1647932" translate="yes" xml:space="preserve">
          <source>Short Answer #3.2: java file has wrong import statement.</source>
          <target state="translated">짧은 답변 # 3.2 : java 파일에 잘못된 import 문이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8b5988ed8fde03ef8fc5b1e80fd87981be3a6d1" translate="yes" xml:space="preserve">
          <source>So, assuming that the JSP page with the HTML form is opened by &lt;code&gt;http://localhost:8080/contextname/jsps/page.jsp&lt;/code&gt;, and you need to submit to a servlet located in &lt;code&gt;http://localhost:8080/contextname/servlet&lt;/code&gt;, here are several cases (note that you can safely substitute &lt;code&gt;&amp;lt;form action&amp;gt;&lt;/code&gt; with &lt;code&gt;&amp;lt;a href&amp;gt;&lt;/code&gt; here):</source>
          <target state="translated">따라서 HTML 양식이있는 JSP 페이지가 &lt;code&gt;http://localhost:8080/contextname/jsps/page.jsp&lt;/code&gt; 에 의해 열린다고 가정하고 http : // localhost : 8080 / contextname / 에있는 서블릿에 제출해야합니다 &lt;code&gt;http://localhost:8080/contextname/servlet&lt;/code&gt; , 여기 몇 가지 사례가 있습니다 (여기서는 &lt;code&gt;&amp;lt;form action&amp;gt;&lt;/code&gt; 을 &lt;code&gt;&amp;lt;a href&amp;gt;&lt;/code&gt; 로 안전하게 대체 할 수 있습니다).</target>
        </trans-unit>
        <trans-unit id="d44f3e54ebe2b7593f583855b07e5d2cb2ffc8e7" translate="yes" xml:space="preserve">
          <source>Solution for &lt;code&gt;HTTP Status 404&lt;/code&gt; in NetBeans IDE:
Right click on your project and go to your project properties, then click on run, then input your project relative URL like &lt;code&gt;index.jsp&lt;/code&gt;.</source>
          <target state="translated">NetBeans IDE의 &lt;code&gt;HTTP Status 404&lt;/code&gt; 솔루션 : 프로젝트를 마우스 오른쪽 버튼으로 클릭하고 프로젝트 속성으로 이동 한 다음 실행을 클릭 한 다음 &lt;code&gt;index.jsp&lt;/code&gt; 와 같은 프로젝트 상대 URL을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="46c32fffc86d47e759671318daf6f5e89dae6c1d" translate="yes" xml:space="preserve">
          <source>Stack Used:
&lt;strong&gt;Notepad++&lt;/strong&gt; + &lt;strong&gt;GitBash&lt;/strong&gt; + &lt;strong&gt;Maven&lt;/strong&gt; + &lt;strong&gt;Heroku Web App Runner&lt;/strong&gt; + &lt;strong&gt;Tomcat9&lt;/strong&gt; + &lt;strong&gt;Windows10&lt;/strong&gt;:</source>
          <target state="translated">사용 된 스택 : &lt;strong&gt;메모장 ++&lt;/strong&gt; + &lt;strong&gt;GitBash&lt;/strong&gt; + &lt;strong&gt;Maven&lt;/strong&gt; + &lt;strong&gt;Heroku Web App Runner&lt;/strong&gt; + &lt;strong&gt;Tomcat9&lt;/strong&gt; + &lt;strong&gt;Windows10&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="1a95b9b1f565e84ca30888994360f0d92f92a3c5" translate="yes" xml:space="preserve">
          <source>Step 1: &lt;code&gt;Right click on the server(in the server explorer tab)-&amp;gt;Properties-&amp;gt;Switch Location from workspace metadata to tomcat server&lt;/code&gt;</source>
          <target state="translated">1 단계 : &lt;code&gt;Right click on the server(in the server explorer tab)-&amp;gt;Properties-&amp;gt;Switch Location from workspace metadata to tomcat server&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af361a11d51d530a8a5348323f6436030b19a567" translate="yes" xml:space="preserve">
          <source>Step 2: &lt;code&gt;Double Click on the server(in the server explorer tab)-&amp;gt;Select Use tomcat installation option inside server location menu&lt;/code&gt;</source>
          <target state="translated">2 단계 : &lt;code&gt;Double Click on the server(in the server explorer tab)-&amp;gt;Select Use tomcat installation option inside server location menu&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a560218f7c9b5ce0b96d555977f73e611be412c" translate="yes" xml:space="preserve">
          <source>Testing the servlet individually</source>
          <target state="translated">서블릿을 개별적으로 테스트</target>
        </trans-unit>
        <trans-unit id="4ea5b78cab6de407e47a3117d5145471f09ff2ed" translate="yes" xml:space="preserve">
          <source>The canonical approach, however, is to make the URL domain-relative so that you don't need to fix the URLs once again when you happen to move the JSP files around into another folder.</source>
          <target state="translated">그러나 정식 접근 방식은 URL을 도메인 기준으로 설정하여 JSP 파일을 다른 폴더로 이동할 때 URL을 다시 한 번 수정하지 않아도하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="74f0d205563e043b0246eff6cee722e3c477b2a6" translate="yes" xml:space="preserve">
          <source>The fix that worked for me is(if you are using Maven): Rightclick your project, Maven -&amp;gt; Update project. This might give you some other error with the JDK and other Libraries(in my case, MySQL connector), but once you fix them, your original problem should be fixed!</source>
          <target state="translated">나를 위해 일한 해결책은 (Maven을 사용하는 경우) : Maven-&amp;gt; Update project 프로젝트를 마우스 오른쪽 버튼으로 클릭하십시오. 이로 인해 JDK 및 기타 라이브러리 (내 경우에는 MySQL 커넥터)에 다른 오류가 발생할 수 있지만 일단 수정하면 원래 문제가 해결되어야합니다!</target>
        </trans-unit>
        <trans-unit id="b6ae81cdeca4e90823920b5669278c0db301ea2d" translate="yes" xml:space="preserve">
          <source>The leading slash &lt;code&gt;/&lt;/code&gt; makes the URL relative to the domain, thus the form will submit to</source>
          <target state="translated">선행 슬래시 ( &lt;code&gt;/&lt;/code&gt; ) 는 URL을 도메인을 기준으로하므로 양식은</target>
        </trans-unit>
        <trans-unit id="1f34c385be50e8146dab2bac04989a09654b3ba1" translate="yes" xml:space="preserve">
          <source>The servlet URL is specified as the &quot;URL pattern&quot; of the servlet mapping. It's absolutely not per definition the classname/filename of the servlet class. The URL pattern is to be specified as value of &lt;code&gt;@WebServlet&lt;/code&gt; annotation.</source>
          <target state="translated">서블릿 URL은 서블릿 매핑의 &quot;URL 패턴&quot;으로 지정됩니다. 서블릿 클래스의 클래스 이름 / 파일 이름은 정의에 따라 다릅니다. URL 패턴은 &lt;code&gt;@WebServlet&lt;/code&gt; 주석의 값으로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="a09ccb4e544c5c4a336b64f56412fd874742c07f" translate="yes" xml:space="preserve">
          <source>This is tricky because:</source>
          <target state="translated">다음과 같은 이유로 까다 롭습니다.</target>
        </trans-unit>
        <trans-unit id="4fa2de0733634d2479b27648d7a5fb6f21ea0cec" translate="yes" xml:space="preserve">
          <source>This makes the URL relative to the current folder of the current URL, thus the form will submit to</source>
          <target state="translated">이렇게하면 URL이 현재 URL의 현재 폴더를 기준으로하므로 양식이 제출됩니다.</target>
        </trans-unit>
        <trans-unit id="3f0cef6c4c4ded34809202e3145fd89a65bc9493" translate="yes" xml:space="preserve">
          <source>This one must work!</source>
          <target state="translated">이것은 작동해야합니다!</target>
        </trans-unit>
        <trans-unit id="5ff78129ac7c61c334dfbc708c2a651ec2e1d12a" translate="yes" xml:space="preserve">
          <source>This tells tomcat to map the servlets using data given in &lt;code&gt;web.xml&lt;/code&gt; instead of using the &lt;code&gt;@WebServlet&lt;/code&gt; annotation.</source>
          <target state="translated">이것은 Tomcat에게 &lt;code&gt;@WebServlet&lt;/code&gt; 어노테이션을 사용하는 대신 &lt;code&gt;web.xml&lt;/code&gt; 에 제공된 데이터를 사용하여 서블릿을 맵핑하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="d2aba27c5552952ab7d1a5d1902d49d00abe64b4" translate="yes" xml:space="preserve">
          <source>This will generate</source>
          <target state="translated">이것은 생성합니다</target>
        </trans-unit>
        <trans-unit id="0d00e06ed0962b80e70f5bc84648842096261bb8" translate="yes" xml:space="preserve">
          <source>This will go one folder up (exactly like as in local disk file system paths!), thus the form will submit to</source>
          <target state="translated">이것은 하나의 폴더 위로 올라가고 (로컬 디스크 파일 시스템 경로와 동일하게!) 양식은</target>
        </trans-unit>
        <trans-unit id="1842188b9685486c0c9ca74072c0954dd0cffef4" translate="yes" xml:space="preserve">
          <source>Use straight quotes in HTML</source>
          <target state="translated">HTML에서 인용 부호 사용</target>
        </trans-unit>
        <trans-unit id="cd0907a941d96e172572e31f7c0600a173ef314e" translate="yes" xml:space="preserve">
          <source>Verifying the build/deployment</source>
          <target state="translated">빌드 / 배포 확인</target>
        </trans-unit>
        <trans-unit id="41b63a88ae448998dd95072234e4c014ca451144" translate="yes" xml:space="preserve">
          <source>Which will thus always submit to the right URL.</source>
          <target state="translated">따라서 항상 올바른 URL로 제출됩니다.</target>
        </trans-unit>
        <trans-unit id="e768a8549b0c793a529e4e4ca97fbdb2e521d975" translate="yes" xml:space="preserve">
          <source>Why is it not working?</source>
          <target state="translated">왜 작동하지 않습니까?</target>
        </trans-unit>
        <trans-unit id="1dfd44e035f4516c0267241d9eaea4bc96f2d81f" translate="yes" xml:space="preserve">
          <source>You can just enter it straight in browser's address bar to test it invidivually. If its &lt;code&gt;doGet()&lt;/code&gt; is properly overriden and implemented, then you will see its output in browser. Or if you don't have any &lt;code&gt;doGet()&lt;/code&gt; or if it incorrectly calls &lt;code&gt;super.doGet()&lt;/code&gt;, then a &quot;&lt;a href=&quot;https://stackoverflow.com/questions/5370633/405-http-method-get-is-not-supported-by-this-url&quot;&gt;HTTP 405: HTTP method GET is not supported by this URL&lt;/a&gt;&quot; error will be shown (which is still better than a 404 as a 405 is evidence that the servlet itself is actually found).</source>
          <target state="translated">브라우저의 주소 표시 줄에 바로 입력하여 개별적으로 테스트 할 수 있습니다. &lt;code&gt;doGet()&lt;/code&gt; 이 올바르게 재정의되고 구현되면 브라우저에 출력이 표시됩니다. 또는 &lt;code&gt;doGet()&lt;/code&gt; 없거나 &lt;code&gt;super.doGet()&lt;/code&gt; 잘못 호출하면 &quot; &lt;a href=&quot;https://stackoverflow.com/questions/5370633/405-http-method-get-is-not-supported-by-this-url&quot;&gt;HTTP 405 :이 URL에서 HTTP 메소드 GET이 지원되지 않습니다&lt;/a&gt; &quot;라는 오류가 표시됩니다 (여전히 404보다 낫습니다). 405는 서블릿 자체가 실제로 발견되었다는 증거입니다).</target>
        </trans-unit>
        <trans-unit id="744d79c2e7bad54404f2e8909c0a8e61ec6626cb" translate="yes" xml:space="preserve">
          <source>You mistakenly write:</source>
          <target state="translated">실수로 다음을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="cb81b7589d8522d369ca3b39cb76b0c289c9274e" translate="yes" xml:space="preserve">
          <source>You need to make absolutely sure you're using straight quotes in HTML attributes like &lt;code&gt;action=&quot;...&quot;&lt;/code&gt; or &lt;code&gt;action='...'&lt;/code&gt; and thus &lt;em&gt;not&lt;/em&gt; curly quotes like &lt;code&gt;action=&amp;rdquo;...&amp;rdquo;&lt;/code&gt; or &lt;code&gt;action=&amp;rsquo;...&amp;rsquo;&lt;/code&gt;. Curly quotes are not supported in HTML and they will simply become part of the value.</source>
          <target state="translated">&lt;code&gt;action=&quot;...&quot;&lt;/code&gt; 또는 &lt;code&gt;action='...'&lt;/code&gt; 과 같은 HTML 속성에 직선 따옴표를 사용하고 action = &quot;...&quot; 또는 action = '. 과 같은 중괄호를 사용 &lt;em&gt;하지 않아야&lt;/em&gt; 합니다 &lt;code&gt;action=&amp;rsquo;...&amp;rsquo;&lt;/code&gt; 작은 따옴표는 HTML에서 지원되지 않으며 단순히 값의 일부가됩니다.</target>
        </trans-unit>
        <trans-unit id="773029b9865107a6cae0e5e0a4ae6a98413d4f43" translate="yes" xml:space="preserve">
          <source>You put the wrong &quot;&lt;strong&gt;package&lt;/strong&gt;&quot; statement
   at top of your myClass.java file.</source>
          <target state="translated">myClass.java 파일의 맨 위에 잘못된 &quot; &lt;strong&gt;package&lt;/strong&gt; &quot;문을 넣었습니다.</target>
        </trans-unit>
        <trans-unit id="27b38379d7aa8c77c508d949568e595f1a9f5575" translate="yes" xml:space="preserve">
          <source>doGet and doPost in Servlets</source>
          <target state="translated">서블릿의 doGet 및 doPost</target>
        </trans-unit>
        <trans-unit id="4e6ad51fdf1deb39a696c3baf282e0282a222547" translate="yes" xml:space="preserve">
          <source>java -jar target/dependency/webapp-runner.jar --port 5190 target/*.war</source>
          <target state="translated">java -jar 대상 / 종속성 /webapp-runner.jar-포트 5190 대상 /*.war</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
