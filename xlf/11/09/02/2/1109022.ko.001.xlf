<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/1109022">
    <body>
      <group id="1109022">
        <trans-unit id="2d705203d004168420b2371af5567a5181b6915b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/a/9494042/197359&quot;&gt;Saurabh Pareek&lt;/a&gt; has the best answer so far.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/9494042/197359&quot;&gt;Saurabh Pareek&lt;/a&gt; 가 지금까지 가장 좋은 답변을 얻었습니다 .</target>
        </trans-unit>
        <trans-unit id="f032e2d6c71514b7dd73c2199ebc40c6ab8fb562" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;About windowSoftInputMode&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;windowSoftInputMode 정보&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9fb5e43380e0e0ed38754145accd58ee47ce367" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Kotlin Syntax&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;코 틀린 구문&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f87517e9424dead3a132f36421c7063aa1ff1f14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you want to do this in Kotlin, use:
&lt;code&gt;context?.getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; Kotlin에서이 작업을 수행하려면 &lt;code&gt;context?.getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0662e12d6ab52c694189e2d4852b062a705b1621" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE 2: Clear focus to avoid showing keyboard again if you open the app from the background&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;업데이트 2 : 백그라운드에서 앱을 열면 키보드가 다시 표시되지 않도록 포커스를 지우십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="36553438065e5239b46101b621301255cfb67316" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE: More ways to get a window token&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;업데이트 : 창 토큰을 얻는 더 많은 방법&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d5d3fdd9fc52bd0ef2e646a959dedbe0c3c1384" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update:&lt;/strong&gt;
I don't know why this solution is not work any more ( I just tested on Android 23). Please use the solution of &lt;a href=&quot;https://stackoverflow.com/a/9494042/523325&quot;&gt;Saurabh Pareek&lt;/a&gt; instead. Here it is:</source>
          <target state="translated">&lt;strong&gt;업데이트 :&lt;/strong&gt; 이 솔루션이 더 이상 작동하지 않는 이유를 모르겠습니다 (방금 Android 23에서 테스트했습니다). 대신 &lt;a href=&quot;https://stackoverflow.com/a/9494042/523325&quot;&gt;Saurabh Pareek&lt;/a&gt; 의 솔루션을 사용하십시오. 여기있어:</target>
        </trans-unit>
        <trans-unit id="430833ed48b905d78e67676ad941f5fb3ff2e479" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update:&lt;/strong&gt; Just found what dialogs use to never show the keyboard and works in all versions:</source>
          <target state="translated">&lt;strong&gt;업데이트 :&lt;/strong&gt; 키보드를 표시하지 않고 모든 버전에서 작동하는 대화 상자를 찾았습니다.</target>
        </trans-unit>
        <trans-unit id="68f94f54d83b4066a2138a1188498db71a566013" translate="yes" xml:space="preserve">
          <source>Above answers work for different scenario's but  &lt;strong&gt;If you want to hide the keyboard inside a view and struggling to get the right context try this:&lt;/strong&gt;</source>
          <target state="translated">위의 답변은 다른 시나리오에서 작동하지만 &lt;strong&gt;뷰 내에서 키보드를 숨기고 올바른 컨텍스트를 얻기 위해 고군분투하려면 다음을 시도하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b92172163270e91a26b57df3ee4b074879c00a1d" translate="yes" xml:space="preserve">
          <source>Add this line to the end of the method:</source>
          <target state="translated">메소드 끝에 다음 행을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="f4d1206982236343c3ff4a0d31a949d0d9c5377f" translate="yes" xml:space="preserve">
          <source>Add to your activity    &lt;code&gt;android:windowSoftInputMode=&quot;stateHidden&quot;&lt;/code&gt; in Manifest file. Example:</source>
          <target state="translated">매니페스트 파일에서 &lt;code&gt;android:windowSoftInputMode=&quot;stateHidden&quot;&lt;/code&gt; 활동에 추가하십시오. 예:</target>
        </trans-unit>
        <trans-unit id="71349308b905dfb48c02f682a178c46233787a82" translate="yes" xml:space="preserve">
          <source>After testing many of the suggested answers on a number of different phones (including froyo and gingerbread devices) it became apparent that android apps can reliably:</source>
          <target state="translated">많은 다른 전화 (froyo 및 gingerbread 장치 포함)에서 제안 된 답변을 테스트 한 후 Android 앱이 안정적으로 다음을 수행 할 수 있음이 분명해졌습니다.</target>
        </trans-unit>
        <trans-unit id="30dd523c1a7f691f45e40641e6ea53d6499603a8" translate="yes" xml:space="preserve">
          <source>After writing in the edit field and clicking on the &lt;code&gt;Button&lt;/code&gt;, I want to hide the virtual keyboard. I assume that this is a simple piece of code, but where can I find an example of it?</source>
          <target state="translated">편집 필드에 쓰고 &lt;code&gt;Button&lt;/code&gt; 클릭 한 후 가상 키보드를 숨기고 싶습니다. 나는 이것이 단순한 코드 조각이라고 가정하지만 그 예제는 어디에서 찾을 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="01c5349d233deb515f88d5cb0ea1f5cb51bb04a5" translate="yes" xml:space="preserve">
          <source>Almost unbelievably, it appears to do nothing to prevent the keyboard from opening when you touch the control (unless &lt;code&gt;focusable=&quot;false&quot;&lt;/code&gt; and/or &lt;code&gt;focusableInTouchMode=&quot;false&quot;&lt;/code&gt; are assigned to the control). Apparently, the windowSoftInputMode setting applies only to automatic focus events, not to focus events triggered by touch events.</source>
          <target state="translated">컨트롤을 터치 할 때 키보드가 열리지 않도록하는 것은 거의 믿을 수없는 것 같습니다 ( &lt;code&gt;focusable=&quot;false&quot;&lt;/code&gt; 및 / 또는 &lt;code&gt;focusableInTouchMode=&quot;false&quot;&lt;/code&gt; 가 컨트롤에 할당되지 않은 경우). 분명히 windowSoftInputMode 설정은 터치 이벤트에 의해 트리거 된 이벤트에 초점을 맞추지 않고 자동 포커스 이벤트에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="391b4187f0014967ac951b1773786a6b330fd494" translate="yes" xml:space="preserve">
          <source>Also useful for hiding the soft-keyboard is:</source>
          <target state="translated">소프트 키보드를 숨길 때도 유용합니다.</target>
        </trans-unit>
        <trans-unit id="46e4a13a9ba78442c9b37fe440fb09f1ff2a8db7" translate="yes" xml:space="preserve">
          <source>Alternatively to &lt;a href=&quot;https://stackoverflow.com/a/9494042/451962&quot;&gt;this all around solution&lt;/a&gt;, if you wanted to close the soft keyboard &lt;strong&gt;from anywhere&lt;/strong&gt; without having a reference to the (EditText) field that was used to open the keyboard, but still wanted to do it if the field was focused, you could use this (from an Activity):</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/9494042/451962&quot;&gt;이 모든 주위 해결책&lt;/a&gt; 대신 키보드를 여는 데 사용 된 (EditText) 필드를 참조하지 않고 &lt;strong&gt;어디에서나&lt;/strong&gt; 소프트 키보드를 닫고 싶지만 필드에 초점이 맞춰져 있으면 여전히 그렇게하고 싶을 때 사용할 수 있습니다 이것 (활동에서) :</target>
        </trans-unit>
        <trans-unit id="d6aa8dae9787f34bd13ebd8223bde7c9d4ff2217" translate="yes" xml:space="preserve">
          <source>And for closing call:</source>
          <target state="translated">그리고 전화를 끝내기 위해 :</target>
        </trans-unit>
        <trans-unit id="f173ecd1c5182a039c643250ad8fa69ba9242c4a" translate="yes" xml:space="preserve">
          <source>Be aware that this utility method ONLY works when called from an &lt;code&gt;Activity&lt;/code&gt;! The above method calls &lt;code&gt;getCurrentFocus&lt;/code&gt; of the target &lt;code&gt;Activity&lt;/code&gt; to fetch the proper window token.</source>
          <target state="translated">이 유틸리티 메소드는 &lt;code&gt;Activity&lt;/code&gt; 에서 호출 될 때만 작동합니다! 위의 메소드는 대상 &lt;code&gt;Activity&lt;/code&gt; &lt;code&gt;getCurrentFocus&lt;/code&gt; 를 호출하여 적절한 창 토큰을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="502d060c6f490cd74c1ea6555917cd7ae4e5337b" translate="yes" xml:space="preserve">
          <source>Below is some additional information gleaned from more time wasted chasing this solution:</source>
          <target state="translated">아래는이 솔루션을 찾는 데 더 많은 시간을 소비하여 얻은 추가 정보입니다.</target>
        </trans-unit>
        <trans-unit id="cfad39dc55cac1b221334145e87b2d52a77168df" translate="yes" xml:space="preserve">
          <source>But suppose you want to hide the keyboard from an &lt;code&gt;EditText&lt;/code&gt; hosted in a &lt;code&gt;DialogFragment&lt;/code&gt;? You can't use the method above for that:</source>
          <target state="translated">그러나 &lt;code&gt;DialogFragment&lt;/code&gt; 에서 호스팅되는 &lt;code&gt;EditText&lt;/code&gt; 에서 키보드를 숨기고 싶다고 가정 해보십시오 . 위의 방법을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d665c6af3c2f8c184e84494fe6225be1894acf71" translate="yes" xml:space="preserve">
          <source>Check this &lt;a href=&quot;https://stackoverflow.com/a/3449616/2837443&quot;&gt;related answer&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/3449616/2837443&quot;&gt;관련 답변&lt;/a&gt; 확인</target>
        </trans-unit>
        <trans-unit id="c2d4094ca381c9176be5f252878c9ec86d83b2d4" translate="yes" xml:space="preserve">
          <source>Close/hide android soft keyboard</source>
          <target state="translated">안드로이드 소프트 키보드 닫기 / 숨기기</target>
        </trans-unit>
        <trans-unit id="37d92fb5022a3a039049bb8086fc3001db02641c" translate="yes" xml:space="preserve">
          <source>Create a function with that will manage some of the &lt;code&gt;EditText&lt;/code&gt;'s properties:</source>
          <target state="translated">&lt;code&gt;EditText&lt;/code&gt; 속성 중 일부를 관리하는 함수를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="632688d9dfd732b4ff204dc45af3e0683353942f" translate="yes" xml:space="preserve">
          <source>Example of real use</source>
          <target state="translated">실제 사용 예</target>
        </trans-unit>
        <trans-unit id="2ea08e9f289c75a61cbe20a35b324651c8561ed6" translate="yes" xml:space="preserve">
          <source>For me, temporarily hiding the keyboard is not enough.  On some devices it will re-appear as soon as a new text field is focused.  As my app uses multiple text fields on one page, focusing a new text field will cause the hidden keyboard to pop back up again.</source>
          <target state="translated">나를 위해 키보드를 일시적으로 숨기는 것만으로는 충분하지 않습니다. 일부 장치에서는 새로운 텍스트 필드에 초점을 맞추 자마자 다시 나타납니다. 내 응용 프로그램이 한 페이지에서 여러 텍스트 필드를 사용하므로 새 텍스트 필드에 초점을 맞추면 숨겨진 키보드가 다시 팝업됩니다.</target>
        </trans-unit>
        <trans-unit id="98f31051226805c5e76143cec44fb707ba7fa0e6" translate="yes" xml:space="preserve">
          <source>For my case, I was using the a SearchView in the actionbar. After a user performs a search, the keyboard would pop open again.</source>
          <target state="translated">필자의 경우 작업 표시 줄에서 SearchView를 사용하고있었습니다. 사용자가 검색을 수행하면 키보드가 다시 열립니다.</target>
        </trans-unit>
        <trans-unit id="dfe19ef4c9c4b2f5cbdb3750c2304f3dba8e231d" translate="yes" xml:space="preserve">
          <source>For older versions, I got very good results (but far from perfect) with a &lt;code&gt;OnGlobalLayoutListener&lt;/code&gt;, added with the aid of a &lt;code&gt;ViewTreeObserver&lt;/code&gt; from my root view and then checking if the keyboard is shown like this:</source>
          <target state="translated">이전 버전의 경우 루트 뷰에서 &lt;code&gt;ViewTreeObserver&lt;/code&gt; 를 사용하여 추가 한 다음 키보드가 다음과 같이 표시되는지 확인한 OnGlobalLayoutListener 로 매우 좋은 결과를 얻었지만 완벽하지는 않았습니다.</target>
        </trans-unit>
        <trans-unit id="e147e6c468ffc02a1b74d09a2e71ab73375a0e42" translate="yes" xml:space="preserve">
          <source>Given a fragment &lt;code&gt;fragment&lt;/code&gt; as a parameter:</source>
          <target state="translated">조각 &lt;code&gt;fragment&lt;/code&gt; 이 매개 변수로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="1c570ee407dcd2afb2e0e5450d1055ba7209594c" translate="yes" xml:space="preserve">
          <source>Here pass &lt;code&gt;HIDE_IMPLICIT_ONLY&lt;/code&gt; at the position of &lt;code&gt;showFlag&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; at the position of &lt;code&gt;hiddenFlag&lt;/code&gt;. It will forcefully close soft Keyboard.</source>
          <target state="translated">여기서 &lt;code&gt;HIDE_IMPLICIT_ONLY&lt;/code&gt; 의 위치에서 HIDE_IMPLICIT_ONLY 를 전달하고 hiddenFlag 의 위치에서 &lt;code&gt;0&lt;/code&gt; 을 &lt;code&gt;hiddenFlag&lt;/code&gt; . 소프트 키보드가 강제로 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="b47f39b2bbc282306be72e2fa17870c168b56f50" translate="yes" xml:space="preserve">
          <source>Here's how you do it in Mono for Android (AKA MonoDroid)</source>
          <target state="translated">Android 용 Mono (AKA MonoDroid)에서 수행하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a6a0ce9031e0776d5fc6120b3023d51bccf114f1" translate="yes" xml:space="preserve">
          <source>Hope this helps.</source>
          <target state="translated">도움이 되었기를 바랍니다.</target>
        </trans-unit>
        <trans-unit id="5227edcfb071ab3e49ac3e9b54b4d356eb9c63ed" translate="yes" xml:space="preserve">
          <source>I feel this method is better, simpler and more aligned with Android's design pattern.
In the simple example above (and usually in most of the common cases) you'll have an &lt;code&gt;EditText&lt;/code&gt; that has/had focus and it also usually was the one to invoke the keyboard in the first place (it is definitely able to invoke it in many common scenarios). In that same way, &lt;strong&gt;it&lt;/strong&gt; should be the one to release the keyboard, usually that can be done by an &lt;code&gt;ImeAction&lt;/code&gt;. Just see how an &lt;code&gt;EditText&lt;/code&gt; with &lt;code&gt;android:imeOptions=&quot;actionDone&quot;&lt;/code&gt; behaves, you want to achieve the same behavior by the same means.</source>
          <target state="translated">이 방법이 더 좋고 간단하며 Android의 디자인 패턴과 더 잘 어울린다고 생각합니다. 위의 간단한 예에서 (보통 대부분의 경우) 포커스가있는 &lt;code&gt;EditText&lt;/code&gt; 가 있으며 일반적으로 키보드를 처음에 호출하는 것이기도합니다 (확실히 호출 할 수 있음) 많은 일반적인 시나리오). 같은 방식으로 키보드를 해제하는 것이 일반적으로 &lt;code&gt;ImeAction&lt;/code&gt; 으로 수행 할 수 있어야합니다. &lt;code&gt;android:imeOptions=&quot;actionDone&quot;&lt;/code&gt; 을 사용 하는 &lt;code&gt;EditText&lt;/code&gt; 가 어떻게 작동하는지 확인하십시오. 동일한 방법으로 동일한 동작을 수행하려고합니다.</target>
        </trans-unit>
        <trans-unit id="d931ef6423737710e268929787e86c0ae450b5ea" translate="yes" xml:space="preserve">
          <source>I got one more solution to hide keyboard:</source>
          <target state="translated">키보드를 숨기는 솔루션이 하나 더 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea294c80c103cb0537072fc3d3687bb3844c4463" translate="yes" xml:space="preserve">
          <source>I have almost tried all of these answers, I had some random issues especially with the samsung galaxy s5.</source>
          <target state="translated">나는이 모든 대답을 거의 시도했지만 특히 삼성 갤럭시 s5와 관련하여 임의의 문제가있었습니다.</target>
        </trans-unit>
        <trans-unit id="7fe1e3b2f1c2ca9392f1923ec8ef822cababde41" translate="yes" xml:space="preserve">
          <source>I have an &lt;code&gt;EditText&lt;/code&gt; and a &lt;code&gt;Button&lt;/code&gt; in my layout.</source>
          <target state="translated">레이아웃에 &lt;code&gt;EditText&lt;/code&gt; 와 &lt;code&gt;Button&lt;/code&gt; 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9048ecc76c127ac40bf8b43a36c7176195d835e" translate="yes" xml:space="preserve">
          <source>I have created a static utility method that can do the job VERY solidly, provided you call it from an &lt;code&gt;Activity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Activity&lt;/code&gt; 에서 호출하면 매우 확실하게 작업을 수행 할 수있는 정적 유틸리티 메소드를 작성했습니다.</target>
        </trans-unit>
        <trans-unit id="2b94096a835c80a889853be5306428147562bad7" translate="yes" xml:space="preserve">
          <source>I have spent more than two days working through all of the solutions posted in the thread and have found them lacking in one way or another.  My exact requirement is to have a button that will with 100% reliability show or hide the on screen keyboard.  When the keyboard is in its hidden state is should not re-appear, no matter what input fields the user clicks on.  When it is in its visible state the keyboard should not disappear no matter what buttons the user clicks.  This needs to work on Android 2.2+ all the way up to the latest devices.</source>
          <target state="translated">스레드에 게시 된 모든 솔루션을 작업하는 데 이틀 이상을 보냈으며 어떤 방식 으로든 부족한 것으로 나타났습니다. 내 정확한 요구 사항은 100 % 안정성을 가진 버튼을 사용하여 온 스크린 키보드를 표시하거나 숨기는 것입니다. 키보드가 숨겨진 상태 일 때 사용자가 어떤 입력 필드를 클릭하더라도 다시 나타나지 않아야합니다. 키보드가 보이는 상태에서 사용자가 어떤 버튼을 클릭하더라도 키보드가 사라지지 않아야합니다. 최신 기기까지 Android 2.2 이상에서 작동해야합니다.</target>
        </trans-unit>
        <trans-unit id="cf4aefd891e06316bd9ec1f2687f2b3a47234e99" translate="yes" xml:space="preserve">
          <source>I have the case, where my &lt;code&gt;EditText&lt;/code&gt; can be located also in an &lt;code&gt;AlertDialog&lt;/code&gt;, so the keyboard should be closed on dismiss. The following code seems to be working anywhere:</source>
          <target state="translated">내 &lt;code&gt;EditText&lt;/code&gt; 가 &lt;code&gt;AlertDialog&lt;/code&gt; 에도있을 수있는 경우가 있으므로 키보드를 닫을 때 키보드를 닫아야합니다. 다음 코드는 어디에서나 작동하는 것 같습니다.</target>
        </trans-unit>
        <trans-unit id="704bf9c44152ee336be4142e27aa3cc797a7174d" translate="yes" xml:space="preserve">
          <source>I put &quot;back button&quot; in quotes, since the above doesn't trigger the &lt;code&gt;onBackPressed()&lt;/code&gt; for the Activity in question. It just closes the keyboard.</source>
          <target state="translated">위의 문제는 해당 활동에 대해 &lt;code&gt;onBackPressed()&lt;/code&gt; 를 트리거하지 않기 때문에 &quot;뒤로 버튼&quot;을 따옴표로 묶습니다. 키보드를 닫습니다.</target>
        </trans-unit>
        <trans-unit id="584ac3280c531f44f41b5c9b47f5c48cd9454454" translate="yes" xml:space="preserve">
          <source>I want to hide the keyboard.  I expect to provide Android with the following statement: &lt;code&gt;Keyboard.hide()&lt;/code&gt;. The end. Thank you very much.  But Android has a problem.  You must use the &lt;code&gt;InputMethodManager&lt;/code&gt; to hide the keyboard. OK, fine, this is Android's API to the keyboard. BUT! You are required to have a &lt;code&gt;Context&lt;/code&gt; in order to get access to the IMM. Now we have a problem.  I may want to hide the keyboard from a static or utility class that has no use or need for any &lt;code&gt;Context&lt;/code&gt;. or And FAR worse, the IMM requires that you specify what &lt;code&gt;View&lt;/code&gt; (or even worse, what &lt;code&gt;Window&lt;/code&gt;) you want to hide the keyboard FROM.</source>
          <target state="translated">키보드를 숨기고 싶습니다. Android에 &lt;code&gt;Keyboard.hide()&lt;/code&gt; 문을 제공 할 것으로 예상됩니다. 끝. 대단히 감사합니다. 그러나 안드로이드에 문제가 있습니다. 키보드를 숨기려면 &lt;code&gt;InputMethodManager&lt;/code&gt; 를 사용해야합니다. 자, 이것은 키보드에 대한 안드로이드의 API입니다. 그러나! IMM에 액세스하려면 &lt;code&gt;Context&lt;/code&gt; 가 있어야합니다. 이제 문제가 있습니다. &lt;code&gt;Context&lt;/code&gt; 를 사용하지 않거나 필요로하는 정적 또는 유틸리티 클래스에서 키보드를 숨기고 싶을 수도 있습니다. 또는 더 나쁘게, IMM에서는 키보드에서 숨길 &lt;code&gt;View&lt;/code&gt; (또는 더 나쁜 &lt;code&gt;Window&lt;/code&gt; )를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="d60361ed4f314410b73a00166349b4d4a92738b3" translate="yes" xml:space="preserve">
          <source>I'm using a custom keyboard to input an Hex number so I can't have the IMM keyboard show up...</source>
          <target state="translated">IMM 키보드를 표시 할 수 없도록 사용자 정의 키보드를 사용하여 16 진수를 입력하고 있습니다 ...</target>
        </trans-unit>
        <trans-unit id="6e04eb07842b84797a95225d4991932287dd5d69" translate="yes" xml:space="preserve">
          <source>If all the other answers here don't work for you as you would like them to, there's another way of manually controlling the keyboard.</source>
          <target state="translated">여기의 다른 모든 답변이 원하는대로 작동하지 않으면 키보드를 수동으로 제어하는 ​​또 다른 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e948418d69298e8c6e09e5a2a5419b443139974e" translate="yes" xml:space="preserve">
          <source>If the soft keyboard should be shown, then the InputMethodManager is told to show the keyboard and the window is instructed to make the soft input always visible. If the soft keyboard should be hidden then the WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM is set.</source>
          <target state="translated">소프트 키보드가 표시되면 InputMethodManager에 키보드를 표시하라는 메시지가 표시되고 소프트 입력이 항상 표시되도록 창에 지시됩니다. 소프트 키보드가 숨겨져 있으면 WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM이 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="29d77a6d8ce9e44455d8c9b75aa0117cfe837cb6" translate="yes" xml:space="preserve">
          <source>If there is no focused view (e.g. can happen if you just changed fragments), there are other views that will supply a useful window token.</source>
          <target state="translated">집중된 뷰가없는 경우 (예 : 방금 조각을 변경 한 경우 발생할 수 있음) 유용한 창 토큰을 제공하는 다른 뷰가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca1b2ab2a7dd8ac8bb267ea87149d33cd6ac38e1" translate="yes" xml:space="preserve">
          <source>If you want to close the soft keyboard during a unit or functional test, you can do so by clicking the &quot;back button&quot; from your test:</source>
          <target state="translated">장치 또는 기능 테스트 중에 소프트 키보드를 닫으려면 테스트에서 &quot;뒤로 단추&quot;를 클릭하여 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ff1260b6f489690be1d98bc9b5448407c0c6eda" translate="yes" xml:space="preserve">
          <source>In v3.2.4_r1 &lt;code&gt;setSoftInputShownOnFocus(boolean show)&lt;/code&gt; was added to control weather or not to display the keyboard when a TextView gets focus, but its still hidden so reflection must be used:</source>
          <target state="translated">v3.2.4_r1에서는 날씨를 제어하거나 TextView에 포커스가있을 때 키보드를 표시하지 않도록 &lt;code&gt;setSoftInputShownOnFocus(boolean show)&lt;/code&gt; 가 추가되었지만 여전히 숨겨져 있으므로 반사를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="a67551231aa2e03c35517cc304018540e0c6be90" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;OnClick&lt;/code&gt; listener call the &lt;code&gt;onEditorAction&lt;/code&gt; of the &lt;code&gt;EditText&lt;/code&gt; with &lt;code&gt;IME_ACTION_DONE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;OnClick&lt;/code&gt; 리스너에서 &lt;code&gt;onEditorAction&lt;/code&gt; 을 사용하여 &lt;code&gt;EditText&lt;/code&gt; 의 onEditorAction 을 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="24c8f9f7d5df287a718e901c6cd146eab91f0a89" translate="yes" xml:space="preserve">
          <source>Inside a fragment class:</source>
          <target state="translated">프래그먼트 클래스 내부 :</target>
        </trans-unit>
        <trans-unit id="f46c1a0833c548f1f2ab3704c88c1fd64f88b7aa" translate="yes" xml:space="preserve">
          <source>Inside the onCreate method the following code is run:</source>
          <target state="translated">onCreate 메소드 내에서 다음 코드가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="991f035b63f7f5bd725100330c12d97ca435c1a6" translate="yes" xml:space="preserve">
          <source>Just use this optimized code in your activity:</source>
          <target state="translated">활동에이 최적화 된 코드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7918af8ecc4a8cbf1a9290ef05fd99ac7b3ed1d2" translate="yes" xml:space="preserve">
          <source>Make sure to pause for a little while before moving on, since it takes a little while to close the back button, so subsequent clicks to Views, etc., won't be registered until after a short pause (1 second is long enough ime).</source>
          <target state="translated">뒤로 버튼을 닫는 데 약간의 시간이 걸리므로 잠시 일시 정지 한 후 (예 : 1 초 길이가 충분할 때까지 뷰 등)에 대한 후속 클릭이 등록되지 않으므로 계속하기 전에 잠시 동안 일시 중지하십시오. ).</target>
        </trans-unit>
        <trans-unit id="1fb52a3bd0d6218c2f5f530f56b272e874ec6d78" translate="yes" xml:space="preserve">
          <source>Mark an activity to never show or allow the use of the
keyboard.  This flag can only be set when an activity is
initialising.</source>
          <target state="translated">키보드 사용을 보여 주거나 사용하지 않도록 활동을 표시하십시오. 이 플래그는 활동이 초기화 될 때만 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f16e626c3b755a93b1aaadacb1989ef40fdd7f12" translate="yes" xml:space="preserve">
          <source>Meier's solution works for me too. In my case the top level of my App is a tabHost and I want to hide the keyword when switching tabs - I get the window token from the tabHost View.</source>
          <target state="translated">Meier의 솔루션도 저에게 효과적입니다. 필자의 경우 내 앱의 최상위 레벨은 tabHost이며 탭을 전환 할 때 키워드를 숨기고 싶습니다-tabHost보기에서 창 토큰을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="a48aec7b801b69e814f4d3c37c83f3fb22a64136" translate="yes" xml:space="preserve">
          <source>Might as well use the correct flags, though.</source>
          <target state="translated">그래도 올바른 플래그를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3959676d1fd62f94037aa3e960244375aeabbf5c" translate="yes" xml:space="preserve">
          <source>Now, whenever you want to open the keyboard manually call:</source>
          <target state="translated">이제 키보드를 수동으로 열 때마다 다음을 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="1676b6642119a6e78e273b06ef382dc642a9b8c8" translate="yes" xml:space="preserve">
          <source>Old answer:</source>
          <target state="translated">오래된 답변 :</target>
        </trans-unit>
        <trans-unit id="5ebd9feb499fc2eac9c143b157f76ad547618030" translate="yes" xml:space="preserve">
          <source>Please try this below code in  &lt;code&gt;onCreate()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;onCreate()&lt;/code&gt; 에서 아래 코드를 시도하십시오</target>
        </trans-unit>
        <trans-unit id="a66450c474481f5ee0573af99ee52b0b3aab4d3f" translate="yes" xml:space="preserve">
          <source>Show the keyboard when an activity starts
and set a flag on the activity indicating that they keyboard should
always be visible.  This flag can only be set when an activity is
initialising.</source>
          <target state="translated">활동이 시작될 때 키보드를 표시하고 활동에 키보드를 항상 표시해야 함을 나타내는 플래그를 설정하십시오. 이 플래그는 활동이 초기화 될 때만 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15c6dbf19c6d595cc943a1723bbd90b31bb5bb7d" translate="yes" xml:space="preserve">
          <source>Simple and Easy to use method, just call &lt;strong&gt;hideKeyboardFrom(YourActivity.this);&lt;/strong&gt; to hide keyboard</source>
          <target state="translated">간단하고 사용하기 쉬운 메소드, &lt;strong&gt;hideKeyboardFrom (YourActivity.this);&lt;/strong&gt; 키보드를 숨기려면</target>
        </trans-unit>
        <trans-unit id="9efcb3eb7be71a28f720d7d707df077f1540eece" translate="yes" xml:space="preserve">
          <source>Starting from your content body:</source>
          <target state="translated">컨텐츠 본문에서 시작 :</target>
        </trans-unit>
        <trans-unit id="123c98bedea517925ec9f05b4abebd4af9ae3fb3" translate="yes" xml:space="preserve">
          <source>Temporarily hide the keyboard.  It will re-appear again when a user
focuses a new text field.</source>
          <target state="translated">키보드를 일시적으로 숨 깁니다. 사용자가 새 텍스트 필드에 초점을 맞추면 다시 나타납니다.</target>
        </trans-unit>
        <trans-unit id="4cdb1fa47b39bc1a25f585e458ebe6212e656af1" translate="yes" xml:space="preserve">
          <source>Thanks to &lt;a href=&quot;https://stackoverflow.com/a/7696791/1617737&quot;&gt;this SO answer&lt;/a&gt;, I derived the following which, in my case, works nicely when scrolling through the the fragments of a ViewPager...</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/7696791/1617737&quot;&gt;이 SO 답변&lt;/a&gt; 덕분에 내 경우에는 ViewPager의 조각을 스크롤 할 때 잘 작동하는 다음을 파생했습니다 ...</target>
        </trans-unit>
        <trans-unit id="bec18bfac867702bfd761245f9fc21d98773d4ee" translate="yes" xml:space="preserve">
          <source>The drill-down</source>
          <target state="translated">드릴 다운</target>
        </trans-unit>
        <trans-unit id="cc835fe349122d507337a145d433d88cb7773291" translate="yes" xml:space="preserve">
          <source>The short answer</source>
          <target state="translated">짧은 대답</target>
        </trans-unit>
        <trans-unit id="30402e74e3a068366f88f5698e68ab191b711765" translate="yes" xml:space="preserve">
          <source>Then, make sure that onFocus of the &lt;code&gt;EditText&lt;/code&gt; you open/close the keyboard:</source>
          <target state="translated">그런 다음 &lt;code&gt;EditText&lt;/code&gt; 의 onFocus가 키보드를 열거 나 닫는 지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3013bf35af3d83fc637ee3c042eb9d571dd1618b" translate="yes" xml:space="preserve">
          <source>There's yet another point of contention to be aware of. By default, Android will automatically assign initial focus to the first &lt;code&gt;EditText&lt;/code&gt; or focusable control in your &lt;code&gt;Activity&lt;/code&gt;.  It naturally follows that the InputMethod (typically the soft keyboard) will respond to the focus event by showing itself. The &lt;code&gt;windowSoftInputMode&lt;/code&gt; attribute in &lt;code&gt;AndroidManifest.xml&lt;/code&gt;, when set to &lt;code&gt;stateAlwaysHidden&lt;/code&gt;, instructs the keyboard to ignore this automatically-assigned initial focus.</source>
          <target state="translated">알아야 할 또 다른 논쟁 지점이 있습니다. 기본적으로 Android는 &lt;code&gt;Activity&lt;/code&gt; 의 첫 번째 &lt;code&gt;EditText&lt;/code&gt; 또는 포커스 가능한 컨트롤에 초기 포커스를 자동으로 할당합니다. InputMethod (일반적으로 소프트 키보드)는 자체적으로 포커스 이벤트에 응답합니다. &lt;code&gt;AndroidManifest.xml&lt;/code&gt; 의 &lt;code&gt;windowSoftInputMode&lt;/code&gt; 속성은 stateAlwaysHidden으로 설정되면 키보드가 자동 할당 된 초기 초점을 무시하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="07611b83f4f2d85d658d0f7d5fec16a9b16b5de5" translate="yes" xml:space="preserve">
          <source>Therefore, &lt;code&gt;stateAlwaysHidden&lt;/code&gt; is VERY poorly named indeed. It should perhaps be called &lt;code&gt;ignoreInitialFocus&lt;/code&gt; instead.</source>
          <target state="translated">따라서 &lt;code&gt;stateAlwaysHidden&lt;/code&gt; 은 이름이 매우 잘못되었습니다. 대신 &lt;code&gt;ignoreInitialFocus&lt;/code&gt; 라고합니다.</target>
        </trans-unit>
        <trans-unit id="0896178be49463c6e1f9b592cd05377b0b6c1961" translate="yes" xml:space="preserve">
          <source>These are alternatives for the above code &lt;code&gt;if (view == null)   view = new View(activity);&lt;/code&gt;  These don't refer explicitly to your activity.</source>
          <target state="translated">위의 코드에 대한 대안은 &lt;code&gt;if (view == null) view = new View(activity);&lt;/code&gt; 이들은 귀하의 활동을 명시 적으로 언급하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fe0f460a2f2c1670aabed00b6a29f486b40f0ae5" translate="yes" xml:space="preserve">
          <source>This approach works reliably on all devices I have tested on - from a 4 year old HTC phone running android 2.2 up to a nexus 7 running 4.2.2.  The only disadvantage with this approach is you need to be careful with handling the back button.  As my app essentially only has one screen (its a calculator) I can override onBackPressed() and return to the devices home screen.</source>
          <target state="translated">이 방법은 안드로이드 2.2를 실행하는 4 년 된 HTC 전화에서 4.2.2를 실행하는 넥서스 7까지 내가 테스트 한 모든 장치에서 안정적으로 작동합니다. 이 방법의 유일한 단점은 뒤로 버튼을 다룰 때주의해야한다는 것입니다. 내 응용 프로그램에는 기본적으로 하나의 화면 (계산기) 만 있으므로 onBackPressed ()를 재정의하고 장치 홈 화면으로 돌아갈 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="280f3a02c9c3a4c2cb66c3c94c0645ef1db583e4" translate="yes" xml:space="preserve">
          <source>This can be used to suppress the soft-keyboard until the user actually touches the editText View.</source>
          <target state="translated">사용자가 editText보기를 실제로 터치 할 때까지 소프트 키보드를 억제하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e830705ef1cbb279a5f9042d1150c2b9016307c" translate="yes" xml:space="preserve">
          <source>This causes the current activity to have its state saved into a Bundle, and then the activity is started, passing through an boolean which indicates if the keyboard should be shown or hidden.</source>
          <target state="translated">이로 인해 현재 활동의 상태가 번들에 저장된 후 키보드가 표시되거나 숨겨져 야 하는지를 나타내는 부울을 통해 활동이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="9d0f044148bec9f373705aec93858a2146abfbf8" translate="yes" xml:space="preserve">
          <source>This is what makes hiding the keyboard so challenging. Dear Google: When I'm looking up the recipe for a cake, there is no &lt;code&gt;RecipeProvider&lt;/code&gt; on Earth that would refuse to provide me with the recipe unless I first answer WHO the cake will be eaten by AND where it will be eaten!!</source>
          <target state="translated">이것이 키보드를 숨기는 것이 어려운 일입니다. 친애하는 Google : 케이크를 만들기위한 레시피를 찾을 때 케이크를 먹을 곳과 어디서 먹을지를 대답하지 않으면 레시피 제공을 거부하는 &lt;code&gt;RecipeProvider&lt;/code&gt; 가 지구상에 없습니다!</target>
        </trans-unit>
        <trans-unit id="a36a75b28b85949d6796ec6f80ad8f7a200d0123" translate="yes" xml:space="preserve">
          <source>This last solution may show the keyboard for a split second and messes with the selection handles.</source>
          <target state="translated">이 마지막 솔루션은 순간적으로 키보드를 표시하고 선택 핸들을 망칠 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="636fef779f8a03c113fafc429ad64fccce6caa04" translate="yes" xml:space="preserve">
          <source>This sad story ends with the ugly truth: to hide the Android keyboard, you will be required to provide 2 forms of identification: a &lt;code&gt;Context&lt;/code&gt; and either a &lt;code&gt;View&lt;/code&gt; or a &lt;code&gt;Window&lt;/code&gt;.</source>
          <target state="translated">이 슬픈 이야기는 추악한 진실로 끝납니다 .Android 키보드를 숨기려면 &lt;code&gt;Context&lt;/code&gt; 와 &lt;code&gt;View&lt;/code&gt; 또는 &lt;code&gt;Window&lt;/code&gt; 이라는 두 가지 형태의 식별을 제공해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="55ef13a1e73329e726feb2ef079106cad9f434f9" translate="yes" xml:space="preserve">
          <source>This should work:</source>
          <target state="translated">이것은 작동해야합니다 :</target>
        </trans-unit>
        <trans-unit id="a2288cc6581d7b7a0946eb3276592e3a569b8926" translate="yes" xml:space="preserve">
          <source>This will force the keyboard to be hidden in all situations. In some cases you will want to pass in &lt;code&gt;InputMethodManager.HIDE_IMPLICIT_ONLY&lt;/code&gt; as the second parameter to ensure you only hide the keyboard when the user didn't explicitly force it to appear (by holding down menu).</source>
          <target state="translated">이렇게하면 모든 상황에서 키보드가 숨겨집니다. 경우에 따라 &lt;code&gt;InputMethodManager.HIDE_IMPLICIT_ONLY&lt;/code&gt; 를 두 번째 매개 변수로 전달하여 사용자가 명시 적으로 키보드를 표시하지 않은 경우에만 메뉴를 누르고 있으면 키보드를 숨길 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f557108cc7f56192eb7710110bbb5c740e2fc15b" translate="yes" xml:space="preserve">
          <source>This won't work because you'll be passing a reference to the &lt;code&gt;Fragment&lt;/code&gt;'s host &lt;code&gt;Activity&lt;/code&gt;, which will have no focused control while the &lt;code&gt;Fragment&lt;/code&gt; is shown! Wow! So, for hiding the keyboard from fragments, I resort to the lower-level, more common, and uglier:</source>
          <target state="translated">&lt;code&gt;Fragment&lt;/code&gt; 의 호스트 &lt;code&gt;Activity&lt;/code&gt; 대한 참조를 전달하기 때문에 작동하지 않습니다. &lt;code&gt;Fragment&lt;/code&gt; 가 표시되는 동안에는 집중된 제어가 없습니다! 와! 따라서 조각에서 키보드를 숨기려면 하위 레벨, 더 일반적이며 더 못생긴 방법을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d0373d2754a03ef5917cc5ea59e5197aa9376432" translate="yes" xml:space="preserve">
          <source>This worked for me for all the bizarre keyboard behavior</source>
          <target state="translated">이것은 모든 기괴한 키보드 동작에 대해 나를 위해 일했습니다.</target>
        </trans-unit>
        <trans-unit id="2f490f9ccfed247cc722cc9c067ba82ece34cba6" translate="yes" xml:space="preserve">
          <source>To help clarify this madness, I'd like to begin by apologizing on behalf of all Android users for Google's downright ridiculous treatment of the soft keyboard. The reason there are so many answers, each different, for the same simple question because this API, like many others in Android, is horribly designed. I can think of no polite way to state it.</source>
          <target state="translated">이 광기를 명확히하기 위해 모든 안드로이드 사용자를 대신하여 Google의 소프트 키보드에 대한 우스운 처리를 사과드립니다. Android의 다른 많은 API와 마찬가지로이 API는 끔찍하게 설계 되었기 때문에 동일한 간단한 질문에 대해 서로 다른 많은 답변이있는 이유는 무엇입니까? 나는 그것을 정중하게 표현할 방법이 없다고 생각할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e21644360428c7d8b77323a835575e5d707c90b0" translate="yes" xml:space="preserve">
          <source>Unfortunately item 2 and 3 on the list only work reliability when an activity is being started.  Once the activity has become visible you cannot permanently hide or show the keyboard.  The trick is to actually restart your activity when the user presses the keyboard toggle button.  In my app when the user presses on the toggle keyboard button, the following code runs:</source>
          <target state="translated">불행히도 목록의 항목 2와 3은 활동이 시작될 때만 안정성을 작동합니다. 활동이 표시되면 키보드를 영구적으로 숨기거나 표시 할 수 없습니다. 요령은 사용자가 키보드 전환 버튼을 누를 때 실제로 활동을 다시 시작하는 것입니다. 사용자가 토글 키보드 버튼을 누르면 내 앱에서 다음 코드가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="6073347556b92710a1cae7bfd6f95334a2d56147" translate="yes" xml:space="preserve">
          <source>Using the InputMethodManager did not close the keyboard. I had to clearFocus and set the focusable of the search view to false:</source>
          <target state="translated">InputMethodManager를 사용해도 키보드가 닫히지 않았습니다. 초점을 지우고 검색 뷰의 포커스를 false로 설정해야했습니다.</target>
        </trans-unit>
        <trans-unit id="4092ca80baa6fbcc673ca3756bd415cad19ccd43" translate="yes" xml:space="preserve">
          <source>What I end up with is forcing the show and hide, and it works perfectly:</source>
          <target state="translated">내가 끝내는 것은 쇼를 숨기고 완벽하게 작동하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c25cb3bafc39a0d6203554a47821145d63d93932" translate="yes" xml:space="preserve">
          <source>When in the keyboard enters full screen, onGlobalLayout isn't called. To avoid that, use &lt;a href=&quot;https://developer.android.com/reference/android/widget/TextView.html#setImeOptions%28int%29&quot;&gt;TextView#setImeOptions(int)&lt;/a&gt; or in the TextView XML declaration:</source>
          <target state="translated">키보드가 전체 화면으로 들어가면 onGlobalLayout이 호출되지 않습니다. 이를 피하려면 &lt;a href=&quot;https://developer.android.com/reference/android/widget/TextView.html#setImeOptions%28int%29&quot;&gt;TextView # setImeOptions (int)&lt;/a&gt; 또는 TextView XML 선언에서 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c4d468602dd57b74a87ab550adbbec95d9a538f3" translate="yes" xml:space="preserve">
          <source>When touching outside the keyboard.</source>
          <target state="translated">키보드 외부를 만질 때.</target>
        </trans-unit>
        <trans-unit id="5b0cceb4fda9665bce6fc6593579afa5c06f30e7" translate="yes" xml:space="preserve">
          <source>You can force Android to hide the virtual keyboard using the &lt;a href=&quot;http://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html&quot;&gt;InputMethodManager&lt;/a&gt;, calling &lt;a href=&quot;http://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html#hideSoftInputFromWindow%28android.os.IBinder,%20int%29&quot;&gt;&lt;code&gt;hideSoftInputFromWindow&lt;/code&gt;&lt;/a&gt;, passing in the token of the window containing your focused view.</source>
          <target state="translated">&lt;a href=&quot;http://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html&quot;&gt;InputMethodManager를&lt;/a&gt; 사용하여 Android가 가상 키보드를 숨기도록 숨길 수 있습니다. &lt;a href=&quot;http://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html#hideSoftInputFromWindow%28android.os.IBinder,%20int%29&quot;&gt; &lt;code&gt;hideSoftInputFromWindow&lt;/code&gt; 를&lt;/a&gt; 호출하고 초점이 맞춰진보기가 포함 된 창의 토큰을 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="fa6819babfed2f44f295152d44fafd6c02c19e5e" translate="yes" xml:space="preserve">
          <source>You can see a working implementation of this in my app &lt;a href=&quot;https://play.google.com/store/apps/details?id=au.com.lukesleeman.rpn&amp;amp;hl=en&quot;&gt;clean RPN&lt;/a&gt;.</source>
          <target state="translated">내 앱 &lt;a href=&quot;https://play.google.com/store/apps/details?id=au.com.lukesleeman.rpn&amp;amp;hl=en&quot;&gt;clean RPN&lt;/a&gt; 에서 작동하는 구현을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bcfbef6dc74e1d228301f445a3556e06bb75b46f" translate="yes" xml:space="preserve">
          <source>after that call on onTouchListener:</source>
          <target state="translated">onTouchListener에 대한 호출 후 :</target>
        </trans-unit>
        <trans-unit id="3d3093f7221ddef2ce2927ed0d133eaadaa4a137" translate="yes" xml:space="preserve">
          <source>and to get the context fetch it from constructor:)</source>
          <target state="translated">컨텍스트를 생성자에서 가져 오려면 :)</target>
        </trans-unit>
        <trans-unit id="3ed6e8613259f1c2f5669c4b07261dac8d098424" translate="yes" xml:space="preserve">
          <source>from so searching, here I found an answer that works for me</source>
          <target state="translated">그래서 검색에서 나에게 맞는 답변을 찾았습니다.</target>
        </trans-unit>
        <trans-unit id="ae8d167cf77b0fb4fa5ed96fd284993f4fe31289" translate="yes" xml:space="preserve">
          <source>use this</source>
          <target state="translated">이것을 사용하십시오</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
