<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/1109022">
    <body>
      <group id="1109022">
        <trans-unit id="2d705203d004168420b2371af5567a5181b6915b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/a/9494042/197359&quot;&gt;Saurabh Pareek&lt;/a&gt; has the best answer so far.</source>
          <target state="translated">到目前为止， &lt;a href=&quot;https://stackoverflow.com/a/9494042/197359&quot;&gt;Saurabh Pareek&lt;/a&gt;的答案是最好的。</target>
        </trans-unit>
        <trans-unit id="f032e2d6c71514b7dd73c2199ebc40c6ab8fb562" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;About windowSoftInputMode&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;关于windowSoftInputMode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9fb5e43380e0e0ed38754145accd58ee47ce367" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Kotlin Syntax&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Kotlin语法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f87517e9424dead3a132f36421c7063aa1ff1f14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you want to do this in Kotlin, use:
&lt;code&gt;context?.getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果要在Kotlin中执行此操作，请使用： &lt;code&gt;context?.getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0662e12d6ab52c694189e2d4852b062a705b1621" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE 2: Clear focus to avoid showing keyboard again if you open the app from the background&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;更新2：清除焦点，以避免在后台打开应用程序时再次显示键盘&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="36553438065e5239b46101b621301255cfb67316" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE: More ways to get a window token&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;更新：获取窗口令牌的更多方法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d5d3fdd9fc52bd0ef2e646a959dedbe0c3c1384" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update:&lt;/strong&gt;
I don't know why this solution is not work any more ( I just tested on Android 23). Please use the solution of &lt;a href=&quot;https://stackoverflow.com/a/9494042/523325&quot;&gt;Saurabh Pareek&lt;/a&gt; instead. Here it is:</source>
          <target state="translated">&lt;strong&gt;更新：&lt;/strong&gt;我不知道为什么该解决方案不再起作用（我刚刚在Android 23上进行了测试）。 请改用&lt;a href=&quot;https://stackoverflow.com/a/9494042/523325&quot;&gt;Saurabh Pareek&lt;/a&gt;的解决方案。 这里是：</target>
        </trans-unit>
        <trans-unit id="430833ed48b905d78e67676ad941f5fb3ff2e479" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update:&lt;/strong&gt; Just found what dialogs use to never show the keyboard and works in all versions:</source>
          <target state="translated">&lt;strong&gt;更新：&lt;/strong&gt;刚刚找到了用于从不显示键盘的对话框，并且可以在所有版本中使用：</target>
        </trans-unit>
        <trans-unit id="68f94f54d83b4066a2138a1188498db71a566013" translate="yes" xml:space="preserve">
          <source>Above answers work for different scenario's but  &lt;strong&gt;If you want to hide the keyboard inside a view and struggling to get the right context try this:&lt;/strong&gt;</source>
          <target state="translated">上面的答案适用于不同的情况，但是&lt;strong&gt;如果您想将键盘隐藏在视图中并努力获取正确的上下文，请尝试以下操作：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b92172163270e91a26b57df3ee4b074879c00a1d" translate="yes" xml:space="preserve">
          <source>Add this line to the end of the method:</source>
          <target state="translated">在方法的最后加上这一行。</target>
        </trans-unit>
        <trans-unit id="f4d1206982236343c3ff4a0d31a949d0d9c5377f" translate="yes" xml:space="preserve">
          <source>Add to your activity    &lt;code&gt;android:windowSoftInputMode=&quot;stateHidden&quot;&lt;/code&gt; in Manifest file. Example:</source>
          <target state="translated">将清单文件中的 &lt;code&gt;android:windowSoftInputMode=&quot;stateHidden&quot;&lt;/code&gt; 添加到您的活动中。 例：</target>
        </trans-unit>
        <trans-unit id="71349308b905dfb48c02f682a178c46233787a82" translate="yes" xml:space="preserve">
          <source>After testing many of the suggested answers on a number of different phones (including froyo and gingerbread devices) it became apparent that android apps can reliably:</source>
          <target state="translated">在测试了许多不同手机(包括froyo和gingerbread设备)上的建议答案后,很明显,android应用可以可靠地实现。</target>
        </trans-unit>
        <trans-unit id="30dd523c1a7f691f45e40641e6ea53d6499603a8" translate="yes" xml:space="preserve">
          <source>After writing in the edit field and clicking on the &lt;code&gt;Button&lt;/code&gt;, I want to hide the virtual keyboard. I assume that this is a simple piece of code, but where can I find an example of it?</source>
          <target state="translated">在编辑字段中写入并单击 &lt;code&gt;Button&lt;/code&gt; ，我想隐藏虚拟键盘。 我假设这是一段简单的代码，但是在哪里可以找到示例呢？</target>
        </trans-unit>
        <trans-unit id="01c5349d233deb515f88d5cb0ea1f5cb51bb04a5" translate="yes" xml:space="preserve">
          <source>Almost unbelievably, it appears to do nothing to prevent the keyboard from opening when you touch the control (unless &lt;code&gt;focusable=&quot;false&quot;&lt;/code&gt; and/or &lt;code&gt;focusableInTouchMode=&quot;false&quot;&lt;/code&gt; are assigned to the control). Apparently, the windowSoftInputMode setting applies only to automatic focus events, not to focus events triggered by touch events.</source>
          <target state="translated">几乎令人难以置信的是，它似乎无济于事，无法阻止您在触摸控件时打开键盘（除非为控件分配了 &lt;code&gt;focusable=&quot;false&quot;&lt;/code&gt; 和/或 &lt;code&gt;focusableInTouchMode=&quot;false&quot;&lt;/code&gt; ）。 显然，windowSoftInputMode设置仅适用于自动聚焦事件，不适用于触摸事件触发的聚焦事件。</target>
        </trans-unit>
        <trans-unit id="391b4187f0014967ac951b1773786a6b330fd494" translate="yes" xml:space="preserve">
          <source>Also useful for hiding the soft-keyboard is:</source>
          <target state="translated">同样有用的隐藏软键盘是。</target>
        </trans-unit>
        <trans-unit id="46e4a13a9ba78442c9b37fe440fb09f1ff2a8db7" translate="yes" xml:space="preserve">
          <source>Alternatively to &lt;a href=&quot;https://stackoverflow.com/a/9494042/451962&quot;&gt;this all around solution&lt;/a&gt;, if you wanted to close the soft keyboard &lt;strong&gt;from anywhere&lt;/strong&gt; without having a reference to the (EditText) field that was used to open the keyboard, but still wanted to do it if the field was focused, you could use this (from an Activity):</source>
          <target state="translated">除此之外，如果您要&lt;strong&gt;在&lt;/strong&gt;不参考用于打开键盘的（EditText）字段的情况下&lt;strong&gt;从任何位置&lt;/strong&gt;关闭软键盘，但仍想这样做，则可以使用以下方法：这（来自一个活动）：</target>
        </trans-unit>
        <trans-unit id="d6aa8dae9787f34bd13ebd8223bde7c9d4ff2217" translate="yes" xml:space="preserve">
          <source>And for closing call:</source>
          <target state="translated">而对于收官之战。</target>
        </trans-unit>
        <trans-unit id="f173ecd1c5182a039c643250ad8fa69ba9242c4a" translate="yes" xml:space="preserve">
          <source>Be aware that this utility method ONLY works when called from an &lt;code&gt;Activity&lt;/code&gt;! The above method calls &lt;code&gt;getCurrentFocus&lt;/code&gt; of the target &lt;code&gt;Activity&lt;/code&gt; to fetch the proper window token.</source>
          <target state="translated">请注意，只有从 &lt;code&gt;Activity&lt;/code&gt; 调用时，此实用程序方法才有效！ 上面的方法调用目标 &lt;code&gt;Activity&lt;/code&gt; 的 &lt;code&gt;getCurrentFocus&lt;/code&gt; 来获取正确的窗口令牌。</target>
        </trans-unit>
        <trans-unit id="502d060c6f490cd74c1ea6555917cd7ae4e5337b" translate="yes" xml:space="preserve">
          <source>Below is some additional information gleaned from more time wasted chasing this solution:</source>
          <target state="translated">以下是一些额外的信息,这些信息是从更多的时间浪费在追逐这个解决方案中收集到的。</target>
        </trans-unit>
        <trans-unit id="cfad39dc55cac1b221334145e87b2d52a77168df" translate="yes" xml:space="preserve">
          <source>But suppose you want to hide the keyboard from an &lt;code&gt;EditText&lt;/code&gt; hosted in a &lt;code&gt;DialogFragment&lt;/code&gt;? You can't use the method above for that:</source>
          <target state="translated">但是，假设您想从 &lt;code&gt;DialogFragment&lt;/code&gt; 中托管的 &lt;code&gt;EditText&lt;/code&gt; 隐藏键盘？ 您不能为此使用以上方法：</target>
        </trans-unit>
        <trans-unit id="d665c6af3c2f8c184e84494fe6225be1894acf71" translate="yes" xml:space="preserve">
          <source>Check this &lt;a href=&quot;https://stackoverflow.com/a/3449616/2837443&quot;&gt;related answer&lt;/a&gt;</source>
          <target state="translated">检查此&lt;a href=&quot;https://stackoverflow.com/a/3449616/2837443&quot;&gt;相关答案&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2d4094ca381c9176be5f252878c9ec86d83b2d4" translate="yes" xml:space="preserve">
          <source>Close/hide android soft keyboard</source>
          <target state="translated">关闭隐藏式安卓软键盘</target>
        </trans-unit>
        <trans-unit id="37d92fb5022a3a039049bb8086fc3001db02641c" translate="yes" xml:space="preserve">
          <source>Create a function with that will manage some of the &lt;code&gt;EditText&lt;/code&gt;'s properties:</source>
          <target state="translated">创建一个函数，该函数将管理 &lt;code&gt;EditText&lt;/code&gt; 的某些属性：</target>
        </trans-unit>
        <trans-unit id="632688d9dfd732b4ff204dc45af3e0683353942f" translate="yes" xml:space="preserve">
          <source>Example of real use</source>
          <target state="translated">实际使用的例子</target>
        </trans-unit>
        <trans-unit id="2ea08e9f289c75a61cbe20a35b324651c8561ed6" translate="yes" xml:space="preserve">
          <source>For me, temporarily hiding the keyboard is not enough.  On some devices it will re-appear as soon as a new text field is focused.  As my app uses multiple text fields on one page, focusing a new text field will cause the hidden keyboard to pop back up again.</source>
          <target state="translated">对我来说,暂时隐藏键盘是不够的。在某些设备上,只要聚焦一个新的文本字段,它就会重新出现。由于我的应用在一个页面上使用了多个文本字段,所以聚焦一个新的文本字段会导致隐藏键盘再次弹出。</target>
        </trans-unit>
        <trans-unit id="98f31051226805c5e76143cec44fb707ba7fa0e6" translate="yes" xml:space="preserve">
          <source>For my case, I was using the a SearchView in the actionbar. After a user performs a search, the keyboard would pop open again.</source>
          <target state="translated">在我的案例中,我使用的是动作栏中的SearchView。当用户执行搜索后,键盘会再次弹出打开。</target>
        </trans-unit>
        <trans-unit id="dfe19ef4c9c4b2f5cbdb3750c2304f3dba8e231d" translate="yes" xml:space="preserve">
          <source>For older versions, I got very good results (but far from perfect) with a &lt;code&gt;OnGlobalLayoutListener&lt;/code&gt;, added with the aid of a &lt;code&gt;ViewTreeObserver&lt;/code&gt; from my root view and then checking if the keyboard is shown like this:</source>
          <target state="translated">对于较旧的版本，使用 &lt;code&gt;OnGlobalLayoutListener&lt;/code&gt; 获得了很好的结果（但远非完美），在根视图中借助ViewTreeObserver进行了添加，然后检查是否显示了这样的键盘：</target>
        </trans-unit>
        <trans-unit id="e147e6c468ffc02a1b74d09a2e71ab73375a0e42" translate="yes" xml:space="preserve">
          <source>Given a fragment &lt;code&gt;fragment&lt;/code&gt; as a parameter:</source>
          <target state="translated">给定一个fragment &lt;code&gt;fragment&lt;/code&gt; 作为参数：</target>
        </trans-unit>
        <trans-unit id="1c570ee407dcd2afb2e0e5450d1055ba7209594c" translate="yes" xml:space="preserve">
          <source>Here pass &lt;code&gt;HIDE_IMPLICIT_ONLY&lt;/code&gt; at the position of &lt;code&gt;showFlag&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; at the position of &lt;code&gt;hiddenFlag&lt;/code&gt;. It will forcefully close soft Keyboard.</source>
          <target state="translated">在这里，在 &lt;code&gt;HIDE_IMPLICIT_ONLY&lt;/code&gt; 的位置传递HIDE_IMPLICIT_ONLY ，在hiddenFlag的位置 &lt;code&gt;showFlag&lt;/code&gt; &lt;code&gt;0&lt;/code&gt; 。 它将强制关闭软键盘。</target>
        </trans-unit>
        <trans-unit id="b47f39b2bbc282306be72e2fa17870c168b56f50" translate="yes" xml:space="preserve">
          <source>Here's how you do it in Mono for Android (AKA MonoDroid)</source>
          <target state="translated">以下是你如何在Mono for Android (又名MonoDroid)中进行操作的方法</target>
        </trans-unit>
        <trans-unit id="a6a0ce9031e0776d5fc6120b3023d51bccf114f1" translate="yes" xml:space="preserve">
          <source>Hope this helps.</source>
          <target state="translated">希望这对你有帮助。</target>
        </trans-unit>
        <trans-unit id="5227edcfb071ab3e49ac3e9b54b4d356eb9c63ed" translate="yes" xml:space="preserve">
          <source>I feel this method is better, simpler and more aligned with Android's design pattern.
In the simple example above (and usually in most of the common cases) you'll have an &lt;code&gt;EditText&lt;/code&gt; that has/had focus and it also usually was the one to invoke the keyboard in the first place (it is definitely able to invoke it in many common scenarios). In that same way, &lt;strong&gt;it&lt;/strong&gt; should be the one to release the keyboard, usually that can be done by an &lt;code&gt;ImeAction&lt;/code&gt;. Just see how an &lt;code&gt;EditText&lt;/code&gt; with &lt;code&gt;android:imeOptions=&quot;actionDone&quot;&lt;/code&gt; behaves, you want to achieve the same behavior by the same means.</source>
          <target state="translated">我觉得这种方法更好，更简单，并且更符合Android的设计模式。 在上面的简单示例中（通常在大多数常见情况下），您将拥有一个具有/具有焦点的 &lt;code&gt;EditText&lt;/code&gt; ，并且通常也是首先要调用键盘的那个（它肯定可以在以下位置调用它）许多常见情况）。 同样，应该是释放键盘的一种，通常可以通过 &lt;code&gt;ImeAction&lt;/code&gt; 完成。 只要看看带有 &lt;code&gt;android:imeOptions=&quot;actionDone&quot;&lt;/code&gt; 的 &lt;code&gt;EditText&lt;/code&gt; 的行为，您就想通过相同的方式实现相同的行为。</target>
        </trans-unit>
        <trans-unit id="d931ef6423737710e268929787e86c0ae450b5ea" translate="yes" xml:space="preserve">
          <source>I got one more solution to hide keyboard:</source>
          <target state="translated">我还有一个解决方案,可以隐藏键盘。</target>
        </trans-unit>
        <trans-unit id="ea294c80c103cb0537072fc3d3687bb3844c4463" translate="yes" xml:space="preserve">
          <source>I have almost tried all of these answers, I had some random issues especially with the samsung galaxy s5.</source>
          <target state="translated">这些答案我几乎都试过了,尤其是三星GALAXY S5,我遇到了一些随机的问题。</target>
        </trans-unit>
        <trans-unit id="7fe1e3b2f1c2ca9392f1923ec8ef822cababde41" translate="yes" xml:space="preserve">
          <source>I have an &lt;code&gt;EditText&lt;/code&gt; and a &lt;code&gt;Button&lt;/code&gt; in my layout.</source>
          <target state="translated">我的布局中有一个 &lt;code&gt;EditText&lt;/code&gt; 和一个 &lt;code&gt;Button&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9048ecc76c127ac40bf8b43a36c7176195d835e" translate="yes" xml:space="preserve">
          <source>I have created a static utility method that can do the job VERY solidly, provided you call it from an &lt;code&gt;Activity&lt;/code&gt;.</source>
          <target state="translated">我创建了一个静态实用程序方法，只要您从 &lt;code&gt;Activity&lt;/code&gt; 调用它，就可以非常可靠地完成这项工作。</target>
        </trans-unit>
        <trans-unit id="2b94096a835c80a889853be5306428147562bad7" translate="yes" xml:space="preserve">
          <source>I have spent more than two days working through all of the solutions posted in the thread and have found them lacking in one way or another.  My exact requirement is to have a button that will with 100% reliability show or hide the on screen keyboard.  When the keyboard is in its hidden state is should not re-appear, no matter what input fields the user clicks on.  When it is in its visible state the keyboard should not disappear no matter what buttons the user clicks.  This needs to work on Android 2.2+ all the way up to the latest devices.</source>
          <target state="translated">我已经花了两天多的时间来研究所有的解决方案,并发现他们在某种程度上都是缺乏的。我的确切要求是有一个按钮,可以100%可靠地显示或隐藏屏幕上的键盘。当键盘处于隐藏状态时,无论用户点击什么输入字段,键盘都不会重新出现。当键盘处于可见状态时,无论用户点击什么按钮,键盘都不会消失。这需要在Android 2.2以上的设备上运行,直到最新的设备。</target>
        </trans-unit>
        <trans-unit id="cf4aefd891e06316bd9ec1f2687f2b3a47234e99" translate="yes" xml:space="preserve">
          <source>I have the case, where my &lt;code&gt;EditText&lt;/code&gt; can be located also in an &lt;code&gt;AlertDialog&lt;/code&gt;, so the keyboard should be closed on dismiss. The following code seems to be working anywhere:</source>
          <target state="translated">我的情况是，我的 &lt;code&gt;EditText&lt;/code&gt; 也可以位于 &lt;code&gt;AlertDialog&lt;/code&gt; 中 ，因此在关闭时应关闭键盘。 以下代码似乎可以在任何地方运行：</target>
        </trans-unit>
        <trans-unit id="704bf9c44152ee336be4142e27aa3cc797a7174d" translate="yes" xml:space="preserve">
          <source>I put &quot;back button&quot; in quotes, since the above doesn't trigger the &lt;code&gt;onBackPressed()&lt;/code&gt; for the Activity in question. It just closes the keyboard.</source>
          <target state="translated">我将&amp;ldquo;后退按钮&amp;rdquo;用引号引起来，因为以上内容不会触发所 &lt;code&gt;onBackPressed()&lt;/code&gt; 活动的onBackPressed（） 。 它只是关闭键盘。</target>
        </trans-unit>
        <trans-unit id="584ac3280c531f44f41b5c9b47f5c48cd9454454" translate="yes" xml:space="preserve">
          <source>I want to hide the keyboard.  I expect to provide Android with the following statement: &lt;code&gt;Keyboard.hide()&lt;/code&gt;. The end. Thank you very much.  But Android has a problem.  You must use the &lt;code&gt;InputMethodManager&lt;/code&gt; to hide the keyboard. OK, fine, this is Android's API to the keyboard. BUT! You are required to have a &lt;code&gt;Context&lt;/code&gt; in order to get access to the IMM. Now we have a problem.  I may want to hide the keyboard from a static or utility class that has no use or need for any &lt;code&gt;Context&lt;/code&gt;. or And FAR worse, the IMM requires that you specify what &lt;code&gt;View&lt;/code&gt; (or even worse, what &lt;code&gt;Window&lt;/code&gt;) you want to hide the keyboard FROM.</source>
          <target state="translated">我想隐藏键盘。 我希望为Android提供以下语句： &lt;code&gt;Keyboard.hide()&lt;/code&gt; 。 结束。 非常感谢你。 但是Android有一个问题。 您必须使用 &lt;code&gt;InputMethodManager&lt;/code&gt; 隐藏键盘。 好的，好的，这是Android键盘的API。 但！ 您需要具有 &lt;code&gt;Context&lt;/code&gt; 才能访问IMM。 现在我们有一个问题。 我可能想从没有使用或不需要任何 &lt;code&gt;Context&lt;/code&gt; 的静态或实用程序类中隐藏键盘。 或而且，更糟的是，IMM要求您指定要隐藏键盘FROM的 &lt;code&gt;View&lt;/code&gt; （甚至是 &lt;code&gt;Window&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d60361ed4f314410b73a00166349b4d4a92738b3" translate="yes" xml:space="preserve">
          <source>I'm using a custom keyboard to input an Hex number so I can't have the IMM keyboard show up...</source>
          <target state="translated">我在使用自定义键盘输入了一个 Hex 数字,所以不能让 IMM 键盘显示出来.....</target>
        </trans-unit>
        <trans-unit id="6e04eb07842b84797a95225d4991932287dd5d69" translate="yes" xml:space="preserve">
          <source>If all the other answers here don't work for you as you would like them to, there's another way of manually controlling the keyboard.</source>
          <target state="translated">如果这里的其他答案都不能如你所愿,还有另一种手动控制键盘的方法。</target>
        </trans-unit>
        <trans-unit id="e948418d69298e8c6e09e5a2a5419b443139974e" translate="yes" xml:space="preserve">
          <source>If the soft keyboard should be shown, then the InputMethodManager is told to show the keyboard and the window is instructed to make the soft input always visible. If the soft keyboard should be hidden then the WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM is set.</source>
          <target state="translated">如果软键盘应该显示,那么InputMethodManager被告知要显示键盘,并且窗口被指示使软输入始终可见。如果软键盘应该被隐藏,那么WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM被设置。</target>
        </trans-unit>
        <trans-unit id="29d77a6d8ce9e44455d8c9b75aa0117cfe837cb6" translate="yes" xml:space="preserve">
          <source>If there is no focused view (e.g. can happen if you just changed fragments), there are other views that will supply a useful window token.</source>
          <target state="translated">如果没有焦点视图(例如,如果你只是改变了片段就会发生),还有其他视图会提供有用的窗口令牌。</target>
        </trans-unit>
        <trans-unit id="ca1b2ab2a7dd8ac8bb267ea87149d33cd6ac38e1" translate="yes" xml:space="preserve">
          <source>If you want to close the soft keyboard during a unit or functional test, you can do so by clicking the &quot;back button&quot; from your test:</source>
          <target state="translated">如果你想在单元或功能测试中关闭软键盘,可以通过点击测试中的 &quot;返回按钮 &quot;来实现。</target>
        </trans-unit>
        <trans-unit id="9ff1260b6f489690be1d98bc9b5448407c0c6eda" translate="yes" xml:space="preserve">
          <source>In v3.2.4_r1 &lt;code&gt;setSoftInputShownOnFocus(boolean show)&lt;/code&gt; was added to control weather or not to display the keyboard when a TextView gets focus, but its still hidden so reflection must be used:</source>
          <target state="translated">在v3.2.4_r1中，添加了 &lt;code&gt;setSoftInputShownOnFocus(boolean show)&lt;/code&gt; 来控制天气或在TextView取得焦点时不显示键盘，但该控件仍处于隐藏状态，因此必须使用反射：</target>
        </trans-unit>
        <trans-unit id="a67551231aa2e03c35517cc304018540e0c6be90" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;OnClick&lt;/code&gt; listener call the &lt;code&gt;onEditorAction&lt;/code&gt; of the &lt;code&gt;EditText&lt;/code&gt; with &lt;code&gt;IME_ACTION_DONE&lt;/code&gt;</source>
          <target state="translated">在您的 &lt;code&gt;OnClick&lt;/code&gt; 侦听 &lt;code&gt;onEditorAction&lt;/code&gt; 中，使用 &lt;code&gt;IME_ACTION_DONE&lt;/code&gt; 调用 &lt;code&gt;EditText&lt;/code&gt; 的onEditorAction</target>
        </trans-unit>
        <trans-unit id="24c8f9f7d5df287a718e901c6cd146eab91f0a89" translate="yes" xml:space="preserve">
          <source>Inside a fragment class:</source>
          <target state="translated">片段类内部。</target>
        </trans-unit>
        <trans-unit id="f46c1a0833c548f1f2ab3704c88c1fd64f88b7aa" translate="yes" xml:space="preserve">
          <source>Inside the onCreate method the following code is run:</source>
          <target state="translated">在onCreate方法中,运行以下代码。</target>
        </trans-unit>
        <trans-unit id="991f035b63f7f5bd725100330c12d97ca435c1a6" translate="yes" xml:space="preserve">
          <source>Just use this optimized code in your activity:</source>
          <target state="translated">只要在活动中使用这个优化过的代码就可以了。</target>
        </trans-unit>
        <trans-unit id="7918af8ecc4a8cbf1a9290ef05fd99ac7b3ed1d2" translate="yes" xml:space="preserve">
          <source>Make sure to pause for a little while before moving on, since it takes a little while to close the back button, so subsequent clicks to Views, etc., won't be registered until after a short pause (1 second is long enough ime).</source>
          <target state="translated">请确保在继续前进前暂停一会儿,因为关闭返回按钮需要一点时间,所以后续点击视图等,在短暂的暂停后才会被记录下来(1秒足够长了)。</target>
        </trans-unit>
        <trans-unit id="1fb52a3bd0d6218c2f5f530f56b272e874ec6d78" translate="yes" xml:space="preserve">
          <source>Mark an activity to never show or allow the use of the
keyboard.  This flag can only be set when an activity is
initialising.</source>
          <target state="translated">将活动标记为永不显示或允许使用键盘。此标志只能在活动初始化时设置。</target>
        </trans-unit>
        <trans-unit id="f16e626c3b755a93b1aaadacb1989ef40fdd7f12" translate="yes" xml:space="preserve">
          <source>Meier's solution works for me too. In my case the top level of my App is a tabHost and I want to hide the keyword when switching tabs - I get the window token from the tabHost View.</source>
          <target state="translated">Meier的解决方案对我来说也很管用。在我的情况下,我的App的顶层是一个tabHost,我想在切换tab时隐藏关键字--我从tabHost视图中获得窗口标记。</target>
        </trans-unit>
        <trans-unit id="a48aec7b801b69e814f4d3c37c83f3fb22a64136" translate="yes" xml:space="preserve">
          <source>Might as well use the correct flags, though.</source>
          <target state="translated">还不如用正确的旗帜,虽然。</target>
        </trans-unit>
        <trans-unit id="3959676d1fd62f94037aa3e960244375aeabbf5c" translate="yes" xml:space="preserve">
          <source>Now, whenever you want to open the keyboard manually call:</source>
          <target state="translated">现在,每当你想打开键盘手动调用时。</target>
        </trans-unit>
        <trans-unit id="1676b6642119a6e78e273b06ef382dc642a9b8c8" translate="yes" xml:space="preserve">
          <source>Old answer:</source>
          <target state="translated">旧的答案。</target>
        </trans-unit>
        <trans-unit id="5ebd9feb499fc2eac9c143b157f76ad547618030" translate="yes" xml:space="preserve">
          <source>Please try this below code in  &lt;code&gt;onCreate()&lt;/code&gt;</source>
          <target state="translated">请在 &lt;code&gt;onCreate()&lt;/code&gt; 中尝试以下代码</target>
        </trans-unit>
        <trans-unit id="a66450c474481f5ee0573af99ee52b0b3aab4d3f" translate="yes" xml:space="preserve">
          <source>Show the keyboard when an activity starts
and set a flag on the activity indicating that they keyboard should
always be visible.  This flag can only be set when an activity is
initialising.</source>
          <target state="translated">当活动开始时显示键盘,并在活动上设置一个标志,表示键盘应始终可见。此标志只能在活动初始化时设置。</target>
        </trans-unit>
        <trans-unit id="15c6dbf19c6d595cc943a1723bbd90b31bb5bb7d" translate="yes" xml:space="preserve">
          <source>Simple and Easy to use method, just call &lt;strong&gt;hideKeyboardFrom(YourActivity.this);&lt;/strong&gt; to hide keyboard</source>
          <target state="translated">简单易用的方法，只需调用&lt;strong&gt;hideKeyboardFrom（YourActivity.this）;&lt;/strong&gt; 隐藏键盘</target>
        </trans-unit>
        <trans-unit id="9efcb3eb7be71a28f720d7d707df077f1540eece" translate="yes" xml:space="preserve">
          <source>Starting from your content body:</source>
          <target state="translated">从你的内容主体开始。</target>
        </trans-unit>
        <trans-unit id="123c98bedea517925ec9f05b4abebd4af9ae3fb3" translate="yes" xml:space="preserve">
          <source>Temporarily hide the keyboard.  It will re-appear again when a user
focuses a new text field.</source>
          <target state="translated">暂时隐藏键盘。当用户关注一个新的文本字段时,它将再次出现。</target>
        </trans-unit>
        <trans-unit id="4cdb1fa47b39bc1a25f585e458ebe6212e656af1" translate="yes" xml:space="preserve">
          <source>Thanks to &lt;a href=&quot;https://stackoverflow.com/a/7696791/1617737&quot;&gt;this SO answer&lt;/a&gt;, I derived the following which, in my case, works nicely when scrolling through the the fragments of a ViewPager...</source>
          <target state="translated">由于有了&lt;a href=&quot;https://stackoverflow.com/a/7696791/1617737&quot;&gt;这个SO答案&lt;/a&gt; ，我得到了以下内容，在我的情况下，当滚动浏览ViewPager的片段时，效果很好。</target>
        </trans-unit>
        <trans-unit id="bec18bfac867702bfd761245f9fc21d98773d4ee" translate="yes" xml:space="preserve">
          <source>The drill-down</source>
          <target state="translated">下钻式</target>
        </trans-unit>
        <trans-unit id="cc835fe349122d507337a145d433d88cb7773291" translate="yes" xml:space="preserve">
          <source>The short answer</source>
          <target state="translated">简单的答案是</target>
        </trans-unit>
        <trans-unit id="30402e74e3a068366f88f5698e68ab191b711765" translate="yes" xml:space="preserve">
          <source>Then, make sure that onFocus of the &lt;code&gt;EditText&lt;/code&gt; you open/close the keyboard:</source>
          <target state="translated">然后，确保打开/关闭键盘的 &lt;code&gt;EditText&lt;/code&gt; 的 onFocus：</target>
        </trans-unit>
        <trans-unit id="3013bf35af3d83fc637ee3c042eb9d571dd1618b" translate="yes" xml:space="preserve">
          <source>There's yet another point of contention to be aware of. By default, Android will automatically assign initial focus to the first &lt;code&gt;EditText&lt;/code&gt; or focusable control in your &lt;code&gt;Activity&lt;/code&gt;.  It naturally follows that the InputMethod (typically the soft keyboard) will respond to the focus event by showing itself. The &lt;code&gt;windowSoftInputMode&lt;/code&gt; attribute in &lt;code&gt;AndroidManifest.xml&lt;/code&gt;, when set to &lt;code&gt;stateAlwaysHidden&lt;/code&gt;, instructs the keyboard to ignore this automatically-assigned initial focus.</source>
          <target state="translated">还有另一点需要注意。 默认情况下，Android会自动将初始焦点分配给 &lt;code&gt;Activity&lt;/code&gt; 中的第一个 &lt;code&gt;EditText&lt;/code&gt; 或可焦点控件。 当然，InputMethod（通常是软键盘）将通过显示自身来响应焦点事件。 设置为 &lt;code&gt;stateAlwaysHidden&lt;/code&gt; 时， &lt;code&gt;AndroidManifest.xml&lt;/code&gt; 中的 &lt;code&gt;windowSoftInputMode&lt;/code&gt; 属性指示键盘忽略此自动分配的初始焦点。</target>
        </trans-unit>
        <trans-unit id="07611b83f4f2d85d658d0f7d5fec16a9b16b5de5" translate="yes" xml:space="preserve">
          <source>Therefore, &lt;code&gt;stateAlwaysHidden&lt;/code&gt; is VERY poorly named indeed. It should perhaps be called &lt;code&gt;ignoreInitialFocus&lt;/code&gt; instead.</source>
          <target state="translated">因此， &lt;code&gt;stateAlwaysHidden&lt;/code&gt; 的确确实得很差。 也许应该将其称为 &lt;code&gt;ignoreInitialFocus&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0896178be49463c6e1f9b592cd05377b0b6c1961" translate="yes" xml:space="preserve">
          <source>These are alternatives for the above code &lt;code&gt;if (view == null)   view = new View(activity);&lt;/code&gt;  These don't refer explicitly to your activity.</source>
          <target state="translated">&lt;code&gt;if (view == null) view = new View(activity);&lt;/code&gt; 这些是上述代码的替代方法； 这些没有明确提及您的活动。</target>
        </trans-unit>
        <trans-unit id="fe0f460a2f2c1670aabed00b6a29f486b40f0ae5" translate="yes" xml:space="preserve">
          <source>This approach works reliably on all devices I have tested on - from a 4 year old HTC phone running android 2.2 up to a nexus 7 running 4.2.2.  The only disadvantage with this approach is you need to be careful with handling the back button.  As my app essentially only has one screen (its a calculator) I can override onBackPressed() and return to the devices home screen.</source>
          <target state="translated">这种方法在我测试过的所有设备上都能可靠地工作--从运行android 2.2的4年的HTC手机到运行4.2.2的nexus 7。这种方法的唯一缺点是,你需要小心处理返回按钮。因为我的应用程序基本上只有一个屏幕(它是一个计算器),我可以覆盖onBackPressed(),然后返回到设备的主屏幕。</target>
        </trans-unit>
        <trans-unit id="280f3a02c9c3a4c2cb66c3c94c0645ef1db583e4" translate="yes" xml:space="preserve">
          <source>This can be used to suppress the soft-keyboard until the user actually touches the editText View.</source>
          <target state="translated">这可以用来压制软键盘,直到用户真正触摸到编辑文本视图。</target>
        </trans-unit>
        <trans-unit id="0e830705ef1cbb279a5f9042d1150c2b9016307c" translate="yes" xml:space="preserve">
          <source>This causes the current activity to have its state saved into a Bundle, and then the activity is started, passing through an boolean which indicates if the keyboard should be shown or hidden.</source>
          <target state="translated">这使得当前活动的状态被保存到Bundle中,然后活动启动,通过一个布尔值来指示键盘是显示还是隐藏。</target>
        </trans-unit>
        <trans-unit id="9d0f044148bec9f373705aec93858a2146abfbf8" translate="yes" xml:space="preserve">
          <source>This is what makes hiding the keyboard so challenging. Dear Google: When I'm looking up the recipe for a cake, there is no &lt;code&gt;RecipeProvider&lt;/code&gt; on Earth that would refuse to provide me with the recipe unless I first answer WHO the cake will be eaten by AND where it will be eaten!!</source>
          <target state="translated">这就是隐藏键盘如此具有挑战性的原因。 亲爱的Google：当我在寻找蛋糕的食谱时，地球上没有 &lt;code&gt;RecipeProvider&lt;/code&gt; 会拒绝向我提供食谱，除非我先回答谁将蛋糕吃完并在哪里食用！</target>
        </trans-unit>
        <trans-unit id="a36a75b28b85949d6796ec6f80ad8f7a200d0123" translate="yes" xml:space="preserve">
          <source>This last solution may show the keyboard for a split second and messes with the selection handles.</source>
          <target state="translated">这最后一个解决方案可能会在一瞬间显示键盘,并把选择手柄弄乱。</target>
        </trans-unit>
        <trans-unit id="636fef779f8a03c113fafc429ad64fccce6caa04" translate="yes" xml:space="preserve">
          <source>This sad story ends with the ugly truth: to hide the Android keyboard, you will be required to provide 2 forms of identification: a &lt;code&gt;Context&lt;/code&gt; and either a &lt;code&gt;View&lt;/code&gt; or a &lt;code&gt;Window&lt;/code&gt;.</source>
          <target state="translated">这个可悲的故事以一个丑陋的事实结尾：要隐藏Android键盘，您将需要提供两种形式的标识： &lt;code&gt;Context&lt;/code&gt; 和 &lt;code&gt;View&lt;/code&gt; 或 &lt;code&gt;Window&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55ef13a1e73329e726feb2ef079106cad9f434f9" translate="yes" xml:space="preserve">
          <source>This should work:</source>
          <target state="translated">这应该可以的</target>
        </trans-unit>
        <trans-unit id="a2288cc6581d7b7a0946eb3276592e3a569b8926" translate="yes" xml:space="preserve">
          <source>This will force the keyboard to be hidden in all situations. In some cases you will want to pass in &lt;code&gt;InputMethodManager.HIDE_IMPLICIT_ONLY&lt;/code&gt; as the second parameter to ensure you only hide the keyboard when the user didn't explicitly force it to appear (by holding down menu).</source>
          <target state="translated">这将迫使键盘在所有情况下都处于隐藏状态。 在某些情况下，您将希望传入 &lt;code&gt;InputMethodManager.HIDE_IMPLICIT_ONLY&lt;/code&gt; 作为第二个参数，以确保仅在用户没有明确强制键盘出现时（按住菜单）才隐藏键盘。</target>
        </trans-unit>
        <trans-unit id="f557108cc7f56192eb7710110bbb5c740e2fc15b" translate="yes" xml:space="preserve">
          <source>This won't work because you'll be passing a reference to the &lt;code&gt;Fragment&lt;/code&gt;'s host &lt;code&gt;Activity&lt;/code&gt;, which will have no focused control while the &lt;code&gt;Fragment&lt;/code&gt; is shown! Wow! So, for hiding the keyboard from fragments, I resort to the lower-level, more common, and uglier:</source>
          <target state="translated">这将不起作用，因为您将传递对 &lt;code&gt;Fragment&lt;/code&gt; 的宿主 &lt;code&gt;Activity&lt;/code&gt; 的引用，该宿主在显示Fragment时将没有焦点控制！ 哇！ 因此，为了隐藏键盘中的碎片，我求助于较低级别的，更常见的且更难看的：</target>
        </trans-unit>
        <trans-unit id="d0373d2754a03ef5917cc5ea59e5197aa9376432" translate="yes" xml:space="preserve">
          <source>This worked for me for all the bizarre keyboard behavior</source>
          <target state="translated">这对我来说,所有奇怪的键盘行为都是有效的。</target>
        </trans-unit>
        <trans-unit id="2f490f9ccfed247cc722cc9c067ba82ece34cba6" translate="yes" xml:space="preserve">
          <source>To help clarify this madness, I'd like to begin by apologizing on behalf of all Android users for Google's downright ridiculous treatment of the soft keyboard. The reason there are so many answers, each different, for the same simple question because this API, like many others in Android, is horribly designed. I can think of no polite way to state it.</source>
          <target state="translated">为了帮助澄清这个疯狂的问题,首先我想代表所有的Android用户对谷歌对软键盘的荒谬对待表示歉意。之所以有这么多答案,每个答案都不一样,是因为这个API和Android中的许多其他API一样,设计得很糟糕。我想不出任何礼貌的方式来说明。</target>
        </trans-unit>
        <trans-unit id="e21644360428c7d8b77323a835575e5d707c90b0" translate="yes" xml:space="preserve">
          <source>Unfortunately item 2 and 3 on the list only work reliability when an activity is being started.  Once the activity has become visible you cannot permanently hide or show the keyboard.  The trick is to actually restart your activity when the user presses the keyboard toggle button.  In my app when the user presses on the toggle keyboard button, the following code runs:</source>
          <target state="translated">遗憾的是,列表中的第2和第3项只有在活动开始时才可靠地工作。一旦活动变得可见,你就不能永久隐藏或显示键盘。诀窍是当用户按下键盘切换按钮时重新启动你的活动。在我的应用程序中,当用户按下键盘切换按钮时,会运行以下代码。</target>
        </trans-unit>
        <trans-unit id="6073347556b92710a1cae7bfd6f95334a2d56147" translate="yes" xml:space="preserve">
          <source>Using the InputMethodManager did not close the keyboard. I had to clearFocus and set the focusable of the search view to false:</source>
          <target state="translated">使用InputMethodManager并没有关闭键盘。我不得不清除Focus,并将搜索视图的focusable设置为false。</target>
        </trans-unit>
        <trans-unit id="4092ca80baa6fbcc673ca3756bd415cad19ccd43" translate="yes" xml:space="preserve">
          <source>What I end up with is forcing the show and hide, and it works perfectly:</source>
          <target state="translated">我最后用的是强行展示和隐藏,效果很好。</target>
        </trans-unit>
        <trans-unit id="c25cb3bafc39a0d6203554a47821145d63d93932" translate="yes" xml:space="preserve">
          <source>When in the keyboard enters full screen, onGlobalLayout isn't called. To avoid that, use &lt;a href=&quot;https://developer.android.com/reference/android/widget/TextView.html#setImeOptions%28int%29&quot;&gt;TextView#setImeOptions(int)&lt;/a&gt; or in the TextView XML declaration:</source>
          <target state="translated">在键盘上进入全屏模式时，不会调用onGlobalLayout。 为了避免这种情况，请使用&lt;a href=&quot;https://developer.android.com/reference/android/widget/TextView.html#setImeOptions%28int%29&quot;&gt;TextView＃setImeOptions（int）&lt;/a&gt;或在TextView XML声明中：</target>
        </trans-unit>
        <trans-unit id="c4d468602dd57b74a87ab550adbbec95d9a538f3" translate="yes" xml:space="preserve">
          <source>When touching outside the keyboard.</source>
          <target state="translated">键盘外触摸时。</target>
        </trans-unit>
        <trans-unit id="5b0cceb4fda9665bce6fc6593579afa5c06f30e7" translate="yes" xml:space="preserve">
          <source>You can force Android to hide the virtual keyboard using the &lt;a href=&quot;http://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html&quot;&gt;InputMethodManager&lt;/a&gt;, calling &lt;a href=&quot;http://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html#hideSoftInputFromWindow%28android.os.IBinder,%20int%29&quot;&gt;&lt;code&gt;hideSoftInputFromWindow&lt;/code&gt;&lt;/a&gt;, passing in the token of the window containing your focused view.</source>
          <target state="translated">您可以使用&lt;a href=&quot;http://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html&quot;&gt;InputMethodManager&lt;/a&gt;强制Android隐藏虚拟键盘，调用&lt;a href=&quot;http://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html#hideSoftInputFromWindow%28android.os.IBinder,%20int%29&quot;&gt; &lt;code&gt;hideSoftInputFromWindow&lt;/code&gt; &lt;/a&gt; ，传入包含焦点视图的窗口的令牌。</target>
        </trans-unit>
        <trans-unit id="fa6819babfed2f44f295152d44fafd6c02c19e5e" translate="yes" xml:space="preserve">
          <source>You can see a working implementation of this in my app &lt;a href=&quot;https://play.google.com/store/apps/details?id=au.com.lukesleeman.rpn&amp;amp;hl=en&quot;&gt;clean RPN&lt;/a&gt;.</source>
          <target state="translated">您可以在我的应用程序&lt;a href=&quot;https://play.google.com/store/apps/details?id=au.com.lukesleeman.rpn&amp;amp;hl=en&quot;&gt;干净RPN中&lt;/a&gt;看到此功能的有效实现。</target>
        </trans-unit>
        <trans-unit id="bcfbef6dc74e1d228301f445a3556e06bb75b46f" translate="yes" xml:space="preserve">
          <source>after that call on onTouchListener:</source>
          <target state="translated">调用后的onTouchListener。</target>
        </trans-unit>
        <trans-unit id="3d3093f7221ddef2ce2927ed0d133eaadaa4a137" translate="yes" xml:space="preserve">
          <source>and to get the context fetch it from constructor:)</source>
          <target state="translated">并从构造函数中获取上下文:)</target>
        </trans-unit>
        <trans-unit id="3ed6e8613259f1c2f5669c4b07261dac8d098424" translate="yes" xml:space="preserve">
          <source>from so searching, here I found an answer that works for me</source>
          <target state="translated">在这里,我找到了一个适合我的答案</target>
        </trans-unit>
        <trans-unit id="ae8d167cf77b0fb4fa5ed96fd284993f4fe31289" translate="yes" xml:space="preserve">
          <source>use this</source>
          <target state="translated">用这个</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
