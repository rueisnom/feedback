<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/1109022">
    <body>
      <group id="1109022">
        <trans-unit id="2d705203d004168420b2371af5567a5181b6915b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/a/9494042/197359&quot;&gt;Saurabh Pareek&lt;/a&gt; has the best answer so far.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/9494042/197359&quot;&gt;Saurabh Pareek&lt;/a&gt;はこれまでのところ最良の答えを持っています。</target>
        </trans-unit>
        <trans-unit id="f032e2d6c71514b7dd73c2199ebc40c6ab8fb562" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;About windowSoftInputMode&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;windowSoftInputModeについて&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9fb5e43380e0e0ed38754145accd58ee47ce367" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Kotlin Syntax&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Kotlin構文&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f87517e9424dead3a132f36421c7063aa1ff1f14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you want to do this in Kotlin, use:
&lt;code&gt;context?.getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; Kotlinでこれを行う場合は、次を使用します： &lt;code&gt;context?.getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager&lt;/code&gt; 使用します</target>
        </trans-unit>
        <trans-unit id="0662e12d6ab52c694189e2d4852b062a705b1621" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE 2: Clear focus to avoid showing keyboard again if you open the app from the background&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;更新2：フォーカスをクリアして、アプリをバックグラウンドで開いたときにキーボードが再び表示されないようにします&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="36553438065e5239b46101b621301255cfb67316" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE: More ways to get a window token&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;更新：ウィンドウトークンを取得するその他の方法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d5d3fdd9fc52bd0ef2e646a959dedbe0c3c1384" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update:&lt;/strong&gt;
I don't know why this solution is not work any more ( I just tested on Android 23). Please use the solution of &lt;a href=&quot;https://stackoverflow.com/a/9494042/523325&quot;&gt;Saurabh Pareek&lt;/a&gt; instead. Here it is:</source>
          <target state="translated">&lt;strong&gt;更新：&lt;/strong&gt;このソリューションが機能しなくなった理由がわかりません（Android 23でテストしました）。 代わりに&lt;a href=&quot;https://stackoverflow.com/a/9494042/523325&quot;&gt;Saurabh Pareek&lt;/a&gt;のソリューションを使用してください。 ここにあります：</target>
        </trans-unit>
        <trans-unit id="430833ed48b905d78e67676ad941f5fb3ff2e479" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update:&lt;/strong&gt; Just found what dialogs use to never show the keyboard and works in all versions:</source>
          <target state="translated">&lt;strong&gt;更新：&lt;/strong&gt;ダイアログがキーボードを表示しないようにして、すべてのバージョンで機能するものを見つけました：</target>
        </trans-unit>
        <trans-unit id="68f94f54d83b4066a2138a1188498db71a566013" translate="yes" xml:space="preserve">
          <source>Above answers work for different scenario's but  &lt;strong&gt;If you want to hide the keyboard inside a view and struggling to get the right context try this:&lt;/strong&gt;</source>
          <target state="translated">上記の回答はさまざまなシナリオで機能し&lt;strong&gt;ます&lt;/strong&gt;が&lt;strong&gt;、ビュー内でキーボードを非表示にして適切なコンテキストを取得するのに苦労している場合は、これを試してください：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b92172163270e91a26b57df3ee4b074879c00a1d" translate="yes" xml:space="preserve">
          <source>Add this line to the end of the method:</source>
          <target state="translated">この行をメソッドの最後に追加します。</target>
        </trans-unit>
        <trans-unit id="f4d1206982236343c3ff4a0d31a949d0d9c5377f" translate="yes" xml:space="preserve">
          <source>Add to your activity    &lt;code&gt;android:windowSoftInputMode=&quot;stateHidden&quot;&lt;/code&gt; in Manifest file. Example:</source>
          <target state="translated">マニフェストファイルのアクティビティ &lt;code&gt;android:windowSoftInputMode=&quot;stateHidden&quot;&lt;/code&gt; に追加します。 例：</target>
        </trans-unit>
        <trans-unit id="71349308b905dfb48c02f682a178c46233787a82" translate="yes" xml:space="preserve">
          <source>After testing many of the suggested answers on a number of different phones (including froyo and gingerbread devices) it became apparent that android apps can reliably:</source>
          <target state="translated">froyoやジンジャーブレッドデバイスを含む)多くの異なる携帯電話上で提案された答えの多くをテストした後、それはandroidアプリが確実にできることが明らかになった。</target>
        </trans-unit>
        <trans-unit id="30dd523c1a7f691f45e40641e6ea53d6499603a8" translate="yes" xml:space="preserve">
          <source>After writing in the edit field and clicking on the &lt;code&gt;Button&lt;/code&gt;, I want to hide the virtual keyboard. I assume that this is a simple piece of code, but where can I find an example of it?</source>
          <target state="translated">編集フィールドに書き込み、 &lt;code&gt;Button&lt;/code&gt; をクリックした後、仮想キーボードを非表示にしたいと思います。 これは簡単なコードだと思いますが、その例はどこにありますか？</target>
        </trans-unit>
        <trans-unit id="01c5349d233deb515f88d5cb0ea1f5cb51bb04a5" translate="yes" xml:space="preserve">
          <source>Almost unbelievably, it appears to do nothing to prevent the keyboard from opening when you touch the control (unless &lt;code&gt;focusable=&quot;false&quot;&lt;/code&gt; and/or &lt;code&gt;focusableInTouchMode=&quot;false&quot;&lt;/code&gt; are assigned to the control). Apparently, the windowSoftInputMode setting applies only to automatic focus events, not to focus events triggered by touch events.</source>
          <target state="translated">ほとんど信じられないことですが、コントロールにタッチしたときにキーボードが開かないようにすることは何もないようです（コントロールに &lt;code&gt;focusable=&quot;false&quot;&lt;/code&gt; や &lt;code&gt;focusableInTouchMode=&quot;false&quot;&lt;/code&gt; が割り当てられている場合を除く）。 どうやら、windowSoftInputMode設定は自動フォーカスイベントにのみ適用され、タッチイベントによってトリガーされるフォーカスイベントには適用されません。</target>
        </trans-unit>
        <trans-unit id="391b4187f0014967ac951b1773786a6b330fd494" translate="yes" xml:space="preserve">
          <source>Also useful for hiding the soft-keyboard is:</source>
          <target state="translated">また、ソフトキーボードを隠すのにも便利です。</target>
        </trans-unit>
        <trans-unit id="46e4a13a9ba78442c9b37fe440fb09f1ff2a8db7" translate="yes" xml:space="preserve">
          <source>Alternatively to &lt;a href=&quot;https://stackoverflow.com/a/9494042/451962&quot;&gt;this all around solution&lt;/a&gt;, if you wanted to close the soft keyboard &lt;strong&gt;from anywhere&lt;/strong&gt; without having a reference to the (EditText) field that was used to open the keyboard, but still wanted to do it if the field was focused, you could use this (from an Activity):</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/9494042/451962&quot;&gt;このオールアラウンドソリューションの&lt;/a&gt;代わりに、キーボードを開くために使用された（EditText）フィールドへの参照がなくて&lt;strong&gt;もどこからでも&lt;/strong&gt;ソフトキーボードを閉じたいが、フィールドがフォーカスされている場合はそれを実行したい場合は、これ（アクティビティから）：</target>
        </trans-unit>
        <trans-unit id="d6aa8dae9787f34bd13ebd8223bde7c9d4ff2217" translate="yes" xml:space="preserve">
          <source>And for closing call:</source>
          <target state="translated">そして、閉会の挨拶に。</target>
        </trans-unit>
        <trans-unit id="f173ecd1c5182a039c643250ad8fa69ba9242c4a" translate="yes" xml:space="preserve">
          <source>Be aware that this utility method ONLY works when called from an &lt;code&gt;Activity&lt;/code&gt;! The above method calls &lt;code&gt;getCurrentFocus&lt;/code&gt; of the target &lt;code&gt;Activity&lt;/code&gt; to fetch the proper window token.</source>
          <target state="translated">このユーティリティメソッドは、 &lt;code&gt;Activity&lt;/code&gt; から呼び出された場合にのみ機能することに注意してください。 上記のメソッドは、ターゲット &lt;code&gt;Activity&lt;/code&gt; &lt;code&gt;getCurrentFocus&lt;/code&gt; を呼び出して、適切なウィンドウトークンをフェッチします。</target>
        </trans-unit>
        <trans-unit id="502d060c6f490cd74c1ea6555917cd7ae4e5337b" translate="yes" xml:space="preserve">
          <source>Below is some additional information gleaned from more time wasted chasing this solution:</source>
          <target state="translated">以下に、この解決策を追いかけている時間を無駄にしたことから得られた追加情報を紹介します。</target>
        </trans-unit>
        <trans-unit id="cfad39dc55cac1b221334145e87b2d52a77168df" translate="yes" xml:space="preserve">
          <source>But suppose you want to hide the keyboard from an &lt;code&gt;EditText&lt;/code&gt; hosted in a &lt;code&gt;DialogFragment&lt;/code&gt;? You can't use the method above for that:</source>
          <target state="translated">しかし、 &lt;code&gt;EditText&lt;/code&gt; ホストされている &lt;code&gt;DialogFragment&lt;/code&gt; からキーボードを非表示にしたいとしますか？ そのため、上記の方法は使用できません。</target>
        </trans-unit>
        <trans-unit id="d665c6af3c2f8c184e84494fe6225be1894acf71" translate="yes" xml:space="preserve">
          <source>Check this &lt;a href=&quot;https://stackoverflow.com/a/3449616/2837443&quot;&gt;related answer&lt;/a&gt;</source>
          <target state="translated">この&lt;a href=&quot;https://stackoverflow.com/a/3449616/2837443&quot;&gt;関連する答えを&lt;/a&gt;確認してください</target>
        </trans-unit>
        <trans-unit id="c2d4094ca381c9176be5f252878c9ec86d83b2d4" translate="yes" xml:space="preserve">
          <source>Close/hide android soft keyboard</source>
          <target state="translated">Closehideアンドロイドソフトキーボード</target>
        </trans-unit>
        <trans-unit id="37d92fb5022a3a039049bb8086fc3001db02641c" translate="yes" xml:space="preserve">
          <source>Create a function with that will manage some of the &lt;code&gt;EditText&lt;/code&gt;'s properties:</source>
          <target state="translated">&lt;code&gt;EditText&lt;/code&gt; のプロパティのいくつかを管理する関数を作成します。</target>
        </trans-unit>
        <trans-unit id="632688d9dfd732b4ff204dc45af3e0683353942f" translate="yes" xml:space="preserve">
          <source>Example of real use</source>
          <target state="translated">実際の使用例</target>
        </trans-unit>
        <trans-unit id="2ea08e9f289c75a61cbe20a35b324651c8561ed6" translate="yes" xml:space="preserve">
          <source>For me, temporarily hiding the keyboard is not enough.  On some devices it will re-appear as soon as a new text field is focused.  As my app uses multiple text fields on one page, focusing a new text field will cause the hidden keyboard to pop back up again.</source>
          <target state="translated">私の場合は、キーボードを一時的に隠すだけでは十分ではありません。一部のデバイスでは、新しいテキストフィールドにフォーカスを合わせるとすぐに再び表示されます。私のアプリでは、1ページで複数のテキストフィールドを使用しているため、新しいテキストフィールドにフォーカスすると、非表示のキーボードが再びポップアップ表示されます。</target>
        </trans-unit>
        <trans-unit id="98f31051226805c5e76143cec44fb707ba7fa0e6" translate="yes" xml:space="preserve">
          <source>For my case, I was using the a SearchView in the actionbar. After a user performs a search, the keyboard would pop open again.</source>
          <target state="translated">私の場合は、アクションバーのSearchViewを使用していました。ユーザーが検索を行うと、キーボードが再び開くようになっていました。</target>
        </trans-unit>
        <trans-unit id="dfe19ef4c9c4b2f5cbdb3750c2304f3dba8e231d" translate="yes" xml:space="preserve">
          <source>For older versions, I got very good results (but far from perfect) with a &lt;code&gt;OnGlobalLayoutListener&lt;/code&gt;, added with the aid of a &lt;code&gt;ViewTreeObserver&lt;/code&gt; from my root view and then checking if the keyboard is shown like this:</source>
          <target state="translated">古いバージョンでは、ルートビューから &lt;code&gt;ViewTreeObserver&lt;/code&gt; を使用して追加された &lt;code&gt;OnGlobalLayoutListener&lt;/code&gt; を使用して非常に良い結果が得られましたが（完璧には程遠い）、キーボードが次のように表示されているかどうかを確認しています。</target>
        </trans-unit>
        <trans-unit id="e147e6c468ffc02a1b74d09a2e71ab73375a0e42" translate="yes" xml:space="preserve">
          <source>Given a fragment &lt;code&gt;fragment&lt;/code&gt; as a parameter:</source>
          <target state="translated">パラメータとしてフラグメント &lt;code&gt;fragment&lt;/code&gt; を指定：</target>
        </trans-unit>
        <trans-unit id="1c570ee407dcd2afb2e0e5450d1055ba7209594c" translate="yes" xml:space="preserve">
          <source>Here pass &lt;code&gt;HIDE_IMPLICIT_ONLY&lt;/code&gt; at the position of &lt;code&gt;showFlag&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; at the position of &lt;code&gt;hiddenFlag&lt;/code&gt;. It will forcefully close soft Keyboard.</source>
          <target state="translated">ここでは、 &lt;code&gt;showFlag&lt;/code&gt; の位置にHIDE_IMPLICIT_ONLYを渡し、 &lt;code&gt;HIDE_IMPLICIT_ONLY&lt;/code&gt; の位置に &lt;code&gt;0&lt;/code&gt; を &lt;code&gt;hiddenFlag&lt;/code&gt; ます。 ソフトキーボードを強制的に閉じます。</target>
        </trans-unit>
        <trans-unit id="b47f39b2bbc282306be72e2fa17870c168b56f50" translate="yes" xml:space="preserve">
          <source>Here's how you do it in Mono for Android (AKA MonoDroid)</source>
          <target state="translated">Mono for Android(別名:MonoDroid)ではこんな感じです。</target>
        </trans-unit>
        <trans-unit id="a6a0ce9031e0776d5fc6120b3023d51bccf114f1" translate="yes" xml:space="preserve">
          <source>Hope this helps.</source>
          <target state="translated">これが助けになることを願っています。</target>
        </trans-unit>
        <trans-unit id="5227edcfb071ab3e49ac3e9b54b4d356eb9c63ed" translate="yes" xml:space="preserve">
          <source>I feel this method is better, simpler and more aligned with Android's design pattern.
In the simple example above (and usually in most of the common cases) you'll have an &lt;code&gt;EditText&lt;/code&gt; that has/had focus and it also usually was the one to invoke the keyboard in the first place (it is definitely able to invoke it in many common scenarios). In that same way, &lt;strong&gt;it&lt;/strong&gt; should be the one to release the keyboard, usually that can be done by an &lt;code&gt;ImeAction&lt;/code&gt;. Just see how an &lt;code&gt;EditText&lt;/code&gt; with &lt;code&gt;android:imeOptions=&quot;actionDone&quot;&lt;/code&gt; behaves, you want to achieve the same behavior by the same means.</source>
          <target state="translated">この方法は、Androidのデザインパターンに沿った、よりシンプルで優れた方法だと思います。 上記の簡単な例では（通常、ほとんどの場合）、フォーカスがある/持っている &lt;code&gt;EditText&lt;/code&gt; があり、通常はそもそもキーボードを呼び出すものでした（間違いなくそれを呼び出すことができます）多くの一般的なシナリオ）。 同様に、キーボードを解放する必要があります。通常、これは &lt;code&gt;ImeAction&lt;/code&gt; で実行できます。 &lt;code&gt;android:imeOptions=&quot;actionDone&quot;&lt;/code&gt; を含むEditTextの動作を確認するだけで、同じ方法で同じ動作を実現できます。</target>
        </trans-unit>
        <trans-unit id="d931ef6423737710e268929787e86c0ae450b5ea" translate="yes" xml:space="preserve">
          <source>I got one more solution to hide keyboard:</source>
          <target state="translated">キーボードを非表示にする方法がもう一つあります。</target>
        </trans-unit>
        <trans-unit id="ea294c80c103cb0537072fc3d3687bb3844c4463" translate="yes" xml:space="preserve">
          <source>I have almost tried all of these answers, I had some random issues especially with the samsung galaxy s5.</source>
          <target state="translated">私はほとんどこれらの答えのすべてを試してみましたが、私は特にサムスンギャラクシーs5といくつかのランダムな問題を持っていました。</target>
        </trans-unit>
        <trans-unit id="7fe1e3b2f1c2ca9392f1923ec8ef822cababde41" translate="yes" xml:space="preserve">
          <source>I have an &lt;code&gt;EditText&lt;/code&gt; and a &lt;code&gt;Button&lt;/code&gt; in my layout.</source>
          <target state="translated">レイアウトに &lt;code&gt;EditText&lt;/code&gt; と &lt;code&gt;Button&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="a9048ecc76c127ac40bf8b43a36c7176195d835e" translate="yes" xml:space="preserve">
          <source>I have created a static utility method that can do the job VERY solidly, provided you call it from an &lt;code&gt;Activity&lt;/code&gt;.</source>
          <target state="translated">あなたが &lt;code&gt;Activity&lt;/code&gt; からそれを呼び出すならば、私は非常にしっかりと仕事をすることができる静的なユーティリティメソッドを作成しました。</target>
        </trans-unit>
        <trans-unit id="2b94096a835c80a889853be5306428147562bad7" translate="yes" xml:space="preserve">
          <source>I have spent more than two days working through all of the solutions posted in the thread and have found them lacking in one way or another.  My exact requirement is to have a button that will with 100% reliability show or hide the on screen keyboard.  When the keyboard is in its hidden state is should not re-appear, no matter what input fields the user clicks on.  When it is in its visible state the keyboard should not disappear no matter what buttons the user clicks.  This needs to work on Android 2.2+ all the way up to the latest devices.</source>
          <target state="translated">私は、このスレッドに投稿されたすべてのソリューションを介して作業に2日以上を費やしてきましたが、いずれかの方法または別の方法でそれらが欠けていることがわかりました。私の正確な要件は、100%の信頼性で画面上のキーボードを表示または非表示にするボタンがあることです。キーボードが隠された状態にあるとき、ユーザーがクリックした入力フィールドに関係なく、再表示されるべきではありません。それが目に見える状態にあるとき、キーボードはユーザーがクリックするどのようなボタンに関係なく消えるべきではありません。これは、Android 2.2+から最新のデバイスで動作する必要があります。</target>
        </trans-unit>
        <trans-unit id="cf4aefd891e06316bd9ec1f2687f2b3a47234e99" translate="yes" xml:space="preserve">
          <source>I have the case, where my &lt;code&gt;EditText&lt;/code&gt; can be located also in an &lt;code&gt;AlertDialog&lt;/code&gt;, so the keyboard should be closed on dismiss. The following code seems to be working anywhere:</source>
          <target state="translated">&lt;code&gt;EditText&lt;/code&gt; がAlertDialogにも配置されている場合があるので、閉じるときにキーボードを閉じる必要があります。 次のコードはどこでも機能しているようです：</target>
        </trans-unit>
        <trans-unit id="704bf9c44152ee336be4142e27aa3cc797a7174d" translate="yes" xml:space="preserve">
          <source>I put &quot;back button&quot; in quotes, since the above doesn't trigger the &lt;code&gt;onBackPressed()&lt;/code&gt; for the Activity in question. It just closes the keyboard.</source>
          <target state="translated">上記では問題のアクティビティの &lt;code&gt;onBackPressed()&lt;/code&gt; がトリガーされないため、「戻るボタン」を引用符で囲みます。 キーボードを閉じるだけです。</target>
        </trans-unit>
        <trans-unit id="584ac3280c531f44f41b5c9b47f5c48cd9454454" translate="yes" xml:space="preserve">
          <source>I want to hide the keyboard.  I expect to provide Android with the following statement: &lt;code&gt;Keyboard.hide()&lt;/code&gt;. The end. Thank you very much.  But Android has a problem.  You must use the &lt;code&gt;InputMethodManager&lt;/code&gt; to hide the keyboard. OK, fine, this is Android's API to the keyboard. BUT! You are required to have a &lt;code&gt;Context&lt;/code&gt; in order to get access to the IMM. Now we have a problem.  I may want to hide the keyboard from a static or utility class that has no use or need for any &lt;code&gt;Context&lt;/code&gt;. or And FAR worse, the IMM requires that you specify what &lt;code&gt;View&lt;/code&gt; (or even worse, what &lt;code&gt;Window&lt;/code&gt;) you want to hide the keyboard FROM.</source>
          <target state="translated">キーボードを非表示にしたい。 Androidに次のステートメントを提供する予定です： &lt;code&gt;Keyboard.hide()&lt;/code&gt; 。 終わり。 どうもありがとうございました。 しかし、Androidには問題があります。 キーボードを非表示にするには、 &lt;code&gt;InputMethodManager&lt;/code&gt; を使用する必要があります。 はい、これはキーボードに対するAndroidのAPIです。 だが！ IMMにアクセスするには、 &lt;code&gt;Context&lt;/code&gt; が必要です。 今問題があります。 &lt;code&gt;Context&lt;/code&gt; を使用しない、または必要としない静的クラスまたはユーティリティクラスからキーボードを非表示にしたい場合があります。 またはさらに悪いことに、IMMでは、キーボードを非表示にする &lt;code&gt;View&lt;/code&gt; （またはさらに悪いことに、 &lt;code&gt;Window&lt;/code&gt; ）を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="d60361ed4f314410b73a00166349b4d4a92738b3" translate="yes" xml:space="preserve">
          <source>I'm using a custom keyboard to input an Hex number so I can't have the IMM keyboard show up...</source>
          <target state="translated">カスタムキーボードで16進数を入力しているので、IMMのキーボードが表示されないんですが...。</target>
        </trans-unit>
        <trans-unit id="6e04eb07842b84797a95225d4991932287dd5d69" translate="yes" xml:space="preserve">
          <source>If all the other answers here don't work for you as you would like them to, there's another way of manually controlling the keyboard.</source>
          <target state="translated">ここにある他のすべての回答が、あなたが望むように動作しない場合は、キーボードを手動で制御する別の方法があります。</target>
        </trans-unit>
        <trans-unit id="e948418d69298e8c6e09e5a2a5419b443139974e" translate="yes" xml:space="preserve">
          <source>If the soft keyboard should be shown, then the InputMethodManager is told to show the keyboard and the window is instructed to make the soft input always visible. If the soft keyboard should be hidden then the WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM is set.</source>
          <target state="translated">ソフトキーボードを表示する場合、InputMethodManagerはキーボードを表示するように指示され、ウィンドウはソフト入力を常に表示するように指示されます。ソフトキーボードを非表示にする場合、WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IMが設定されます。</target>
        </trans-unit>
        <trans-unit id="29d77a6d8ce9e44455d8c9b75aa0117cfe837cb6" translate="yes" xml:space="preserve">
          <source>If there is no focused view (e.g. can happen if you just changed fragments), there are other views that will supply a useful window token.</source>
          <target state="translated">フォーカスされたビューがない場合(例えば、フラグメントを変更しただけの場合など)、有用なウィンドウトークンを提供してくれるビューが他にもあります。</target>
        </trans-unit>
        <trans-unit id="ca1b2ab2a7dd8ac8bb267ea87149d33cd6ac38e1" translate="yes" xml:space="preserve">
          <source>If you want to close the soft keyboard during a unit or functional test, you can do so by clicking the &quot;back button&quot; from your test:</source>
          <target state="translated">ユニットテストや機能テスト中にソフトキーボードを閉じたい場合は、テストから「戻るボタン」をクリックすることで閉じることができます。</target>
        </trans-unit>
        <trans-unit id="9ff1260b6f489690be1d98bc9b5448407c0c6eda" translate="yes" xml:space="preserve">
          <source>In v3.2.4_r1 &lt;code&gt;setSoftInputShownOnFocus(boolean show)&lt;/code&gt; was added to control weather or not to display the keyboard when a TextView gets focus, but its still hidden so reflection must be used:</source>
          <target state="translated">v3.2.4_r1 &lt;code&gt;setSoftInputShownOnFocus(boolean show)&lt;/code&gt; 天候を制御するため、またはTextViewがフォーカスを取得したときにキーボードを表示しないように、 setSoftInputShownOnFocus（boolean show）が追加されましたが、まだ非表示になっているため、リフレクションを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="a67551231aa2e03c35517cc304018540e0c6be90" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;OnClick&lt;/code&gt; listener call the &lt;code&gt;onEditorAction&lt;/code&gt; of the &lt;code&gt;EditText&lt;/code&gt; with &lt;code&gt;IME_ACTION_DONE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;OnClick&lt;/code&gt; リスナーで、 &lt;code&gt;onEditorAction&lt;/code&gt; を使用して &lt;code&gt;EditText&lt;/code&gt; のonEditorActionを &lt;code&gt;IME_ACTION_DONE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24c8f9f7d5df287a718e901c6cd146eab91f0a89" translate="yes" xml:space="preserve">
          <source>Inside a fragment class:</source>
          <target state="translated">フラグメントクラスの内部。</target>
        </trans-unit>
        <trans-unit id="f46c1a0833c548f1f2ab3704c88c1fd64f88b7aa" translate="yes" xml:space="preserve">
          <source>Inside the onCreate method the following code is run:</source>
          <target state="translated">onCreateメソッドの内部では、以下のコードを実行しています。</target>
        </trans-unit>
        <trans-unit id="991f035b63f7f5bd725100330c12d97ca435c1a6" translate="yes" xml:space="preserve">
          <source>Just use this optimized code in your activity:</source>
          <target state="translated">この最適化されたコードをアクティビティで使用するだけです。</target>
        </trans-unit>
        <trans-unit id="7918af8ecc4a8cbf1a9290ef05fd99ac7b3ed1d2" translate="yes" xml:space="preserve">
          <source>Make sure to pause for a little while before moving on, since it takes a little while to close the back button, so subsequent clicks to Views, etc., won't be registered until after a short pause (1 second is long enough ime).</source>
          <target state="translated">戻るボタンを閉じるのに少し時間がかかるので、それ以降のViewsなどのクリックは短い一時停止(1秒でも十分長い)をしないと登録されないので、移動する前に少しだけ一時停止するようにしてください。</target>
        </trans-unit>
        <trans-unit id="1fb52a3bd0d6218c2f5f530f56b272e874ec6d78" translate="yes" xml:space="preserve">
          <source>Mark an activity to never show or allow the use of the
keyboard.  This flag can only be set when an activity is
initialising.</source>
          <target state="translated">キーボードを表示しない、または使用を許可しないアクティビティをマークします。このフラグは、アクティビティの初期化時にのみ設定できます。</target>
        </trans-unit>
        <trans-unit id="f16e626c3b755a93b1aaadacb1989ef40fdd7f12" translate="yes" xml:space="preserve">
          <source>Meier's solution works for me too. In my case the top level of my App is a tabHost and I want to hide the keyword when switching tabs - I get the window token from the tabHost View.</source>
          <target state="translated">Meier のソリューションは私にも有効です。私の場合、アプリのトップレベルはtabHostで、タブを切り替えるときにキーワードを非表示にしたいのですが、tabHostビューからウィンドウトークンを取得しています。</target>
        </trans-unit>
        <trans-unit id="a48aec7b801b69e814f4d3c37c83f3fb22a64136" translate="yes" xml:space="preserve">
          <source>Might as well use the correct flags, though.</source>
          <target state="translated">正しい旗を使った方がいいかもしれないが</target>
        </trans-unit>
        <trans-unit id="3959676d1fd62f94037aa3e960244375aeabbf5c" translate="yes" xml:space="preserve">
          <source>Now, whenever you want to open the keyboard manually call:</source>
          <target state="translated">さて、キーボードを開きたいときはいつでも手動で呼び出します。</target>
        </trans-unit>
        <trans-unit id="1676b6642119a6e78e273b06ef382dc642a9b8c8" translate="yes" xml:space="preserve">
          <source>Old answer:</source>
          <target state="translated">古い答えだ</target>
        </trans-unit>
        <trans-unit id="5ebd9feb499fc2eac9c143b157f76ad547618030" translate="yes" xml:space="preserve">
          <source>Please try this below code in  &lt;code&gt;onCreate()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;onCreate()&lt;/code&gt; で以下のコードを試してください</target>
        </trans-unit>
        <trans-unit id="a66450c474481f5ee0573af99ee52b0b3aab4d3f" translate="yes" xml:space="preserve">
          <source>Show the keyboard when an activity starts
and set a flag on the activity indicating that they keyboard should
always be visible.  This flag can only be set when an activity is
initialising.</source>
          <target state="translated">アクティビティの開始時にキーボードを表示し、キーボードが常に表示されていることを示すフラグをアクティビティに設定します。このフラグは、アクティビティの初期化時にのみ設定できます。</target>
        </trans-unit>
        <trans-unit id="15c6dbf19c6d595cc943a1723bbd90b31bb5bb7d" translate="yes" xml:space="preserve">
          <source>Simple and Easy to use method, just call &lt;strong&gt;hideKeyboardFrom(YourActivity.this);&lt;/strong&gt; to hide keyboard</source>
          <target state="translated">シンプルで使いやすいメソッド&lt;strong&gt;。hideKeyboardFrom（YourActivity.this）;を&lt;/strong&gt;呼び出すだけ&lt;strong&gt;です。&lt;/strong&gt; キーボードを隠す</target>
        </trans-unit>
        <trans-unit id="9efcb3eb7be71a28f720d7d707df077f1540eece" translate="yes" xml:space="preserve">
          <source>Starting from your content body:</source>
          <target state="translated">コンテンツの本文からスタートします。</target>
        </trans-unit>
        <trans-unit id="123c98bedea517925ec9f05b4abebd4af9ae3fb3" translate="yes" xml:space="preserve">
          <source>Temporarily hide the keyboard.  It will re-appear again when a user
focuses a new text field.</source>
          <target state="translated">キーボードを一時的に非表示にします。ユーザーが新しいテキストフィールドにフォーカスを当てると再び表示されます。</target>
        </trans-unit>
        <trans-unit id="4cdb1fa47b39bc1a25f585e458ebe6212e656af1" translate="yes" xml:space="preserve">
          <source>Thanks to &lt;a href=&quot;https://stackoverflow.com/a/7696791/1617737&quot;&gt;this SO answer&lt;/a&gt;, I derived the following which, in my case, works nicely when scrolling through the the fragments of a ViewPager...</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/7696791/1617737&quot;&gt;このSOの回答の&lt;/a&gt;おかげで、私は次のように導きました。私の場合、ViewPagerのフラグメントをスクロールするときにうまく機能します...</target>
        </trans-unit>
        <trans-unit id="bec18bfac867702bfd761245f9fc21d98773d4ee" translate="yes" xml:space="preserve">
          <source>The drill-down</source>
          <target state="translated">ドリルダウン</target>
        </trans-unit>
        <trans-unit id="cc835fe349122d507337a145d433d88cb7773291" translate="yes" xml:space="preserve">
          <source>The short answer</source>
          <target state="translated">短い答えは</target>
        </trans-unit>
        <trans-unit id="30402e74e3a068366f88f5698e68ab191b711765" translate="yes" xml:space="preserve">
          <source>Then, make sure that onFocus of the &lt;code&gt;EditText&lt;/code&gt; you open/close the keyboard:</source>
          <target state="translated">次に、キーボードを開いたり閉じ &lt;code&gt;EditText&lt;/code&gt; するEditTextのonFocusを確認します。</target>
        </trans-unit>
        <trans-unit id="3013bf35af3d83fc637ee3c042eb9d571dd1618b" translate="yes" xml:space="preserve">
          <source>There's yet another point of contention to be aware of. By default, Android will automatically assign initial focus to the first &lt;code&gt;EditText&lt;/code&gt; or focusable control in your &lt;code&gt;Activity&lt;/code&gt;.  It naturally follows that the InputMethod (typically the soft keyboard) will respond to the focus event by showing itself. The &lt;code&gt;windowSoftInputMode&lt;/code&gt; attribute in &lt;code&gt;AndroidManifest.xml&lt;/code&gt;, when set to &lt;code&gt;stateAlwaysHidden&lt;/code&gt;, instructs the keyboard to ignore this automatically-assigned initial focus.</source>
          <target state="translated">もう1つ注意すべき論点があります。 デフォルトでは、Androidは最初のフォーカスを自動的に &lt;code&gt;Activity&lt;/code&gt; 最初の &lt;code&gt;EditText&lt;/code&gt; またはフォーカス可能なコントロールに割り当てます。 当然ながら、InputMethod（通常はソフトキーボード）はフォーカスイベントに応答して表示されます。 &lt;code&gt;AndroidManifest.xml&lt;/code&gt; の &lt;code&gt;windowSoftInputMode&lt;/code&gt; 属性は、 &lt;code&gt;stateAlwaysHidden&lt;/code&gt; に設定されている場合 、この自動的に割り当てられた初期フォーカスを無視するようにキーボードに指示します。</target>
        </trans-unit>
        <trans-unit id="07611b83f4f2d85d658d0f7d5fec16a9b16b5de5" translate="yes" xml:space="preserve">
          <source>Therefore, &lt;code&gt;stateAlwaysHidden&lt;/code&gt; is VERY poorly named indeed. It should perhaps be called &lt;code&gt;ignoreInitialFocus&lt;/code&gt; instead.</source>
          <target state="translated">したがって、 &lt;code&gt;stateAlwaysHidden&lt;/code&gt; の名前は実際には非常によくありません。 代わりに、おそらく &lt;code&gt;ignoreInitialFocus&lt;/code&gt; と呼ばれるべきです。</target>
        </trans-unit>
        <trans-unit id="0896178be49463c6e1f9b592cd05377b0b6c1961" translate="yes" xml:space="preserve">
          <source>These are alternatives for the above code &lt;code&gt;if (view == null)   view = new View(activity);&lt;/code&gt;  These don't refer explicitly to your activity.</source>
          <target state="translated">&lt;code&gt;if (view == null) view = new View(activity);&lt;/code&gt; 、これらは上記のコードの代替です。 これらはあなたの活動を明示的に指しているわけではありません。</target>
        </trans-unit>
        <trans-unit id="fe0f460a2f2c1670aabed00b6a29f486b40f0ae5" translate="yes" xml:space="preserve">
          <source>This approach works reliably on all devices I have tested on - from a 4 year old HTC phone running android 2.2 up to a nexus 7 running 4.2.2.  The only disadvantage with this approach is you need to be careful with handling the back button.  As my app essentially only has one screen (its a calculator) I can override onBackPressed() and return to the devices home screen.</source>
          <target state="translated">このアプローチは、私がテストしたすべてのデバイス上で確実に動作します-4歳のHTCの携帯電話からアンドロイド2.2を実行している 4.2.2.2を実行しているネクサス7まで.このアプローチの唯一の欠点は、あなたが戻るボタンの処理に注意する必要があることです。私のアプリは基本的に1つの画面しか持っていないので(その電卓)、onBackPressed()をオーバーライドしてデバイスのホーム画面に戻ることができます。</target>
        </trans-unit>
        <trans-unit id="280f3a02c9c3a4c2cb66c3c94c0645ef1db583e4" translate="yes" xml:space="preserve">
          <source>This can be used to suppress the soft-keyboard until the user actually touches the editText View.</source>
          <target state="translated">これは、ユーザーが実際にエディットテキストビューに触れるまでソフトキーボードを抑制するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="0e830705ef1cbb279a5f9042d1150c2b9016307c" translate="yes" xml:space="preserve">
          <source>This causes the current activity to have its state saved into a Bundle, and then the activity is started, passing through an boolean which indicates if the keyboard should be shown or hidden.</source>
          <target state="translated">これにより、現在のアクティビティの状態がBundleに保存され、アクティビティが開始され、キーボードが表示されるべきか隠されるべきかを示すブール値を通過します。</target>
        </trans-unit>
        <trans-unit id="9d0f044148bec9f373705aec93858a2146abfbf8" translate="yes" xml:space="preserve">
          <source>This is what makes hiding the keyboard so challenging. Dear Google: When I'm looking up the recipe for a cake, there is no &lt;code&gt;RecipeProvider&lt;/code&gt; on Earth that would refuse to provide me with the recipe unless I first answer WHO the cake will be eaten by AND where it will be eaten!!</source>
          <target state="translated">これにより、キーボードを非表示にすることが非常に困難になります。 親愛なるグーグル：私がケーキのレシピを探しているとき、私が &lt;code&gt;RecipeProvider&lt;/code&gt; に誰がケーキを食べるのか、どこで食べるのか答えない限り、レシピを提供することを拒否するレシピプロバイダーは地球上にありません。</target>
        </trans-unit>
        <trans-unit id="a36a75b28b85949d6796ec6f80ad8f7a200d0123" translate="yes" xml:space="preserve">
          <source>This last solution may show the keyboard for a split second and messes with the selection handles.</source>
          <target state="translated">この最後の解決策は、一瞬だけキーボードが表示されて選択ハンドルを混乱させる可能性があります。</target>
        </trans-unit>
        <trans-unit id="636fef779f8a03c113fafc429ad64fccce6caa04" translate="yes" xml:space="preserve">
          <source>This sad story ends with the ugly truth: to hide the Android keyboard, you will be required to provide 2 forms of identification: a &lt;code&gt;Context&lt;/code&gt; and either a &lt;code&gt;View&lt;/code&gt; or a &lt;code&gt;Window&lt;/code&gt;.</source>
          <target state="translated">この悲しい話は、醜い真実で終わります。Androidキーボードを非表示にするには、2つの形式の識別情報（ &lt;code&gt;Context&lt;/code&gt; と &lt;code&gt;View&lt;/code&gt; または &lt;code&gt;Window&lt;/code&gt; を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="55ef13a1e73329e726feb2ef079106cad9f434f9" translate="yes" xml:space="preserve">
          <source>This should work:</source>
          <target state="translated">これはうまくいくはずです。</target>
        </trans-unit>
        <trans-unit id="a2288cc6581d7b7a0946eb3276592e3a569b8926" translate="yes" xml:space="preserve">
          <source>This will force the keyboard to be hidden in all situations. In some cases you will want to pass in &lt;code&gt;InputMethodManager.HIDE_IMPLICIT_ONLY&lt;/code&gt; as the second parameter to ensure you only hide the keyboard when the user didn't explicitly force it to appear (by holding down menu).</source>
          <target state="translated">これにより、すべての状況でキーボードが非表示になります。 場合によっては、2番目のパラメーターとして &lt;code&gt;InputMethodManager.HIDE_IMPLICIT_ONLY&lt;/code&gt; を渡して、ユーザーが明示的にキーボードを強制的に表示しなかった場合にのみキーボードを非表示にする（メニューを押したままにする）ことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="f557108cc7f56192eb7710110bbb5c740e2fc15b" translate="yes" xml:space="preserve">
          <source>This won't work because you'll be passing a reference to the &lt;code&gt;Fragment&lt;/code&gt;'s host &lt;code&gt;Activity&lt;/code&gt;, which will have no focused control while the &lt;code&gt;Fragment&lt;/code&gt; is shown! Wow! So, for hiding the keyboard from fragments, I resort to the lower-level, more common, and uglier:</source>
          <target state="translated">&lt;code&gt;Fragment&lt;/code&gt; が表示されている間、フォーカスされた制御を持たない &lt;code&gt;Fragment&lt;/code&gt; のホスト &lt;code&gt;Activity&lt;/code&gt; への参照を渡すため、これは機能しません！ うわー！ ですから、フラグメントからキーボードを隠すために、私はより低レベルで、より一般的で醜いものに頼っています：</target>
        </trans-unit>
        <trans-unit id="d0373d2754a03ef5917cc5ea59e5197aa9376432" translate="yes" xml:space="preserve">
          <source>This worked for me for all the bizarre keyboard behavior</source>
          <target state="translated">これは、すべての奇妙なキーボードの動作のために私のために働いた</target>
        </trans-unit>
        <trans-unit id="2f490f9ccfed247cc722cc9c067ba82ece34cba6" translate="yes" xml:space="preserve">
          <source>To help clarify this madness, I'd like to begin by apologizing on behalf of all Android users for Google's downright ridiculous treatment of the soft keyboard. The reason there are so many answers, each different, for the same simple question because this API, like many others in Android, is horribly designed. I can think of no polite way to state it.</source>
          <target state="translated">この狂気を明らかにするために,私はすべてのAndroidユーザーを代表して謝罪することから始めたいと思います,ソフトキーボードのGoogleの全く馬鹿げた扱いのために.非常に多くの答えがある理由,それぞれ異なる,同じ単純な質問のために,このAPIのために,Androidの他の多くのような,恐ろしいほど設計されています.私はそれを述べるための丁寧な方法を考えることができません.</target>
        </trans-unit>
        <trans-unit id="e21644360428c7d8b77323a835575e5d707c90b0" translate="yes" xml:space="preserve">
          <source>Unfortunately item 2 and 3 on the list only work reliability when an activity is being started.  Once the activity has become visible you cannot permanently hide or show the keyboard.  The trick is to actually restart your activity when the user presses the keyboard toggle button.  In my app when the user presses on the toggle keyboard button, the following code runs:</source>
          <target state="translated">残念ながらリストの項目2と3は、アクティビティが開始されているときにのみ動作します。一度アクティビティが表示されるようになると、キーボードを永久に隠したり表示したりすることはできません。トリックは、ユーザーがキーボードのトグルボタンを押したときに、実際にアクティビティを再開することです。私のアプリでは、ユーザーがキーボードのトグルボタンを押すと、以下のコードが実行されます。</target>
        </trans-unit>
        <trans-unit id="6073347556b92710a1cae7bfd6f95334a2d56147" translate="yes" xml:space="preserve">
          <source>Using the InputMethodManager did not close the keyboard. I had to clearFocus and set the focusable of the search view to false:</source>
          <target state="translated">InputMethodManagerを使ってもキーボードが閉じませんでした。clearFocusをクリアして、検索ビューのフォーカス可能をfalseにする必要がありました。</target>
        </trans-unit>
        <trans-unit id="4092ca80baa6fbcc673ca3756bd415cad19ccd43" translate="yes" xml:space="preserve">
          <source>What I end up with is forcing the show and hide, and it works perfectly:</source>
          <target state="translated">結局何をしても無理矢理見せたり隠したりしていて、完璧に機能しています。</target>
        </trans-unit>
        <trans-unit id="c25cb3bafc39a0d6203554a47821145d63d93932" translate="yes" xml:space="preserve">
          <source>When in the keyboard enters full screen, onGlobalLayout isn't called. To avoid that, use &lt;a href=&quot;https://developer.android.com/reference/android/widget/TextView.html#setImeOptions%28int%29&quot;&gt;TextView#setImeOptions(int)&lt;/a&gt; or in the TextView XML declaration:</source>
          <target state="translated">キーボードが全画面表示になると、onGlobalLayoutは呼び出されません。 これを回避するには、 &lt;a href=&quot;https://developer.android.com/reference/android/widget/TextView.html#setImeOptions%28int%29&quot;&gt;TextView＃setImeOptions（int）&lt;/a&gt;またはTextView XML宣言を使用します。</target>
        </trans-unit>
        <trans-unit id="c4d468602dd57b74a87ab550adbbec95d9a538f3" translate="yes" xml:space="preserve">
          <source>When touching outside the keyboard.</source>
          <target state="translated">キーボードの外側にタッチする場合</target>
        </trans-unit>
        <trans-unit id="5b0cceb4fda9665bce6fc6593579afa5c06f30e7" translate="yes" xml:space="preserve">
          <source>You can force Android to hide the virtual keyboard using the &lt;a href=&quot;http://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html&quot;&gt;InputMethodManager&lt;/a&gt;, calling &lt;a href=&quot;http://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html#hideSoftInputFromWindow%28android.os.IBinder,%20int%29&quot;&gt;&lt;code&gt;hideSoftInputFromWindow&lt;/code&gt;&lt;/a&gt;, passing in the token of the window containing your focused view.</source>
          <target state="translated">&lt;a href=&quot;http://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html&quot;&gt;InputMethodManager&lt;/a&gt;を使用して仮想キーボードを非表示にするようAndroidに強制することができます&lt;a href=&quot;http://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html#hideSoftInputFromWindow%28android.os.IBinder,%20int%29&quot;&gt; &lt;code&gt;hideSoftInputFromWindow&lt;/code&gt; &lt;/a&gt;を呼び出し、フォーカスされたビューを含むウィンドウのトークンを渡します。</target>
        </trans-unit>
        <trans-unit id="fa6819babfed2f44f295152d44fafd6c02c19e5e" translate="yes" xml:space="preserve">
          <source>You can see a working implementation of this in my app &lt;a href=&quot;https://play.google.com/store/apps/details?id=au.com.lukesleeman.rpn&amp;amp;hl=en&quot;&gt;clean RPN&lt;/a&gt;.</source>
          <target state="translated">あなたは私のアプリ&lt;a href=&quot;https://play.google.com/store/apps/details?id=au.com.lukesleeman.rpn&amp;amp;hl=en&quot;&gt;クリーンRPN&lt;/a&gt;でこれの実用的な実装を見ることができます。</target>
        </trans-unit>
        <trans-unit id="bcfbef6dc74e1d228301f445a3556e06bb75b46f" translate="yes" xml:space="preserve">
          <source>after that call on onTouchListener:</source>
          <target state="translated">onTouchListenerを呼び出した後に</target>
        </trans-unit>
        <trans-unit id="3d3093f7221ddef2ce2927ed0d133eaadaa4a137" translate="yes" xml:space="preserve">
          <source>and to get the context fetch it from constructor:)</source>
          <target state="translated">コンストラクタからコンテキストを取得します:)</target>
        </trans-unit>
        <trans-unit id="3ed6e8613259f1c2f5669c4b07261dac8d098424" translate="yes" xml:space="preserve">
          <source>from so searching, here I found an answer that works for me</source>
          <target state="translated">検索していて、ここで私は私のために動作する答えを見つけました。</target>
        </trans-unit>
        <trans-unit id="ae8d167cf77b0fb4fa5ed96fd284993f4fe31289" translate="yes" xml:space="preserve">
          <source>use this</source>
          <target state="translated">これを使う</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
