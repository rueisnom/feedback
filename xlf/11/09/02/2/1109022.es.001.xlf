<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/1109022">
    <body>
      <group id="1109022">
        <trans-unit id="2d705203d004168420b2371af5567a5181b6915b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/a/9494042/197359&quot;&gt;Saurabh Pareek&lt;/a&gt; has the best answer so far.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/9494042/197359&quot;&gt;Saurabh Pareek&lt;/a&gt; tiene la mejor respuesta hasta ahora.</target>
        </trans-unit>
        <trans-unit id="f032e2d6c71514b7dd73c2199ebc40c6ab8fb562" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;About windowSoftInputMode&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Acerca de windowSoftInputMode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9fb5e43380e0e0ed38754145accd58ee47ce367" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Kotlin Syntax&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Sintaxis de Kotlin&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f87517e9424dead3a132f36421c7063aa1ff1f14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you want to do this in Kotlin, use:
&lt;code&gt;context?.getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Nota:&lt;/strong&gt; Si desea hacer esto en Kotlin, use: &lt;code&gt;context?.getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0662e12d6ab52c694189e2d4852b062a705b1621" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE 2: Clear focus to avoid showing keyboard again if you open the app from the background&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ACTUALIZACI&amp;Oacute;N 2: enfoque claro para evitar mostrar el teclado nuevamente si abre la aplicaci&amp;oacute;n desde el fondo&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="36553438065e5239b46101b621301255cfb67316" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE: More ways to get a window token&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ACTUALIZACI&amp;Oacute;N: m&amp;aacute;s formas de obtener un token de ventana&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d5d3fdd9fc52bd0ef2e646a959dedbe0c3c1384" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update:&lt;/strong&gt;
I don't know why this solution is not work any more ( I just tested on Android 23). Please use the solution of &lt;a href=&quot;https://stackoverflow.com/a/9494042/523325&quot;&gt;Saurabh Pareek&lt;/a&gt; instead. Here it is:</source>
          <target state="translated">&lt;strong&gt;Actualizaci&amp;oacute;n:&lt;/strong&gt; no s&amp;eacute; por qu&amp;eacute; esta soluci&amp;oacute;n ya no funciona (acabo de probar en Android 23). Por favor utiliza la soluci&amp;oacute;n de &lt;a href=&quot;https://stackoverflow.com/a/9494042/523325&quot;&gt;Saurabh Pareek&lt;/a&gt; en su lugar. Aqu&amp;iacute; est&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="430833ed48b905d78e67676ad941f5fb3ff2e479" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update:&lt;/strong&gt; Just found what dialogs use to never show the keyboard and works in all versions:</source>
          <target state="translated">&lt;strong&gt;Actualizaci&amp;oacute;n:&lt;/strong&gt; Acabo de encontrar qu&amp;eacute; di&amp;aacute;logos usan para nunca mostrar el teclado y funciona en todas las versiones:</target>
        </trans-unit>
        <trans-unit id="68f94f54d83b4066a2138a1188498db71a566013" translate="yes" xml:space="preserve">
          <source>Above answers work for different scenario's but  &lt;strong&gt;If you want to hide the keyboard inside a view and struggling to get the right context try this:&lt;/strong&gt;</source>
          <target state="translated">Las respuestas anteriores funcionan para diferentes escenarios, pero &lt;strong&gt;si desea ocultar el teclado dentro de una vista y lucha por obtener el contexto correcto, intente esto:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b92172163270e91a26b57df3ee4b074879c00a1d" translate="yes" xml:space="preserve">
          <source>Add this line to the end of the method:</source>
          <target state="translated">Añade esta línea al final del método:</target>
        </trans-unit>
        <trans-unit id="f4d1206982236343c3ff4a0d31a949d0d9c5377f" translate="yes" xml:space="preserve">
          <source>Add to your activity    &lt;code&gt;android:windowSoftInputMode=&quot;stateHidden&quot;&lt;/code&gt; in Manifest file. Example:</source>
          <target state="translated">Agregue a su actividad &lt;code&gt;android:windowSoftInputMode=&quot;stateHidden&quot;&lt;/code&gt; en el archivo de manifiesto. Ejemplo:</target>
        </trans-unit>
        <trans-unit id="71349308b905dfb48c02f682a178c46233787a82" translate="yes" xml:space="preserve">
          <source>After testing many of the suggested answers on a number of different phones (including froyo and gingerbread devices) it became apparent that android apps can reliably:</source>
          <target state="translated">Después de probar muchas de las respuestas sugeridas en varios teléfonos diferentes (incluyendo los dispositivos froyo y de pan de jengibre)se hizo evidente que las aplicaciones para androides pueden ser confiables:</target>
        </trans-unit>
        <trans-unit id="30dd523c1a7f691f45e40641e6ea53d6499603a8" translate="yes" xml:space="preserve">
          <source>After writing in the edit field and clicking on the &lt;code&gt;Button&lt;/code&gt;, I want to hide the virtual keyboard. I assume that this is a simple piece of code, but where can I find an example of it?</source>
          <target state="translated">Despu&amp;eacute;s de escribir en el campo de edici&amp;oacute;n y hacer clic en el &lt;code&gt;Button&lt;/code&gt; , quiero ocultar el teclado virtual. Supongo que este es un c&amp;oacute;digo simple, pero &amp;iquest;d&amp;oacute;nde puedo encontrar un ejemplo?</target>
        </trans-unit>
        <trans-unit id="01c5349d233deb515f88d5cb0ea1f5cb51bb04a5" translate="yes" xml:space="preserve">
          <source>Almost unbelievably, it appears to do nothing to prevent the keyboard from opening when you touch the control (unless &lt;code&gt;focusable=&quot;false&quot;&lt;/code&gt; and/or &lt;code&gt;focusableInTouchMode=&quot;false&quot;&lt;/code&gt; are assigned to the control). Apparently, the windowSoftInputMode setting applies only to automatic focus events, not to focus events triggered by touch events.</source>
          <target state="translated">Casi incre&amp;iacute;blemente, parece que no hace nada para evitar que el teclado se abra al tocar el control (a menos que se asignen al control &lt;code&gt;focusable=&quot;false&quot;&lt;/code&gt; y / o &lt;code&gt;focusableInTouchMode=&quot;false&quot;&lt;/code&gt; ). Aparentemente, la configuraci&amp;oacute;n windowSoftInputMode se aplica solo a eventos de enfoque autom&amp;aacute;tico, no a eventos de enfoque activados por eventos t&amp;aacute;ctiles.</target>
        </trans-unit>
        <trans-unit id="391b4187f0014967ac951b1773786a6b330fd494" translate="yes" xml:space="preserve">
          <source>Also useful for hiding the soft-keyboard is:</source>
          <target state="translated">También es útil para ocultar el teclado blando:</target>
        </trans-unit>
        <trans-unit id="46e4a13a9ba78442c9b37fe440fb09f1ff2a8db7" translate="yes" xml:space="preserve">
          <source>Alternatively to &lt;a href=&quot;https://stackoverflow.com/a/9494042/451962&quot;&gt;this all around solution&lt;/a&gt;, if you wanted to close the soft keyboard &lt;strong&gt;from anywhere&lt;/strong&gt; without having a reference to the (EditText) field that was used to open the keyboard, but still wanted to do it if the field was focused, you could use this (from an Activity):</source>
          <target state="translated">Alternativamente a &lt;a href=&quot;https://stackoverflow.com/a/9494042/451962&quot;&gt;esta soluci&amp;oacute;n completa&lt;/a&gt; , si desea cerrar el teclado virtual &lt;strong&gt;desde cualquier lugar&lt;/strong&gt; sin tener una referencia al campo (Editar Texto) que se utiliz&amp;oacute; para abrir el teclado, pero a&amp;uacute;n as&amp;iacute; quer&amp;iacute;a hacerlo si el campo estaba enfocado, podr&amp;iacute;a usar esto (de una Actividad):</target>
        </trans-unit>
        <trans-unit id="d6aa8dae9787f34bd13ebd8223bde7c9d4ff2217" translate="yes" xml:space="preserve">
          <source>And for closing call:</source>
          <target state="translated">Y para la llamada de cierre:</target>
        </trans-unit>
        <trans-unit id="f173ecd1c5182a039c643250ad8fa69ba9242c4a" translate="yes" xml:space="preserve">
          <source>Be aware that this utility method ONLY works when called from an &lt;code&gt;Activity&lt;/code&gt;! The above method calls &lt;code&gt;getCurrentFocus&lt;/code&gt; of the target &lt;code&gt;Activity&lt;/code&gt; to fetch the proper window token.</source>
          <target state="translated">&amp;iexcl;Tenga en cuenta que este m&amp;eacute;todo de utilidad SOLO funciona cuando se llama desde una &lt;code&gt;Activity&lt;/code&gt; ! El m&amp;eacute;todo anterior llama a &lt;code&gt;getCurrentFocus&lt;/code&gt; de la &lt;code&gt;Activity&lt;/code&gt; destino para obtener el token de ventana adecuado.</target>
        </trans-unit>
        <trans-unit id="502d060c6f490cd74c1ea6555917cd7ae4e5337b" translate="yes" xml:space="preserve">
          <source>Below is some additional information gleaned from more time wasted chasing this solution:</source>
          <target state="translated">A continuación se presenta información adicional obtenida de más tiempo perdido en la búsqueda de esta solución:</target>
        </trans-unit>
        <trans-unit id="cfad39dc55cac1b221334145e87b2d52a77168df" translate="yes" xml:space="preserve">
          <source>But suppose you want to hide the keyboard from an &lt;code&gt;EditText&lt;/code&gt; hosted in a &lt;code&gt;DialogFragment&lt;/code&gt;? You can't use the method above for that:</source>
          <target state="translated">&amp;iquest;Pero suponga que desea ocultar el teclado de un &lt;code&gt;EditText&lt;/code&gt; alojado en un &lt;code&gt;DialogFragment&lt;/code&gt; ? No puede usar el m&amp;eacute;todo anterior para eso:</target>
        </trans-unit>
        <trans-unit id="d665c6af3c2f8c184e84494fe6225be1894acf71" translate="yes" xml:space="preserve">
          <source>Check this &lt;a href=&quot;https://stackoverflow.com/a/3449616/2837443&quot;&gt;related answer&lt;/a&gt;</source>
          <target state="translated">Comprueba esta &lt;a href=&quot;https://stackoverflow.com/a/3449616/2837443&quot;&gt;respuesta relacionada&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2d4094ca381c9176be5f252878c9ec86d83b2d4" translate="yes" xml:space="preserve">
          <source>Close/hide android soft keyboard</source>
          <target state="translated">Teclado blando androide cerrado</target>
        </trans-unit>
        <trans-unit id="37d92fb5022a3a039049bb8086fc3001db02641c" translate="yes" xml:space="preserve">
          <source>Create a function with that will manage some of the &lt;code&gt;EditText&lt;/code&gt;'s properties:</source>
          <target state="translated">Cree una funci&amp;oacute;n con la que administrar&amp;aacute; algunas de las propiedades de &lt;code&gt;EditText&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="632688d9dfd732b4ff204dc45af3e0683353942f" translate="yes" xml:space="preserve">
          <source>Example of real use</source>
          <target state="translated">Ejemplo de uso real</target>
        </trans-unit>
        <trans-unit id="2ea08e9f289c75a61cbe20a35b324651c8561ed6" translate="yes" xml:space="preserve">
          <source>For me, temporarily hiding the keyboard is not enough.  On some devices it will re-appear as soon as a new text field is focused.  As my app uses multiple text fields on one page, focusing a new text field will cause the hidden keyboard to pop back up again.</source>
          <target state="translated">Para mí,esconder temporalmente el teclado no es suficiente.En algunos dispositivos reaparecerá tan pronto como un nuevo campo de texto sea enfocado.Como mi aplicación utiliza varios campos de texto en una página,al enfocar un nuevo campo de texto hará que el teclado oculto vuelva a aparecer.</target>
        </trans-unit>
        <trans-unit id="98f31051226805c5e76143cec44fb707ba7fa0e6" translate="yes" xml:space="preserve">
          <source>For my case, I was using the a SearchView in the actionbar. After a user performs a search, the keyboard would pop open again.</source>
          <target state="translated">En mi caso,estaba usando la vista de búsqueda en la barra de acción.Después de que un usuario realiza una búsqueda,el teclado se abre de nuevo.</target>
        </trans-unit>
        <trans-unit id="dfe19ef4c9c4b2f5cbdb3750c2304f3dba8e231d" translate="yes" xml:space="preserve">
          <source>For older versions, I got very good results (but far from perfect) with a &lt;code&gt;OnGlobalLayoutListener&lt;/code&gt;, added with the aid of a &lt;code&gt;ViewTreeObserver&lt;/code&gt; from my root view and then checking if the keyboard is shown like this:</source>
          <target state="translated">Para versiones anteriores, obtuve muy buenos resultados (pero lejos de ser perfectos) con un &lt;code&gt;OnGlobalLayoutListener&lt;/code&gt; , agregado con la ayuda de un &lt;code&gt;ViewTreeObserver&lt;/code&gt; desde mi vista ra&amp;iacute;z y luego comprobando si el teclado se muestra as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="e147e6c468ffc02a1b74d09a2e71ab73375a0e42" translate="yes" xml:space="preserve">
          <source>Given a fragment &lt;code&gt;fragment&lt;/code&gt; as a parameter:</source>
          <target state="translated">Dado un fragmento &lt;code&gt;fragment&lt;/code&gt; o como par&amp;aacute;metro:</target>
        </trans-unit>
        <trans-unit id="1c570ee407dcd2afb2e0e5450d1055ba7209594c" translate="yes" xml:space="preserve">
          <source>Here pass &lt;code&gt;HIDE_IMPLICIT_ONLY&lt;/code&gt; at the position of &lt;code&gt;showFlag&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; at the position of &lt;code&gt;hiddenFlag&lt;/code&gt;. It will forcefully close soft Keyboard.</source>
          <target state="translated">Aqu&amp;iacute; pase &lt;code&gt;HIDE_IMPLICIT_ONLY&lt;/code&gt; en la posici&amp;oacute;n de &lt;code&gt;showFlag&lt;/code&gt; y &lt;code&gt;0&lt;/code&gt; en la posici&amp;oacute;n de &lt;code&gt;hiddenFlag&lt;/code&gt; . Se cerrar&amp;aacute; con fuerza el teclado suave.</target>
        </trans-unit>
        <trans-unit id="b47f39b2bbc282306be72e2fa17870c168b56f50" translate="yes" xml:space="preserve">
          <source>Here's how you do it in Mono for Android (AKA MonoDroid)</source>
          <target state="translated">Así es como se hace en Mono para Android (AKA MonoDroid)</target>
        </trans-unit>
        <trans-unit id="a6a0ce9031e0776d5fc6120b3023d51bccf114f1" translate="yes" xml:space="preserve">
          <source>Hope this helps.</source>
          <target state="translated">Espero que esto ayude.</target>
        </trans-unit>
        <trans-unit id="5227edcfb071ab3e49ac3e9b54b4d356eb9c63ed" translate="yes" xml:space="preserve">
          <source>I feel this method is better, simpler and more aligned with Android's design pattern.
In the simple example above (and usually in most of the common cases) you'll have an &lt;code&gt;EditText&lt;/code&gt; that has/had focus and it also usually was the one to invoke the keyboard in the first place (it is definitely able to invoke it in many common scenarios). In that same way, &lt;strong&gt;it&lt;/strong&gt; should be the one to release the keyboard, usually that can be done by an &lt;code&gt;ImeAction&lt;/code&gt;. Just see how an &lt;code&gt;EditText&lt;/code&gt; with &lt;code&gt;android:imeOptions=&quot;actionDone&quot;&lt;/code&gt; behaves, you want to achieve the same behavior by the same means.</source>
          <target state="translated">Siento que este m&amp;eacute;todo es mejor, m&amp;aacute;s simple y m&amp;aacute;s alineado con el patr&amp;oacute;n de dise&amp;ntilde;o de Android. En el ejemplo simple anterior (y generalmente en la mayor&amp;iacute;a de los casos comunes), tendr&amp;aacute; un &lt;code&gt;EditText&lt;/code&gt; que tiene / ten&amp;iacute;a foco y, por lo general, tambi&amp;eacute;n fue el que invoc&amp;oacute; el teclado (definitivamente es capaz de invocarlo en muchos escenarios comunes). De la misma manera, debe ser el que suelte el teclado, por lo general, eso se puede hacer con &lt;code&gt;ImeAction&lt;/code&gt; . Solo vea c&amp;oacute;mo se &lt;code&gt;EditText&lt;/code&gt; con &lt;code&gt;android:imeOptions=&quot;actionDone&quot;&lt;/code&gt; , desea lograr el mismo comportamiento por los mismos medios.</target>
        </trans-unit>
        <trans-unit id="d931ef6423737710e268929787e86c0ae450b5ea" translate="yes" xml:space="preserve">
          <source>I got one more solution to hide keyboard:</source>
          <target state="translated">Tengo una solución más para ocultar el teclado:</target>
        </trans-unit>
        <trans-unit id="ea294c80c103cb0537072fc3d3687bb3844c4463" translate="yes" xml:space="preserve">
          <source>I have almost tried all of these answers, I had some random issues especially with the samsung galaxy s5.</source>
          <target state="translated">He intentado casi todas estas respuestas,tuve algunos problemas al azar especialmente con la galaxia Samsung s5.</target>
        </trans-unit>
        <trans-unit id="7fe1e3b2f1c2ca9392f1923ec8ef822cababde41" translate="yes" xml:space="preserve">
          <source>I have an &lt;code&gt;EditText&lt;/code&gt; and a &lt;code&gt;Button&lt;/code&gt; in my layout.</source>
          <target state="translated">Tengo un &lt;code&gt;EditText&lt;/code&gt; y un &lt;code&gt;Button&lt;/code&gt; en mi dise&amp;ntilde;o.</target>
        </trans-unit>
        <trans-unit id="a9048ecc76c127ac40bf8b43a36c7176195d835e" translate="yes" xml:space="preserve">
          <source>I have created a static utility method that can do the job VERY solidly, provided you call it from an &lt;code&gt;Activity&lt;/code&gt;.</source>
          <target state="translated">He creado un m&amp;eacute;todo de utilidad est&amp;aacute;tica que puede hacer el trabajo MUY s&amp;oacute;lidamente, siempre que lo llame desde una &lt;code&gt;Activity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b94096a835c80a889853be5306428147562bad7" translate="yes" xml:space="preserve">
          <source>I have spent more than two days working through all of the solutions posted in the thread and have found them lacking in one way or another.  My exact requirement is to have a button that will with 100% reliability show or hide the on screen keyboard.  When the keyboard is in its hidden state is should not re-appear, no matter what input fields the user clicks on.  When it is in its visible state the keyboard should not disappear no matter what buttons the user clicks.  This needs to work on Android 2.2+ all the way up to the latest devices.</source>
          <target state="translated">He pasado más de dos días trabajando en todas las soluciones publicadas en el hilo y las he encontrado deficientes de una manera u otra.Mi requisito exacto es tener un botón que con un 100% de fiabilidad muestre u oculte el teclado en pantalla.Cuando el teclado está en su estado oculto no debe reaparecer,no importa en qué campos de entrada el usuario haga clic.Cuando está en su estado visible el teclado no debe desaparecer sin importar los botones en los que el usuario haga clic.Esto tiene que funcionar en Android 2.2+hasta los últimos dispositivos.</target>
        </trans-unit>
        <trans-unit id="cf4aefd891e06316bd9ec1f2687f2b3a47234e99" translate="yes" xml:space="preserve">
          <source>I have the case, where my &lt;code&gt;EditText&lt;/code&gt; can be located also in an &lt;code&gt;AlertDialog&lt;/code&gt;, so the keyboard should be closed on dismiss. The following code seems to be working anywhere:</source>
          <target state="translated">Tengo el caso, donde mi &lt;code&gt;EditText&lt;/code&gt; puede ubicarse tambi&amp;eacute;n en un &lt;code&gt;AlertDialog&lt;/code&gt; , por lo que el teclado debe cerrarse al cerrar. El siguiente c&amp;oacute;digo parece estar funcionando en cualquier lugar:</target>
        </trans-unit>
        <trans-unit id="704bf9c44152ee336be4142e27aa3cc797a7174d" translate="yes" xml:space="preserve">
          <source>I put &quot;back button&quot; in quotes, since the above doesn't trigger the &lt;code&gt;onBackPressed()&lt;/code&gt; for the Activity in question. It just closes the keyboard.</source>
          <target state="translated">&lt;code&gt;onBackPressed()&lt;/code&gt; &quot;bot&amp;oacute;n de retroceso&quot; entre comillas, ya que lo anterior no activa el onBackPressed () para la Actividad en cuesti&amp;oacute;n. Simplemente cierra el teclado.</target>
        </trans-unit>
        <trans-unit id="584ac3280c531f44f41b5c9b47f5c48cd9454454" translate="yes" xml:space="preserve">
          <source>I want to hide the keyboard.  I expect to provide Android with the following statement: &lt;code&gt;Keyboard.hide()&lt;/code&gt;. The end. Thank you very much.  But Android has a problem.  You must use the &lt;code&gt;InputMethodManager&lt;/code&gt; to hide the keyboard. OK, fine, this is Android's API to the keyboard. BUT! You are required to have a &lt;code&gt;Context&lt;/code&gt; in order to get access to the IMM. Now we have a problem.  I may want to hide the keyboard from a static or utility class that has no use or need for any &lt;code&gt;Context&lt;/code&gt;. or And FAR worse, the IMM requires that you specify what &lt;code&gt;View&lt;/code&gt; (or even worse, what &lt;code&gt;Window&lt;/code&gt;) you want to hide the keyboard FROM.</source>
          <target state="translated">Quiero esconder el teclado Espero proporcionar a Android la siguiente declaraci&amp;oacute;n: &lt;code&gt;Keyboard.hide()&lt;/code&gt; . El fin. Muchas gracias. Pero Android tiene un problema. Debe usar &lt;code&gt;InputMethodManager&lt;/code&gt; para ocultar el teclado. OK, bien, esta es la API de Android para el teclado. &amp;iexcl;PERO! Debe tener un &lt;code&gt;Context&lt;/code&gt; para obtener acceso al IMM. Ahora tenemos un problema. Es posible que desee ocultar el teclado de una clase est&amp;aacute;tica o de utilidad que no tiene ning&amp;uacute;n uso o necesidad de ning&amp;uacute;n &lt;code&gt;Context&lt;/code&gt; . o Y MUCHO peor, el IMM requiere que especifique desde qu&amp;eacute; &lt;code&gt;View&lt;/code&gt; (o peor a&amp;uacute;n, desde qu&amp;eacute; &lt;code&gt;Window&lt;/code&gt; ) desea ocultar el teclado.</target>
        </trans-unit>
        <trans-unit id="d60361ed4f314410b73a00166349b4d4a92738b3" translate="yes" xml:space="preserve">
          <source>I'm using a custom keyboard to input an Hex number so I can't have the IMM keyboard show up...</source>
          <target state="translated">Estoy usando un teclado personalizado para introducir un número hexadecimal para que no aparezca el teclado IMM...</target>
        </trans-unit>
        <trans-unit id="6e04eb07842b84797a95225d4991932287dd5d69" translate="yes" xml:space="preserve">
          <source>If all the other answers here don't work for you as you would like them to, there's another way of manually controlling the keyboard.</source>
          <target state="translated">Si el resto de las respuestas no te funcionan como te gustaría,hay otra forma de controlar manualmente el teclado.</target>
        </trans-unit>
        <trans-unit id="e948418d69298e8c6e09e5a2a5419b443139974e" translate="yes" xml:space="preserve">
          <source>If the soft keyboard should be shown, then the InputMethodManager is told to show the keyboard and the window is instructed to make the soft input always visible. If the soft keyboard should be hidden then the WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM is set.</source>
          <target state="translated">Si se debe mostrar el teclado blando,se le dice al InputMethodManager que muestre el teclado y se le indica a la ventana que haga la entrada blanda siempre visible.Si el teclado suave debe estar oculto,entonces se establece el WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM.</target>
        </trans-unit>
        <trans-unit id="29d77a6d8ce9e44455d8c9b75aa0117cfe837cb6" translate="yes" xml:space="preserve">
          <source>If there is no focused view (e.g. can happen if you just changed fragments), there are other views that will supply a useful window token.</source>
          <target state="translated">Si no hay una vista enfocada (por ejemplo,puede suceder si acaba de cambiar los fragmentos),hay otras vistas que proporcionarán una útil muestra de la ventana.</target>
        </trans-unit>
        <trans-unit id="ca1b2ab2a7dd8ac8bb267ea87149d33cd6ac38e1" translate="yes" xml:space="preserve">
          <source>If you want to close the soft keyboard during a unit or functional test, you can do so by clicking the &quot;back button&quot; from your test:</source>
          <target state="translated">Si desea cerrar el teclado blando durante una prueba unitaria o funcional,puede hacerlo haciendo clic en el &quot;botón de regreso&quot; de su prueba:</target>
        </trans-unit>
        <trans-unit id="9ff1260b6f489690be1d98bc9b5448407c0c6eda" translate="yes" xml:space="preserve">
          <source>In v3.2.4_r1 &lt;code&gt;setSoftInputShownOnFocus(boolean show)&lt;/code&gt; was added to control weather or not to display the keyboard when a TextView gets focus, but its still hidden so reflection must be used:</source>
          <target state="translated">En v3.2.4_r1, se agreg&amp;oacute; &lt;code&gt;setSoftInputShownOnFocus(boolean show)&lt;/code&gt; para controlar el clima o no para mostrar el teclado cuando TextView obtiene el foco, pero todav&amp;iacute;a est&amp;aacute; oculto, por lo que debe usarse la reflexi&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="a67551231aa2e03c35517cc304018540e0c6be90" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;OnClick&lt;/code&gt; listener call the &lt;code&gt;onEditorAction&lt;/code&gt; of the &lt;code&gt;EditText&lt;/code&gt; with &lt;code&gt;IME_ACTION_DONE&lt;/code&gt;</source>
          <target state="translated">En su escucha &lt;code&gt;OnClick&lt;/code&gt; , llame a &lt;code&gt;onEditorAction&lt;/code&gt; del &lt;code&gt;EditText&lt;/code&gt; con &lt;code&gt;IME_ACTION_DONE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24c8f9f7d5df287a718e901c6cd146eab91f0a89" translate="yes" xml:space="preserve">
          <source>Inside a fragment class:</source>
          <target state="translated">Dentro de una clase de fragmentos:</target>
        </trans-unit>
        <trans-unit id="f46c1a0833c548f1f2ab3704c88c1fd64f88b7aa" translate="yes" xml:space="preserve">
          <source>Inside the onCreate method the following code is run:</source>
          <target state="translated">Dentro del método onCreate se ejecuta el siguiente código:</target>
        </trans-unit>
        <trans-unit id="991f035b63f7f5bd725100330c12d97ca435c1a6" translate="yes" xml:space="preserve">
          <source>Just use this optimized code in your activity:</source>
          <target state="translated">Sólo usa este código optimizado en tu actividad:</target>
        </trans-unit>
        <trans-unit id="7918af8ecc4a8cbf1a9290ef05fd99ac7b3ed1d2" translate="yes" xml:space="preserve">
          <source>Make sure to pause for a little while before moving on, since it takes a little while to close the back button, so subsequent clicks to Views, etc., won't be registered until after a short pause (1 second is long enough ime).</source>
          <target state="translated">Asegúrate de hacer una pequeña pausa antes de seguir adelante,ya que tarda un poco en cerrar el botón de regreso,por lo que los clics subsiguientes a Vistas,etc.,no se registrarán hasta después de una corta pausa (1 segundo es suficiente ime).</target>
        </trans-unit>
        <trans-unit id="1fb52a3bd0d6218c2f5f530f56b272e874ec6d78" translate="yes" xml:space="preserve">
          <source>Mark an activity to never show or allow the use of the
keyboard.  This flag can only be set when an activity is
initialising.</source>
          <target state="translated">Marcar una actividad para no mostrar o permitir nunca el uso del teclado.Esta bandera sólo puede ser puesta cuando una actividad se está iniciando.</target>
        </trans-unit>
        <trans-unit id="f16e626c3b755a93b1aaadacb1989ef40fdd7f12" translate="yes" xml:space="preserve">
          <source>Meier's solution works for me too. In my case the top level of my App is a tabHost and I want to hide the keyword when switching tabs - I get the window token from the tabHost View.</source>
          <target state="translated">La solución de Meier también funciona para mí.En mi caso,el nivel superior de mi aplicación es un tabHost y quiero ocultar la palabra clave al cambiar de pestaña.</target>
        </trans-unit>
        <trans-unit id="a48aec7b801b69e814f4d3c37c83f3fb22a64136" translate="yes" xml:space="preserve">
          <source>Might as well use the correct flags, though.</source>
          <target state="translated">Aunque también podría usar las banderas correctas.</target>
        </trans-unit>
        <trans-unit id="3959676d1fd62f94037aa3e960244375aeabbf5c" translate="yes" xml:space="preserve">
          <source>Now, whenever you want to open the keyboard manually call:</source>
          <target state="translated">Ahora,cuando quieras abrir el teclado manualmente llama:</target>
        </trans-unit>
        <trans-unit id="1676b6642119a6e78e273b06ef382dc642a9b8c8" translate="yes" xml:space="preserve">
          <source>Old answer:</source>
          <target state="translated">Respuesta antigua:</target>
        </trans-unit>
        <trans-unit id="5ebd9feb499fc2eac9c143b157f76ad547618030" translate="yes" xml:space="preserve">
          <source>Please try this below code in  &lt;code&gt;onCreate()&lt;/code&gt;</source>
          <target state="translated">Por favor, intente este c&amp;oacute;digo a continuaci&amp;oacute;n en &lt;code&gt;onCreate()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a66450c474481f5ee0573af99ee52b0b3aab4d3f" translate="yes" xml:space="preserve">
          <source>Show the keyboard when an activity starts
and set a flag on the activity indicating that they keyboard should
always be visible.  This flag can only be set when an activity is
initialising.</source>
          <target state="translated">Mostrar el teclado cuando se inicia una actividad y poner una bandera en la actividad indicando que el teclado debe estar siempre visible.Esta bandera sólo puede ser puesta cuando una actividad se está iniciando.</target>
        </trans-unit>
        <trans-unit id="15c6dbf19c6d595cc943a1723bbd90b31bb5bb7d" translate="yes" xml:space="preserve">
          <source>Simple and Easy to use method, just call &lt;strong&gt;hideKeyboardFrom(YourActivity.this);&lt;/strong&gt; to hide keyboard</source>
          <target state="translated">M&amp;eacute;todo simple y f&amp;aacute;cil de usar, solo llame a &lt;strong&gt;hideKeyboardFrom (YourActivity.this);&lt;/strong&gt; para ocultar el teclado</target>
        </trans-unit>
        <trans-unit id="9efcb3eb7be71a28f720d7d707df077f1540eece" translate="yes" xml:space="preserve">
          <source>Starting from your content body:</source>
          <target state="translated">Empezando por tu cuerpo de contenido:</target>
        </trans-unit>
        <trans-unit id="123c98bedea517925ec9f05b4abebd4af9ae3fb3" translate="yes" xml:space="preserve">
          <source>Temporarily hide the keyboard.  It will re-appear again when a user
focuses a new text field.</source>
          <target state="translated">Esconder temporalmente el teclado.Volverá a aparecer cuando un usuario enfoque un nuevo campo de texto.</target>
        </trans-unit>
        <trans-unit id="4cdb1fa47b39bc1a25f585e458ebe6212e656af1" translate="yes" xml:space="preserve">
          <source>Thanks to &lt;a href=&quot;https://stackoverflow.com/a/7696791/1617737&quot;&gt;this SO answer&lt;/a&gt;, I derived the following which, in my case, works nicely when scrolling through the the fragments of a ViewPager...</source>
          <target state="translated">Gracias a &lt;a href=&quot;https://stackoverflow.com/a/7696791/1617737&quot;&gt;esta respuesta SO&lt;/a&gt; , deduje lo siguiente que, en mi caso, funciona muy bien al desplazarse por los fragmentos de un ViewPager ...</target>
        </trans-unit>
        <trans-unit id="bec18bfac867702bfd761245f9fc21d98773d4ee" translate="yes" xml:space="preserve">
          <source>The drill-down</source>
          <target state="translated">El desglose...</target>
        </trans-unit>
        <trans-unit id="cc835fe349122d507337a145d433d88cb7773291" translate="yes" xml:space="preserve">
          <source>The short answer</source>
          <target state="translated">La respuesta corta</target>
        </trans-unit>
        <trans-unit id="30402e74e3a068366f88f5698e68ab191b711765" translate="yes" xml:space="preserve">
          <source>Then, make sure that onFocus of the &lt;code&gt;EditText&lt;/code&gt; you open/close the keyboard:</source>
          <target state="translated">Luego, aseg&amp;uacute;rese de que enFocus of &lt;code&gt;EditText&lt;/code&gt; abra / cierre el teclado:</target>
        </trans-unit>
        <trans-unit id="3013bf35af3d83fc637ee3c042eb9d571dd1618b" translate="yes" xml:space="preserve">
          <source>There's yet another point of contention to be aware of. By default, Android will automatically assign initial focus to the first &lt;code&gt;EditText&lt;/code&gt; or focusable control in your &lt;code&gt;Activity&lt;/code&gt;.  It naturally follows that the InputMethod (typically the soft keyboard) will respond to the focus event by showing itself. The &lt;code&gt;windowSoftInputMode&lt;/code&gt; attribute in &lt;code&gt;AndroidManifest.xml&lt;/code&gt;, when set to &lt;code&gt;stateAlwaysHidden&lt;/code&gt;, instructs the keyboard to ignore this automatically-assigned initial focus.</source>
          <target state="translated">Hay otro punto de contenci&amp;oacute;n a tener en cuenta. Por defecto, Android asignar&amp;aacute; autom&amp;aacute;ticamente el foco inicial al primer &lt;code&gt;EditText&lt;/code&gt; o control enfocable en su &lt;code&gt;Activity&lt;/code&gt; . Naturalmente, se deduce que InputMethod (generalmente el teclado virtual) responder&amp;aacute; al evento de enfoque mostr&amp;aacute;ndose. El atributo &lt;code&gt;windowSoftInputMode&lt;/code&gt; en &lt;code&gt;AndroidManifest.xml&lt;/code&gt; , cuando se establece en &lt;code&gt;stateAlwaysHidden&lt;/code&gt; , indica al teclado que ignore este foco inicial asignado autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="07611b83f4f2d85d658d0f7d5fec16a9b16b5de5" translate="yes" xml:space="preserve">
          <source>Therefore, &lt;code&gt;stateAlwaysHidden&lt;/code&gt; is VERY poorly named indeed. It should perhaps be called &lt;code&gt;ignoreInitialFocus&lt;/code&gt; instead.</source>
          <target state="translated">Por lo tanto, &lt;code&gt;stateAlwaysHidden&lt;/code&gt; est&amp;aacute; MUY mal nombrado. Quiz&amp;aacute;s deber&amp;iacute;a llamarse &lt;code&gt;ignoreInitialFocus&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="0896178be49463c6e1f9b592cd05377b0b6c1961" translate="yes" xml:space="preserve">
          <source>These are alternatives for the above code &lt;code&gt;if (view == null)   view = new View(activity);&lt;/code&gt;  These don't refer explicitly to your activity.</source>
          <target state="translated">Estas son alternativas para el c&amp;oacute;digo anterior &lt;code&gt;if (view == null) view = new View(activity);&lt;/code&gt; Estos no se refieren expl&amp;iacute;citamente a su actividad.</target>
        </trans-unit>
        <trans-unit id="fe0f460a2f2c1670aabed00b6a29f486b40f0ae5" translate="yes" xml:space="preserve">
          <source>This approach works reliably on all devices I have tested on - from a 4 year old HTC phone running android 2.2 up to a nexus 7 running 4.2.2.  The only disadvantage with this approach is you need to be careful with handling the back button.  As my app essentially only has one screen (its a calculator) I can override onBackPressed() and return to the devices home screen.</source>
          <target state="translated">Este enfoque funciona de forma fiable en todos los dispositivos que he probado,desde un teléfono HTC de 4 años con android 2.2 hasta un nexo 7 con 4.2.2.La única desventaja de este enfoque es que hay que tener cuidado con el manejo del botón de retorno.Como mi aplicación sólo tiene una pantalla (es una calculadora)puedo anular onBackPressed()y volver a la pantalla de inicio del dispositivo.</target>
        </trans-unit>
        <trans-unit id="280f3a02c9c3a4c2cb66c3c94c0645ef1db583e4" translate="yes" xml:space="preserve">
          <source>This can be used to suppress the soft-keyboard until the user actually touches the editText View.</source>
          <target state="translated">Esto puede ser usado para suprimir el teclado suave hasta que el usuario realmente toque la vista de edición de texto.</target>
        </trans-unit>
        <trans-unit id="0e830705ef1cbb279a5f9042d1150c2b9016307c" translate="yes" xml:space="preserve">
          <source>This causes the current activity to have its state saved into a Bundle, and then the activity is started, passing through an boolean which indicates if the keyboard should be shown or hidden.</source>
          <target state="translated">Esto hace que la actividad actual tenga su estado guardado en un Bundle,y luego se inicia la actividad,pasando por un booleano que indica si el teclado debe mostrarse u ocultarse.</target>
        </trans-unit>
        <trans-unit id="9d0f044148bec9f373705aec93858a2146abfbf8" translate="yes" xml:space="preserve">
          <source>This is what makes hiding the keyboard so challenging. Dear Google: When I'm looking up the recipe for a cake, there is no &lt;code&gt;RecipeProvider&lt;/code&gt; on Earth that would refuse to provide me with the recipe unless I first answer WHO the cake will be eaten by AND where it will be eaten!!</source>
          <target state="translated">Esto es lo que hace que ocultar el teclado sea tan desafiante. Estimado Google: &amp;iexcl;Cuando estoy buscando la receta de un pastel, no hay un &lt;code&gt;RecipeProvider&lt;/code&gt; en la Tierra que se niegue a proporcionarme la receta a menos que responda primero a QUI&amp;Eacute;N se comer&amp;aacute; el pastel Y d&amp;oacute;nde se comer&amp;aacute;!</target>
        </trans-unit>
        <trans-unit id="a36a75b28b85949d6796ec6f80ad8f7a200d0123" translate="yes" xml:space="preserve">
          <source>This last solution may show the keyboard for a split second and messes with the selection handles.</source>
          <target state="translated">Esta última solución puede mostrar el teclado durante una fracción de segundo y se confunde con las manijas de selección.</target>
        </trans-unit>
        <trans-unit id="636fef779f8a03c113fafc429ad64fccce6caa04" translate="yes" xml:space="preserve">
          <source>This sad story ends with the ugly truth: to hide the Android keyboard, you will be required to provide 2 forms of identification: a &lt;code&gt;Context&lt;/code&gt; and either a &lt;code&gt;View&lt;/code&gt; or a &lt;code&gt;Window&lt;/code&gt;.</source>
          <target state="translated">Esta triste historia termina con la fea verdad: para ocultar el teclado de Android, se te pedir&amp;aacute; que proporciones 2 formas de identificaci&amp;oacute;n: un &lt;code&gt;Context&lt;/code&gt; y una &lt;code&gt;View&lt;/code&gt; o una &lt;code&gt;Window&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55ef13a1e73329e726feb2ef079106cad9f434f9" translate="yes" xml:space="preserve">
          <source>This should work:</source>
          <target state="translated">Esto debería funcionar:</target>
        </trans-unit>
        <trans-unit id="a2288cc6581d7b7a0946eb3276592e3a569b8926" translate="yes" xml:space="preserve">
          <source>This will force the keyboard to be hidden in all situations. In some cases you will want to pass in &lt;code&gt;InputMethodManager.HIDE_IMPLICIT_ONLY&lt;/code&gt; as the second parameter to ensure you only hide the keyboard when the user didn't explicitly force it to appear (by holding down menu).</source>
          <target state="translated">Esto obligar&amp;aacute; al teclado a ocultarse en todas las situaciones. En algunos casos, querr&amp;aacute; pasar &lt;code&gt;InputMethodManager.HIDE_IMPLICIT_ONLY&lt;/code&gt; como segundo par&amp;aacute;metro para asegurarse de que solo oculta el teclado cuando el usuario no lo forz&amp;oacute; expl&amp;iacute;citamente a aparecer (manteniendo presionado el men&amp;uacute;).</target>
        </trans-unit>
        <trans-unit id="f557108cc7f56192eb7710110bbb5c740e2fc15b" translate="yes" xml:space="preserve">
          <source>This won't work because you'll be passing a reference to the &lt;code&gt;Fragment&lt;/code&gt;'s host &lt;code&gt;Activity&lt;/code&gt;, which will have no focused control while the &lt;code&gt;Fragment&lt;/code&gt; is shown! Wow! So, for hiding the keyboard from fragments, I resort to the lower-level, more common, and uglier:</source>
          <target state="translated">&amp;iexcl;Esto no funcionar&amp;aacute; porque pasar&amp;aacute; una referencia a la &lt;code&gt;Activity&lt;/code&gt; host del &lt;code&gt;Fragment&lt;/code&gt; o , que no tendr&amp;aacute; un control enfocado mientras se muestra el &lt;code&gt;Fragment&lt;/code&gt; o ! &amp;iexcl;Guauu! Entonces, para ocultar el teclado de los fragmentos, recurro al nivel inferior, m&amp;aacute;s com&amp;uacute;n y m&amp;aacute;s feo:</target>
        </trans-unit>
        <trans-unit id="d0373d2754a03ef5917cc5ea59e5197aa9376432" translate="yes" xml:space="preserve">
          <source>This worked for me for all the bizarre keyboard behavior</source>
          <target state="translated">Esto funcionó para mí por todo el extraño comportamiento del teclado</target>
        </trans-unit>
        <trans-unit id="2f490f9ccfed247cc722cc9c067ba82ece34cba6" translate="yes" xml:space="preserve">
          <source>To help clarify this madness, I'd like to begin by apologizing on behalf of all Android users for Google's downright ridiculous treatment of the soft keyboard. The reason there are so many answers, each different, for the same simple question because this API, like many others in Android, is horribly designed. I can think of no polite way to state it.</source>
          <target state="translated">Para ayudar a aclarar esta locura,me gustaría empezar pidiendo disculpas en nombre de todos los usuarios de Android por el ridículo tratamiento del teclado blando de Google.La razón por la que hay tantas respuestas,cada una diferente,para la misma simple pregunta es porque esta API,como muchas otras en Android,está horriblemente diseñada.No se me ocurre ninguna forma educada de decirlo.</target>
        </trans-unit>
        <trans-unit id="e21644360428c7d8b77323a835575e5d707c90b0" translate="yes" xml:space="preserve">
          <source>Unfortunately item 2 and 3 on the list only work reliability when an activity is being started.  Once the activity has become visible you cannot permanently hide or show the keyboard.  The trick is to actually restart your activity when the user presses the keyboard toggle button.  In my app when the user presses on the toggle keyboard button, the following code runs:</source>
          <target state="translated">Desafortunadamente,los puntos 2 y 3 de la lista sólo funcionan con fiabilidad cuando se inicia una actividad.Una vez que la actividad se ha hecho visible no se puede ocultar o mostrar el teclado de forma permanente.El truco está en reiniciar realmente la actividad cuando el usuario presiona el botón de conmutación del teclado.En mi aplicación,cuando el usuario pulsa el botón de alternancia de teclado,se ejecuta el siguiente código:</target>
        </trans-unit>
        <trans-unit id="6073347556b92710a1cae7bfd6f95334a2d56147" translate="yes" xml:space="preserve">
          <source>Using the InputMethodManager did not close the keyboard. I had to clearFocus and set the focusable of the search view to false:</source>
          <target state="translated">Al usar el InputMethodManager no se cerró el teclado.Tuve que borrar el foco y poner el foco de la vista de búsqueda en falso:</target>
        </trans-unit>
        <trans-unit id="4092ca80baa6fbcc673ca3756bd415cad19ccd43" translate="yes" xml:space="preserve">
          <source>What I end up with is forcing the show and hide, and it works perfectly:</source>
          <target state="translated">Lo que acabo haciendo es forzar el show y esconderme,y funciona perfectamente:</target>
        </trans-unit>
        <trans-unit id="c25cb3bafc39a0d6203554a47821145d63d93932" translate="yes" xml:space="preserve">
          <source>When in the keyboard enters full screen, onGlobalLayout isn't called. To avoid that, use &lt;a href=&quot;https://developer.android.com/reference/android/widget/TextView.html#setImeOptions%28int%29&quot;&gt;TextView#setImeOptions(int)&lt;/a&gt; or in the TextView XML declaration:</source>
          <target state="translated">Cuando en el teclado entra en pantalla completa, onGlobalLayout no se llama. Para evitar eso, use &lt;a href=&quot;https://developer.android.com/reference/android/widget/TextView.html#setImeOptions%28int%29&quot;&gt;TextView # setImeOptions (int)&lt;/a&gt; o en la declaraci&amp;oacute;n XML de TextView:</target>
        </trans-unit>
        <trans-unit id="c4d468602dd57b74a87ab550adbbec95d9a538f3" translate="yes" xml:space="preserve">
          <source>When touching outside the keyboard.</source>
          <target state="translated">Al tocar fuera del teclado.</target>
        </trans-unit>
        <trans-unit id="5b0cceb4fda9665bce6fc6593579afa5c06f30e7" translate="yes" xml:space="preserve">
          <source>You can force Android to hide the virtual keyboard using the &lt;a href=&quot;http://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html&quot;&gt;InputMethodManager&lt;/a&gt;, calling &lt;a href=&quot;http://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html#hideSoftInputFromWindow%28android.os.IBinder,%20int%29&quot;&gt;&lt;code&gt;hideSoftInputFromWindow&lt;/code&gt;&lt;/a&gt;, passing in the token of the window containing your focused view.</source>
          <target state="translated">Puede forzar a Android a ocultar el teclado virtual utilizando &lt;a href=&quot;http://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html&quot;&gt;InputMethodManager&lt;/a&gt; , llamando a &lt;a href=&quot;http://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html#hideSoftInputFromWindow%28android.os.IBinder,%20int%29&quot;&gt; &lt;code&gt;hideSoftInputFromWindow&lt;/code&gt; &lt;/a&gt; , pasando el token de la ventana que contiene su vista enfocada.</target>
        </trans-unit>
        <trans-unit id="fa6819babfed2f44f295152d44fafd6c02c19e5e" translate="yes" xml:space="preserve">
          <source>You can see a working implementation of this in my app &lt;a href=&quot;https://play.google.com/store/apps/details?id=au.com.lukesleeman.rpn&amp;amp;hl=en&quot;&gt;clean RPN&lt;/a&gt;.</source>
          <target state="translated">Puedes ver una implementaci&amp;oacute;n funcional de esto en mi aplicaci&amp;oacute;n &lt;a href=&quot;https://play.google.com/store/apps/details?id=au.com.lukesleeman.rpn&amp;amp;hl=en&quot;&gt;RPN limpia&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bcfbef6dc74e1d228301f445a3556e06bb75b46f" translate="yes" xml:space="preserve">
          <source>after that call on onTouchListener:</source>
          <target state="translated">después de esa llamada a OnTouchListener:</target>
        </trans-unit>
        <trans-unit id="3d3093f7221ddef2ce2927ed0d133eaadaa4a137" translate="yes" xml:space="preserve">
          <source>and to get the context fetch it from constructor:)</source>
          <target state="translated">y para obtener el contexto,buscarlo en el constructor:)</target>
        </trans-unit>
        <trans-unit id="3ed6e8613259f1c2f5669c4b07261dac8d098424" translate="yes" xml:space="preserve">
          <source>from so searching, here I found an answer that works for me</source>
          <target state="translated">de tanto buscar,aquí encontré una respuesta que funciona para mí</target>
        </trans-unit>
        <trans-unit id="ae8d167cf77b0fb4fa5ed96fd284993f4fe31289" translate="yes" xml:space="preserve">
          <source>use this</source>
          <target state="translated">usa esto</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
