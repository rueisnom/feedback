<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/115983">
    <body>
      <group id="115983">
        <trans-unit id="a979ef10cc6f6a36df6b8a323307ee3bb2e2db9c" translate="yes" xml:space="preserve">
          <source>+</source>
          <target state="translated">+</target>
        </trans-unit>
        <trans-unit id="54dfe2f7832271935a1233868d84cc1176f6f8c3" translate="yes" xml:space="preserve">
          <source>.gitkeep approach</source>
          <target state="translated">gitkeep-подход</target>
        </trans-unit>
        <trans-unit id="965e73fdd6e46ed980c8bdf03a589adab642edf9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/a/932982/456814&quot;&gt;The solution of Jamie Flournoy&lt;/a&gt; works great. Here is a bit enhanced version to keep the &lt;code&gt;.htaccess&lt;/code&gt; :</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/932982/456814&quot;&gt;Решение Джейми Флурной&lt;/a&gt; прекрасно работает. Вот немного улучшенная версия для хранения &lt;code&gt;.htaccess&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4e021e8096db3c4f40241955870ff1f94ba900d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;EDIT:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a55530aeccb75e9eeb062568b1cd54555a6a784b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit for a better solution&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Изменить для лучшего решения&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4481ac83b0f3173c1c526133aba6d8184bf1add" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;However&lt;/strong&gt;, I later thought It would be better to make this into a small utility command, so I recreated it using Python and published it to the PyPI &lt;a href=&quot;https://pypi.org/project/gitkeep2/&quot;&gt;here&lt;/a&gt;. You can install it by simply running:</source>
          <target state="translated">&lt;strong&gt;Однако&lt;/strong&gt; позже я подумал, что было бы лучше превратить это в небольшую служебную команду, поэтому я воссоздал ее с помощью Python и опубликовал здесь в PyPI. Вы можете установить его, просто запустив:</target>
        </trans-unit>
        <trans-unit id="202469ff83d849ba4804312d74f79bb4ea71ff92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Original post below:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Оригинальный пост ниже:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2e622355d0c04a203c2ae230ad42e052083e6c1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING: This tweak is not truly working as it turns out.&lt;/strong&gt; Sorry for the inconvenience.</source>
          <target state="translated">&lt;strong&gt;ВНИМАНИЕ: этот твик не работает, как оказалось.&lt;/strong&gt; Приносим извинения за неудобства.</target>
        </trans-unit>
        <trans-unit id="101a20c7c6631be2b36cbef52a2cb2613a6724f4" translate="yes" xml:space="preserve">
          <source>A GIT repository with exactly one commit:</source>
          <target state="translated">GIT-репозиторий с ровно одним коммитом:</target>
        </trans-unit>
        <trans-unit id="5fa8d5d03c6966d644feecd12a13d42641e037f4" translate="yes" xml:space="preserve">
          <source>A file clearly related to Git</source>
          <target state="translated">Файл,явно связанный с Git</target>
        </trans-unit>
        <trans-unit id="1613e56a1fc0205ddfa3ab0bfb1dab82dacc86c1" translate="yes" xml:space="preserve">
          <source>A file unrelated to the code (because of the leading dot and the name)</source>
          <target state="translated">Файл,не связанный с кодом (из-за ведущей точки и имени).</target>
        </trans-unit>
        <trans-unit id="f6920857980f2d91e8c0805986b7d6808c9af1ce" translate="yes" xml:space="preserve">
          <source>Add a empty .gitkeep file in there</source>
          <target state="translated">Добавьте туда пустой файл .gitkeep.</target>
        </trans-unit>
        <trans-unit id="41f9d35d45a5809f08ddb210d46278bb6f19b01c" translate="yes" xml:space="preserve">
          <source>Add a submodule to any repository (&lt;code&gt;git submodule add path_to_repo&lt;/code&gt;)</source>
          <target state="translated">Добавить подмодуль в любой репозиторий ( &lt;code&gt;git submodule add path_to_repo&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7f257395a529eabc4dadeed1ba30bccd729c2da6" translate="yes" xml:space="preserve">
          <source>Add it to the index using a plumbing command and the empty tree &lt;a href=&quot;http://en.wikipedia.org/wiki/SHA-1&quot;&gt;SHA-1&lt;/a&gt;:</source>
          <target state="translated">Добавьте его в индекс, используя команду сантехника и пустое дерево &lt;a href=&quot;http://en.wikipedia.org/wiki/SHA-1&quot;&gt;SHA-1&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="94916474ca86f077fbf26f834c5faca8838d0984" translate="yes" xml:space="preserve">
          <source>Adding one more option to the fray.</source>
          <target state="translated">Добавление еще одной опции.</target>
        </trans-unit>
        <trans-unit id="9d9855d155abfb00319d620ad3008e951f075bcb" translate="yes" xml:space="preserve">
          <source>Adoption</source>
          <target state="translated">Adoption</target>
        </trans-unit>
        <trans-unit id="99970754935cc627f1a4d7e256aaac3733fca7f9" translate="yes" xml:space="preserve">
          <source>After the commit you have a broken symbolic link in your index and git creates the directory. The broken link has some advantages, since it is no regular file and points to no regular file. So it even fits to the part of the question &quot;(that contains no files)&quot;, not by the intention but by the meaning, I guess:</source>
          <target state="translated">После фиксации у вас в индексе есть разбитая символическая ссылка,и git создаёт каталог.Разбитая символическая ссылка имеет некоторые преимущества,так как она не является обычным файлом и указывает на обычный файл.Так что она даже подходит к части вопроса &quot;(которая не содержит файлов)&quot;,не по замыслу,а по смыслу,наверное:</target>
        </trans-unit>
        <trans-unit id="b7d6d9bb1e8d27ac23a196714647227815b05a51" translate="yes" xml:space="preserve">
          <source>Alternatively, as noted in another &lt;a href=&quot;https://stackoverflow.com/a/5305908/832230&quot;&gt;answer&lt;/a&gt;, the directory can contain a descriptive &lt;a href=&quot;https://stackoverflow.com/questions/8655937/github-readme-and-readme-md&quot;&gt;&lt;code&gt;README&lt;/code&gt; or &lt;code&gt;README.md&lt;/code&gt; file&lt;/a&gt; instead.</source>
          <target state="translated">В качестве альтернативы, как отмечено в другом &lt;a href=&quot;https://stackoverflow.com/a/5305908/832230&quot;&gt;ответе&lt;/a&gt; , каталог может содержать описательный &lt;a href=&quot;https://stackoverflow.com/questions/8655937/github-readme-and-readme-md&quot;&gt;файл &lt;code&gt;README&lt;/code&gt; или &lt;code&gt;README.md&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="205e51c8e1ece1ffd2fce77ba495ccd116607ccf" translate="yes" xml:space="preserve">
          <source>Alternatively, you could just exclude &lt;em&gt;every&lt;/em&gt; README file from being ignored:</source>
          <target state="translated">В качестве альтернативы вы можете просто исключить игнорирование &lt;em&gt;каждого&lt;/em&gt; файла README:</target>
        </trans-unit>
        <trans-unit id="4117f5e31a8f100fe678077742923976451bc72f" translate="yes" xml:space="preserve">
          <source>Although it may seem not such a big difference:</source>
          <target state="translated">Хотя это может показаться не такой уж большой разницей:</target>
        </trans-unit>
        <trans-unit id="1744eb66f2436ca0f0c9f01a0155762ce350072a" translate="yes" xml:space="preserve">
          <source>An easy way to do this is by adding a &lt;code&gt;.gitkeep&lt;/code&gt; file to the directory you wish to (currently) keep empty.</source>
          <target state="translated">Простой способ сделать это - добавить файл &lt;code&gt;.gitkeep&lt;/code&gt; в каталог, который вы хотите (в настоящее время) оставить пустым.</target>
        </trans-unit>
        <trans-unit id="219f59595254577d0c91a349dfa6d30d4e67e595" translate="yes" xml:space="preserve">
          <source>An empty directory &lt;em&gt;cannot be part of a tree under the Git versioning system&lt;/em&gt;.</source>
          <target state="translated">Пустой каталог &lt;em&gt;не может быть частью дерева в системе управления версиями Git&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="362f60ebf0e843cd145df3739ab29dfe432e6594" translate="yes" xml:space="preserve">
          <source>Andy Lester is right, but if your directory just needs to be empty, and not &lt;em&gt;empty&lt;/em&gt; empty, you can put an empty &lt;code&gt;.gitignore&lt;/code&gt; file in there as a workaround.</source>
          <target state="translated">Энди Лестер прав, но если ваш каталог просто должен быть пустым, а не пустым, вы можете добавить туда пустой файл &lt;code&gt;.gitignore&lt;/code&gt; в качестве обходного пути.</target>
        </trans-unit>
        <trans-unit id="673af2d6ba313c8fac9157b8704d15350b4c0a6d" translate="yes" xml:space="preserve">
          <source>Another idea would be to add a &lt;code&gt;README&lt;/code&gt; file explaining what the directory will be used for.</source>
          <target state="translated">Другая идея заключается в добавлении файла &lt;code&gt;README&lt;/code&gt; , объясняющего, для чего будет использоваться каталог.</target>
        </trans-unit>
        <trans-unit id="1ec908de3e9396e1c85db9b6afb773449d35d181" translate="yes" xml:space="preserve">
          <source>Another option (in response to a comment by @GreenAsJade), if you want to track an empty folder that &lt;em&gt;MAY&lt;/em&gt; contain tracked files in the future, but will be empty for now, you can ommit the &lt;code&gt;*&lt;/code&gt; from the &lt;code&gt;.gitignore&lt;/code&gt; file, and check &lt;em&gt;that&lt;/em&gt; in.  Basically, all the file is saying is &quot;do not ignore &lt;em&gt;me&lt;/em&gt;&quot;, but otherwise, the directory is empty and tracked.</source>
          <target state="translated">Другой вариант (в ответ на комментарий @GreenAsJade), если вы хотите отслеживать пустую папку, которая &lt;em&gt;МОЖЕТ&lt;/em&gt; содержать отслеживаемые файлы в будущем, но пока будет пустой, вы можете опустить &lt;code&gt;*&lt;/code&gt; из файла &lt;code&gt;.gitignore&lt;/code&gt; и проверить &lt;em&gt;что&lt;/em&gt; в. По сути, все, что файл говорит &quot;не игнорировать &lt;em&gt;меня&lt;/em&gt; &quot;, но в противном случае каталог пуст и отслеживается.</target>
        </trans-unit>
        <trans-unit id="e3cd64b3958a23e5561c2201ea3cd924a9116ba2" translate="yes" xml:space="preserve">
          <source>Another way to make a directory stay (almost) empty (in the repository) is to create a &lt;code&gt;.gitignore&lt;/code&gt; file inside that directory that contains these four lines:</source>
          <target state="translated">Другой способ сделать каталог оставшимся (почти) пустым (в хранилище) - создать файл &lt;code&gt;.gitignore&lt;/code&gt; внутри этого каталога, который содержит следующие четыре строки:</target>
        </trans-unit>
        <trans-unit id="8ada30d97d2322a43013b97b2132220ba3c00e8a" translate="yes" xml:space="preserve">
          <source>Appendix: Recreating this commit</source>
          <target state="translated">Приложение:Восстановление данного обязательства</target>
        </trans-unit>
        <trans-unit id="dc15c49fe1e32d89a01fe92846b02027eac99394" translate="yes" xml:space="preserve">
          <source>As an aside, this is an implementation issue, not a fundamental Git storage design problem. As has been mentioned many times on the Git mailing list, the reason that this has not been implemented is that no one has cared enough to submit a patch for it, not that it couldn&amp;rsquo;t or shouldn&amp;rsquo;t be done.</source>
          <target state="translated">Кроме того, это проблема реализации, а не фундаментальная проблема проектирования хранилища Git. Как уже много раз упоминалось в списке рассылки Git, причина того, что это не было реализовано, заключается в том, что никто не позаботился о том, чтобы представить для него патч, а не то, что он не мог или не должен быть сделан.</target>
        </trans-unit>
        <trans-unit id="3239a01b066eacc1ab9371152bfd4916f5f2b8e9" translate="yes" xml:space="preserve">
          <source>As described in other answers, Git is unable to represent empty directories in its staging area. (See the &lt;a href=&quot;https://git.wiki.kernel.org/index.php/GitFaq#Can_I_add_empty_directories.3F&quot;&gt;Git FAQ&lt;/a&gt;.) However, if, for your purposes, a directory is empty enough if it contains a &lt;code&gt;.gitignore&lt;/code&gt; file only, then you can create &lt;code&gt;.gitignore&lt;/code&gt; files in empty directories only via:</source>
          <target state="translated">Как описано в других ответах, Git не может представлять пустые каталоги в своей промежуточной области. (См. &lt;a href=&quot;https://git.wiki.kernel.org/index.php/GitFaq#Can_I_add_empty_directories.3F&quot;&gt;Git FAQ&lt;/a&gt; .) Однако, если для ваших целей каталог достаточно пуст, если он содержит &lt;code&gt;.gitignore&lt;/code&gt; файл .gitignore , вы можете создавать файлы &lt;code&gt;.gitignore&lt;/code&gt; в пустых каталогах только через:</target>
        </trans-unit>
        <trans-unit id="b3aa328f227341220383e651bc6b4c7fbf977534" translate="yes" xml:space="preserve">
          <source>As mentioned it's not possible to add empty directories, but here is a one liner that adds empty .gitignore files to all directories.</source>
          <target state="translated">Как уже упоминалось,добавить пустые каталоги невозможно,но вот один лайнер,который добавляет пустые .gitignore файлы во все каталоги.</target>
        </trans-unit>
        <trans-unit id="8f582e5d97d10444178705b3520e63053106d73b" translate="yes" xml:space="preserve">
          <source>Assuming you would like to add a directory to &lt;code&gt;git&lt;/code&gt; that, for all purposes related to &lt;code&gt;git&lt;/code&gt;, should remain empty and never have it's contents tracked, a &lt;code&gt;.gitignore&lt;/code&gt; as suggested numerous times here, will do the trick.</source>
          <target state="translated">Предполагая, что вы хотите добавить в &lt;code&gt;git&lt;/code&gt; каталог, который для всех целей, связанных с &lt;code&gt;git&lt;/code&gt; , должен оставаться пустым и никогда не отслеживать его содержимое, &lt;code&gt;.gitignore&lt;/code&gt; , как предлагалось здесь много раз, сработает.</target>
        </trans-unit>
        <trans-unit id="23613439d97605dcd248fd94d6a238984f2dc5ca" translate="yes" xml:space="preserve">
          <source>But I strongly recommend to use this solution only in special circumstances, a good written &lt;code&gt;README&lt;/code&gt; in an empty directory is usually a better solution. (And I do not know if this works with a windows filesystem...)</source>
          <target state="translated">Но я настоятельно рекомендую использовать это решение только в особых обстоятельствах, лучше написать хороший &lt;code&gt;README&lt;/code&gt; в пустой директории. (И я не знаю, работает ли это с файловой системой Windows ...)</target>
        </trans-unit>
        <trans-unit id="204ee4ab94277da69a779db2a898d64b3886bdd5" translate="yes" xml:space="preserve">
          <source>Create an empty file called &lt;code&gt;.gitkeep&lt;/code&gt; in the directory, and add that.</source>
          <target state="translated">Создайте в каталоге пустой файл с именем &lt;code&gt;.gitkeep&lt;/code&gt; и добавьте его.</target>
        </trans-unit>
        <trans-unit id="53f860381ebc4d59d1571298edcbb7f65b9e7033" translate="yes" xml:space="preserve">
          <source>Create your empty directory:</source>
          <target state="translated">Создайте свой пустой каталог:</target>
        </trans-unit>
        <trans-unit id="63c79f01306ce2c1fdcd4302cc3efd54a5fbf20b" translate="yes" xml:space="preserve">
          <source>Creating a &lt;code&gt;.gitignore&lt;/code&gt; file with a sort of &quot;reverse logic&quot; (i.e. to include all the files) which, at the end, serves the same purpose of approach #1.</source>
          <target state="translated">Создание файла &lt;code&gt;.gitignore&lt;/code&gt; с некой &amp;laquo;обратной логикой&amp;raquo; (т. Е. Для включения всех файлов), которая, в конце концов, служит той же цели, что и подход № 1.</target>
        </trans-unit>
        <trans-unit id="a40e01a66ccfdfc021d7951d7b2e682524016ace" translate="yes" xml:space="preserve">
          <source>Creating reproducible GIT commits is surprisingly hard&amp;hellip;</source>
          <target state="translated">Создание воспроизводимых коммитов GIT на удивление сложно ...</target>
        </trans-unit>
        <trans-unit id="dd6a02a553da4cb247f914011dd67c37487ec082" translate="yes" xml:space="preserve">
          <source>Ctrl</source>
          <target state="translated">Ctrl</target>
        </trans-unit>
        <trans-unit id="f47719f4b93d12245afcb6b378a55e51cb7baab4" translate="yes" xml:space="preserve">
          <source>Currently the design of the git index
  (staging area) only permits files to
  be listed, and nobody competent enough
  to make the change to allow empty
  directories has cared enough about
  this situation to remedy it.</source>
          <target state="translated">В настоящее время дизайн git-индекса (Staging Area)позволяет перечислять только файлы,и никто,достаточно компетентный для внесения изменений,не позаботился о том,чтобы пустые каталоги могли исправить эту ситуацию.</target>
        </trans-unit>
        <trans-unit id="50c9e8d5fc98727b4bbc93cf5d64a68db647f04f" translate="yes" xml:space="preserve">
          <source>D</source>
          <target state="translated">D</target>
        </trans-unit>
        <trans-unit id="82e82713359cdaaafb72b46a6e1882670542c2ef" translate="yes" xml:space="preserve">
          <source>Delete &lt;code&gt;.submodules&lt;/code&gt; file and commit the change.</source>
          <target state="translated">Удалите файл &lt;code&gt;.submodules&lt;/code&gt; и передайте изменения.</target>
        </trans-unit>
        <trans-unit id="30b45d9391fc566055c2446c75bdd98979449a2e" translate="yes" xml:space="preserve">
          <source>Directories are added automatically
  when adding files inside them. That
  is, directories never have to be added
  to the repository, and are not tracked
  on their own.</source>
          <target state="translated">Директории добавляются автоматически при добавлении файлов внутри них.То есть,каталоги никогда не нужно добавлять в репозиторий,и они не отслеживаются сами по себе.</target>
        </trans-unit>
        <trans-unit id="2b9eceb7a86a9f577ef80586c5c1d7fde9ff493d" translate="yes" xml:space="preserve">
          <source>Enter</source>
          <target state="translated">Enter</target>
        </trans-unit>
        <trans-unit id="24a34e8586a6fe7adbf4df3b5903f1f20ba96a9d" translate="yes" xml:space="preserve">
          <source>Enter: &lt;a href=&quot;https://gitlab.com/empty-repo/empty.git&quot;&gt;https://gitlab.com/empty-repo/empty.git&lt;/a&gt;</source>
          <target state="translated">Введите: &lt;a href=&quot;https://gitlab.com/empty-repo/empty.git&quot;&gt;https://gitlab.com/empty-repo/empty.git&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a4812472ded0e1206418736ef926fbf3549ac4b5" translate="yes" xml:space="preserve">
          <source>Find all the empty folders in the directory</source>
          <target state="translated">Найти все пустые папки в каталоге</target>
        </trans-unit>
        <trans-unit id="6fc62c55ea835d429e6f2c2649c12b929bdef0d6" translate="yes" xml:space="preserve">
          <source>First create the needed directory:</source>
          <target state="translated">Сначала создайте нужный каталог:</target>
        </trans-unit>
        <trans-unit id="4d831780e1be8efe8f863fef86feaa1ec0c4bb58" translate="yes" xml:space="preserve">
          <source>First things first:</source>
          <target state="translated">Прежде всего:</target>
        </trans-unit>
        <trans-unit id="388d5fca9cb393c73059a212159a7d23344c109b" translate="yes" xml:space="preserve">
          <source>For instance, you should use READMEs as, well, READMEs with useful information, not as an excuse to keep the folder.</source>
          <target state="translated">Например,вы должны использовать также README,README с полезной информацией,а не как предлог,чтобы сохранить папку.</target>
        </trans-unit>
        <trans-unit id="afd17bd7401c7f01a2081091f425ec0aa178eef9" translate="yes" xml:space="preserve">
          <source>Git does not track empty directories. See the &lt;a href=&quot;https://git.wiki.kernel.org/index.php/GitFaq#Can_I_add_empty_directories.3F&quot;&gt;Git FAQ&lt;/a&gt; for more explanation. The suggested workaround is to put a &lt;code&gt;.gitignore&lt;/code&gt; file in the empty directory. I do not like that solution, because the &lt;code&gt;.gitignore&lt;/code&gt; is &quot;hidden&quot; by Unix convention. Also there is no explanation why the directories are empty.</source>
          <target state="translated">Git не отслеживает пустые каталоги. Смотрите &lt;a href=&quot;https://git.wiki.kernel.org/index.php/GitFaq#Can_I_add_empty_directories.3F&quot;&gt;Git FAQ&lt;/a&gt; для более подробного объяснения. Предложенный обходной путь - поместить файл &lt;code&gt;.gitignore&lt;/code&gt; в пустой каталог. Мне не нравится это решение, потому что &lt;code&gt;.gitignore&lt;/code&gt; &amp;laquo;скрыт&amp;raquo; соглашением Unix. Также нет объяснения, почему каталоги пусты.</target>
        </trans-unit>
        <trans-unit id="abf7a55b985a75376342b4667163ebbc63f5923d" translate="yes" xml:space="preserve">
          <source>Git will store the latest commit hash when creating the submodule reference, so you don't have to worry about me (or GitLab) using this to inject malicious files. Unfortunately I have not found any way to force which commit ID is used during checkout, so you'll have to manually check that the reference commit ID is &lt;code&gt;e84d7b81f0033399e325b8037ed2b801a5c994e0&lt;/code&gt; using &lt;code&gt;git submodule status&lt;/code&gt; after adding the repo.</source>
          <target state="translated">Git будет хранить последний хеш коммита при создании ссылки на субмодуль, поэтому вам не нужно беспокоиться обо мне (или GitLab), используя это для внедрения вредоносных файлов. К сожалению, я не нашел способа принудительно определить, какой идентификатор фиксации используется во время извлечения, поэтому вам придется вручную проверять, является ли ссылочный идентификатор фиксации &lt;code&gt;e84d7b81f0033399e325b8037ed2b801a5c994e0&lt;/code&gt; , используя &lt;code&gt;git submodule status&lt;/code&gt; после добавления репо.</target>
        </trans-unit>
        <trans-unit id="db50b939caa3ae7b84670ab53010e4af37c2f3c3" translate="yes" xml:space="preserve">
          <source>Here is a hack, but it's funny that it works (Git 2.2.1). Similar to what @Teka suggested, but easier to remember:</source>
          <target state="translated">Здесь есть взлом,но забавно,что он работает (Git 2.2.1).Похоже на то,что предложила @Teka,но легче запомнить:</target>
        </trans-unit>
        <trans-unit id="34f32b59bdf6637082ef61a348b5705dfef7d5f3" translate="yes" xml:space="preserve">
          <source>How can I add an empty directory (that contains no files) to a Git repository?</source>
          <target state="translated">Как добавить пустой каталог (который не содержит файлов)в Git-репозиторий?</target>
        </trans-unit>
        <trans-unit id="0e45c641df1a90759be618c6e1cdc42dbd52a6aa" translate="yes" xml:space="preserve">
          <source>How can I add an empty directory to a Git repository</source>
          <target state="translated">Как добавить пустой каталог в репозиторий Git'а?</target>
        </trans-unit>
        <trans-unit id="c56cbbc0db85f25f2cb2b5fed84e8bb724a6cf5c" translate="yes" xml:space="preserve">
          <source>However, if you don't already (and won't) use any Git submodules in your repository, and the &quot;empty&quot; folder will remain empty or if you want Git to know of its existence and ignore its content, you can go with this tweak. Going the usual way with submodules takes more steps that this tweak.</source>
          <target state="translated">Однако,если вы уже не используете (и не будете использовать)никаких субмодулей Git'а в вашем репозитории,а &quot;пустая&quot; папка останется пустой,или если вы хотите,чтобы Git знал о его существовании и игнорировал его содержимое,вы можете воспользоваться этой настройкой.При обычном использовании подмодулей эта подстройка требует дополнительных действий.</target>
        </trans-unit>
        <trans-unit id="d7afc7e7ad9e4271b572fcd3ae18972213f21d5e" translate="yes" xml:space="preserve">
          <source>However, only a handful of our developers work on Mac or Linux. A lot work on Windows and I could not find an equivalent simple one-liner to accomplish the same there. Some were lucky enough to have &lt;a href=&quot;http://cygwin.com/&quot;&gt;Cygwin&lt;/a&gt; installed for other reasons, but prescribing Cygwin just for this seemed overkill.</source>
          <target state="translated">Однако лишь немногие из наших разработчиков работают на Mac или Linux. На Windows много работы, и я не смог найти эквивалентной простой однострочной, чтобы выполнить то же самое там. Некоторым посчастливилось установить &lt;a href=&quot;http://cygwin.com/&quot;&gt;Cygwin&lt;/a&gt; по другим причинам, но назначение Cygwin только для этого казалось излишним.</target>
        </trans-unit>
        <trans-unit id="13f53a1c26556881cd505b26923bea72fd3ab01b" translate="yes" xml:space="preserve">
          <source>I always build a function to check for my desired folder structure and build it for me within the project. This gets around this problem as the empty folders are held in Git by proxy.</source>
          <target state="translated">Я всегда строю функцию,чтобы проверить желаемую структуру папок и собрать ее для меня в рамках проекта.Это позволяет обойти эту проблему,так как пустые папки находятся в Git'е через прокси-сервер.</target>
        </trans-unit>
        <trans-unit id="e45fece1abd6f90f892e145a9e915efb5e5cfe68" translate="yes" xml:space="preserve">
          <source>I found &lt;em&gt;&lt;a href=&quot;http://markmail.org/message/4eqjxx73opiswfis&quot;&gt;Re: Empty directories..&lt;/a&gt;&lt;/em&gt;, but maybe there is another one.</source>
          <target state="translated">Я нашел &lt;em&gt;&lt;a href=&quot;http://markmail.org/message/4eqjxx73opiswfis&quot;&gt;Re: Пустые каталоги ..&lt;/a&gt;&lt;/em&gt; , но, возможно, есть еще один.</target>
        </trans-unit>
        <trans-unit id="cec4839d0fd9dcd4f41fe6fdf0c182675133d9e8" translate="yes" xml:space="preserve">
          <source>I found a solution while playing with Git internals!</source>
          <target state="translated">Я нашел решение во время игры с внутренностями Git!</target>
        </trans-unit>
        <trans-unit id="72bc357e57efa0f7705c578621ba96ce18f6e6cd" translate="yes" xml:space="preserve">
          <source>I have stuck this in a Rakefile for easy access.</source>
          <target state="translated">Я засунул это в &quot;Рейкфайл&quot; для легкого доступа.</target>
        </trans-unit>
        <trans-unit id="75374da781eaeff20a4b10d655362c8fc04030b2" translate="yes" xml:space="preserve">
          <source>I hope you find it useful.</source>
          <target state="translated">Надеюсь,ты найдешь это полезным.</target>
        </trans-unit>
        <trans-unit id="2b5864cd78e42492f8da9b2ebfb0ea04618da5a1" translate="yes" xml:space="preserve">
          <source>I like the answers by @Artur79 and @mjs so I've been using a combination of both and made it a standard for our projects.</source>
          <target state="translated">Мне нравятся ответы @Artur79 и @mjs,поэтому я использовал комбинацию обоих и сделал ее стандартом для наших проектов.</target>
        </trans-unit>
        <trans-unit id="68d2ec6eb602fadce9c838e0feee9b9302798d60" translate="yes" xml:space="preserve">
          <source>I suggest to put a README file in the empty directory explaining why the directory is empty and why it needs to be tracked in Git. With the README file in place, as far as Git is concerned, the directory is no longer empty.</source>
          <target state="translated">Я предлагаю поместить в пустой каталог файл README,объясняющий,почему каталог пуст и почему его нужно отслеживать в Git'е.С файлом README,если говорить о Git'е,каталог больше не пустой.</target>
        </trans-unit>
        <trans-unit id="a72a8fb57623c0f8806b374760683795900bb699" translate="yes" xml:space="preserve">
          <source>I think it's worth noting that this solution does precisely what the question asked for, but is not perhaps what many people looking at this question will have been looking for. This solution guarantees that the directory remains empty. It says &quot;I truly never want files checked in here&quot;. As opposed to &quot;I don't have any files to check in here, yet, but I need the directory here, files may be coming later&quot;.</source>
          <target state="translated">Думаю,стоит отметить,что это решение делает именно то,что было задано,но,возможно,это не то,что искали бы многие люди,смотрящие на этот вопрос.Это решение гарантирует,что каталог останется пустым.Здесь написано:&quot;Я действительно никогда не хочу,чтобы здесь проверялись файлы&quot;.В отличие от &quot;У меня пока нет файлов,которые можно было бы проверить здесь,но мне нужен каталог здесь,файлы могут прийти позже&quot;.</target>
        </trans-unit>
        <trans-unit id="d2300172ae86404895cfc0ad7ea8c4955047cf15" translate="yes" xml:space="preserve">
          <source>I wouldn't encourage to use it though since it may stop working in the future versions of Git. Which may leave your repository corrupted.</source>
          <target state="translated">Однако я бы не стал поощрять его использование,так как он может перестать работать в будущих версиях Git'а.Что может оставить ваш репозиторий повреждённым.</target>
        </trans-unit>
        <trans-unit id="39d2f303154b0d1585f3a6e0af983c9b6b2afbfc" translate="yes" xml:space="preserve">
          <source>I've been facing the issue with empty directories, too. The problem with using placeholder files is that you need to create them, and delete them, if they are not necessary anymore (because later on there were added sub-directories or files. With big source trees managing these placeholder files can be cumbersome and error prone.</source>
          <target state="translated">Я тоже сталкивался с проблемой пустых каталогов.Проблема с использованием файлов-плацдармов заключается в том,что их нужно создавать,и удалять,если они больше не нужны (потому что позже были добавлены подкаталоги или файлы.При использовании больших деревьев исходников управление этими файлами-плацдармами может быть громоздким и предрасположенным к ошибкам.</target>
        </trans-unit>
        <trans-unit id="c7601d68ee81f8e120259486e6b1ae12a9ccbac6" translate="yes" xml:space="preserve">
          <source>I've been using this solution since I found it. It appears to work exactly the same way as creating a submodule, except that no module is defined anywhere.
This leads to errors when issuing &lt;code&gt;git submodule init|update&lt;/code&gt;.
The problem is that &lt;code&gt;git update-index&lt;/code&gt; rewrites the &lt;code&gt;040000 tree&lt;/code&gt; part into &lt;code&gt;160000 commit&lt;/code&gt;.</source>
          <target state="translated">Я использую это решение, так как я нашел его. Похоже, что он работает точно так же, как при создании подмодуля, за исключением того, что нигде не определен ни один модуль. Это приводит к ошибкам при выдаче &lt;code&gt;git submodule init|update&lt;/code&gt; . Проблема в том, что &lt;code&gt;git update-index&lt;/code&gt; переписывает &lt;code&gt;040000 tree&lt;/code&gt; в &lt;code&gt;160000 commit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d351e13a8bcc336ead6a5f1d2d86c50443b1858" translate="yes" xml:space="preserve">
          <source>I've seen the &lt;code&gt;.gitkeep&lt;/code&gt; approach adopted by very important frameworks like &lt;a href=&quot;https://laravel.com/&quot;&gt;Laravel&lt;/a&gt;, &lt;a href=&quot;https://github.com/angular/angular-cli&quot;&gt;Angular-CLI&lt;/a&gt;.</source>
          <target state="translated">Я видел подход &lt;code&gt;.gitkeep&lt;/code&gt; , принятый очень важными средами, такими как &lt;a href=&quot;https://laravel.com/&quot;&gt;Laravel&lt;/a&gt; , &lt;a href=&quot;https://github.com/angular/angular-cli&quot;&gt;Angular-CLI&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c8c0e91122ef0e2ff25a3087273b4f747cbc7488" translate="yes" xml:space="preserve">
          <source>If you really need a directory to
  exist in checkouts you should create a
  file in it. .gitignore works well for
  this purpose; you can leave it empty,
  or fill in the names of files you
  expect to show up in the directory.</source>
          <target state="translated">Если вам действительно нужен каталог,чтобы существовать в кассах,то вы должны создать в нем файл..gitignore для этого хорошо работает,вы можете оставить его пустым или заполнить имена файлов,которые вы ожидаете увидеть в каталоге.</target>
        </trans-unit>
        <trans-unit id="b88b5727e398d6429615a95c050ef00e69f875c5" translate="yes" xml:space="preserve">
          <source>If you take the oft-suggested approach of checking in an almost-empty folder, you have the minor complexity of deleting the contents without also deleting the &quot;.gitignore&quot; file.</source>
          <target state="translated">Если вы воспользуетесь часто предлагаемым подходом проверки в почти пустой папке,то у вас возникнет небольшая сложность удаления содержимого без удаления также и файла &quot;.gitignore&quot;.</target>
        </trans-unit>
        <trans-unit id="166d76c7375556749fc9ca7b90405f0825334d89" translate="yes" xml:space="preserve">
          <source>If you want to add a folder that will house a lot of transient data in multiple semantic directories, then one approach is to add something like this to your root .gitignore...</source>
          <target state="translated">Если вы хотите добавить папку,в которой будет храниться много переходных данных в нескольких семантических каталогах,то один из подходов-добавить что-то подобное в ваш корневой .gitignore...</target>
        </trans-unit>
        <trans-unit id="d5380b667e544ff8a24b9405c725ec14b0995cee" translate="yes" xml:space="preserve">
          <source>In other words, you need to add the .gitignore file to the index before you can tell Git to ignore it (and everything else in the empty directory).</source>
          <target state="translated">Другими словами,вам нужно добавить в индекс файл .gitignore,прежде чем вы сможете сказать Git'у,чтобы он его проигнорировал (и всё остальное в пустом каталоге).</target>
        </trans-unit>
        <trans-unit id="8b7c46451552b6582259deab5c7ceb320e0fb3a4" translate="yes" xml:space="preserve">
          <source>In this example, you might check in a (broken) symbolic link to the directory so that you can access it without the &quot;.generated&quot; prefix (but this is optional).</source>
          <target state="translated">В этом примере,вы можете проверить (сломанную)символическую ссылку на каталог,чтобы получить доступ к нему без префикса &quot;.generated&quot; (но это необязательно).</target>
        </trans-unit>
        <trans-unit id="42e8b8ca648f88055ab3a7f7d1902e80c94e7f59" translate="yes" xml:space="preserve">
          <source>It simply won't be tracked. But there are scenarios in which &quot;versioning&quot; empty directories can be meaningful, for example:</source>
          <target state="translated">Его просто не отследить.Но есть сценарии,в которых &quot;версионирование&quot; пустых каталогов может быть осмысленным,например:</target>
        </trans-unit>
        <trans-unit id="483f2c3fbd5ff5e3af78d6c8c2adbfae854e7d94" translate="yes" xml:space="preserve">
          <source>It will add README files to all directories that are empty so those directories would be then added to the index.</source>
          <target state="translated">Он будет добавлять README файлы во все каталоги,которые пустые,так что эти каталоги будут добавлены в индекс.</target>
        </trans-unit>
        <trans-unit id="a7b8e2ca1cdebbdc89287f27d67ef4cbeb716916" translate="yes" xml:space="preserve">
          <source>It will allow you to create and remove &lt;code&gt;.gitkeep&lt;/code&gt; files recursively, and it will also allow you to add messages to them for your peers to understand why those directories are important. This last bit is bonus. I thought it would be nice if the &lt;code&gt;.gitkeep&lt;/code&gt; files could be self-documenting.</source>
          <target state="translated">Это позволит вам рекурсивно создавать и удалять файлы &lt;code&gt;.gitkeep&lt;/code&gt; , а также добавлять к ним сообщения, чтобы ваши коллеги могли понять, почему эти каталоги важны. Этот последний бит является бонусом. Я подумал, что было бы неплохо, если &lt;code&gt;.gitkeep&lt;/code&gt; файлы .gitkeep могли самодокументироваться.</target>
        </trans-unit>
        <trans-unit id="2d06fc8a679b0a64d72b2527f4f092c409690681" translate="yes" xml:space="preserve">
          <source>Its purpose (&lt;strong&gt;keep&lt;/strong&gt;) is clearly stated and consistent and semantically opposed in its meaning to &lt;strong&gt;ignore&lt;/strong&gt;</source>
          <target state="translated">Его цель ( &lt;strong&gt;сохранить&lt;/strong&gt; ) четко сформулирована, последовательна и семантически противоположна по своему значению &lt;strong&gt;игнорировать&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1fcb5763f6c039d05fea047246e4864f744c352d" translate="yes" xml:space="preserve">
          <source>Just have a look at: &lt;a href=&quot;http://code.google.com/p/markemptydirs&quot;&gt;http://code.google.com/p/markemptydirs&lt;/a&gt;</source>
          <target state="translated">Просто взгляните на: &lt;a href=&quot;http://code.google.com/p/markemptydirs&quot;&gt;http://code.google.com/p/markemptydirs&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb69e9e85d861cc1799a2ab90d75e5b238ce6c12" translate="yes" xml:space="preserve">
          <source>Let's say you need an empty directory named &lt;em&gt;tmp&lt;/em&gt; :</source>
          <target state="translated">Допустим, вам нужен пустой каталог с именем &lt;em&gt;tmp&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="dce834c48c9c506ecf25445f132f1074f7c14cdb" translate="yes" xml:space="preserve">
          <source>Making &lt;a href=&quot;https://stackoverflow.com/users/554807/greenasjade&quot;&gt;@GreenAsJade&lt;/a&gt;'s comment persistent:</source>
          <target state="translated">Сделать комментарий &lt;a href=&quot;https://stackoverflow.com/users/554807/greenasjade&quot;&gt;@GreenAsJade&lt;/a&gt; постоянным:</target>
        </trans-unit>
        <trans-unit id="6d48ddee3eda342f20f214a0de35f6e8991c5e24" translate="yes" xml:space="preserve">
          <source>Many have already answered this question. Just adding a PowerShell version here.</source>
          <target state="translated">Многие уже ответили на этот вопрос.Просто добавляю версию PowerShell здесь.</target>
        </trans-unit>
        <trans-unit id="bc06c8663b818722cd6a2623f281d92d7c20ea09" translate="yes" xml:space="preserve">
          <source>Many users suggest:</source>
          <target state="translated">Многие пользователи предлагают:</target>
        </trans-unit>
        <trans-unit id="718082bfabee7c4536bec0a547e963a64c95428c" translate="yes" xml:space="preserve">
          <source>Maybe adding an empty directory seems like it would be the &lt;em&gt;path of least resistance&lt;/em&gt; because you have scripts that expect that directory to exist (maybe because it is a target for generated binaries).  Another approach would be to &lt;strong&gt;modify your scripts to create the directory as needed&lt;/strong&gt;.</source>
          <target state="translated">Может быть, добавление пустого каталога выглядит как &lt;em&gt;путь наименьшего сопротивления,&lt;/em&gt; потому что у вас есть сценарии, которые ожидают, что этот каталог существует (возможно, потому что это цель для сгенерированных двоичных файлов). Другой подход заключается в &lt;strong&gt;изменении ваших сценариев для создания каталога по мере необходимости&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="72f8680bc8b66e814ab7ca0955e95906b0631a1d" translate="yes" xml:space="preserve">
          <source>Moreover, any file placed under that path won't ever be noticed by Git, as it thinks they belong to some other repository. This is nasty as it can easily be overlooked!</source>
          <target state="translated">Более того,любой файл,помещённый под этот путь,никогда не будет замечен Git'ом,так как он считает,что он принадлежит какому-то другому репозиторию.Это отвратительно,так как его можно легко упустить из виду!</target>
        </trans-unit>
        <trans-unit id="c0df808058afe069050fc4e72ff7757ce6b52a1e" translate="yes" xml:space="preserve">
          <source>Myself, I have a shell script that I use to do this.  Name the script whatever you whish, and either add it somewhere in your include path, or reference it directly:</source>
          <target state="translated">Я сам,у меня есть сценарий оболочки,который я использую для этого.Назовите скрипт так,как вам захочется,и либо добавьте его куда-нибудь в свой включенный путь,либо ссылайтесь на него напрямую:</target>
        </trans-unit>
        <trans-unit id="d68274ce8fcc52dfb6e43b10d00cf3ff4bf0710d" translate="yes" xml:space="preserve">
          <source>Naming it &lt;code&gt;.gitkeep&lt;/code&gt; makes it very clear and straightforward from the filename itself (and also &lt;em&gt;to other developers&lt;/em&gt;, which is good for a shared project and one of the core purposes of a Git repository) that this file is</source>
          <target state="translated">Присвоение имени &lt;code&gt;.gitkeep&lt;/code&gt; очень ясно и понятно из самого имени файла (а также &lt;em&gt;для других разработчиков&lt;/em&gt; , что хорошо для общего проекта и одной из основных целей репозитория Git), что этот файл</target>
        </trans-unit>
        <trans-unit id="052b70f088afbe4cac5cfcc1c4886118408ce134" translate="yes" xml:space="preserve">
          <source>No message, no committed files.</source>
          <target state="translated">Никаких сообщений,никаких зафиксированных файлов.</target>
        </trans-unit>
        <trans-unit id="4641e3dd557f4ca80cc44f9bd23b7d1da32610b6" translate="yes" xml:space="preserve">
          <source>Now the log directory will be included in the tree. It is super-useful when deploying, so you won't have to write a routine to make log directories.</source>
          <target state="translated">Теперь каталог логов будет включен в дерево.Это очень удобно при развертывании,так что вам не придется писать рутину для создания каталогов логов.</target>
        </trans-unit>
        <trans-unit id="1ffbbb66f36c1145f1fd9d30958754c95d2721a4" translate="yes" xml:space="preserve">
          <source>Now, if you want a way to do this at the command line, in one fell swoop, while &lt;em&gt;inside&lt;/em&gt; the directory you want to add, you can execute:</source>
          <target state="translated">Теперь, если вам нужен способ сделать это в командной строке, одним махом, а &lt;em&gt;внутри&lt;/em&gt; каталога, который вы хотите добавить, вы можете выполнить:</target>
        </trans-unit>
        <trans-unit id="38954e49f281e7ece90f63890439a704cc47c830" translate="yes" xml:space="preserve">
          <source>Now, you have a directory that gets created when commit is checked out. An interesting thing though is that if you look at the content of tree object of this file you'll get:</source>
          <target state="translated">Теперь у вас есть каталог,который создается при извлечении коммита.Интересная вещь,однако,заключается в том,что если вы посмотрите на содержимое объекта дерева этого файла,вы получите:</target>
        </trans-unit>
        <trans-unit id="54207b890566fccf2728625f4f05a22750569061" translate="yes" xml:space="preserve">
          <source>Of course this requires that the presence of the file won't cause your application to break.</source>
          <target state="translated">Конечно,это требует того,чтобы присутствие файла не приводило к поломке вашего приложения.</target>
        </trans-unit>
        <trans-unit id="d68f11b73fd1a28163d179879538eafbd4057fce" translate="yes" xml:space="preserve">
          <source>On Linux, this creates an empty file named &lt;code&gt;.keep&lt;/code&gt;. For what it's worth, this name is agnostic to Git, whereas &lt;code&gt;.gitkeep&lt;/code&gt; would be specific to Git. Secondly, as another user has noted, the &lt;code&gt;.git&lt;/code&gt; prefix convention should be reserved for files and directories that Git itself uses.</source>
          <target state="translated">В Linux это создает пустой файл с именем &lt;code&gt;.keep&lt;/code&gt; . Что бы это ни стоило, это имя не относится к Git, тогда как &lt;code&gt;.gitkeep&lt;/code&gt; было бы специфично для Git. Во-вторых, как заметил другой пользователь, соглашение о префиксе &lt;code&gt;.git&lt;/code&gt; должно быть зарезервировано для файлов и каталогов, которые использует сам Git.</target>
        </trans-unit>
        <trans-unit id="b0ad216a803a00613e01c41fc295c139ede68d11" translate="yes" xml:space="preserve">
          <source>Placing a &lt;code&gt;README&lt;/code&gt; file or another file with some content in order to make the directory non-empty, or</source>
          <target state="translated">Размещение файла &lt;code&gt;README&lt;/code&gt; или другого файла с некоторым содержимым, чтобы сделать каталог не пустым, или</target>
        </trans-unit>
        <trans-unit id="93eb92fdf4a152028fa81b55f63d32976354d372" translate="yes" xml:space="preserve">
          <source>Rather than &lt;em&gt;hacking a fake submodule into GIT&lt;/em&gt;, just &lt;strong&gt;add an empty real one&lt;/strong&gt;.</source>
          <target state="translated">Вместо того, чтобы &lt;em&gt;взламывать поддельный подмодуль в GIT&lt;/em&gt; , просто &lt;strong&gt;добавьте пустой реальный&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="bc6820d0a373db625fb96ec7de8c73508075f0c8" translate="yes" xml:space="preserve">
          <source>Reading &lt;a href=&quot;https://stackoverflow.com/a/8944077/277882&quot;&gt;@ofavre&lt;/a&gt;'s and &lt;a href=&quot;https://stackoverflow.com/a/27635349/277882&quot;&gt;@stanislav-bashkyrtsev&lt;/a&gt;'s answers using broken GIT submodule references to create the GIT directories, I'm surprised that nobody has suggested yet this simple amendment of the idea to make the whole thing sane and safe:</source>
          <target state="translated">Читая &lt;a href=&quot;https://stackoverflow.com/a/8944077/277882&quot;&gt;ответы @ofavre&lt;/a&gt; и &lt;a href=&quot;https://stackoverflow.com/a/27635349/277882&quot;&gt;@ stanislav-bashkyrtsev&lt;/a&gt; , используя неработающие ссылки на подмодули GIT для создания каталогов GIT, я удивляюсь, что никто еще не предложил эту простую поправку к идее сделать все вменяемым и безопасным:</target>
        </trans-unit>
        <trans-unit id="23cdc9f7361b0d5b570a36dcba55ff9b5cae4bca" translate="yes" xml:space="preserve">
          <source>See this &lt;a href=&quot;https://stackoverflow.com/a/7229996/1882064&quot;&gt;SOF answer&lt;/a&gt; for further info - which also explains why some people find the competing convention of adding a .gitignore file (as stated in many answers here) confusing.</source>
          <target state="translated">См. Этот &lt;a href=&quot;https://stackoverflow.com/a/7229996/1882064&quot;&gt;ответ SOF&lt;/a&gt; для получения дополнительной информации, которая также объясняет, почему некоторые люди находят противоречивое соглашение о добавлении файла .gitignore (как указано во многих ответах здесь).</target>
        </trans-unit>
        <trans-unit id="d6621ff4ffc0ff6569560bb0a2efc73f49936c0c" translate="yes" xml:space="preserve">
          <source>Separation of concerns is always a good thing, and you can still add a &lt;code&gt;.gitignore&lt;/code&gt; to ignore unwanted files.</source>
          <target state="translated">Разделение проблем - это всегда хорошо, и вы все равно можете добавить &lt;code&gt;.gitignore&lt;/code&gt; , чтобы игнорировать ненужные файлы.</target>
        </trans-unit>
        <trans-unit id="592714d4edcb65cef2e2c3b218225cb036a5b740" translate="yes" xml:space="preserve">
          <source>So you have some reason why you need an empty directory in git. Put that reason in the README file. That way other developers (and future you) know why the empty directory needs to be there. You will also know that you can remove the empty directory when the problem requiring the empty directory has been solved.</source>
          <target state="translated">Так что у тебя есть причина,по которой тебе нужен пустой каталог в git'е.Запишите эту причину в файл README.Таким образом,другие разработчики (и вы в будущем)знают,зачем нужен пустой каталог.Вы также будете знать,что вы можете удалить пустой каталог,когда проблема,требующая пустого каталога,будет решена.</target>
        </trans-unit>
        <trans-unit id="f4ddceacd9ef252bd2b26735610de3953bcaf160" translate="yes" xml:space="preserve">
          <source>So, since most of our developers already have &lt;a href=&quot;http://ant.apache.org/&quot;&gt;Ant&lt;/a&gt; installed, the first thing I thought of was to put together an Ant build file to accomplish this independently of the platform. This can still be found &lt;a href=&quot;https://github.com/mig82/gitkeep&quot;&gt;here&lt;/a&gt;</source>
          <target state="translated">Итак, поскольку у большинства наших разработчиков уже установлен &lt;a href=&quot;http://ant.apache.org/&quot;&gt;Ant&lt;/a&gt; , первое, о чем я подумал, - собрать файл сборки Ant, чтобы выполнить это независимо от платформы. Это все еще можно найти &lt;a href=&quot;https://github.com/mig82/gitkeep&quot;&gt;здесь&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7a7193ce04f935ddcdda5d451f93adfb51ede51" translate="yes" xml:space="preserve">
          <source>Some suggested workarounds</source>
          <target state="translated">Некоторые из предложенных обходных путей</target>
        </trans-unit>
        <trans-unit id="24d48e9605946eaa8d5b15a84c152609ade8789b" translate="yes" xml:space="preserve">
          <source>Sometimes you have to deal with bad written libraries or software, which need a &quot;real&quot; empty and existing directory. Putting a simple &lt;code&gt;.gitignore&lt;/code&gt; or &lt;code&gt;.keep&lt;/code&gt; might break them and cause a bug. The following might help in these cases, but no guarantee...</source>
          <target state="translated">Иногда вам приходится иметь дело с плохо написанными библиотеками или программным обеспечением, которому нужен &amp;laquo;настоящий&amp;raquo; пустой и существующий каталог. Помещение простого &lt;code&gt;.gitignore&lt;/code&gt; или &lt;code&gt;.keep&lt;/code&gt; может сломать их и вызвать ошибку. Следующее может помочь в этих случаях, но без гарантии ...</target>
        </trans-unit>
        <trans-unit id="cf726d64819da79e232e9449d98f66861477c78f" translate="yes" xml:space="preserve">
          <source>Still not a native solution, but the best we probably can have without somebody getting their hands &lt;em&gt;really&lt;/em&gt;, &lt;em&gt;really&lt;/em&gt; dirty in the GIT codebase.</source>
          <target state="translated">Это все еще не нативное решение, но лучшее, что мы, вероятно, можем получить, если кто-то не получит руки, &lt;em&gt;действительно&lt;/em&gt; грязный в кодовой базе GIT.</target>
        </trans-unit>
        <trans-unit id="cf4be5ed3cfbdabce8848b04a368438be916697c" translate="yes" xml:space="preserve">
          <source>Suppose you are in your repository.</source>
          <target state="translated">Предположим,что вы находитесь в вашем репозитории.</target>
        </trans-unit>
        <trans-unit id="e9440e7d8743e5013dcfa9058a0b91853acdb142" translate="yes" xml:space="preserve">
          <source>That's it! Your empty folder is in your index. All you have to do is commit.</source>
          <target state="translated">Вот так! Пустая папка в вашем индексе.Все,что тебе нужно сделать,это зафиксировать.</target>
        </trans-unit>
        <trans-unit id="562923af0e1a8d102acfd05b50f5ffe1e3954ed4" translate="yes" xml:space="preserve">
          <source>That's it, check that in, and you have an empty, yet tracked, directory that you can track files in at some later time.</source>
          <target state="translated">Вот и все,проверьте это,и у вас есть пустая,но отслеживаемая директория,в которой вы можете отслеживать файлы в некоторое время позже.</target>
        </trans-unit>
        <trans-unit id="a953cbe252f4b95d3c8d893ebb5a8f6698c5ae93" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://en.wikipedia.org/wiki/Ruby_on_Rails&quot;&gt;Ruby on Rails&lt;/a&gt; log folder creation way:</source>
          <target state="translated">Способ создания папки журнала &lt;a href=&quot;http://en.wikipedia.org/wiki/Ruby_on_Rails&quot;&gt;Ruby on Rails&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="a065a9784ab6e7bdd148b461bc6d4ab1e93e44a6" translate="yes" xml:space="preserve">
          <source>The empty tree SHA-1 can be found by creating a new empty Git repository, &lt;code&gt;cd&lt;/code&gt; into it and issue &lt;code&gt;git write-tree&lt;/code&gt;, which outputs the empty tree SHA-1.</source>
          <target state="translated">Пустое дерево SHA-1 можно найти, создав новый пустой репозиторий Git, &lt;code&gt;cd&lt;/code&gt; в него и выполните команду &lt;code&gt;git write-tree&lt;/code&gt; , которая выводит пустое дерево SHA-1.</target>
        </trans-unit>
        <trans-unit id="307e8e768a7cd49c93d468cac94e2255ed611a4f" translate="yes" xml:space="preserve">
          <source>The file can be named and contain anything you want, but most people use an empty file named &lt;code&gt;.gitkeep&lt;/code&gt; (although some people prefer the VCS-agnostic &lt;code&gt;.keep&lt;/code&gt;).</source>
          <target state="translated">Файл может быть назван и содержать все, что вы захотите, но большинство людей используют пустой файл с именем &lt;code&gt;.gitkeep&lt;/code&gt; (хотя некоторые люди предпочитают VCS-независимый &lt;code&gt;.keep&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="66f448f887e290279d30def41c251c99c2c81784" translate="yes" xml:space="preserve">
          <source>The format, as mentioned, is:</source>
          <target state="translated">Формат,как уже упоминалось:</target>
        </trans-unit>
        <trans-unit id="e742b2cbc27fb33e33cca9e1072fb5dc2e8c6c74" translate="yes" xml:space="preserve">
          <source>The logfiles can be kept out by issuing,</source>
          <target state="translated">Журналы могут быть сохранены путем выдачи,</target>
        </trans-unit>
        <trans-unit id="bf29dff62fdb5ee3fc2a33b322ef5c3f576f3005" translate="yes" xml:space="preserve">
          <source>The prefixed &lt;code&gt;.&lt;/code&gt; marks it as a hidden file.</source>
          <target state="translated">Приставка помечает его как скрытый файл.</target>
        </trans-unit>
        <trans-unit id="adde9d966c336b6cf829e4ff186e0bdbb1f17fdb" translate="yes" xml:space="preserve">
          <source>The real question is why do you need the empty directory in git? Usually you have some sort of build script that can create the empty directory before compiling/running. If not then make one. That is a far better solution than putting empty directories in git.</source>
          <target state="translated">Вопрос в том,зачем нужен пустой каталог в git'е? Обычно у вас есть какой-нибудь скрипт сборки,который может создать пустой каталог до компиляции.Если нет,то создайте его.Это гораздо лучшее решение,чем помещать пустые директории в git.</target>
        </trans-unit>
        <trans-unit id="4e10a5f8b55bf16c877fb4a4db4028d201a75b3d" translate="yes" xml:space="preserve">
          <source>The reason I suggest keeping that one line in the file is that it gives the &lt;code&gt;.gitignore&lt;/code&gt; purpose. Otherwise, some one down the line may think to remove it.  It may help if you place a comment above the line.</source>
          <target state="translated">Причина, по которой я предлагаю оставить одну строку в файле, заключается в том, что она дает цель &lt;code&gt;.gitignore&lt;/code&gt; . В противном случае, кто-то в будущем может подумать, чтобы удалить его. Это может помочь, если вы разместите комментарий над строкой.</target>
        </trans-unit>
        <trans-unit id="44dd342bd16c11fefd5f44220831e5efdbe41a34" translate="yes" xml:space="preserve">
          <source>Then do</source>
          <target state="translated">Тогда делай</target>
        </trans-unit>
        <trans-unit id="271ab51f7d49757a4117bf808028499958faf787" translate="yes" xml:space="preserve">
          <source>Then you add a broken symbolic link to this directory (but on any other case than the described use case above, please use a &lt;code&gt;README&lt;/code&gt; with an explanation):</source>
          <target state="translated">Затем вы добавляете неработающую символическую ссылку в этот каталог (но в любом другом случае, кроме описанного выше варианта использования, пожалуйста, используйте &lt;code&gt;README&lt;/code&gt; с объяснением):</target>
        </trans-unit>
        <trans-unit id="cbe8b088983da206fee5cb9a90a567c09bef564f" translate="yes" xml:space="preserve">
          <source>Then you can commit descriptive README.md files (or blank files, doesn't matter, as long as you can target them uniquely like with the &lt;code&gt;*.md&lt;/code&gt; in this case) in each directory to ensure that the directories all remain part of the repo but the files (with extensions) are kept ignored. LIMITATION: &lt;code&gt;.&lt;/code&gt;'s are not allowed in the directory names!</source>
          <target state="translated">Затем вы можете зафиксировать описательные файлы README.md (или пустые файлы, не имеет значения, если вы можете назначить их уникально, как, например, с помощью &lt;code&gt;*.md&lt;/code&gt; ) в каждом каталоге, чтобы убедиться, что все каталоги остаются частью репо, но файлы (с расширениями) игнорируются. ОГРАНИЧЕНИЕ:. не допускается в именах каталогов!</target>
        </trans-unit>
        <trans-unit id="61c9cbd5afc1886a9d4c83796b2f8645d0725617" translate="yes" xml:space="preserve">
          <source>Then you don't have to get the order right the way that you have to do in m104's &lt;a href=&quot;https://stackoverflow.com/a/180917/32453&quot;&gt;solution&lt;/a&gt;.</source>
          <target state="translated">Тогда вам не нужно правильно оформлять заказ, как в &lt;a href=&quot;https://stackoverflow.com/a/180917/32453&quot;&gt;решении&lt;/a&gt; m104.</target>
        </trans-unit>
        <trans-unit id="4738c75f9da892a390366657d2ab91d093af9b84" translate="yes" xml:space="preserve">
          <source>There is a rant out there somewhere I read once.</source>
          <target state="translated">Где-то там,где я как-то читал разглагольствования.</target>
        </trans-unit>
        <trans-unit id="26fa8fd7ec96a6040db82979ba4051519106b223" translate="yes" xml:space="preserve">
          <source>There is no need to further alter your &lt;code&gt;.gitignore&lt;/code&gt; or decentralise by creating a new &lt;code&gt;.gitignore&lt;/code&gt; for each new directory. Probably not the smartest solution but is terse gitignore-wise and always works for me. Nice and simple! ;)</source>
          <target state="translated">Нет необходимости дополнительно изменять ваш &lt;code&gt;.gitignore&lt;/code&gt; или децентрализовать, создавая новый &lt;code&gt;.gitignore&lt;/code&gt; для каждого нового каталога. Вероятно, не самое разумное решение, но оно кратко и всегда работает на меня. Красиво и просто! ;)</target>
        </trans-unit>
        <trans-unit id="e4a770f2fd29b2be505353071c334d0fd6d58785" translate="yes" xml:space="preserve">
          <source>There's no way to get Git to track directories, so the only solution is to add a placeholder file within the directory that you want Git to track.</source>
          <target state="translated">Невозможно заставить Git'а отслеживать каталоги,поэтому единственным решением будет добавление файла-платформы в каталог,который вы хотите,чтобы Git отслеживал.</target>
        </trans-unit>
        <trans-unit id="1ae5f2188a715c59168ab614b7195164558364d0" translate="yes" xml:space="preserve">
          <source>This also gives the benefit that files in that directory won't show up as &quot;untracked&quot; when you do a git status.</source>
          <target state="translated">Это также даёт преимущество,что файлы в этом каталоге не будут отображаться как &quot;неотслеживаемые&quot;,когда вы делаете git-статус.</target>
        </trans-unit>
        <trans-unit id="1d51a99a1263426f38791134a8084992fd3d9699" translate="yes" xml:space="preserve">
          <source>This commands shows an empty result, since no files are present in this directory. So most applications, which get all files in a directory usually do not see this link, at least if they do a &quot;file exists&quot; or a &quot;is readable&quot;. Even some scripts will not find any files there:</source>
          <target state="translated">Эта команда показывает пустой результат,так как в этой директории нет файлов.Поэтому большинство приложений,которые получают все файлы в каталоге,обычно не видят эту ссылку,по крайней мере,если они делают &quot;файл существует&quot; или &quot;читается&quot;.Даже некоторые скрипты не находят там файлов:</target>
        </trans-unit>
        <trans-unit id="941a2713b26907b0edfc9326db1fe8fd6d6259ce" translate="yes" xml:space="preserve">
          <source>This is in PHP, but I am sure most languages support the same functionality, and because the creation of the folders is taken care of by the application, the folders will always be there.</source>
          <target state="translated">Это в PHP,но я уверен,что большинство языков поддерживают ту же самую функциональность,и поскольку создание папок берет на себя приложение,папки всегда будут там.</target>
        </trans-unit>
        <trans-unit id="0231a3e6089a1a461ba784b7f40b45deb15617c7" translate="yes" xml:space="preserve">
          <source>This is why I decided to write an open source tool which can manage the creation/deletion of such placeholder files automatically. It is written for .NET platform and runs under Mono (.NET for Linux) and Windows.</source>
          <target state="translated">Поэтому я решил написать инструмент с открытым исходным кодом,который может управлять автоматическим созданием таких файлов-платформ.Он написан для .NET платформы и работает под Mono (.NET для Linux)и Windows.</target>
        </trans-unit>
        <trans-unit id="0ff65b1e79038cf9e8c142a884be4f581f2e90a5" translate="yes" xml:space="preserve">
          <source>This solution is short and apparently works fine (&lt;strong&gt;see the EDIT!&lt;/strong&gt;), but it is not that easy to remember...</source>
          <target state="translated">Это решение короткое и, видимо, работает отлично ( &lt;strong&gt;см. РЕДАКТИРОВАТЬ!&lt;/strong&gt; ), Но это не так легко запомнить ...</target>
        </trans-unit>
        <trans-unit id="8669dd39694b308e5b298072467437705670849e" translate="yes" xml:space="preserve">
          <source>This will add a folder and a file &lt;code&gt;.submodules&lt;/code&gt;. Commit a change.</source>
          <target state="translated">Это добавит папку и файл &lt;code&gt;.submodules&lt;/code&gt; . Зафиксируйте изменения.</target>
        </trans-unit>
        <trans-unit id="447b2024267dea2031844c6f68742d0c73587964" translate="yes" xml:space="preserve">
          <source>To add an empty directory to you GIT repo:</source>
          <target state="translated">Чтобы добавить к вам пустой каталог GIT repo:</target>
        </trans-unit>
        <trans-unit id="490916f50c4d5acc4a001cfc2ae3064c52b31c17" translate="yes" xml:space="preserve">
          <source>To add the ignored file, use a parameter to force it:</source>
          <target state="translated">Чтобы добавить игнорируемый файл,используйте параметр для его принудительной обработки:</target>
        </trans-unit>
        <trans-unit id="b5b5dd30965da188d3bdbf913bf64ed36eb60fb6" translate="yes" xml:space="preserve">
          <source>To convert all existing empty directories to submodules:</source>
          <target state="translated">Для преобразования всех существующих пустых каталогов в субмодули:</target>
        </trans-unit>
        <trans-unit id="d8c3c4fd1ad227759ac5eda9bde9680891d85369" translate="yes" xml:space="preserve">
          <source>To create placeholder READMEs in every empty directory:</source>
          <target state="translated">Создать README в каждом пустом каталоге:</target>
        </trans-unit>
        <trans-unit id="d059071611973c155c1fa728cc1dc8d54a784477" translate="yes" xml:space="preserve">
          <source>To ignore everything in the directory except the README file put the following lines in your &lt;code&gt;.gitignore&lt;/code&gt;:</source>
          <target state="translated">Чтобы игнорировать все в каталоге, кроме файла README, поместите следующие строки в ваш &lt;code&gt;.gitignore&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8d5ad49ffa75003ce93790e45a213bfc2c5568dc" translate="yes" xml:space="preserve">
          <source>To ignore files in this directory, you can add it in your root &lt;code&gt;.gitignore&lt;/code&gt;:</source>
          <target state="translated">Чтобы игнорировать файлы в этом каталоге, вы можете добавить его в свой корневой &lt;code&gt;.gitignore&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4d28181251c8e026869f72e94fcb9f913bb43572" translate="yes" xml:space="preserve">
          <source>To list every README after they are already created:</source>
          <target state="translated">Перечислить все README после того,как они уже созданы:</target>
        </trans-unit>
        <trans-unit id="eb5231ed99174cb588bedfa581b7186849bdd9e4" translate="yes" xml:space="preserve">
          <source>To list every empty directory use the following command:</source>
          <target state="translated">Чтобы перечислить все пустые директории,используйте следующую команду:</target>
        </trans-unit>
        <trans-unit id="f5fd9c123a60713e27942ff28cd8c0c830fcdd51" translate="yes" xml:space="preserve">
          <source>Type the command and then enter the second line. Press</source>
          <target state="translated">Введите команду,а затем введите вторую строку.Нажмите .</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="ffd1db763848f4c4472ac7f7473013edf19585c9" translate="yes" xml:space="preserve">
          <source>Use an &lt;em&gt;empty&lt;/em&gt; file called &lt;code&gt;.gitkeep&lt;/code&gt; in order to force the presence of the folder in the versioning system.</source>
          <target state="translated">Используйте &lt;em&gt;пустой&lt;/em&gt; файл с именем &lt;code&gt;.gitkeep&lt;/code&gt; для принудительного присутствия папки в системе управления версиями.</target>
        </trans-unit>
        <trans-unit id="cddf6b9a46a0454ba89ee38e73b711678e2deb70" translate="yes" xml:space="preserve">
          <source>When you add a &lt;code&gt;.gitignore&lt;/code&gt; file, if you are going to put any amount of content in it (that you want Git to ignore) you might want to add a single line with just an asterisk &lt;code&gt;*&lt;/code&gt; to make sure you don't add the ignored content accidentally.</source>
          <target state="translated">Когда вы добавляете файл &lt;code&gt;.gitignore&lt;/code&gt; , если вы собираетесь помещать в него какое-либо количество контента (которое вы хотите игнорировать в Git), вы можете добавить одну строку со звездочкой &lt;code&gt;*&lt;/code&gt; , чтобы убедиться, что вы не добавите случайно проигнорировал контент.</target>
        </trans-unit>
        <trans-unit id="fe8fd8f26e88b908b2a3b55d4634c460d8e2a8ec" translate="yes" xml:space="preserve">
          <source>When you want to clean up your source tree you can just:</source>
          <target state="translated">Когда вы захотите почистить дерево-источник,вы можете просто..:</target>
        </trans-unit>
        <trans-unit id="eeadc9a1aaa0db3bc40739107087ee919a727078" translate="yes" xml:space="preserve">
          <source>While &lt;em&gt;both solutions surely work&lt;/em&gt; I find them inconsistent with a meaningful approach to Git versioning.</source>
          <target state="translated">Хотя &lt;em&gt;оба решения, безусловно, работают,&lt;/em&gt; я считаю их несовместимыми с осмысленным подходом к Git-версиям.</target>
        </trans-unit>
        <trans-unit id="b62d1c6896a552b6058f125d41d2a8a506cf5359" translate="yes" xml:space="preserve">
          <source>Why are you supposed to put bogus files or READMEs that maybe you don't really want in your project?</source>
          <target state="translated">Почему вы должны помещать фальшивые файлы или README,которые,возможно,вам на самом деле не нужны в вашем проекте?</target>
        </trans-unit>
        <trans-unit id="b3cc7336ea3346a09abac426eb677ad323e9fdd1" translate="yes" xml:space="preserve">
          <source>Why use &lt;code&gt;.gitignore&lt;/code&gt; to do a thing (&lt;em&gt;keeping&lt;/em&gt; files) that is the very opposite of what it's meant for (&lt;em&gt;excluding&lt;/em&gt; files), even though it is possible?</source>
          <target state="translated">Зачем использовать &lt;code&gt;.gitignore&lt;/code&gt; для выполнения вещи ( &lt;em&gt;хранения&lt;/em&gt; файлов), которая прямо противоположна тому, для чего она предназначена ( &lt;em&gt;исключая&lt;/em&gt; файлы), даже если это возможно?</target>
        </trans-unit>
        <trans-unit id="103215cec6138a09084b9458c3ce747f188a10b4" translate="yes" xml:space="preserve">
          <source>Why would we need empty versioned folders</source>
          <target state="translated">Зачем нам нужны пустые версионные папки</target>
        </trans-unit>
        <trans-unit id="4ce5d0388c01b6cedd52787992f8c7a955244236" translate="yes" xml:space="preserve">
          <source>With this solution you are able to commit a empty folder, for example &lt;code&gt;/log&lt;/code&gt;, &lt;code&gt;/tmp&lt;/code&gt; or &lt;code&gt;/cache&lt;/code&gt; and the folder will stay empty.</source>
          <target state="translated">С помощью этого решения вы можете зафиксировать пустую папку, например &lt;code&gt;/log&lt;/code&gt; , &lt;code&gt;/tmp&lt;/code&gt; или &lt;code&gt;/cache&lt;/code&gt; , и папка останется пустой.</target>
        </trans-unit>
        <trans-unit id="f23151da0deaa4d23f72fa98790c48326765298a" translate="yes" xml:space="preserve">
          <source>With this, you can either execute it from within the directory you wish to add, or reference the directory as it's first and only parameter:</source>
          <target state="translated">С помощью этого,вы можете либо выполнить его из директории,которую хотите добавить,либо сослаться на директорию как на первый и единственный параметр:</target>
        </trans-unit>
        <trans-unit id="4aec0f970702275a4ff389c3481cbd12213f0065" translate="yes" xml:space="preserve">
          <source>You can fill up all of these directories with xml/images files or whatever and add more directories under &lt;code&gt;/app/data/&lt;/code&gt; over time as the storage needs for your app develop (with the README.md files serving to burn in a description of what each storage directory is for exactly).</source>
          <target state="translated">Вы можете заполнить все эти каталоги файлами xml / images или чем-либо еще и добавить дополнительные каталоги в &lt;code&gt;/app/data/&lt;/code&gt; с течением времени по мере развития хранилища для вашего приложения (с файлами README.md, предназначенными для записи в описании того, что каждый каталог для хранения предназначен именно).</target>
        </trans-unit>
        <trans-unit id="368ecf61c201184ca1eca5a09d4b430bba4475ac" translate="yes" xml:space="preserve">
          <source>You can ignore all of your generated files by adding the following to your root .gitignore:</source>
          <target state="translated">Вы можете игнорировать все ваши сгенерированные файлы,добавив в корневой .gitignore следующее:</target>
        </trans-unit>
        <trans-unit id="db3768f3cbb474672a2f790a2f3a93556c86a883" translate="yes" xml:space="preserve">
          <source>You can save this code as create_readme.php and run the &lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;PHP&lt;/a&gt; code from the root directory of your Git project.</source>
          <target state="translated">Вы можете сохранить этот код как create_readme.php и запустить код &lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;PHP&lt;/a&gt; из корневого каталога вашего проекта Git.</target>
        </trans-unit>
        <trans-unit id="35e7674c15b829e3da47e9c91c17c0b45bbbcbc4" translate="yes" xml:space="preserve">
          <source>You can say &quot;&lt;code&gt;git add &amp;lt;dir&amp;gt;&lt;/code&gt;&quot; and it
  will add files in there.</source>
          <target state="translated">Вы можете сказать &amp;laquo; &lt;code&gt;git add &amp;lt;dir&amp;gt;&lt;/code&gt; &amp;raquo;, и он добавит туда файлы.</target>
        </trans-unit>
        <trans-unit id="6cfdb4128821ccf4042227c42e6a3ce5eff4c3ec" translate="yes" xml:space="preserve">
          <source>You can't and unfortunately will never be able to. This is a decision made by Linus Torvald himself. He knows what's good for us.</source>
          <target state="translated">Ты не можешь и,к сожалению,никогда не сможешь.Это решение принял сам Лайнус Торвальд.Он знает,что хорошо для нас.</target>
        </trans-unit>
        <trans-unit id="96422f8128e7582ea39f5a813f28720ea292d5ce" translate="yes" xml:space="preserve">
          <source>You can't.  See the &lt;a href=&quot;https://git.wiki.kernel.org/index.php/GitFaq#Can_I_add_empty_directories.3F&quot;&gt;Git FAQ&lt;/a&gt;.</source>
          <target state="translated">Ты не можешь Смотрите &lt;a href=&quot;https://git.wiki.kernel.org/index.php/GitFaq#Can_I_add_empty_directories.3F&quot;&gt;Git FAQ&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="22ca8c67077a960213c9270a133c31b59f499c76" translate="yes" xml:space="preserve">
          <source>You can't. This is an intentional design decision by the Git maintainers. Basically, the purpose of a Source Code Management System like Git is managing source code and empty directories aren't source code. Git is also often described as a content tracker, and again, empty directories aren't content (quite the opposite, actually), so they are not tracked.</source>
          <target state="translated">Ты не можешь.Это преднамеренное проектное решение хранителей Git'а.По сути,целью такой системы управления исходным кодом,как Git,является управление исходным кодом,а пустые каталоги не являются исходным кодом.Git также часто описывается как средство отслеживания содержимого,и опять же,пустые каталоги-это не содержимое (на самом деле наоборот),поэтому они не отслеживаются.</target>
        </trans-unit>
        <trans-unit id="803b77036ef8698000e9339edcd62fd703594653" translate="yes" xml:space="preserve">
          <source>You could always put a README file in the directory with an explanation of why you want this, otherwise empty, directory in the repository.</source>
          <target state="translated">Вы всегда можете поместить файл README в каталог с объяснением,почему вы хотите,чтобы этот,в противном случае,пустой каталог был в репозитории.</target>
        </trans-unit>
        <trans-unit id="dcee5b95aba60fafa22b894110eb63499a6ee4d7" translate="yes" xml:space="preserve">
          <source>You have to live with the workarounds...unfortunately.</source>
          <target state="translated">Ты должен жить с обходными путями...к сожалению.</target>
        </trans-unit>
        <trans-unit id="03f9d41dc6b8f480026623afffc50b5a20a7c5da" translate="yes" xml:space="preserve">
          <source>You should be able to recreate this exact commit using (in an empty directory):</source>
          <target state="translated">Вы должны быть в состоянии воссоздать этот точный коммит,используя (в пустом каталоге):</target>
        </trans-unit>
        <trans-unit id="9487aa6e228be403f7931650f0ee33843eff1948" translate="yes" xml:space="preserve">
          <source>You use a file that has the &lt;em&gt;single&lt;/em&gt; purpose of keeping the folder. You don't put there any info you don't want to put.</source>
          <target state="translated">Вы используете файл, цель которого - сохранить папку. Вы не помещаете туда информацию, которую не хотите помещать.</target>
        </trans-unit>
        <trans-unit id="50e789a4519a8bfb4201a8cf539afda28392b287" translate="yes" xml:space="preserve">
          <source>Your &lt;code&gt;.gitignore&lt;/code&gt; file would look like:</source>
          <target state="translated">Ваш файл &lt;code&gt;.gitignore&lt;/code&gt; будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="a357a0b3b6bb01e41a042b584904f6b12375f3f1" translate="yes" xml:space="preserve">
          <source>and then</source>
          <target state="translated">а потом</target>
        </trans-unit>
        <trans-unit id="c6f38c96c5ac4615934334f5e2718109ae1691d4" translate="yes" xml:space="preserve">
          <source>but you probably knew that.</source>
          <target state="translated">но ты,наверное,знал это.</target>
        </trans-unit>
        <trans-unit id="31a8afc956c3b38d471b6f69f007533194f0e239" translate="yes" xml:space="preserve">
          <source>fatal: Not a valid object name
  b64338b90b4209263b50244d18278c0999867193</source>
          <target state="translated">роковой:недействительное имя объекта b64338b90b4209263b50244d18278c0999867193</target>
        </trans-unit>
        <trans-unit id="7ed76119035d1dc7e53e02cf1cd68c1b13efd79d" translate="yes" xml:space="preserve">
          <source>related to the above, some projects &lt;em&gt;won't work without some folders&lt;/em&gt; (which is often a hint of a poorly designed project, but it's a frequent real-world scenario and maybe there could be, say, permission problems to be addressed).</source>
          <target state="translated">В связи с вышеизложенным некоторые проекты &lt;em&gt;не будут работать без каких-либо папок&lt;/em&gt; (что часто является намеком на плохо спроектированный проект, но это частый сценарий реального мира, и, возможно, могут быть, скажем, проблемы с разрешениями, которые необходимо решить).</target>
        </trans-unit>
        <trans-unit id="87b56ec500c49bd553a7cff70a8680d17089dd52" translate="yes" xml:space="preserve">
          <source>scaffolding a &lt;strong&gt;predefined folder structure&lt;/strong&gt;, making it available to every user/contributor of the repository; or, as a specialized case of the above, creating a folder for &lt;strong&gt;temporary files&lt;/strong&gt;, such as a &lt;code&gt;cache/&lt;/code&gt; or &lt;code&gt;logs/&lt;/code&gt; directories, where we want to provide the folder but &lt;code&gt;.gitignore&lt;/code&gt; its contents</source>
          <target state="translated">создание &lt;strong&gt;предопределенной структуры папок&lt;/strong&gt; , делая ее доступной для каждого пользователя / участника репозитория; или, как специализированный случай вышеупомянутого, создание папки для &lt;strong&gt;временных файлов&lt;/strong&gt; , таких как &lt;code&gt;cache/&lt;/code&gt; или &lt;code&gt;logs/&lt;/code&gt; каталоги, где мы хотим предоставить папку, но &lt;code&gt;.gitignore&lt;/code&gt; ее содержимое</target>
        </trans-unit>
        <trans-unit id="a9dc3140cab3fe6f3324bc773106f6dea351ca23" translate="yes" xml:space="preserve">
          <source>to terminate your input.
Note: the format is &lt;em&gt;mode&lt;/em&gt; [SPACE] &lt;em&gt;type&lt;/em&gt; [SPACE] SHA-1hash &lt;strong&gt;[TAB]&lt;/strong&gt; path (the tab is important, the answer formatting does not preserve it).</source>
          <target state="translated">прекратить ваш ввод. Примечание: формат &lt;em&gt;режима&lt;/em&gt; [SPACE], &lt;em&gt;тип&lt;/em&gt; [SPACE] SHA-1hash &lt;strong&gt;[TAB]&lt;/strong&gt; путь (вкладка важна, форматирование ответа не сохраняет его).</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
