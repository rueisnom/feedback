<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/11832914">
    <body>
      <group id="11832914">
        <trans-unit id="b6ece284bdcef543af3fa04af9f8140b35cca2c3" translate="yes" xml:space="preserve">
          <source>(As an alternative, you could also try the &lt;a href=&quot;https://github.com/jhohlfeld/round10&quot;&gt;round10&lt;/a&gt; library which provides a similarly-behaving function with a wildly different implementation.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Como alternativa, tambi&amp;eacute;n puede probar la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;biblioteca &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/jhohlfeld/round10&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;round10&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que proporciona una funci&amp;oacute;n de comportamiento similar con una implementaci&amp;oacute;n muy diferente).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6681674ef7ab7bb360570aaedfa1b23c78b184b2" translate="yes" xml:space="preserve">
          <source>... I get 0.015, which should round to 0.02, and which is noticeably &lt;em&gt;not&lt;/em&gt; the 56-decimal-place number I earlier said that all of these numbers were exactly equal to. So what dark magic is this?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;... obtengo 0.015, que deber&amp;iacute;a redondear a 0.02, y que notablemente &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no es&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; el n&amp;uacute;mero de 56 decimales que dije anteriormente que todos estos n&amp;uacute;meros eran exactamente iguales. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, &amp;iquest;qu&amp;eacute; magia oscura es esta?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c6a08c79c3157a0800a5664fbe8ac079f3090599" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toFixed(2)&lt;/code&gt; here 2 is number of digits upto which we want to round this num.</source>
          <target state="translated">&lt;code&gt;toFixed(2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; here 2 es el n&amp;uacute;mero de d&amp;iacute;gitos hasta el que queremos redondear este n&amp;uacute;mero.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f89dbbb6171fb257097653bce48c99201d2bf6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT (2019):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;EDITAR (2019):&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="94c3f2940bab5ea0c2d43ef846e1ca78e2d60ba3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT (december 2019):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;EDITAR (diciembre de 2019):&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4e021e8096db3c4f40241955870ff1f94ba900d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;EDIT:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e23e8588def29ed89ca632405fa7089ba47d19e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit:&lt;/strong&gt; to ensure things like 1.005 round correctly, we use</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Editar:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para garantizar que cosas como 1.005 redondeen correctamente, utilizamos&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4abe7a00ac8031d5894c9ec2f50051099b25c203" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; This is not a universal solution for everyone. There are several different rounding algorithms, your implementation can be different, depends on your requirements. &lt;a href=&quot;https://en.wikipedia.org/wiki/Rounding&quot;&gt;https://en.wikipedia.org/wiki/Rounding&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NOTA:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Esta no es una soluci&amp;oacute;n universal para todos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hay varios algoritmos de redondeo diferentes, su implementaci&amp;oacute;n puede ser diferente, depende de sus requisitos. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Rounding&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://en.wikipedia.org/wiki/Rounding&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d5700e435626d6a7bc525fba922f6696dce2146e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;None of the answers found here is correct&lt;/strong&gt;. @stinkycheeseman asked to &lt;strong&gt;round up&lt;/strong&gt;, you all rounded the number.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ninguna de las respuestas encontradas aqu&amp;iacute; es correcta&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@stinkycheeseman pidi&amp;oacute; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;redondear&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , todos redondearon el n&amp;uacute;mero.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f505dab513fc6e66e32870147f13bf544aaf130" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Solution 1&lt;/strong&gt; is to use a script with required rounding algorithm, for example:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La soluci&amp;oacute;n 1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es usar un script con el algoritmo de redondeo requerido, por ejemplo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="60da7ee155aad83e9fc691a1e3f288cb20397643" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Solution 2&lt;/strong&gt; is to avoid front end calculations and pull rounded values from the backend server.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La soluci&amp;oacute;n 2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es evitar los c&amp;aacute;lculos frontales y extraer valores redondeados del servidor de fondo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de4e79b8a1f775972ba777a47804a2f6c93dc4ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;That is simply the way floating point numbers works in a computer.&lt;/strong&gt; Like 99% of programming languages, JavaScript doesn't have &lt;em&gt;home made&lt;/em&gt; floating point numbers; it relies on the CPU/FPU for that. A computer uses binary, and in binary, there isn't any numbers like &lt;code&gt;0.1&lt;/code&gt;, but a mere binary approximation for that. Why? For the same reason than 1/3 cannot be written in decimal: its value is 0.33333333... with an infinity of threes.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esa es simplemente la forma en que los n&amp;uacute;meros de coma flotante funcionan en una computadora. &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Al igual que el 99% de los lenguajes de programaci&amp;oacute;n, JavaScript no tiene &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;n&amp;uacute;meros de coma flotante &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;hechos en casa&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se basa en la CPU / FPU para eso. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una computadora usa binario, y en binario, no hay n&amp;uacute;meros como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0.1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , sino una mera aproximaci&amp;oacute;n binaria para eso. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Por qu&amp;eacute;? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por la misma raz&amp;oacute;n que 1/3 no puede escribirse en decimal: su valor es 0.33333333 ... con un infinito de tres.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9188873b53a0860b8d45c86992acf0ce33ebbec3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Usage:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e1b2af8daa9bf0f51bff3121bdff06a9eef9fdbd" translate="yes" xml:space="preserve">
          <source>A precise rounding method. Source: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round&quot;&gt;Mozilla&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un m&amp;eacute;todo de redondeo preciso. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Fuente: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mozilla.&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69b2d171eb62a98f494d32dbf0399f2c6f867adf" translate="yes" xml:space="preserve">
          <source>A simple drop in solution that provides accurate decimal rounding, flooring, and ceiling, with an optional precision variable without adding a whole library.</source>
          <target state="translated">Una simple solución que proporciona un redondeo exacto de los decimales,el suelo y el techo,con una variable de precisión opcional sin añadir una biblioteca entera.</target>
        </trans-unit>
        <trans-unit id="d87b6d4b2b1d92b09f50fecdbf7a3fb93cdb0de7" translate="yes" xml:space="preserve">
          <source>Adapted from the solution provided here: &lt;a href=&quot;https://stackoverflow.com/a/48850944/6910392&quot;&gt;https://stackoverflow.com/a/48850944/6910392&lt;/a&gt;</source>
          <target state="translated">Adaptado de la soluci&amp;oacute;n proporcionada aqu&amp;iacute;: &lt;a href=&quot;https://stackoverflow.com/a/48850944/6910392&quot;&gt;https://stackoverflow.com/a/48850944/6910392&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b39ace06fe7843f11aa15e7af8ac8aa65286c4d1" translate="yes" xml:space="preserve">
          <source>After running through various iterations of all the possible ways to achieve true accurate decimal rounding precision, it is clear that the most accurate and efficient solution is to use Number.EPSILON. This provides a true mathematical solution to the problem of floating point math precision. It can be easily polyfilled as shown here: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON&lt;/a&gt; to support all of the last remaining IE users (then again maybe we should stop doing that).</source>
          <target state="translated">Despu&amp;eacute;s de ejecutar varias iteraciones de todas las formas posibles de lograr una precisi&amp;oacute;n de redondeo decimal verdadera y precisa, est&amp;aacute; claro que la soluci&amp;oacute;n m&amp;aacute;s precisa y eficiente es usar Number.EPSILON. Esto proporciona una verdadera soluci&amp;oacute;n matem&amp;aacute;tica al problema de la precisi&amp;oacute;n matem&amp;aacute;tica de coma flotante. Se puede rellenar f&amp;aacute;cilmente como se muestra aqu&amp;iacute;: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON&lt;/a&gt; para admitir a todos los &amp;uacute;ltimos usuarios restantes de IE (entonces quiz&amp;aacute;s nuevamente deber&amp;iacute;a dejar de hacer eso).</target>
        </trans-unit>
        <trans-unit id="f575b52acd8ef9eab6fdcf0d803b1f78d5741f89" translate="yes" xml:space="preserve">
          <source>Also it's worth noting that this is not a &lt;em&gt;JavaScript weirdness&lt;/em&gt; like some people stated.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n vale la pena se&amp;ntilde;alar que esto no es una &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;rareza de JavaScript&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como algunas personas declararon.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c4937c3ee7e26dbf578cfd6247ad524d28ec2b62" translate="yes" xml:space="preserve">
          <source>As asked in the comments, let's clarify one thing: adding &lt;code&gt;Number.EPSILON&lt;/code&gt; is relevant only when the value to round is the result of an arithmetic operation, as it can swallow some floating point error delta.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como se pregunt&amp;oacute; en los comentarios, aclaremos una cosa: agregar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number.EPSILON&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; solo es relevante cuando el valor a redondear es el resultado de una operaci&amp;oacute;n aritm&amp;eacute;tica, ya que puede tragar alg&amp;uacute;n error de coma flotante delta.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5c1aa79e884353e01805297b4ffdc0e1b809104c" translate="yes" xml:space="preserve">
          <source>But what if you have the second kind of Number - a value taken from a continuous scale, where there's no reason to think that approximate decimal representations with fewer decimal places are more &lt;em&gt;accurate&lt;/em&gt; than those with more? In that case, we &lt;em&gt;don't&lt;/em&gt; want to respect the String representation, because that representation (as explained in the spec) is already sort-of-rounded; we don't want to make the mistake of saying &quot;0.014999999...375 rounds up to 0.015, which rounds up to 0.02, so 0.014999999...375 rounds up to 0.02&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero, &amp;iquest;qu&amp;eacute; sucede si tiene el segundo tipo de N&amp;uacute;mero, un valor tomado de una escala continua, donde no hay raz&amp;oacute;n para pensar que las representaciones decimales aproximadas con menos decimales son m&amp;aacute;s &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;precisas&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que las que tienen m&amp;aacute;s? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En ese caso, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; queremos respetar la representaci&amp;oacute;n de String, porque esa representaci&amp;oacute;n (como se explica en la especificaci&amp;oacute;n) ya est&amp;aacute; redondeada; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no queremos cometer el error de decir &quot;0.014999999 ... 375 redondea a 0.015, que redondea a 0.02, entonces 0.014999999 ... 375 redondea a 0.02&quot;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ab662aee31f190e347238c5fbc1e7d6128a3dbdd" translate="yes" xml:space="preserve">
          <source>Compared to Lavamantis's solution, we can do...</source>
          <target state="translated">Comparado con la solución de Lavamantis,podemos hacer...</target>
        </trans-unit>
        <trans-unit id="8589b8976170efc90ee30bed08325d4b4f5fb025" translate="yes" xml:space="preserve">
          <source>Consider &lt;code&gt;.toFixed()&lt;/code&gt; and &lt;code&gt;.toPrecision()&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Considere &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.toFixed()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.toPrecision()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="85511932eb0bd6ee919a34a7f2c6087bb0a5fb7b" translate="yes" xml:space="preserve">
          <source>Easiest way:</source>
          <target state="translated">La manera más fácil:</target>
        </trans-unit>
        <trans-unit id="5e297a41e8ef5ac08adf9ee0810c2244721fa92b" translate="yes" xml:space="preserve">
          <source>Eg:</source>
          <target state="translated">Eg:</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">Ejemplo de uso:</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Ampliar fragmento</target>
        </trans-unit>
        <trans-unit id="945a73f60f58235e70de75adb211e4394558c073" translate="yes" xml:space="preserve">
          <source>For me &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round&quot;&gt;Math.round()&lt;/a&gt; was not giving correct answer. I found &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed&quot;&gt;toFixed(2)&lt;/a&gt; works better. 
Below are examples of both:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para m&amp;iacute; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Math.round ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no estaba dando la respuesta correcta. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Descubr&amp;iacute; que &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;toFixed (2)&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funciona mejor. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A continuaci&amp;oacute;n hay ejemplos de ambos:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="edbdada6b4155dd45ec8fd8ab20607a6462b6549" translate="yes" xml:space="preserve">
          <source>Here come &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON&quot;&gt;&lt;code&gt;Number.EPSILON&lt;/code&gt;&lt;/a&gt;. That number is the difference between 1 and the &lt;em&gt;next&lt;/em&gt; number existing in the double precision floating point numbers. &lt;strong&gt;That's it: There is no number between &lt;code&gt;1&lt;/code&gt; and 1 + &lt;code&gt;Number.EPSILON&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; viene &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON&quot;&gt; &lt;code&gt;Number.EPSILON&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ese n&amp;uacute;mero es la diferencia entre 1 y el &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;siguiente&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; n&amp;uacute;mero existente en los n&amp;uacute;meros de coma flotante de doble precisi&amp;oacute;n. &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Eso es todo: no hay un n&amp;uacute;mero entre &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y 1 + &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number.EPSILON&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;EPSILON&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="582a28d3d6f5875f42faffd53f6dca41c44e4409" translate="yes" xml:space="preserve">
          <source>Here is a prototype method:</source>
          <target state="translated">Aquí hay un método prototipo:</target>
        </trans-unit>
        <trans-unit id="2becac006f82ed17841b46654302952a6af24ef5" translate="yes" xml:space="preserve">
          <source>Here is a simple way to do it:</source>
          <target state="translated">Aquí hay una forma sencilla de hacerlo:</target>
        </trans-unit>
        <trans-unit id="86712cc5731f9156c956e2225c2cb563bb12f349" translate="yes" xml:space="preserve">
          <source>Here is the function I use to solve the floating point decimals issues &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round#Example%3a_Decimal_rounding&quot;&gt;also based on MDN&lt;/a&gt;. It is even more generic (but less concise) than Lavamantis's solution:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; est&amp;aacute; la funci&amp;oacute;n que uso para resolver los problemas de decimales de punto flotante &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round#Example%3a_Decimal_rounding&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tambi&amp;eacute;n basados ​​en MDN&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es a&amp;uacute;n m&amp;aacute;s gen&amp;eacute;rico (pero menos conciso) que la soluci&amp;oacute;n de Lavamantis:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0d5875b4c5849ab3bfd33eea8d2f49977f4bd52" translate="yes" xml:space="preserve">
          <source>Here we can simply use the built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed&quot;&gt;&lt;code&gt;toFixed&lt;/code&gt;&lt;/a&gt; method. Note that by calling &lt;code&gt;Number()&lt;/code&gt; on the String returned by &lt;code&gt;toFixed&lt;/code&gt;, we get a Number whose String representation has no trailing zeroes (thanks to the way JavaScript computes the String representation of a Number, discussed earlier in this answer).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; simplemente podemos usar el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed&quot;&gt; &lt;code&gt;toFixed&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Fijo&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que al llamar a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en la cadena devuelta por &lt;/font&gt;&lt;/font&gt; &lt;code&gt;toFixed&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , obtenemos un n&amp;uacute;mero cuya representaci&amp;oacute;n de cadena no tiene ceros finales (gracias a la forma en que JavaScript calcula la representaci&amp;oacute;n de cadena de un n&amp;uacute;mero, discutido anteriormente en esta respuesta).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0f0c4ff59640480547b46eb98247d0405dde5a2" translate="yes" xml:space="preserve">
          <source>Here, also is one function I wrote to do arithmetic rounding correctly. You can test it yourself.</source>
          <target state="translated">Aquí también hay una función que escribí para hacer correctamente el redondeo aritmético.Puedes probarlo tú mismo.</target>
        </trans-unit>
        <trans-unit id="75553f548ebe8d7c4d7be06075a2ad90b25c726b" translate="yes" xml:space="preserve">
          <source>How can I do this in JavaScript?</source>
          <target state="translated">¿Cómo puedo hacer esto en JavaScript?</target>
        </trans-unit>
        <trans-unit id="379bf1ec8b931f6919ae70cbdb99b7a15e4424b6" translate="yes" xml:space="preserve">
          <source>I found this over on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round&quot;&gt;MDN&lt;/a&gt;. Their way avoids the problem with 1.005 that was &lt;a href=&quot;https://stackoverflow.com/questions/11832914/round-up-to-2-decimal-places-in-javascript#comment24719818_11832950&quot;&gt;mentioned&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Encontr&amp;eacute; esto en &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MDN&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Su manera evita el problema con 1.005 que se &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/11832914/round-up-to-2-decimal-places-in-javascript#comment24719818_11832950&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mencion&amp;oacute;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="070221396ffd7adc80f964d497ffbcc8f1956377" translate="yes" xml:space="preserve">
          <source>I guess, this is because 1.555 is actually something like float 1.55499994 behind the scenes.</source>
          <target state="translated">Supongo que esto se debe a que 1.555 es en realidad algo así como el flotador 1.55499994 entre bastidores.</target>
        </trans-unit>
        <trans-unit id="07e838235f2a025cd47854a685499d5a0537ecfb" translate="yes" xml:space="preserve">
          <source>I removed the variant &lt;code&gt;n.toFixed(2)&lt;/code&gt;, because it is not correct. Thank you @avalanche1</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;n.toFixed(2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; la variante &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;n.toFixed (2)&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , porque no es correcta. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Gracias @ avalanche1&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="48bd35342cfdaf130a7708310f7a72f622b696f6" translate="yes" xml:space="preserve">
          <source>I'd like to round at most 2 decimal places, but &lt;em&gt;only if necessary&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Me gustar&amp;iacute;a redondear como m&amp;aacute;ximo 2 decimales, pero &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;solo si es necesario&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec800790fcee0bf08442c4630dae0d9ba7b6d988" translate="yes" xml:space="preserve">
          <source>If the value is a number:</source>
          <target state="translated">Si el valor es un número:</target>
        </trans-unit>
        <trans-unit id="b1fefa7ba2439d746003f46853a7371ff731d113" translate="yes" xml:space="preserve">
          <source>If the value is a text type:</source>
          <target state="translated">Si el valor es un tipo de texto:</target>
        </trans-unit>
        <trans-unit id="e41c41447951ebc94d036fd32ec620302036e867" translate="yes" xml:space="preserve">
          <source>If you are open to libraries you can use &lt;a href=&quot;https://github.com/MikeMcl/bignumber.js/&quot;&gt;bignumber.js&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si est&amp;aacute; abierto a las bibliotecas, puede usar &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/MikeMcl/bignumber.js/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bignumber.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc26938bf0e0296802c89e07ccde26e1ab90731a" translate="yes" xml:space="preserve">
          <source>If you are using lodash library, you can use the round method of lodash like following.</source>
          <target state="translated">Si usas la biblioteca de lodash,puedes usar el método redondo de lodash como el siguiente.</target>
        </trans-unit>
        <trans-unit id="3216546a05d95fdf5f5508347421f9837590b56b" translate="yes" xml:space="preserve">
          <source>If you need to be strict and add digits just if needed it can use &lt;code&gt;replace&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si necesita ser estricto y agregar d&amp;iacute;gitos solo si es necesario, puede usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;replace&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a938b4696af9e98610818f1d8d206757dad7ae27" translate="yes" xml:space="preserve">
          <source>If your project uses jQuery or lodash, you can also find proper &lt;code&gt;round&lt;/code&gt; method in the libraries.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si su proyecto usa jQuery o lodash, tambi&amp;eacute;n puede encontrar el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;round&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; adecuado &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en las bibliotecas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6af9e62dcf39a0d15e0f97e5a60d274500525b0b" translate="yes" xml:space="preserve">
          <source>In fact, in the code I'm using &lt;code&gt;ESPILON_RATE = 1 + 4 * Number.EPSILON&lt;/code&gt; and &lt;code&gt;EPSILON_ZERO = 4 * Number.MIN_VALUE&lt;/code&gt; (four times the epsilon), because I want an equality checker loose enough for cumulating floating point error.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De hecho, en el c&amp;oacute;digo estoy usando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ESPILON_RATE = 1 + 4 * Number.EPSILON&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;EPSILON_ZERO = 4 * Number.MIN_VALUE&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (cuatro veces el epsilon), porque quiero un verificador de igualdad lo suficientemente suelto para acumular errores de coma flotante.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ef69761016065df342a41f1ba61cbdee1af2e52f" translate="yes" xml:space="preserve">
          <source>In general, rounding is done by scaling: &lt;code&gt;round(num / p) * p&lt;/code&gt;</source>
          <target state="translated">En general, el redondeo se realiza escalando: &lt;code&gt;round(num / p) * p&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="79d70dcb4f9ee8b7d94ed9539586cc73c0d399da" translate="yes" xml:space="preserve">
          <source>Input:</source>
          <target state="translated">Input:</target>
        </trans-unit>
        <trans-unit id="5bdb51e539dd788122b75e12613282cb9a59033d" translate="yes" xml:space="preserve">
          <source>It converts it to a string, and then back into an integer / float.</source>
          <target state="translated">Lo convierte en una cuerda,y luego de nuevo en un flotador entero.</target>
        </trans-unit>
        <trans-unit id="e7f26dce8602d2aa4e2f07b9f0b39e5804a7316d" translate="yes" xml:space="preserve">
          <source>It doesn't solve the '1.005 rounding problem' though - since it is intrinsic to how &lt;a href=&quot;https://softwareengineering.stackexchange.com/questions/101163/what-causes-floating-point-rounding-errors&quot;&gt;float fractions are being processed&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, no resuelve el 'problema de redondeo 1.005', ya que es intr&amp;iacute;nseco a c&amp;oacute;mo &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://softwareengineering.stackexchange.com/questions/101163/what-causes-floating-point-rounding-errors&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se procesan las fracciones flotantes&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bb18705dfa4dbaefc58019dd86183424f5d60d6a" translate="yes" xml:space="preserve">
          <source>It may work for you,</source>
          <target state="translated">Puede que funcione para ti,</target>
        </trans-unit>
        <trans-unit id="9db4057b0b1aefd3eabe9d5558fa88ce0408b22f" translate="yes" xml:space="preserve">
          <source>It seems like &lt;code&gt;Math.round&lt;/code&gt; is a better solution. &lt;strong&gt;But it is not!&lt;/strong&gt; In some cases it will &lt;strong&gt;NOT&lt;/strong&gt; round correctly:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Parece que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Math.round&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una mejor soluci&amp;oacute;n. &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iexcl;Pero no lo es! &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En algunos casos &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NO se&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; redondear&amp;aacute; correctamente:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de7e2f930d8192a22533ff7c52eeb7a294e46200" translate="yes" xml:space="preserve">
          <source>It's not useful when the value comes from a direct source (e.g.: literal, user input or sensor).</source>
          <target state="translated">No es útil cuando el valor proviene de una fuente directa (por ejemplo:literal,entrada de usuario o sensor).</target>
        </trans-unit>
        <trans-unit id="d16bae6ae960069cfbe9eb6b916a4ba5bc5ae155" translate="yes" xml:space="preserve">
          <source>Just use native code &lt;code&gt;.toFixed()&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Simplemente use el c&amp;oacute;digo nativo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.toFixed()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b1a5d323275c298c4aa9b8992ef25578960b7c0" translate="yes" xml:space="preserve">
          <source>Lately, I use a function similar to this one for comparing numbers epsilon-aware:</source>
          <target state="translated">Últimamente,utilizo una función similar a ésta para comparar los números que conoce Épsilon:</target>
        </trans-unit>
        <trans-unit id="adb23d3b5115886051bb54739f5c553032bc9dc7" translate="yes" xml:space="preserve">
          <source>Like @maganap and some peoples have pointed out, it's best to add &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON&quot;&gt;&lt;code&gt;Number.EPSILON&lt;/code&gt;&lt;/a&gt; before multiplying:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como @maganap y algunas personas han se&amp;ntilde;alado, es mejor agregar &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON&quot;&gt; &lt;code&gt;Number.EPSILON&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; antes de multiplicar:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2787e27648a8b92aefd69a68e92ccec35c88a574" translate="yes" xml:space="preserve">
          <source>MarkG and Lavamantis offered a much better solution than the one that has been accepted. It's a shame they don't get more upvotes!</source>
          <target state="translated">MarkG y Lavamantis ofrecieron una solución mucho mejor que la que ha sido aceptada.¡Es una pena que no consigan más votos favorables!</target>
        </trans-unit>
        <trans-unit id="e9cb187413866bee5719685fd8cb0c4a9882de1d" translate="yes" xml:space="preserve">
          <source>MarkG's answer is the correct one.  Here's a generic extension for any number of decimal places.</source>
          <target state="translated">La respuesta de MarkG es la correcta.Aquí hay una extensión genérica para cualquier número de decimales.</target>
        </trans-unit>
        <trans-unit id="428f9655e67ff46265d67320cd0ccfe0319be407" translate="yes" xml:space="preserve">
          <source>Math.round(num) vs num.toFixed(0) and browser inconsistencies</source>
          <target state="translated">Math.round(num)vs num.toFixed(0)e inconsistencias del navegador</target>
        </trans-unit>
        <trans-unit id="ff707f109be190d332352b938ccc8b3c4e06e97c" translate="yes" xml:space="preserve">
          <source>My use-case is &lt;a href=&quot;https://www.npmjs.com/package/doormen&quot;&gt;an assertion + data validation lib&lt;/a&gt; I'm developing for many years.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mi caso de uso es &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.npmjs.com/package/doormen&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;una afirmaci&amp;oacute;n + validaci&amp;oacute;n de datos lib&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que estoy desarrollando durante muchos a&amp;ntilde;os.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="59377d5faf3749e97822f1f1971ecded10a972a6" translate="yes" xml:space="preserve">
          <source>No one seems to be aware of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON&quot;&gt;&lt;code&gt;Number.EPSILON&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nadie parece estar al tanto de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON&quot;&gt; &lt;code&gt;Number.EPSILON&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ca5e324249ddd6187831ef808ea93363a2b26711" translate="yes" xml:space="preserve">
          <source>Of course, none of this discussion has directly answered what &lt;code&gt;roundTo2DP(m)&lt;/code&gt;&lt;em&gt;should&lt;/em&gt; return. If &lt;code&gt;m&lt;/code&gt;'s exact value is 0.01499999999999999944488848768742172978818416595458984375, but its String representation is '0.015', then what is the &lt;em&gt;correct&lt;/em&gt; answer - mathematically, practically, philosophically, or whatever - when we round it to two decimal places?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por supuesto, nada de esta discusi&amp;oacute;n ha respondido directamente qu&amp;eacute; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;roundTo2DP(m)&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;deber&amp;iacute;a&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; devolver. Si el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;valor exacto de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;m&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es 0.01499999999999999944488848768742172978818416595458984375, pero su representaci&amp;oacute;n de cadena es '0.015', entonces &amp;iquest;cu&amp;aacute;l es la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;respuesta &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;correcta&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , matem&amp;aacute;tica, pr&amp;aacute;ctica, filos&amp;oacute;fica o lo que sea, cuando redondeamos a dos decimales?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9de972621e113a6822f18823d2063f32eba7fcf6" translate="yes" xml:space="preserve">
          <source>On the other hand, you probably want to respect the binary floating point value and round downwards when your value is from an inherently continuous scale - for instance, if it's a reading from a sensor.</source>
          <target state="translated">Por otro lado,probablemente quieras respetar el valor binario de la coma flotante y redondear hacia abajo cuando tu valor es de una escala intrínsecamente continua,por ejemplo,si es una lectura de un sensor.</target>
        </trans-unit>
        <trans-unit id="6bbbecb3438fd6440ef7f77e7aea3b5d8bdb6531" translate="yes" xml:space="preserve">
          <source>One can use &lt;code&gt;.toFixed(NumberOfDecimalPlaces)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Uno puede usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.toFixed(NumberOfDecimalPlaces)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="576fa80104f1e9d06e3d6fd8ed6dedc8629cc5e4" translate="yes" xml:space="preserve">
          <source>One way to achieve such a rounding &lt;em&gt;only if necessary&lt;/em&gt; is to use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString&quot;&gt;Number.prototype.toLocaleString()&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una forma de lograr dicho redondeo &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;solo si&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;necesario&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es usar &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Number.prototype.toLocaleString ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="c1d0e0227161567c5c8a46e530e257ab7932de2e" translate="yes" xml:space="preserve">
          <source>Round to at most 2 decimal places (only if necessary)</source>
          <target state="translated">Redondea a un máximo de 2 decimales (sólo si es necesario)</target>
        </trans-unit>
        <trans-unit id="1b3ea2091e0125bb10b50729a167add8b2875170" translate="yes" xml:space="preserve">
          <source>Since ES6 there is a 'proper' way (without overriding statics and creating workarounds) to do this by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Number/toPrecision&quot;&gt;using toPrecision&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Desde ES6 hay una forma 'adecuada' (sin anular las estad&amp;iacute;sticas y crear soluciones) para hacer esto &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Number/toPrecision&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;usando toPrecision&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c131372ed2ef9d5afca4b7ffe157d796543820d0" translate="yes" xml:space="preserve">
          <source>So far, it looks perfect for me.
I hope it will help.</source>
          <target state="translated">Hasta ahora,parece perfecto para mí.Espero que ayude.</target>
        </trans-unit>
        <trans-unit id="d9eb0d47c4da3723a4af8473544b8419da09be27" translate="yes" xml:space="preserve">
          <source>So when I write &lt;code&gt;m = 0.0150000000000000001&lt;/code&gt;, the &lt;em&gt;exact value of &lt;code&gt;m&lt;/code&gt;&lt;/em&gt; that I end up with is closer to &lt;code&gt;0.01&lt;/code&gt; than it is to &lt;code&gt;0.02&lt;/code&gt;. And yet, if I convert &lt;code&gt;m&lt;/code&gt; to a String...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, cuando escribo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;m = 0.0150000000000000001&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , el &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;valor exacto de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;m&lt;/code&gt; con el&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que termino est&amp;aacute; m&amp;aacute;s cerca de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0.01&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0.02&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y sin embargo, si convierto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;m&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en una cadena ...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b8d42473f0fced361a981334f253d2ee119f7bd" translate="yes" xml:space="preserve">
          <source>Suppose we have a function, &lt;code&gt;roundTo2DP(num)&lt;/code&gt;, that takes a float as an argument and returns a value rounded to 2 decimal places. What should each of these expressions evaluate to?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Supongamos que tenemos una funci&amp;oacute;n, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;roundTo2DP(num)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que toma un flotante como argumento y devuelve un valor redondeado a 2 decimales. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Qu&amp;eacute; debe evaluar cada una de estas expresiones?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6bfb5e628c414a067972ade779b24a3a568b3fd7" translate="yes" xml:space="preserve">
          <source>The 'obvious' answer is that the first example should round to 0.01 (because it's closer to 0.01 than to 0.02) while the other two should round to 0.02 (because 0.0150000000000000001 is closer to 0.02 than to 0.01, and because 0.015 is exactly halfway between them and there is a mathematical convention that such numbers get rounded up).</source>
          <target state="translated">La respuesta &quot;obvia&quot; es que el primer ejemplo debería redondearse a 0,01 (porque está más cerca de 0,01 que de 0,02)mientras que los otros dos deberían redondearse a 0,02 (porque 0,0150000000000000001 está más cerca de 0,02 que de 0,01,y porque 0,015 está exactamente a mitad de camino entre ellos y hay una convención matemática de que tales números se redondean hacia arriba).</target>
        </trans-unit>
        <trans-unit id="c544245c0ffab197bc3584e928cfc903bd4d3964" translate="yes" xml:space="preserve">
          <source>The answer can be found in the ECMAScript specification, in section &lt;a href=&quot;http://www.ecma-international.org/ecma-262/7.0/#sec-tostring-applied-to-the-number-type&quot;&gt;&lt;em&gt;7.1.12.1: ToString applied to the Number type&lt;/em&gt;&lt;/a&gt;. Here the rules for converting some Number &lt;em&gt;m&lt;/em&gt; to a String are laid down. The key part is point 5, in which an integer &lt;em&gt;s&lt;/em&gt; is generated whose digits will be used in the String representation of &lt;em&gt;m&lt;/em&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La respuesta se puede encontrar en la especificaci&amp;oacute;n ECMAScript, en la secci&amp;oacute;n &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/7.0/#sec-tostring-applied-to-the-number-type&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;7.1.12.1: ToString aplicado al tipo Number&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Aqu&amp;iacute; se establecen las reglas para convertir un n&amp;uacute;mero &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en una cadena. La parte clave es el punto 5, en el que &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se genera &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;un n&amp;uacute;mero entero &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;s&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cuyos d&amp;iacute;gitos se utilizar&amp;aacute;n en la representaci&amp;oacute;n de cadena de &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="df090e3c30fa1d731e05b5ce4f35661d5e7baf7c" translate="yes" xml:space="preserve">
          <source>The catch, which you may have guessed, is that &lt;code&gt;roundTo2DP&lt;/code&gt;&lt;em&gt;cannot possibly&lt;/em&gt; be implemented to give those obvious answers, because all three numbers passed to it are &lt;em&gt;the same number&lt;/em&gt;. IEEE 754 binary floating point numbers (the kind used by JavaScript) can't exactly represent most non-integer numbers, and so all three numeric literals above get rounded to a nearby valid floating point number. This number, as it happens, is &lt;em&gt;exactly&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El problema, que puede haber adivinado, es que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;roundTo2DP&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no se&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; puede implementar para dar esas respuestas obvias, porque los tres n&amp;uacute;meros que se le pasan son &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;el mismo n&amp;uacute;mero&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los n&amp;uacute;meros de punto flotante binario IEEE 754 (el tipo utilizado por JavaScript) no pueden representar exactamente la mayor&amp;iacute;a de los n&amp;uacute;meros no enteros, por lo que los tres literales num&amp;eacute;ricos anteriores se redondean a un n&amp;uacute;mero de punto flotante v&amp;aacute;lido cercano. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este n&amp;uacute;mero, como sucede, es &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;exactamente&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="17eaea0baa02c017f3ef107833be95e25d292bd7" translate="yes" xml:space="preserve">
          <source>The function above is &lt;em&gt;probably&lt;/em&gt; what you want to use to avoid users ever witnessing numbers that they have entered being rounded wrongly.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La funci&amp;oacute;n anterior es &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;probablemente&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; lo que desea utilizar para evitar que los usuarios sean testigos de que los n&amp;uacute;meros que ingresaron se redondearon incorrectamente.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7a1df7bf3e06ffb09c0be63d9ac99109b43decd2" translate="yes" xml:space="preserve">
          <source>The key part here is the requirement that &quot;&lt;em&gt;k&lt;/em&gt; is as small as possible&quot;. What that requirement amounts to is a requirement that, given a Number &lt;code&gt;m&lt;/code&gt;, the value of &lt;code&gt;String(m)&lt;/code&gt; must have &lt;em&gt;the least possible number of digits&lt;/em&gt; while still satisfying the requirement that &lt;code&gt;Number(String(m)) === m&lt;/code&gt;. Since we already know that &lt;code&gt;0.015 === 0.0150000000000000001&lt;/code&gt;, it's now clear why &lt;code&gt;String(0.0150000000000000001) === '0.015'&lt;/code&gt; must be true.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La parte clave aqu&amp;iacute; es el requisito de que &quot; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;k&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es lo m&amp;aacute;s peque&amp;ntilde;o posible&quot;. Lo que equivale a ese requisito es un requisito de que, dado un N&amp;uacute;mero &lt;/font&gt;&lt;/font&gt; &lt;code&gt;m&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , el valor de la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String(m)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; debe tener &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;el menor n&amp;uacute;mero posible de d&amp;iacute;gitos&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sin dejar de cumplir el requisito de que el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number(String(m)) === m&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Como ya sabemos que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0.015 === 0.0150000000000000001&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , ahora est&amp;aacute; claro por qu&amp;eacute; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String(0.0150000000000000001) === '0.015'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; debe ser verdadero.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9304dfd5b20a84c90c202df6981188a19c4637d" translate="yes" xml:space="preserve">
          <source>The value being represented is inherently discrete, e.g. an amount of currency in a 3-decimal-place currency like dinars. In this case, the &lt;em&gt;true&lt;/em&gt; value of a Number like 0.015 &lt;em&gt;is&lt;/em&gt; 0.015, and the 0.0149999999... representation that it gets in binary floating point is a rounding error. (Of course, many will argue, reasonably, that you should use a decimal library for handling such values and never represent them as binary floating point Numbers in the first place.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El valor que se representa es intr&amp;iacute;nsecamente discreto, por ejemplo, una cantidad de moneda en una moneda de 3 decimales como dinares. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En este caso, el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;valor &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;verdadero&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de un N&amp;uacute;mero como 0.015 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;es&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 0.015, y la representaci&amp;oacute;n 0.0149999999 ... que obtiene en coma flotante binaria es un error de redondeo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Por supuesto, muchos argumentar&amp;aacute;n, razonablemente, que debe usar una biblioteca decimal para manejar tales valores y nunca representarlos como N&amp;uacute;meros de punto flotante binario en primer lugar).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0606e71f981fa36e43313e05fde67bea41c0e859" translate="yes" xml:space="preserve">
          <source>The value was typed by a user. In this case, again, the exact decimal number entered is more 'true' than the nearest binary floating point representation.</source>
          <target state="translated">El valor fue tecleado por un usuario.En este caso,de nuevo,el número decimal exacto introducido es más &quot;verdadero&quot; que la representación binaria en coma flotante más cercana.</target>
        </trans-unit>
        <trans-unit id="8727bcf5e244c818b657462e6c613378e3d0d0c7" translate="yes" xml:space="preserve">
          <source>Then you would simply pass in the value.</source>
          <target state="translated">Entonces simplemente pasarías el valor.</target>
        </trans-unit>
        <trans-unit id="f76d9f0b8979b7733602f015e3ba04fd7d5a9502" translate="yes" xml:space="preserve">
          <source>There are a couple of ways to do that. For people like me, the Lodash's variant</source>
          <target state="translated">Hay un par de maneras de hacerlo.Para gente como yo,la variante de Lodash</target>
        </trans-unit>
        <trans-unit id="068e2e768c65c4ad778691dec9f43778213541e5" translate="yes" xml:space="preserve">
          <source>There is a downside that values like 1.5 will give &quot;1.50&quot; as the output. A fix suggested by @minitech:</source>
          <target state="translated">Hay un inconveniente en que valores como 1,5 darán &quot;1,50&quot; como resultado.Una solución sugerida por @minitech:</target>
        </trans-unit>
        <trans-unit id="38387a87e059184ebabf02e5e267b74130d78c64" translate="yes" xml:space="preserve">
          <source>There is no single correct answer to this. It depends upon your use case. You probably want to respect the String representation and round upwards when:</source>
          <target state="translated">No hay una sola respuesta correcta para esto.Depende de su caso de uso.Probablemente quieras respetar la representación de la cuerda y redondear hacia arriba cuando:</target>
        </trans-unit>
        <trans-unit id="de80e004c8c33e4edbcec58d2afcf0444b42e1b1" translate="yes" xml:space="preserve">
          <source>These two approaches require different code. To respect the String representation of the Number, we can (with quite a bit of reasonably subtle code) implement our own rounding that acts directly on the String representation, digit by digit, using the same algorithm you would've used in school when you were taught how to round numbers. Below is an example which respects the OP's requirement of representing the number to 2 decimal places &quot;only when necessary&quot; by stripping trailing zeroes after the decimal point; you may, of course, need to tweak it to your precise needs.</source>
          <target state="translated">Estos dos enfoques requieren un código diferente.Para respetar la representación del Número en forma de Cadena,podemos (con bastante código razonablemente sutil)implementar nuestro propio redondeo que actúa directamente sobre la representación de la Cadena,dígito por dígito,usando el mismo algoritmo que habrías usado en la escuela cuando te enseñaron a redondear los números.A continuación se muestra un ejemplo que respeta el requisito de la OP de representar el número con dos decimales &quot;sólo cuando sea necesario&quot;,eliminando los ceros tras el punto decimal;por supuesto,es posible que tenga que adaptarlo a sus necesidades concretas.</target>
        </trans-unit>
        <trans-unit id="9cc618b8fa630d85d81948907d250ac34fd31d00" translate="yes" xml:space="preserve">
          <source>This is the simplest, more elegant solution (and I am the best of the world;):</source>
          <target state="translated">Esta es la solución más simple y elegante (y yo soy el mejor del mundo):</target>
        </trans-unit>
        <trans-unit id="03640ca35a3d05dde0a5a618e1942cbb23d4aba2" translate="yes" xml:space="preserve">
          <source>This may help you:</source>
          <target state="translated">Esto puede ayudarte:</target>
        </trans-unit>
        <trans-unit id="e3a53ec34f6c2117910f386788bc9d743450046a" translate="yes" xml:space="preserve">
          <source>This question is complicated.</source>
          <target state="translated">Esta pregunta es complicada.</target>
        </trans-unit>
        <trans-unit id="13ea220ac7311f1b88e69de6b5b2c466b9a1e184" translate="yes" xml:space="preserve">
          <source>This will provide exactly the output you expect, but as strings. You can still convert those back to numbers if that's not the data type you expect.</source>
          <target state="translated">Esto proporcionará exactamente la salida que esperas,pero como cuerdas.Todavía puedes convertir esos datos en números si no es el tipo de datos que esperas.</target>
        </trans-unit>
        <trans-unit id="9845257528e47964d89c7b7b37c418107088920b" translate="yes" xml:space="preserve">
          <source>To round up, use this:</source>
          <target state="translated">Para redondear,usa esto:</target>
        </trans-unit>
        <trans-unit id="cdb9e11f95eb4c3103b6460c4ec8869fcb19ed0a" translate="yes" xml:space="preserve">
          <source>Try this &lt;strong&gt;light weight&lt;/strong&gt; solution:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Prueba esta &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;soluci&amp;oacute;n &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ligera&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c83890cd9cde34e76f22e6c092f33233337bbeef" translate="yes" xml:space="preserve">
          <source>Unit test:</source>
          <target state="translated">Prueba de la unidad:</target>
        </trans-unit>
        <trans-unit id="aa46e3b43b8698bd79a3510bffe6645c067a8510" translate="yes" xml:space="preserve">
          <source>Update 1</source>
          <target state="translated">Actualización 1</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="1a83ebd9832b047f8e615f8f8336e3bea08f97fc" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Math.round(num * 100) / 100&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Utilice &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Math.round(num * 100) / 100&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5bd604b7778cb749d711fce9848c8397bb74f3d3" translate="yes" xml:space="preserve">
          <source>Use it with:</source>
          <target state="translated">Úsalo con:</target>
        </trans-unit>
        <trans-unit id="287f960a3fb8c81611e2058a39f3f4dbd770ca5c" translate="yes" xml:space="preserve">
          <source>Use something like this 
&quot;parseFloat(parseFloat(value).toFixed(2))&quot;</source>
          <target state="translated">Usa algo como esto &quot;parseFloat(parseFloat(value).toFixed(2))&quot;</target>
        </trans-unit>
        <trans-unit id="1e246aa236aacfd965aad87ba2d103b9f3166262" translate="yes" xml:space="preserve">
          <source>Use this function &lt;code&gt;Number(x).toFixed(2);&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Utilice esta funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number(x).toFixed(2);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f36b531ef3ac37932099200af1af63e95a073826" translate="yes" xml:space="preserve">
          <source>Using the exponential notation handles rounding of +ve numbers, correctly.
However, this method fails to round -ve edge cases correctly.</source>
          <target state="translated">Usar la notación exponencial maneja el redondeo de los números +ve,correctamente.Sin embargo,este método no redondea correctamente los casos de los bordes de +ve.</target>
        </trans-unit>
        <trans-unit id="782632eccf1234978150e666e6c53e7e804c43c0" translate="yes" xml:space="preserve">
          <source>You can see that all three numbers are the same at your browser console, Node shell, or other JavaScript interpreter. Just compare them:</source>
          <target state="translated">Puedes ver que los tres números son iguales en la consola de tu navegador,en el shell del nodo o en otro intérprete de JavaScript.Simplemente compáralos:</target>
        </trans-unit>
        <trans-unit id="3c94090f45521fa505560d818d146d87684fe4b4" translate="yes" xml:space="preserve">
          <source>You can use</source>
          <target state="translated">Puedes usar</target>
        </trans-unit>
        <trans-unit id="dec1b74b3d17f081a5bca5eb814e512fffe48c57" translate="yes" xml:space="preserve">
          <source>You could enhance it to round to any arbitrary number of decimals by adding a second parameter.</source>
          <target state="translated">Podrías mejorarlo para redondearlo a cualquier número arbitrario de decimales añadiendo un segundo parámetro.</target>
        </trans-unit>
        <trans-unit id="a0e67eb620416238a8b294395b73dca4cd9691e0" translate="yes" xml:space="preserve">
          <source>You might want to go ahead and make a separate function to do it for you though:</source>
          <target state="translated">Sin embargo,tal vez quieras seguir adelante y hacer una función separada para hacerlo por ti:</target>
        </trans-unit>
        <trans-unit id="1fbe39fdfef0c51e98d97ae9df64c7e3ee2085a2" translate="yes" xml:space="preserve">
          <source>You should use:</source>
          <target state="translated">Deberías usar:</target>
        </trans-unit>
        <trans-unit id="1975acf7e3e1614d24accc2456f01338f73bcf5d" translate="yes" xml:space="preserve">
          <source>for more information, you can have a look at this link</source>
          <target state="translated">para más información,puede echar un vistazo a este enlace</target>
        </trans-unit>
        <trans-unit id="c9736e8b5c06255cf70c5c66cbb121f59efb655d" translate="yes" xml:space="preserve">
          <source>let &lt;em&gt;n&lt;/em&gt;, &lt;em&gt;k&lt;/em&gt;, and &lt;em&gt;s&lt;/em&gt; be integers such that &lt;em&gt;k&lt;/em&gt; &amp;ge; 1, 10&lt;sup&gt;&lt;i&gt;k&lt;/i&gt;-1&lt;/sup&gt; &amp;le; &lt;em&gt;s&lt;/em&gt; &amp;lt; 10&lt;sup&gt;&lt;i&gt;k&lt;/i&gt;&lt;/sup&gt;, the Number value for &lt;em&gt;s&lt;/em&gt; &amp;times; 10&lt;sup&gt;&lt;i&gt;n&lt;/i&gt;-&lt;i&gt;k&lt;/i&gt;&lt;/sup&gt; is &lt;em&gt;m&lt;/em&gt;, and &lt;em&gt;k&lt;/em&gt; is as small as possible. Note that k is the number of digits in the decimal representation of &lt;em&gt;s&lt;/em&gt;, that &lt;em&gt;s&lt;/em&gt; is not divisible by 10, and that the least significant digit of &lt;em&gt;s&lt;/em&gt; is not necessarily uniquely determined by these criteria.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;supongamos que &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;n&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;k&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;s&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; son n&amp;uacute;meros enteros tales que &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;k&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;ge; 1, 10 &lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;i&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;k&lt;/font&gt;&lt;/font&gt;&lt;/i&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -1&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;le; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;s&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;lt;10 &lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;i&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;k&lt;/font&gt;&lt;/font&gt;&lt;/i&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , el valor de N&amp;uacute;mero para &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;s&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;times; 10 &lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;i&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;n&lt;/font&gt;&lt;/font&gt;&lt;/i&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt;&lt;i&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;k&lt;/font&gt;&lt;/font&gt;&lt;/i&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;k&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es lo m&amp;aacute;s peque&amp;ntilde;o posible. Tenga en cuenta que k es el n&amp;uacute;mero de d&amp;iacute;gitos en la representaci&amp;oacute;n decimal de &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;s&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;s&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no es divisible por 10, y que el d&amp;iacute;gito menos significativo de &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;s&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no est&amp;aacute; necesariamente determinado &amp;uacute;nicamente por estos criterios.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="79a55b28f42f64f7f17d4f2f7c30cbe7a2bd50a6" translate="yes" xml:space="preserve">
          <source>then you can just &lt;code&gt;parseFloat&lt;/code&gt; and zeroes will 'go away'.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;entonces puedes simplemente &lt;/font&gt;&lt;/font&gt; &lt;code&gt;parseFloat&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y los ceros 'desaparecer&amp;aacute;n'.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9b4f0c3f620d92bff0c5ce1441899f7830fa702" translate="yes" xml:space="preserve">
          <source>to know the difference between toFixed and round. You can have a look at &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/566564/javascript-functions-math-roundnum-vs-num-tofixed0-and-browser-inconsistenci&quot;&gt;Math.round(num) vs num.toFixed(0) and browser inconsistencies&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;para saber la diferencia entre toFixed y round. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede echar un vistazo a &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/566564/javascript-functions-math-roundnum-vs-num-tofixed0-and-browser-inconsistenci&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Math.round (num) vs num.toFixed (0) y las inconsistencias del navegador&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="88e23d7331fc1070d7d98a821a40134dbbdd7cca" translate="yes" xml:space="preserve">
          <source>toFixed() will also &lt;strong&gt;NOT&lt;/strong&gt; round correctly in some cases (tested in Chrome v.55.0.2883.87)!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;toFixed () ser&amp;aacute; tambi&amp;eacute;n &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NO&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ronda correctamente en algunos casos (probado en Chrome v.55.0.2883.87)!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a851e1ca9928f5dba505859dc2784363657f289" translate="yes" xml:space="preserve">
          <source>which is closer to 0.01 than to 0.02.</source>
          <target state="translated">que está más cerca de 0,01 que de 0,02.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
