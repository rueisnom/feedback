<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/11321491">
    <body>
      <group id="11321491">
        <trans-unit id="6097a10580050b75ec7d85d9d5ee9d68c82121ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.5/en/identifiers.html&quot;&gt;According to MySQL documentation&lt;/a&gt;, you do not need to quote (backtick) identifiers using the following character set:</source>
          <target state="translated">&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.5/en/identifiers.html&quot;&gt;Согласно документации MySQL&lt;/a&gt; , вам не нужно заключать в кавычки (backtick) идентификаторы, используя следующий набор символов:</target>
        </trans-unit>
        <trans-unit id="90045b0d033e2dd619e6383df8041179e609f3e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;&lt;/code&gt; or &lt;code&gt;'&lt;/code&gt; are used for enclosing string-like values &lt;code&gt;&quot;26-01-2014 00:00:00&quot;&lt;/code&gt; or &lt;code&gt;'26-01-2014 00:00:00'&lt;/code&gt; . These symbols are only for strings, not aggregate functions like &lt;code&gt;now&lt;/code&gt;, &lt;code&gt;sum&lt;/code&gt;, or &lt;code&gt;max&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&lt;/code&gt; или &lt;code&gt;'&lt;/code&gt; используются для включения строковых значений &lt;code&gt;&quot;26-01-2014 00:00:00&quot;&lt;/code&gt; или &amp;laquo; &lt;code&gt;'26-01-2014 00:00:00'&lt;/code&gt; . Эти символы предназначены только для строк, а не для агрегатных функций, как &lt;code&gt;now&lt;/code&gt; , &lt;code&gt;sum&lt;/code&gt; или &lt;code&gt;max&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1d59f5f8b081c1446e0a241557283a4d5bc4cd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;/code&gt; for enclosing string literals</source>
          <target state="translated">для включения строковых литералов</target>
        </trans-unit>
        <trans-unit id="a80de0ca330c2f2aaefe4b688914a9cc7a012e95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt; simply enclose parts of a query e.g.   &lt;code&gt;select `column_name` from `table_name` where (id='2' and gender='male') or name='rakesh'&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; и &lt;code&gt;)&lt;/code&gt; просто заключите части запроса, например, &lt;code&gt;select `column_name` from `table_name` where (id='2' and gender='male') or name='rakesh'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b2f0352941e63498cd4c7fa4a455b1ce743796f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;123E10&lt;/code&gt; is a valid identifier name but also a valid &lt;code&gt;INTEGER&lt;/code&gt; literal.</source>
          <target state="translated">&lt;code&gt;123E10&lt;/code&gt; - это допустимое имя идентификатора, но также действительный литерал &lt;code&gt;INTEGER&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da38380bf2f05c4bece3b8989ad72606b9d3ac17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;`&lt;/code&gt;  is used for enclosing table or column names, e.g. &lt;code&gt;select `column_name` from `table_name` where id='2'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;`&lt;/code&gt; используется для включения имен таблиц или столбцов, например, &lt;code&gt;select `column_name` from `table_name` where id='2'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da03c042c5cf25afb1bafac2439fe779180a0bd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;`&lt;/code&gt; for enclosing identifiers such as table and column names</source>
          <target state="translated">&lt;code&gt;`&lt;/code&gt; для включения идентификаторов, таких как имена таблиц и столбцов</target>
        </trans-unit>
        <trans-unit id="e616ce30e908e2aa2c025c12fddf0941e9987928" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;`table_name`&lt;/code&gt;. &lt;code&gt;`column_name`&lt;/code&gt;   &amp;lt;-- Note: exclude &lt;code&gt;.&lt;/code&gt;  from back ticks.</source>
          <target state="translated">&lt;code&gt;`table_name`&lt;/code&gt; . &lt;code&gt;`column_name`&lt;/code&gt; &amp;lt;- Примечание: исключить &lt;code&gt;.&lt;/code&gt; от спины клещей.</target>
        </trans-unit>
        <trans-unit id="e9472c553def7914df498d93c687e68d18e0022d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(There are good answers above regarding the SQL nature of your question, but this may also be relevant if you are new to PHP.)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(Выше приведены хорошие ответы относительно природы вашего вопроса в SQL, но это также может быть актуально, если вы новичок в PHP.)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="deaf5aa7bf7c1c895ac2d93f5557710e2f50238c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;By default&lt;/em&gt; the &lt;code&gt;&quot;&lt;/code&gt; character can be used to enclose string literals just like &lt;code&gt;'&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;По умолчанию&lt;/em&gt; символ &amp;laquo;может использоваться для включения строковых литералов, как &lt;code&gt;'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="12fc96176da144173d5b5f6d12acdfe181173a67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Disclaimer:&lt;/strong&gt; So I thought I would add this as an &quot;FYI&quot; type of answer for those who are completely new to working with databases and who may not understand the technical terms described already.</source>
          <target state="translated">&lt;strong&gt;Отказ от ответственности:&lt;/strong&gt; поэтому я подумал, что добавлю это как ответ типа &amp;laquo;FYI&amp;raquo; для тех, кто совершенно новичок в работе с базами данных и может не понимать уже описанные технические термины.</target>
        </trans-unit>
        <trans-unit id="a19812fd99fa5716527f0685d3186fd7d816426a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you are denoting a column name with a table name then use back ticks like this:</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Если вы указываете имя столбца с именем таблицы, используйте следующие галочки:</target>
        </trans-unit>
        <trans-unit id="60895f279f726f13bb47c03b7e3172d30cdde826" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;I've been reading answers to similar questions on here for about 20 minutes, but it seems like there is no definitive answer to this question.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;Я читал ответы на подобные вопросы здесь около 20 минут, но, похоже, нет однозначного ответа на этот вопрос.&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="b83c40ec26f2f2e2a49118a4fad948bd11959972" translate="yes" xml:space="preserve">
          <source>A string is a sequence of bytes or characters, enclosed within either
  single quote (&amp;ldquo;'&amp;rdquo;) or double quote (&amp;ldquo;&quot;&amp;rdquo;) characters.</source>
          <target state="translated">Строка - это последовательность байтов или символов, заключенная в одинарные кавычки (&amp;laquo;'&amp;raquo;) или двойные кавычки (&amp;laquo;&amp;raquo; &amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="4615ed604badacba54d261f18d9acd38d9c535fb" translate="yes" xml:space="preserve">
          <source>AND as @MichaelBerkowski said</source>
          <target state="translated">И как сказал @MichaelBerkowski.</target>
        </trans-unit>
        <trans-unit id="2622820d29bda626c277ee00365f43ae9ee7a2a8" translate="yes" xml:space="preserve">
          <source>ANSI_QUOTES disabled</source>
          <target state="translated">ANSI_QUOTES отключен</target>
        </trans-unit>
        <trans-unit id="98cb3bec05013f28a22ddbdb7d1d65285553692f" translate="yes" xml:space="preserve">
          <source>ANSI_QUOTES enabled</source>
          <target state="translated">ANSI_QUOTES включен</target>
        </trans-unit>
        <trans-unit id="6b8f89108c71d3681d918d68fc197e69b138fb24" translate="yes" xml:space="preserve">
          <source>ASCII: &lt;code&gt;[0-9,a-z,A-Z$_]&lt;/code&gt; (basic Latin letters, digits 0-9, dollar, underscore)</source>
          <target state="translated">ASCII: &lt;code&gt;[0-9,a-z,A-Z$_]&lt;/code&gt; (основные латинские буквы, цифры 0-9, доллар, подчеркивание)</target>
        </trans-unit>
        <trans-unit id="adb5ad7318b3a95f2a3a3eec5e91188245c1f9fa" translate="yes" xml:space="preserve">
          <source>Also, in the above example, consider that &lt;code&gt;table&lt;/code&gt;, &lt;code&gt;col1&lt;/code&gt;, &lt;code&gt;val1&lt;/code&gt;, etc. may be variables.</source>
          <target state="translated">Также в приведенном выше примере &lt;code&gt;col1&lt;/code&gt; , что &lt;code&gt;table&lt;/code&gt; , col1 , &lt;code&gt;val1&lt;/code&gt; и т. Д. Могут быть переменными.</target>
        </trans-unit>
        <trans-unit id="9da9a87dfc3b82e06d404a5b2dc7b1df991317ef" translate="yes" xml:space="preserve">
          <source>Always quote identifiers since it is a good practice (quite a few questions on SO discuss this)</source>
          <target state="translated">Всегда цитируйте идентификаторы,так как это хорошая практика (достаточно много вопросов по SO обсуждать это)</target>
        </trans-unit>
        <trans-unit id="87b1a656c26103e950c3c0c57b60ec53877ef83c" translate="yes" xml:space="preserve">
          <source>And then there is &lt;code&gt;&quot;&lt;/code&gt; which is a special case. It could be used for &lt;em&gt;one&lt;/em&gt; of above-mentioned purposes at a time depending on MySQL server's &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html&quot;&gt;&lt;code&gt;sql_mode&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">И затем есть &lt;code&gt;&quot;&lt;/code&gt; это особый случай. Он может использоваться для &lt;em&gt;одной&lt;/em&gt; из вышеупомянутых целей одновременно в зависимости от &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html&quot;&gt; &lt;code&gt;sql_mode&lt;/code&gt; &lt;/a&gt; сервера MySQL :</target>
        </trans-unit>
        <trans-unit id="d79be8be1c06eef6b3594039b253c94737b212ba" translate="yes" xml:space="preserve">
          <source>And you could use a variable in PHP's double-quoted string:</source>
          <target state="translated">И вы можете использовать переменную в PHP в двойных кавычках:</target>
        </trans-unit>
        <trans-unit id="e78a5da35a0f4e859b76dbcbf684350f545aae93" translate="yes" xml:space="preserve">
          <source>BACKTICKS(`) are used around identifier names.</source>
          <target state="translated">BACKTICKS(`)используются вокруг имен идентификаторов.</target>
        </trans-unit>
        <trans-unit id="0eddaaa57762e06093cf16a2eca308a76210c356" translate="yes" xml:space="preserve">
          <source>Back-trip(`) is optional to use in SQL and is used for table name, db name and column names.</source>
          <target state="translated">Back-trip(`)опционально используется в SQL и используется для имен таблиц,db и колонок.</target>
        </trans-unit>
        <trans-unit id="e016ca66c68af56f6e1542b4497d8f527b313bcc" translate="yes" xml:space="preserve">
          <source>Backticks are generally used to indicate an &lt;code&gt;identifier&lt;/code&gt; and as well be &lt;strong&gt;safe&lt;/strong&gt; from accidentally using the &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/keywords.html&quot;&gt;Reserved Keywords&lt;/a&gt;.</source>
          <target state="translated">Обратные пометки обычно используются для обозначения &lt;code&gt;identifier&lt;/code&gt; а также для предотвращения случайного использования &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/keywords.html&quot;&gt;зарезервированных ключевых слов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4ac2eea9a3ab2e5ace13b460c95cc0edd70a77ac" translate="yes" xml:space="preserve">
          <source>Backticks are generally used to indicate an identifier and as well be safe from accidentally using the reserved keywords.</source>
          <target state="translated">Черные метки обычно используются для указания идентификатора,а также для защиты от случайного использования зарезервированных ключевых слов.</target>
        </trans-unit>
        <trans-unit id="c1f3c18db147bebab8ccfa118fd95403942a780a" translate="yes" xml:space="preserve">
          <source>Backticks are to be used for table and column identifiers, but are
  only necessary when the identifier is a &lt;code&gt;MySQL&lt;/code&gt; reserved keyword, or
  when the identifier contains whitespace characters or characters
  beyond a limited set (see below) It is often recommended to avoid
  using reserved keywords as column or table identifiers when possible,
  avoiding the quoting issue.</source>
          <target state="translated">Обратные метки должны использоваться для идентификаторов таблицы и столбца, но они необходимы только в том случае, если идентификатор является зарезервированным ключевым словом &lt;code&gt;MySQL&lt;/code&gt; или когда идентификатор содержит пробельные символы или символы за пределами ограниченного набора (см. Ниже). Часто рекомендуется избегать использования зарезервированных ключевых слов. в качестве идентификаторов столбцов или таблиц, когда это возможно, избегая проблемы цитирования.</target>
        </trans-unit>
        <trans-unit id="970739737eb627ea72fad456ba23d9fd6b15447e" translate="yes" xml:space="preserve">
          <source>Backticks are to be used for table and column identifiers, but are only necessary when the identifier is a &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/keywords.html&quot;&gt;MySQL reserved keyword&lt;/a&gt;, or when the identifier contains whitespace characters or characters beyond a limited set (see below) It is often recommended to avoid using reserved keywords as column or table identifiers when possible, avoiding the quoting issue.</source>
          <target state="translated">Обратные метки должны использоваться для идентификаторов таблицы и столбца, но они необходимы только в том случае, если идентификатор является &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/keywords.html&quot;&gt;зарезервированным ключевым словом MySQL&lt;/a&gt; или когда идентификатор содержит пробельные символы или символы за пределами ограниченного набора (см. Ниже). Часто рекомендуется избегать использования зарезервированных ключевых слов. в качестве идентификаторов столбцов или таблиц, когда это возможно, избегая проблемы цитирования.</target>
        </trans-unit>
        <trans-unit id="7b67ad97a7905e28021888adb6b075e99bd7dfc5" translate="yes" xml:space="preserve">
          <source>Besides all of the (well-explained) answers, there hasn't been the following mentioned and I visit this Q&amp;amp;A quite often.</source>
          <target state="translated">Помимо всех (хорошо объясненных) ответов, не было упомянуто следующего, и я довольно часто посещаю эти вопросы и ответы.</target>
        </trans-unit>
        <trans-unit id="fadc64aefd2086615b50e6053cff09b85e061547" translate="yes" xml:space="preserve">
          <source>But if &lt;code&gt;$val1&lt;/code&gt; or &lt;code&gt;$val2&lt;/code&gt; contains single quotes, that will make your SQL be wrong. So you need to escape it before it is used in sql; that is what &lt;code&gt;mysql_real_escape_string&lt;/code&gt; is for. (Although a prepared statement is better.)</source>
          <target state="translated">Но если &lt;code&gt;$val1&lt;/code&gt; или &lt;code&gt;$val2&lt;/code&gt; содержат одинарные кавычки, это сделает ваш SQL ошибочным. Так что вам нужно избежать его, прежде чем он будет использован в SQL; для этого и есть &lt;code&gt;mysql_real_escape_string&lt;/code&gt; . (Хотя подготовленное утверждение лучше.)</target>
        </trans-unit>
        <trans-unit id="53ee153e28dc13a819ab66374649167bc848ff1b" translate="yes" xml:space="preserve">
          <source>But, to define a value you have to use either single or double quotes. Lets see another example.</source>
          <target state="translated">Но,чтобы определить значение,необходимо использовать одинарные или двойные кавычки.Рассмотрим другой пример.</target>
        </trans-unit>
        <trans-unit id="295538c6b767eb09e4635898c20cc6628d6c8a75" translate="yes" xml:space="preserve">
          <source>Characters requring backtick quoting in identifiers:</source>
          <target state="translated">Символы,перенаправляющие обратные кавычки в идентификаторах:</target>
        </trans-unit>
        <trans-unit id="33540ed181289a1140c17a2c218548c4015aacf8" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;https://stackoverflow.com/a/261476/295264&quot;&gt;this&lt;/a&gt; answer to understand more about backticks.</source>
          <target state="translated">Проверьте &lt;a href=&quot;https://stackoverflow.com/a/261476/295264&quot;&gt;этот&lt;/a&gt; ответ, чтобы понять больше о кавычках.</target>
        </trans-unit>
        <trans-unit id="01d813a36b899f97a17fcdd3eeea9309b45be4ec" translate="yes" xml:space="preserve">
          <source>ERROR when not using backticks.</source>
          <target state="translated">ОШИБКА,когда не используешь задние палочки.</target>
        </trans-unit>
        <trans-unit id="e9199febdaab27118bac1b42feacb4f953051759" translate="yes" xml:space="preserve">
          <source>EXAMPLE</source>
          <target state="translated">EXAMPLE</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>
        </trans-unit>
        <trans-unit id="e974b798f49fb4a4cc543c3a62ba2ba7d7e6b101" translate="yes" xml:space="preserve">
          <source>Functions native to the RDBMS (for example, &lt;code&gt;NOW()&lt;/code&gt; in MySQL) should not be quoted, although their arguments are subject to the same string or identifier quoting rules already mentioned.</source>
          <target state="translated">Функции, родные для СУБД (например, &lt;code&gt;NOW()&lt;/code&gt; в MySQL), не должны заключаться в кавычки, хотя их аргументы подчиняются той же самой строке или правилам цитирования идентификаторов, которые уже упоминались.</target>
        </trans-unit>
        <trans-unit id="94cf825fa1d3abfecf4a149a7632a28e486aea1a" translate="yes" xml:space="preserve">
          <source>Here I have deliberately forgotten to wrap the &lt;code&gt;title1&lt;/code&gt; with quotes. Now the server will take the &lt;code&gt;title1&lt;/code&gt; as a column name (i.e. an identifier). So, to indicate that it's a value you have to use either double or single quotes.</source>
          <target state="translated">Здесь я намеренно забыл обернуть &lt;code&gt;title1&lt;/code&gt; в кавычки. Теперь сервер примет &lt;code&gt;title1&lt;/code&gt; как имя столбца (то есть идентификатор). Таким образом, чтобы указать, что это значение, вы должны использовать либо двойные, либо одинарные кавычки.</target>
        </trans-unit>
        <trans-unit id="4a763aa684a171a96a38e00c93601f0a880682f5" translate="yes" xml:space="preserve">
          <source>Here the backticks will help the server to understand that the &lt;code&gt;database&lt;/code&gt; is in fact the name of the database, not the database identifier.</source>
          <target state="translated">Здесь обратные пометки помогут серверу понять, что &lt;code&gt;database&lt;/code&gt; - это фактически имя базы данных, а не ее идентификатор.</target>
        </trans-unit>
        <trans-unit id="4f81a4dc4011e810be2b92de1ec6a988879991d1" translate="yes" xml:space="preserve">
          <source>However, &lt;code&gt;123451a6&lt;/code&gt; is a perfectly fine identifier name (without back ticks).</source>
          <target state="translated">Тем не менее, &lt;code&gt;123451a6&lt;/code&gt; является идеальным именем идентификатора (без обратных тиков).</target>
        </trans-unit>
        <trans-unit id="a4f56cb2abf950c1dfa214bb2db1ce7a12e1c976" translate="yes" xml:space="preserve">
          <source>I am trying to learn the best way to write queries. I also understand the importance of being consistent. Until now, I have randomly used single quotes, double quotes, and backticks without any real thought.</source>
          <target state="translated">Я пытаюсь выучить лучший способ написания запросов.Я также понимаю,как важно быть последовательным.До сих пор я произвольно использовал одиночные кавычки,двойные кавычки и обратные ссылки,не задумываясь.</target>
        </trans-unit>
        <trans-unit id="7a9bf86a612725a6c1f6c761089d4ddb092b4044" translate="yes" xml:space="preserve">
          <source>I suggest that you avoid using &lt;code&gt;&quot;&lt;/code&gt; so that your code becomes independent of SQL modes</source>
          <target state="translated">Я предлагаю вам избегать использования &lt;code&gt;&quot;&lt;/code&gt; , чтобы ваш код стал независимым от режимов SQL</target>
        </trans-unit>
        <trans-unit id="5f60d12129de9ac0f8ab9d5b826e24134bcace41" translate="yes" xml:space="preserve">
          <source>If need further clearance do follow &lt;a href=&quot;https://stackoverflow.com/questions/242813/when-to-use-double-or-single-quotes-in-javascript&quot;&gt;quotes in JavaScript&lt;/a&gt;</source>
          <target state="translated">Если требуется дальнейшая очистка, следуйте &lt;a href=&quot;https://stackoverflow.com/questions/242813/when-to-use-double-or-single-quotes-in-javascript&quot;&gt;цитатам в JavaScript&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be71c075bdbc1c4a895b09b719334569621f7c87" translate="yes" xml:space="preserve">
          <source>If table cols and values are variables then there are two ways:</source>
          <target state="translated">Если столбцы таблицы и значения являются переменными,то есть два пути:</target>
        </trans-unit>
        <trans-unit id="f9bd21271adf2137aa18f7f1550c14e6a0e4f6b6" translate="yes" xml:space="preserve">
          <source>If ther's a &lt;code&gt;where&lt;/code&gt; statement in your query and/or trying to &lt;code&gt;insert&lt;/code&gt; a value and/or an &lt;code&gt;update&lt;/code&gt; of value which is string use single quote(') for these values like:</source>
          <target state="translated">Если в вашем запросе есть оператор &lt;code&gt;where&lt;/code&gt; и / или попытка &lt;code&gt;insert&lt;/code&gt; значение и / или &lt;code&gt;update&lt;/code&gt; значения, которое является строкой, используйте одинарную кавычку (') для таких значений, как:</target>
        </trans-unit>
        <trans-unit id="ef576002982235df7942f8b6022509ce993c7455" translate="yes" xml:space="preserve">
          <source>If you are trying to write query in your back-end to call MySQL then you can use double quote(&quot;) or single quotes(') to assign query to a variable like:</source>
          <target state="translated">Если вы пытаетесь написать запрос в вашем бэкэнде,чтобы вызвать MySQL,то вы можете использовать функцию двойных кавычек (quote(&quot;))или одиночных кавычек (single quotes(')),чтобы присвоить запрос переменной типа:</target>
        </trans-unit>
        <trans-unit id="0d7bb6dd9c3505559eec418428d442550094778d" translate="yes" xml:space="preserve">
          <source>If you want to stay out of this confusion when to use double quotes(&quot;) and single quotes('), would recommend to stick with single quotes(') this will include backslash() like:</source>
          <target state="translated">Если вы хотите избежать этой путаницы при использовании функций двойных кавычек(&quot;)и одинарных кавычек('),рекомендуем придерживаться одинарных кавычек('),это будет включать обратный слеш()типа:</target>
        </trans-unit>
        <trans-unit id="7c29751a38776630a32c7e1e7d4595a893ad9ff4" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html#sqlmode_ansi_quotes&quot;&gt;&lt;code&gt;ANSI_QUOTES&lt;/code&gt;&lt;/a&gt; mode the &lt;code&gt;&quot;&lt;/code&gt; character can be used to enclose identifiers just like &lt;code&gt;`&lt;/code&gt;</source>
          <target state="translated">В режиме &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html#sqlmode_ansi_quotes&quot;&gt; &lt;code&gt;ANSI_QUOTES&lt;/code&gt; &lt;/a&gt; символ &quot;может использоваться для включения идентификаторов, как`</target>
        </trans-unit>
        <trans-unit id="b6cf548a377690984817b64cc2d564bb2bd0be16" translate="yes" xml:space="preserve">
          <source>In MySQL, these symbols are used to delimit a query &lt;code&gt;`&lt;/code&gt; ,&lt;code&gt;&quot;&lt;/code&gt; ,&lt;code&gt;'&lt;/code&gt; and &lt;code&gt;()&lt;/code&gt; .</source>
          <target state="translated">В MySQL эти символы используются для разделения запроса &lt;code&gt;`&lt;/code&gt; , &lt;code&gt;'&lt;/code&gt; , ' и &lt;code&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a65692f9a2f2ccad5c1fdbc6da666d455b5bf33f" translate="yes" xml:space="preserve">
          <source>In a nutshell; &lt;strong&gt;MySQL thinks you want to do math&lt;/strong&gt; on its own table/column and interprets hyphens such as &quot;e-mail&quot; as &lt;code&gt;e&lt;/code&gt;&lt;strong&gt;minus&lt;/strong&gt;&lt;code&gt;mail&lt;/code&gt;.</source>
          <target state="translated">В двух словах; &lt;strong&gt;MySQL думает, что вы хотите выполнить математику&lt;/strong&gt; в своей собственной таблице / столбце, и интерпретирует такие дефисы, как &amp;laquo;электронная почта&amp;raquo;, как &amp;laquo; &lt;strong&gt;минус&lt;/strong&gt; &lt;code&gt;mail&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c211317a410743c5d6c983e704b3718ba22ed06" translate="yes" xml:space="preserve">
          <source>In combination of PHP and MySQL, double quotes and single quotes make your query writing time so much easier.</source>
          <target state="translated">В сочетании с PHP и MySQL,двойные кавычки и одинарные кавычки значительно облегчают время написания запроса.</target>
        </trans-unit>
        <trans-unit id="2dc9e149434250d7fd746b11427230a7e86b3be1" translate="yes" xml:space="preserve">
          <source>In combination of PHP and MySQL, double quotes and single quotes make your query-writing time so much easier.</source>
          <target state="translated">В сочетании с PHP и MySQL,двойные кавычки и одинарные кавычки значительно облегчают процесс написания запросов.</target>
        </trans-unit>
        <trans-unit id="853461a0cd82d96ba71e241a4d83962a0f2666b0" translate="yes" xml:space="preserve">
          <source>Mostly, we use single quotes for an SQL string value, so we need to use double quotes for a PHP string.</source>
          <target state="translated">В основном,мы используем одинарные кавычки для значения SQL-строки,поэтому нам нужно использовать двойные кавычки для PHP-строки.</target>
        </trans-unit>
        <trans-unit id="0b6a5aa0c171380342f888c1606d55c54f6cf97d" translate="yes" xml:space="preserve">
          <source>MySQL also expects &lt;code&gt;DATE&lt;/code&gt; and &lt;code&gt;DATETIME&lt;/code&gt; literal values to be single-quoted as strings like &lt;code&gt;'2001-01-01 00:00:00'&lt;/code&gt;. Consult &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/date-and-time-literals.html&quot;&gt;the Date and Time Literals&lt;/a&gt; documentation for more details, in particular alternatives to using the hyphen &lt;code&gt;-&lt;/code&gt; as a segment delimiter in date strings.</source>
          <target state="translated">MySQL также ожидает, что литеральные значения &lt;code&gt;DATE&lt;/code&gt; и &lt;code&gt;DATETIME&lt;/code&gt; будут заключены в одинарные кавычки в виде строк, таких как &lt;code&gt;'2001-01-01 00:00:00'&lt;/code&gt; . Обратитесь &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/date-and-time-literals.html&quot;&gt;к&lt;/a&gt; документации по датам даты и времени для получения более подробной информации, в частности, об альтернативах использованию дефиса &lt;code&gt;-&lt;/code&gt; в качестве разделителя сегмента в строках даты.</target>
        </trans-unit>
        <trans-unit id="0cd5365acbce54464733f800d3e2f2cb6a4aebe2" translate="yes" xml:space="preserve">
          <source>No ERROR on backticks.</source>
          <target state="translated">Ошибки на задних палочках нет.</target>
        </trans-unit>
        <trans-unit id="01c108ac1d103d1516bc345e95d4ec9ac9b420a6" translate="yes" xml:space="preserve">
          <source>None of these table or column identifiers are reserved words or make use of characters requiring quoting, but I've quoted them anyway with backticks (more on this later...).</source>
          <target state="translated">Ни один из этих идентификаторов таблиц или столбцов не является зарезервированными словами или не использует символы,требующие цитирования,но я все равно процитировал их с помощью обратных ссылок (подробнее об этом позже...).</target>
        </trans-unit>
        <trans-unit id="28fee859607534b52f5c5e34eec1da4bccb3a417" translate="yes" xml:space="preserve">
          <source>Now about Double quotes &amp;amp; Single Quotes (Michael has already mentioned that).</source>
          <target state="translated">Теперь о двойных кавычках и одиночных кавычках (Майкл уже упоминал об этом).</target>
        </trans-unit>
        <trans-unit id="8606c8b706526ec7a094d564c27838a760aa1e50" translate="yes" xml:space="preserve">
          <source>Now, in combination with PHP, double quotes and single quotes make your query writing time much easier. Let's see a modified version of the query in your question.</source>
          <target state="translated">Теперь,в сочетании с PHP,двойные кавычки и одинарные кавычки значительно облегчают время написания запроса.Давайте посмотрим измененную версию запроса в вашем вопросе.</target>
        </trans-unit>
        <trans-unit id="05d78f2aa10becd6283e505907025d5685589d69" translate="yes" xml:space="preserve">
          <source>Now, suppose you are using a direct post variable into the MySQL query then, use it this way:</source>
          <target state="translated">Теперь,предположим,что вы используете прямую почтовую переменную в MySQL-запросе,используйте ее таким образом:</target>
        </trans-unit>
        <trans-unit id="693e36e4de7a62195a71e714f4c90f54916b168e" translate="yes" xml:space="preserve">
          <source>Now, using double quotes in the PHP, you will make the variables &lt;code&gt;$val1&lt;/code&gt;, and &lt;code&gt;$val2&lt;/code&gt; to use their values thus creating a perfectly valid query. Like</source>
          <target state="translated">Теперь, используя двойные кавычки в PHP, вы сделаете переменные &lt;code&gt;$val1&lt;/code&gt; и &lt;code&gt;$val2&lt;/code&gt; для использования их значений, создавая таким образом совершенно правильный запрос. подобно</target>
        </trans-unit>
        <trans-unit id="e72184f55cc026514b7160d78c3c5aef63c2a050" translate="yes" xml:space="preserve">
          <source>Or</source>
          <target state="translated">Or</target>
        </trans-unit>
        <trans-unit id="185bc949d8e637c87bdd6f1f0ee55566da841699" translate="yes" xml:space="preserve">
          <source>Perhaps it is important to mention that PHP handles single and double quoted strings differently...</source>
          <target state="translated">Возможно,важно отметить,что PHP по-разному обрабатывает одинарные и двойные кавычки...</target>
        </trans-unit>
        <trans-unit id="88e0e0a0df815f954f20830db35becc23bd2fb02" translate="yes" xml:space="preserve">
          <source>Prepared statements</source>
          <target state="translated">Подготовленные заявления</target>
        </trans-unit>
        <trans-unit id="db8c5d7eb06f66c5c2883fd10b7c9f25e10cbf80" translate="yes" xml:space="preserve">
          <source>Problem with double(&quot;) or single(') quotes arise when we had to assign some value dynamic and perform some string concatenation like:</source>
          <target state="translated">Проблема с кавычками double(&quot;)или single(')возникает тогда,когда нужно было присвоить некоторое значение dynamic и выполнить некоторое конкатенирование строк,например:</target>
        </trans-unit>
        <trans-unit id="0e88a4043a367129052a923a43951e162472a3d3" translate="yes" xml:space="preserve">
          <source>SINGLE QUOTES(') are used around values.</source>
          <target state="translated">Вокруг значений используется функция SINGLE QUOTES(').</target>
        </trans-unit>
        <trans-unit id="99382b494168d7b55cb152720e432f349b76b6ba" translate="yes" xml:space="preserve">
          <source>SQL servers and MySQL, PostgreySQL, Oracle don't understand double quotes(&quot;). Thus your query should be free from double quotes(&quot;) and should only use single quotes(').</source>
          <target state="translated">SQL серверы и MySQL,PostgreySQL,Oracle не понимают функцию двойных кавычек(&quot;).Поэтому ваш запрос должен быть свободен от двойных кавычек(&quot;)и должен использовать только одинарные кавычки(&quot;).</target>
        </trans-unit>
        <trans-unit id="e5d8f12a59e9d37cc970caf5496df216cd4c4e99" translate="yes" xml:space="preserve">
          <source>Same can be done for the table names and field names. This is a very &lt;em&gt;good habit&lt;/em&gt; if you wrap your database identifier with backticks.</source>
          <target state="translated">То же самое можно сделать для имен таблиц и имен полей. Это очень &lt;em&gt;хорошая привычка,&lt;/em&gt; если вы добавляете в свой идентификатор базы данных кавычки.</target>
        </trans-unit>
        <trans-unit id="840a76f9d9d4101767dd6c408ea67ac56627684f" translate="yes" xml:space="preserve">
          <source>Single quotes should be used for string values like in the &lt;code&gt;VALUES()&lt;/code&gt; list.  Double quotes are supported by MySQL for string values as well, but single quotes are more widely accepted by other RDBMS, so it is a good habit to use single quotes instead of double.</source>
          <target state="translated">Одиночные кавычки должны использоваться для строковых значений, как в списке &lt;code&gt;VALUES()&lt;/code&gt; . Двойные кавычки также поддерживаются MySQL для строковых значений, но одинарные кавычки более широко принимаются другими СУБД, поэтому рекомендуется использовать одинарные кавычки вместо двойных.</target>
        </trans-unit>
        <trans-unit id="208154868777c5596cc50185f19d1c260427aa82" translate="yes" xml:space="preserve">
          <source>Single quotes should be used for string values like in the VALUES() list.</source>
          <target state="translated">Для строковых значений,как и в списке VALUES(),следует использовать одиночные кавычки.</target>
        </trans-unit>
        <trans-unit id="49e809f970df167664867752404912bcbeb9c826" translate="yes" xml:space="preserve">
          <source>Single-quoted strings are 'literals' and are pretty much WYSIWYG strings. Double-quoted strings are interpreted by PHP for possible variable-substitution (backticks in PHP are not exactly strings; they execute a command in the shell and return the result).</source>
          <target state="translated">Строки в одинарных кавычках-это &quot;литералы&quot; и в основном WYSIWYG-строки.Строки в двойных кавычках интерпретируются PHP для возможной замены переменных (обратные ссылки в PHP-не совсем строки;они выполняют команду в оболочке и возвращают результат).</target>
        </trans-unit>
        <trans-unit id="9eaa0efb21da499527054208ef276f599b1f2281" translate="yes" xml:space="preserve">
          <source>So if your string contains single quotes, then you could use double quotes to quote the string, or if it contains double quotes, then you could use single quotes to quote the string. But if your string contains both single quotes and double quotes, you need to escape the one that used to quote the string.</source>
          <target state="translated">Так что если ваша строка содержит одиночные кавычки,то вы можете использовать двойные кавычки,чтобы заключить строку в кавычки,или если она содержит двойные кавычки,то вы можете использовать одиночные кавычки,чтобы заключить строку в кавычки.Но если ваша строка содержит и одинарные кавычки,и двойные кавычки,то вам нужно экранировать ту,которая использовалась для кавычек строки.</target>
        </trans-unit>
        <trans-unit id="90a743846cd66e712bd99d8ed5918ec643324cc0" translate="yes" xml:space="preserve">
          <source>So using your example, I would double-quote the PHP string and use single quotes on the values &lt;code&gt;'val1', 'val2'&lt;/code&gt;.  &lt;code&gt;NULL&lt;/code&gt; is a MySQL keyword, and a special (non)-value, and is therefore unquoted.</source>
          <target state="translated">Поэтому, используя ваш пример, я бы заключил в кавычки строку PHP и использовал одинарные кавычки для значений &lt;code&gt;'val1', 'val2'&lt;/code&gt; . &lt;code&gt;NULL&lt;/code&gt; - это ключевое слово MySQL и специальное (не) -значение, поэтому оно не заключено в кавычки.</target>
        </trans-unit>
        <trans-unit id="0d017453a7cc8300a916af70e40a39e5e8e2f1b6" translate="yes" xml:space="preserve">
          <source>The following query will produce different results (or errors) depending on SQL mode:</source>
          <target state="translated">Следующий запрос будет давать различные результаты (или ошибки)в зависимости от режима SQL:</target>
        </trans-unit>
        <trans-unit id="adebd13f3da25e7bbda4c2effcd391c369d3f149" translate="yes" xml:space="preserve">
          <source>The query will select the column &lt;code&gt;column&lt;/code&gt; where column &lt;code&gt;foo&lt;/code&gt; is equal to column &lt;code&gt;bar&lt;/code&gt;</source>
          <target state="translated">Запрос выберет столбец &lt;code&gt;column&lt;/code&gt; где столбец &lt;code&gt;foo&lt;/code&gt; равен столбцу столбца</target>
        </trans-unit>
        <trans-unit id="9ee32a639440216e4b2f7ed7aa69a7ce5d857bc1" translate="yes" xml:space="preserve">
          <source>The query will select the string literal &lt;code&gt;&quot;column&quot;&lt;/code&gt; where column &lt;code&gt;foo&lt;/code&gt; is equal to string &lt;code&gt;&quot;bar&quot;&lt;/code&gt;</source>
          <target state="translated">Запрос выберет строковый литерал &lt;code&gt;&quot;column&quot;&lt;/code&gt; где столбец &lt;code&gt;foo&lt;/code&gt; равен строке &lt;code&gt;&quot;bar&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ddf65abb76a47ea6d6931947e8f74f6da692f1a2" translate="yes" xml:space="preserve">
          <source>The quoting patterns for variables do not change, although if you intend to interpolate the variables directly in a string, it must be double-quoted in PHP. Just make sure that you have properly escaped the variables for use in SQL. (&lt;a href=&quot;https://stackoverflow.com/questions/60174/how-to-prevent-sql-injection-in-php&quot;&gt;It is recommended to use an API supporting prepared statements instead, as protection against SQL injection&lt;/a&gt;).</source>
          <target state="translated">Шаблоны кавычек для переменных не меняются, хотя, если вы намереваетесь интерполировать переменные непосредственно в строке, они должны быть заключены в двойные кавычки в PHP. Просто убедитесь, что вы правильно экранировали переменные для использования в SQL. ( &lt;a href=&quot;https://stackoverflow.com/questions/60174/how-to-prevent-sql-injection-in-php&quot;&gt;Вместо этого рекомендуется использовать API, поддерживающий подготовленные операторы, в качестве защиты от внедрения SQL&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9dcec773dd6d848ae315fc05a43c597e3397f591" translate="yes" xml:space="preserve">
          <source>The string literals in MySQL and PHP are the same.</source>
          <target state="translated">Строковые литералы в MySQL и PHP одинаковы.</target>
        </trans-unit>
        <trans-unit id="28a083b8be20369358b80d4af6e18c9821470ac2" translate="yes" xml:space="preserve">
          <source>There are two types of quotes in MySQL:</source>
          <target state="translated">В MySQL есть два типа котировок:</target>
        </trans-unit>
        <trans-unit id="26beaab34e0768054165d0c1783d4d12e91ffddd" translate="yes" xml:space="preserve">
          <source>There has been many helpful answers here, generally culminating into two points.</source>
          <target state="translated">Здесь было много полезных ответов,которые,как правило,сводились к двум пунктам.</target>
        </trans-unit>
        <trans-unit id="78fa2e0372f5352b9d83a0736e9385e74fb02f28" translate="yes" xml:space="preserve">
          <source>There is a case though where an identifier can neither be a &lt;em&gt;reserved keyword&lt;/em&gt; or contain &lt;em&gt;whitespace&lt;/em&gt; or &lt;em&gt;characters beyond limited set&lt;/em&gt; but necessarily require backticks around them.</source>
          <target state="translated">Однако существует случай, когда идентификатор не может быть &lt;em&gt;зарезервированным ключевым словом&lt;/em&gt; или содержать &lt;em&gt;пробелы&lt;/em&gt; или &lt;em&gt;символы за пределами ограниченного набора,&lt;/em&gt; но обязательно должен содержать обратные пометки вокруг них.</target>
        </trans-unit>
        <trans-unit id="ffb638c7729af90d6ab35de9742eb90045d7a9f7" translate="yes" xml:space="preserve">
          <source>This is completely because &lt;code&gt;1234156e6&lt;/code&gt; is also an exponential number.</source>
          <target state="translated">Это полностью потому, что &lt;code&gt;1234156e6&lt;/code&gt; также является экспоненциальным числом.</target>
        </trans-unit>
        <trans-unit id="66dd3116ff7f609f37b4d10de5c37835eecf1d3b" translate="yes" xml:space="preserve">
          <source>This is the best practice for using PHP variables into MySQL.</source>
          <target state="translated">Это лучшая практика использования переменных PHP в MySQL.</target>
        </trans-unit>
        <trans-unit id="58d6e4e975e2f7eace65c91034b92638753a3c78" translate="yes" xml:space="preserve">
          <source>Use back ticks &lt;code&gt;``&lt;/code&gt; when a column/value name is similar to a MySQL reserved keyword.</source>
          <target state="translated">Используйте обратную галочку &lt;code&gt;``&lt;/code&gt; , когда имя столбца / значения похоже на зарезервированное ключевое слово MySQL.</target>
        </trans-unit>
        <trans-unit id="9056c1c45a9a2f407b0675fff2c7c7401342b40b" translate="yes" xml:space="preserve">
          <source>Variable interpolation</source>
          <target state="translated">переменная интерполяция</target>
        </trans-unit>
        <trans-unit id="4f4436a7610700ede1a264b9258f77eb38045437" translate="yes" xml:space="preserve">
          <source>What is the standard for this? What do you do?</source>
          <target state="translated">Какой стандарт для этого? Чем ты занимаешься?</target>
        </trans-unit>
        <trans-unit id="ed82b9ac93865fb15bdceac28e48b922d33a56ee" translate="yes" xml:space="preserve">
          <source>When to use single quotes, double quotes, and backticks in MySQL</source>
          <target state="translated">Когда использовать одинарные кавычки,двойные кавычки и черные метки в MySQL</target>
        </trans-unit>
        <trans-unit id="64f93b08c3ed93ef44b231186c6bd7e0a580b9a3" translate="yes" xml:space="preserve">
          <source>When to use what</source>
          <target state="translated">Когда использовать что</target>
        </trans-unit>
        <trans-unit id="54f07e6ed7c59c30778e41c8bd305cbd13b96ba3" translate="yes" xml:space="preserve">
          <source>When working with prepared statements, consult the documentation to determine whether or not the statement's placeholders must be quoted.  The most popular APIs available in PHP, PDO and MySQLi, expect &lt;em&gt;unquoted&lt;/em&gt; placeholders, as do most prepared statement APIs in other languages:</source>
          <target state="translated">При работе с подготовленными утверждениями сверьтесь с документацией, чтобы определить, нужно ли указывать заполнители утверждения. Самые популярные API-интерфейсы, доступные в PHP, PDO и MySQLi, рассчитывают на заполнители без &lt;em&gt;кавычек&lt;/em&gt; , как и большинство подготовленных API-операторов операторов на других языках:</target>
        </trans-unit>
        <trans-unit id="1ff715c4d19dd4560790ccb4ec16c12cb744669e" translate="yes" xml:space="preserve">
          <source>With double quotes &lt;code&gt;&quot;&quot;&lt;/code&gt; the complete query:</source>
          <target state="translated">С двойными кавычками &lt;code&gt;&quot;&quot;&lt;/code&gt; полный запрос:</target>
        </trans-unit>
        <trans-unit id="97f55790949107a26fe97c8af77a0d602d9990c7" translate="yes" xml:space="preserve">
          <source>With single quotes &lt;code&gt;''&lt;/code&gt;:</source>
          <target state="translated">С одинарными кавычками &lt;code&gt;''&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c892ad3d5a3543c5ae3c83edfab273b7341a72e7" translate="yes" xml:space="preserve">
          <source>You can use characters beyond that set as table or column identifiers, including whitespace for example, but then you &lt;em&gt;must&lt;/em&gt; quote (backtick) them.</source>
          <target state="translated">Вы можете использовать символы вне этого набора в качестве идентификаторов таблицы или столбца, в том числе, например, пробелов, но затем вы &lt;em&gt;должны&lt;/em&gt; заключить их в кавычки (обратные кавычки).</target>
        </trans-unit>
        <trans-unit id="c86679f13b3d62526371afbe4aff681c0612003f" translate="yes" xml:space="preserve">
          <source>[Without going into detail how you would get such an identifier name], Suppose I want to create a temporary table named &lt;code&gt;123456e6&lt;/code&gt;.</source>
          <target state="translated">[Не вдаваясь в подробности, как вы могли бы получить такое имя идентификатора], предположим, я хочу создать временную таблицу с именем &lt;code&gt;123456e6&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d413bc3ea63f223ff615cfe259e30f18066d98c" translate="yes" xml:space="preserve">
          <source>will make</source>
          <target state="translated">воля</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
