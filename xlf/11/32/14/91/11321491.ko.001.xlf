<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/11321491">
    <body>
      <group id="11321491">
        <trans-unit id="6097a10580050b75ec7d85d9d5ee9d68c82121ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.5/en/identifiers.html&quot;&gt;According to MySQL documentation&lt;/a&gt;, you do not need to quote (backtick) identifiers using the following character set:</source>
          <target state="translated">&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.5/en/identifiers.html&quot;&gt;MySQL 문서에 따르면&lt;/a&gt; 다음 문자 세트를 사용하여 식별자를 인용 (백틱) 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="90045b0d033e2dd619e6383df8041179e609f3e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;&lt;/code&gt; or &lt;code&gt;'&lt;/code&gt; are used for enclosing string-like values &lt;code&gt;&quot;26-01-2014 00:00:00&quot;&lt;/code&gt; or &lt;code&gt;'26-01-2014 00:00:00'&lt;/code&gt; . These symbols are only for strings, not aggregate functions like &lt;code&gt;now&lt;/code&gt;, &lt;code&gt;sum&lt;/code&gt;, or &lt;code&gt;max&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&lt;/code&gt; 또는 &lt;code&gt;'&lt;/code&gt; 는 문자열과 같은 값 &lt;code&gt;&quot;26-01-2014 00:00:00&quot;&lt;/code&gt; 또는 &lt;code&gt;'26-01-2014 00:00:00'&lt;/code&gt; 을 묶는 데 사용됩니다. 이러한 기호는 문자열과 같은 기능 만하고 &lt;code&gt;now&lt;/code&gt; 과 같은 집계 함수는 아닙니다. &lt;code&gt;sum&lt;/code&gt; 또는 &lt;code&gt;max&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f1d59f5f8b081c1446e0a241557283a4d5bc4cd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;/code&gt; for enclosing string literals</source>
          <target state="translated">문자열 리터럴을 묶기위한 &lt;code&gt;'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a80de0ca330c2f2aaefe4b688914a9cc7a012e95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt; simply enclose parts of a query e.g.   &lt;code&gt;select `column_name` from `table_name` where (id='2' and gender='male') or name='rakesh'&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt; 는 쿼리의 일부를 포함합니다. 예를 들어 &lt;code&gt;select `column_name` from `table_name` where (id='2' and gender='male') or name='rakesh'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b2f0352941e63498cd4c7fa4a455b1ce743796f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;123E10&lt;/code&gt; is a valid identifier name but also a valid &lt;code&gt;INTEGER&lt;/code&gt; literal.</source>
          <target state="translated">&lt;code&gt;123E10&lt;/code&gt; 은 유효한 식별자 이름이지만 유효한 &lt;code&gt;INTEGER&lt;/code&gt; 리터럴입니다.</target>
        </trans-unit>
        <trans-unit id="da38380bf2f05c4bece3b8989ad72606b9d3ac17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;`&lt;/code&gt;  is used for enclosing table or column names, e.g. &lt;code&gt;select `column_name` from `table_name` where id='2'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;`&lt;/code&gt; 는 테이블 또는 열 이름을 묶는 데 사용됩니다. 예를 들어 &lt;code&gt;select `column_name` from `table_name` where id='2'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da03c042c5cf25afb1bafac2439fe779180a0bd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;`&lt;/code&gt; for enclosing identifiers such as table and column names</source>
          <target state="translated">&lt;code&gt;`&lt;/code&gt; 테이블 및 열 이름과 같은 식별자를 묶는 경우</target>
        </trans-unit>
        <trans-unit id="e616ce30e908e2aa2c025c12fddf0941e9987928" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;`table_name`&lt;/code&gt;. &lt;code&gt;`column_name`&lt;/code&gt;   &amp;lt;-- Note: exclude &lt;code&gt;.&lt;/code&gt;  from back ticks.</source>
          <target state="translated">&lt;code&gt;`table_name`&lt;/code&gt; . &lt;code&gt;`column_name`&lt;/code&gt; &amp;lt;-참고 : 제외 &lt;code&gt;.&lt;/code&gt; 다시 진드기에서.</target>
        </trans-unit>
        <trans-unit id="e9472c553def7914df498d93c687e68d18e0022d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(There are good answers above regarding the SQL nature of your question, but this may also be relevant if you are new to PHP.)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(질문의 SQL 특성과 관련하여 위의 좋은 답변이 있지만 PHP를 처음 사용하는 경우에도 관련이 있습니다.)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="deaf5aa7bf7c1c895ac2d93f5557710e2f50238c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;By default&lt;/em&gt; the &lt;code&gt;&quot;&lt;/code&gt; character can be used to enclose string literals just like &lt;code&gt;'&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;기본적&lt;/em&gt; 으로 &lt;code&gt;&quot;&lt;/code&gt; 문자는 &lt;code&gt;'&lt;/code&gt; 와 같이 문자열 리터럴을 묶는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="12fc96176da144173d5b5f6d12acdfe181173a67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Disclaimer:&lt;/strong&gt; So I thought I would add this as an &quot;FYI&quot; type of answer for those who are completely new to working with databases and who may not understand the technical terms described already.</source>
          <target state="translated">&lt;strong&gt;면책 조항 :&lt;/strong&gt; 데이터베이스에 익숙하지 않고 이미 설명한 기술적 용어를 이해하지 못하는 사람들을 위해 이것을 &quot;FYI&quot;유형의 답변으로 추가 할 것이라고 생각했습니다.</target>
        </trans-unit>
        <trans-unit id="a19812fd99fa5716527f0685d3186fd7d816426a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you are denoting a column name with a table name then use back ticks like this:</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 테이블 이름으로 열 이름을 나타내는 경우 다음과 같이 백틱을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="60895f279f726f13bb47c03b7e3172d30cdde826" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;I've been reading answers to similar questions on here for about 20 minutes, but it seems like there is no definitive answer to this question.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;약 20 분 동안 비슷한 질문에 대한 답변을 읽었지만이 질문에 대한 명확한 대답이없는 것 같습니다.&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="b83c40ec26f2f2e2a49118a4fad948bd11959972" translate="yes" xml:space="preserve">
          <source>A string is a sequence of bytes or characters, enclosed within either
  single quote (&amp;ldquo;'&amp;rdquo;) or double quote (&amp;ldquo;&quot;&amp;rdquo;) characters.</source>
          <target state="translated">문자열은 작은 따옴표 ( &quot; '&quot;) 또는 큰 따옴표 ( &quot;&quot; &quot;) 문자로 묶인 일련의 바이트 또는 문자입니다.</target>
        </trans-unit>
        <trans-unit id="4615ed604badacba54d261f18d9acd38d9c535fb" translate="yes" xml:space="preserve">
          <source>AND as @MichaelBerkowski said</source>
          <target state="translated">그리고 @MichaelBerkowski가 말한 것처럼</target>
        </trans-unit>
        <trans-unit id="2622820d29bda626c277ee00365f43ae9ee7a2a8" translate="yes" xml:space="preserve">
          <source>ANSI_QUOTES disabled</source>
          <target state="translated">ANSI_QUOTES 비활성화</target>
        </trans-unit>
        <trans-unit id="98cb3bec05013f28a22ddbdb7d1d65285553692f" translate="yes" xml:space="preserve">
          <source>ANSI_QUOTES enabled</source>
          <target state="translated">ANSI_QUOTES 활성화</target>
        </trans-unit>
        <trans-unit id="6b8f89108c71d3681d918d68fc197e69b138fb24" translate="yes" xml:space="preserve">
          <source>ASCII: &lt;code&gt;[0-9,a-z,A-Z$_]&lt;/code&gt; (basic Latin letters, digits 0-9, dollar, underscore)</source>
          <target state="translated">ASCII : &lt;code&gt;[0-9,a-z,A-Z$_]&lt;/code&gt; (기본 라틴 문자, 숫자 0-9, 달러, 밑줄)</target>
        </trans-unit>
        <trans-unit id="adb5ad7318b3a95f2a3a3eec5e91188245c1f9fa" translate="yes" xml:space="preserve">
          <source>Also, in the above example, consider that &lt;code&gt;table&lt;/code&gt;, &lt;code&gt;col1&lt;/code&gt;, &lt;code&gt;val1&lt;/code&gt;, etc. may be variables.</source>
          <target state="translated">또한 위의 예에서 &lt;code&gt;table&lt;/code&gt; , &lt;code&gt;col1&lt;/code&gt; , &lt;code&gt;val1&lt;/code&gt; 등은 변수 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9da9a87dfc3b82e06d404a5b2dc7b1df991317ef" translate="yes" xml:space="preserve">
          <source>Always quote identifiers since it is a good practice (quite a few questions on SO discuss this)</source>
          <target state="translated">모범 사례이므로 항상 식별자를 인용하십시오 (SO에 대해 몇 가지 질문을하십시오).</target>
        </trans-unit>
        <trans-unit id="87b1a656c26103e950c3c0c57b60ec53877ef83c" translate="yes" xml:space="preserve">
          <source>And then there is &lt;code&gt;&quot;&lt;/code&gt; which is a special case. It could be used for &lt;em&gt;one&lt;/em&gt; of above-mentioned purposes at a time depending on MySQL server's &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html&quot;&gt;&lt;code&gt;sql_mode&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">그리고 특별한 경우 인 &lt;code&gt;&quot;&lt;/code&gt; 가 있습니다. MySQL 서버의 &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html&quot;&gt; &lt;code&gt;sql_mode&lt;/code&gt; &lt;/a&gt; 에 따라 한 &lt;em&gt;번&lt;/em&gt; 에 위에서 언급 한 목적 &lt;em&gt;중 하나로&lt;/em&gt; 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d79be8be1c06eef6b3594039b253c94737b212ba" translate="yes" xml:space="preserve">
          <source>And you could use a variable in PHP's double-quoted string:</source>
          <target state="translated">PHP의 큰 따옴표로 묶은 문자열에 변수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e78a5da35a0f4e859b76dbcbf684350f545aae93" translate="yes" xml:space="preserve">
          <source>BACKTICKS(`) are used around identifier names.</source>
          <target state="translated">BACKTICKS (`)는 식별자 이름 주위에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0eddaaa57762e06093cf16a2eca308a76210c356" translate="yes" xml:space="preserve">
          <source>Back-trip(`) is optional to use in SQL and is used for table name, db name and column names.</source>
          <target state="translated">Back-trip (`)은 SQL에서 사용하기위한 선택적이며 테이블 이름, db 이름 및 열 이름에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e016ca66c68af56f6e1542b4497d8f527b313bcc" translate="yes" xml:space="preserve">
          <source>Backticks are generally used to indicate an &lt;code&gt;identifier&lt;/code&gt; and as well be &lt;strong&gt;safe&lt;/strong&gt; from accidentally using the &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/keywords.html&quot;&gt;Reserved Keywords&lt;/a&gt;.</source>
          <target state="translated">백틱은 일반적으로 &lt;code&gt;identifier&lt;/code&gt; 를 나타 내기 위해 사용되며 실수로 &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/keywords.html&quot;&gt;예약 키워드를&lt;/a&gt; 사용하지 않도록 &lt;strong&gt;안전&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="4ac2eea9a3ab2e5ace13b460c95cc0edd70a77ac" translate="yes" xml:space="preserve">
          <source>Backticks are generally used to indicate an identifier and as well be safe from accidentally using the reserved keywords.</source>
          <target state="translated">백틱은 일반적으로 식별자를 나타 내기 위해 사용되며 예약 된 키워드를 실수로 사용하지 않도록 안전합니다.</target>
        </trans-unit>
        <trans-unit id="c1f3c18db147bebab8ccfa118fd95403942a780a" translate="yes" xml:space="preserve">
          <source>Backticks are to be used for table and column identifiers, but are
  only necessary when the identifier is a &lt;code&gt;MySQL&lt;/code&gt; reserved keyword, or
  when the identifier contains whitespace characters or characters
  beyond a limited set (see below) It is often recommended to avoid
  using reserved keywords as column or table identifiers when possible,
  avoiding the quoting issue.</source>
          <target state="translated">백틱은 테이블 및 열 식별자에 사용되지만 식별자가 &lt;code&gt;MySQL&lt;/code&gt; 예약 키워드이거나 식별자에 공백 문자 또는 한정된 집합을 벗어난 문자가 포함 된 경우에만 필요합니다 (아래 참조). 예약 키워드를 사용하지 않는 것이 좋습니다. 인용 문제를 피하면서 가능하면 열 또는 테이블 식별자로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="970739737eb627ea72fad456ba23d9fd6b15447e" translate="yes" xml:space="preserve">
          <source>Backticks are to be used for table and column identifiers, but are only necessary when the identifier is a &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/keywords.html&quot;&gt;MySQL reserved keyword&lt;/a&gt;, or when the identifier contains whitespace characters or characters beyond a limited set (see below) It is often recommended to avoid using reserved keywords as column or table identifiers when possible, avoiding the quoting issue.</source>
          <target state="translated">백틱은 테이블 및 열 식별자에 사용되지만 식별자가 &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/keywords.html&quot;&gt;MySQL 예약 키워드&lt;/a&gt; 이거나 식별자에 공백 문자 또는 한정된 세트를 벗어난 문자가 포함 된 경우에만 필요합니다 (아래 참조). 예약 키워드를 사용하지 않는 것이 좋습니다. 인용 문제를 피하면서 가능하면 열 또는 테이블 식별자로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7b67ad97a7905e28021888adb6b075e99bd7dfc5" translate="yes" xml:space="preserve">
          <source>Besides all of the (well-explained) answers, there hasn't been the following mentioned and I visit this Q&amp;amp;A quite often.</source>
          <target state="translated">모든 (잘 설명 된) 답변 외에도 다음에 언급되지 않았 으며이 Q &amp;amp; A를 자주 방문합니다.</target>
        </trans-unit>
        <trans-unit id="fadc64aefd2086615b50e6053cff09b85e061547" translate="yes" xml:space="preserve">
          <source>But if &lt;code&gt;$val1&lt;/code&gt; or &lt;code&gt;$val2&lt;/code&gt; contains single quotes, that will make your SQL be wrong. So you need to escape it before it is used in sql; that is what &lt;code&gt;mysql_real_escape_string&lt;/code&gt; is for. (Although a prepared statement is better.)</source>
          <target state="translated">그러나 &lt;code&gt;$val1&lt;/code&gt; 또는 &lt;code&gt;$val2&lt;/code&gt; 에 작은 따옴표가 포함되어 있으면 SQL이 잘못됩니다. 따라서 SQL에서 사용하기 전에 이스케이프 처리해야합니다. 그것이 &lt;code&gt;mysql_real_escape_string&lt;/code&gt; 의 목적입니다. (준비된 진술이 더 낫지 만)</target>
        </trans-unit>
        <trans-unit id="53ee153e28dc13a819ab66374649167bc848ff1b" translate="yes" xml:space="preserve">
          <source>But, to define a value you have to use either single or double quotes. Lets see another example.</source>
          <target state="translated">그러나 값을 정의하려면 작은 따옴표 나 큰 따옴표를 사용해야합니다. 다른 예를 보자.</target>
        </trans-unit>
        <trans-unit id="295538c6b767eb09e4635898c20cc6628d6c8a75" translate="yes" xml:space="preserve">
          <source>Characters requring backtick quoting in identifiers:</source>
          <target state="translated">식별자에서 역 따옴표를 요구하는 문자 :</target>
        </trans-unit>
        <trans-unit id="33540ed181289a1140c17a2c218548c4015aacf8" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;https://stackoverflow.com/a/261476/295264&quot;&gt;this&lt;/a&gt; answer to understand more about backticks.</source>
          <target state="translated">백틱에 대한 자세한 내용을 보려면 &lt;a href=&quot;https://stackoverflow.com/a/261476/295264&quot;&gt;이&lt;/a&gt; 답변을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="01d813a36b899f97a17fcdd3eeea9309b45be4ec" translate="yes" xml:space="preserve">
          <source>ERROR when not using backticks.</source>
          <target state="translated">백틱을 사용하지 않으면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e9199febdaab27118bac1b42feacb4f953051759" translate="yes" xml:space="preserve">
          <source>EXAMPLE</source>
          <target state="translated">EXAMPLE</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e974b798f49fb4a4cc543c3a62ba2ba7d7e6b101" translate="yes" xml:space="preserve">
          <source>Functions native to the RDBMS (for example, &lt;code&gt;NOW()&lt;/code&gt; in MySQL) should not be quoted, although their arguments are subject to the same string or identifier quoting rules already mentioned.</source>
          <target state="translated">RDBMS에 고유 한 함수 (예 : MySQL의 &lt;code&gt;NOW()&lt;/code&gt; )는 인용되어서는 안되지만, 인수에는 이미 언급 된 것과 동일한 문자열 또는 식별자 인용 규칙이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="94cf825fa1d3abfecf4a149a7632a28e486aea1a" translate="yes" xml:space="preserve">
          <source>Here I have deliberately forgotten to wrap the &lt;code&gt;title1&lt;/code&gt; with quotes. Now the server will take the &lt;code&gt;title1&lt;/code&gt; as a column name (i.e. an identifier). So, to indicate that it's a value you have to use either double or single quotes.</source>
          <target state="translated">여기서는 &lt;code&gt;title1&lt;/code&gt; 을 따옴표로 묶는 것을 의도적으로 잊어 버렸습니다. 이제 서버는 &lt;code&gt;title1&lt;/code&gt; 을 열 이름 (즉, 식별자)으로 사용합니다. 따라서 값임을 나타내려면 큰 따옴표 나 작은 따옴표를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="4a763aa684a171a96a38e00c93601f0a880682f5" translate="yes" xml:space="preserve">
          <source>Here the backticks will help the server to understand that the &lt;code&gt;database&lt;/code&gt; is in fact the name of the database, not the database identifier.</source>
          <target state="translated">여기서 백틱은 서버가 &lt;code&gt;database&lt;/code&gt; 가 실제로 데이터베이스 식별자가 아니라 데이터베이스의 이름임을 이해하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="4f81a4dc4011e810be2b92de1ec6a988879991d1" translate="yes" xml:space="preserve">
          <source>However, &lt;code&gt;123451a6&lt;/code&gt; is a perfectly fine identifier name (without back ticks).</source>
          <target state="translated">그러나 &lt;code&gt;123451a6&lt;/code&gt; 은 완벽하게 훌륭한 식별자 이름입니다 (뒤 진드기 없음).</target>
        </trans-unit>
        <trans-unit id="a4f56cb2abf950c1dfa214bb2db1ce7a12e1c976" translate="yes" xml:space="preserve">
          <source>I am trying to learn the best way to write queries. I also understand the importance of being consistent. Until now, I have randomly used single quotes, double quotes, and backticks without any real thought.</source>
          <target state="translated">쿼리를 작성하는 가장 좋은 방법을 배우려고합니다. 나는 또한 일관성의 중요성을 이해합니다. 지금까지는 아무 생각없이 작은 따옴표, 큰 따옴표 및 백틱을 무작위로 사용했습니다.</target>
        </trans-unit>
        <trans-unit id="7a9bf86a612725a6c1f6c761089d4ddb092b4044" translate="yes" xml:space="preserve">
          <source>I suggest that you avoid using &lt;code&gt;&quot;&lt;/code&gt; so that your code becomes independent of SQL modes</source>
          <target state="translated">코드를 SQL 모드와 독립적으로 만들기 위해 &lt;code&gt;&quot;&lt;/code&gt; 를 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="5f60d12129de9ac0f8ab9d5b826e24134bcace41" translate="yes" xml:space="preserve">
          <source>If need further clearance do follow &lt;a href=&quot;https://stackoverflow.com/questions/242813/when-to-use-double-or-single-quotes-in-javascript&quot;&gt;quotes in JavaScript&lt;/a&gt;</source>
          <target state="translated">추가 통관이 필요한 경우 &lt;a href=&quot;https://stackoverflow.com/questions/242813/when-to-use-double-or-single-quotes-in-javascript&quot;&gt;JavaScript에서 따옴표를&lt;/a&gt; 따르 십시오.</target>
        </trans-unit>
        <trans-unit id="be71c075bdbc1c4a895b09b719334569621f7c87" translate="yes" xml:space="preserve">
          <source>If table cols and values are variables then there are two ways:</source>
          <target state="translated">테이블 열과 값이 변수이면 두 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9bd21271adf2137aa18f7f1550c14e6a0e4f6b6" translate="yes" xml:space="preserve">
          <source>If ther's a &lt;code&gt;where&lt;/code&gt; statement in your query and/or trying to &lt;code&gt;insert&lt;/code&gt; a value and/or an &lt;code&gt;update&lt;/code&gt; of value which is string use single quote(') for these values like:</source>
          <target state="translated">쿼리에 &lt;code&gt;where&lt;/code&gt; 문이 있거나 문자열 인 값 및 / 또는 값 &lt;code&gt;update&lt;/code&gt; 를 &lt;code&gt;insert&lt;/code&gt; 하려고하면 이러한 값에 작은 따옴표 ( ')를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ef576002982235df7942f8b6022509ce993c7455" translate="yes" xml:space="preserve">
          <source>If you are trying to write query in your back-end to call MySQL then you can use double quote(&quot;) or single quotes(') to assign query to a variable like:</source>
          <target state="translated">백엔드에서 쿼리를 작성하여 MySQL을 호출하려는 경우 큰 따옴표 ( &quot;) 또는 작은 따옴표 ( ')를 사용하여 다음과 같은 변수에 쿼리를 할당 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d7bb6dd9c3505559eec418428d442550094778d" translate="yes" xml:space="preserve">
          <source>If you want to stay out of this confusion when to use double quotes(&quot;) and single quotes('), would recommend to stick with single quotes(') this will include backslash() like:</source>
          <target state="translated">큰 따옴표 ( &quot;)와 작은 따옴표 ( ')를 사용할 때이 혼동을 피하려면 작은 따옴표 (')를 사용하는 것이 좋습니다. 여기에는 backslash ()가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="7c29751a38776630a32c7e1e7d4595a893ad9ff4" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html#sqlmode_ansi_quotes&quot;&gt;&lt;code&gt;ANSI_QUOTES&lt;/code&gt;&lt;/a&gt; mode the &lt;code&gt;&quot;&lt;/code&gt; character can be used to enclose identifiers just like &lt;code&gt;`&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html#sqlmode_ansi_quotes&quot;&gt; &lt;code&gt;ANSI_QUOTES&lt;/code&gt; &lt;/a&gt; 모드에서 &lt;code&gt;&quot;&lt;/code&gt; 문자는 &lt;code&gt;`&lt;/code&gt; 와 같이 식별자를 묶는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6cf548a377690984817b64cc2d564bb2bd0be16" translate="yes" xml:space="preserve">
          <source>In MySQL, these symbols are used to delimit a query &lt;code&gt;`&lt;/code&gt; ,&lt;code&gt;&quot;&lt;/code&gt; ,&lt;code&gt;'&lt;/code&gt; and &lt;code&gt;()&lt;/code&gt; .</source>
          <target state="translated">MySQL에서 이러한 기호는 쿼리 &lt;code&gt;`&lt;/code&gt; , &lt;code&gt;&quot;&lt;/code&gt; , &lt;code&gt;'&lt;/code&gt; 및 &lt;code&gt;()&lt;/code&gt; 를 구분하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a65692f9a2f2ccad5c1fdbc6da666d455b5bf33f" translate="yes" xml:space="preserve">
          <source>In a nutshell; &lt;strong&gt;MySQL thinks you want to do math&lt;/strong&gt; on its own table/column and interprets hyphens such as &quot;e-mail&quot; as &lt;code&gt;e&lt;/code&gt;&lt;strong&gt;minus&lt;/strong&gt;&lt;code&gt;mail&lt;/code&gt;.</source>
          <target state="translated">간단히 말해서; &lt;strong&gt;MySQL은&lt;/strong&gt; 자체 테이블 / 열에서 &lt;strong&gt;수학&lt;/strong&gt; 을하고 &lt;strong&gt;싶다고 생각하고&lt;/strong&gt; &quot;e-mail&quot;과 같은 하이픈을 &lt;code&gt;e&lt;/code&gt; &lt;strong&gt;minus&lt;/strong&gt; &lt;code&gt;mail&lt;/code&gt; 로 해석 합니다 .</target>
        </trans-unit>
        <trans-unit id="9c211317a410743c5d6c983e704b3718ba22ed06" translate="yes" xml:space="preserve">
          <source>In combination of PHP and MySQL, double quotes and single quotes make your query writing time so much easier.</source>
          <target state="translated">PHP와 MySQL을 함께 사용하면 큰 따옴표와 작은 따옴표를 사용하여 쿼리 작성 시간을 훨씬 쉽게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2dc9e149434250d7fd746b11427230a7e86b3be1" translate="yes" xml:space="preserve">
          <source>In combination of PHP and MySQL, double quotes and single quotes make your query-writing time so much easier.</source>
          <target state="translated">PHP와 MySQL을 함께 사용하면 큰 따옴표와 작은 따옴표를 사용하여 쿼리 작성 시간을 훨씬 쉽게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="853461a0cd82d96ba71e241a4d83962a0f2666b0" translate="yes" xml:space="preserve">
          <source>Mostly, we use single quotes for an SQL string value, so we need to use double quotes for a PHP string.</source>
          <target state="translated">대부분 SQL 문자열 값에는 작은 따옴표를 사용하므로 PHP 문자열에는 큰 따옴표를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="0b6a5aa0c171380342f888c1606d55c54f6cf97d" translate="yes" xml:space="preserve">
          <source>MySQL also expects &lt;code&gt;DATE&lt;/code&gt; and &lt;code&gt;DATETIME&lt;/code&gt; literal values to be single-quoted as strings like &lt;code&gt;'2001-01-01 00:00:00'&lt;/code&gt;. Consult &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/date-and-time-literals.html&quot;&gt;the Date and Time Literals&lt;/a&gt; documentation for more details, in particular alternatives to using the hyphen &lt;code&gt;-&lt;/code&gt; as a segment delimiter in date strings.</source>
          <target state="translated">또한 MySQL은 &lt;code&gt;DATE&lt;/code&gt; 및 &lt;code&gt;DATETIME&lt;/code&gt; 리터럴 값이 &lt;code&gt;'2001-01-01 00:00:00'&lt;/code&gt; 과 같은 문자열로 작은 따옴표로 묶을 것으로 예상합니다. 날짜 문자열에서 세그먼트 구분 기호로 하이픈을 사용하는 방법에 대한 자세한 내용 &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/date-and-time-literals.html&quot;&gt;은 날짜 및 시간 리터럴&lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0cd5365acbce54464733f800d3e2f2cb6a4aebe2" translate="yes" xml:space="preserve">
          <source>No ERROR on backticks.</source>
          <target state="translated">백틱에 오류가 없습니다.</target>
        </trans-unit>
        <trans-unit id="01c108ac1d103d1516bc345e95d4ec9ac9b420a6" translate="yes" xml:space="preserve">
          <source>None of these table or column identifiers are reserved words or make use of characters requiring quoting, but I've quoted them anyway with backticks (more on this later...).</source>
          <target state="translated">이 테이블 또는 열 식별자는 예약어이거나 인용이 필요한 문자를 사용하지 않지만 어쨌든 백틱으로 인용했습니다 (나중에 자세히 설명합니다).</target>
        </trans-unit>
        <trans-unit id="28fee859607534b52f5c5e34eec1da4bccb3a417" translate="yes" xml:space="preserve">
          <source>Now about Double quotes &amp;amp; Single Quotes (Michael has already mentioned that).</source>
          <target state="translated">큰 따옴표 및 작은 따옴표에 대해 이제 (Michael은 이미 언급했습니다).</target>
        </trans-unit>
        <trans-unit id="8606c8b706526ec7a094d564c27838a760aa1e50" translate="yes" xml:space="preserve">
          <source>Now, in combination with PHP, double quotes and single quotes make your query writing time much easier. Let's see a modified version of the query in your question.</source>
          <target state="translated">이제 PHP와 함께 큰 따옴표와 작은 따옴표를 사용하면 쿼리 작성 시간이 훨씬 쉬워집니다. 질문에 수정 된 버전의 검색어를 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="05d78f2aa10becd6283e505907025d5685589d69" translate="yes" xml:space="preserve">
          <source>Now, suppose you are using a direct post variable into the MySQL query then, use it this way:</source>
          <target state="translated">이제 직접 사후 변수를 MySQL 쿼리에 사용한다고 가정하면 다음과 같이 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="693e36e4de7a62195a71e714f4c90f54916b168e" translate="yes" xml:space="preserve">
          <source>Now, using double quotes in the PHP, you will make the variables &lt;code&gt;$val1&lt;/code&gt;, and &lt;code&gt;$val2&lt;/code&gt; to use their values thus creating a perfectly valid query. Like</source>
          <target state="translated">이제 PHP에서 큰 따옴표를 사용하여 변수 &lt;code&gt;$val1&lt;/code&gt; 및 &lt;code&gt;$val2&lt;/code&gt; 를 사용하여 값을 사용하여 완벽하게 유효한 쿼리를 만듭니다. 처럼</target>
        </trans-unit>
        <trans-unit id="e72184f55cc026514b7160d78c3c5aef63c2a050" translate="yes" xml:space="preserve">
          <source>Or</source>
          <target state="translated">Or</target>
        </trans-unit>
        <trans-unit id="185bc949d8e637c87bdd6f1f0ee55566da841699" translate="yes" xml:space="preserve">
          <source>Perhaps it is important to mention that PHP handles single and double quoted strings differently...</source>
          <target state="translated">아마도 PHP는 작은 따옴표와 큰 따옴표로 묶인 문자열을 다르게 처리한다고 언급하는 것이 중요합니다 ...</target>
        </trans-unit>
        <trans-unit id="88e0e0a0df815f954f20830db35becc23bd2fb02" translate="yes" xml:space="preserve">
          <source>Prepared statements</source>
          <target state="translated">준비된 진술</target>
        </trans-unit>
        <trans-unit id="db8c5d7eb06f66c5c2883fd10b7c9f25e10cbf80" translate="yes" xml:space="preserve">
          <source>Problem with double(&quot;) or single(') quotes arise when we had to assign some value dynamic and perform some string concatenation like:</source>
          <target state="translated">double ( &quot;) 또는 single ( ') 따옴표 문제는 값을 동적으로 할당하고 다음과 같은 문자열 연결을 수행해야 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0e88a4043a367129052a923a43951e162472a3d3" translate="yes" xml:space="preserve">
          <source>SINGLE QUOTES(') are used around values.</source>
          <target state="translated">단일 인용 부호 ( ')는 값 주위에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="99382b494168d7b55cb152720e432f349b76b6ba" translate="yes" xml:space="preserve">
          <source>SQL servers and MySQL, PostgreySQL, Oracle don't understand double quotes(&quot;). Thus your query should be free from double quotes(&quot;) and should only use single quotes(').</source>
          <target state="translated">SQL 서버와 MySQL, PostgreySQL, Oracle은 큰 따옴표 ( &quot;)를 이해하지 못하므로 쿼리에는 큰 따옴표 (&quot;)가 없어야하며 작은 따옴표 ( ') 만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="e5d8f12a59e9d37cc970caf5496df216cd4c4e99" translate="yes" xml:space="preserve">
          <source>Same can be done for the table names and field names. This is a very &lt;em&gt;good habit&lt;/em&gt; if you wrap your database identifier with backticks.</source>
          <target state="translated">테이블 이름과 필드 이름에 대해서도 동일하게 수행 할 수 있습니다. 데이터베이스 식별자를 백틱으로 래핑 &lt;em&gt;하는&lt;/em&gt; 경우 이는 매우 &lt;em&gt;좋은 습관&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="840a76f9d9d4101767dd6c408ea67ac56627684f" translate="yes" xml:space="preserve">
          <source>Single quotes should be used for string values like in the &lt;code&gt;VALUES()&lt;/code&gt; list.  Double quotes are supported by MySQL for string values as well, but single quotes are more widely accepted by other RDBMS, so it is a good habit to use single quotes instead of double.</source>
          <target state="translated">작은 따옴표는 &lt;code&gt;VALUES()&lt;/code&gt; 목록과 같은 문자열 값에 사용해야합니다. 문자열 값은 MySQL에서 큰 따옴표를 지원하지만 다른 RDBMS에서는 작은 따옴표를 더 널리 사용하므로 큰 따옴표 대신 작은 따옴표를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="208154868777c5596cc50185f19d1c260427aa82" translate="yes" xml:space="preserve">
          <source>Single quotes should be used for string values like in the VALUES() list.</source>
          <target state="translated">작은 따옴표는 VALUES () 목록과 같은 문자열 값에 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="49e809f970df167664867752404912bcbeb9c826" translate="yes" xml:space="preserve">
          <source>Single-quoted strings are 'literals' and are pretty much WYSIWYG strings. Double-quoted strings are interpreted by PHP for possible variable-substitution (backticks in PHP are not exactly strings; they execute a command in the shell and return the result).</source>
          <target state="translated">작은 따옴표로 묶인 문자열은 '리터럴'이며 거의 WYSIWYG 문자열입니다. 큰 따옴표로 묶인 문자열은 가능한 변수 대체를 위해 PHP에 의해 해석됩니다 (PHP의 백틱은 정확히 문자열이 아니며 셸에서 명령을 실행하고 결과를 반환 함).</target>
        </trans-unit>
        <trans-unit id="9eaa0efb21da499527054208ef276f599b1f2281" translate="yes" xml:space="preserve">
          <source>So if your string contains single quotes, then you could use double quotes to quote the string, or if it contains double quotes, then you could use single quotes to quote the string. But if your string contains both single quotes and double quotes, you need to escape the one that used to quote the string.</source>
          <target state="translated">따라서 문자열에 작은 따옴표가 포함 된 경우 큰 따옴표를 사용하여 문자열을 인용하거나 큰 따옴표가 포함 된 경우 작은 따옴표를 사용하여 문자열을 인용 할 수 있습니다. 그러나 문자열에 작은 따옴표와 큰 따옴표가 모두 포함되어 있으면 문자열을 인용 할 때 사용한 따옴표를 이스케이프해야합니다.</target>
        </trans-unit>
        <trans-unit id="90a743846cd66e712bd99d8ed5918ec643324cc0" translate="yes" xml:space="preserve">
          <source>So using your example, I would double-quote the PHP string and use single quotes on the values &lt;code&gt;'val1', 'val2'&lt;/code&gt;.  &lt;code&gt;NULL&lt;/code&gt; is a MySQL keyword, and a special (non)-value, and is therefore unquoted.</source>
          <target state="translated">따라서 예제를 사용하여 PHP 문자열을 큰 따옴표로 &lt;code&gt;'val1', 'val2'&lt;/code&gt; 값에 작은 따옴표를 사용합니다. &lt;code&gt;NULL&lt;/code&gt; 은 MySQL 키워드이며 특수 (비) 값이므로 인용 부호가 없습니다.</target>
        </trans-unit>
        <trans-unit id="0d017453a7cc8300a916af70e40a39e5e8e2f1b6" translate="yes" xml:space="preserve">
          <source>The following query will produce different results (or errors) depending on SQL mode:</source>
          <target state="translated">다음 쿼리는 SQL 모드에 따라 다른 결과 (또는 오류)를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="adebd13f3da25e7bbda4c2effcd391c369d3f149" translate="yes" xml:space="preserve">
          <source>The query will select the column &lt;code&gt;column&lt;/code&gt; where column &lt;code&gt;foo&lt;/code&gt; is equal to column &lt;code&gt;bar&lt;/code&gt;</source>
          <target state="translated">쿼리는 &lt;code&gt;foo&lt;/code&gt; 열이 열 &lt;code&gt;bar&lt;/code&gt; 같은 열 &lt;code&gt;column&lt;/code&gt; 을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="9ee32a639440216e4b2f7ed7aa69a7ce5d857bc1" translate="yes" xml:space="preserve">
          <source>The query will select the string literal &lt;code&gt;&quot;column&quot;&lt;/code&gt; where column &lt;code&gt;foo&lt;/code&gt; is equal to string &lt;code&gt;&quot;bar&quot;&lt;/code&gt;</source>
          <target state="translated">쿼리는 &lt;code&gt;foo&lt;/code&gt; 열이 &lt;code&gt;&quot;bar&quot;&lt;/code&gt; 문자열과 같은 문자열 리터럴 &lt;code&gt;&quot;column&quot;&lt;/code&gt; 을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="ddf65abb76a47ea6d6931947e8f74f6da692f1a2" translate="yes" xml:space="preserve">
          <source>The quoting patterns for variables do not change, although if you intend to interpolate the variables directly in a string, it must be double-quoted in PHP. Just make sure that you have properly escaped the variables for use in SQL. (&lt;a href=&quot;https://stackoverflow.com/questions/60174/how-to-prevent-sql-injection-in-php&quot;&gt;It is recommended to use an API supporting prepared statements instead, as protection against SQL injection&lt;/a&gt;).</source>
          <target state="translated">변수의 인용 패턴은 변경되지 않지만 문자열에서 변수를 직접 보간하려는 경우 PHP에서 큰 따옴표를 사용해야합니다. SQL에서 사용하기 위해 변수를 올바르게 이스케이프했는지 확인하십시오. ( &lt;a href=&quot;https://stackoverflow.com/questions/60174/how-to-prevent-sql-injection-in-php&quot;&gt;SQL 주입을 방지하기 위해 준비된 명령문을 지원하는 API를 대신 사용하는 것이 좋습니다&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9dcec773dd6d848ae315fc05a43c597e3397f591" translate="yes" xml:space="preserve">
          <source>The string literals in MySQL and PHP are the same.</source>
          <target state="translated">MySQL과 PHP의 문자열 리터럴은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="28a083b8be20369358b80d4af6e18c9821470ac2" translate="yes" xml:space="preserve">
          <source>There are two types of quotes in MySQL:</source>
          <target state="translated">MySQL에는 두 가지 유형의 따옴표가 있습니다.</target>
        </trans-unit>
        <trans-unit id="26beaab34e0768054165d0c1783d4d12e91ffddd" translate="yes" xml:space="preserve">
          <source>There has been many helpful answers here, generally culminating into two points.</source>
          <target state="translated">여기에는 일반적으로 두 가지 요점으로 끝나는 많은 유용한 답변이 있습니다.</target>
        </trans-unit>
        <trans-unit id="78fa2e0372f5352b9d83a0736e9385e74fb02f28" translate="yes" xml:space="preserve">
          <source>There is a case though where an identifier can neither be a &lt;em&gt;reserved keyword&lt;/em&gt; or contain &lt;em&gt;whitespace&lt;/em&gt; or &lt;em&gt;characters beyond limited set&lt;/em&gt; but necessarily require backticks around them.</source>
          <target state="translated">식별자가 &lt;em&gt;예약 키워드&lt;/em&gt; 가 아니거나 &lt;em&gt;공백&lt;/em&gt; 이나 &lt;em&gt;제한된 세트를 초과하는 문자를&lt;/em&gt; 포함 할 수 있지만 반드시 주변에 백틱이 필요한 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ffb638c7729af90d6ab35de9742eb90045d7a9f7" translate="yes" xml:space="preserve">
          <source>This is completely because &lt;code&gt;1234156e6&lt;/code&gt; is also an exponential number.</source>
          <target state="translated">이것은 &lt;code&gt;1234156e6&lt;/code&gt; 도 지수 숫자이기 때문에 완전히 가능합니다.</target>
        </trans-unit>
        <trans-unit id="66dd3116ff7f609f37b4d10de5c37835eecf1d3b" translate="yes" xml:space="preserve">
          <source>This is the best practice for using PHP variables into MySQL.</source>
          <target state="translated">이것은 PHP 변수를 MySQL에 사용하는 가장 좋은 방법입니다.</target>
        </trans-unit>
        <trans-unit id="58d6e4e975e2f7eace65c91034b92638753a3c78" translate="yes" xml:space="preserve">
          <source>Use back ticks &lt;code&gt;``&lt;/code&gt; when a column/value name is similar to a MySQL reserved keyword.</source>
          <target state="translated">열 / 값 이름이 MySQL 예약 키워드와 유사한 경우 &lt;code&gt;``&lt;/code&gt; 틱을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9056c1c45a9a2f407b0675fff2c7c7401342b40b" translate="yes" xml:space="preserve">
          <source>Variable interpolation</source>
          <target state="translated">변수 보간</target>
        </trans-unit>
        <trans-unit id="4f4436a7610700ede1a264b9258f77eb38045437" translate="yes" xml:space="preserve">
          <source>What is the standard for this? What do you do?</source>
          <target state="translated">이것의 표준은 무엇입니까? 너 뭐하니?</target>
        </trans-unit>
        <trans-unit id="ed82b9ac93865fb15bdceac28e48b922d33a56ee" translate="yes" xml:space="preserve">
          <source>When to use single quotes, double quotes, and backticks in MySQL</source>
          <target state="translated">MySQL에서 작은 따옴표, 큰 따옴표 및 백틱을 사용하는 경우</target>
        </trans-unit>
        <trans-unit id="64f93b08c3ed93ef44b231186c6bd7e0a580b9a3" translate="yes" xml:space="preserve">
          <source>When to use what</source>
          <target state="translated">사용시기</target>
        </trans-unit>
        <trans-unit id="54f07e6ed7c59c30778e41c8bd305cbd13b96ba3" translate="yes" xml:space="preserve">
          <source>When working with prepared statements, consult the documentation to determine whether or not the statement's placeholders must be quoted.  The most popular APIs available in PHP, PDO and MySQLi, expect &lt;em&gt;unquoted&lt;/em&gt; placeholders, as do most prepared statement APIs in other languages:</source>
          <target state="translated">준비된 진술로 작업 할 때 설명서의 자리 표시자를 인용해야하는지 여부를 확인하려면 설명서를 참조하십시오. PHP, PDO 및 MySQLi에서 사용할 수있는 가장 인기있는 API는 다른 언어에서 가장 준비된 명령문 API와 같이 &lt;em&gt;인용 부호가없는&lt;/em&gt; 자리 표시자를 예상합니다.</target>
        </trans-unit>
        <trans-unit id="1ff715c4d19dd4560790ccb4ec16c12cb744669e" translate="yes" xml:space="preserve">
          <source>With double quotes &lt;code&gt;&quot;&quot;&lt;/code&gt; the complete query:</source>
          <target state="translated">큰 따옴표 &lt;code&gt;&quot;&quot;&lt;/code&gt; 를 사용 하여 전체 쿼리를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="97f55790949107a26fe97c8af77a0d602d9990c7" translate="yes" xml:space="preserve">
          <source>With single quotes &lt;code&gt;''&lt;/code&gt;:</source>
          <target state="translated">작은 따옴표로 &lt;code&gt;''&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c892ad3d5a3543c5ae3c83edfab273b7341a72e7" translate="yes" xml:space="preserve">
          <source>You can use characters beyond that set as table or column identifiers, including whitespace for example, but then you &lt;em&gt;must&lt;/em&gt; quote (backtick) them.</source>
          <target state="translated">예를 들어 공백을 포함하여 해당 세트 이상의 문자를 테이블 또는 열 식별자로 사용할 수 있지만 인용 부호 (백틱)를 &lt;em&gt;사용해야&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="c86679f13b3d62526371afbe4aff681c0612003f" translate="yes" xml:space="preserve">
          <source>[Without going into detail how you would get such an identifier name], Suppose I want to create a temporary table named &lt;code&gt;123456e6&lt;/code&gt;.</source>
          <target state="translated">[그러한 식별자 이름을 얻는 방법에 대해 자세히 설명하지 않고] &lt;code&gt;123456e6&lt;/code&gt; 이라는 임시 테이블을 만들고 싶다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="9d413bc3ea63f223ff615cfe259e30f18066d98c" translate="yes" xml:space="preserve">
          <source>will make</source>
          <target state="translated">할 것</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
