<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/11321491">
    <body>
      <group id="11321491">
        <trans-unit id="6097a10580050b75ec7d85d9d5ee9d68c82121ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.5/en/identifiers.html&quot;&gt;According to MySQL documentation&lt;/a&gt;, you do not need to quote (backtick) identifiers using the following character set:</source>
          <target state="translated">&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.5/en/identifiers.html&quot;&gt;De acuerdo con la documentaci&amp;oacute;n de MySQL&lt;/a&gt; , no necesita citar identificadores (retroceso) utilizando el siguiente conjunto de caracteres:</target>
        </trans-unit>
        <trans-unit id="90045b0d033e2dd619e6383df8041179e609f3e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;&lt;/code&gt; or &lt;code&gt;'&lt;/code&gt; are used for enclosing string-like values &lt;code&gt;&quot;26-01-2014 00:00:00&quot;&lt;/code&gt; or &lt;code&gt;'26-01-2014 00:00:00'&lt;/code&gt; . These symbols are only for strings, not aggregate functions like &lt;code&gt;now&lt;/code&gt;, &lt;code&gt;sum&lt;/code&gt;, or &lt;code&gt;max&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;&lt;/code&gt; o &lt;code&gt;'&lt;/code&gt; se usan para encerrar valores similares a cadenas &lt;code&gt;&quot;26-01-2014 00:00:00&quot;&lt;/code&gt; o &lt;code&gt;'26-01-2014 00:00:00'&lt;/code&gt; . Estos s&amp;iacute;mbolos son solo para cadenas, no para funciones agregadas como &lt;code&gt;now&lt;/code&gt; , &lt;code&gt;sum&lt;/code&gt; a o &lt;code&gt;max&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1d59f5f8b081c1446e0a241557283a4d5bc4cd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;/code&gt; for enclosing string literals</source>
          <target state="translated">&lt;code&gt;'&lt;/code&gt; para encerrar literales de cadena</target>
        </trans-unit>
        <trans-unit id="a80de0ca330c2f2aaefe4b688914a9cc7a012e95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt; simply enclose parts of a query e.g.   &lt;code&gt;select `column_name` from `table_name` where (id='2' and gender='male') or name='rakesh'&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; y &lt;code&gt;)&lt;/code&gt; simplemente encierre partes de una consulta, por ejemplo, &lt;code&gt;select `column_name` from `table_name` where (id='2' and gender='male') or name='rakesh'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b2f0352941e63498cd4c7fa4a455b1ce743796f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;123E10&lt;/code&gt; is a valid identifier name but also a valid &lt;code&gt;INTEGER&lt;/code&gt; literal.</source>
          <target state="translated">&lt;code&gt;123E10&lt;/code&gt; es un nombre de identificador v&amp;aacute;lido pero tambi&amp;eacute;n un literal &lt;code&gt;INTEGER&lt;/code&gt; v&amp;aacute;lido.</target>
        </trans-unit>
        <trans-unit id="da38380bf2f05c4bece3b8989ad72606b9d3ac17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;`&lt;/code&gt;  is used for enclosing table or column names, e.g. &lt;code&gt;select `column_name` from `table_name` where id='2'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;`&lt;/code&gt; se utiliza para encerrar nombres de tabla o columna, por ejemplo, &lt;code&gt;select `column_name` from `table_name` where id='2'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da03c042c5cf25afb1bafac2439fe779180a0bd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;`&lt;/code&gt; for enclosing identifiers such as table and column names</source>
          <target state="translated">&lt;code&gt;`&lt;/code&gt; para incluir identificadores como nombres de tabla y columna</target>
        </trans-unit>
        <trans-unit id="e616ce30e908e2aa2c025c12fddf0941e9987928" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;`table_name`&lt;/code&gt;. &lt;code&gt;`column_name`&lt;/code&gt;   &amp;lt;-- Note: exclude &lt;code&gt;.&lt;/code&gt;  from back ticks.</source>
          <target state="translated">&lt;code&gt;`table_name`&lt;/code&gt; . &lt;code&gt;`column_name`&lt;/code&gt; &amp;lt;- Nota: excluir &lt;code&gt;.&lt;/code&gt; de las garrapatas de la espalda.</target>
        </trans-unit>
        <trans-unit id="e9472c553def7914df498d93c687e68d18e0022d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(There are good answers above regarding the SQL nature of your question, but this may also be relevant if you are new to PHP.)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(Hay buenas respuestas anteriores con respecto a la naturaleza SQL de su pregunta, pero esto tambi&amp;eacute;n puede ser relevante si es nuevo en PHP).&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="deaf5aa7bf7c1c895ac2d93f5557710e2f50238c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;By default&lt;/em&gt; the &lt;code&gt;&quot;&lt;/code&gt; character can be used to enclose string literals just like &lt;code&gt;'&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;Por defecto,&lt;/em&gt; el &lt;code&gt;&quot;&lt;/code&gt; car&amp;aacute;cter puede usarse para encerrar literales de cadena como &lt;code&gt;'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="12fc96176da144173d5b5f6d12acdfe181173a67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Disclaimer:&lt;/strong&gt; So I thought I would add this as an &quot;FYI&quot; type of answer for those who are completely new to working with databases and who may not understand the technical terms described already.</source>
          <target state="translated">&lt;strong&gt;Descargo de responsabilidad:&lt;/strong&gt; Entonces, pens&amp;eacute; que agregar&amp;iacute;a esto como un tipo de respuesta &quot;FYI&quot; para aquellos que son completamente nuevos en el trabajo con bases de datos y que pueden no entender los t&amp;eacute;rminos t&amp;eacute;cnicos ya descritos.</target>
        </trans-unit>
        <trans-unit id="a19812fd99fa5716527f0685d3186fd7d816426a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you are denoting a column name with a table name then use back ticks like this:</source>
          <target state="translated">&lt;strong&gt;Nota:&lt;/strong&gt; Si est&amp;aacute; denotando un nombre de columna con el nombre de una tabla, use las marcas de retroceso como esta:</target>
        </trans-unit>
        <trans-unit id="60895f279f726f13bb47c03b7e3172d30cdde826" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;I've been reading answers to similar questions on here for about 20 minutes, but it seems like there is no definitive answer to this question.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;He estado leyendo respuestas a preguntas similares aqu&amp;iacute; durante unos 20 minutos, pero parece que no hay una respuesta definitiva a esta pregunta.&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="b83c40ec26f2f2e2a49118a4fad948bd11959972" translate="yes" xml:space="preserve">
          <source>A string is a sequence of bytes or characters, enclosed within either
  single quote (&amp;ldquo;'&amp;rdquo;) or double quote (&amp;ldquo;&quot;&amp;rdquo;) characters.</source>
          <target state="translated">Una cadena es una secuencia de bytes o caracteres, encerrada entre comillas simples (&amp;ldquo;'&amp;rdquo;) o comillas dobles (&amp;ldquo;&quot; &amp;rdquo;).</target>
        </trans-unit>
        <trans-unit id="4615ed604badacba54d261f18d9acd38d9c535fb" translate="yes" xml:space="preserve">
          <source>AND as @MichaelBerkowski said</source>
          <target state="translated">Y como @MichaelBerkowski dijo</target>
        </trans-unit>
        <trans-unit id="2622820d29bda626c277ee00365f43ae9ee7a2a8" translate="yes" xml:space="preserve">
          <source>ANSI_QUOTES disabled</source>
          <target state="translated">ANSI_QUOTES desactivado</target>
        </trans-unit>
        <trans-unit id="98cb3bec05013f28a22ddbdb7d1d65285553692f" translate="yes" xml:space="preserve">
          <source>ANSI_QUOTES enabled</source>
          <target state="translated">ANSI_QUOTES activado</target>
        </trans-unit>
        <trans-unit id="6b8f89108c71d3681d918d68fc197e69b138fb24" translate="yes" xml:space="preserve">
          <source>ASCII: &lt;code&gt;[0-9,a-z,A-Z$_]&lt;/code&gt; (basic Latin letters, digits 0-9, dollar, underscore)</source>
          <target state="translated">ASCII: &lt;code&gt;[0-9,a-z,A-Z$_]&lt;/code&gt; (letras latinas b&amp;aacute;sicas, d&amp;iacute;gitos 0-9, d&amp;oacute;lar, gui&amp;oacute;n bajo)</target>
        </trans-unit>
        <trans-unit id="adb5ad7318b3a95f2a3a3eec5e91188245c1f9fa" translate="yes" xml:space="preserve">
          <source>Also, in the above example, consider that &lt;code&gt;table&lt;/code&gt;, &lt;code&gt;col1&lt;/code&gt;, &lt;code&gt;val1&lt;/code&gt;, etc. may be variables.</source>
          <target state="translated">Adem&amp;aacute;s, en el ejemplo anterior, considere que la &lt;code&gt;table&lt;/code&gt; , &lt;code&gt;col1&lt;/code&gt; , &lt;code&gt;val1&lt;/code&gt; , etc. pueden ser variables.</target>
        </trans-unit>
        <trans-unit id="9da9a87dfc3b82e06d404a5b2dc7b1df991317ef" translate="yes" xml:space="preserve">
          <source>Always quote identifiers since it is a good practice (quite a few questions on SO discuss this)</source>
          <target state="translated">Siempre citar los identificadores ya que es una buena práctica (bastantes preguntas en el SO discuten esto)</target>
        </trans-unit>
        <trans-unit id="87b1a656c26103e950c3c0c57b60ec53877ef83c" translate="yes" xml:space="preserve">
          <source>And then there is &lt;code&gt;&quot;&lt;/code&gt; which is a special case. It could be used for &lt;em&gt;one&lt;/em&gt; of above-mentioned purposes at a time depending on MySQL server's &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html&quot;&gt;&lt;code&gt;sql_mode&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Y luego est&amp;aacute; &lt;code&gt;&quot;&lt;/code&gt; , que es un caso especial. Podr&amp;iacute;a usarse para &lt;em&gt;uno&lt;/em&gt; de los prop&amp;oacute;sitos mencionados anteriormente a la vez dependiendo del &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html&quot;&gt; &lt;code&gt;sql_mode&lt;/code&gt; &lt;/a&gt; del servidor MySQL:</target>
        </trans-unit>
        <trans-unit id="d79be8be1c06eef6b3594039b253c94737b212ba" translate="yes" xml:space="preserve">
          <source>And you could use a variable in PHP's double-quoted string:</source>
          <target state="translated">Y podrías usar una variable en la cadena de doble cita de PHP:</target>
        </trans-unit>
        <trans-unit id="e78a5da35a0f4e859b76dbcbf684350f545aae93" translate="yes" xml:space="preserve">
          <source>BACKTICKS(`) are used around identifier names.</source>
          <target state="translated">Los BACKTICKS(`)se usan alrededor de los nombres de los identificadores.</target>
        </trans-unit>
        <trans-unit id="0eddaaa57762e06093cf16a2eca308a76210c356" translate="yes" xml:space="preserve">
          <source>Back-trip(`) is optional to use in SQL and is used for table name, db name and column names.</source>
          <target state="translated">Back-trip(`)es opcional de usar en SQL y se usa para el nombre de la tabla,el nombre de la db y los nombres de las columnas.</target>
        </trans-unit>
        <trans-unit id="e016ca66c68af56f6e1542b4497d8f527b313bcc" translate="yes" xml:space="preserve">
          <source>Backticks are generally used to indicate an &lt;code&gt;identifier&lt;/code&gt; and as well be &lt;strong&gt;safe&lt;/strong&gt; from accidentally using the &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/keywords.html&quot;&gt;Reserved Keywords&lt;/a&gt;.</source>
          <target state="translated">Los backticks se usan generalmente para indicar un &lt;code&gt;identifier&lt;/code&gt; y tambi&amp;eacute;n est&amp;aacute;n a &lt;strong&gt;salvo&lt;/strong&gt; de usar accidentalmente las &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/keywords.html&quot;&gt;palabras clave reservadas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4ac2eea9a3ab2e5ace13b460c95cc0edd70a77ac" translate="yes" xml:space="preserve">
          <source>Backticks are generally used to indicate an identifier and as well be safe from accidentally using the reserved keywords.</source>
          <target state="translated">Los palillos se utilizan generalmente para indicar un identificador y también para evitar el uso accidental de las palabras clave reservadas.</target>
        </trans-unit>
        <trans-unit id="c1f3c18db147bebab8ccfa118fd95403942a780a" translate="yes" xml:space="preserve">
          <source>Backticks are to be used for table and column identifiers, but are
  only necessary when the identifier is a &lt;code&gt;MySQL&lt;/code&gt; reserved keyword, or
  when the identifier contains whitespace characters or characters
  beyond a limited set (see below) It is often recommended to avoid
  using reserved keywords as column or table identifiers when possible,
  avoiding the quoting issue.</source>
          <target state="translated">Los backticks deben usarse para los identificadores de tabla y columna, pero solo son necesarios cuando el identificador es una palabra clave reservada de &lt;code&gt;MySQL&lt;/code&gt; , o cuando el identificador contiene espacios en blanco o caracteres m&amp;aacute;s all&amp;aacute; de un conjunto limitado (ver m&amp;aacute;s abajo) A menudo se recomienda evitar el uso de palabras clave reservadas como identificadores de columna o tabla cuando sea posible, evitando el problema de las citas.</target>
        </trans-unit>
        <trans-unit id="970739737eb627ea72fad456ba23d9fd6b15447e" translate="yes" xml:space="preserve">
          <source>Backticks are to be used for table and column identifiers, but are only necessary when the identifier is a &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/keywords.html&quot;&gt;MySQL reserved keyword&lt;/a&gt;, or when the identifier contains whitespace characters or characters beyond a limited set (see below) It is often recommended to avoid using reserved keywords as column or table identifiers when possible, avoiding the quoting issue.</source>
          <target state="translated">Los backticks deben usarse para los identificadores de tabla y columna, pero solo son necesarios cuando el identificador es una &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/keywords.html&quot;&gt;palabra clave reservada de MySQL&lt;/a&gt; , o cuando el identificador contiene espacios en blanco o caracteres m&amp;aacute;s all&amp;aacute; de un conjunto limitado (ver m&amp;aacute;s abajo) A menudo se recomienda evitar el uso de palabras clave reservadas como identificadores de columna o tabla cuando sea posible, evitando el problema de las citas.</target>
        </trans-unit>
        <trans-unit id="7b67ad97a7905e28021888adb6b075e99bd7dfc5" translate="yes" xml:space="preserve">
          <source>Besides all of the (well-explained) answers, there hasn't been the following mentioned and I visit this Q&amp;amp;A quite often.</source>
          <target state="translated">Adem&amp;aacute;s de todas las respuestas (bien explicadas), no se ha mencionado lo siguiente y visito estas preguntas y respuestas con bastante frecuencia.</target>
        </trans-unit>
        <trans-unit id="fadc64aefd2086615b50e6053cff09b85e061547" translate="yes" xml:space="preserve">
          <source>But if &lt;code&gt;$val1&lt;/code&gt; or &lt;code&gt;$val2&lt;/code&gt; contains single quotes, that will make your SQL be wrong. So you need to escape it before it is used in sql; that is what &lt;code&gt;mysql_real_escape_string&lt;/code&gt; is for. (Although a prepared statement is better.)</source>
          <target state="translated">Pero si &lt;code&gt;$val1&lt;/code&gt; o &lt;code&gt;$val2&lt;/code&gt; contiene comillas simples, eso har&amp;aacute; que su SQL est&amp;eacute; equivocado. Por lo tanto, debe escapar antes de que se use en sql; para eso es &lt;code&gt;mysql_real_escape_string&lt;/code&gt; . (Aunque una declaraci&amp;oacute;n preparada es mejor).</target>
        </trans-unit>
        <trans-unit id="53ee153e28dc13a819ab66374649167bc848ff1b" translate="yes" xml:space="preserve">
          <source>But, to define a value you have to use either single or double quotes. Lets see another example.</source>
          <target state="translated">Pero,para definir un valor hay que usar comillas simples o dobles.Veamos otro ejemplo.</target>
        </trans-unit>
        <trans-unit id="295538c6b767eb09e4635898c20cc6628d6c8a75" translate="yes" xml:space="preserve">
          <source>Characters requring backtick quoting in identifiers:</source>
          <target state="translated">Caracteres que requieren retroceso citando en los identificadores:</target>
        </trans-unit>
        <trans-unit id="33540ed181289a1140c17a2c218548c4015aacf8" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;https://stackoverflow.com/a/261476/295264&quot;&gt;this&lt;/a&gt; answer to understand more about backticks.</source>
          <target state="translated">Verifique &lt;a href=&quot;https://stackoverflow.com/a/261476/295264&quot;&gt;esta&lt;/a&gt; respuesta para comprender m&amp;aacute;s sobre los backticks.</target>
        </trans-unit>
        <trans-unit id="01d813a36b899f97a17fcdd3eeea9309b45be4ec" translate="yes" xml:space="preserve">
          <source>ERROR when not using backticks.</source>
          <target state="translated">ERROR cuando no se usan palos de espalda.</target>
        </trans-unit>
        <trans-unit id="e9199febdaab27118bac1b42feacb4f953051759" translate="yes" xml:space="preserve">
          <source>EXAMPLE</source>
          <target state="translated">EXAMPLE</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="e974b798f49fb4a4cc543c3a62ba2ba7d7e6b101" translate="yes" xml:space="preserve">
          <source>Functions native to the RDBMS (for example, &lt;code&gt;NOW()&lt;/code&gt; in MySQL) should not be quoted, although their arguments are subject to the same string or identifier quoting rules already mentioned.</source>
          <target state="translated">Las funciones nativas del RDBMS (por ejemplo, &lt;code&gt;NOW()&lt;/code&gt; en MySQL) no se deben citar, aunque sus argumentos est&amp;aacute;n sujetos a las mismas reglas de comillas de cadena o identificador ya mencionadas.</target>
        </trans-unit>
        <trans-unit id="94cf825fa1d3abfecf4a149a7632a28e486aea1a" translate="yes" xml:space="preserve">
          <source>Here I have deliberately forgotten to wrap the &lt;code&gt;title1&lt;/code&gt; with quotes. Now the server will take the &lt;code&gt;title1&lt;/code&gt; as a column name (i.e. an identifier). So, to indicate that it's a value you have to use either double or single quotes.</source>
          <target state="translated">Aqu&amp;iacute; he olvidado deliberadamente envolver el &lt;code&gt;title1&lt;/code&gt; con comillas. Ahora el servidor tomar&amp;aacute; el &lt;code&gt;title1&lt;/code&gt; como un nombre de columna (es decir, un identificador). Entonces, para indicar que es un valor, debe usar comillas dobles o simples.</target>
        </trans-unit>
        <trans-unit id="4a763aa684a171a96a38e00c93601f0a880682f5" translate="yes" xml:space="preserve">
          <source>Here the backticks will help the server to understand that the &lt;code&gt;database&lt;/code&gt; is in fact the name of the database, not the database identifier.</source>
          <target state="translated">Aqu&amp;iacute; los backticks ayudar&amp;aacute;n al servidor a comprender que la &lt;code&gt;database&lt;/code&gt; es, de hecho, el nombre de la base de datos, no el identificador de la base de datos.</target>
        </trans-unit>
        <trans-unit id="4f81a4dc4011e810be2b92de1ec6a988879991d1" translate="yes" xml:space="preserve">
          <source>However, &lt;code&gt;123451a6&lt;/code&gt; is a perfectly fine identifier name (without back ticks).</source>
          <target state="translated">Sin embargo, &lt;code&gt;123451a6&lt;/code&gt; es un nombre de identificador perfectamente fino (sin marcas de retroceso).</target>
        </trans-unit>
        <trans-unit id="a4f56cb2abf950c1dfa214bb2db1ce7a12e1c976" translate="yes" xml:space="preserve">
          <source>I am trying to learn the best way to write queries. I also understand the importance of being consistent. Until now, I have randomly used single quotes, double quotes, and backticks without any real thought.</source>
          <target state="translated">Estoy tratando de aprender la mejor manera de escribir las preguntas.También entiendo la importancia de ser coherente.Hasta ahora,he usado al azar comillas simples,comillas dobles y palillos sin ningún pensamiento real.</target>
        </trans-unit>
        <trans-unit id="7a9bf86a612725a6c1f6c761089d4ddb092b4044" translate="yes" xml:space="preserve">
          <source>I suggest that you avoid using &lt;code&gt;&quot;&lt;/code&gt; so that your code becomes independent of SQL modes</source>
          <target state="translated">Le sugiero que evite usar &lt;code&gt;&quot;&lt;/code&gt; para que su c&amp;oacute;digo se vuelva independiente de los modos SQL</target>
        </trans-unit>
        <trans-unit id="5f60d12129de9ac0f8ab9d5b826e24134bcace41" translate="yes" xml:space="preserve">
          <source>If need further clearance do follow &lt;a href=&quot;https://stackoverflow.com/questions/242813/when-to-use-double-or-single-quotes-in-javascript&quot;&gt;quotes in JavaScript&lt;/a&gt;</source>
          <target state="translated">Si necesita m&amp;aacute;s autorizaci&amp;oacute;n, siga las &lt;a href=&quot;https://stackoverflow.com/questions/242813/when-to-use-double-or-single-quotes-in-javascript&quot;&gt;citas en JavaScript&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be71c075bdbc1c4a895b09b719334569621f7c87" translate="yes" xml:space="preserve">
          <source>If table cols and values are variables then there are two ways:</source>
          <target state="translated">Si la tabla cols y los valores son variables,entonces hay dos maneras:</target>
        </trans-unit>
        <trans-unit id="f9bd21271adf2137aa18f7f1550c14e6a0e4f6b6" translate="yes" xml:space="preserve">
          <source>If ther's a &lt;code&gt;where&lt;/code&gt; statement in your query and/or trying to &lt;code&gt;insert&lt;/code&gt; a value and/or an &lt;code&gt;update&lt;/code&gt; of value which is string use single quote(') for these values like:</source>
          <target state="translated">Si hay una instrucci&amp;oacute;n &lt;code&gt;where&lt;/code&gt; en su consulta y / o intenta &lt;code&gt;insert&lt;/code&gt; ar un valor y / o una &lt;code&gt;update&lt;/code&gt; de valor que es una cadena, use comillas simples (') para estos valores como:</target>
        </trans-unit>
        <trans-unit id="ef576002982235df7942f8b6022509ce993c7455" translate="yes" xml:space="preserve">
          <source>If you are trying to write query in your back-end to call MySQL then you can use double quote(&quot;) or single quotes(') to assign query to a variable like:</source>
          <target state="translated">Si estás tratando de escribir una consulta en tu back-end para llamar a MySQL,entonces puedes usar comillas dobles(&quot;)o comillas simples(')para asignar la consulta a una variable como:</target>
        </trans-unit>
        <trans-unit id="0d7bb6dd9c3505559eec418428d442550094778d" translate="yes" xml:space="preserve">
          <source>If you want to stay out of this confusion when to use double quotes(&quot;) and single quotes('), would recommend to stick with single quotes(') this will include backslash() like:</source>
          <target state="translated">Si quieres evitar esta confusión cuando uses comillas dobles(&quot;)y comillas simples('),te recomendamos que te quedes con las comillas simples(')esto incluirá la barra invertida()como:</target>
        </trans-unit>
        <trans-unit id="7c29751a38776630a32c7e1e7d4595a893ad9ff4" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html#sqlmode_ansi_quotes&quot;&gt;&lt;code&gt;ANSI_QUOTES&lt;/code&gt;&lt;/a&gt; mode the &lt;code&gt;&quot;&lt;/code&gt; character can be used to enclose identifiers just like &lt;code&gt;`&lt;/code&gt;</source>
          <target state="translated">En el modo &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html#sqlmode_ansi_quotes&quot;&gt; &lt;code&gt;ANSI_QUOTES&lt;/code&gt; &lt;/a&gt; , el car&amp;aacute;cter &lt;code&gt;&quot;&lt;/code&gt; se puede usar para encerrar identificadores como`</target>
        </trans-unit>
        <trans-unit id="b6cf548a377690984817b64cc2d564bb2bd0be16" translate="yes" xml:space="preserve">
          <source>In MySQL, these symbols are used to delimit a query &lt;code&gt;`&lt;/code&gt; ,&lt;code&gt;&quot;&lt;/code&gt; ,&lt;code&gt;'&lt;/code&gt; and &lt;code&gt;()&lt;/code&gt; .</source>
          <target state="translated">En MySQL, estos s&amp;iacute;mbolos se usan para delimitar una consulta &lt;code&gt;`&lt;/code&gt; , &lt;code&gt;&quot;&lt;/code&gt; , &lt;code&gt;'&lt;/code&gt; y &lt;code&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a65692f9a2f2ccad5c1fdbc6da666d455b5bf33f" translate="yes" xml:space="preserve">
          <source>In a nutshell; &lt;strong&gt;MySQL thinks you want to do math&lt;/strong&gt; on its own table/column and interprets hyphens such as &quot;e-mail&quot; as &lt;code&gt;e&lt;/code&gt;&lt;strong&gt;minus&lt;/strong&gt;&lt;code&gt;mail&lt;/code&gt;.</source>
          <target state="translated">En una palabra; &lt;strong&gt;MySQL cree que desea hacer c&amp;aacute;lculos matem&amp;aacute;ticos&lt;/strong&gt; en su propia tabla / columna e interpreta guiones como &quot;correo electr&amp;oacute;nico&quot; como &lt;code&gt;e&lt;/code&gt; &lt;code&gt;mail&lt;/code&gt; &lt;strong&gt;menos&lt;/strong&gt; correo .</target>
        </trans-unit>
        <trans-unit id="9c211317a410743c5d6c983e704b3718ba22ed06" translate="yes" xml:space="preserve">
          <source>In combination of PHP and MySQL, double quotes and single quotes make your query writing time so much easier.</source>
          <target state="translated">En combinación con PHP y MySQL,las comillas dobles y simples hacen que el tiempo de escritura de la consulta sea mucho más fácil.</target>
        </trans-unit>
        <trans-unit id="2dc9e149434250d7fd746b11427230a7e86b3be1" translate="yes" xml:space="preserve">
          <source>In combination of PHP and MySQL, double quotes and single quotes make your query-writing time so much easier.</source>
          <target state="translated">En combinación con PHP y MySQL,las comillas dobles y simples hacen que el tiempo de escritura de la consulta sea mucho más fácil.</target>
        </trans-unit>
        <trans-unit id="853461a0cd82d96ba71e241a4d83962a0f2666b0" translate="yes" xml:space="preserve">
          <source>Mostly, we use single quotes for an SQL string value, so we need to use double quotes for a PHP string.</source>
          <target state="translated">En la mayoría de los casos,usamos comillas simples para un valor de cadena SQL,por lo que necesitamos usar comillas dobles para una cadena PHP.</target>
        </trans-unit>
        <trans-unit id="0b6a5aa0c171380342f888c1606d55c54f6cf97d" translate="yes" xml:space="preserve">
          <source>MySQL also expects &lt;code&gt;DATE&lt;/code&gt; and &lt;code&gt;DATETIME&lt;/code&gt; literal values to be single-quoted as strings like &lt;code&gt;'2001-01-01 00:00:00'&lt;/code&gt;. Consult &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/date-and-time-literals.html&quot;&gt;the Date and Time Literals&lt;/a&gt; documentation for more details, in particular alternatives to using the hyphen &lt;code&gt;-&lt;/code&gt; as a segment delimiter in date strings.</source>
          <target state="translated">MySQL tambi&amp;eacute;n espera que los valores literales &lt;code&gt;DATE&lt;/code&gt; y &lt;code&gt;DATETIME&lt;/code&gt; sean entrecomillados como cadenas como &lt;code&gt;'2001-01-01 00:00:00'&lt;/code&gt; . Consulte &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/date-and-time-literals.html&quot;&gt;la&lt;/a&gt; documentaci&amp;oacute;n de Literales de fecha y hora para obtener m&amp;aacute;s detalles, en particular alternativas al uso del gui&amp;oacute;n &lt;code&gt;-&lt;/code&gt; como un delimitador de segmento en las cadenas de fecha.</target>
        </trans-unit>
        <trans-unit id="0cd5365acbce54464733f800d3e2f2cb6a4aebe2" translate="yes" xml:space="preserve">
          <source>No ERROR on backticks.</source>
          <target state="translated">No hay ERROR en los palos de la espalda.</target>
        </trans-unit>
        <trans-unit id="01c108ac1d103d1516bc345e95d4ec9ac9b420a6" translate="yes" xml:space="preserve">
          <source>None of these table or column identifiers are reserved words or make use of characters requiring quoting, but I've quoted them anyway with backticks (more on this later...).</source>
          <target state="translated">Ninguno de estos identificadores de tabla o columna son palabras reservadas o hacen uso de caracteres que requieran ser citados,pero los he citado de todas formas con palillos de espalda (más sobre esto más tarde...).</target>
        </trans-unit>
        <trans-unit id="28fee859607534b52f5c5e34eec1da4bccb3a417" translate="yes" xml:space="preserve">
          <source>Now about Double quotes &amp;amp; Single Quotes (Michael has already mentioned that).</source>
          <target state="translated">Ahora sobre comillas dobles y comillas simples (Michael ya lo ha mencionado).</target>
        </trans-unit>
        <trans-unit id="8606c8b706526ec7a094d564c27838a760aa1e50" translate="yes" xml:space="preserve">
          <source>Now, in combination with PHP, double quotes and single quotes make your query writing time much easier. Let's see a modified version of the query in your question.</source>
          <target state="translated">Ahora,en combinación con PHP,las comillas dobles y simples hacen que el tiempo de escritura de la consulta sea mucho más fácil.Veamos una versión modificada de la consulta en tu pregunta.</target>
        </trans-unit>
        <trans-unit id="05d78f2aa10becd6283e505907025d5685589d69" translate="yes" xml:space="preserve">
          <source>Now, suppose you are using a direct post variable into the MySQL query then, use it this way:</source>
          <target state="translated">Ahora,supongamos que estás usando una variable de entrada directa en la consulta de MySQL,entonces,úsala de esta manera:</target>
        </trans-unit>
        <trans-unit id="693e36e4de7a62195a71e714f4c90f54916b168e" translate="yes" xml:space="preserve">
          <source>Now, using double quotes in the PHP, you will make the variables &lt;code&gt;$val1&lt;/code&gt;, and &lt;code&gt;$val2&lt;/code&gt; to use their values thus creating a perfectly valid query. Like</source>
          <target state="translated">Ahora, usando comillas dobles en PHP, har&amp;aacute; que las variables &lt;code&gt;$val1&lt;/code&gt; y &lt;code&gt;$val2&lt;/code&gt; usen sus valores creando as&amp;iacute; una consulta perfectamente v&amp;aacute;lida. Me gusta</target>
        </trans-unit>
        <trans-unit id="e72184f55cc026514b7160d78c3c5aef63c2a050" translate="yes" xml:space="preserve">
          <source>Or</source>
          <target state="translated">Or</target>
        </trans-unit>
        <trans-unit id="185bc949d8e637c87bdd6f1f0ee55566da841699" translate="yes" xml:space="preserve">
          <source>Perhaps it is important to mention that PHP handles single and double quoted strings differently...</source>
          <target state="translated">Tal vez sea importante mencionar que PHP maneja de forma diferente las cadenas de citas simples y dobles...</target>
        </trans-unit>
        <trans-unit id="88e0e0a0df815f954f20830db35becc23bd2fb02" translate="yes" xml:space="preserve">
          <source>Prepared statements</source>
          <target state="translated">Declaraciones preparadas</target>
        </trans-unit>
        <trans-unit id="db8c5d7eb06f66c5c2883fd10b7c9f25e10cbf80" translate="yes" xml:space="preserve">
          <source>Problem with double(&quot;) or single(') quotes arise when we had to assign some value dynamic and perform some string concatenation like:</source>
          <target state="translated">El problema de las comillas dobles(&quot;)o simples(')surge cuando tuvimos que asignar algún valor dinámico y realizar alguna concatenación de cadenas como:</target>
        </trans-unit>
        <trans-unit id="0e88a4043a367129052a923a43951e162472a3d3" translate="yes" xml:space="preserve">
          <source>SINGLE QUOTES(') are used around values.</source>
          <target state="translated">Las CUPONES ÚNICAS (')se usan alrededor de los valores.</target>
        </trans-unit>
        <trans-unit id="99382b494168d7b55cb152720e432f349b76b6ba" translate="yes" xml:space="preserve">
          <source>SQL servers and MySQL, PostgreySQL, Oracle don't understand double quotes(&quot;). Thus your query should be free from double quotes(&quot;) and should only use single quotes(').</source>
          <target state="translated">Los servidores SQL y MySQL,PostgreySQL,Oracle no entienden las comillas dobles(&quot;).Por lo tanto,su consulta debe estar libre de comillas dobles(&quot;)y sólo debe usar comillas simples(').</target>
        </trans-unit>
        <trans-unit id="e5d8f12a59e9d37cc970caf5496df216cd4c4e99" translate="yes" xml:space="preserve">
          <source>Same can be done for the table names and field names. This is a very &lt;em&gt;good habit&lt;/em&gt; if you wrap your database identifier with backticks.</source>
          <target state="translated">Lo mismo se puede hacer para los nombres de tabla y nombres de campo. Este es un muy &lt;em&gt;buen h&amp;aacute;bito&lt;/em&gt; si envuelve el identificador de su base de datos con backticks.</target>
        </trans-unit>
        <trans-unit id="840a76f9d9d4101767dd6c408ea67ac56627684f" translate="yes" xml:space="preserve">
          <source>Single quotes should be used for string values like in the &lt;code&gt;VALUES()&lt;/code&gt; list.  Double quotes are supported by MySQL for string values as well, but single quotes are more widely accepted by other RDBMS, so it is a good habit to use single quotes instead of double.</source>
          <target state="translated">Las comillas simples deben usarse para valores de cadena como en la lista &lt;code&gt;VALUES()&lt;/code&gt; . MySQL tambi&amp;eacute;n admite comillas dobles para los valores de cadena, pero las comillas simples son m&amp;aacute;s ampliamente aceptadas por otros RDBMS, por lo que es un buen h&amp;aacute;bito usar comillas simples en lugar de dobles.</target>
        </trans-unit>
        <trans-unit id="208154868777c5596cc50185f19d1c260427aa82" translate="yes" xml:space="preserve">
          <source>Single quotes should be used for string values like in the VALUES() list.</source>
          <target state="translated">Las comillas simples deben usarse para los valores de las cadenas como en la lista VALORES().</target>
        </trans-unit>
        <trans-unit id="49e809f970df167664867752404912bcbeb9c826" translate="yes" xml:space="preserve">
          <source>Single-quoted strings are 'literals' and are pretty much WYSIWYG strings. Double-quoted strings are interpreted by PHP for possible variable-substitution (backticks in PHP are not exactly strings; they execute a command in the shell and return the result).</source>
          <target state="translated">Las cuerdas de una sola cita son &quot;literales&quot; y son más o menos cuerdas WYSIWYG.Las cadenas de doble comilla son interpretadas por PHP para una posible sustitución de variables (los backticks en PHP no son exactamente cadenas;ejecutan un comando en el shell y devuelven el resultado).</target>
        </trans-unit>
        <trans-unit id="9eaa0efb21da499527054208ef276f599b1f2281" translate="yes" xml:space="preserve">
          <source>So if your string contains single quotes, then you could use double quotes to quote the string, or if it contains double quotes, then you could use single quotes to quote the string. But if your string contains both single quotes and double quotes, you need to escape the one that used to quote the string.</source>
          <target state="translated">Así que si tu cadena contiene comillas simples,entonces podrías usar comillas dobles para citar la cadena,o si contiene comillas dobles,entonces podrías usar comillas simples para citar la cadena.Pero si tu cadena contiene tanto comillas simples como dobles,necesitas escapar de la que usaba para citar la cadena.</target>
        </trans-unit>
        <trans-unit id="90a743846cd66e712bd99d8ed5918ec643324cc0" translate="yes" xml:space="preserve">
          <source>So using your example, I would double-quote the PHP string and use single quotes on the values &lt;code&gt;'val1', 'val2'&lt;/code&gt;.  &lt;code&gt;NULL&lt;/code&gt; is a MySQL keyword, and a special (non)-value, and is therefore unquoted.</source>
          <target state="translated">Entonces, usando su ejemplo, yo citar&amp;iacute;a la cadena PHP y usar&amp;iacute;a comillas simples en los valores &lt;code&gt;'val1', 'val2'&lt;/code&gt; . &lt;code&gt;NULL&lt;/code&gt; es una palabra clave de MySQL y un valor especial (no) y, por lo tanto, no est&amp;aacute; entre comillas.</target>
        </trans-unit>
        <trans-unit id="0d017453a7cc8300a916af70e40a39e5e8e2f1b6" translate="yes" xml:space="preserve">
          <source>The following query will produce different results (or errors) depending on SQL mode:</source>
          <target state="translated">La siguiente consulta producirá diferentes resultados (o errores)dependiendo del modo SQL:</target>
        </trans-unit>
        <trans-unit id="adebd13f3da25e7bbda4c2effcd391c369d3f149" translate="yes" xml:space="preserve">
          <source>The query will select the column &lt;code&gt;column&lt;/code&gt; where column &lt;code&gt;foo&lt;/code&gt; is equal to column &lt;code&gt;bar&lt;/code&gt;</source>
          <target state="translated">La consulta seleccionar&amp;aacute; la columna &lt;code&gt;column&lt;/code&gt; a donde la columna &lt;code&gt;foo&lt;/code&gt; es igual a la &lt;code&gt;bar&lt;/code&gt; ra de la columna</target>
        </trans-unit>
        <trans-unit id="9ee32a639440216e4b2f7ed7aa69a7ce5d857bc1" translate="yes" xml:space="preserve">
          <source>The query will select the string literal &lt;code&gt;&quot;column&quot;&lt;/code&gt; where column &lt;code&gt;foo&lt;/code&gt; is equal to string &lt;code&gt;&quot;bar&quot;&lt;/code&gt;</source>
          <target state="translated">La consulta seleccionar&amp;aacute; la cadena literal &lt;code&gt;&quot;column&quot;&lt;/code&gt; donde la columna &lt;code&gt;foo&lt;/code&gt; es igual a la cadena &lt;code&gt;&quot;bar&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ddf65abb76a47ea6d6931947e8f74f6da692f1a2" translate="yes" xml:space="preserve">
          <source>The quoting patterns for variables do not change, although if you intend to interpolate the variables directly in a string, it must be double-quoted in PHP. Just make sure that you have properly escaped the variables for use in SQL. (&lt;a href=&quot;https://stackoverflow.com/questions/60174/how-to-prevent-sql-injection-in-php&quot;&gt;It is recommended to use an API supporting prepared statements instead, as protection against SQL injection&lt;/a&gt;).</source>
          <target state="translated">Los patrones de comillas para las variables no cambian, aunque si tiene la intenci&amp;oacute;n de interpolar las variables directamente en una cadena, debe ser entre comillas dobles en PHP. Solo aseg&amp;uacute;rese de haber escapado correctamente de las variables para su uso en SQL. ( &lt;a href=&quot;https://stackoverflow.com/questions/60174/how-to-prevent-sql-injection-in-php&quot;&gt;En su lugar, se recomienda utilizar una API que admita declaraciones preparadas, como protecci&amp;oacute;n contra la inyecci&amp;oacute;n de SQL&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9dcec773dd6d848ae315fc05a43c597e3397f591" translate="yes" xml:space="preserve">
          <source>The string literals in MySQL and PHP are the same.</source>
          <target state="translated">Los literales de la cadena en MySQL y PHP son los mismos.</target>
        </trans-unit>
        <trans-unit id="28a083b8be20369358b80d4af6e18c9821470ac2" translate="yes" xml:space="preserve">
          <source>There are two types of quotes in MySQL:</source>
          <target state="translated">Hay dos tipos de citas en MySQL:</target>
        </trans-unit>
        <trans-unit id="26beaab34e0768054165d0c1783d4d12e91ffddd" translate="yes" xml:space="preserve">
          <source>There has been many helpful answers here, generally culminating into two points.</source>
          <target state="translated">Ha habido muchas respuestas útiles aquí,generalmente culminando en dos puntos.</target>
        </trans-unit>
        <trans-unit id="78fa2e0372f5352b9d83a0736e9385e74fb02f28" translate="yes" xml:space="preserve">
          <source>There is a case though where an identifier can neither be a &lt;em&gt;reserved keyword&lt;/em&gt; or contain &lt;em&gt;whitespace&lt;/em&gt; or &lt;em&gt;characters beyond limited set&lt;/em&gt; but necessarily require backticks around them.</source>
          <target state="translated">Sin embargo, hay un caso en el que un identificador no puede ser una &lt;em&gt;palabra clave reservada&lt;/em&gt; ni contener &lt;em&gt;espacios en blanco&lt;/em&gt; o &lt;em&gt;caracteres m&amp;aacute;s all&amp;aacute; de un conjunto limitado,&lt;/em&gt; sino que necesariamente requiere retroceder a su alrededor.</target>
        </trans-unit>
        <trans-unit id="ffb638c7729af90d6ab35de9742eb90045d7a9f7" translate="yes" xml:space="preserve">
          <source>This is completely because &lt;code&gt;1234156e6&lt;/code&gt; is also an exponential number.</source>
          <target state="translated">Esto es completamente porque &lt;code&gt;1234156e6&lt;/code&gt; tambi&amp;eacute;n es un n&amp;uacute;mero exponencial.</target>
        </trans-unit>
        <trans-unit id="66dd3116ff7f609f37b4d10de5c37835eecf1d3b" translate="yes" xml:space="preserve">
          <source>This is the best practice for using PHP variables into MySQL.</source>
          <target state="translated">Esta es la mejor práctica para usar las variables PHP en MySQL.</target>
        </trans-unit>
        <trans-unit id="58d6e4e975e2f7eace65c91034b92638753a3c78" translate="yes" xml:space="preserve">
          <source>Use back ticks &lt;code&gt;``&lt;/code&gt; when a column/value name is similar to a MySQL reserved keyword.</source>
          <target state="translated">Use las marcas de retroceso &lt;code&gt;``&lt;/code&gt; cuando el nombre de una columna / valor es similar a una palabra clave reservada de MySQL.</target>
        </trans-unit>
        <trans-unit id="9056c1c45a9a2f407b0675fff2c7c7401342b40b" translate="yes" xml:space="preserve">
          <source>Variable interpolation</source>
          <target state="translated">Interpolación variable</target>
        </trans-unit>
        <trans-unit id="4f4436a7610700ede1a264b9258f77eb38045437" translate="yes" xml:space="preserve">
          <source>What is the standard for this? What do you do?</source>
          <target state="translated">¿Cuál es el estándar para esto? ¿A qué se dedica?</target>
        </trans-unit>
        <trans-unit id="ed82b9ac93865fb15bdceac28e48b922d33a56ee" translate="yes" xml:space="preserve">
          <source>When to use single quotes, double quotes, and backticks in MySQL</source>
          <target state="translated">Cuándo usar comillas simples,comillas dobles y backticks en MySQL</target>
        </trans-unit>
        <trans-unit id="64f93b08c3ed93ef44b231186c6bd7e0a580b9a3" translate="yes" xml:space="preserve">
          <source>When to use what</source>
          <target state="translated">Cuándo usar lo que</target>
        </trans-unit>
        <trans-unit id="54f07e6ed7c59c30778e41c8bd305cbd13b96ba3" translate="yes" xml:space="preserve">
          <source>When working with prepared statements, consult the documentation to determine whether or not the statement's placeholders must be quoted.  The most popular APIs available in PHP, PDO and MySQLi, expect &lt;em&gt;unquoted&lt;/em&gt; placeholders, as do most prepared statement APIs in other languages:</source>
          <target state="translated">Cuando trabaje con declaraciones preparadas, consulte la documentaci&amp;oacute;n para determinar si se deben citar o no los marcadores de posici&amp;oacute;n de la declaraci&amp;oacute;n. Las API m&amp;aacute;s populares disponibles en PHP, PDO y MySQLi, esperan marcadores de posici&amp;oacute;n sin &lt;em&gt;comillas&lt;/em&gt; , al igual que las API de declaraciones m&amp;aacute;s preparadas en otros idiomas:</target>
        </trans-unit>
        <trans-unit id="1ff715c4d19dd4560790ccb4ec16c12cb744669e" translate="yes" xml:space="preserve">
          <source>With double quotes &lt;code&gt;&quot;&quot;&lt;/code&gt; the complete query:</source>
          <target state="translated">Con comillas dobles &lt;code&gt;&quot;&quot;&lt;/code&gt; la consulta completa:</target>
        </trans-unit>
        <trans-unit id="97f55790949107a26fe97c8af77a0d602d9990c7" translate="yes" xml:space="preserve">
          <source>With single quotes &lt;code&gt;''&lt;/code&gt;:</source>
          <target state="translated">Con comillas simples &lt;code&gt;''&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c892ad3d5a3543c5ae3c83edfab273b7341a72e7" translate="yes" xml:space="preserve">
          <source>You can use characters beyond that set as table or column identifiers, including whitespace for example, but then you &lt;em&gt;must&lt;/em&gt; quote (backtick) them.</source>
          <target state="translated">Puede usar caracteres m&amp;aacute;s all&amp;aacute; de ese conjunto como identificadores de tabla o columna, incluido el espacio en blanco, por ejemplo, pero luego &lt;em&gt;debe&lt;/em&gt; citarlos (hacer una marca de retroceso).</target>
        </trans-unit>
        <trans-unit id="c86679f13b3d62526371afbe4aff681c0612003f" translate="yes" xml:space="preserve">
          <source>[Without going into detail how you would get such an identifier name], Suppose I want to create a temporary table named &lt;code&gt;123456e6&lt;/code&gt;.</source>
          <target state="translated">[Sin entrar en detalles sobre c&amp;oacute;mo obtendr&amp;iacute;a un nombre de identificador de este tipo], suponga que quiero crear una tabla temporal llamada &lt;code&gt;123456e6&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d413bc3ea63f223ff615cfe259e30f18066d98c" translate="yes" xml:space="preserve">
          <source>will make</source>
          <target state="translated">hará</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
