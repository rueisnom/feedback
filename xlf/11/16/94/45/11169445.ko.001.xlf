<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/11169445">
    <body>
      <group id="11169445">
        <trans-unit id="a979ef10cc6f6a36df6b8a323307ee3bb2e2db9c" translate="yes" xml:space="preserve">
          <source>+</source>
          <target state="translated">+</target>
        </trans-unit>
        <trans-unit id="e16d87c9f88437121301492ad691068ef35ff709" translate="yes" xml:space="preserve">
          <source>, so dotNET solution is great, except with my Excel 2010 I need to add a &lt;code&gt;set&lt;/code&gt; if I want to avoid an error:</source>
          <target state="translated">내 Excel 2010을 제외하고 dotNET 솔루션은 훌륭합니다. 오류를 피하려면 &lt;code&gt;set&lt;/code&gt; 를 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="42c5c71f91129e276544cd59f430e6e26d5657e0" translate="yes" xml:space="preserve">
          <source>.
In the figure, the last cell is B3, since formatting was applied explicitly to it. Cells B6:D7 have a format derived from a Conditional Formatting rule, and this is not detected even by &lt;code&gt;UsedRange&lt;/code&gt;.
Accounting for this would require some VBA programming.</source>
          <target state="translated">. 그림에서 형식은 셀에 명시 적으로 적용되었으므로 마지막 셀은 B3입니다. 셀 B6 : D7에는 조건부 서식 규칙에서 파생 된 형식이 있으며 &lt;code&gt;UsedRange&lt;/code&gt; 에서도 검색되지 않습니다. 이를 위해서는 VBA 프로그래밍이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="90279fc1b099cf71dadcf777892f14454e06cd77" translate="yes" xml:space="preserve">
          <source>... is to ensure that your &lt;code&gt;LastRow&lt;/code&gt; variable is of &lt;code&gt;Long&lt;/code&gt; type:</source>
          <target state="translated">... &lt;code&gt;LastRow&lt;/code&gt; 변수가 &lt;code&gt;Long&lt;/code&gt; 유형인지 확인하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="50171d450d3ba1f16aa205436c4e719c3a4e7ce4" translate="yes" xml:space="preserve">
          <source>1) data, i.e., a formula, possibly resulting in a blank value;</source>
          <target state="translated">1) 데이터, 즉 공식은 가능한 빈 값을 초래한다.</target>
        </trans-unit>
        <trans-unit id="1ebb318f8cf81fa4bc124e61c2ff72bd8a788344" translate="yes" xml:space="preserve">
          <source>2) a value, i.e., a non-blank formula or constant;</source>
          <target state="translated">2) 값, 즉 비 공백 공식 또는 상수;</target>
        </trans-unit>
        <trans-unit id="22b6e992d021264c705372cb44d69f5e7fe1e344" translate="yes" xml:space="preserve">
          <source>3) formatting;</source>
          <target state="translated">3) 서식;</target>
        </trans-unit>
        <trans-unit id="13129d27f1cb0260621fdbd39f0c1e6747eed88a" translate="yes" xml:space="preserve">
          <source>4) conditional formatting;</source>
          <target state="translated">4) 조건부 서식;</target>
        </trans-unit>
        <trans-unit id="457a3a02ee9880ed0a789f8eeb81ef1e2d884288" translate="yes" xml:space="preserve">
          <source>5) a shape (including Comment) overlapping the cell;</source>
          <target state="translated">5) 셀과 겹치는 모양 (주석 포함);</target>
        </trans-unit>
        <trans-unit id="5540618320c7d6c2d925bb4b28fe63945d7c6594" translate="yes" xml:space="preserve">
          <source>6) involvement in a Table (List Object).</source>
          <target state="translated">6) 테이블에 참여 (목록 객체).</target>
        </trans-unit>
        <trans-unit id="22b1ba405ab214fc1f34064ef18723d3ae1dd8b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.Find&lt;/code&gt; allows you to find the last row with any data (including formulas) or a non-blank value &lt;strong&gt;in any column&lt;/strong&gt;. You can choose whether you're interested in formulas or values, but the catch is that it &lt;strong&gt;resets the defaults in the Excel's Find dialog&lt;/strong&gt; ️️⚠️, which can be highly confusing to your users. It also needs to be used carefully, see &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/11169920#11169920&quot;&gt;the answer by Siddharth Rout&lt;/a&gt; here (section &lt;em&gt;&quot;Find Last Row in a Sheet&quot;&lt;/em&gt;)</source>
          <target state="translated">&lt;code&gt;.Find&lt;/code&gt; 를 사용하면 열에 데이터 (공식 포함) 또는 공백이 아닌 값 &lt;strong&gt;이있는&lt;/strong&gt; 마지막 행을 찾을 수 있습니다. 수식이나 값에 관심이 있는지 여부를 선택할 수 있지만 &lt;strong&gt;Excel의 찾기 대화 상자&lt;/strong&gt; ️️⚠️ &lt;strong&gt;에서 기본값을 재설정&lt;/strong&gt; 하여 사용자에게 혼란을 줄 수 있습니다. 또한 신중하게 사용해야합니다. 여기 &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/11169920#11169920&quot;&gt;Siddharth Rout의 답변을&lt;/a&gt; 참조하십시오 ( &lt;em&gt;&quot;시트에서 마지막 행 찾기&quot;&lt;/em&gt; 섹션)</target>
        </trans-unit>
        <trans-unit id="082c164e2a49a85097288c48424ae3ad12b139fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.SpecialCells(xlLastCell)&lt;/code&gt; is equivalent to CTRL+END, returning the bottom-most and right-most cell of the &quot;used range&quot;, so all caveats that apply to relying on the &quot;used range&quot;, apply to this method as well. In addition, the &quot;used range&quot; is only reset when saving the workbook and when accessing &lt;code&gt;worksheet.UsedRange&lt;/code&gt;, so &lt;code&gt;xlLastCell&lt;/code&gt; might produce stale results⚠️ with unsaved modifications (e.g. after some rows were deleted). See the &lt;a href=&quot;https://stackoverflow.com/a/29899739/1026&quot;&gt;nearby answer by dotNET&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.SpecialCells(xlLastCell)&lt;/code&gt; 은 CTRL + END와 동일하며 &quot;사용 된 범위&quot;의 맨 아래 및 가장 오른쪽 셀을 반환하므로 &quot;사용 된 범위&quot;에 의존하는 모든 경고는이 방법에도 적용됩니다. 또한 &quot;사용 된 범위&quot;는 통합 문서를 저장하고 &lt;code&gt;worksheet.UsedRange&lt;/code&gt; 에 액세스 할 때만 재설정됩니다. 따라서 &lt;code&gt;xlLastCell&lt;/code&gt; 은 저장되지 않은 수정 사항 (예 : 일부 행이 삭제 된 후)으로 오래된 결과를 생성 할 수 있습니다. &lt;a href=&quot;https://stackoverflow.com/a/29899739/1026&quot;&gt;dotNET 근처의 답변을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c8d5c80654f41fb18aa065da52dfc4068b45ba28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CountA&lt;/code&gt; is also unreliable because it will give you incorrect result if there are blank cells in between.</source>
          <target state="translated">&lt;code&gt;CountA&lt;/code&gt; 도 사이에 빈 셀이 있으면 잘못된 결과를 제공하기 때문에 신뢰할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3472237bbea1c727f19b1ed7a6e0f62a9da12855" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UsedRange&lt;/code&gt; should &lt;strong&gt;NEVER&lt;/strong&gt; be used to find the last cell which has data. It is highly unreliable. Try this experiment.</source>
          <target state="translated">&lt;code&gt;UsedRange&lt;/code&gt; 를 사용하여 데이터가있는 마지막 셀을 찾지 &lt;strong&gt;마십시오&lt;/strong&gt; . 매우 신뢰할 수 없습니다. 이 실험을 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="e1ff96b8d2bf45246034678efa083835144145a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sht.UsedRange&lt;/code&gt; (described in detail in &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/27637752#27637752&quot;&gt;the answer by sancho.s&lt;/a&gt; here) considers &lt;strong&gt;both data and formatting&lt;/strong&gt; (though not conditional formatting) and &lt;strong&gt;resets the &quot;used range&quot; of the worksheet&lt;/strong&gt;, which may or may not be what you want.</source>
          <target state="translated">&lt;code&gt;sht.UsedRange&lt;/code&gt; (여기 &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/27637752#27637752&quot;&gt;에서 sancho.s의 답변&lt;/a&gt; 에 자세히 설명되어 있음) &lt;strong&gt;는 데이터와 서식을 모두&lt;/strong&gt; 고려 &lt;strong&gt;하고&lt;/strong&gt; (조건부 서식은 아니지만) &lt;strong&gt;워크 시트의 &quot;사용 범위&quot;를 재설정합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="964c5fb14c411a677b9e0813b3666d3f612e29a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xlDown&lt;/code&gt; is equally unreliable.</source>
          <target state="translated">&lt;code&gt;xlDown&lt;/code&gt; 도 마찬가지로 신뢰할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="947ab43f26a459cc5b04a32b7660e6bd290fa55d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;For criterion 1, I suggest reading &lt;a href=&quot;https://stackoverflow.com/a/11169920/2707864&quot;&gt;this answer&lt;/a&gt;&lt;/em&gt;.
Note that &lt;code&gt;UsedRange&lt;/code&gt; is cited as unreliable. I think that is misleading (i.e., &quot;unfair&quot; to &lt;code&gt;UsedRange&lt;/code&gt;), as &lt;code&gt;UsedRange&lt;/code&gt; is simply not meant to report the last cell containing data. So it should not be used in this case, as indicated in that answer. See also &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/27637752#comment43694683_11169920&quot;&gt;this comment&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;기준 1의 &lt;a href=&quot;https://stackoverflow.com/a/11169920/2707864&quot;&gt;경우이 답변을&lt;/a&gt; 읽는 것이 좋습니다&lt;/em&gt; . &lt;code&gt;UsedRange&lt;/code&gt; 는 신뢰할 수없는 것으로 인용되었습니다. &lt;code&gt;UsedRange&lt;/code&gt; 는 단순히 데이터를 포함하는 마지막 셀을보고하지 않기 때문에 오해의 소지가 있습니다 (즉, &lt;code&gt;UsedRange&lt;/code&gt; 에 대한 &quot;불공평 한&quot;). 따라서이 답변에 표시된 대로이 경우에는 사용해서는 안됩니다. &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/27637752#comment43694683_11169920&quot;&gt;이 주석&lt;/a&gt; 도 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2eb186b9850bae47c4f94b3b7fa572afa7fb07b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;For criterion 2, &lt;code&gt;UsedRange&lt;/code&gt; is the most reliable option&lt;/em&gt;, as compared to other options also designed for this use. It even makes it unnecessary to save a workbook to make sure that the last cell is updated.</source>
          <target state="translated">&lt;em&gt;기준 2의 경우 &lt;code&gt;UsedRange&lt;/code&gt; &lt;/em&gt; 가이 용도로 설계된 다른 옵션과 비교할 때 &lt;em&gt;가장 신뢰할 수있는 옵션&lt;/em&gt; 입니다. 마지막 셀이 업데이트되도록 통합 문서를 저장할 필요조차 없습니다.</target>
        </trans-unit>
        <trans-unit id="23265a10b14eacd402cd349318fcaebce9469d2d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;For criterion 3, I do not know any built-in method&lt;/em&gt;.
Criterion 2 does not account for Conditional Formatting. One may have formatted cells, based on formulas, which are not detected by &lt;code&gt;UsedRange&lt;/code&gt; or</source>
          <target state="translated">&lt;em&gt;기준 3의 경우 내장 방법을 모릅니다&lt;/em&gt; . 기준 2는 조건부 서식을 설명하지 않습니다. &lt;code&gt;UsedRange&lt;/code&gt; 에 의해 감지되지 않는 수식을 기반으로 서식이 지정된 셀이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2986b1e12f783945988e88275b90d0b1ef85d14c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;As to the correct way of finding the last used cell, one has first to decide what is considered &lt;em&gt;used&lt;/em&gt;, and then select a suitable method&lt;/strong&gt;. I conceive at least three meanings:</source>
          <target state="translated">&lt;strong&gt;마지막으로 사용한 셀을 찾는 올바른 방법에 대해서는 먼저 &lt;em&gt;사용 된&lt;/em&gt; 것으로 간주 한 다음 적절한 방법을 선택해야합니다&lt;/strong&gt; . 나는 적어도 세 가지 의미를 생각합니다.</target>
        </trans-unit>
        <trans-unit id="0609fe1265b301d24a84a9b84f24be5bd931b8b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;As to your specific question&lt;/strong&gt;:
&lt;em&gt;What's the reason behind this?&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;특정 질문에 관해서&lt;/strong&gt; : &lt;em&gt;이것의 이유는 무엇입니까?&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ba5488062d51a5419c8387f16743e8e32aa123f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How to find the last used cell depends on what &lt;em&gt;you&lt;/em&gt; want (your criterion)&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;마지막으로 사용한 셀을 찾는 방법은 원하는 항목 (귀하의 기준)에 따라 다릅니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="e3eb2400d177caf81b9af5b98f6842cf9ae2dd38" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: I intend to make this a &quot;one stop post&quot; where you can use the &lt;code&gt;Correct&lt;/code&gt; way to find the last row. This will also cover the best practices to follow when finding the last row. And hence I will keep on updating it whenever I come across a new scenario/information.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;code&gt;Correct&lt;/code&gt; 행을 사용하여 마지막 행을 찾을 수있는 &quot;원 스톱 포스트&quot;로 만들고 싶습니다. 마지막 행을 찾을 때 따라야 할 모범 사례도 다룹니다. 따라서 새로운 시나리오 / 정보를 접할 때마다 계속 업데이트하겠습니다.</target>
        </trans-unit>
        <trans-unit id="f8f8e92323045e0f09274cfc00622f82167d21bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: this answer was motivated by &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-excel-with-vba/27637752#comment43694683_11169920&quot;&gt;this comment&lt;/a&gt;. The purpose of &lt;code&gt;UsedRange&lt;/code&gt; is different from what is mentioned in the answer above.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고 :이 답변은 &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-excel-with-vba/27637752#comment43694683_11169920&quot;&gt;이 의견에&lt;/a&gt; 의해 동기 부여되었습니다.&lt;/strong&gt; &lt;strong&gt; &lt;code&gt;UsedRange&lt;/code&gt; 의 목적은 위의 답변에서 언급 한 것과 다릅니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e934e5f6d1ba2799c583ac44b8d46e134b3c925" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unreliable ways of finding the last row&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;마지막 행을 찾는 신뢰할 수없는 방법&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="228349b401590ce1e1379b02938d4cb36cae4b6d" translate="yes" xml:space="preserve">
          <source>A solution involving &lt;code&gt;.End(xlUp)&lt;/code&gt; to search backwards from the end of a column will, just as CTRL+UP, look for &lt;strong&gt;data&lt;/strong&gt; (formulas producing a blank value are considered &quot;data&quot;) in &lt;strong&gt;visible rows&lt;/strong&gt; (so using it with autofilter enabled might produce incorrect results ⚠️).</source>
          <target state="translated">CTRL + UP과 마찬가지로 열 끝에서 뒤로 검색하기 위해 &lt;code&gt;.End(xlUp)&lt;/code&gt; 가 포함 된 솔루션은 &lt;strong&gt;보이는 행&lt;/strong&gt; 에서 &lt;strong&gt;데이터&lt;/strong&gt; (공백 값을 생성하는 수식은 &quot;데이터&quot;로 간주 됨)를 찾습니다 (자동 필터가 활성화 된 상태에서 사용) 잘못된 결과가 발생할 수 있습니다 ⚠️).</target>
        </trans-unit>
        <trans-unit id="afdcdb759cf0c6e0ebe96335036114a9a51951b2" translate="yes" xml:space="preserve">
          <source>A word of caution: Excel keeps track of the most bottom-right cell that was ever used in a worksheet. So if for example you enter something in &lt;strong&gt;B3&lt;/strong&gt; and something else in &lt;strong&gt;H8&lt;/strong&gt; and then later on delete the contents of &lt;strong&gt;H8&lt;/strong&gt;, pressing</source>
          <target state="translated">주의 사항 : Excel은 워크 시트에 사용 된 가장 오른쪽 아래 셀을 추적합니다. 예를 들어 &lt;strong&gt;B3에&lt;/strong&gt; 무언가를 입력하고 &lt;strong&gt;H8에&lt;/strong&gt; 무언가를 입력 한 다음 나중에 &lt;strong&gt;H8&lt;/strong&gt; 의 내용을 삭제하면</target>
        </trans-unit>
        <trans-unit id="89e1ad7a70a4655c7cccc84bd881246d8668f6d8" translate="yes" xml:space="preserve">
          <source>A) Can there be &lt;em&gt;hidden rows&lt;/em&gt; (e.g. autofilter), &lt;em&gt;blank cells&lt;/em&gt; or blank rows?</source>
          <target state="translated">A) &lt;em&gt;숨겨진 행&lt;/em&gt; (예 : 자동 필터), &lt;em&gt;빈 셀&lt;/em&gt; 또는 빈 행이있을 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="b44b2d59b62d239c1176824bb02a78274e5ca96e" translate="yes" xml:space="preserve">
          <source>A65536</source>
          <target state="translated">A65536</target>
        </trans-unit>
        <trans-unit id="07a1c590cf7fc5eee7f69dfa2212e40bddcf4b42" translate="yes" xml:space="preserve">
          <source>Allows for multiple columns.</source>
          <target state="translated">여러 열을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="a3f1186d89280629d62897d2eb8ade9c50380eeb" translate="yes" xml:space="preserve">
          <source>Also, I would have my version of any LastRow procedure return a zero for a blank worksheet, then I can know it is blank.</source>
          <target state="translated">또한 LastRow 프로 시저의 버전에서 빈 워크 시트에 대해 0을 반환하면 비어 있음을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2ad2c56384b97cb10dc27dd7acc803edc8c3d14" translate="yes" xml:space="preserve">
          <source>And hence one should avoid the use of &lt;code&gt;UsedRange&lt;/code&gt;, &lt;code&gt;xlDown&lt;/code&gt; and &lt;code&gt;CountA&lt;/code&gt; to find the last cell.</source>
          <target state="translated">따라서 &lt;code&gt;UsedRange&lt;/code&gt; , &lt;code&gt;xlDown&lt;/code&gt; 및 &lt;code&gt;CountA&lt;/code&gt; 를 사용하여 마지막 셀을 찾지 않아야 합니다.</target>
        </trans-unit>
        <trans-unit id="90de0bc63e7f1d8f63b37f112d99e749d3824960" translate="yes" xml:space="preserve">
          <source>Any solution based on &lt;code&gt;Count&lt;/code&gt;ing (&lt;code&gt;CountA&lt;/code&gt; or &lt;code&gt;Cells*.Count&lt;/code&gt;) or &lt;code&gt;.CurrentRegion&lt;/code&gt; will also break in presence of blank cells or rows 👎</source>
          <target state="translated">&lt;code&gt;Count&lt;/code&gt; ( &lt;code&gt;CountA&lt;/code&gt; 또는 &lt;code&gt;Cells*.Count&lt;/code&gt; &lt;code&gt;.CurrentRegion&lt;/code&gt; ) 또는 .CurrentRegion 을 기반으로하는 모든 솔루션은 빈 셀이나 행이있는 경우에도 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="827b15a547418cd461276f8e34806f2cb8bcc457" translate="yes" xml:space="preserve">
          <source>B) What kind of performance is acceptable?</source>
          <target state="translated">B) 어떤 종류의 성능이 허용됩니까?</target>
        </trans-unit>
        <trans-unit id="399cfddfc99d4c04e7ead04644adabb2913ab2e6" translate="yes" xml:space="preserve">
          <source>C) Can the VBA macro affect the workbook or the application settings in any way?</source>
          <target state="translated">C) VBA 매크로가 통합 문서 또는 응용 프로그램 설정에 어떤 방식으로 영향을 줄 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="b38bed0f0e9601a07358ec72777da31f91720f2a" translate="yes" xml:space="preserve">
          <source>CTRL</source>
          <target state="translated">CTRL</target>
        </trans-unit>
        <trans-unit id="67a19b1bc7ddad4d1497ab55d5007648d46c8730" translate="yes" xml:space="preserve">
          <source>Consider this code</source>
          <target state="translated">이 코드를 고려</target>
        </trans-unit>
        <trans-unit id="c2fa758266b2393030e2e79e17d4de889eb6f9b9" translate="yes" xml:space="preserve">
          <source>CountA</source>
          <target state="translated">CountA</target>
        </trans-unit>
        <trans-unit id="dd6a02a553da4cb247f914011dd67c37487ec082" translate="yes" xml:space="preserve">
          <source>Ctrl</source>
          <target state="translated">Ctrl</target>
        </trans-unit>
        <trans-unit id="ef978457620a85de6cfe4a42cbf3fcd777f0aadd" translate="yes" xml:space="preserve">
          <source>Doesn't modify &lt;code&gt;Find&lt;/code&gt; settings</source>
          <target state="translated">&lt;code&gt;Find&lt;/code&gt; 설정을 수정하지 않습니다</target>
        </trans-unit>
        <trans-unit id="f45f0a3752ff13d006a65f09a4643e63c1237391" translate="yes" xml:space="preserve">
          <source>Down Arrow</source>
          <target state="translated">아래쪽 화살표</target>
        </trans-unit>
        <trans-unit id="ded8a062beb3dfd80c08fb77e6ed233232f5f6f7" translate="yes" xml:space="preserve">
          <source>Dynamic if used as a UDF with the entire column selected.</source>
          <target state="translated">전체 열이 선택된 상태에서 UDF로 사용되는 경우 동적입니다.</target>
        </trans-unit>
        <trans-unit id="a2bb9d34b8a1a79665858d354585cf147e0dee4e" translate="yes" xml:space="preserve">
          <source>End</source>
          <target state="translated">End</target>
        </trans-unit>
        <trans-unit id="2b9eceb7a86a9f577ef80586c5c1d7fde9ff493d" translate="yes" xml:space="preserve">
          <source>Enter</source>
          <target state="translated">Enter</target>
        </trans-unit>
        <trans-unit id="8c779217d385497ba00923f05a4251995de90c9d" translate="yes" xml:space="preserve">
          <source>Error in finding last used cell in Excel with VBA</source>
          <target state="translated">VBA를 사용하여 Excel에서 마지막으로 사용한 셀을 찾는 중 오류</target>
        </trans-unit>
        <trans-unit id="d828785426216820d97931d2e3e0d2b7815bb6ac" translate="yes" xml:space="preserve">
          <source>Find Last Row in a Column</source>
          <target state="translated">열에서 마지막 행 찾기</target>
        </trans-unit>
        <trans-unit id="47b91153781234c92589a0056245907807660af4" translate="yes" xml:space="preserve">
          <source>Find Last Row in a Sheet</source>
          <target state="translated">시트에서 마지막 행 찾기</target>
        </trans-unit>
        <trans-unit id="1aac4178e77a57e13dfe9bb8135895e704efd322" translate="yes" xml:space="preserve">
          <source>Find Last Row in a Table (ListObject)</source>
          <target state="translated">테이블에서 마지막 행 찾기 (ListObject)</target>
        </trans-unit>
        <trans-unit id="f37e39003a54f93edb9babc69566c14fcdbc8707" translate="yes" xml:space="preserve">
          <source>For more detailed results, some lines in the code can be uncommented:</source>
          <target state="translated">보다 자세한 결과를 얻으려면 코드의 일부 줄을 주석 처리 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc05091b11cf96b9437722b41fd14d850655b350" translate="yes" xml:space="preserve">
          <source>For the case of the OP, this is the way to get the last row in column &lt;code&gt;E&lt;/code&gt;:</source>
          <target state="translated">OP의 경우 &lt;code&gt;E&lt;/code&gt; 열의 마지막 행을 얻는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="b72984bea83b8b6e6ab6c3dea0afcc7bb792ac52" translate="yes" xml:space="preserve">
          <source>For the last 3+ years these are the functions that I am using for finding last row and last column per defined column(for row) and row(for column):</source>
          <target state="translated">지난 3 년 동안 이들은 정의 된 열 (행) 및 행 (열) 당 마지막 행과 마지막 열을 찾는 데 사용하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="0070a6d45299b17e29d08c598e6fbde9b6876494" translate="yes" xml:space="preserve">
          <source>Here is a scenario to show how &lt;code&gt;UsedRange&lt;/code&gt; works.</source>
          <target state="translated">다음은 &lt;code&gt;UsedRange&lt;/code&gt; 작동 방식을 보여주는 시나리오입니다.</target>
        </trans-unit>
        <trans-unit id="e36a22e2b2de344373d0f2c50a9a46edb4974cc4" translate="yes" xml:space="preserve">
          <source>Here we may use the &lt;a href=&quot;https://www.vitoshacademy.com/last-used-row-last-used-column-in-excel-with-formula-without-vba/&quot;&gt;well-known Excel formulas&lt;/a&gt;, which give us the last row of a worksheet in Excel, without involving VBA - &lt;code&gt;=IFERROR(LOOKUP(2,1/(NOT(ISBLANK(A:A))),ROW(A:A)),0)&lt;/code&gt;</source>
          <target state="translated">여기서 우리는 &lt;a href=&quot;https://www.vitoshacademy.com/last-used-row-last-used-column-in-excel-with-formula-without-vba/&quot;&gt;잘 알려진 Excel 공식을&lt;/a&gt; 사용할 수 있습니다 &lt;code&gt;=IFERROR(LOOKUP(2,1/(NOT(ISBLANK(A:A))),ROW(A:A)),0)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f6a079383f4dba363d70604d44c63a58521b8cb" translate="yes" xml:space="preserve">
          <source>Here's my two cents.</source>
          <target state="translated">여기 내 센트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d080817ae211b70ffb8548327b1435f255163a6" translate="yes" xml:space="preserve">
          <source>Here,</source>
          <target state="translated">Here,</target>
        </trans-unit>
        <trans-unit id="4bea76e440600f11e5f34c9f0389bf22e2e8792a" translate="yes" xml:space="preserve">
          <source>However this question is seeking to find the last row using VBA, I think it would be good to include an array formula for worksheet function  as this gets visited frequently:</source>
          <target state="translated">그러나이 질문은 VBA를 사용하여 마지막 행을 찾으려고합니다. 워크 시트 함수에 자주 방문하는 워크 시트 함수에 배열 수식을 포함시키는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="f13bd32d23890f2434e793f56588181444c348db" translate="yes" xml:space="preserve">
          <source>However, I think a One-Stop-Solution that has a drawback of messing up &lt;code&gt;find&lt;/code&gt; settings or performing slower is a better overall solution. A user can then tinker with their settings to try to improve, knowing what's going on with their code. Using &lt;code&gt;xLUp&lt;/code&gt; will not warn of the potential risks and they could carry on for who knows how long not knowing their code was not working correctly.</source>
          <target state="translated">그러나 &lt;code&gt;find&lt;/code&gt; 설정을 엉망으로 만들거나 느리게 수행하는 단점이있는 원 스톱 솔루션이 더 나은 전반적인 솔루션이라고 생각합니다. 그런 다음 사용자는 자신의 설정으로 문제를 해결하여 코드 진행 상황을 파악하여 개선하려고 시도 할 수 있습니다. &lt;code&gt;xLUp&lt;/code&gt; 을 사용하면 잠재적 인 위험에 대해 경고하지 않으며 코드가 제대로 작동하지 않는지 얼마나 오래 알 수있는 사람에게 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c52594d431c168ee54a1d96692b39b0702315cfe" translate="yes" xml:space="preserve">
          <source>I am getting the wrong output when I put a single element into a cell. But when I put more than one value into the cell, the output is correct. 
What's the reason behind this?</source>
          <target state="translated">단일 요소를 셀에 넣을 때 잘못된 출력이 발생합니다. 그러나 셀에 둘 이상의 값을 넣으면 출력이 정확합니다. 이것의 이유는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="6523024c774fc2a7d10ec902c27368453dac2f33" translate="yes" xml:space="preserve">
          <source>I created this one-stop function for &lt;strong&gt;determining the last row, column and cell, be it for data, formatted (grouped/commented/hidden) cells or conditional formatting&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;마지막 행, 열 및 셀&lt;/strong&gt; 을 &lt;strong&gt;결정하기&lt;/strong&gt; 위해이 원 스톱 함수를 만들었습니다. &lt;strong&gt;데이터, 형식화 (그룹화 / 주석 처리 / 숨김) 셀 또는 조건부 서식&lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="95d9e7af9942c08e5cac8ecf6c143dc46eba6676" translate="yes" xml:space="preserve">
          <source>I was looking for a way to mimic the</source>
          <target state="translated">나는 흉내낼 방법을 찾고 있었다</target>
        </trans-unit>
        <trans-unit id="37cf14ef562c3dab74ac5c6254fc06e883e832b2" translate="yes" xml:space="preserve">
          <source>I wonder that nobody has mentioned this, But the easiest way of getting the last used cell is:</source>
          <target state="translated">아무도 이것을 언급하지 않았을 지 모르겠지만 마지막으로 사용한 셀을 얻는 가장 쉬운 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="809f1b508291d3f3abaebdd164acc7a0b05e33ce" translate="yes" xml:space="preserve">
          <source>I would add to the answer given by Siddarth Rout to say that the CountA call can be skipped by having Find return a Range object, instead of a row number, and then test the returned Range object to see if it is Nothing (blank worksheet).</source>
          <target state="translated">Siddarth Rout이 제공 한 답변에 행 번호 대신 Range 개체 반환 반환을 사용하여 CountA 호출을 건너 뛸 수 있다고 말한 다음 반환 된 Range 개체를 테스트하여 아무것도 없는지 확인하십시오 (빈 워크 시트). .</target>
        </trans-unit>
        <trans-unit id="78c9399f278537d0426d28ca23e6006181df79f2" translate="yes" xml:space="preserve">
          <source>I'll start by expanding on &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/27637752#27637752&quot;&gt;the answer by sancho.s&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba#comment73816621_27637752&quot;&gt;the comment by GlennFromIowa&lt;/a&gt;, adding even more detail:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/27637752#27637752&quot;&gt;sancho.s의 답변&lt;/a&gt; 과 GlennFromIowa &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba#comment73816621_27637752&quot;&gt;의 의견을 확장&lt;/a&gt; 하여 더 자세한 내용을 추가하여 시작 하겠습니다 .</target>
        </trans-unit>
        <trans-unit id="2863802b60ac22e7a0951a4bd75b913a8fa0507a" translate="yes" xml:space="preserve">
          <source>IMHO the risk of a hidden row with data being excluded is too significant to let &lt;code&gt;xlUp&lt;/code&gt; be considered a &lt;em&gt;One stop answer&lt;/em&gt;. I agree it's simple and will work MOST of the time, but it presents the risk of understating the last row, without any warning. This could produce &lt;em&gt;CATASTROPHIC&lt;/em&gt; results at some poinit for someone who jumped on Stack Overlow and was looking to &quot;sure way&quot; to capture this value.</source>
          <target state="translated">IMHO 데이터가 제외 된 숨겨진 행의 위험이 너무 &lt;code&gt;xlUp&lt;/code&gt; &lt;em&gt;원 스톱 응답&lt;/em&gt; 으로 간주 할 수 없습니다 . 나는 그것이 간단하고 대부분의 시간 동안 작동 할 것이라는 데 동의하지만 경고없이 마지막 행을 과소 평가 할 위험이 있습니다. 이로 인해 스택 오버로로 뛰어 들어이 값을 포착하기 위해 &quot;확실한 방법&quot;을 찾고있는 누군가에 대한 일부 poinit에서 CATASTROPHIC 결과가 생성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39debfacccf8e0cd0bf192711a73baed3a4c79e4" translate="yes" xml:space="preserve">
          <source>If there is only one non-blank cell, but it is not the first one, your code will still give you the correct result.</source>
          <target state="translated">비어 있지 않은 셀이 하나만 있지만 첫 번째 셀이 아닌 경우 코드에서 여전히 올바른 결과를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c8abf3c1d7f351d85ae62f63a007b4aa2b63de0d" translate="yes" xml:space="preserve">
          <source>If you notice that we have a &lt;code&gt;.&lt;/code&gt; before &lt;code&gt;Rows.Count&lt;/code&gt;. We often chose to ignore that. See &lt;a href=&quot;https://stackoverflow.com/questions/19985345/vba-excel-compability-mode#comment29753337_19985345&quot;&gt;THIS&lt;/a&gt; question on the possible error that you may get. I always advise using &lt;code&gt;.&lt;/code&gt; before &lt;code&gt;Rows.Count&lt;/code&gt; and &lt;code&gt;Columns.Count&lt;/code&gt;. That question is a classic scenario where the code will fail because the &lt;code&gt;Rows.Count&lt;/code&gt; returns &lt;code&gt;65536&lt;/code&gt; for Excel 2003 and earlier and &lt;code&gt;1048576&lt;/code&gt; for Excel 2007 and later. Similarly &lt;code&gt;Columns.Count&lt;/code&gt; returns &lt;code&gt;256&lt;/code&gt; and &lt;code&gt;16384&lt;/code&gt;, respectively.</source>
          <target state="translated">Google에 &lt;code&gt;.&lt;/code&gt; &lt;code&gt;Rows.Count&lt;/code&gt; 전. 우리는 종종 그것을 무시하기로 결정했습니다. 발생할 수있는 오류에 대해서는 &lt;a href=&quot;https://stackoverflow.com/questions/19985345/vba-excel-compability-mode#comment29753337_19985345&quot;&gt;이&lt;/a&gt; 질문을 참조하십시오. 나는 항상 사용하는 것이 &lt;code&gt;.&lt;/code&gt; &lt;code&gt;Rows.Count&lt;/code&gt; 및 &lt;code&gt;Columns.Count&lt;/code&gt; 앞. 이 질문은 &lt;code&gt;Rows.Count&lt;/code&gt; 가 Excel 2003 및 이전 버전의 경우 &lt;code&gt;65536&lt;/code&gt; , Excel 2007 및 이후 버전의 경우 &lt;code&gt;1048576&lt;/code&gt; 을 반환하기 때문에 코드가 실패하는 전형적인 시나리오입니다. 마찬가지로 &lt;code&gt;Columns.Count&lt;/code&gt; 는 각각 &lt;code&gt;256&lt;/code&gt; 과 &lt;code&gt;16384&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="84539c301bebb3a41ccaaa5e25afbeb524cebe8b" translate="yes" xml:space="preserve">
          <source>If your range contains non-contiguous non-blank cells, then it will also give a wrong result.</source>
          <target state="translated">범위에 연속되지 않은 비 공백 셀이 포함 된 경우 잘못된 결과도 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="134c64335f5ffab06b292a8975193cd103c16175" translate="yes" xml:space="preserve">
          <source>In order to put this in VBA and not to write anything in Excel, using the parameters for the latter functions, something like this could be in mind:</source>
          <target state="translated">VBA에 이것을 넣고 Excel에 아무것도 쓰지 않으려면 후자의 함수에 대한 매개 변수를 사용하여 다음과 같은 것을 염두에 두십시오.</target>
        </trans-unit>
        <trans-unit id="593f73ea0ddf0bb36e38f97427d6c23df4ad750c" translate="yes" xml:space="preserve">
          <source>Last Column:</source>
          <target state="translated">마지막 열 :</target>
        </trans-unit>
        <trans-unit id="dcd9c25eb82183ce7b5bc8565a460c66e9556481" translate="yes" xml:space="preserve">
          <source>Last Row, counting empty rows with data:</source>
          <target state="translated">데이터가있는 빈 행을 세는 마지막 행 :</target>
        </trans-unit>
        <trans-unit id="9f6976483b9e7fdb62b0fecc7db7ea1b7e8e8860" translate="yes" xml:space="preserve">
          <source>Last Row:</source>
          <target state="translated">마지막 행 :</target>
        </trans-unit>
        <trans-unit id="782661384d5f64184e9542ee3f4ae0d554d46afd" translate="yes" xml:space="preserve">
          <source>More explicit solutions that check individual &lt;code&gt;Cells&lt;/code&gt;' in a loop are generally slower than re-using an Excel function (although can still be performant), but let you specify exactly what you want to find. See &lt;a href=&quot;https://stackoverflow.com/a/49971492/1026&quot;&gt;my solution&lt;/a&gt; based on &lt;code&gt;UsedRange&lt;/code&gt; and VBA arrays to find the last cell with data in the given column -- it handles hidden rows, filters, blanks, does not modify the Find defaults and is quite performant.</source>
          <target state="translated">루프에서 개별 &lt;code&gt;Cells&lt;/code&gt; 을 검사하는보다 명확한 솔루션은 일반적으로 Excel 함수를 다시 사용하는 것보다 느리지 만 (아직 성능을 발휘할 수는 있지만) 원하는 것을 정확하게 지정할 수 있습니다. 주어진 열에 데이터가있는 마지막 셀을 찾으려면 &lt;code&gt;UsedRange&lt;/code&gt; 및 VBA 배열을 기반으로 한 &lt;a href=&quot;https://stackoverflow.com/a/49971492/1026&quot;&gt;솔루션을&lt;/a&gt; 참조하십시오. 숨겨진 행, 필터, 공백을 처리하고 찾기 기본값을 수정하지 않으며 성능이 뛰어납니다.</target>
        </trans-unit>
        <trans-unit id="e250ccc45c93ddcfb6305e75c88e77b1ab5a555b" translate="yes" xml:space="preserve">
          <source>Note that a common mistake ️is to use &lt;code&gt;.UsedRange.Rows.Count&lt;/code&gt;⚠️, which returns the &lt;em&gt;number of rows&lt;/em&gt; in the used range, not the &lt;em&gt;last row number&lt;/em&gt; (they will be different if the first few rows are blank), for details see &lt;a href=&quot;https://stackoverflow.com/a/35975280/1026&quot;&gt;newguy's answer to &lt;em&gt;How can I find last row that contains data in the Excel sheet with a macro?&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">일반적인 실수는 &lt;code&gt;.UsedRange.Rows.Count&lt;/code&gt; ⚠️을 사용하는 것 &lt;em&gt;입니다.이 행&lt;/em&gt; 은 &lt;em&gt;마지막 행 번호가&lt;/em&gt; 아닌 사용 된 범위 &lt;em&gt;의 행 수&lt;/em&gt; 를 반환합니다 (처음 몇 개의 행이 비어 있으면 다를 수 있음). &lt;a href=&quot;https://stackoverflow.com/a/35975280/1026&quot;&gt;&lt;em&gt;매크로가있는 Excel 시트의 데이터가 포함 된 마지막 행&lt;/em&gt; 을 &lt;em&gt;어떻게 찾을 수 있습니까?&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2d35b4f86e6339d0a2aeaaa007d5931247104c71" translate="yes" xml:space="preserve">
          <source>Note that this approach will skip any hidden rows. Looking back at &lt;a href=&quot;https://i.stack.imgur.com/3TqSI.png&quot;&gt;my screenshot above for column A&lt;/a&gt;, if row 8 were hidden, this approach would return &lt;code&gt;5&lt;/code&gt; instead of &lt;code&gt;8&lt;/code&gt;.</source>
          <target state="translated">이 방법은 숨겨진 행을 건너 뜁니다. &lt;a href=&quot;https://i.stack.imgur.com/3TqSI.png&quot;&gt;위의 열 A에 대한 위의 스크린 샷을&lt;/a&gt; 살펴보면 행 8이 숨겨져 있으면이 접근법은 &lt;code&gt;8&lt;/code&gt; 대신 &lt;code&gt;5&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="285f98e8d01e4962eff6724b78a3c6724d0931e6" translate="yes" xml:space="preserve">
          <source>Note that:</source>
          <target state="translated">참고 :</target>
        </trans-unit>
        <trans-unit id="ae35960b75defbdd762cbf4fc85d62aa303ef8a7" translate="yes" xml:space="preserve">
          <source>One important note to keep in mind when using the solution ...</source>
          <target state="translated">솔루션을 사용할 때 명심해야 할 중요한 사항 ...</target>
        </trans-unit>
        <trans-unit id="b51dfc2b4f6605fbbef17b9eb4e6cd6776072cc4" translate="yes" xml:space="preserve">
          <source>One limitation exists - if there are tables in the sheet, results can become unreliable, so I decided to avoid running the code in this case:</source>
          <target state="translated">한 가지 제한 사항이 있습니다-시트에 테이블이 있으면 결과를 신뢰할 수 없게 될 수 있으므로이 경우 코드를 실행하지 않기로 결정했습니다.</target>
        </trans-unit>
        <trans-unit id="4c34566605c9374a25bc26869a5c422abb077b46" translate="yes" xml:space="preserve">
          <source>Other things you might want to consider:</source>
          <target state="translated">고려해야 할 다른 것들 :</target>
        </trans-unit>
        <trans-unit id="1bdfd2a311bbd8fec1da4e513f5fa0f016f8abc2" translate="yes" xml:space="preserve">
          <source>Otherwise you will end up getting OVERFLOW errors in certain situations in .XLSX workbooks</source>
          <target state="translated">그렇지 않으면 .XLSX 통합 문서의 특정 상황에서 OVERFLOW 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9c06273945e891bbe0709d8e120adebffae928a7" translate="yes" xml:space="preserve">
          <source>Reasonably simple, not a lot of variables.</source>
          <target state="translated">많은 변수가 아니라 상당히 간단합니다.</target>
        </trans-unit>
        <trans-unit id="b76b0bc03446fe6320d8b175fccffd681e3090c8" translate="yes" xml:space="preserve">
          <source>Results look like this:</source>
          <target state="translated">결과는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="469d5b183fdc0d59e41a51e61529cdd95274ba7c" translate="yes" xml:space="preserve">
          <source>Shift</source>
          <target state="translated">Shift</target>
        </trans-unit>
        <trans-unit id="9c9456fcbd04adb2a1f80847e7c4217124f5fd48" translate="yes" xml:space="preserve">
          <source>Since the original question is about &lt;em&gt;problems&lt;/em&gt; with finding the last cell, &lt;strong&gt;in this answer I will list the various ways you can get unexpected results&lt;/strong&gt;; see &lt;a href=&quot;https://stackoverflow.com/a/49971492/1026&quot;&gt;my answer to &lt;em&gt;&quot;How can I find last row that contains data in the Excel sheet with a macro?&quot;&lt;/em&gt;&lt;/a&gt; for my take on solving this.</source>
          <target state="translated">원래 질문은 마지막 셀을 찾는 &lt;em&gt;문제&lt;/em&gt; 에 관한 &lt;strong&gt;것이기 때문에이 답변에는 예기치 않은 결과를 얻을 수있는 다양한 방법이 나열되어 있습니다&lt;/strong&gt; . &lt;a href=&quot;https://stackoverflow.com/a/49971492/1026&quot;&gt;&lt;em&gt;&quot;매크로를 사용하여 Excel 시트의 데이터가 포함 된 마지막 행을 어떻게 찾을 수 있습니까?&quot;에&lt;/em&gt;&lt;/a&gt; 대한 내 대답을 참조하십시오. 이 문제를 해결하기 위해 노력했습니다.</target>
        </trans-unit>
        <trans-unit id="1671baf5e64a4e1914db41ba5989d4d003ebe979" translate="yes" xml:space="preserve">
          <source>Some of the most common ways of finding last row which are highly unreliable and hence should never be used.</source>
          <target state="translated">매우 신뢰할 수없는 마지막 행을 찾는 가장 일반적인 방법 중 일부는 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="a0c8f590f077ce64bec625e8abb8b8841b103ef9" translate="yes" xml:space="preserve">
          <source>The &quot;erroneous&quot; output will obtain if there are no &lt;em&gt;non-blank&lt;/em&gt; cells in your range other than perhaps the first. Then, you are &lt;em&gt;leaping in the dark&lt;/em&gt;, i.e., down the worksheet
(you should note the difference between &lt;em&gt;blank&lt;/em&gt; and &lt;em&gt;empty string&lt;/em&gt;!).</source>
          <target state="translated">&quot;오른쪽&quot;출력은 아마도 첫 번째 이외의 범위에 &lt;em&gt;공백이 아닌&lt;/em&gt; 셀이 없으면 얻을 수 있습니다. 그런 다음 &lt;em&gt;어두운 곳&lt;/em&gt; 으로 &lt;em&gt;뛰어 들어&lt;/em&gt; 갑니다. 즉, 워크 시트를 아래로 내립니다 ( &lt;em&gt;공백&lt;/em&gt; 과 &lt;em&gt;빈 문자열&lt;/em&gt; 의 차이점에 주목해야 &lt;em&gt;합니다&lt;/em&gt; !).</target>
        </trans-unit>
        <trans-unit id="3b50fc4c34e76646f815d8af1e09897e675ecd19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.End(xlDown)&lt;/code&gt; code from the question will break most easily (e.g. with &lt;strong&gt;a single non-empty cell&lt;/strong&gt; or when there are &lt;strong&gt;blank cells in between&lt;/strong&gt;) for the reasons explained in &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/11169920#11169920&quot;&gt;the answer by Siddharth Rout&lt;/a&gt; here (search for &lt;em&gt;&quot;xlDown is equally unreliable.&quot;&lt;/em&gt;) 👎</source>
          <target state="translated">질문의 &lt;code&gt;.End(xlDown)&lt;/code&gt; 코드는 &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/11169920#11169920&quot;&gt;Siddharth Rout의 답변에&lt;/a&gt; 설명 된 이유로 (예 : &lt;strong&gt;비어 있지 않은 단일 셀&lt;/strong&gt; 또는 &lt;strong&gt;사이에 빈 셀이있는&lt;/strong&gt; 경우) 가장 쉽게 중단됩니다 ( &lt;em&gt;&quot;xlDown은 동일 신뢰할 수 없습니다. &quot;&lt;/em&gt; ) 👎</target>
        </trans-unit>
        <trans-unit id="a26aedd1eb16607e0094066e4ae2c18cc5106cd1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Find&lt;/code&gt; method is flawless and I would approve of it as a &lt;em&gt;One Stop Answer&lt;/em&gt;. However the drawback of changing the &lt;code&gt;Find&lt;/code&gt; settings can be annoying, particularly if this is part of a UDF.</source>
          <target state="translated">&lt;code&gt;Find&lt;/code&gt; 방법은 완벽하며 &lt;em&gt;원 스톱 답변&lt;/em&gt; 으로 승인합니다. 그러나 특히 UDF의 일부인 경우 &lt;code&gt;Find&lt;/code&gt; 설정 변경의 단점은 성 가실 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39723b7861e7ad153d7df844b5cc34881ce2086c" translate="yes" xml:space="preserve">
          <source>The above fact that Excel 2007+ has &lt;code&gt;1048576&lt;/code&gt; rows also emphasizes on the fact that we should always declare the variable which will hold the row value as &lt;code&gt;Long&lt;/code&gt; instead of &lt;code&gt;Integer&lt;/code&gt; else you will get an &lt;code&gt;Overflow&lt;/code&gt; error.</source>
          <target state="translated">Excel 2007 +에 &lt;code&gt;1048576&lt;/code&gt; 개의 행이 있다는 위의 사실은 항상 행 값을 &lt;code&gt;Integer&lt;/code&gt; 대신 &lt;code&gt;Long&lt;/code&gt; 으로 유지할 변수를 선언해야한다는 사실을 강조합니다. 그렇지 않으면 &lt;code&gt;Overflow&lt;/code&gt; 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2b5c6447372efeef5f2d636959b748276ac13418" translate="yes" xml:space="preserve">
          <source>The other answers posted are okay, however the complexity gets a little excessive. Thus here's my attempt to find a balance of reliability, minimal complexity, and not using &lt;code&gt;Find&lt;/code&gt;.</source>
          <target state="translated">게시 된 다른 답변은 괜찮지 만 복잡성이 약간 초과됩니다. 따라서 안정성의 균형, 최소한의 복잡성 및 &lt;code&gt;Find&lt;/code&gt; 사용하지 않는 균형을 찾으려고 노력했습니다.</target>
        </trans-unit>
        <trans-unit id="ae77ce7ef2675dd6c82db5f4487e485862ccc5c1" translate="yes" xml:space="preserve">
          <source>The same principles apply, for example to get the last row in the third column of a table:</source>
          <target state="translated">예를 들어, 표의 세 번째 열에서 마지막 행을 가져 오는 것과 동일한 원칙이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="c9d940ced980c5a4b55a47a5ca6201d1466254e0" translate="yes" xml:space="preserve">
          <source>This essentially returns the same cell that you get by</source>
          <target state="translated">이것은 본질적으로 당신이 얻는 것과 동일한 셀을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ad1d6aff36a2be8a66f05ce26a37c781f6b5baeb" translate="yes" xml:space="preserve">
          <source>This is my encapsulated function that I drop in to various code uses.</source>
          <target state="translated">이것은 다양한 코드 사용에 빠지는 캡슐화 된 함수입니다.</target>
        </trans-unit>
        <trans-unit id="dd320bb0a9951f0c4017c3064c8e27cccf4b37ea" translate="yes" xml:space="preserve">
          <source>This will give you address of last used cell in the column D.</source>
          <target state="translated">D 열에서 마지막으로 사용한 셀의 주소를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0868b384be11512300924c393237ccab87a0c113" translate="yes" xml:space="preserve">
          <source>To find the &lt;code&gt;Effective&lt;/code&gt; last row in the sheet, use this. Notice the use of &lt;code&gt;Application.WorksheetFunction.CountA(.Cells)&lt;/code&gt;. This is required because if there are no cells with data in the worksheet then &lt;code&gt;.Find&lt;/code&gt; will give you &lt;code&gt;Run Time Error 91: Object Variable or With block variable not set&lt;/code&gt;</source>
          <target state="translated">시트에서 &lt;code&gt;Effective&lt;/code&gt; 마지막 행을 찾으려면 이것을 사용하십시오. &lt;code&gt;Application.WorksheetFunction.CountA(.Cells)&lt;/code&gt; 의 사용에 주목하십시오. 워크 시트에 데이터가있는 셀이 없으면 &lt;code&gt;.Find&lt;/code&gt; 에서 &lt;code&gt;Run Time Error 91: Object Variable or With block variable not set&lt;/code&gt; 되어 있지 않기 때문에이 작업이 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="e5b0afdebd4267b399904f45f93594a5fc4da525" translate="yes" xml:space="preserve">
          <source>To find the last Row in Col E use this</source>
          <target state="translated">Col E에서 마지막 행을 찾으려면 이것을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="45e78e7fd93f9c854b02372eec658d7580136284" translate="yes" xml:space="preserve">
          <source>Type something in cell &lt;code&gt;A5&lt;/code&gt;. Now when you calculate the last row with any of the methods given below, it will give you 5. Now color the cell &lt;code&gt;A10&lt;/code&gt; red. If you now use the any of the below code, you will still get 5. If you use &lt;code&gt;Usedrange.Rows.Count&lt;/code&gt; what do you get? It won't be 5.</source>
          <target state="translated">&lt;code&gt;A5&lt;/code&gt; 셀에 무언가를 입력하십시오. 이제 아래 주어진 방법으로 마지막 행을 계산하면 5가됩니다. 이제 셀 &lt;code&gt;A10&lt;/code&gt; 을 빨간색으로 채색합니다. 이제 아래 코드 중 하나를 사용하면 여전히 5를 얻습니다. &lt;code&gt;Usedrange.Rows.Count&lt;/code&gt; 를 사용 하면 무엇을 얻습니까? 5가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e39756cd7e3b8016d5ad7545949eb0381ac29d61" translate="yes" xml:space="preserve">
          <source>Used = &quot;... in use, meaning the section that contains &lt;strong&gt;data or formatting&lt;/strong&gt;&quot; &lt;strong&gt;or conditional formatting.&lt;/strong&gt;
Same as 2., but also including cells that are the target for any Conditional Formatting rule.</source>
          <target state="translated">Used = &quot;... 사용 중, &lt;strong&gt;데이터 또는 서식&lt;/strong&gt; 이 포함 된 섹션 &lt;strong&gt;또는 조건부 서식&lt;/strong&gt; &quot;을 의미합니다 &lt;strong&gt;.&lt;/strong&gt; 2와 동일하지만 조건부 서식 규칙의 대상인 셀도 포함합니다.</target>
        </trans-unit>
        <trans-unit id="c73b043a9478c1294805b94a0d62d99e5db55e36" translate="yes" xml:space="preserve">
          <source>Used = &quot;... in use, meaning the section that contains &lt;strong&gt;data or formatting&lt;/strong&gt;.&quot;
&lt;a href=&quot;http://support.microsoft.com/kb/244435&quot;&gt;As per official documentation&lt;/a&gt;, this is the criterion used by Excel at the time of saving. See also &lt;a href=&quot;https://support.office.com/en-sg/article/Locate-and-reset-the-last-cell-on-a-worksheet-c9e468a8-0fc3-4f69-8038-b3c1d86e99e9&quot;&gt;this&lt;/a&gt;.
If one is not aware of this, the criterion may produce unexpected results, but it may also be intentionally exploited (less often, surely), e.g., to highlight or print specific regions, which may eventually have no data.
And, of course, it is desirable as a criterion for the range to use when saving a workbook, lest losing part of one's work.</source>
          <target state="translated">Used = &quot;... 사용 중. &lt;strong&gt;데이터 또는 서식&lt;/strong&gt; 이 포함 된 섹션을 의미합니다.&quot; &lt;a href=&quot;http://support.microsoft.com/kb/244435&quot;&gt;공식 문서에&lt;/a&gt; 따르면, 이것은 저장시 Excel에서 사용되는 기준입니다. 이것도 참조하십시오. 이를 알지 못하면이 기준은 예상치 못한 결과를 낳을 수 있지만, 예를 들어 데이터가 없을 수있는 특정 지역을 강조 표시하거나 인쇄하기 위해 의도적으로 악용 될 수도 있습니다. 물론 통합 문서를 저장할 때 작업의 일부를 잃지 않도록 범위를 선택하는 것이 바람직합니다.</target>
        </trans-unit>
        <trans-unit id="770acd1a18e575281570d204a4f071fdc9025733" translate="yes" xml:space="preserve">
          <source>Used = non-blank, i.e., having &lt;strong&gt;data&lt;/strong&gt;.</source>
          <target state="translated">사용됨 = 비 공백, 즉 &lt;strong&gt;데이터&lt;/strong&gt; 보유</target>
        </trans-unit>
        <trans-unit id="1b03ed7ecdce33d9d4e5fff038a43abf2d5755fa" translate="yes" xml:space="preserve">
          <source>UsedRange</source>
          <target state="translated">UsedRange</target>
        </trans-unit>
        <trans-unit id="3b7d5298d84d7f2a075250ffcbb58cfa904b2444" translate="yes" xml:space="preserve">
          <source>What would happen if there was only one cell (&lt;code&gt;A1&lt;/code&gt;) which had data? You will end up reaching the last row in the worksheet! It's like selecting cell &lt;code&gt;A1&lt;/code&gt; and then pressing</source>
          <target state="translated">데이터가있는 하나의 셀 ( &lt;code&gt;A1&lt;/code&gt; ) 만 있으면 어떻게됩니까? 워크 시트의 마지막 행에 도달하게됩니다! 셀 &lt;code&gt;A1&lt;/code&gt; 을 선택하고 누르는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8e4eee1cecb8f571093d5e8271ca4229a03c87ff" translate="yes" xml:space="preserve">
          <source>Whatever solution you pick, be careful</source>
          <target state="translated">어떤 솔루션을 선택하든 조심하십시오</target>
        </trans-unit>
        <trans-unit id="32d4802da61ff1edd472676e4d7003b98c192da9" translate="yes" xml:space="preserve">
          <source>When I want to find the last used cell value, I use:</source>
          <target state="translated">마지막으로 사용한 셀 값을 찾으려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="4d0aecadfddadedf6481cb71c476f1120fd3f649" translate="yes" xml:space="preserve">
          <source>Which combination do you want to test for? Some (such as Tables) may be more difficult to test for, and some may be rare (such as a shape outside of data range),  but others may vary based on the situation (e.g., formulas with blank values).</source>
          <target state="translated">어떤 조합을 테스트 하시겠습니까? 일부 (예 : 표)는 테스트하기가 더 어려울 수 있으며, 일부 (예 : 데이터 범위를 벗어난 모양)는 드물지만 상황에 따라 다를 수 있습니다 (예 : 빈 값이있는 수식).</target>
        </trans-unit>
        <trans-unit id="adbd129422c4b678f3bdedb790c2193299c442f5" translate="yes" xml:space="preserve">
          <source>Why this is bad:</source>
          <target state="translated">왜 이것이 나쁜지 :</target>
        </trans-unit>
        <trans-unit id="ae8920fd62ba92fafb2c831c79c2f426b0f331b2" translate="yes" xml:space="preserve">
          <source>Why this is good:</source>
          <target state="translated">이것이 좋은 이유 :</target>
        </trans-unit>
        <trans-unit id="95b2e3ee285ce3564835bcb2262962d6353f24a1" translate="yes" xml:space="preserve">
          <source>With that in mind, let's see &lt;strong&gt;how the common ways of getting the &quot;last cell&quot; can produce unexpected results:&lt;/strong&gt;</source>
          <target state="translated">이를 염두에두고 &lt;strong&gt;&quot;마지막 셀&quot;을 얻는 일반적인 방법이 어떻게 예기치 않은 결과를 생성 할 수 있는지&lt;/strong&gt; 살펴 보겠습니다 &lt;strong&gt;.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="94d152c351a0bba5b18a41bd5b025862499ba1e5" translate="yes" xml:space="preserve">
          <source>With very large sets of data and a massive gap between used range and last row in specified columns, this will perform slower, in rare cases SIGNIFICANTLY slower.</source>
          <target state="translated">매우 큰 데이터 집합과 지정된 열의 사용 된 범위와 마지막 행 사이에 큰 간격이 있으면 드물게 수행 속도가 느려집니다.</target>
        </trans-unit>
        <trans-unit id="0fd9557e7f7f3f48b52c28134ccfd61202cbb593" translate="yes" xml:space="preserve">
          <source>You have to take care to avoid the standard pitfalls (for details I'll again refer to &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/11169920#11169920&quot;&gt;the answer by Siddharth Rout&lt;/a&gt; here, look for the &lt;em&gt;&quot;Find Last Row in a Column&quot;&lt;/em&gt; section), such as hard-coding the last row (&lt;code&gt;Range(&quot;A65536&quot;).End(xlUp)&lt;/code&gt;) instead of relying on &lt;code&gt;sht.Rows.Count&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;마지막 행&lt;/em&gt; 하드 코딩과 같은 표준 함정을 피하기 위해주의를 기울여야합니다 (자세한 내용은 여기 &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/11169920#11169920&quot;&gt;Siddharth Rout의 답변을&lt;/a&gt; 참조하고 &lt;em&gt;&quot;열에서 마지막 행 찾기&quot;&lt;/em&gt; 섹션 참조). &lt;code&gt;Range(&quot;A65536&quot;).End(xlUp)&lt;/code&gt; 에 의존하는 대신 ( &quot;A65536&quot;). End (xlUp) .</target>
        </trans-unit>
        <trans-unit id="9b2548ce4cf8fcd600a558baf2ee38c3a0845783" translate="yes" xml:space="preserve">
          <source>You need to enter the formula without brackets and then hit</source>
          <target state="translated">대괄호없이 수식을 입력 한 다음</target>
        </trans-unit>
        <trans-unit id="416224e917bfafcb31cb6a6879f926a487aa37f3" translate="yes" xml:space="preserve">
          <source>Your code uses the first cell in your range E4:E48 as a trampoline, for &lt;em&gt;jumping&lt;/em&gt; down with &lt;code&gt;End(xlDown)&lt;/code&gt;.</source>
          <target state="translated">코드는 E4 : E48 범위의 첫 번째 셀을 트램폴린으로 사용하여 &lt;code&gt;End(xlDown)&lt;/code&gt; 아래로 &lt;em&gt;점프&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="02da95b16cfc29601e238d51a97824fa71108e37" translate="yes" xml:space="preserve">
          <source>[...] one has first to decide what is considered used. I see at least 6 meanings. Cell has:</source>
          <target state="translated">[...] 먼저 어떤 것이 사용되는지를 결정해야합니다. 나는 적어도 6 개의 의미를 봅니다. 세포는 :</target>
        </trans-unit>
        <trans-unit id="9772fe894d76707f71a063b470d68e33c13c74cf" translate="yes" xml:space="preserve">
          <source>after selecting Cell &lt;strong&gt;&lt;code&gt;A1&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">셀 &lt;strong&gt; &lt;code&gt;A1&lt;/code&gt; &lt;/strong&gt; 을 선택한 후.</target>
        </trans-unit>
        <trans-unit id="10d48792407e5589a547c8fa8c77691fec176d60" translate="yes" xml:space="preserve">
          <source>and how to check this for yourself:</source>
          <target state="translated">이것을 직접 확인하는 방법 :</target>
        </trans-unit>
        <trans-unit id="f1894fd7f4349fc31d34edc811e424f53b327565" translate="yes" xml:space="preserve">
          <source>is the last cell in the Column A this code was tested on excel 2003.</source>
          <target state="translated">이 코드는 Excel 2003에서 테스트 된 열 A의 마지막 셀입니다.</target>
        </trans-unit>
        <trans-unit id="033d78ec686b9eef1a21bbff4e29e2d98e91362a" translate="yes" xml:space="preserve">
          <source>key and then pressing</source>
          <target state="translated">키를 누른 다음</target>
        </trans-unit>
        <trans-unit id="edfdd1b3986bdc49994b153ba1b40f10cb375e80" translate="yes" xml:space="preserve">
          <source>key. This will also give you unreliable results if there are blank cells in a range.</source>
          <target state="translated">키. 또한 범위 내에 빈 셀이있는 경우 신뢰할 수없는 결과를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2711dad7c8c7eaa9db81b073162f318f81561c17" translate="yes" xml:space="preserve">
          <source>to always specify the worksheet you're working with (i.e. &lt;code&gt;Dim ws As Worksheet ... ws.Range(...)&lt;/code&gt; instead of &lt;code&gt;Range(...)&lt;/code&gt;)</source>
          <target state="translated">항상 작업중 인 워크 시트를 지정하십시오 (즉, &lt;code&gt;Range(...)&lt;/code&gt; 대신 &lt;code&gt;Dim ws As Worksheet ... ws.Range(...)&lt;/code&gt; (...) )</target>
        </trans-unit>
        <trans-unit id="84df93fd756105898932e30a4fbcb5a8a272af2e" translate="yes" xml:space="preserve">
          <source>to make it an array formula.</source>
          <target state="translated">배열 수식으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="5c43d5be7c2782582d5c9c0ad55b7f9458c04f4d" translate="yes" xml:space="preserve">
          <source>to use &lt;code&gt;Long&lt;/code&gt; instead of &lt;code&gt;Integer&lt;/code&gt; to store the row numbers (to avoid getting &lt;code&gt;Overflow&lt;/code&gt; with more than 65k rows) and</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; 대신 &lt;code&gt;Long&lt;/code&gt; 을 사용하여 행 번호를 저장하십시오 (65k 개 이상의 행으로 &lt;code&gt;Overflow&lt;/code&gt; 로가 발생하지 않도록).</target>
        </trans-unit>
        <trans-unit id="32de2c5614e1a0e638ed265beff9df41f4cdf51a" translate="yes" xml:space="preserve">
          <source>when using &lt;code&gt;.Value&lt;/code&gt; (which is a &lt;code&gt;Variant&lt;/code&gt;) avoid implicit casts like &lt;code&gt;.Value &amp;lt;&amp;gt; &quot;&quot;&lt;/code&gt; as they will fail if the cell contains an error value.</source>
          <target state="translated">&lt;code&gt;.Value&lt;/code&gt; ( &lt;code&gt;Variant&lt;/code&gt; )를 사용할 때 셀에 오류 값이 포함되어 있으면 &lt;code&gt;.Value &amp;lt;&amp;gt; &quot;&quot;&lt;/code&gt; 와 같은 암시 적 캐스트를 피하십시오.</target>
        </trans-unit>
        <trans-unit id="464c1ebf7c020624d9cedec9e2d19443f457627b" translate="yes" xml:space="preserve">
          <source>will go to a wrong cell prior to saving
(&amp;ldquo;The last cell is not reset until you save the worksheet&amp;rdquo;, from
&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa139976%28v=office.10%29.aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/aa139976%28v=office.10%29.aspx&lt;/a&gt;.
It is an old reference, but in this respect valid).</source>
          <target state="translated">저장하기 전에 잘못된 셀로 이동합니다 ( &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa139976%28v=office.10%29.aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/aa139976%28v=office.10%29&lt;/a&gt; 에서 &quot;워크 시트를 저장할 때까지 마지막 셀은 재설정되지 않습니다&quot;) . .aspx . 이것은 오래된 참조이지만이 점에서 유효합니다).</target>
        </trans-unit>
        <trans-unit id="0c0e6b95bf4a0890c97ea0fd46e65948e08815ea" translate="yes" xml:space="preserve">
          <source>will still take you to &lt;strong&gt;H8&lt;/strong&gt; cell. The above function will have the same behavior.</source>
          <target state="translated">여전히 &lt;strong&gt;H8&lt;/strong&gt; 셀로 이동합니다. 위의 기능은 동일한 동작을합니다.</target>
        </trans-unit>
        <trans-unit id="b3af845fb4a2bcfcf52cdfcf7566199ca809de73" translate="yes" xml:space="preserve">
          <source>xlDown</source>
          <target state="translated">xlDown</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
