<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/11169445">
    <body>
      <group id="11169445">
        <trans-unit id="a979ef10cc6f6a36df6b8a323307ee3bb2e2db9c" translate="yes" xml:space="preserve">
          <source>+</source>
          <target state="translated">+</target>
        </trans-unit>
        <trans-unit id="e16d87c9f88437121301492ad691068ef35ff709" translate="yes" xml:space="preserve">
          <source>, so dotNET solution is great, except with my Excel 2010 I need to add a &lt;code&gt;set&lt;/code&gt; if I want to avoid an error:</source>
          <target state="translated">、それでdotNETソリューションは素晴らしいですが、Excel 2010でエラーを回避したい場合は &lt;code&gt;set&lt;/code&gt; を追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="42c5c71f91129e276544cd59f430e6e26d5657e0" translate="yes" xml:space="preserve">
          <source>.
In the figure, the last cell is B3, since formatting was applied explicitly to it. Cells B6:D7 have a format derived from a Conditional Formatting rule, and this is not detected even by &lt;code&gt;UsedRange&lt;/code&gt;.
Accounting for this would require some VBA programming.</source>
          <target state="translated">。 図では、書式設定が明示的に適用されているため、最後のセルはB3です。 セルB6：D7には条件付き書式ルールから派生した書式があり、これは &lt;code&gt;UsedRange&lt;/code&gt; によっても検出されません。 これを説明するには、いくつかのVBAプログラミングが必要です。</target>
        </trans-unit>
        <trans-unit id="90279fc1b099cf71dadcf777892f14454e06cd77" translate="yes" xml:space="preserve">
          <source>... is to ensure that your &lt;code&gt;LastRow&lt;/code&gt; variable is of &lt;code&gt;Long&lt;/code&gt; type:</source>
          <target state="translated">... &lt;code&gt;LastRow&lt;/code&gt; 変数が &lt;code&gt;Long&lt;/code&gt; 型であることを確認することです：</target>
        </trans-unit>
        <trans-unit id="50171d450d3ba1f16aa205436c4e719c3a4e7ce4" translate="yes" xml:space="preserve">
          <source>1) data, i.e., a formula, possibly resulting in a blank value;</source>
          <target state="translated">1)データ、すなわち数式であり、結果として空白の値が得られる可能性があります。</target>
        </trans-unit>
        <trans-unit id="1ebb318f8cf81fa4bc124e61c2ff72bd8a788344" translate="yes" xml:space="preserve">
          <source>2) a value, i.e., a non-blank formula or constant;</source>
          <target state="translated">2)値、すなわち、空白ではない式または定数。</target>
        </trans-unit>
        <trans-unit id="22b6e992d021264c705372cb44d69f5e7fe1e344" translate="yes" xml:space="preserve">
          <source>3) formatting;</source>
          <target state="translated">3)フォーマット。</target>
        </trans-unit>
        <trans-unit id="13129d27f1cb0260621fdbd39f0c1e6747eed88a" translate="yes" xml:space="preserve">
          <source>4) conditional formatting;</source>
          <target state="translated">4)条件付きの書式設定。</target>
        </trans-unit>
        <trans-unit id="457a3a02ee9880ed0a789f8eeb81ef1e2d884288" translate="yes" xml:space="preserve">
          <source>5) a shape (including Comment) overlapping the cell;</source>
          <target state="translated">5)セルに重なる形状(コメントを含む)。</target>
        </trans-unit>
        <trans-unit id="5540618320c7d6c2d925bb4b28fe63945d7c6594" translate="yes" xml:space="preserve">
          <source>6) involvement in a Table (List Object).</source>
          <target state="translated">6)表(リストオブジェクト)への関与。</target>
        </trans-unit>
        <trans-unit id="22b1ba405ab214fc1f34064ef18723d3ae1dd8b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.Find&lt;/code&gt; allows you to find the last row with any data (including formulas) or a non-blank value &lt;strong&gt;in any column&lt;/strong&gt;. You can choose whether you're interested in formulas or values, but the catch is that it &lt;strong&gt;resets the defaults in the Excel's Find dialog&lt;/strong&gt; ️️⚠️, which can be highly confusing to your users. It also needs to be used carefully, see &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/11169920#11169920&quot;&gt;the answer by Siddharth Rout&lt;/a&gt; here (section &lt;em&gt;&quot;Find Last Row in a Sheet&quot;&lt;/em&gt;)</source>
          <target state="translated">&lt;code&gt;.Find&lt;/code&gt; を使用すると、任意のデータ（数式を含む）または&lt;strong&gt;任意の列の&lt;/strong&gt;空白以外の値を含む最後の行を検索できます。 数式と値のどちらに関心があるかを選択できますが、問題&lt;strong&gt;は、Excelの[検索]ダイアログ&lt;/strong&gt; ️️⚠️ &lt;strong&gt;のデフォルトをリセットする&lt;/strong&gt;ことです。これは、ユーザーを混乱させる可能性があります。 また、慎重に使用する必要があります。ここの&lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/11169920#11169920&quot;&gt;Siddharth Routの回答を&lt;/a&gt;参照してください（ &lt;em&gt;「シートの最後の行を検索する」&lt;/em&gt;セクション）</target>
        </trans-unit>
        <trans-unit id="082c164e2a49a85097288c48424ae3ad12b139fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.SpecialCells(xlLastCell)&lt;/code&gt; is equivalent to CTRL+END, returning the bottom-most and right-most cell of the &quot;used range&quot;, so all caveats that apply to relying on the &quot;used range&quot;, apply to this method as well. In addition, the &quot;used range&quot; is only reset when saving the workbook and when accessing &lt;code&gt;worksheet.UsedRange&lt;/code&gt;, so &lt;code&gt;xlLastCell&lt;/code&gt; might produce stale results⚠️ with unsaved modifications (e.g. after some rows were deleted). See the &lt;a href=&quot;https://stackoverflow.com/a/29899739/1026&quot;&gt;nearby answer by dotNET&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.SpecialCells(xlLastCell)&lt;/code&gt; はCTRL + ENDと同等であり、「使用範囲」の一番下と一番右のセルを返すため、「使用範囲」に依存することに適用されるすべての警告は、このメソッドにも適用されます。 さらに、「使用範囲」は、ワークブックを保存するとき、および &lt;code&gt;worksheet.UsedRange&lt;/code&gt; にアクセスするときにのみリセットされるため、 &lt;code&gt;xlLastCell&lt;/code&gt; は、保存されていない変更（たとえば、いくつかの行が削除された後など）を伴う古い結果を生成する可能性があります。 &lt;a href=&quot;https://stackoverflow.com/a/29899739/1026&quot;&gt;dotNETによる近くの回答を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c8d5c80654f41fb18aa065da52dfc4068b45ba28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CountA&lt;/code&gt; is also unreliable because it will give you incorrect result if there are blank cells in between.</source>
          <target state="translated">&lt;code&gt;CountA&lt;/code&gt; は、間に空白のセルがあると誤った結果を返すため、信頼性が低くなります。</target>
        </trans-unit>
        <trans-unit id="3472237bbea1c727f19b1ed7a6e0f62a9da12855" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UsedRange&lt;/code&gt; should &lt;strong&gt;NEVER&lt;/strong&gt; be used to find the last cell which has data. It is highly unreliable. Try this experiment.</source>
          <target state="translated">データを含む最後のセルを見つけるために、 &lt;code&gt;UsedRange&lt;/code&gt; を使用しないでください。 それは非常に信頼できません。 この実験を試してください。</target>
        </trans-unit>
        <trans-unit id="e1ff96b8d2bf45246034678efa083835144145a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sht.UsedRange&lt;/code&gt; (described in detail in &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/27637752#27637752&quot;&gt;the answer by sancho.s&lt;/a&gt; here) considers &lt;strong&gt;both data and formatting&lt;/strong&gt; (though not conditional formatting) and &lt;strong&gt;resets the &quot;used range&quot; of the worksheet&lt;/strong&gt;, which may or may not be what you want.</source>
          <target state="translated">&lt;code&gt;sht.UsedRange&lt;/code&gt; （ここの&lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/27637752#27637752&quot;&gt;sancho.sの回答&lt;/a&gt;で詳細に説明）は&lt;strong&gt;、データとフォーマットの両方&lt;/strong&gt; （条件付きフォーマットではありません）を考慮し&lt;strong&gt;、ワークシートの「使用範囲」をリセットし&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="964c5fb14c411a677b9e0813b3666d3f612e29a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xlDown&lt;/code&gt; is equally unreliable.</source>
          <target state="translated">&lt;code&gt;xlDown&lt;/code&gt; も同様に信頼できません。</target>
        </trans-unit>
        <trans-unit id="947ab43f26a459cc5b04a32b7660e6bd290fa55d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;For criterion 1, I suggest reading &lt;a href=&quot;https://stackoverflow.com/a/11169920/2707864&quot;&gt;this answer&lt;/a&gt;&lt;/em&gt;.
Note that &lt;code&gt;UsedRange&lt;/code&gt; is cited as unreliable. I think that is misleading (i.e., &quot;unfair&quot; to &lt;code&gt;UsedRange&lt;/code&gt;), as &lt;code&gt;UsedRange&lt;/code&gt; is simply not meant to report the last cell containing data. So it should not be used in this case, as indicated in that answer. See also &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/27637752#comment43694683_11169920&quot;&gt;this comment&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;基準1については、 &lt;a href=&quot;https://stackoverflow.com/a/11169920/2707864&quot;&gt;この回答を&lt;/a&gt;読むことをお勧めします&lt;/em&gt; 。 &lt;code&gt;UsedRange&lt;/code&gt; は信頼できないものとして引用されていることに注意してください。 &lt;code&gt;UsedRange&lt;/code&gt; は単にデータを含む最後のセルを報告することを意図していないので、これは誤解を招く（つまり、 &lt;code&gt;UsedRange&lt;/code&gt; に対する「不公平」）と思います。 したがって、その回答に示されているように、この場合は使用しないでください。 &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/27637752#comment43694683_11169920&quot;&gt;このコメント&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="2eb186b9850bae47c4f94b3b7fa572afa7fb07b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;For criterion 2, &lt;code&gt;UsedRange&lt;/code&gt; is the most reliable option&lt;/em&gt;, as compared to other options also designed for this use. It even makes it unnecessary to save a workbook to make sure that the last cell is updated.</source>
          <target state="translated">&lt;em&gt;条件2の場合、 &lt;code&gt;UsedRange&lt;/code&gt; は、&lt;/em&gt;この用途のために設計された他のオプションと比較して、 &lt;em&gt;最も信頼できるオプション&lt;/em&gt;です。 最後のセルが確実に更新されるようにするために、ブックを保存する必要もありません。</target>
        </trans-unit>
        <trans-unit id="23265a10b14eacd402cd349318fcaebce9469d2d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;For criterion 3, I do not know any built-in method&lt;/em&gt;.
Criterion 2 does not account for Conditional Formatting. One may have formatted cells, based on formulas, which are not detected by &lt;code&gt;UsedRange&lt;/code&gt; or</source>
          <target state="translated">&lt;em&gt;基準3については、組み込みの方法がわかりません&lt;/em&gt; 。 基準2は条件付き書式を考慮していません。 数式に基づいてフォーマットされたセルがあり、 &lt;code&gt;UsedRange&lt;/code&gt; または</target>
        </trans-unit>
        <trans-unit id="2986b1e12f783945988e88275b90d0b1ef85d14c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;As to the correct way of finding the last used cell, one has first to decide what is considered &lt;em&gt;used&lt;/em&gt;, and then select a suitable method&lt;/strong&gt;. I conceive at least three meanings:</source>
          <target state="translated">&lt;strong&gt;最後に使用されたセルを見つける正しい方法については、最初に&lt;em&gt;使用されて&lt;/em&gt;いると見なさ&lt;em&gt;れる&lt;/em&gt;ものを決定し、次に適切な方法を選択する必要があります&lt;/strong&gt; 。 少なくとも3つの意味があると思います。</target>
        </trans-unit>
        <trans-unit id="0609fe1265b301d24a84a9b84f24be5bd931b8b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;As to your specific question&lt;/strong&gt;:
&lt;em&gt;What's the reason behind this?&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;あなたの特定の質問について&lt;/strong&gt; ： &lt;em&gt;これの背後にある理由は何ですか？&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ba5488062d51a5419c8387f16743e8e32aa123f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How to find the last used cell depends on what &lt;em&gt;you&lt;/em&gt; want (your criterion)&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;最後に使用したセルを見つける方法は、必要なもの（基準）によって異なります&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3eb2400d177caf81b9af5b98f6842cf9ae2dd38" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: I intend to make this a &quot;one stop post&quot; where you can use the &lt;code&gt;Correct&lt;/code&gt; way to find the last row. This will also cover the best practices to follow when finding the last row. And hence I will keep on updating it whenever I come across a new scenario/information.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt; ：私は、これを「ワンストップポスト」にして、 &lt;code&gt;Correct&lt;/code&gt; 方法で最後の行を見つけることができるようにするつもりです。 これは、最後の行を見つけるときに従うべきベストプラクティスもカバーします。 したがって、新しいシナリオ/情報に遭遇したときはいつでもそれを更新し続けます。</target>
        </trans-unit>
        <trans-unit id="f8f8e92323045e0f09274cfc00622f82167d21bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: this answer was motivated by &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-excel-with-vba/27637752#comment43694683_11169920&quot;&gt;this comment&lt;/a&gt;. The purpose of &lt;code&gt;UsedRange&lt;/code&gt; is different from what is mentioned in the answer above.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注：この回答は、 &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-excel-with-vba/27637752#comment43694683_11169920&quot;&gt;このコメント&lt;/a&gt;によって動機付けられました。&lt;/strong&gt; &lt;strong&gt; &lt;code&gt;UsedRange&lt;/code&gt; の目的は、上記の回答で述べられているものとは異なります。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e934e5f6d1ba2799c583ac44b8d46e134b3c925" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unreliable ways of finding the last row&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;最後の行を見つける信頼できない方法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="228349b401590ce1e1379b02938d4cb36cae4b6d" translate="yes" xml:space="preserve">
          <source>A solution involving &lt;code&gt;.End(xlUp)&lt;/code&gt; to search backwards from the end of a column will, just as CTRL+UP, look for &lt;strong&gt;data&lt;/strong&gt; (formulas producing a blank value are considered &quot;data&quot;) in &lt;strong&gt;visible rows&lt;/strong&gt; (so using it with autofilter enabled might produce incorrect results ⚠️).</source>
          <target state="translated">&lt;code&gt;.End(xlUp)&lt;/code&gt; を使用して列の最後から逆方向に検索するソリューションでは、CTRL + UPと同様に、表示されている行で&lt;strong&gt;データ&lt;/strong&gt; （空白の値を生成する数式は「データ」と見なされ&lt;strong&gt;ます&lt;/strong&gt; ）を探し&lt;strong&gt;ます&lt;/strong&gt; （オートフィルターを有効にして使用します）正しくない結果が生じる可能性があります⚠️）。</target>
        </trans-unit>
        <trans-unit id="afdcdb759cf0c6e0ebe96335036114a9a51951b2" translate="yes" xml:space="preserve">
          <source>A word of caution: Excel keeps track of the most bottom-right cell that was ever used in a worksheet. So if for example you enter something in &lt;strong&gt;B3&lt;/strong&gt; and something else in &lt;strong&gt;H8&lt;/strong&gt; and then later on delete the contents of &lt;strong&gt;H8&lt;/strong&gt;, pressing</source>
          <target state="translated">注意：Excelは、ワークシートで使用された最も右下のセルを追跡します。 たとえば、 &lt;strong&gt;B3&lt;/strong&gt;に何かを入力し、 &lt;strong&gt;H8に&lt;/strong&gt;何かを入力して、後で&lt;strong&gt;H8&lt;/strong&gt;のコンテンツを削除する場合は、</target>
        </trans-unit>
        <trans-unit id="89e1ad7a70a4655c7cccc84bd881246d8668f6d8" translate="yes" xml:space="preserve">
          <source>A) Can there be &lt;em&gt;hidden rows&lt;/em&gt; (e.g. autofilter), &lt;em&gt;blank cells&lt;/em&gt; or blank rows?</source>
          <target state="translated">A） &lt;em&gt;非表示の行&lt;/em&gt; （オートフィルターなど）、 &lt;em&gt;空白のセル&lt;/em&gt; 、空白の行はありますか？</target>
        </trans-unit>
        <trans-unit id="b44b2d59b62d239c1176824bb02a78274e5ca96e" translate="yes" xml:space="preserve">
          <source>A65536</source>
          <target state="translated">A65536</target>
        </trans-unit>
        <trans-unit id="07a1c590cf7fc5eee7f69dfa2212e40bddcf4b42" translate="yes" xml:space="preserve">
          <source>Allows for multiple columns.</source>
          <target state="translated">複数のカラムを使用することができます。</target>
        </trans-unit>
        <trans-unit id="a3f1186d89280629d62897d2eb8ade9c50380eeb" translate="yes" xml:space="preserve">
          <source>Also, I would have my version of any LastRow procedure return a zero for a blank worksheet, then I can know it is blank.</source>
          <target state="translated">また、私のバージョンのLastRowプロシージャは、空白のワークシートに対してゼロを返すようにして、それが空白であることを知ることができます。</target>
        </trans-unit>
        <trans-unit id="d2ad2c56384b97cb10dc27dd7acc803edc8c3d14" translate="yes" xml:space="preserve">
          <source>And hence one should avoid the use of &lt;code&gt;UsedRange&lt;/code&gt;, &lt;code&gt;xlDown&lt;/code&gt; and &lt;code&gt;CountA&lt;/code&gt; to find the last cell.</source>
          <target state="translated">したがって、最後のセルを見つけるために、 &lt;code&gt;UsedRange&lt;/code&gt; 、 &lt;code&gt;xlDown&lt;/code&gt; 、 &lt;code&gt;CountA&lt;/code&gt; を使用することは避けてください。</target>
        </trans-unit>
        <trans-unit id="90de0bc63e7f1d8f63b37f112d99e749d3824960" translate="yes" xml:space="preserve">
          <source>Any solution based on &lt;code&gt;Count&lt;/code&gt;ing (&lt;code&gt;CountA&lt;/code&gt; or &lt;code&gt;Cells*.Count&lt;/code&gt;) or &lt;code&gt;.CurrentRegion&lt;/code&gt; will also break in presence of blank cells or rows 👎</source>
          <target state="translated">&lt;code&gt;Count&lt;/code&gt; （ &lt;code&gt;CountA&lt;/code&gt; または &lt;code&gt;Cells*.Count&lt;/code&gt; ）または &lt;code&gt;.CurrentRegion&lt;/code&gt; に基づくソリューションも、空白のセルまたは行が存在すると中断します👎</target>
        </trans-unit>
        <trans-unit id="827b15a547418cd461276f8e34806f2cb8bcc457" translate="yes" xml:space="preserve">
          <source>B) What kind of performance is acceptable?</source>
          <target state="translated">B)どのようなパフォーマンスが許容されるのか?</target>
        </trans-unit>
        <trans-unit id="399cfddfc99d4c04e7ead04644adabb2913ab2e6" translate="yes" xml:space="preserve">
          <source>C) Can the VBA macro affect the workbook or the application settings in any way?</source>
          <target state="translated">C)VBAマクロは、ワークブックやアプリケーションの設定に何か影響を与えることはできますか?</target>
        </trans-unit>
        <trans-unit id="b38bed0f0e9601a07358ec72777da31f91720f2a" translate="yes" xml:space="preserve">
          <source>CTRL</source>
          <target state="translated">CTRL</target>
        </trans-unit>
        <trans-unit id="67a19b1bc7ddad4d1497ab55d5007648d46c8730" translate="yes" xml:space="preserve">
          <source>Consider this code</source>
          <target state="translated">このコードを考えてみましょう</target>
        </trans-unit>
        <trans-unit id="c2fa758266b2393030e2e79e17d4de889eb6f9b9" translate="yes" xml:space="preserve">
          <source>CountA</source>
          <target state="translated">CountA</target>
        </trans-unit>
        <trans-unit id="dd6a02a553da4cb247f914011dd67c37487ec082" translate="yes" xml:space="preserve">
          <source>Ctrl</source>
          <target state="translated">Ctrl</target>
        </trans-unit>
        <trans-unit id="ef978457620a85de6cfe4a42cbf3fcd777f0aadd" translate="yes" xml:space="preserve">
          <source>Doesn't modify &lt;code&gt;Find&lt;/code&gt; settings</source>
          <target state="translated">&lt;code&gt;Find&lt;/code&gt; 設定を変更しません</target>
        </trans-unit>
        <trans-unit id="f45f0a3752ff13d006a65f09a4643e63c1237391" translate="yes" xml:space="preserve">
          <source>Down Arrow</source>
          <target state="translated">ダウンアロー</target>
        </trans-unit>
        <trans-unit id="ded8a062beb3dfd80c08fb77e6ed233232f5f6f7" translate="yes" xml:space="preserve">
          <source>Dynamic if used as a UDF with the entire column selected.</source>
          <target state="translated">列全体が選択されている状態でUDFとして使用されている場合は動的です。</target>
        </trans-unit>
        <trans-unit id="a2bb9d34b8a1a79665858d354585cf147e0dee4e" translate="yes" xml:space="preserve">
          <source>End</source>
          <target state="translated">End</target>
        </trans-unit>
        <trans-unit id="2b9eceb7a86a9f577ef80586c5c1d7fde9ff493d" translate="yes" xml:space="preserve">
          <source>Enter</source>
          <target state="translated">Enter</target>
        </trans-unit>
        <trans-unit id="8c779217d385497ba00923f05a4251995de90c9d" translate="yes" xml:space="preserve">
          <source>Error in finding last used cell in Excel with VBA</source>
          <target state="translated">VBAを使用してExcelで最後に使用されたセルを見つける際のエラー</target>
        </trans-unit>
        <trans-unit id="d828785426216820d97931d2e3e0d2b7815bb6ac" translate="yes" xml:space="preserve">
          <source>Find Last Row in a Column</source>
          <target state="translated">列の最後の行を探す</target>
        </trans-unit>
        <trans-unit id="47b91153781234c92589a0056245907807660af4" translate="yes" xml:space="preserve">
          <source>Find Last Row in a Sheet</source>
          <target state="translated">シートの最後の行を探す</target>
        </trans-unit>
        <trans-unit id="1aac4178e77a57e13dfe9bb8135895e704efd322" translate="yes" xml:space="preserve">
          <source>Find Last Row in a Table (ListObject)</source>
          <target state="translated">テーブルの最後の行を探す (ListObject)</target>
        </trans-unit>
        <trans-unit id="f37e39003a54f93edb9babc69566c14fcdbc8707" translate="yes" xml:space="preserve">
          <source>For more detailed results, some lines in the code can be uncommented:</source>
          <target state="translated">より詳細な結果を得るために、コードの一部の行はコメントを付けないことができます。</target>
        </trans-unit>
        <trans-unit id="fc05091b11cf96b9437722b41fd14d850655b350" translate="yes" xml:space="preserve">
          <source>For the case of the OP, this is the way to get the last row in column &lt;code&gt;E&lt;/code&gt;:</source>
          <target state="translated">OPの場合、これは &lt;code&gt;E&lt;/code&gt; 列の最後の行を取得する方法です。</target>
        </trans-unit>
        <trans-unit id="b72984bea83b8b6e6ab6c3dea0afcc7bb792ac52" translate="yes" xml:space="preserve">
          <source>For the last 3+ years these are the functions that I am using for finding last row and last column per defined column(for row) and row(for column):</source>
          <target state="translated">過去3年以上の間、これらは私が定義された列(行の場合)と行(列の場合)ごとに最後の行と最後の列を見つけるために使用している関数です。</target>
        </trans-unit>
        <trans-unit id="0070a6d45299b17e29d08c598e6fbde9b6876494" translate="yes" xml:space="preserve">
          <source>Here is a scenario to show how &lt;code&gt;UsedRange&lt;/code&gt; works.</source>
          <target state="translated">以下は、 &lt;code&gt;UsedRange&lt;/code&gt; の動作を示すシナリオです。</target>
        </trans-unit>
        <trans-unit id="e36a22e2b2de344373d0f2c50a9a46edb4974cc4" translate="yes" xml:space="preserve">
          <source>Here we may use the &lt;a href=&quot;https://www.vitoshacademy.com/last-used-row-last-used-column-in-excel-with-formula-without-vba/&quot;&gt;well-known Excel formulas&lt;/a&gt;, which give us the last row of a worksheet in Excel, without involving VBA - &lt;code&gt;=IFERROR(LOOKUP(2,1/(NOT(ISBLANK(A:A))),ROW(A:A)),0)&lt;/code&gt;</source>
          <target state="translated">ここでは、 &lt;code&gt;=IFERROR(LOOKUP(2,1/(NOT(ISBLANK(A:A))),ROW(A:A)),0)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f6a079383f4dba363d70604d44c63a58521b8cb" translate="yes" xml:space="preserve">
          <source>Here's my two cents.</source>
          <target state="translated">これが私の2つのセントです。</target>
        </trans-unit>
        <trans-unit id="3d080817ae211b70ffb8548327b1435f255163a6" translate="yes" xml:space="preserve">
          <source>Here,</source>
          <target state="translated">Here,</target>
        </trans-unit>
        <trans-unit id="4bea76e440600f11e5f34c9f0389bf22e2e8792a" translate="yes" xml:space="preserve">
          <source>However this question is seeking to find the last row using VBA, I think it would be good to include an array formula for worksheet function  as this gets visited frequently:</source>
          <target state="translated">しかし、この質問はVBAを使って最後の行を見つけようとしているのですが、これは頻繁に訪問されるので、ワークシート関数の配列式を含めると良いと思います。</target>
        </trans-unit>
        <trans-unit id="f13bd32d23890f2434e793f56588181444c348db" translate="yes" xml:space="preserve">
          <source>However, I think a One-Stop-Solution that has a drawback of messing up &lt;code&gt;find&lt;/code&gt; settings or performing slower is a better overall solution. A user can then tinker with their settings to try to improve, knowing what's going on with their code. Using &lt;code&gt;xLUp&lt;/code&gt; will not warn of the potential risks and they could carry on for who knows how long not knowing their code was not working correctly.</source>
          <target state="translated">ただし、 &lt;code&gt;find&lt;/code&gt; 設定がめちゃくちゃになるか、パフォーマンスが低下するという欠点があるワンストップソリューションの方が、全体的なソリューションとしては優れていると思います。 次に、ユーザーは設定をいじくり回して、コードで何が行われているのかを理解しながら、改善を試みることができます。 &lt;code&gt;xLUp&lt;/code&gt; を使用しても、潜在的なリスクが警告されることはなく、コードが正しく機能していないことを知らないことを誰が知っていても、リスクを引き継ぐことができます。</target>
        </trans-unit>
        <trans-unit id="c52594d431c168ee54a1d96692b39b0702315cfe" translate="yes" xml:space="preserve">
          <source>I am getting the wrong output when I put a single element into a cell. But when I put more than one value into the cell, the output is correct. 
What's the reason behind this?</source>
          <target state="translated">セルに1つの要素を入れると、間違った出力が出てしまいます。しかし、セルに複数の値を入れると正しく出力されます。これは何か理由があるのでしょうか?</target>
        </trans-unit>
        <trans-unit id="6523024c774fc2a7d10ec902c27368453dac2f33" translate="yes" xml:space="preserve">
          <source>I created this one-stop function for &lt;strong&gt;determining the last row, column and cell, be it for data, formatted (grouped/commented/hidden) cells or conditional formatting&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;データ、フォーマット済み（グループ化/コメント/非表示）セル、条件​​付きフォーマットなど、最後の行、列、セル&lt;/strong&gt;を&lt;strong&gt;決定する&lt;/strong&gt;ためのこのワンストップ関数を作成しました。</target>
        </trans-unit>
        <trans-unit id="95d9e7af9942c08e5cac8ecf6c143dc46eba6676" translate="yes" xml:space="preserve">
          <source>I was looking for a way to mimic the</source>
          <target state="translated">を真似する方法を探していました。</target>
        </trans-unit>
        <trans-unit id="37cf14ef562c3dab74ac5c6254fc06e883e832b2" translate="yes" xml:space="preserve">
          <source>I wonder that nobody has mentioned this, But the easiest way of getting the last used cell is:</source>
          <target state="translated">誰も言及していないのが不思議ですが、最後の中古セルの入手方法が一番簡単です。</target>
        </trans-unit>
        <trans-unit id="809f1b508291d3f3abaebdd164acc7a0b05e33ce" translate="yes" xml:space="preserve">
          <source>I would add to the answer given by Siddarth Rout to say that the CountA call can be skipped by having Find return a Range object, instead of a row number, and then test the returned Range object to see if it is Nothing (blank worksheet).</source>
          <target state="translated">Siddarth Routの回答に加えて、Findが行番号の代わりにRangeオブジェクトを返し、返されたRangeオブジェクトがNothing(空白のワークシート)であるかどうかをテストすることで、CountAの呼び出しを省略できるということを言いたいと思います。</target>
        </trans-unit>
        <trans-unit id="78c9399f278537d0426d28ca23e6006181df79f2" translate="yes" xml:space="preserve">
          <source>I'll start by expanding on &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/27637752#27637752&quot;&gt;the answer by sancho.s&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba#comment73816621_27637752&quot;&gt;the comment by GlennFromIowa&lt;/a&gt;, adding even more detail:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/27637752#27637752&quot;&gt;sancho.sによる回答&lt;/a&gt;と&lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba#comment73816621_27637752&quot;&gt;GlennFromIowaによるコメントを拡張&lt;/a&gt;することから始め 、さらに詳細を追加します。</target>
        </trans-unit>
        <trans-unit id="2863802b60ac22e7a0951a4bd75b913a8fa0507a" translate="yes" xml:space="preserve">
          <source>IMHO the risk of a hidden row with data being excluded is too significant to let &lt;code&gt;xlUp&lt;/code&gt; be considered a &lt;em&gt;One stop answer&lt;/em&gt;. I agree it's simple and will work MOST of the time, but it presents the risk of understating the last row, without any warning. This could produce &lt;em&gt;CATASTROPHIC&lt;/em&gt; results at some poinit for someone who jumped on Stack Overlow and was looking to &quot;sure way&quot; to capture this value.</source>
          <target state="translated">私見では、データが除外されている非表示の行のリスクは非常に大きいため、 &lt;code&gt;xlUp&lt;/code&gt; を &lt;em&gt;ワンストップの回答&lt;/em&gt;と見なすことはできません。 私はそれが単純でほとんどの時間機能することに同意しますが、警告なしに最後の行を過小評価するリスクを提示します。 これにより、スタックオーバーローにジャンプし、この値を取得するための「確実な方法」を模索していた人にとって、いくつかの点で&lt;em&gt;CATASTROPHIC&lt;/em&gt;結果が生成される可能性があります。</target>
        </trans-unit>
        <trans-unit id="39debfacccf8e0cd0bf192711a73baed3a4c79e4" translate="yes" xml:space="preserve">
          <source>If there is only one non-blank cell, but it is not the first one, your code will still give you the correct result.</source>
          <target state="translated">ブランクのないセルが1つしかなくても、それが最初のセルではない場合でも、コードは正しい結果を返します。</target>
        </trans-unit>
        <trans-unit id="c8abf3c1d7f351d85ae62f63a007b4aa2b63de0d" translate="yes" xml:space="preserve">
          <source>If you notice that we have a &lt;code&gt;.&lt;/code&gt; before &lt;code&gt;Rows.Count&lt;/code&gt;. We often chose to ignore that. See &lt;a href=&quot;https://stackoverflow.com/questions/19985345/vba-excel-compability-mode#comment29753337_19985345&quot;&gt;THIS&lt;/a&gt; question on the possible error that you may get. I always advise using &lt;code&gt;.&lt;/code&gt; before &lt;code&gt;Rows.Count&lt;/code&gt; and &lt;code&gt;Columns.Count&lt;/code&gt;. That question is a classic scenario where the code will fail because the &lt;code&gt;Rows.Count&lt;/code&gt; returns &lt;code&gt;65536&lt;/code&gt; for Excel 2003 and earlier and &lt;code&gt;1048576&lt;/code&gt; for Excel 2007 and later. Similarly &lt;code&gt;Columns.Count&lt;/code&gt; returns &lt;code&gt;256&lt;/code&gt; and &lt;code&gt;16384&lt;/code&gt;, respectively.</source>
          <target state="translated">あなたが私たちがいることに気づいた場合 &lt;code&gt;.&lt;/code&gt; &lt;code&gt;Rows.Count&lt;/code&gt; の前。 私たちはしばしばそれを無視することを選びました。 発生する可能性のあるエラーについては、 &lt;a href=&quot;https://stackoverflow.com/questions/19985345/vba-excel-compability-mode#comment29753337_19985345&quot;&gt;この&lt;/a&gt;質問を参照してください。 私は常に使用することをお勧めし &lt;code&gt;.&lt;/code&gt; &lt;code&gt;Rows.Count&lt;/code&gt; および &lt;code&gt;Columns.Count&lt;/code&gt; の前。 その質問は、 &lt;code&gt;Rows.Count&lt;/code&gt; がExcel 2003以前の場合は &lt;code&gt;65536&lt;/code&gt; を返し、Excel 2007以降の場合は &lt;code&gt;1048576&lt;/code&gt; を返すため、コードが失敗する古典的なシナリオです。 同様に、 &lt;code&gt;Columns.Count&lt;/code&gt; はそれぞれ &lt;code&gt;256&lt;/code&gt; と &lt;code&gt;16384&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="84539c301bebb3a41ccaaa5e25afbeb524cebe8b" translate="yes" xml:space="preserve">
          <source>If your range contains non-contiguous non-blank cells, then it will also give a wrong result.</source>
          <target state="translated">範囲に連続しない非ブランクのセルが含まれている場合も、間違った結果が返されます。</target>
        </trans-unit>
        <trans-unit id="134c64335f5ffab06b292a8975193cd103c16175" translate="yes" xml:space="preserve">
          <source>In order to put this in VBA and not to write anything in Excel, using the parameters for the latter functions, something like this could be in mind:</source>
          <target state="translated">これをVBAに入れて、後者の関数のパラメータを使ってExcelに何も書かないようにするためには、こんなことが頭に浮かんでくるかもしれません。</target>
        </trans-unit>
        <trans-unit id="593f73ea0ddf0bb36e38f97427d6c23df4ad750c" translate="yes" xml:space="preserve">
          <source>Last Column:</source>
          <target state="translated">最後のコラム</target>
        </trans-unit>
        <trans-unit id="dcd9c25eb82183ce7b5bc8565a460c66e9556481" translate="yes" xml:space="preserve">
          <source>Last Row, counting empty rows with data:</source>
          <target state="translated">最後の行は、空の行をデータでカウントします。</target>
        </trans-unit>
        <trans-unit id="9f6976483b9e7fdb62b0fecc7db7ea1b7e8e8860" translate="yes" xml:space="preserve">
          <source>Last Row:</source>
          <target state="translated">最後の行</target>
        </trans-unit>
        <trans-unit id="782661384d5f64184e9542ee3f4ae0d554d46afd" translate="yes" xml:space="preserve">
          <source>More explicit solutions that check individual &lt;code&gt;Cells&lt;/code&gt;' in a loop are generally slower than re-using an Excel function (although can still be performant), but let you specify exactly what you want to find. See &lt;a href=&quot;https://stackoverflow.com/a/49971492/1026&quot;&gt;my solution&lt;/a&gt; based on &lt;code&gt;UsedRange&lt;/code&gt; and VBA arrays to find the last cell with data in the given column -- it handles hidden rows, filters, blanks, does not modify the Find defaults and is quite performant.</source>
          <target state="translated">ループ内の個々の &lt;code&gt;Cells&lt;/code&gt; をチェックするより明示的なソリューションは、通常、Excel関数を再利用するよりも遅くなります（ただし、パフォーマンスは向上します）が、検索対象を正確に指定できます。 指定された列のデータを含む最後のセルを見つけるには、 &lt;code&gt;UsedRange&lt;/code&gt; およびVBA配列に基づく&lt;a href=&quot;https://stackoverflow.com/a/49971492/1026&quot;&gt;私のソリューション&lt;/a&gt;を参照してください。これは、非表示の行、フィルター、空白を処理し、Findのデフォルトを変更せず、非常にパフォーマンスが高くなります。</target>
        </trans-unit>
        <trans-unit id="e250ccc45c93ddcfb6305e75c88e77b1ab5a555b" translate="yes" xml:space="preserve">
          <source>Note that a common mistake ️is to use &lt;code&gt;.UsedRange.Rows.Count&lt;/code&gt;⚠️, which returns the &lt;em&gt;number of rows&lt;/em&gt; in the used range, not the &lt;em&gt;last row number&lt;/em&gt; (they will be different if the first few rows are blank), for details see &lt;a href=&quot;https://stackoverflow.com/a/35975280/1026&quot;&gt;newguy's answer to &lt;em&gt;How can I find last row that contains data in the Excel sheet with a macro?&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">よくある間違い️は、.UsedRange.Rows.Count⚠️を使用する &lt;code&gt;.UsedRange.Rows.Count&lt;/code&gt; です。これは、 &lt;em&gt;最後の行番号&lt;/em&gt;ではなく、使用された範囲の&lt;em&gt;行数&lt;/em&gt;を返します（最初の数行が空白の場合は異なります）。詳細については、 &lt;a href=&quot;https://stackoverflow.com/a/35975280/1026&quot;&gt;newguy&lt;/a&gt;を参照してください。 &lt;em&gt;マクロを使用してExcelシートのデータを含む最後の行を見つける&lt;/em&gt;には&lt;em&gt;どうすればよいですか？&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2d35b4f86e6339d0a2aeaaa007d5931247104c71" translate="yes" xml:space="preserve">
          <source>Note that this approach will skip any hidden rows. Looking back at &lt;a href=&quot;https://i.stack.imgur.com/3TqSI.png&quot;&gt;my screenshot above for column A&lt;/a&gt;, if row 8 were hidden, this approach would return &lt;code&gt;5&lt;/code&gt; instead of &lt;code&gt;8&lt;/code&gt;.</source>
          <target state="translated">この方法では、非表示の行がスキップされることに注意してください。 &lt;a href=&quot;https://i.stack.imgur.com/3TqSI.png&quot;&gt;上記のA列のスクリーンショット&lt;/a&gt;を振り返ると、行8が非表示の場合、このアプローチでは &lt;code&gt;8&lt;/code&gt; ではなく &lt;code&gt;5&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="285f98e8d01e4962eff6724b78a3c6724d0931e6" translate="yes" xml:space="preserve">
          <source>Note that:</source>
          <target state="translated">そのことに注意してください。</target>
        </trans-unit>
        <trans-unit id="ae35960b75defbdd762cbf4fc85d62aa303ef8a7" translate="yes" xml:space="preserve">
          <source>One important note to keep in mind when using the solution ...</source>
          <target state="translated">溶液を使用する際に留意すべき重要な注意点は、...</target>
        </trans-unit>
        <trans-unit id="b51dfc2b4f6605fbbef17b9eb4e6cd6776072cc4" translate="yes" xml:space="preserve">
          <source>One limitation exists - if there are tables in the sheet, results can become unreliable, so I decided to avoid running the code in this case:</source>
          <target state="translated">1つの制限があります-シートにテーブルがある場合、結果が信頼できなくなる可能性がありますので、今回はコードを実行しないことにしました。</target>
        </trans-unit>
        <trans-unit id="4c34566605c9374a25bc26869a5c422abb077b46" translate="yes" xml:space="preserve">
          <source>Other things you might want to consider:</source>
          <target state="translated">他にも検討してみてはいかがでしょうか。</target>
        </trans-unit>
        <trans-unit id="1bdfd2a311bbd8fec1da4e513f5fa0f016f8abc2" translate="yes" xml:space="preserve">
          <source>Otherwise you will end up getting OVERFLOW errors in certain situations in .XLSX workbooks</source>
          <target state="translated">そうしないと、.XLSXワークブックの特定の状況でOVERFLOWエラーが発生することになります。</target>
        </trans-unit>
        <trans-unit id="9c06273945e891bbe0709d8e120adebffae928a7" translate="yes" xml:space="preserve">
          <source>Reasonably simple, not a lot of variables.</source>
          <target state="translated">合理的にシンプルで、変数が多くない。</target>
        </trans-unit>
        <trans-unit id="b76b0bc03446fe6320d8b175fccffd681e3090c8" translate="yes" xml:space="preserve">
          <source>Results look like this:</source>
          <target state="translated">結果はこんな感じです。</target>
        </trans-unit>
        <trans-unit id="469d5b183fdc0d59e41a51e61529cdd95274ba7c" translate="yes" xml:space="preserve">
          <source>Shift</source>
          <target state="translated">Shift</target>
        </trans-unit>
        <trans-unit id="9c9456fcbd04adb2a1f80847e7c4217124f5fd48" translate="yes" xml:space="preserve">
          <source>Since the original question is about &lt;em&gt;problems&lt;/em&gt; with finding the last cell, &lt;strong&gt;in this answer I will list the various ways you can get unexpected results&lt;/strong&gt;; see &lt;a href=&quot;https://stackoverflow.com/a/49971492/1026&quot;&gt;my answer to &lt;em&gt;&quot;How can I find last row that contains data in the Excel sheet with a macro?&quot;&lt;/em&gt;&lt;/a&gt; for my take on solving this.</source>
          <target state="translated">元の質問は最後のセルの検索に関する&lt;em&gt;問題な&lt;/em&gt;ので、 &lt;strong&gt;この回答では、予期しない結果を得ることができるさまざまな方法をリストします&lt;/strong&gt; 。 &lt;a href=&quot;https://stackoverflow.com/a/49971492/1026&quot;&gt;&lt;em&gt;「マクロを使用してExcelシートのデータを含む最後の行を見つけるにはどうすればよいですか？」&lt;/em&gt;に対する私の回答を&lt;/a&gt;参照してください&lt;em&gt;。&lt;/em&gt; これを解決するための私の見解のために。</target>
        </trans-unit>
        <trans-unit id="1671baf5e64a4e1914db41ba5989d4d003ebe979" translate="yes" xml:space="preserve">
          <source>Some of the most common ways of finding last row which are highly unreliable and hence should never be used.</source>
          <target state="translated">最後の行を見つける最も一般的な方法のいくつかは、非常に信頼性が低く、したがって、決して使用すべきではありません。</target>
        </trans-unit>
        <trans-unit id="a0c8f590f077ce64bec625e8abb8b8841b103ef9" translate="yes" xml:space="preserve">
          <source>The &quot;erroneous&quot; output will obtain if there are no &lt;em&gt;non-blank&lt;/em&gt; cells in your range other than perhaps the first. Then, you are &lt;em&gt;leaping in the dark&lt;/em&gt;, i.e., down the worksheet
(you should note the difference between &lt;em&gt;blank&lt;/em&gt; and &lt;em&gt;empty string&lt;/em&gt;!).</source>
          <target state="translated">「誤った」出力は、おそらく最初のセル以外の範囲に&lt;em&gt;空白で&lt;/em&gt;ないセルがない場合に取得されます。 次に、 &lt;em&gt;暗闇の中で&lt;/em&gt; 、つまりワークシートを下に跳んでいます（ &lt;em&gt;空白&lt;/em&gt;と&lt;em&gt;空の文字列の&lt;/em&gt;違いに注意してください！）。</target>
        </trans-unit>
        <trans-unit id="3b50fc4c34e76646f815d8af1e09897e675ecd19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.End(xlDown)&lt;/code&gt; code from the question will break most easily (e.g. with &lt;strong&gt;a single non-empty cell&lt;/strong&gt; or when there are &lt;strong&gt;blank cells in between&lt;/strong&gt;) for the reasons explained in &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/11169920#11169920&quot;&gt;the answer by Siddharth Rout&lt;/a&gt; here (search for &lt;em&gt;&quot;xlDown is equally unreliable.&quot;&lt;/em&gt;) 👎</source>
          <target state="translated">質問の &lt;code&gt;.End(xlDown)&lt;/code&gt; コードは、ここの&lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/11169920#11169920&quot;&gt;Siddharth Routの回答で&lt;/a&gt;説明されている理由により（たとえば、 &lt;strong&gt;1つの空でないセルがある&lt;/strong&gt;場合、または&lt;strong&gt;間に空白のセル&lt;/strong&gt;がある場合）簡単に壊れます（ &lt;em&gt;&quot;xlDownを&lt;/em&gt;検索して&lt;em&gt;も同じです）信頼できません。」&lt;/em&gt; ）👎</target>
        </trans-unit>
        <trans-unit id="a26aedd1eb16607e0094066e4ae2c18cc5106cd1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Find&lt;/code&gt; method is flawless and I would approve of it as a &lt;em&gt;One Stop Answer&lt;/em&gt;. However the drawback of changing the &lt;code&gt;Find&lt;/code&gt; settings can be annoying, particularly if this is part of a UDF.</source>
          <target state="translated">&lt;code&gt;Find&lt;/code&gt; メソッドは完璧であり、私はそれを&lt;em&gt;ワンストップアンサー&lt;/em&gt;として承認します。 ただし、特にこれがUDFの一部である場合は、 &lt;code&gt;Find&lt;/code&gt; 設定を変更することの欠点が煩わしい場合があります。</target>
        </trans-unit>
        <trans-unit id="39723b7861e7ad153d7df844b5cc34881ce2086c" translate="yes" xml:space="preserve">
          <source>The above fact that Excel 2007+ has &lt;code&gt;1048576&lt;/code&gt; rows also emphasizes on the fact that we should always declare the variable which will hold the row value as &lt;code&gt;Long&lt;/code&gt; instead of &lt;code&gt;Integer&lt;/code&gt; else you will get an &lt;code&gt;Overflow&lt;/code&gt; error.</source>
          <target state="translated">Excel 2007+に &lt;code&gt;1048576&lt;/code&gt; 行があるという上記の事実は、行の値を &lt;code&gt;Integer&lt;/code&gt; ではなく &lt;code&gt;Long&lt;/code&gt; として保持する変数を常に宣言する必要があるという事実を強調します。そうしないと、 &lt;code&gt;Overflow&lt;/code&gt; エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="2b5c6447372efeef5f2d636959b748276ac13418" translate="yes" xml:space="preserve">
          <source>The other answers posted are okay, however the complexity gets a little excessive. Thus here's my attempt to find a balance of reliability, minimal complexity, and not using &lt;code&gt;Find&lt;/code&gt;.</source>
          <target state="translated">投稿された他の回答は問題ありませんが、複雑さが少し過剰になります。 したがって、ここでは、 &lt;code&gt;Find&lt;/code&gt; を使用せずに、信頼性と最小限の複雑さのバランスを見つけるための私の試みを示します。</target>
        </trans-unit>
        <trans-unit id="ae77ce7ef2675dd6c82db5f4487e485862ccc5c1" translate="yes" xml:space="preserve">
          <source>The same principles apply, for example to get the last row in the third column of a table:</source>
          <target state="translated">同じ原理が適用され、例えばテーブルの3番目の列の最後の行を取得することができます。</target>
        </trans-unit>
        <trans-unit id="c9d940ced980c5a4b55a47a5ca6201d1466254e0" translate="yes" xml:space="preserve">
          <source>This essentially returns the same cell that you get by</source>
          <target state="translated">これは、基本的には</target>
        </trans-unit>
        <trans-unit id="ad1d6aff36a2be8a66f05ce26a37c781f6b5baeb" translate="yes" xml:space="preserve">
          <source>This is my encapsulated function that I drop in to various code uses.</source>
          <target state="translated">これは私がカプセル化した関数で、様々なコード用途に落とし込んでいます。</target>
        </trans-unit>
        <trans-unit id="dd320bb0a9951f0c4017c3064c8e27cccf4b37ea" translate="yes" xml:space="preserve">
          <source>This will give you address of last used cell in the column D.</source>
          <target state="translated">これにより、D列の最後に使用されたセルのアドレスが表示されます。</target>
        </trans-unit>
        <trans-unit id="0868b384be11512300924c393237ccab87a0c113" translate="yes" xml:space="preserve">
          <source>To find the &lt;code&gt;Effective&lt;/code&gt; last row in the sheet, use this. Notice the use of &lt;code&gt;Application.WorksheetFunction.CountA(.Cells)&lt;/code&gt;. This is required because if there are no cells with data in the worksheet then &lt;code&gt;.Find&lt;/code&gt; will give you &lt;code&gt;Run Time Error 91: Object Variable or With block variable not set&lt;/code&gt;</source>
          <target state="translated">シートの &lt;code&gt;Effective&lt;/code&gt; 最後の行を見つけるには、これを使用します。 &lt;code&gt;Application.WorksheetFunction.CountA(.Cells)&lt;/code&gt; の使用に注意してください。 ワークシートにデータのあるセルがない場合、 &lt;code&gt;.Find&lt;/code&gt; &lt;code&gt;Run Time Error 91: Object Variable or With block variable not set&lt;/code&gt; ため、これは必須です。</target>
        </trans-unit>
        <trans-unit id="e5b0afdebd4267b399904f45f93594a5fc4da525" translate="yes" xml:space="preserve">
          <source>To find the last Row in Col E use this</source>
          <target state="translated">E列の最後の行を見つけるには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="45e78e7fd93f9c854b02372eec658d7580136284" translate="yes" xml:space="preserve">
          <source>Type something in cell &lt;code&gt;A5&lt;/code&gt;. Now when you calculate the last row with any of the methods given below, it will give you 5. Now color the cell &lt;code&gt;A10&lt;/code&gt; red. If you now use the any of the below code, you will still get 5. If you use &lt;code&gt;Usedrange.Rows.Count&lt;/code&gt; what do you get? It won't be 5.</source>
          <target state="translated">セル &lt;code&gt;A5&lt;/code&gt; に何かを入力します。 以下のいずれかの方法で最後の行を計算すると、5になります。今度は、セル &lt;code&gt;A10&lt;/code&gt; を赤に着色します。 以下のコードのいずれかを使用した場合でも、5を取得します &lt;code&gt;Usedrange.Rows.Count&lt;/code&gt; を使用した場合、何が得られますか？ 5にはなりません。</target>
        </trans-unit>
        <trans-unit id="e39756cd7e3b8016d5ad7545949eb0381ac29d61" translate="yes" xml:space="preserve">
          <source>Used = &quot;... in use, meaning the section that contains &lt;strong&gt;data or formatting&lt;/strong&gt;&quot; &lt;strong&gt;or conditional formatting.&lt;/strong&gt;
Same as 2., but also including cells that are the target for any Conditional Formatting rule.</source>
          <target state="translated">使用済み= &quot;...使用中、つまり&lt;strong&gt;データまたはフォーマット&lt;/strong&gt;を含むセクションを意味します&quot; &lt;strong&gt;または条件付きフォーマット。&lt;/strong&gt; 2.と同じですが、条件付き書式ルールのターゲットであるセルも含まれます。</target>
        </trans-unit>
        <trans-unit id="c73b043a9478c1294805b94a0d62d99e5db55e36" translate="yes" xml:space="preserve">
          <source>Used = &quot;... in use, meaning the section that contains &lt;strong&gt;data or formatting&lt;/strong&gt;.&quot;
&lt;a href=&quot;http://support.microsoft.com/kb/244435&quot;&gt;As per official documentation&lt;/a&gt;, this is the criterion used by Excel at the time of saving. See also &lt;a href=&quot;https://support.office.com/en-sg/article/Locate-and-reset-the-last-cell-on-a-worksheet-c9e468a8-0fc3-4f69-8038-b3c1d86e99e9&quot;&gt;this&lt;/a&gt;.
If one is not aware of this, the criterion may produce unexpected results, but it may also be intentionally exploited (less often, surely), e.g., to highlight or print specific regions, which may eventually have no data.
And, of course, it is desirable as a criterion for the range to use when saving a workbook, lest losing part of one's work.</source>
          <target state="translated">Used = &quot;...使用中、つまり&lt;strong&gt;データまたはフォーマット&lt;/strong&gt;を含むセクションを意味します。&quot; &lt;a href=&quot;http://support.microsoft.com/kb/244435&quot;&gt;公式ドキュメントによると&lt;/a&gt; 、これは保存時にExcelで使用される基準です。 こちらもご覧ください。 これに気付いていない場合、この基準は予期しない結果をもたらす可能性がありますが、意図的に悪用されることもあります（頻度は少なく、確実ではありません）。 そしてもちろん、ワークブックの保存時に使用する範囲の基準として、自分の作業の一部を失わないようにすることが望ましいです。</target>
        </trans-unit>
        <trans-unit id="770acd1a18e575281570d204a4f071fdc9025733" translate="yes" xml:space="preserve">
          <source>Used = non-blank, i.e., having &lt;strong&gt;data&lt;/strong&gt;.</source>
          <target state="translated">使用済み=空白ではない、つまり&lt;strong&gt;データがある&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b03ed7ecdce33d9d4e5fff038a43abf2d5755fa" translate="yes" xml:space="preserve">
          <source>UsedRange</source>
          <target state="translated">UsedRange</target>
        </trans-unit>
        <trans-unit id="3b7d5298d84d7f2a075250ffcbb58cfa904b2444" translate="yes" xml:space="preserve">
          <source>What would happen if there was only one cell (&lt;code&gt;A1&lt;/code&gt;) which had data? You will end up reaching the last row in the worksheet! It's like selecting cell &lt;code&gt;A1&lt;/code&gt; and then pressing</source>
          <target state="translated">データを持つセル（ &lt;code&gt;A1&lt;/code&gt; ）が1つだけの場合はどうなりますか？ ワークシートの最後の行に到達することになります！ セル &lt;code&gt;A1&lt;/code&gt; を選択してから押すようなものです</target>
        </trans-unit>
        <trans-unit id="8e4eee1cecb8f571093d5e8271ca4229a03c87ff" translate="yes" xml:space="preserve">
          <source>Whatever solution you pick, be careful</source>
          <target state="translated">どのような解決策を選ぶにしても、注意が必要です。</target>
        </trans-unit>
        <trans-unit id="32d4802da61ff1edd472676e4d7003b98c192da9" translate="yes" xml:space="preserve">
          <source>When I want to find the last used cell value, I use:</source>
          <target state="translated">最後に使用したセルの値を見つけたいときに使います。</target>
        </trans-unit>
        <trans-unit id="4d0aecadfddadedf6481cb71c476f1120fd3f649" translate="yes" xml:space="preserve">
          <source>Which combination do you want to test for? Some (such as Tables) may be more difficult to test for, and some may be rare (such as a shape outside of data range),  but others may vary based on the situation (e.g., formulas with blank values).</source>
          <target state="translated">どの組み合わせをテストしたいですか?テーブルのような)テストが難しいものもあれば、稀に(データ範囲外の形状など)、状況に応じて変化するもの(空欄の値を持つ数式など)もあります。</target>
        </trans-unit>
        <trans-unit id="adbd129422c4b678f3bdedb790c2193299c442f5" translate="yes" xml:space="preserve">
          <source>Why this is bad:</source>
          <target state="translated">なぜこれが悪いのか。</target>
        </trans-unit>
        <trans-unit id="ae8920fd62ba92fafb2c831c79c2f426b0f331b2" translate="yes" xml:space="preserve">
          <source>Why this is good:</source>
          <target state="translated">なぜこれが良いのか。</target>
        </trans-unit>
        <trans-unit id="95b2e3ee285ce3564835bcb2262962d6353f24a1" translate="yes" xml:space="preserve">
          <source>With that in mind, let's see &lt;strong&gt;how the common ways of getting the &quot;last cell&quot; can produce unexpected results:&lt;/strong&gt;</source>
          <target state="translated">それを念頭に置い&lt;strong&gt;て、「最後のセル」を取得する一般的な方法が予期しない結果&lt;/strong&gt;を&lt;strong&gt;どのように生成できるかを&lt;/strong&gt;見てみましょう&lt;strong&gt;。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="94d152c351a0bba5b18a41bd5b025862499ba1e5" translate="yes" xml:space="preserve">
          <source>With very large sets of data and a massive gap between used range and last row in specified columns, this will perform slower, in rare cases SIGNIFICANTLY slower.</source>
          <target state="translated">非常に大きなデータセットと、指定された列の使用範囲と最後の行との間に大きなギャップがある場合、これは、まれにSIGNIFICANTLYよりも遅く実行されます。</target>
        </trans-unit>
        <trans-unit id="0fd9557e7f7f3f48b52c28134ccfd61202cbb593" translate="yes" xml:space="preserve">
          <source>You have to take care to avoid the standard pitfalls (for details I'll again refer to &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/11169920#11169920&quot;&gt;the answer by Siddharth Rout&lt;/a&gt; here, look for the &lt;em&gt;&quot;Find Last Row in a Column&quot;&lt;/em&gt; section), such as hard-coding the last row (&lt;code&gt;Range(&quot;A65536&quot;).End(xlUp)&lt;/code&gt;) instead of relying on &lt;code&gt;sht.Rows.Count&lt;/code&gt;.</source>
          <target state="translated">最後の行をハードコーディングするなど、標準の落とし穴を回避するよう注意する必要があります（詳細については、ここで&lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/11169920#11169920&quot;&gt;Siddharth Routの回答を&lt;/a&gt;再度参照します。 &lt;em&gt;「列の最後の行を検索」&lt;/em&gt;セクションを参照してください）。 &lt;code&gt;Range(&quot;A65536&quot;).End(xlUp)&lt;/code&gt; ） sht.Rows.Countに依存する代わりに。</target>
        </trans-unit>
        <trans-unit id="9b2548ce4cf8fcd600a558baf2ee38c3a0845783" translate="yes" xml:space="preserve">
          <source>You need to enter the formula without brackets and then hit</source>
          <target state="translated">括弧をつけずに数式を入力してから</target>
        </trans-unit>
        <trans-unit id="416224e917bfafcb31cb6a6879f926a487aa37f3" translate="yes" xml:space="preserve">
          <source>Your code uses the first cell in your range E4:E48 as a trampoline, for &lt;em&gt;jumping&lt;/em&gt; down with &lt;code&gt;End(xlDown)&lt;/code&gt;.</source>
          <target state="translated">コードは、 &lt;code&gt;End(xlDown)&lt;/code&gt; で&lt;em&gt;ジャンプ&lt;/em&gt;するために、範囲E4：E48の最初のセルをトランポリンとして使用します。</target>
        </trans-unit>
        <trans-unit id="02da95b16cfc29601e238d51a97824fa71108e37" translate="yes" xml:space="preserve">
          <source>[...] one has first to decide what is considered used. I see at least 6 meanings. Cell has:</source>
          <target state="translated">何が使われていると考えられるかを決めるのが先決です。私は少なくとも6つの意味を見ています。細胞には</target>
        </trans-unit>
        <trans-unit id="9772fe894d76707f71a063b470d68e33c13c74cf" translate="yes" xml:space="preserve">
          <source>after selecting Cell &lt;strong&gt;&lt;code&gt;A1&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">セル&lt;strong&gt; &lt;code&gt;A1&lt;/code&gt; &lt;/strong&gt;を選択した後。</target>
        </trans-unit>
        <trans-unit id="10d48792407e5589a547c8fa8c77691fec176d60" translate="yes" xml:space="preserve">
          <source>and how to check this for yourself:</source>
          <target state="translated">と自分で確認する方法をご紹介します。</target>
        </trans-unit>
        <trans-unit id="f1894fd7f4349fc31d34edc811e424f53b327565" translate="yes" xml:space="preserve">
          <source>is the last cell in the Column A this code was tested on excel 2003.</source>
          <target state="translated">はA列の最後のセルで、このコードはエクセル2003でテストされました。</target>
        </trans-unit>
        <trans-unit id="033d78ec686b9eef1a21bbff4e29e2d98e91362a" translate="yes" xml:space="preserve">
          <source>key and then pressing</source>
          <target state="translated">キーを押して</target>
        </trans-unit>
        <trans-unit id="edfdd1b3986bdc49994b153ba1b40f10cb375e80" translate="yes" xml:space="preserve">
          <source>key. This will also give you unreliable results if there are blank cells in a range.</source>
          <target state="translated">キーを押してください。また、範囲内に空白のセルがある場合にも信頼性の低い結果が得られます。</target>
        </trans-unit>
        <trans-unit id="2711dad7c8c7eaa9db81b073162f318f81561c17" translate="yes" xml:space="preserve">
          <source>to always specify the worksheet you're working with (i.e. &lt;code&gt;Dim ws As Worksheet ... ws.Range(...)&lt;/code&gt; instead of &lt;code&gt;Range(...)&lt;/code&gt;)</source>
          <target state="translated">常に作業しているワークシートを指定する（つまり、 &lt;code&gt;Dim ws As Worksheet ... ws.Range(...)&lt;/code&gt; ではなく &lt;code&gt;Range(...)&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="84df93fd756105898932e30a4fbcb5a8a272af2e" translate="yes" xml:space="preserve">
          <source>to make it an array formula.</source>
          <target state="translated">を使って配列式にしてみました。</target>
        </trans-unit>
        <trans-unit id="5c43d5be7c2782582d5c9c0ad55b7f9458c04f4d" translate="yes" xml:space="preserve">
          <source>to use &lt;code&gt;Long&lt;/code&gt; instead of &lt;code&gt;Integer&lt;/code&gt; to store the row numbers (to avoid getting &lt;code&gt;Overflow&lt;/code&gt; with more than 65k rows) and</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; の代わりに &lt;code&gt;Long&lt;/code&gt; を使用して行番号を格納する（65k行を超える &lt;code&gt;Overflow&lt;/code&gt; を回避するため）</target>
        </trans-unit>
        <trans-unit id="32de2c5614e1a0e638ed265beff9df41f4cdf51a" translate="yes" xml:space="preserve">
          <source>when using &lt;code&gt;.Value&lt;/code&gt; (which is a &lt;code&gt;Variant&lt;/code&gt;) avoid implicit casts like &lt;code&gt;.Value &amp;lt;&amp;gt; &quot;&quot;&lt;/code&gt; as they will fail if the cell contains an error value.</source>
          <target state="translated">&lt;code&gt;.Value&lt;/code&gt; （ &lt;code&gt;Variant&lt;/code&gt; ）を使用する場合は、セルにエラー値が含まれていると失敗するため、 &lt;code&gt;.Value &amp;lt;&amp;gt; &quot;&quot;&lt;/code&gt; ような暗黙のキャストを避けてください。</target>
        </trans-unit>
        <trans-unit id="464c1ebf7c020624d9cedec9e2d19443f457627b" translate="yes" xml:space="preserve">
          <source>will go to a wrong cell prior to saving
(&amp;ldquo;The last cell is not reset until you save the worksheet&amp;rdquo;, from
&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa139976%28v=office.10%29.aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/aa139976%28v=office.10%29.aspx&lt;/a&gt;.
It is an old reference, but in this respect valid).</source>
          <target state="translated">保存する前に間違ったセルに移動します（「最後のセルはワークシートを保存するまでリセットされません」、 &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa139976%28v=office.10%29.aspx&quot;&gt;http：//msdn.microsoft.com/en-us/library/aa139976%28v=office.10%29&lt;/a&gt;から.aspx 。これは古い参照ですが、この点では有効です）。</target>
        </trans-unit>
        <trans-unit id="0c0e6b95bf4a0890c97ea0fd46e65948e08815ea" translate="yes" xml:space="preserve">
          <source>will still take you to &lt;strong&gt;H8&lt;/strong&gt; cell. The above function will have the same behavior.</source>
          <target state="translated">&lt;strong&gt;H8&lt;/strong&gt;セルに移動します。 上記の関数は同じ動作をします。</target>
        </trans-unit>
        <trans-unit id="b3af845fb4a2bcfcf52cdfcf7566199ca809de73" translate="yes" xml:space="preserve">
          <source>xlDown</source>
          <target state="translated">xlDown</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
