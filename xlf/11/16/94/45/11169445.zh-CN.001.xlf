<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/11169445">
    <body>
      <group id="11169445">
        <trans-unit id="a979ef10cc6f6a36df6b8a323307ee3bb2e2db9c" translate="yes" xml:space="preserve">
          <source>+</source>
          <target state="translated">+</target>
        </trans-unit>
        <trans-unit id="e16d87c9f88437121301492ad691068ef35ff709" translate="yes" xml:space="preserve">
          <source>, so dotNET solution is great, except with my Excel 2010 I need to add a &lt;code&gt;set&lt;/code&gt; if I want to avoid an error:</source>
          <target state="translated">，因此dotNET解决方案很棒，除了Excel 2010外，如果要避免错误，我需要添加一个 &lt;code&gt;set&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="42c5c71f91129e276544cd59f430e6e26d5657e0" translate="yes" xml:space="preserve">
          <source>.
In the figure, the last cell is B3, since formatting was applied explicitly to it. Cells B6:D7 have a format derived from a Conditional Formatting rule, and this is not detected even by &lt;code&gt;UsedRange&lt;/code&gt;.
Accounting for this would require some VBA programming.</source>
          <target state="translated">。 在图中，最后一个单元格是B3，因为格式化已明确应用于该单元格。 单元格B6：D7具有从条件格式设置规则派生的格式，即使 &lt;code&gt;UsedRange&lt;/code&gt; 也无法检测到该格式。 为此，需要进行一些VBA编程。</target>
        </trans-unit>
        <trans-unit id="90279fc1b099cf71dadcf777892f14454e06cd77" translate="yes" xml:space="preserve">
          <source>... is to ensure that your &lt;code&gt;LastRow&lt;/code&gt; variable is of &lt;code&gt;Long&lt;/code&gt; type:</source>
          <target state="translated">...是为了确保您的 &lt;code&gt;LastRow&lt;/code&gt; 变量为 &lt;code&gt;Long&lt;/code&gt; 类型：</target>
        </trans-unit>
        <trans-unit id="50171d450d3ba1f16aa205436c4e719c3a4e7ce4" translate="yes" xml:space="preserve">
          <source>1) data, i.e., a formula, possibly resulting in a blank value;</source>
          <target state="translated">1)数据,也就是公式,可能会产生一个空白值。</target>
        </trans-unit>
        <trans-unit id="1ebb318f8cf81fa4bc124e61c2ff72bd8a788344" translate="yes" xml:space="preserve">
          <source>2) a value, i.e., a non-blank formula or constant;</source>
          <target state="translated">2)一个值,即非空白公式或常数。</target>
        </trans-unit>
        <trans-unit id="22b6e992d021264c705372cb44d69f5e7fe1e344" translate="yes" xml:space="preserve">
          <source>3) formatting;</source>
          <target state="translated">3)格式化。</target>
        </trans-unit>
        <trans-unit id="13129d27f1cb0260621fdbd39f0c1e6747eed88a" translate="yes" xml:space="preserve">
          <source>4) conditional formatting;</source>
          <target state="translated">4)有条件的格式化。</target>
        </trans-unit>
        <trans-unit id="457a3a02ee9880ed0a789f8eeb81ef1e2d884288" translate="yes" xml:space="preserve">
          <source>5) a shape (including Comment) overlapping the cell;</source>
          <target state="translated">5)与单元格重叠的形状(包括注释)。</target>
        </trans-unit>
        <trans-unit id="5540618320c7d6c2d925bb4b28fe63945d7c6594" translate="yes" xml:space="preserve">
          <source>6) involvement in a Table (List Object).</source>
          <target state="translated">6)参与一个表(列表对象)。</target>
        </trans-unit>
        <trans-unit id="22b1ba405ab214fc1f34064ef18723d3ae1dd8b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.Find&lt;/code&gt; allows you to find the last row with any data (including formulas) or a non-blank value &lt;strong&gt;in any column&lt;/strong&gt;. You can choose whether you're interested in formulas or values, but the catch is that it &lt;strong&gt;resets the defaults in the Excel's Find dialog&lt;/strong&gt; ️️⚠️, which can be highly confusing to your users. It also needs to be used carefully, see &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/11169920#11169920&quot;&gt;the answer by Siddharth Rout&lt;/a&gt; here (section &lt;em&gt;&quot;Find Last Row in a Sheet&quot;&lt;/em&gt;)</source>
          <target state="translated">&lt;code&gt;.Find&lt;/code&gt; 允许您&lt;strong&gt;在任何列中&lt;/strong&gt;找到包含任何数据（包括公式）或非空白值的最后一行。 您可以选择对公式还是值感兴趣，但要注意的是它会&lt;strong&gt;重置Excel的&amp;ldquo;查找&amp;rdquo;对话框中的默认值&lt;/strong&gt; ️️⚠️，这可能会使用户感到困惑。 还需要仔细使用它，请&lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/11169920#11169920&quot;&gt;在&lt;/a&gt;此处查看Siddharth Rout的答案 （ &lt;em&gt;&amp;ldquo;在工作表中查找最后一行&amp;rdquo;部分&lt;/em&gt; ）</target>
        </trans-unit>
        <trans-unit id="082c164e2a49a85097288c48424ae3ad12b139fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.SpecialCells(xlLastCell)&lt;/code&gt; is equivalent to CTRL+END, returning the bottom-most and right-most cell of the &quot;used range&quot;, so all caveats that apply to relying on the &quot;used range&quot;, apply to this method as well. In addition, the &quot;used range&quot; is only reset when saving the workbook and when accessing &lt;code&gt;worksheet.UsedRange&lt;/code&gt;, so &lt;code&gt;xlLastCell&lt;/code&gt; might produce stale results⚠️ with unsaved modifications (e.g. after some rows were deleted). See the &lt;a href=&quot;https://stackoverflow.com/a/29899739/1026&quot;&gt;nearby answer by dotNET&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.SpecialCells(xlLastCell)&lt;/code&gt; 等效于CTRL + END，返回&amp;ldquo;使用范围&amp;rdquo;的最底部和最右侧的单元格，因此所有依赖于&amp;ldquo;使用范围&amp;rdquo;的警告也适用于此方法。 另外，&amp;ldquo;使用范围&amp;rdquo;仅在保存工作簿和访问 &lt;code&gt;worksheet.UsedRange&lt;/code&gt; 时使用 &lt;code&gt;xlLastCell&lt;/code&gt; ，因此xlLastCell可能会产生未保存修改的陈旧结果⚠️（例如，删除了某些行之后）。 请&lt;a href=&quot;https://stackoverflow.com/a/29899739/1026&quot;&gt;通过dotNET&lt;/a&gt;查看附近的答案 。</target>
        </trans-unit>
        <trans-unit id="c8d5c80654f41fb18aa065da52dfc4068b45ba28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CountA&lt;/code&gt; is also unreliable because it will give you incorrect result if there are blank cells in between.</source>
          <target state="translated">&lt;code&gt;CountA&lt;/code&gt; 也不可靠，因为如果中间有空白单元格，它将给您不正确的结果。</target>
        </trans-unit>
        <trans-unit id="3472237bbea1c727f19b1ed7a6e0f62a9da12855" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UsedRange&lt;/code&gt; should &lt;strong&gt;NEVER&lt;/strong&gt; be used to find the last cell which has data. It is highly unreliable. Try this experiment.</source>
          <target state="translated">&lt;code&gt;UsedRange&lt;/code&gt; 绝不能用于查找包含数据的最后一个单元格。 这是非常不可靠的。 试试这个实验。</target>
        </trans-unit>
        <trans-unit id="e1ff96b8d2bf45246034678efa083835144145a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sht.UsedRange&lt;/code&gt; (described in detail in &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/27637752#27637752&quot;&gt;the answer by sancho.s&lt;/a&gt; here) considers &lt;strong&gt;both data and formatting&lt;/strong&gt; (though not conditional formatting) and &lt;strong&gt;resets the &quot;used range&quot; of the worksheet&lt;/strong&gt;, which may or may not be what you want.</source>
          <target state="translated">&lt;code&gt;sht.UsedRange&lt;/code&gt; （在sancho.s &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/27637752#27637752&quot;&gt;的答案&lt;/a&gt;中有详细说明），同时考虑&lt;strong&gt;了数据和格式&lt;/strong&gt; （虽然不是条件格式），并&lt;strong&gt;重置了工作表的&amp;ldquo;使用范围&amp;rdquo;&lt;/strong&gt; ，这可能是您想要的，也可能不是。</target>
        </trans-unit>
        <trans-unit id="964c5fb14c411a677b9e0813b3666d3f612e29a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xlDown&lt;/code&gt; is equally unreliable.</source>
          <target state="translated">&lt;code&gt;xlDown&lt;/code&gt; 同样不可靠。</target>
        </trans-unit>
        <trans-unit id="947ab43f26a459cc5b04a32b7660e6bd290fa55d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;For criterion 1, I suggest reading &lt;a href=&quot;https://stackoverflow.com/a/11169920/2707864&quot;&gt;this answer&lt;/a&gt;&lt;/em&gt;.
Note that &lt;code&gt;UsedRange&lt;/code&gt; is cited as unreliable. I think that is misleading (i.e., &quot;unfair&quot; to &lt;code&gt;UsedRange&lt;/code&gt;), as &lt;code&gt;UsedRange&lt;/code&gt; is simply not meant to report the last cell containing data. So it should not be used in this case, as indicated in that answer. See also &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/27637752#comment43694683_11169920&quot;&gt;this comment&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;对于标准1，建议阅读&lt;a href=&quot;https://stackoverflow.com/a/11169920/2707864&quot;&gt;此答案&lt;/a&gt;&lt;/em&gt; 。 请注意， &lt;code&gt;UsedRange&lt;/code&gt; 被引用为不可靠的。 我认为这具有误导性（即，对 &lt;code&gt;UsedRange&lt;/code&gt; &amp;ldquo;不公平&amp;rdquo;），因为 &lt;code&gt;UsedRange&lt;/code&gt; 并不是要报告包含数据的最后一个单元格。 因此，如该答案所示，不应在这种情况下使用它。 另请参阅&lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/27637752#comment43694683_11169920&quot;&gt;此评论&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="2eb186b9850bae47c4f94b3b7fa572afa7fb07b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;For criterion 2, &lt;code&gt;UsedRange&lt;/code&gt; is the most reliable option&lt;/em&gt;, as compared to other options also designed for this use. It even makes it unnecessary to save a workbook to make sure that the last cell is updated.</source>
          <target state="translated">&lt;em&gt;对于条件2，&lt;/em&gt;与也为此用途设计的其他选项相比&lt;em&gt;， &lt;code&gt;UsedRange&lt;/code&gt; 是最可靠的选项&lt;/em&gt; 。 甚至没有必要保存工作簿以确保更新了最后一个单元格。</target>
        </trans-unit>
        <trans-unit id="23265a10b14eacd402cd349318fcaebce9469d2d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;For criterion 3, I do not know any built-in method&lt;/em&gt;.
Criterion 2 does not account for Conditional Formatting. One may have formatted cells, based on formulas, which are not detected by &lt;code&gt;UsedRange&lt;/code&gt; or</source>
          <target state="translated">&lt;em&gt;对于条件3，我不知道任何内置方法&lt;/em&gt; 。 条件2不考虑条件格式。 根据公式，可能有一个已格式化的单元格， &lt;code&gt;UsedRange&lt;/code&gt; 或</target>
        </trans-unit>
        <trans-unit id="2986b1e12f783945988e88275b90d0b1ef85d14c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;As to the correct way of finding the last used cell, one has first to decide what is considered &lt;em&gt;used&lt;/em&gt;, and then select a suitable method&lt;/strong&gt;. I conceive at least three meanings:</source>
          <target state="translated">&lt;strong&gt;关于找到最后使用的小区的正确方法，首先必须确定认为&lt;em&gt;使用了&lt;/em&gt;什么，然后选择一种合适的方法&lt;/strong&gt; 。 我至少想到了三种含义：</target>
        </trans-unit>
        <trans-unit id="0609fe1265b301d24a84a9b84f24be5bd931b8b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;As to your specific question&lt;/strong&gt;:
&lt;em&gt;What's the reason behind this?&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;关于您的具体问题&lt;/strong&gt; ： &lt;em&gt;这是什么原因？&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ba5488062d51a5419c8387f16743e8e32aa123f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How to find the last used cell depends on what &lt;em&gt;you&lt;/em&gt; want (your criterion)&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;如何找到最后使用的电池取决于&lt;em&gt;您的&lt;/em&gt;需求（您的标准）&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3eb2400d177caf81b9af5b98f6842cf9ae2dd38" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: I intend to make this a &quot;one stop post&quot; where you can use the &lt;code&gt;Correct&lt;/code&gt; way to find the last row. This will also cover the best practices to follow when finding the last row. And hence I will keep on updating it whenever I come across a new scenario/information.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt; ：我打算将其设置为&amp;ldquo;一站式发布&amp;rdquo;，您可以在其中使用&amp;ldquo; &lt;code&gt;Correct&lt;/code&gt; 方法查找最后一行。 这还将涵盖查找最后一行时遵循的最佳实践。 因此，每当遇到新的场景/信息时，我都会继续进行更新。</target>
        </trans-unit>
        <trans-unit id="f8f8e92323045e0f09274cfc00622f82167d21bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: this answer was motivated by &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-excel-with-vba/27637752#comment43694683_11169920&quot;&gt;this comment&lt;/a&gt;. The purpose of &lt;code&gt;UsedRange&lt;/code&gt; is different from what is mentioned in the answer above.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意：此答案&lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-excel-with-vba/27637752#comment43694683_11169920&quot;&gt;受此评论的&lt;/a&gt;激励。&lt;/strong&gt; &lt;strong&gt; &lt;code&gt;UsedRange&lt;/code&gt; 的目的不同于上面答案中提到的目的。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e934e5f6d1ba2799c583ac44b8d46e134b3c925" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unreliable ways of finding the last row&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;寻找最后一行的不可靠方法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="228349b401590ce1e1379b02938d4cb36cae4b6d" translate="yes" xml:space="preserve">
          <source>A solution involving &lt;code&gt;.End(xlUp)&lt;/code&gt; to search backwards from the end of a column will, just as CTRL+UP, look for &lt;strong&gt;data&lt;/strong&gt; (formulas producing a blank value are considered &quot;data&quot;) in &lt;strong&gt;visible rows&lt;/strong&gt; (so using it with autofilter enabled might produce incorrect results ⚠️).</source>
          <target state="translated">与CTRL + UP一样，一个涉及到 &lt;code&gt;.End(xlUp)&lt;/code&gt; 的从列末尾向后搜索的解决方案将在&lt;strong&gt;可见行中&lt;/strong&gt;查找&lt;strong&gt;数据&lt;/strong&gt; （将产生空白值的公式视为&amp;ldquo;数据&amp;rdquo;）（因此在启用了自动筛选的情况下使用它可能会产生错误的结果（⚠️）。</target>
        </trans-unit>
        <trans-unit id="afdcdb759cf0c6e0ebe96335036114a9a51951b2" translate="yes" xml:space="preserve">
          <source>A word of caution: Excel keeps track of the most bottom-right cell that was ever used in a worksheet. So if for example you enter something in &lt;strong&gt;B3&lt;/strong&gt; and something else in &lt;strong&gt;H8&lt;/strong&gt; and then later on delete the contents of &lt;strong&gt;H8&lt;/strong&gt;, pressing</source>
          <target state="translated">请注意：Excel会跟踪工作表中曾经使用过的最右下角的单元格。 因此，例如，如果您在&lt;strong&gt;B3中&lt;/strong&gt;输入某些内容，在&lt;strong&gt;H8中&lt;/strong&gt;输入其他内容，然后稍后删除&lt;strong&gt;H8&lt;/strong&gt;的内容，请按</target>
        </trans-unit>
        <trans-unit id="89e1ad7a70a4655c7cccc84bd881246d8668f6d8" translate="yes" xml:space="preserve">
          <source>A) Can there be &lt;em&gt;hidden rows&lt;/em&gt; (e.g. autofilter), &lt;em&gt;blank cells&lt;/em&gt; or blank rows?</source>
          <target state="translated">A）可以有&lt;em&gt;隐藏行&lt;/em&gt; （例如自动筛选器）， &lt;em&gt;空白单元格&lt;/em&gt;或空白行吗？</target>
        </trans-unit>
        <trans-unit id="b44b2d59b62d239c1176824bb02a78274e5ca96e" translate="yes" xml:space="preserve">
          <source>A65536</source>
          <target state="translated">A65536</target>
        </trans-unit>
        <trans-unit id="07a1c590cf7fc5eee7f69dfa2212e40bddcf4b42" translate="yes" xml:space="preserve">
          <source>Allows for multiple columns.</source>
          <target state="translated">允许多列。</target>
        </trans-unit>
        <trans-unit id="a3f1186d89280629d62897d2eb8ade9c50380eeb" translate="yes" xml:space="preserve">
          <source>Also, I would have my version of any LastRow procedure return a zero for a blank worksheet, then I can know it is blank.</source>
          <target state="translated">另外,我会让我的版本的任何LastRow存储过程返回一个空白工作表的零,然后我可以知道它是空白的。</target>
        </trans-unit>
        <trans-unit id="d2ad2c56384b97cb10dc27dd7acc803edc8c3d14" translate="yes" xml:space="preserve">
          <source>And hence one should avoid the use of &lt;code&gt;UsedRange&lt;/code&gt;, &lt;code&gt;xlDown&lt;/code&gt; and &lt;code&gt;CountA&lt;/code&gt; to find the last cell.</source>
          <target state="translated">因此，应该避免使用 &lt;code&gt;UsedRange&lt;/code&gt; ， &lt;code&gt;xlDown&lt;/code&gt; 和 &lt;code&gt;CountA&lt;/code&gt; 查找最后一个单元格。</target>
        </trans-unit>
        <trans-unit id="90de0bc63e7f1d8f63b37f112d99e749d3824960" translate="yes" xml:space="preserve">
          <source>Any solution based on &lt;code&gt;Count&lt;/code&gt;ing (&lt;code&gt;CountA&lt;/code&gt; or &lt;code&gt;Cells*.Count&lt;/code&gt;) or &lt;code&gt;.CurrentRegion&lt;/code&gt; will also break in presence of blank cells or rows 👎</source>
          <target state="translated">任何基于 &lt;code&gt;Count&lt;/code&gt; （ &lt;code&gt;CountA&lt;/code&gt; 或 &lt;code&gt;Cells*.Count&lt;/code&gt; ）或 &lt;code&gt;.CurrentRegion&lt;/code&gt; 的解决方案也会在存在空白单元格或行break时中断。</target>
        </trans-unit>
        <trans-unit id="827b15a547418cd461276f8e34806f2cb8bcc457" translate="yes" xml:space="preserve">
          <source>B) What kind of performance is acceptable?</source>
          <target state="translated">B)什么样的表现是可以接受的?</target>
        </trans-unit>
        <trans-unit id="399cfddfc99d4c04e7ead04644adabb2913ab2e6" translate="yes" xml:space="preserve">
          <source>C) Can the VBA macro affect the workbook or the application settings in any way?</source>
          <target state="translated">C)VBA宏能以任何方式影响工作簿或应用程序的设置吗?</target>
        </trans-unit>
        <trans-unit id="b38bed0f0e9601a07358ec72777da31f91720f2a" translate="yes" xml:space="preserve">
          <source>CTRL</source>
          <target state="translated">CTRL</target>
        </trans-unit>
        <trans-unit id="67a19b1bc7ddad4d1497ab55d5007648d46c8730" translate="yes" xml:space="preserve">
          <source>Consider this code</source>
          <target state="translated">考虑一下这个代码</target>
        </trans-unit>
        <trans-unit id="c2fa758266b2393030e2e79e17d4de889eb6f9b9" translate="yes" xml:space="preserve">
          <source>CountA</source>
          <target state="translated">CountA</target>
        </trans-unit>
        <trans-unit id="dd6a02a553da4cb247f914011dd67c37487ec082" translate="yes" xml:space="preserve">
          <source>Ctrl</source>
          <target state="translated">Ctrl</target>
        </trans-unit>
        <trans-unit id="ef978457620a85de6cfe4a42cbf3fcd777f0aadd" translate="yes" xml:space="preserve">
          <source>Doesn't modify &lt;code&gt;Find&lt;/code&gt; settings</source>
          <target state="translated">不修改 &lt;code&gt;Find&lt;/code&gt; 设置</target>
        </trans-unit>
        <trans-unit id="f45f0a3752ff13d006a65f09a4643e63c1237391" translate="yes" xml:space="preserve">
          <source>Down Arrow</source>
          <target state="translated">下箭</target>
        </trans-unit>
        <trans-unit id="ded8a062beb3dfd80c08fb77e6ed233232f5f6f7" translate="yes" xml:space="preserve">
          <source>Dynamic if used as a UDF with the entire column selected.</source>
          <target state="translated">如果选择了整个列作为UDF使用,则是动态的。</target>
        </trans-unit>
        <trans-unit id="a2bb9d34b8a1a79665858d354585cf147e0dee4e" translate="yes" xml:space="preserve">
          <source>End</source>
          <target state="translated">End</target>
        </trans-unit>
        <trans-unit id="2b9eceb7a86a9f577ef80586c5c1d7fde9ff493d" translate="yes" xml:space="preserve">
          <source>Enter</source>
          <target state="translated">Enter</target>
        </trans-unit>
        <trans-unit id="8c779217d385497ba00923f05a4251995de90c9d" translate="yes" xml:space="preserve">
          <source>Error in finding last used cell in Excel with VBA</source>
          <target state="translated">在Excel中使用VBA查找最后一个使用过的单元格时出现错误</target>
        </trans-unit>
        <trans-unit id="d828785426216820d97931d2e3e0d2b7815bb6ac" translate="yes" xml:space="preserve">
          <source>Find Last Row in a Column</source>
          <target state="translated">查找列中的最后一行</target>
        </trans-unit>
        <trans-unit id="47b91153781234c92589a0056245907807660af4" translate="yes" xml:space="preserve">
          <source>Find Last Row in a Sheet</source>
          <target state="translated">查找工作表中的最后一行</target>
        </trans-unit>
        <trans-unit id="1aac4178e77a57e13dfe9bb8135895e704efd322" translate="yes" xml:space="preserve">
          <source>Find Last Row in a Table (ListObject)</source>
          <target state="translated">查找表中的最后一行 (ListObject)</target>
        </trans-unit>
        <trans-unit id="f37e39003a54f93edb9babc69566c14fcdbc8707" translate="yes" xml:space="preserve">
          <source>For more detailed results, some lines in the code can be uncommented:</source>
          <target state="translated">更详细的结果,代码中的一些行可以不加注释。</target>
        </trans-unit>
        <trans-unit id="fc05091b11cf96b9437722b41fd14d850655b350" translate="yes" xml:space="preserve">
          <source>For the case of the OP, this is the way to get the last row in column &lt;code&gt;E&lt;/code&gt;:</source>
          <target state="translated">对于OP，这是获取列 &lt;code&gt;E&lt;/code&gt; 中最后一行的方法：</target>
        </trans-unit>
        <trans-unit id="b72984bea83b8b6e6ab6c3dea0afcc7bb792ac52" translate="yes" xml:space="preserve">
          <source>For the last 3+ years these are the functions that I am using for finding last row and last column per defined column(for row) and row(for column):</source>
          <target state="translated">在过去的3年多的时间里,这些是我用这些函数来寻找最后一行和最后一列,每定义一列(for row)和一列(for column)。</target>
        </trans-unit>
        <trans-unit id="0070a6d45299b17e29d08c598e6fbde9b6876494" translate="yes" xml:space="preserve">
          <source>Here is a scenario to show how &lt;code&gt;UsedRange&lt;/code&gt; works.</source>
          <target state="translated">这是一个显示 &lt;code&gt;UsedRange&lt;/code&gt; 如何工作的方案。</target>
        </trans-unit>
        <trans-unit id="e36a22e2b2de344373d0f2c50a9a46edb4974cc4" translate="yes" xml:space="preserve">
          <source>Here we may use the &lt;a href=&quot;https://www.vitoshacademy.com/last-used-row-last-used-column-in-excel-with-formula-without-vba/&quot;&gt;well-known Excel formulas&lt;/a&gt;, which give us the last row of a worksheet in Excel, without involving VBA - &lt;code&gt;=IFERROR(LOOKUP(2,1/(NOT(ISBLANK(A:A))),ROW(A:A)),0)&lt;/code&gt;</source>
          <target state="translated">在这里，我们可以使用&lt;a href=&quot;https://www.vitoshacademy.com/last-used-row-last-used-column-in-excel-with-formula-without-vba/&quot;&gt;众所周知的Excel公式&lt;/a&gt; ，该公式为我们提供Excel中工作表的最后一行，而无需使用VBA- &lt;code&gt;=IFERROR(LOOKUP(2,1/(NOT(ISBLANK(A:A))),ROW(A:A)),0)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f6a079383f4dba363d70604d44c63a58521b8cb" translate="yes" xml:space="preserve">
          <source>Here's my two cents.</source>
          <target state="translated">这是我的两分钱。</target>
        </trans-unit>
        <trans-unit id="3d080817ae211b70ffb8548327b1435f255163a6" translate="yes" xml:space="preserve">
          <source>Here,</source>
          <target state="translated">Here,</target>
        </trans-unit>
        <trans-unit id="4bea76e440600f11e5f34c9f0389bf22e2e8792a" translate="yes" xml:space="preserve">
          <source>However this question is seeking to find the last row using VBA, I think it would be good to include an array formula for worksheet function  as this gets visited frequently:</source>
          <target state="translated">但是这个问题是想用VBA找到最后一行,我想如果能在工作表函数中加入一个数组公式就好了,因为这个问题经常被访问。</target>
        </trans-unit>
        <trans-unit id="f13bd32d23890f2434e793f56588181444c348db" translate="yes" xml:space="preserve">
          <source>However, I think a One-Stop-Solution that has a drawback of messing up &lt;code&gt;find&lt;/code&gt; settings or performing slower is a better overall solution. A user can then tinker with their settings to try to improve, knowing what's going on with their code. Using &lt;code&gt;xLUp&lt;/code&gt; will not warn of the potential risks and they could carry on for who knows how long not knowing their code was not working correctly.</source>
          <target state="translated">但是，我认为一站式解决方案具有搞乱 &lt;code&gt;find&lt;/code&gt; 设置或执行速度较慢的缺点，是更好的整体解决方案。 然后，用户可以知道自己的代码发生了什么，便修改自己的设置以尝试改进。 使用 &lt;code&gt;xLUp&lt;/code&gt; 不会警告潜在的风险，他们可以继续为知道不知道自己的代码无法正常工作的人提供帮助。</target>
        </trans-unit>
        <trans-unit id="c52594d431c168ee54a1d96692b39b0702315cfe" translate="yes" xml:space="preserve">
          <source>I am getting the wrong output when I put a single element into a cell. But when I put more than one value into the cell, the output is correct. 
What's the reason behind this?</source>
          <target state="translated">当我在单元格中放入一个元素时,我得到的输出是错误的。但当我把一个以上的值放入单元格时,输出是正确的。这背后的原因是什么?</target>
        </trans-unit>
        <trans-unit id="6523024c774fc2a7d10ec902c27368453dac2f33" translate="yes" xml:space="preserve">
          <source>I created this one-stop function for &lt;strong&gt;determining the last row, column and cell, be it for data, formatted (grouped/commented/hidden) cells or conditional formatting&lt;/strong&gt;.</source>
          <target state="translated">我创建了此一站式函数，用于&lt;strong&gt;确定最后一行，最后一行和最后一个单元格，无论是用于数据，格式化（分组/注释/隐藏）单元格还是条件格式化&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="95d9e7af9942c08e5cac8ecf6c143dc46eba6676" translate="yes" xml:space="preserve">
          <source>I was looking for a way to mimic the</source>
          <target state="translated">我在寻找一种模仿的方法</target>
        </trans-unit>
        <trans-unit id="37cf14ef562c3dab74ac5c6254fc06e883e832b2" translate="yes" xml:space="preserve">
          <source>I wonder that nobody has mentioned this, But the easiest way of getting the last used cell is:</source>
          <target state="translated">不知道大家有没有提到过这一点,但最简单的方法是,最后一个用过的电池是。</target>
        </trans-unit>
        <trans-unit id="809f1b508291d3f3abaebdd164acc7a0b05e33ce" translate="yes" xml:space="preserve">
          <source>I would add to the answer given by Siddarth Rout to say that the CountA call can be skipped by having Find return a Range object, instead of a row number, and then test the returned Range object to see if it is Nothing (blank worksheet).</source>
          <target state="translated">我想补充一下Siddarth Rout给出的答案,让Find返回一个Range对象,而不是一个行号,然后测试返回的Range对象是否为Nothing(空白工作表),就可以跳过CountA调用。</target>
        </trans-unit>
        <trans-unit id="78c9399f278537d0426d28ca23e6006181df79f2" translate="yes" xml:space="preserve">
          <source>I'll start by expanding on &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/27637752#27637752&quot;&gt;the answer by sancho.s&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba#comment73816621_27637752&quot;&gt;the comment by GlennFromIowa&lt;/a&gt;, adding even more detail:</source>
          <target state="translated">我将首先扩展&lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/27637752#27637752&quot;&gt;sancho.s的答案和GlennFromIowa&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba#comment73816621_27637752&quot;&gt;的评论&lt;/a&gt; ，并添加更多细节：</target>
        </trans-unit>
        <trans-unit id="2863802b60ac22e7a0951a4bd75b913a8fa0507a" translate="yes" xml:space="preserve">
          <source>IMHO the risk of a hidden row with data being excluded is too significant to let &lt;code&gt;xlUp&lt;/code&gt; be considered a &lt;em&gt;One stop answer&lt;/em&gt;. I agree it's simple and will work MOST of the time, but it presents the risk of understating the last row, without any warning. This could produce &lt;em&gt;CATASTROPHIC&lt;/em&gt; results at some poinit for someone who jumped on Stack Overlow and was looking to &quot;sure way&quot; to capture this value.</source>
          <target state="translated">恕我直言，隐藏行被排除数据的风险太大，以至于无法将 &lt;code&gt;xlUp&lt;/code&gt; 视为&lt;em&gt;一站式答案&lt;/em&gt; 。 我同意这很简单，并且在大多数情况下都可以使用，但存在低估最后一行的风险，而不会发出任何警告。 对于跳入Stack Overlow并希望&amp;ldquo;确定方式&amp;rdquo;捕获此值的某人，这可能会在某种程度上产生CATASTROPHIC结果。</target>
        </trans-unit>
        <trans-unit id="39debfacccf8e0cd0bf192711a73baed3a4c79e4" translate="yes" xml:space="preserve">
          <source>If there is only one non-blank cell, but it is not the first one, your code will still give you the correct result.</source>
          <target state="translated">如果只有一个非空白单元格,但它不是第一个,你的代码仍然会给你正确的结果。</target>
        </trans-unit>
        <trans-unit id="c8abf3c1d7f351d85ae62f63a007b4aa2b63de0d" translate="yes" xml:space="preserve">
          <source>If you notice that we have a &lt;code&gt;.&lt;/code&gt; before &lt;code&gt;Rows.Count&lt;/code&gt;. We often chose to ignore that. See &lt;a href=&quot;https://stackoverflow.com/questions/19985345/vba-excel-compability-mode#comment29753337_19985345&quot;&gt;THIS&lt;/a&gt; question on the possible error that you may get. I always advise using &lt;code&gt;.&lt;/code&gt; before &lt;code&gt;Rows.Count&lt;/code&gt; and &lt;code&gt;Columns.Count&lt;/code&gt;. That question is a classic scenario where the code will fail because the &lt;code&gt;Rows.Count&lt;/code&gt; returns &lt;code&gt;65536&lt;/code&gt; for Excel 2003 and earlier and &lt;code&gt;1048576&lt;/code&gt; for Excel 2007 and later. Similarly &lt;code&gt;Columns.Count&lt;/code&gt; returns &lt;code&gt;256&lt;/code&gt; and &lt;code&gt;16384&lt;/code&gt;, respectively.</source>
          <target state="translated">如果您注意到我们有一个 &lt;code&gt;.&lt;/code&gt; 在 &lt;code&gt;Rows.Count&lt;/code&gt; 之前。 我们经常选择忽略这一点。 有关可能出现的错误，请参阅&lt;a href=&quot;https://stackoverflow.com/questions/19985345/vba-excel-compability-mode#comment29753337_19985345&quot;&gt;此&lt;/a&gt;问题。 我总是建议使用 &lt;code&gt;.&lt;/code&gt; 在 &lt;code&gt;Columns.Count&lt;/code&gt; 和Columns.Count之前。 这个问题是一个经典的场景，其中的代码将失败，因为对于Excel 2003和更早版本， &lt;code&gt;Rows.Count&lt;/code&gt; 返回 &lt;code&gt;65536&lt;/code&gt; ，对于Excel 2007和更高版本，返回 &lt;code&gt;1048576&lt;/code&gt; 。 类似地， &lt;code&gt;Columns.Count&lt;/code&gt; 分别返回 &lt;code&gt;256&lt;/code&gt; 和 &lt;code&gt;16384&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="84539c301bebb3a41ccaaa5e25afbeb524cebe8b" translate="yes" xml:space="preserve">
          <source>If your range contains non-contiguous non-blank cells, then it will also give a wrong result.</source>
          <target state="translated">如果你的范围包含了非连续的非空白单元格,那么它也会给出一个错误的结果。</target>
        </trans-unit>
        <trans-unit id="134c64335f5ffab06b292a8975193cd103c16175" translate="yes" xml:space="preserve">
          <source>In order to put this in VBA and not to write anything in Excel, using the parameters for the latter functions, something like this could be in mind:</source>
          <target state="translated">为了把这个放在VBA中,而不是在Excel中写什么,用后一个函数的参数,类似这样的东西可以记在脑海里。</target>
        </trans-unit>
        <trans-unit id="593f73ea0ddf0bb36e38f97427d6c23df4ad750c" translate="yes" xml:space="preserve">
          <source>Last Column:</source>
          <target state="translated">最后一栏:</target>
        </trans-unit>
        <trans-unit id="dcd9c25eb82183ce7b5bc8565a460c66e9556481" translate="yes" xml:space="preserve">
          <source>Last Row, counting empty rows with data:</source>
          <target state="translated">最后一行,用数据计算空行。</target>
        </trans-unit>
        <trans-unit id="9f6976483b9e7fdb62b0fecc7db7ea1b7e8e8860" translate="yes" xml:space="preserve">
          <source>Last Row:</source>
          <target state="translated">最后一行。</target>
        </trans-unit>
        <trans-unit id="782661384d5f64184e9542ee3f4ae0d554d46afd" translate="yes" xml:space="preserve">
          <source>More explicit solutions that check individual &lt;code&gt;Cells&lt;/code&gt;' in a loop are generally slower than re-using an Excel function (although can still be performant), but let you specify exactly what you want to find. See &lt;a href=&quot;https://stackoverflow.com/a/49971492/1026&quot;&gt;my solution&lt;/a&gt; based on &lt;code&gt;UsedRange&lt;/code&gt; and VBA arrays to find the last cell with data in the given column -- it handles hidden rows, filters, blanks, does not modify the Find defaults and is quite performant.</source>
          <target state="translated">在循环中检查单个 &lt;code&gt;Cells&lt;/code&gt; 的更明确的解决方案通常比重用Excel函数要慢（尽管仍然可以执行），但是让您精确地指定要查找的内容。 请参阅&lt;a href=&quot;https://stackoverflow.com/a/49971492/1026&quot;&gt;我的&lt;/a&gt;基于 &lt;code&gt;UsedRange&lt;/code&gt; 和VBA数组的解决方案，以在给定列中查找包含数据的最后一个单元格-它处理隐藏的行，过滤器，空格，不修改&amp;ldquo;查找&amp;rdquo;默认值，并且性能很好。</target>
        </trans-unit>
        <trans-unit id="e250ccc45c93ddcfb6305e75c88e77b1ab5a555b" translate="yes" xml:space="preserve">
          <source>Note that a common mistake ️is to use &lt;code&gt;.UsedRange.Rows.Count&lt;/code&gt;⚠️, which returns the &lt;em&gt;number of rows&lt;/em&gt; in the used range, not the &lt;em&gt;last row number&lt;/em&gt; (they will be different if the first few rows are blank), for details see &lt;a href=&quot;https://stackoverflow.com/a/35975280/1026&quot;&gt;newguy's answer to &lt;em&gt;How can I find last row that contains data in the Excel sheet with a macro?&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">请注意，常见错误️是使用 &lt;code&gt;.UsedRange.Rows.Count&lt;/code&gt; ⚠️ ，它返回使用范围内的&lt;em&gt;行数&lt;/em&gt; ，而不是&lt;em&gt;最后一行的行数&lt;/em&gt; （如果前几行为空白，它们将有所不同），有关详细信息，请参见&lt;a href=&quot;https://stackoverflow.com/a/35975280/1026&quot;&gt;newguy的&lt;em&gt;如何找到包含宏的Excel工作表中包含数据的最后一行？&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2d35b4f86e6339d0a2aeaaa007d5931247104c71" translate="yes" xml:space="preserve">
          <source>Note that this approach will skip any hidden rows. Looking back at &lt;a href=&quot;https://i.stack.imgur.com/3TqSI.png&quot;&gt;my screenshot above for column A&lt;/a&gt;, if row 8 were hidden, this approach would return &lt;code&gt;5&lt;/code&gt; instead of &lt;code&gt;8&lt;/code&gt;.</source>
          <target state="translated">请注意，此方法将跳过任何隐藏的行。 回顾&lt;a href=&quot;https://i.stack.imgur.com/3TqSI.png&quot;&gt;上面的A列屏幕快照&lt;/a&gt; ，如果第8行被隐藏，则此方法将返回 &lt;code&gt;5&lt;/code&gt; 而不是 &lt;code&gt;8&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="285f98e8d01e4962eff6724b78a3c6724d0931e6" translate="yes" xml:space="preserve">
          <source>Note that:</source>
          <target state="translated">注意到:</target>
        </trans-unit>
        <trans-unit id="ae35960b75defbdd762cbf4fc85d62aa303ef8a7" translate="yes" xml:space="preserve">
          <source>One important note to keep in mind when using the solution ...</source>
          <target state="translated">在使用解决方案时,有一个重要的注意事项要记住。</target>
        </trans-unit>
        <trans-unit id="b51dfc2b4f6605fbbef17b9eb4e6cd6776072cc4" translate="yes" xml:space="preserve">
          <source>One limitation exists - if there are tables in the sheet, results can become unreliable, so I decided to avoid running the code in this case:</source>
          <target state="translated">有一个局限性--如果表中有表,结果可能会变得不可靠,所以我决定在这种情况下避免运行代码。</target>
        </trans-unit>
        <trans-unit id="4c34566605c9374a25bc26869a5c422abb077b46" translate="yes" xml:space="preserve">
          <source>Other things you might want to consider:</source>
          <target state="translated">其他的事情你可能要考虑一下。</target>
        </trans-unit>
        <trans-unit id="1bdfd2a311bbd8fec1da4e513f5fa0f016f8abc2" translate="yes" xml:space="preserve">
          <source>Otherwise you will end up getting OVERFLOW errors in certain situations in .XLSX workbooks</source>
          <target state="translated">否则,在.XLSX工作簿中的某些情况下,你最终会收到OVERFLOW错误。</target>
        </trans-unit>
        <trans-unit id="9c06273945e891bbe0709d8e120adebffae928a7" translate="yes" xml:space="preserve">
          <source>Reasonably simple, not a lot of variables.</source>
          <target state="translated">合理简单,变数不多。</target>
        </trans-unit>
        <trans-unit id="b76b0bc03446fe6320d8b175fccffd681e3090c8" translate="yes" xml:space="preserve">
          <source>Results look like this:</source>
          <target state="translated">结果看起来是这样的。</target>
        </trans-unit>
        <trans-unit id="469d5b183fdc0d59e41a51e61529cdd95274ba7c" translate="yes" xml:space="preserve">
          <source>Shift</source>
          <target state="translated">Shift</target>
        </trans-unit>
        <trans-unit id="9c9456fcbd04adb2a1f80847e7c4217124f5fd48" translate="yes" xml:space="preserve">
          <source>Since the original question is about &lt;em&gt;problems&lt;/em&gt; with finding the last cell, &lt;strong&gt;in this answer I will list the various ways you can get unexpected results&lt;/strong&gt;; see &lt;a href=&quot;https://stackoverflow.com/a/49971492/1026&quot;&gt;my answer to &lt;em&gt;&quot;How can I find last row that contains data in the Excel sheet with a macro?&quot;&lt;/em&gt;&lt;/a&gt; for my take on solving this.</source>
          <target state="translated">由于最初的问题是关于查找最后一个单元格的问题，因此&lt;strong&gt;在此答案中，我将列出获得意外结果的各种方法&lt;/strong&gt; ； 请参阅&lt;a href=&quot;https://stackoverflow.com/a/49971492/1026&quot;&gt;我的答案： &lt;em&gt;&amp;ldquo;如何找到包含宏的Excel工作表中包含数据的最后一行？&amp;rdquo;&lt;/em&gt;&lt;/a&gt; 对于我解决这个问题的看法。</target>
        </trans-unit>
        <trans-unit id="1671baf5e64a4e1914db41ba5989d4d003ebe979" translate="yes" xml:space="preserve">
          <source>Some of the most common ways of finding last row which are highly unreliable and hence should never be used.</source>
          <target state="translated">一些最常用的方法是找最后一排,这种方法是非常不可靠的,因此千万不要用。</target>
        </trans-unit>
        <trans-unit id="a0c8f590f077ce64bec625e8abb8b8841b103ef9" translate="yes" xml:space="preserve">
          <source>The &quot;erroneous&quot; output will obtain if there are no &lt;em&gt;non-blank&lt;/em&gt; cells in your range other than perhaps the first. Then, you are &lt;em&gt;leaping in the dark&lt;/em&gt;, i.e., down the worksheet
(you should note the difference between &lt;em&gt;blank&lt;/em&gt; and &lt;em&gt;empty string&lt;/em&gt;!).</source>
          <target state="translated">如果您的范围中除第一个单元&lt;em&gt;格外&lt;/em&gt;没有其他&lt;em&gt;非空白&lt;/em&gt;单元格，则将获得&amp;ldquo;错误&amp;rdquo;输出。 然后，您将&lt;em&gt;在黑暗&lt;/em&gt;中&lt;em&gt;跳来跳去&lt;/em&gt; ，即跳下工作表（应注意&lt;em&gt;空白&lt;/em&gt; &lt;em&gt;字符串&lt;/em&gt;和&lt;em&gt;空字符串&lt;/em&gt;之间的区别！）。</target>
        </trans-unit>
        <trans-unit id="3b50fc4c34e76646f815d8af1e09897e675ecd19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.End(xlDown)&lt;/code&gt; code from the question will break most easily (e.g. with &lt;strong&gt;a single non-empty cell&lt;/strong&gt; or when there are &lt;strong&gt;blank cells in between&lt;/strong&gt;) for the reasons explained in &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/11169920#11169920&quot;&gt;the answer by Siddharth Rout&lt;/a&gt; here (search for &lt;em&gt;&quot;xlDown is equally unreliable.&quot;&lt;/em&gt;) 👎</source>
          <target state="translated">问题的 &lt;code&gt;.End(xlDown)&lt;/code&gt; 代码最容易中断（例如，使用&lt;strong&gt;一个非空单元格&lt;/strong&gt;或当它们&lt;strong&gt;之间&lt;/strong&gt;有&lt;strong&gt;空白单元格时&lt;/strong&gt; ），这&lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/11169920#11169920&quot;&gt;是Siddharth Rout的答案&lt;/a&gt;在此处解释的原因（搜索&lt;em&gt;&amp;ldquo; xlDown等于不可靠。&amp;ldquo;&lt;/em&gt; ）👎</target>
        </trans-unit>
        <trans-unit id="a26aedd1eb16607e0094066e4ae2c18cc5106cd1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Find&lt;/code&gt; method is flawless and I would approve of it as a &lt;em&gt;One Stop Answer&lt;/em&gt;. However the drawback of changing the &lt;code&gt;Find&lt;/code&gt; settings can be annoying, particularly if this is part of a UDF.</source>
          <target state="translated">&lt;code&gt;Find&lt;/code&gt; 方法是完美无缺的，我将其视为&lt;em&gt;一站式答案&lt;/em&gt; 。 但是，更改&amp;ldquo; &lt;code&gt;Find&lt;/code&gt; 设置的缺点可能很烦人，特别是如果这是UDF的一部分。</target>
        </trans-unit>
        <trans-unit id="39723b7861e7ad153d7df844b5cc34881ce2086c" translate="yes" xml:space="preserve">
          <source>The above fact that Excel 2007+ has &lt;code&gt;1048576&lt;/code&gt; rows also emphasizes on the fact that we should always declare the variable which will hold the row value as &lt;code&gt;Long&lt;/code&gt; instead of &lt;code&gt;Integer&lt;/code&gt; else you will get an &lt;code&gt;Overflow&lt;/code&gt; error.</source>
          <target state="translated">Excel 2007+具有 &lt;code&gt;1048576&lt;/code&gt; 行的上述事实也强调了一个事实，我们应该始终将将行值保存为 &lt;code&gt;Long&lt;/code&gt; 而不是 &lt;code&gt;Integer&lt;/code&gt; 的变量声明为整数，否则会出现 &lt;code&gt;Overflow&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="2b5c6447372efeef5f2d636959b748276ac13418" translate="yes" xml:space="preserve">
          <source>The other answers posted are okay, however the complexity gets a little excessive. Thus here's my attempt to find a balance of reliability, minimal complexity, and not using &lt;code&gt;Find&lt;/code&gt;.</source>
          <target state="translated">发布的其他答案都可以，但是复杂性有点过高。 因此，这是我尝试在可靠性，最小复杂度和不使用 &lt;code&gt;Find&lt;/code&gt; 之间寻求平衡。</target>
        </trans-unit>
        <trans-unit id="ae77ce7ef2675dd6c82db5f4487e485862ccc5c1" translate="yes" xml:space="preserve">
          <source>The same principles apply, for example to get the last row in the third column of a table:</source>
          <target state="translated">同样的原则,例如在表格的第三列中得到最后一行。</target>
        </trans-unit>
        <trans-unit id="c9d940ced980c5a4b55a47a5ca6201d1466254e0" translate="yes" xml:space="preserve">
          <source>This essentially returns the same cell that you get by</source>
          <target state="translated">这本质上是返回与你通过以下方法得到的单元格相同的单元格</target>
        </trans-unit>
        <trans-unit id="ad1d6aff36a2be8a66f05ce26a37c781f6b5baeb" translate="yes" xml:space="preserve">
          <source>This is my encapsulated function that I drop in to various code uses.</source>
          <target state="translated">这是我在各种代码使用中丢入的封装函数。</target>
        </trans-unit>
        <trans-unit id="dd320bb0a9951f0c4017c3064c8e27cccf4b37ea" translate="yes" xml:space="preserve">
          <source>This will give you address of last used cell in the column D.</source>
          <target state="translated">这将给出D列中最后使用的单元格的地址。</target>
        </trans-unit>
        <trans-unit id="0868b384be11512300924c393237ccab87a0c113" translate="yes" xml:space="preserve">
          <source>To find the &lt;code&gt;Effective&lt;/code&gt; last row in the sheet, use this. Notice the use of &lt;code&gt;Application.WorksheetFunction.CountA(.Cells)&lt;/code&gt;. This is required because if there are no cells with data in the worksheet then &lt;code&gt;.Find&lt;/code&gt; will give you &lt;code&gt;Run Time Error 91: Object Variable or With block variable not set&lt;/code&gt;</source>
          <target state="translated">要在工作表中找到 &lt;code&gt;Effective&lt;/code&gt; 最后一行，请使用它。 注意使用 &lt;code&gt;Application.WorksheetFunction.CountA(.Cells)&lt;/code&gt; 。 这是必需的，因为如果工作表中没有包含数据的单元格，则 &lt;code&gt;.Find&lt;/code&gt; 将为您提供 &lt;code&gt;Run Time Error 91: Object Variable or With block variable not set&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5b0afdebd4267b399904f45f93594a5fc4da525" translate="yes" xml:space="preserve">
          <source>To find the last Row in Col E use this</source>
          <target state="translated">要找到Col E中的最后一行,请使用以下方法</target>
        </trans-unit>
        <trans-unit id="45e78e7fd93f9c854b02372eec658d7580136284" translate="yes" xml:space="preserve">
          <source>Type something in cell &lt;code&gt;A5&lt;/code&gt;. Now when you calculate the last row with any of the methods given below, it will give you 5. Now color the cell &lt;code&gt;A10&lt;/code&gt; red. If you now use the any of the below code, you will still get 5. If you use &lt;code&gt;Usedrange.Rows.Count&lt;/code&gt; what do you get? It won't be 5.</source>
          <target state="translated">在单元格 &lt;code&gt;A5&lt;/code&gt; 中键入内容。 现在，当您使用下面给出的任何方法计算最后一行时，它将得到5。现在将单元格 &lt;code&gt;A10&lt;/code&gt; 涂成红色。 如果您现在使用以下任何代码，您仍然会得到5。如果您使用 &lt;code&gt;Usedrange.Rows.Count&lt;/code&gt; ，您会得到什么？ 不会是5。</target>
        </trans-unit>
        <trans-unit id="e39756cd7e3b8016d5ad7545949eb0381ac29d61" translate="yes" xml:space="preserve">
          <source>Used = &quot;... in use, meaning the section that contains &lt;strong&gt;data or formatting&lt;/strong&gt;&quot; &lt;strong&gt;or conditional formatting.&lt;/strong&gt;
Same as 2., but also including cells that are the target for any Conditional Formatting rule.</source>
          <target state="translated">Used =&amp;ldquo; ...正在使用中，表示包含&lt;strong&gt;数据或格式&lt;/strong&gt;的部分&amp;rdquo; &lt;strong&gt;或条件格式。&lt;/strong&gt; 与2相同，但还包括任何条件格式设置规则的目标单元格。</target>
        </trans-unit>
        <trans-unit id="c73b043a9478c1294805b94a0d62d99e5db55e36" translate="yes" xml:space="preserve">
          <source>Used = &quot;... in use, meaning the section that contains &lt;strong&gt;data or formatting&lt;/strong&gt;.&quot;
&lt;a href=&quot;http://support.microsoft.com/kb/244435&quot;&gt;As per official documentation&lt;/a&gt;, this is the criterion used by Excel at the time of saving. See also &lt;a href=&quot;https://support.office.com/en-sg/article/Locate-and-reset-the-last-cell-on-a-worksheet-c9e468a8-0fc3-4f69-8038-b3c1d86e99e9&quot;&gt;this&lt;/a&gt;.
If one is not aware of this, the criterion may produce unexpected results, but it may also be intentionally exploited (less often, surely), e.g., to highlight or print specific regions, which may eventually have no data.
And, of course, it is desirable as a criterion for the range to use when saving a workbook, lest losing part of one's work.</source>
          <target state="translated">Used =&amp;ldquo; ...正在使用中，表示包含&lt;strong&gt;数据或格式&lt;/strong&gt;的部分。&amp;rdquo; &lt;a href=&quot;http://support.microsoft.com/kb/244435&quot;&gt;根据官方文档&lt;/a&gt; ，这是Excel在保存时使用的标准。 另请参阅。 如果没有意识到这一点，则该标准可能会产生意想不到的结果，但也可能有意地利用它（不太经常，肯定），例如突出显示或打印可能最终没有数据的特定区域。 并且，当然，作为保存工作簿时使用范围的标准是可取的，以免丢失一部分工作。</target>
        </trans-unit>
        <trans-unit id="770acd1a18e575281570d204a4f071fdc9025733" translate="yes" xml:space="preserve">
          <source>Used = non-blank, i.e., having &lt;strong&gt;data&lt;/strong&gt;.</source>
          <target state="translated">已使用=非空白，即具有&lt;strong&gt;data&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b03ed7ecdce33d9d4e5fff038a43abf2d5755fa" translate="yes" xml:space="preserve">
          <source>UsedRange</source>
          <target state="translated">UsedRange</target>
        </trans-unit>
        <trans-unit id="3b7d5298d84d7f2a075250ffcbb58cfa904b2444" translate="yes" xml:space="preserve">
          <source>What would happen if there was only one cell (&lt;code&gt;A1&lt;/code&gt;) which had data? You will end up reaching the last row in the worksheet! It's like selecting cell &lt;code&gt;A1&lt;/code&gt; and then pressing</source>
          <target state="translated">如果只有一个存储数据的单元格（ &lt;code&gt;A1&lt;/code&gt; ），会发生什么情况？ 您最终将到达工作表的最后一行！ 就像选择单元格 &lt;code&gt;A1&lt;/code&gt; 然后按</target>
        </trans-unit>
        <trans-unit id="8e4eee1cecb8f571093d5e8271ca4229a03c87ff" translate="yes" xml:space="preserve">
          <source>Whatever solution you pick, be careful</source>
          <target state="translated">无论你选择什么方案,都要小心</target>
        </trans-unit>
        <trans-unit id="32d4802da61ff1edd472676e4d7003b98c192da9" translate="yes" xml:space="preserve">
          <source>When I want to find the last used cell value, I use:</source>
          <target state="translated">当我想找到最后一个使用过的单元格值时,我使用。</target>
        </trans-unit>
        <trans-unit id="4d0aecadfddadedf6481cb71c476f1120fd3f649" translate="yes" xml:space="preserve">
          <source>Which combination do you want to test for? Some (such as Tables) may be more difficult to test for, and some may be rare (such as a shape outside of data range),  but others may vary based on the situation (e.g., formulas with blank values).</source>
          <target state="translated">你想测试哪种组合?有的(如表)可能比较难测试,有的可能比较少见(如数据范围外的形状),但也有的可能根据情况不同而不同(如公式中的空白值)。</target>
        </trans-unit>
        <trans-unit id="adbd129422c4b678f3bdedb790c2193299c442f5" translate="yes" xml:space="preserve">
          <source>Why this is bad:</source>
          <target state="translated">为什么这样做不好。</target>
        </trans-unit>
        <trans-unit id="ae8920fd62ba92fafb2c831c79c2f426b0f331b2" translate="yes" xml:space="preserve">
          <source>Why this is good:</source>
          <target state="translated">为什么这样做很好。</target>
        </trans-unit>
        <trans-unit id="95b2e3ee285ce3564835bcb2262962d6353f24a1" translate="yes" xml:space="preserve">
          <source>With that in mind, let's see &lt;strong&gt;how the common ways of getting the &quot;last cell&quot; can produce unexpected results:&lt;/strong&gt;</source>
          <target state="translated">考虑到这一点，让我们看看&lt;strong&gt;获取&amp;ldquo;最后一个单元格&amp;rdquo;的常见方法如何产生意外的结果：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="94d152c351a0bba5b18a41bd5b025862499ba1e5" translate="yes" xml:space="preserve">
          <source>With very large sets of data and a massive gap between used range and last row in specified columns, this will perform slower, in rare cases SIGNIFICANTLY slower.</source>
          <target state="translated">对于非常大的数据集和指定列中使用过的范围和最后一行之间存在着巨大的差距,这将会导致执行速度变慢,在极少数情况下会明显变慢。</target>
        </trans-unit>
        <trans-unit id="0fd9557e7f7f3f48b52c28134ccfd61202cbb593" translate="yes" xml:space="preserve">
          <source>You have to take care to avoid the standard pitfalls (for details I'll again refer to &lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/11169920#11169920&quot;&gt;the answer by Siddharth Rout&lt;/a&gt; here, look for the &lt;em&gt;&quot;Find Last Row in a Column&quot;&lt;/em&gt; section), such as hard-coding the last row (&lt;code&gt;Range(&quot;A65536&quot;).End(xlUp)&lt;/code&gt;) instead of relying on &lt;code&gt;sht.Rows.Count&lt;/code&gt;.</source>
          <target state="translated">您必须注意避免出现标准陷阱（有关详细信息，我将再次参考&lt;a href=&quot;https://stackoverflow.com/questions/11169445/error-in-finding-last-used-cell-in-vba/11169920#11169920&quot;&gt;Siddharth Rout的答案&lt;/a&gt; ，在&lt;em&gt;&amp;ldquo;查找列中&lt;/em&gt;的最后一行&lt;em&gt;&amp;rdquo;&lt;/em&gt;部分中进行），例如对最后一行（ &lt;code&gt;Range(&quot;A65536&quot;).End(xlUp)&lt;/code&gt; ），而不是依赖于 &lt;code&gt;sht.Rows.Count&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b2548ce4cf8fcd600a558baf2ee38c3a0845783" translate="yes" xml:space="preserve">
          <source>You need to enter the formula without brackets and then hit</source>
          <target state="translated">你需要输入没有括号的公式,然后点击</target>
        </trans-unit>
        <trans-unit id="416224e917bfafcb31cb6a6879f926a487aa37f3" translate="yes" xml:space="preserve">
          <source>Your code uses the first cell in your range E4:E48 as a trampoline, for &lt;em&gt;jumping&lt;/em&gt; down with &lt;code&gt;End(xlDown)&lt;/code&gt;.</source>
          <target state="translated">您的代码将E4：E48范围内的第一个单元格用作蹦床，以 &lt;code&gt;End(xlDown)&lt;/code&gt; 向下&lt;em&gt;跳&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="02da95b16cfc29601e238d51a97824fa71108e37" translate="yes" xml:space="preserve">
          <source>[...] one has first to decide what is considered used. I see at least 6 meanings. Cell has:</source>
          <target state="translated">[...........]首先要确定什么是用过的。我看到至少有6种含义。细胞有:</target>
        </trans-unit>
        <trans-unit id="9772fe894d76707f71a063b470d68e33c13c74cf" translate="yes" xml:space="preserve">
          <source>after selecting Cell &lt;strong&gt;&lt;code&gt;A1&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">在选择单元格&lt;strong&gt; &lt;code&gt;A1&lt;/code&gt; 之后&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="10d48792407e5589a547c8fa8c77691fec176d60" translate="yes" xml:space="preserve">
          <source>and how to check this for yourself:</source>
          <target state="translated">以及如何自己检查这一点。</target>
        </trans-unit>
        <trans-unit id="f1894fd7f4349fc31d34edc811e424f53b327565" translate="yes" xml:space="preserve">
          <source>is the last cell in the Column A this code was tested on excel 2003.</source>
          <target state="translated">是A列中的最后一个单元格,这段代码是在excel 2003上测试的。</target>
        </trans-unit>
        <trans-unit id="033d78ec686b9eef1a21bbff4e29e2d98e91362a" translate="yes" xml:space="preserve">
          <source>key and then pressing</source>
          <target state="translated">键,再按</target>
        </trans-unit>
        <trans-unit id="edfdd1b3986bdc49994b153ba1b40f10cb375e80" translate="yes" xml:space="preserve">
          <source>key. This will also give you unreliable results if there are blank cells in a range.</source>
          <target state="translated">键。如果一个范围内有空白单元格,这也会给你带来不可靠的结果。</target>
        </trans-unit>
        <trans-unit id="2711dad7c8c7eaa9db81b073162f318f81561c17" translate="yes" xml:space="preserve">
          <source>to always specify the worksheet you're working with (i.e. &lt;code&gt;Dim ws As Worksheet ... ws.Range(...)&lt;/code&gt; instead of &lt;code&gt;Range(...)&lt;/code&gt;)</source>
          <target state="translated">始终指定要使用的工作表（即 &lt;code&gt;Dim ws As Worksheet ... ws.Range(...)&lt;/code&gt; 而不是 &lt;code&gt;Range(...)&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="84df93fd756105898932e30a4fbcb5a8a272af2e" translate="yes" xml:space="preserve">
          <source>to make it an array formula.</source>
          <target state="translated">使其成为一个数组公式。</target>
        </trans-unit>
        <trans-unit id="5c43d5be7c2782582d5c9c0ad55b7f9458c04f4d" translate="yes" xml:space="preserve">
          <source>to use &lt;code&gt;Long&lt;/code&gt; instead of &lt;code&gt;Integer&lt;/code&gt; to store the row numbers (to avoid getting &lt;code&gt;Overflow&lt;/code&gt; with more than 65k rows) and</source>
          <target state="translated">使用 &lt;code&gt;Long&lt;/code&gt; 而不是 &lt;code&gt;Integer&lt;/code&gt; 来存储行号（以避免超过65k行的 &lt;code&gt;Overflow&lt;/code&gt; ），并且</target>
        </trans-unit>
        <trans-unit id="32de2c5614e1a0e638ed265beff9df41f4cdf51a" translate="yes" xml:space="preserve">
          <source>when using &lt;code&gt;.Value&lt;/code&gt; (which is a &lt;code&gt;Variant&lt;/code&gt;) avoid implicit casts like &lt;code&gt;.Value &amp;lt;&amp;gt; &quot;&quot;&lt;/code&gt; as they will fail if the cell contains an error value.</source>
          <target state="translated">使用 &lt;code&gt;.Value&lt;/code&gt; （这是 &lt;code&gt;Variant&lt;/code&gt; ）时，请避免使用 &lt;code&gt;.Value &amp;lt;&amp;gt; &quot;&quot;&lt;/code&gt; 类的隐式强制转换，因为如果单元格包含错误值，它们将失败。</target>
        </trans-unit>
        <trans-unit id="464c1ebf7c020624d9cedec9e2d19443f457627b" translate="yes" xml:space="preserve">
          <source>will go to a wrong cell prior to saving
(&amp;ldquo;The last cell is not reset until you save the worksheet&amp;rdquo;, from
&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa139976%28v=office.10%29.aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/aa139976%28v=office.10%29.aspx&lt;/a&gt;.
It is an old reference, but in this respect valid).</source>
          <target state="translated">将在保存之前进入错误的单元格（&amp;ldquo;直到保存工作表，才会重置最后一个单元格&amp;rdquo;，来自&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa139976%28v=office.10%29.aspx&quot;&gt;http://msdn.microsoft.com/zh-cn/library/aa139976%28v=office.10%29 .aspx&lt;/a&gt; ，这是一个旧参考，但在这方面有效）。</target>
        </trans-unit>
        <trans-unit id="0c0e6b95bf4a0890c97ea0fd46e65948e08815ea" translate="yes" xml:space="preserve">
          <source>will still take you to &lt;strong&gt;H8&lt;/strong&gt; cell. The above function will have the same behavior.</source>
          <target state="translated">仍将您带到&lt;strong&gt;H8&lt;/strong&gt;单元。 上面的功能将具有相同的行为。</target>
        </trans-unit>
        <trans-unit id="b3af845fb4a2bcfcf52cdfcf7566199ca809de73" translate="yes" xml:space="preserve">
          <source>xlDown</source>
          <target state="translated">xlDown</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
