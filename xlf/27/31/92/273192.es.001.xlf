<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/273192">
    <body>
      <group id="273192">
        <trans-unit id="3121ac2ed4bcb912f44c1a708fd4fa005c62df64" translate="yes" xml:space="preserve">
          <source>(For context, I'm tracking my weekly rep with a script. Here's the relevant parts of code from the script that allow me to avoid hitting Stack Overflow more than once a day for the same data.)</source>
          <target state="translated">(Por el contexto,estoy siguiendo mi representante semanal con un guión.Aquí están las partes relevantes del código del script que me permiten evitar golpear Stack Overflow más de una vez al día para los mismos datos).</target>
        </trans-unit>
        <trans-unit id="3eb796c0d6b99c763af93d3b97f34d9a1877151e" translate="yes" xml:space="preserve">
          <source>(just as &lt;a href=&quot;https://docs.python.org/3/library/os.html?highlight=makedirs#os.makedirs&quot;&gt;&lt;code&gt;os.makedirs&lt;/code&gt;&lt;/a&gt; got an &lt;code&gt;exist_ok&lt;/code&gt; flag starting from python 3.2 e.g &lt;code&gt;os.makedirs(path, exist_ok=True)&lt;/code&gt;)</source>
          <target state="translated">(al igual que &lt;a href=&quot;https://docs.python.org/3/library/os.html?highlight=makedirs#os.makedirs&quot;&gt; &lt;code&gt;os.makedirs&lt;/code&gt; &lt;/a&gt; obtuvo un indicador &lt;code&gt;exist_ok&lt;/code&gt; a partir de python 3.2, por ejemplo, &lt;code&gt;os.makedirs(path, exist_ok=True)&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="18a3c7a1b3ef5d5d0b224c6076395a8aa2e4273e" translate="yes" xml:space="preserve">
          <source>... You're going to end up with a directory named &lt;code&gt;filename.etc&lt;/code&gt; when you pass that argument to &lt;code&gt;os.makedirs()&lt;/code&gt; if you test with &lt;code&gt;os.path.exists()&lt;/code&gt;.</source>
          <target state="translated">... Va a terminar con un directorio llamado &lt;code&gt;filename.etc&lt;/code&gt; cuando pase ese argumento a &lt;code&gt;os.makedirs()&lt;/code&gt; si prueba con &lt;code&gt;os.path.exists()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12b82177815800e1d2adf2e41a4a0b40631382f5" translate="yes" xml:space="preserve">
          <source>...and by allowing &lt;a href=&quot;https://docs.python.org/3.2/library/os.html#os.makedirs&quot;&gt;a keyword argument to &lt;code&gt;os.makedirs&lt;/code&gt; called &lt;code&gt;exist_ok&lt;/code&gt;&lt;/a&gt; (in 3.2+).</source>
          <target state="translated">... y al permitir &lt;a href=&quot;https://docs.python.org/3.2/library/os.html#os.makedirs&quot;&gt;un argumento de palabra clave para &lt;code&gt;os.makedirs&lt;/code&gt; llamado &lt;code&gt;exist_ok&lt;/code&gt; &lt;/a&gt; (en 3.2+).</target>
        </trans-unit>
        <trans-unit id="d2cb971d27ac509e9772623d927e6363ff0a92a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/distutils/apiref.html#distutils.dir_util.mkpath&quot;&gt;&lt;code&gt;mkpath&lt;/code&gt;&lt;/a&gt; creates the nested directory, and does nothing if the directory already exists. This works in both Python 2 and 3.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/distutils/apiref.html#distutils.dir_util.mkpath&quot;&gt; &lt;code&gt;mkpath&lt;/code&gt; &lt;/a&gt; crea el directorio anidado y no hace nada si el directorio ya existe. Esto funciona en Python 2 y 3.</target>
        </trans-unit>
        <trans-unit id="0443b8240c037eb60f44be401cd11e8ad86dd87b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/library/os.html#os.makedirs&quot;&gt;&lt;code&gt;os.makedirs&lt;/code&gt;&lt;/a&gt; as used above recursively creates the directory and does not raise an exception if the directory already exists. It has the optional &lt;code&gt;exist_ok&lt;/code&gt; argument only if using Python 3.2+, with a default value of &lt;code&gt;False&lt;/code&gt;. This argument does not exist in Python 2.x up to 2.7. As such, there is no need for manual exception handling as with Python 2.7.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/library/os.html#os.makedirs&quot;&gt; &lt;code&gt;os.makedirs&lt;/code&gt; &lt;/a&gt; como se usa arriba crea recursivamente el directorio y no genera una excepci&amp;oacute;n si el directorio ya existe. Tiene el argumento opcional &lt;code&gt;exist_ok&lt;/code&gt; solo si usa Python 3.2+, con un valor predeterminado de &lt;code&gt;False&lt;/code&gt; . Este argumento no existe en Python 2.x hasta 2.7. Como tal, no hay necesidad de manejo manual de excepciones como con Python 2.7.</target>
        </trans-unit>
        <trans-unit id="c69cbbeb4b9bb92190a2541fb7a478447ef001ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/library/pathlib.html#pathlib.Path.mkdir&quot;&gt;&lt;code&gt;pathlib.Path.mkdir&lt;/code&gt;&lt;/a&gt; as used above recursively creates the directory and does not raise an exception if the directory already exists. If you don't need or want the parents to be created, skip the &lt;code&gt;parents&lt;/code&gt; argument.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/library/pathlib.html#pathlib.Path.mkdir&quot;&gt; &lt;code&gt;pathlib.Path.mkdir&lt;/code&gt; &lt;/a&gt; como se usa arriba crea recursivamente el directorio y no genera una excepci&amp;oacute;n si el directorio ya existe. Si no necesita o desea que se creen los &lt;code&gt;parents&lt;/code&gt; , omita el argumento de los padres .</target>
        </trans-unit>
        <trans-unit id="5722f73ffd926bda9aeb0c49ae9810a9cdeffffe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Path&lt;/code&gt; objects have to be coerced to &lt;code&gt;str&lt;/code&gt; before other APIs that expect &lt;code&gt;str&lt;/code&gt; paths can use them.</source>
          <target state="translated">&lt;code&gt;Path&lt;/code&gt; objetos de ruta deben ser obligados a &lt;code&gt;str&lt;/code&gt; antes de que otras API que esperan rutas &lt;code&gt;str&lt;/code&gt; puedan usarlos.</target>
        </trans-unit>
        <trans-unit id="02fbfa8e9162845467edc255293ffbc665a98adc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Check if a directory exists and create it if necessary?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&amp;iquest;Comprobar si existe un directorio y crearlo si es necesario?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8e2a9d4549bcebed0d695f93286f43be9880e1ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Using &lt;code&gt;os&lt;/code&gt;:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Usando &lt;code&gt;os&lt;/code&gt; :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="513f1e61389d5d53dc42b6dd097dcfa305b4e3e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Using &lt;code&gt;pathlib&lt;/code&gt;:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Usando &lt;code&gt;pathlib&lt;/code&gt; :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="90a13575f8e0892507d63b6f2ba2e38915862974" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;or&lt;/strong&gt; if making the directory is subject to race conditions (i.e. if after checking the path exists, something else may have already made it) do this:</source>
          <target state="translated">&lt;strong&gt;o&lt;/strong&gt; si hacer el directorio est&amp;aacute; sujeto a condiciones de carrera (es decir, si despu&amp;eacute;s de verificar que la ruta existe, es posible que algo m&amp;aacute;s ya lo haya hecho) haga esto:</target>
        </trans-unit>
        <trans-unit id="3b8239e68048624328c3887db9856779071451e0" translate="yes" xml:space="preserve">
          <source>Alternative:</source>
          <target state="translated">Alternative:</target>
        </trans-unit>
        <trans-unit id="a1cf8b16dad890eb5c4e0c9271810e8851b63291" translate="yes" xml:space="preserve">
          <source>Alternatively, there could be a second &lt;code&gt;os.path.exists&lt;/code&gt;, but suppose another created the directory after the first check, then removed it before the second one &amp;ndash; we could still be fooled.</source>
          <target state="translated">Alternativamente, podr&amp;iacute;a haber un segundo &lt;code&gt;os.path.exists&lt;/code&gt; , pero supongamos que otro cre&amp;oacute; el directorio despu&amp;eacute;s de la primera verificaci&amp;oacute;n, luego lo elimin&amp;oacute; antes de la segunda, a&amp;uacute;n podr&amp;iacute;amos enga&amp;ntilde;arnos.</target>
        </trans-unit>
        <trans-unit id="5425ec8a183a1bc6b38039d433238fd743244e9d" translate="yes" xml:space="preserve">
          <source>And a foolish user input:</source>
          <target state="translated">Y una tonta entrada de usuario:</target>
        </trans-unit>
        <trans-unit id="1c86fe1e6829df459e27c81259e6840525f66bc8" translate="yes" xml:space="preserve">
          <source>As noted in comments and elsewhere, there's a race condition &amp;ndash; if the directory is created between the &lt;code&gt;os.path.exists&lt;/code&gt; and the &lt;code&gt;os.makedirs&lt;/code&gt; calls, the &lt;code&gt;os.makedirs&lt;/code&gt; will fail with an &lt;code&gt;OSError&lt;/code&gt;. Unfortunately, blanket-catching &lt;code&gt;OSError&lt;/code&gt; and continuing is not foolproof, as it will ignore a failure to create the directory due to other factors, such as insufficient permissions, full disk, etc.</source>
          <target state="translated">Como se se&amp;ntilde;al&amp;oacute; en los comentarios y en otras partes, hay una condici&amp;oacute;n de carrera: si el directorio se crea entre &lt;code&gt;os.path.exists&lt;/code&gt; y las llamadas &lt;code&gt;os.makedirs&lt;/code&gt; , &lt;code&gt;os.makedirs&lt;/code&gt; fallar&amp;aacute; con un &lt;code&gt;OSError&lt;/code&gt; . Desafortunadamente, &lt;code&gt;OSError&lt;/code&gt; de captura general y continuar no es infalible, ya que ignorar&amp;aacute; una falla al crear el directorio debido a otros factores, como permisos insuficientes, disco completo, etc.</target>
        </trans-unit>
        <trans-unit id="7ee80f57ba0d6d00c9276e06f774ed3925ebe0d9" translate="yes" xml:space="preserve">
          <source>Assuming opening for reading</source>
          <target state="translated">Asumiendo la apertura para la lectura</target>
        </trans-unit>
        <trans-unit id="a732816cb0c9b0cc684d45193ba9368d44c027e2" translate="yes" xml:space="preserve">
          <source>Assuming we're opening for writing</source>
          <target state="translated">Asumiendo que estamos abriendo para escribir</target>
        </trans-unit>
        <trans-unit id="8c423e5c0dfe6a62a16b5a6a6f5ed6162e97b8c5" translate="yes" xml:space="preserve">
          <source>But perhaps an even better approach is to sidestep the resource contention issue, by using temporary directories via &lt;a href=&quot;https://docs.python.org/library/tempfile.html#tempfile.mkdtemp&quot;&gt;&lt;code&gt;tempfile&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Pero quiz&amp;aacute;s un enfoque a&amp;uacute;n mejor es eludir el problema de contenci&amp;oacute;n de recursos, utilizando directorios temporales a trav&amp;eacute;s de &lt;a href=&quot;https://docs.python.org/library/tempfile.html#tempfile.mkdtemp&quot;&gt; &lt;code&gt;tempfile&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="4e1673fa7c1d5fc36445668c4adb7c1b8bc89428" translate="yes" xml:space="preserve">
          <source>Call the function &lt;code&gt;create_dir()&lt;/code&gt; at the entry point of your program/project.</source>
          <target state="translated">Llame a la funci&amp;oacute;n &lt;code&gt;create_dir()&lt;/code&gt; en el punto de entrada de su programa / proyecto.</target>
        </trans-unit>
        <trans-unit id="01ca4760ac618ba068fbfb39127ce9adee4f1bac" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.makedirs&quot;&gt;&lt;code&gt;os.makedirs&lt;/code&gt;&lt;/a&gt;:  (It makes sure the complete path exists.)</source>
          <target state="translated">Compruebe &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.makedirs&quot;&gt; &lt;code&gt;os.makedirs&lt;/code&gt; &lt;/a&gt; : (se asegura de que exista la ruta completa).</target>
        </trans-unit>
        <trans-unit id="6164c0b5b7d56fc2c96acfc1e85d0aea94d39e63" translate="yes" xml:space="preserve">
          <source>Conclusion: in my opinion, &quot;Method 2&quot; is more robust.</source>
          <target state="translated">Conclusión:en mi opinión,el &quot;Método 2&quot; es más sólido.</target>
        </trans-unit>
        <trans-unit id="2f45eec4334aa25687d578b05a730ae07f2d8c14" translate="yes" xml:space="preserve">
          <source>Consider this directory structure:</source>
          <target state="translated">Considere esta estructura de directorio:</target>
        </trans-unit>
        <trans-unit id="d2d4fee838a956a0a5155cf4a5747b0668a441c2" translate="yes" xml:space="preserve">
          <source>Depending on the application, the danger of concurrent operations may be more or less than the danger posed by other factors such as file permissions. The developer would have to know more about the particular application being developed and its expected environment before choosing an implementation.</source>
          <target state="translated">Según la aplicación,el peligro de las operaciones concurrentes puede ser mayor o menor que el que plantean otros factores,como los permisos de archivo.El desarrollador tendría que saber más sobre la aplicación concreta que se está desarrollando y su entorno previsto antes de elegir una aplicación.</target>
        </trans-unit>
        <trans-unit id="deae96764aa4587da73f1ce1ffb9899c015ce4c4" translate="yes" xml:space="preserve">
          <source>Even in that case, this is a bad practice and can lead to long useless debugging. For example, the fact we set the permissions for a directory should not leave us with the impression permissions are set appropriately for our purposes. A parent directory could be mounted with other permissions. In general, a program should always work correctly and the programmer should not expect one specific environment.</source>
          <target state="translated">Incluso en ese caso,es una mala práctica y puede llevar a una larga e inútil depuración.Por ejemplo,el hecho de que establezcamos los permisos para un directorio no debería dejarnos con la impresión de que los permisos están establecidos apropiadamente para nuestros propósitos.Un directorio principal podría ser montado con otros permisos.En general,un programa siempre debe funcionar correctamente y el programador no debe esperar un entorno específico.</target>
        </trans-unit>
        <trans-unit id="35c95b4868de9bf6ba8db931f46dd2e29eb6e01c" translate="yes" xml:space="preserve">
          <source>First the relevant imports:</source>
          <target state="translated">Primero las importaciones pertinentes:</target>
        </trans-unit>
        <trans-unit id="f48e8c1c7ccf846218c4fb87f4a1f71363cf5c47" translate="yes" xml:space="preserve">
          <source>For a one-liner solution, you can use &lt;a href=&quot;https://github.com/ipython/ipython/blob/b70b3f21749ca969088fdb54edcc36bb8a2267b9/IPython/utils/path.py#L423-L438&quot;&gt;&lt;code&gt;IPython.utils.path.ensure_dir_exists()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Para una soluci&amp;oacute;n de una l&amp;iacute;nea, puede usar &lt;a href=&quot;https://github.com/ipython/ipython/blob/b70b3f21749ca969088fdb54edcc36bb8a2267b9/IPython/utils/path.py#L423-L438&quot;&gt; &lt;code&gt;IPython.utils.path.ensure_dir_exists()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="5eb6cd999782910d8577c5e49c2cabbd7c4cfe91" translate="yes" xml:space="preserve">
          <source>For older versions of Python, I see two answers with good qualities, each with a small flaw, so I will give my take on it:</source>
          <target state="translated">Para las versiones antiguas de Python,veo dos respuestas con buenas cualidades,cada una con un pequeño defecto,así que daré mi opinión al respecto:</target>
        </trans-unit>
        <trans-unit id="ad50b66f54fc8b40a971a312b1e7b1f89975e434" translate="yes" xml:space="preserve">
          <source>From the &lt;a href=&quot;https://ipython.org/ipython-doc/3/api/generated/IPython.utils.path.html#IPython.utils.path.ensure_dir_exists&quot;&gt;documentation&lt;/a&gt;: &lt;em&gt;Ensure that a directory exists. If it doesn&amp;rsquo;t exist, try to create it and protect against a race condition if another process is doing the same.&lt;/em&gt;</source>
          <target state="translated">De la &lt;a href=&quot;https://ipython.org/ipython-doc/3/api/generated/IPython.utils.path.html#IPython.utils.path.ensure_dir_exists&quot;&gt;documentaci&amp;oacute;n&lt;/a&gt; : &lt;em&gt;aseg&amp;uacute;rese de que exista un directorio.&lt;/em&gt; &lt;em&gt;Si no existe, intente crearlo y protegerse contra una condici&amp;oacute;n de carrera si otro proceso est&amp;aacute; haciendo lo mismo.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ac620040ee41da4ac4af95274cdd1c3f011dd85f" translate="yes" xml:space="preserve">
          <source>Here are my experiments/notes, which clarifies things:</source>
          <target state="translated">Aquí están mis notas de experimentación,que aclaran las cosas:</target>
        </trans-unit>
        <trans-unit id="4f35d5503e88dfd831b6147a4612e9bccc4447fc" translate="yes" xml:space="preserve">
          <source>Here's a little more of the script - in my case, I'm not subject to a race condition, I only have one process that expects the directory (or contained files) to be there, and I don't have anything trying to remove the directory.</source>
          <target state="translated">Aquí hay un poco más del guión-en mi caso,no estoy sujeto a una condición de carrera,sólo tengo un proceso que espera que el directorio (o los archivos contenidos)estén allí,y no tengo nada tratando de eliminar el directorio.</target>
        </trans-unit>
        <trans-unit id="a3a28383d88c9f97f89da0f85ed2d6ea047cf57b" translate="yes" xml:space="preserve">
          <source>Here's the essentials from the online doc:</source>
          <target state="translated">Aquí está lo esencial del documento en línea:</target>
        </trans-unit>
        <trans-unit id="422c9974b57e23de918cca25a8e4e75144ac9949" translate="yes" xml:space="preserve">
          <source>Here's the relevant part of the &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path.mkdir&quot;&gt;documentation&lt;/a&gt;:</source>
          <target state="translated">Aqu&amp;iacute; est&amp;aacute; la parte relevante de la &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path.mkdir&quot;&gt;documentaci&amp;oacute;n&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="abc4d97edcbb87d0e3301e065d3b93e2104ed36d" translate="yes" xml:space="preserve">
          <source>How can I safely create a nested directory</source>
          <target state="translated">¿Cómo puedo crear con seguridad un directorio anidado</target>
        </trans-unit>
        <trans-unit id="43df623a8684ce2d0992ddf3e318fee0b73a5bca" translate="yes" xml:space="preserve">
          <source>However, say we have several Python processes that attempt to put all their data into the same directory. Then we may have contention over creation of the directory. In that case it's best to wrap the &lt;code&gt;makedirs&lt;/code&gt; call in a try-except block.</source>
          <target state="translated">Sin embargo, supongamos que tenemos varios procesos de Python que intentan poner todos sus datos en el mismo directorio. Entonces podemos tener una disputa sobre la creaci&amp;oacute;n del directorio. En ese caso, lo mejor es envolver la llamada de los &lt;code&gt;makedirs&lt;/code&gt; en un bloque try-except.</target>
        </trans-unit>
        <trans-unit id="01b533ca1cfd4009ed30def6151904b1fbc1ac26" translate="yes" xml:space="preserve">
          <source>I found this Q/A and I was initially puzzled by some of the failures and errors I was getting. I am working in Python 3 (v.3.5 in an Anaconda virtual environment on an Arch Linux x86_64 system).</source>
          <target state="translated">Encontré este QA y al principio estaba desconcertado por algunos de los fallos y errores que estaba recibiendo.Estoy trabajando en Python 3 (v.3.5 en un entorno virtual Anaconda en un sistema Arch Linux x86_64).</target>
        </trans-unit>
        <trans-unit id="bcf2d027a264623ff0d6f130ef23fd5cf6a23215" translate="yes" xml:space="preserve">
          <source>I have put the following down. It's not totally foolproof though.</source>
          <target state="translated">He anotado lo siguiente.Aunque no es totalmente infalible.</target>
        </trans-unit>
        <trans-unit id="9d92b1d4efb363280e561cb068cc7fe185f10913" translate="yes" xml:space="preserve">
          <source>I saw &lt;a href=&quot;https://stackoverflow.com/a/5032238/3051142&quot;&gt;Heikki Toivonen&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/a/14364249&quot;&gt;A-B-B&lt;/a&gt;'s answers and thought of this variation.</source>
          <target state="translated">Vi las respuestas de &lt;a href=&quot;https://stackoverflow.com/a/5032238/3051142&quot;&gt;Heikki Toivonen&lt;/a&gt; y &lt;a href=&quot;https://stackoverflow.com/a/14364249&quot;&gt;ABB&lt;/a&gt; y pens&amp;eacute; en esta variaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="44bc7785155af664bc388bf4072f7f57fab5223a" translate="yes" xml:space="preserve">
          <source>I use &lt;code&gt;os.path.exists()&lt;/code&gt;, &lt;a href=&quot;http://pastebin.com/vnVk2rY5&quot;&gt;here&lt;/a&gt; is a Python 3 script that can be used to check if a directory exists, create one if it does not exist, and delete it if it does exist (if desired).</source>
          <target state="translated">Uso &lt;code&gt;os.path.exists()&lt;/code&gt; , &lt;a href=&quot;http://pastebin.com/vnVk2rY5&quot;&gt;aqu&amp;iacute;&lt;/a&gt; hay un script de Python 3 que puede usarse para verificar si existe un directorio, crear uno si no existe y eliminarlo si existe (si lo desea).</target>
        </trans-unit>
        <trans-unit id="dda21083479a5a551734a83ecabb56f6a839f5f8" translate="yes" xml:space="preserve">
          <source>I would personally recommend that you use &lt;code&gt;os.path.isdir()&lt;/code&gt; to test instead of &lt;code&gt;os.path.exists()&lt;/code&gt;.</source>
          <target state="translated">Yo personalmente recomendar&amp;iacute;a que use &lt;code&gt;os.path.isdir()&lt;/code&gt; para probar en lugar de &lt;code&gt;os.path.exists()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98719f93c1117e90bd3d2ccd57a9fbbebdadfceb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;exist_ok&lt;/code&gt; is true, &lt;code&gt;FileExistsError&lt;/code&gt; exceptions will be ignored (same behavior as the &lt;code&gt;POSIX mkdir -p&lt;/code&gt; command), but only if the last path component is not an existing non-directory file.</source>
          <target state="translated">Si &lt;code&gt;exist_ok&lt;/code&gt; es verdadero, se ignorar&amp;aacute;n las excepciones de &lt;code&gt;FileExistsError&lt;/code&gt; (el mismo comportamiento que el comando &lt;code&gt;POSIX mkdir -p&lt;/code&gt; ), pero solo si el &amp;uacute;ltimo componente de ruta no es un archivo no directorio existente.</target>
        </trans-unit>
        <trans-unit id="9c76336e3b2bcc4c3ff147925ca8a2045da088d7" translate="yes" xml:space="preserve">
          <source>If the directory or file isn't there, you'll get an &lt;code&gt;IOError&lt;/code&gt; with an associated error number: &lt;code&gt;errno.ENOENT&lt;/code&gt; will point to the correct error number regardless of your platform. You can catch it if you want, for example:</source>
          <target state="translated">Si el directorio o el archivo no est&amp;aacute; all&amp;iacute;, obtendr&amp;aacute; un &lt;code&gt;IOError&lt;/code&gt; con un n&amp;uacute;mero de error asociado: &lt;code&gt;errno.ENOENT&lt;/code&gt; se&amp;ntilde;alar&amp;aacute; el n&amp;uacute;mero de error correcto independientemente de su plataforma. Puedes atraparlo si quieres, por ejemplo:</target>
        </trans-unit>
        <trans-unit id="47f877478b34abfa92dad52ab6be30c3ff05158b" translate="yes" xml:space="preserve">
          <source>If using Python 3.4, even though it comes with &lt;code&gt;pathlib&lt;/code&gt;, it is missing the useful &lt;code&gt;exist_ok&lt;/code&gt; option. The backport is intended to offer a newer and superior implementation of &lt;code&gt;mkdir&lt;/code&gt; which includes this missing option.</source>
          <target state="translated">Si usa Python 3.4, aunque viene con &lt;code&gt;pathlib&lt;/code&gt; , le falta la &amp;uacute;til opci&amp;oacute;n &lt;code&gt;exist_ok&lt;/code&gt; . El backport est&amp;aacute; destinado a ofrecer una implementaci&amp;oacute;n m&amp;aacute;s nueva y superior de &lt;code&gt;mkdir&lt;/code&gt; que incluye esta opci&amp;oacute;n que falta.</target>
        </trans-unit>
        <trans-unit id="f859712e9880cf77f7dea1b20c5921a1728a2543" translate="yes" xml:space="preserve">
          <source>If you can, install the current &lt;code&gt;pathlib&lt;/code&gt; backport named &lt;a href=&quot;https://pypi.python.org/pypi/pathlib2/&quot;&gt;&lt;code&gt;pathlib2&lt;/code&gt;&lt;/a&gt;. Do not install the older unmaintained backport named &lt;a href=&quot;https://pypi.python.org/pypi/pathlib/&quot;&gt;&lt;code&gt;pathlib&lt;/code&gt;&lt;/a&gt;. Next, refer to the Python 3.5+ section above and use it the same.</source>
          <target state="translated">Si puede, instale el backport &lt;code&gt;pathlib&lt;/code&gt; actual llamado &lt;a href=&quot;https://pypi.python.org/pypi/pathlib2/&quot;&gt; &lt;code&gt;pathlib2&lt;/code&gt; &lt;/a&gt; . No instale el backport sin mantenimiento anterior denominado &lt;a href=&quot;https://pypi.python.org/pypi/pathlib/&quot;&gt; &lt;code&gt;pathlib&lt;/code&gt; &lt;/a&gt; . A continuaci&amp;oacute;n, consulte la secci&amp;oacute;n Python 3.5+ anterior y &amp;uacute;sela igual.</target>
        </trans-unit>
        <trans-unit id="d3f798f5adf38af98cf182c37eab7725c5f2cb46" translate="yes" xml:space="preserve">
          <source>If you consider the following:</source>
          <target state="translated">Si consideras lo siguiente:</target>
        </trans-unit>
        <trans-unit id="39889263d487079852bb1c20c0aa134d99325643" translate="yes" xml:space="preserve">
          <source>If you have:</source>
          <target state="translated">Si es así:</target>
        </trans-unit>
        <trans-unit id="3d535b65e069fedb4050c6a2e3fdb6276eaaa0d0" translate="yes" xml:space="preserve">
          <source>If you need error handling:</source>
          <target state="translated">Si necesitas un manejo de errores:</target>
        </trans-unit>
        <trans-unit id="da4a9ca8792c5dc564c13bc23c48d1785b25767f" translate="yes" xml:space="preserve">
          <source>In &lt;strong&gt;Python2&lt;/strong&gt;, &lt;code&gt;os.makedirs&lt;/code&gt; doesn't support setting &lt;code&gt;exist_ok&lt;/code&gt;. You can use the approach in &lt;a href=&quot;https://stackoverflow.com/a/5032238/3109254&quot;&gt;heikki-toivonen's answer&lt;/a&gt;:</source>
          <target state="translated">En &lt;strong&gt;Python2&lt;/strong&gt; , &lt;code&gt;os.makedirs&lt;/code&gt; no admite la configuraci&amp;oacute;n &lt;code&gt;exist_ok&lt;/code&gt; . Puede usar el enfoque en &lt;a href=&quot;https://stackoverflow.com/a/5032238/3109254&quot;&gt;la respuesta de heikki-toivonen&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="8625861c30a24838ae98628bdb27d023a533c351" translate="yes" xml:space="preserve">
          <source>In &lt;strong&gt;Python3&lt;/strong&gt;, &lt;code&gt;os.makedirs&lt;/code&gt; supports setting &lt;code&gt;exist_ok&lt;/code&gt;. The default setting is &lt;code&gt;False&lt;/code&gt;, which means an &lt;code&gt;OSError&lt;/code&gt; will be raised if the target directory already exists. By setting &lt;code&gt;exist_ok&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;OSError&lt;/code&gt; (directory exists) will be ignored and the directory will not be created.</source>
          <target state="translated">En &lt;strong&gt;Python3&lt;/strong&gt; , &lt;code&gt;os.makedirs&lt;/code&gt; admite la configuraci&amp;oacute;n de &lt;code&gt;exist_ok&lt;/code&gt; . La configuraci&amp;oacute;n predeterminada es &lt;code&gt;False&lt;/code&gt; , lo que significa que se &lt;code&gt;OSError&lt;/code&gt; un OSError si el directorio de destino ya existe. Al establecer &lt;code&gt;exist_ok&lt;/code&gt; en &lt;code&gt;True&lt;/code&gt; , &lt;code&gt;OSError&lt;/code&gt; (el directorio existe) se ignorar&amp;aacute; y el directorio no se crear&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="5bc5e0146edc2ae08e3b66fbc6a7f8915debe013" translate="yes" xml:space="preserve">
          <source>In Python 3.4 you can also use the &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html&quot;&gt;brand new &lt;code&gt;pathlib&lt;/code&gt; module&lt;/a&gt;:</source>
          <target state="translated">En Python 3.4 tambi&amp;eacute;n puede usar el &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html&quot;&gt;nuevo m&amp;oacute;dulo &lt;code&gt;pathlib&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="3b0312661232fca3e0cc2f2d4f7b9512298dd650" translate="yes" xml:space="preserve">
          <source>In other words, we try to create the directories, but if they already exist we ignore the error. On the other hand, any other error gets reported. For example, if you create dir 'a' beforehand and remove all permissions from it, you will get an &lt;code&gt;OSError&lt;/code&gt; raised with &lt;code&gt;errno.EACCES&lt;/code&gt; (Permission denied, error 13).</source>
          <target state="translated">En otras palabras, intentamos crear los directorios, pero si ya existen ignoramos el error. Por otro lado, se informa cualquier otro error. Por ejemplo, si crea el directorio 'a' de antemano y elimina todos los permisos, obtendr&amp;aacute; un &lt;code&gt;OSError&lt;/code&gt; con &lt;code&gt;errno.EACCES&lt;/code&gt; (Permiso denegado, error 13).</target>
        </trans-unit>
        <trans-unit id="bc2cb7f7490dce0c4ecef3917af3d76415cc76ab" translate="yes" xml:space="preserve">
          <source>In situations where portability doesn't matter (ex, using docker) the solution is a clean 2 lines. You also don't have to add logic to check if directories exist or not. Finally, it is safe to re-run without any side effects</source>
          <target state="translated">En situaciones en las que la portabilidad no importa (por ejemplo,usando el docker)la solución es una limpia 2 líneas.Tampoco tienes que añadir lógica para comprobar si los directorios existen o no.Finalmente,es seguro volver a ejecutar sin ningún efecto secundario</target>
        </trans-unit>
        <trans-unit id="f57111a438a1422cc4a9a213182fba093c5300a3" translate="yes" xml:space="preserve">
          <source>In this case, we probably aren't facing any race conditions. So just do as you were, but note that for writing, you need to open with the &lt;code&gt;w&lt;/code&gt; mode (or &lt;code&gt;a&lt;/code&gt; to append). It's also a Python best practice to use the context manager for opening files.</source>
          <target state="translated">En este caso, probablemente no enfrentamos ninguna condici&amp;oacute;n de carrera. As&amp;iacute; que haz lo que eras, pero ten en cuenta que para escribir, debes abrir con el modo &lt;code&gt;w&lt;/code&gt; (o &lt;code&gt;a&lt;/code&gt; para agregar). Tambi&amp;eacute;n es una mejor pr&amp;aacute;ctica de Python usar el administrador de contexto para abrir archivos.</target>
        </trans-unit>
        <trans-unit id="7bac4e71dafd67ff58d4f3cd38dc5a8e3db6a7a5" translate="yes" xml:space="preserve">
          <source>Insights on the specifics of this situation</source>
          <target state="translated">La comprensión de los detalles de esta situación</target>
        </trans-unit>
        <trans-unit id="94a86bef186f48282460ed5f521d706d87bb14f7" translate="yes" xml:space="preserve">
          <source>Is there a flag for &quot;open&quot;, that makes this happen automatically?</source>
          <target state="translated">¿Hay una bandera para &quot;abierto&quot;,que hace que esto suceda automáticamente?</target>
        </trans-unit>
        <trans-unit id="53a6078a60c2df8b65bf5650f02981b382340f9c" translate="yes" xml:space="preserve">
          <source>It prompts users for input of the directory and can be easily modified.</source>
          <target state="translated">Solicita a los usuarios que introduzcan el directorio y puede ser modificado fácilmente.</target>
        </trans-unit>
        <trans-unit id="2c98cd5e104877c93e7679c628c3a41a50e08e7f" translate="yes" xml:space="preserve">
          <source>It works for Python 2 and 3.</source>
          <target state="translated">Funciona para Python 2 y 3.</target>
        </trans-unit>
        <trans-unit id="7da5e505d3b9d04e82715fd31962bc7254adf01d" translate="yes" xml:space="preserve">
          <source>Just attempt to open the file.</source>
          <target state="translated">Sólo intenta abrir el archivo.</target>
        </trans-unit>
        <trans-unit id="ffb042fc6fd8ec1e8c1ccfc1c371d7c8a49dd347" translate="yes" xml:space="preserve">
          <source>Modern versions of Python improve this code quite a bit, both by exposing &lt;a href=&quot;https://docs.python.org/3.3/library/exceptions.html?#FileExistsError&quot;&gt;&lt;code&gt;FileExistsError&lt;/code&gt;&lt;/a&gt; (in 3.3+)...</source>
          <target state="translated">Las versiones modernas de Python mejoran bastante este c&amp;oacute;digo, tanto al exponer &lt;a href=&quot;https://docs.python.org/3.3/library/exceptions.html?#FileExistsError&quot;&gt; &lt;code&gt;FileExistsError&lt;/code&gt; &lt;/a&gt; (en 3.3+) ...</target>
        </trans-unit>
        <trans-unit id="55638ec05de3f80638e1e9ba3970e3a5f900619e" translate="yes" xml:space="preserve">
          <source>New in Python 3.5: &lt;code&gt;pathlib.Path&lt;/code&gt; with &lt;code&gt;exist_ok&lt;/code&gt;</source>
          <target state="translated">Nuevo en Python 3.5: &lt;code&gt;pathlib.Path&lt;/code&gt; con &lt;code&gt;exist_ok&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9a44c5e1ab9cdaaa3baa8a75f9dca9b73072610" translate="yes" xml:space="preserve">
          <source>Note that capturing the exception and using &lt;code&gt;errno&lt;/code&gt; is of limited usefulness because &lt;code&gt;OSError: [Errno 17] File exists&lt;/code&gt;, i.e. &lt;code&gt;errno.EEXIST&lt;/code&gt;, is raised for both files and directories. It is more reliable simply to check if the directory exists.</source>
          <target state="translated">Tenga en cuenta que capturar la excepci&amp;oacute;n y usar &lt;code&gt;errno&lt;/code&gt; es de utilidad limitada porque &lt;code&gt;OSError: [Errno 17] File exists&lt;/code&gt; , es decir, &lt;code&gt;errno.EEXIST&lt;/code&gt; , se genera para archivos y directorios. Es m&amp;aacute;s confiable simplemente verificar si el directorio existe.</target>
        </trans-unit>
        <trans-unit id="7a148cef5cbd02be1bd31d991f8041fdbd60ae6b" translate="yes" xml:space="preserve">
          <source>Note that it will create the ancestor directories as well.</source>
          <target state="translated">Tengan en cuenta que también creará los directorios de los ancestros.</target>
        </trans-unit>
        <trans-unit id="82ccbd2ecaf0605297a7236e42508b9b3d15fdd4" translate="yes" xml:space="preserve">
          <source>Now as I say, this is not really foolproof, because we have the possiblity of failing to create the directory, and another process creating it during that period.</source>
          <target state="translated">Ahora bien,como digo,esto no es realmente a prueba de tontos,porque tenemos la posibilidad de fallar en la creación del directorio,y otro proceso de creación durante ese período.</target>
        </trans-unit>
        <trans-unit id="3e1d25d6194016ea62683fc16ffea1c40c3692d1" translate="yes" xml:space="preserve">
          <source>On Python &amp;ge; 3.5, use &lt;a href=&quot;https://docs.python.org/library/pathlib.html#pathlib.Path.mkdir&quot;&gt;&lt;code&gt;pathlib.Path.mkdir&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">En Python &amp;ge; 3.5, use &lt;a href=&quot;https://docs.python.org/library/pathlib.html#pathlib.Path.mkdir&quot;&gt; &lt;code&gt;pathlib.Path.mkdir&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="e2ca98d5312a1b512bc5c2fe3a1c52f2cf022ea3" translate="yes" xml:space="preserve">
          <source>One option would be to trap the &lt;code&gt;OSError&lt;/code&gt; and examine the embedded error code (see &lt;a href=&quot;https://stackoverflow.com/questions/273698/is-there-a-cross-platform-way-of-getting-information-from-pythons-oserror&quot;&gt;Is there a cross-platform way of getting information from Python&amp;rsquo;s OSError&lt;/a&gt;):</source>
          <target state="translated">Una opci&amp;oacute;n ser&amp;iacute;a atrapar el &lt;code&gt;OSError&lt;/code&gt; y examinar el c&amp;oacute;digo de error incrustado (consulte &lt;a href=&quot;https://stackoverflow.com/questions/273698/is-there-a-cross-platform-way-of-getting-information-from-pythons-oserror&quot;&gt;&amp;iquest;Hay una forma multiplataforma de obtener informaci&amp;oacute;n del OSError de Python?&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="5c5f8f0eeaea28800db9b820b5fbb8284e30bc53" translate="yes" xml:space="preserve">
          <source>Per &lt;a href=&quot;http://bugs.python.org/issue10948&quot;&gt;Bug 10948&lt;/a&gt;, a severe limitation of this alternative is that it works only once per python process for a given path. In other words, if you use it to create a directory, then delete the directory from inside or outside Python, then use &lt;code&gt;mkpath&lt;/code&gt; again to recreate the same directory, &lt;code&gt;mkpath&lt;/code&gt; will simply silently use its invalid cached info of having previously created the directory, and will not actually make the directory again. In contrast, &lt;code&gt;os.makedirs&lt;/code&gt; doesn't rely on any such cache. This limitation may be okay for some applications.</source>
          <target state="translated">Seg&amp;uacute;n el &lt;a href=&quot;http://bugs.python.org/issue10948&quot;&gt;error 10948&lt;/a&gt; , una limitaci&amp;oacute;n severa de esta alternativa es que funciona solo una vez por proceso de Python para una ruta determinada. En otras palabras, si lo usa para crear un directorio, luego elimine el directorio desde dentro o fuera de Python, luego use &lt;code&gt;mkpath&lt;/code&gt; nuevamente para recrear el mismo directorio, &lt;code&gt;mkpath&lt;/code&gt; simplemente usar&amp;aacute; en silencio su informaci&amp;oacute;n en cach&amp;eacute; no v&amp;aacute;lida de haber creado previamente el directorio, y en realidad no volver&amp;aacute; a hacer el directorio. Por el contrario, &lt;code&gt;os.makedirs&lt;/code&gt; no se basa en tal cach&amp;eacute;. Esta limitaci&amp;oacute;n puede estar bien para algunas aplicaciones.</target>
        </trans-unit>
        <trans-unit id="b714db9ab64cbcc0558c99fdae141bb4bffeba79" translate="yes" xml:space="preserve">
          <source>Perhaps Pandas should be updated to accept instances of the abstract base class, &lt;code&gt;os.PathLike&lt;/code&gt;.</source>
          <target state="translated">Quiz&amp;aacute;s Pandas deber&amp;iacute;a actualizarse para aceptar instancias de la clase base abstracta, &lt;code&gt;os.PathLike&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8b6b264b5910f832bc73c8e3c67b2e6cac151a2" translate="yes" xml:space="preserve">
          <source>Python 2.7+:</source>
          <target state="translated">Python 2.7+:</target>
        </trans-unit>
        <trans-unit id="9dc5b6e19a47dc56fe4767ef1ee75046725962d3" translate="yes" xml:space="preserve">
          <source>Python 3.2+:</source>
          <target state="translated">Python 3.2+:</target>
        </trans-unit>
        <trans-unit id="b6c7cbad30d0e4fcc82218434d4da66a329f0f4c" translate="yes" xml:space="preserve">
          <source>Python 3.5+:</source>
          <target state="translated">Python 3.5+:</target>
        </trans-unit>
        <trans-unit id="99ea9cce0004a02a19d071bb0d88263b0cdffab9" translate="yes" xml:space="preserve">
          <source>Should do the trick on most systems.</source>
          <target state="translated">Debería funcionar en la mayoría de los sistemas.</target>
        </trans-unit>
        <trans-unit id="2528b184172d909d0a003be1f5b82244c09b314c" translate="yes" xml:space="preserve">
          <source>Somehow, I missed &lt;code&gt;os.path.exists&lt;/code&gt; (thanks kanja, Blair, and Douglas). This is what I have now:</source>
          <target state="translated">De alguna manera, extra&amp;ntilde;&amp;eacute; &lt;code&gt;os.path.exists&lt;/code&gt; (gracias kanja, Blair y Douglas). Esto es lo que tengo ahora:</target>
        </trans-unit>
        <trans-unit id="741c763ee51bfb7f42f00814eb975dcae82f7c3a" translate="yes" xml:space="preserve">
          <source>Starting from Python 3.5, &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path.mkdir&quot;&gt;&lt;code&gt;pathlib.Path.mkdir&lt;/code&gt;&lt;/a&gt; has an &lt;code&gt;exist_ok&lt;/code&gt; flag:</source>
          <target state="translated">A partir de Python 3.5, &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path.mkdir&quot;&gt; &lt;code&gt;pathlib.Path.mkdir&lt;/code&gt; &lt;/a&gt; tiene un indicador &lt;code&gt;exist_ok&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f5b3a30e36f4f71f626659831f64892222b27ac9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/2/library/os.html#files-and-directories&quot;&gt;relevant Python documentation&lt;/a&gt; suggests the use of the &lt;a href=&quot;https://docs.python.org/2/library/os.html#files-and-directories&quot;&gt;EAFP coding style (Easier to Ask for Forgiveness than Permission)&lt;/a&gt;. This means that the code</source>
          <target state="translated">La &lt;a href=&quot;https://docs.python.org/2/library/os.html#files-and-directories&quot;&gt;documentaci&amp;oacute;n relevante de Python&lt;/a&gt; sugiere el uso del &lt;a href=&quot;https://docs.python.org/2/library/os.html#files-and-directories&quot;&gt;estilo de codificaci&amp;oacute;n EAFP (m&amp;aacute;s f&amp;aacute;cil pedir perd&amp;oacute;n que permiso)&lt;/a&gt; . Esto significa que el c&amp;oacute;digo</target>
        </trans-unit>
        <trans-unit id="4f2cb7d89de589f8b7b4be46373643c7fc94a4a6" translate="yes" xml:space="preserve">
          <source>The direct answer to this is, assuming a simple situation where you don't expect other users or processes to be messing with your directory:</source>
          <target state="translated">La respuesta directa a esto es,asumiendo una situación simple en la que no esperas que otros usuarios o procesos se metan con tu directorio:</target>
        </trans-unit>
        <trans-unit id="4710e08c1ac50234e9a8f275e35d17b272a4422c" translate="yes" xml:space="preserve">
          <source>The documentation suggests this exactly because of the race condition discussed in this question. In addition, as others mention here, there is a performance advantage in querying once instead of twice the OS. Finally, the argument placed forward, potentially, in favour of the second code in some cases --when the developer knows the environment the application is running-- can only be advocated in the special case that the program has set up a private environment for itself (and other instances of the same program).</source>
          <target state="translated">La documentación sugiere esto exactamente por la condición de la raza discutida en esta pregunta.Además,como otros mencionan aquí,hay una ventaja de rendimiento al consultar una vez en lugar de dos veces el sistema operativo.Por último,el argumento que se plantea,potencialmente,a favor del segundo código en algunos casos -cuando el desarrollador conoce el entorno en el que se ejecuta la aplicación-sólo puede defenderse en el caso especial de que el programa haya establecido un entorno privado para sí mismo (y otras instancias del mismo programa).</target>
        </trans-unit>
        <trans-unit id="e70e2a42fc247116f91a4df146bd9f5fac1c216a" translate="yes" xml:space="preserve">
          <source>Then I idempotently ensure the directory exists - the &lt;code&gt;exist_ok&lt;/code&gt; argument shows up in Python 3.5:</source>
          <target state="translated">Luego, me aseguro de que el directorio existe: el argumento &lt;code&gt;exist_ok&lt;/code&gt; aparece en Python 3.5:</target>
        </trans-unit>
        <trans-unit id="33ca90387ef8d91e4035a5b4710c91811fb051a1" translate="yes" xml:space="preserve">
          <source>There's a new &lt;code&gt;Path&lt;/code&gt; object (as of 3.4) with lots of methods one would want to use with paths - one of which is &lt;code&gt;mkdir&lt;/code&gt;.</source>
          <target state="translated">Hay un nuevo objeto &lt;code&gt;Path&lt;/code&gt; (a partir de 3.4) con muchos m&amp;eacute;todos que uno desear&amp;iacute;a usar con los caminos, uno de los cuales es &lt;code&gt;mkdir&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="657d6466f2c29036b521dba710de96bf6626c3f1" translate="yes" xml:space="preserve">
          <source>This is &lt;em&gt;probably&lt;/em&gt; what you're wanting.</source>
          <target state="translated">Esto es &lt;em&gt;probablemente&lt;/em&gt; lo que quieres.</target>
        </trans-unit>
        <trans-unit id="a27e3016628be07b12b5296742271d571bf02444" translate="yes" xml:space="preserve">
          <source>This recursively creates the directory and does not raise an exception if the directory already exists.</source>
          <target state="translated">Esto crea recursivamente el directorio y no plantea una excepción si el directorio ya existe.</target>
        </trans-unit>
        <trans-unit id="57735e971e5d9abfe4e85a53e5b3fbec952b4ecf" translate="yes" xml:space="preserve">
          <source>This will check if the file is there if it is not then it will create it.</source>
          <target state="translated">Esto comprobará si el archivo está ahí,si no lo está,entonces lo creará.</target>
        </trans-unit>
        <trans-unit id="aa2b9eba9ec58ac7050dd1d51ea5c53f1d30b5db" translate="yes" xml:space="preserve">
          <source>This works for me and hopefully, it will works for you as well</source>
          <target state="translated">Esto funciona para mí y espero que funcione para ti también.</target>
        </trans-unit>
        <trans-unit id="7c2148bdc16b268a891d8a64e49184d47d3abb20" translate="yes" xml:space="preserve">
          <source>To handle the fact the directory might exist, catch &lt;code&gt;OSError&lt;/code&gt;.
(If &lt;code&gt;exist_ok&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt; (the default), an &lt;code&gt;OSError&lt;/code&gt; is raised if the target directory already exists.)</source>
          <target state="translated">Para manejar el hecho de que el directorio podr&amp;iacute;a existir, captura &lt;code&gt;OSError&lt;/code&gt; . (Si &lt;code&gt;exist_ok&lt;/code&gt; es &lt;code&gt;False&lt;/code&gt; (el valor predeterminado), se &lt;code&gt;OSError&lt;/code&gt; un error OSError si el directorio de destino ya existe).</target>
        </trans-unit>
        <trans-unit id="413520a3e50df142a8c05148995fafc683b360a4" translate="yes" xml:space="preserve">
          <source>Try &lt;a href=&quot;https://docs.python.org/library/os.path.html#os.path.exists&quot;&gt;&lt;code&gt;os.path.exists&lt;/code&gt;&lt;/a&gt;, and consider &lt;a href=&quot;https://docs.python.org/library/os.html#os.makedirs&quot;&gt;&lt;code&gt;os.makedirs&lt;/code&gt;&lt;/a&gt; for the creation.</source>
          <target state="translated">Pruebe &lt;a href=&quot;https://docs.python.org/library/os.path.html#os.path.exists&quot;&gt; &lt;code&gt;os.path.exists&lt;/code&gt; &lt;/a&gt; y considere &lt;a href=&quot;https://docs.python.org/library/os.html#os.makedirs&quot;&gt; &lt;code&gt;os.makedirs&lt;/code&gt; &lt;/a&gt; para la creaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d3a86694ded81c408581f5b397aed6145c4f9368" translate="yes" xml:space="preserve">
          <source>Try the &lt;a href=&quot;https://docs.python.org/2/library/os.path.html#os.path.exists&quot;&gt;&lt;code&gt;os.path.exists&lt;/code&gt;&lt;/a&gt; function</source>
          <target state="translated">Pruebe la funci&amp;oacute;n &lt;a href=&quot;https://docs.python.org/2/library/os.path.html#os.path.exists&quot;&gt; &lt;code&gt;os.path.exists&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d93092b9342d22e87a8ef4100a56936800ce7a2c" translate="yes" xml:space="preserve">
          <source>Use this command check and create dir</source>
          <target state="translated">Use este comando comprobar y crear dir</target>
        </trans-unit>
        <trans-unit id="525d8f8ad87a61e4610250dc956442abe1b9c698" translate="yes" xml:space="preserve">
          <source>Using try except and the right error code from errno module gets rid of the race condition and is cross-platform:</source>
          <target state="translated">Usando &quot;try except and the right error code&quot; del módulo de errno se deshace de la condición de carrera y se cruza con la plataforma:</target>
        </trans-unit>
        <trans-unit id="917f074e5df4ab35c7e80d23c79df3c2ec82b36f" translate="yes" xml:space="preserve">
          <source>We don't have to deal with &lt;code&gt;os.path.join&lt;/code&gt; now - just join path parts with a &lt;code&gt;/&lt;/code&gt;:</source>
          <target state="translated">No tenemos que lidiar con &lt;code&gt;os.path.join&lt;/code&gt; ahora, solo une partes de ruta con un &lt;code&gt;/&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="99ce28997107d476e9fc3a63d0852739434e0296" translate="yes" xml:space="preserve">
          <source>We want to avoid overwriting the builtin function, &lt;code&gt;dir&lt;/code&gt;. Also, &lt;code&gt;filepath&lt;/code&gt; or perhaps &lt;code&gt;fullfilepath&lt;/code&gt; is probably a better semantic name than &lt;code&gt;filename&lt;/code&gt; so this would be better written:</source>
          <target state="translated">Queremos evitar sobrescribir la funci&amp;oacute;n incorporada, &lt;code&gt;dir&lt;/code&gt; . Adem&amp;aacute;s, &lt;code&gt;filepath&lt;/code&gt; o quiz&amp;aacute;s &lt;code&gt;fullfilepath&lt;/code&gt; es probablemente un nombre sem&amp;aacute;ntico mejor que el nombre de &lt;code&gt;filename&lt;/code&gt; por lo que esto estar&amp;iacute;a mejor escrito:</target>
        </trans-unit>
        <trans-unit id="a1a9dedb1be746f42e86f1ff0f02a289d4ab1d3a" translate="yes" xml:space="preserve">
          <source>What is the most elegant way to check if the directory a file is going to be written to exists, and if not, create the directory using Python? Here is what I tried:</source>
          <target state="translated">¿Cuál es la forma más elegante de comprobar si el directorio en el que se va a escribir un archivo existe,y si no,crear el directorio usando Python? Esto es lo que intenté:</target>
        </trans-unit>
        <trans-unit id="d28058b7ba10d7c6fe4a05256f5ed97045c03268" translate="yes" xml:space="preserve">
          <source>Where your code here is use the (touch) command</source>
          <target state="translated">Donde está tu código aquí,usa el comando (táctil)</target>
        </trans-unit>
        <trans-unit id="f2e23ce686569ad8350733206c7706eea07f3673" translate="yes" xml:space="preserve">
          <source>While a naive solution may first use &lt;a href=&quot;https://docs.python.org/2/library/os.path.html#os.path.isdir&quot;&gt;&lt;code&gt;os.path.isdir&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;https://docs.python.org/2/library/os.html#os.makedirs&quot;&gt;&lt;code&gt;os.makedirs&lt;/code&gt;&lt;/a&gt;, the solution above reverses the order of the two operations. In doing so, it prevents a common race condition having to do with a duplicated attempt at creating the directory, and also disambiguates files from directories.</source>
          <target state="translated">Mientras que una soluci&amp;oacute;n ingenua puede usar primero &lt;a href=&quot;https://docs.python.org/2/library/os.path.html#os.path.isdir&quot;&gt; &lt;code&gt;os.path.isdir&lt;/code&gt; &lt;/a&gt; seguido de &lt;a href=&quot;https://docs.python.org/2/library/os.html#os.makedirs&quot;&gt; &lt;code&gt;os.makedirs&lt;/code&gt; &lt;/a&gt; , la soluci&amp;oacute;n anterior invierte el orden de las dos operaciones. Al hacerlo, evita que una condici&amp;oacute;n de carrera com&amp;uacute;n tenga que ver con un intento duplicado de crear el directorio, y tambi&amp;eacute;n desambigua los archivos de los directorios.</target>
        </trans-unit>
        <trans-unit id="ac34cea4b6ca681e86fcb74a12d4d027962a4177" translate="yes" xml:space="preserve">
          <source>Why not use subprocess module if running on a machine that supports command 
&lt;code&gt;mkdir&lt;/code&gt; with &lt;code&gt;-p&lt;/code&gt; option ? 
Works on python 2.7 and python 3.6</source>
          <target state="translated">&amp;iquest;Por qu&amp;eacute; no usar el m&amp;oacute;dulo de subproceso si se ejecuta en una m&amp;aacute;quina que admite el comando &lt;code&gt;mkdir&lt;/code&gt; con la opci&amp;oacute;n &lt;code&gt;-p&lt;/code&gt; ? Funciona en python 2.7 y python 3.6</target>
        </trans-unit>
        <trans-unit id="e4777a61e82b0ede8c278f3167a642217b27846d" translate="yes" xml:space="preserve">
          <source>Why would you make a directory for a file that you expect to be there and be able to read?</source>
          <target state="translated">¿Por qué harías un directorio para un archivo que esperas que esté ahí y que puedas leer?</target>
        </trans-unit>
        <trans-unit id="614d7fe50ef625fdc00076885ef6a0958e2074f3" translate="yes" xml:space="preserve">
          <source>With regard to the directory's &lt;em&gt;mode&lt;/em&gt;, please refer to the documentation if you care about it.</source>
          <target state="translated">Con respecto al &lt;em&gt;modo&lt;/em&gt; del directorio, consulte la documentaci&amp;oacute;n si le interesa.</target>
        </trans-unit>
        <trans-unit id="2733f4de239159b7954ae10717a9de4a0d8f2130" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://docs.python.org/2/distutils/apiref.html#distutils.dir_util.mkpath&quot;&gt;&lt;code&gt;mkpath&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Puedes usar &lt;a href=&quot;https://docs.python.org/2/distutils/apiref.html#distutils.dir_util.mkpath&quot;&gt; &lt;code&gt;mkpath&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06628bc05e1d54f41341f98d20675258e87615f8" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;os.listdir&lt;/code&gt; for this:</source>
          <target state="translated">Puede usar &lt;code&gt;os.listdir&lt;/code&gt; para esto:</target>
        </trans-unit>
        <trans-unit id="7cf103c255fa677ea9f423097c9a44c5cfe7a020" translate="yes" xml:space="preserve">
          <source>You give a particular file at a certain path and you pull the directory from the file path. Then after making sure you have the directory, you attempt to open a file for reading. To comment on this code:</source>
          <target state="translated">Das un archivo en particular en una determinada ruta y sacas el directorio de la ruta del archivo.Luego,después de asegurarse de que tienes el directorio,intentas abrir un archivo para leerlo.Para comentar este código:</target>
        </trans-unit>
        <trans-unit id="6052af5853fd347b0aeab05bc6bcc4f07874858c" translate="yes" xml:space="preserve">
          <source>You have to set the full path before creating the directory:</source>
          <target state="translated">Tienes que establecer la ruta completa antes de crear el directorio:</target>
        </trans-unit>
        <trans-unit id="56d28d9565a39da08aca1caa9e22049b44a768f3" translate="yes" xml:space="preserve">
          <source>Your end goal is to open this file, you initially state, for writing, but you're essentially approaching this goal (based on your code) like this, which opens the file for &lt;strong&gt;reading&lt;/strong&gt;:</source>
          <target state="translated">Su objetivo final es abrir este archivo, inicialmente declara, para escribir, pero esencialmente se est&amp;aacute; acercando a este objetivo (basado en su c&amp;oacute;digo) de esta manera, que abre el archivo para &lt;strong&gt;leer&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="0c7364050c5331f5b0b43cbfbb9de956a1867c02" translate="yes" xml:space="preserve">
          <source>[1] &lt;a href=&quot;https://stackoverflow.com/questions/273192/how-can-i-create-a-directory-if-it-does-not-exist&quot;&gt;How can I create a directory if it does not exist?&lt;/a&gt;</source>
          <target state="translated">[1] &lt;a href=&quot;https://stackoverflow.com/questions/273192/how-can-i-create-a-directory-if-it-does-not-exist&quot;&gt;&amp;iquest;C&amp;oacute;mo puedo crear un directorio si no existe?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="549fd39871f5892c4092cced01f37a74c23c77cc" translate="yes" xml:space="preserve">
          <source>[2] &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.makedirs&quot;&gt;https://docs.python.org/3/library/os.html#os.makedirs&lt;/a&gt;</source>
          <target state="translated">[2] &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.makedirs&quot;&gt;https://docs.python.org/3/library/os.html#os.makedirs&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ac45d7f4ee3550c6ad3415c9a62ec084feb6538" translate="yes" xml:space="preserve">
          <source>is better than the alternative</source>
          <target state="translated">es mejor que la alternativa</target>
        </trans-unit>
        <trans-unit id="32133da69c38d6a432b2087ec0dfe35d3e89bf02" translate="yes" xml:space="preserve">
          <source>means a directory (path) exists AND is a directory. So for me this way does what I need. So I can make sure it is folder (not a file) and exists.</source>
          <target state="translated">significa que existe un directorio (ruta)Y es un directorio.Así que para mí este camino hace lo que necesito.Así puedo asegurarme de que es una carpeta (no un archivo)y existe.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
