<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/2784514">
    <body>
      <group id="2784514">
        <trans-unit id="92393e3fdb5622d3aa0b6bdb355b190e165939cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Class Implementation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Implementaci&amp;oacute;n de clase&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3bcd6632234ee93c91ef6ca75c00d0f68eed0b08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Option 1:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Opci&amp;oacute;n 1:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f1350091078d56de73da3c8449f8012ca56e543e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Option 2:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Opcion 2:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d883f0415c22e24211ffce7d9325206a16dcdc8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sort Iterative&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ordenar iterativo&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c1919f83e52d636a6e40d7874469ca24b22e7c20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sort with lambda&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ordenar con lambda&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2151277b265a91a0fe94cfaded74d24e5b02b5de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sort&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Sort&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e6e85c427497d1dd60314a4c8aea08c51669112" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;You can Sort using  java 8&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puedes ordenar usando java 8&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0718e70a135e4a473185db7fe7d792be4e20de0e" translate="yes" xml:space="preserve">
          <source>A negative number indicates that &lt;strong&gt;this&lt;/strong&gt; is smaller than the object being compared to. A positive number indicates that &lt;strong&gt;this&lt;/strong&gt; is larger than the compared to object and a Zero means that the objects are equal.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un n&amp;uacute;mero negativo indica que &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;este&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es menor que el objeto que est&amp;aacute; siendo comparado con. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un n&amp;uacute;mero positivo indica que &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;esto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es mayor que el objeto comparado con el objeto y un cero significa que los objetos son iguales.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5480c1edc0c17397da2b294c5a20844be2e9b163" translate="yes" xml:space="preserve">
          <source>A slightly shorter way to write all this, if you don't need to reuse your comparator, is to write it as an inline anonymous class:</source>
          <target state="translated">Una forma un poco más corta de escribir todo esto,si no necesitas reutilizar tu comparador,es escribirlo como una clase anónima en línea:</target>
        </trans-unit>
        <trans-unit id="4b153adf3bae060e0dc1d33b61d6885d630a7fb4" translate="yes" xml:space="preserve">
          <source>All of these are equivalent forms.</source>
          <target state="translated">Todas estas son formas equivalentes.</target>
        </trans-unit>
        <trans-unit id="d0b70b5b12051ee98177db80debdaa166822aaa4" translate="yes" xml:space="preserve">
          <source>And &lt;code&gt;List&lt;/code&gt; has a &lt;a href=&quot;//docs.oracle.com/javase/8/docs/api/java/util/List.html#sort-java.util.Comparator-&quot;&gt;&lt;code&gt;sort(Comparator)&lt;/code&gt;&lt;/a&gt; method, so you can shorten this even further:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;List&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;//docs.oracle.com/javase/8/docs/api/java/util/List.html#sort-java.util.Comparator-&quot;&gt; &lt;code&gt;sort(Comparator)&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , por lo que puede acortar esto a&amp;uacute;n m&amp;aacute;s:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="adb45567f6225f012bcac97b74ac164c535c6e63" translate="yes" xml:space="preserve">
          <source>Another way is</source>
          <target state="translated">Otra forma es</target>
        </trans-unit>
        <trans-unit id="01d3f27a2736af5a2e3f3d4043dc6769a2d7df75" translate="yes" xml:space="preserve">
          <source>Best easy way with JAVA 8 is for English Alphabetic sort</source>
          <target state="translated">La mejor manera fácil con JAVA 8 es para el tipo alfabético inglés</target>
        </trans-unit>
        <trans-unit id="67fe5362039b7f051d7b4f942a784a7533cade43" translate="yes" xml:space="preserve">
          <source>Both of these interfaces allow for different behavior.  Comparable allows you to make the object act like you just described Strings (in fact, String implements Comparable).  The second, Comparator, allows you to do what you are asking to do.  You would do it like this:</source>
          <target state="translated">Ambas interfaces permiten un comportamiento diferente.Comparable permite hacer que el objeto actúe como acabas de describir a Strings (de hecho,String implementa Comparable).La segunda,Comparable,te permite hacer lo que estás pidiendo hacer.Lo harías así:</target>
        </trans-unit>
        <trans-unit id="238a7e619fb6a22e331630932ec55dfd4ff5c616" translate="yes" xml:space="preserve">
          <source>Classes that has a natural sort order (a class Number, as an example) should implement the Comparable interface, whilst classes that has no natural sort order (a class Chair, as an example) should be provided with a Comparator (or an anonymous Comparator class).</source>
          <target state="translated">Las clases que tienen un orden de clasificación natural (un Número de clase,por ejemplo)deben implementar la interfaz del Comparador,mientras que las clases que no tienen un orden de clasificación natural (una Silla de clase,por ejemplo)deben disponer de un Comparador (o una clase de Comparador anónimo).</target>
        </trans-unit>
        <trans-unit id="362adab9441c38483406b7f0eb06ada22160dfbd" translate="yes" xml:space="preserve">
          <source>For Java 8:</source>
          <target state="translated">Para Java 8:</target>
        </trans-unit>
        <trans-unit id="7a2950d679c878453fdafe599de2830b6fed1742" translate="yes" xml:space="preserve">
          <source>For sorting an &lt;code&gt;ArrayList&lt;/code&gt; you could use the following code snippet:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para ordenar una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ArrayList&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; puede usar el siguiente fragmento de c&amp;oacute;digo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="69c49e107fe2066008c5e771f74cfb2d4b59d85c" translate="yes" xml:space="preserve">
          <source>From &lt;code&gt;Java 8&lt;/code&gt; and onward we don't have to use &lt;code&gt;Collections.sort()&lt;/code&gt; directly. &lt;code&gt;List&lt;/code&gt; interface has a default &lt;code&gt;sort()&lt;/code&gt; method:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Desde &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Java 8&lt;/code&gt; en&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; adelante no tenemos que usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Collections.sort()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; directamente. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;List&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; interfaz de &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lista&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sort()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; predeterminado &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7809118372360e46b31a0912eff25d4a06dfba82" translate="yes" xml:space="preserve">
          <source>Function &amp;amp; method reference</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Referencia de funci&amp;oacute;n y m&amp;eacute;todo&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d7e0479fa3974e2bf526c6fe7611cac47325994" translate="yes" xml:space="preserve">
          <source>Here is a code snippet which demonstrates the List.sort() feature:</source>
          <target state="translated">Aquí hay un fragmento de código que demuestra la función List.sort():</target>
        </trans-unit>
        <trans-unit id="fd815557342b9070f45c5b9049b8f9a7a4e0e0c4" translate="yes" xml:space="preserve">
          <source>Here you have an example:</source>
          <target state="translated">Aquí tienes un ejemplo:</target>
        </trans-unit>
        <trans-unit id="2c3dd0368d8fb5535e82f4f59ef3b62ba79a3b57" translate="yes" xml:space="preserve">
          <source>I found most if not all of these answers rely on the underlying class (Object) to implement comparable or to have a helper comparable interface.</source>
          <target state="translated">Encontré que la mayoría de estas respuestas,si no todas,se basan en la clase subyacente (Objeto)para implementar una interfaz comparable o para tener una interfaz comparable de ayuda.</target>
        </trans-unit>
        <trans-unit id="d923b169ecb946163b486e7d87d0d4b5c13650df" translate="yes" xml:space="preserve">
          <source>I prefer this process:</source>
          <target state="translated">Prefiero este proceso:</target>
        </trans-unit>
        <trans-unit id="4b38417d46520a1941d5fd4e06e17fad8d797b03" translate="yes" xml:space="preserve">
          <source>I read about sorting ArrayLists using a Comparator but in all of the examples people used &lt;code&gt;compareTo&lt;/code&gt; which according to some research is a method for Strings.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Le&amp;iacute; sobre c&amp;oacute;mo ordenar ArrayLists usando un comparador, pero en todos los ejemplos la gente us&amp;oacute; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;compareTo&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que seg&amp;uacute;n algunas investigaciones es un m&amp;eacute;todo para Strings.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b5d03fccc6ba18bde9dd0aba1bb74b3da1785af" translate="yes" xml:space="preserve">
          <source>I wanted to sort an ArrayList of custom objects by one of their properties: a Date object
(&lt;code&gt;getStartDay()&lt;/code&gt;). Normally I compare them by &lt;code&gt;item1.getStartDate().before(item2.getStartDate())&lt;/code&gt; so I was wondering whether I could write something like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Quer&amp;iacute;a ordenar una ArrayList de objetos personalizados por una de sus propiedades: un objeto Date ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;getStartDay()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Normalmente los comparo por &lt;/font&gt;&lt;/font&gt; &lt;code&gt;item1.getStartDate().before(item2.getStartDate())&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; as&amp;iacute; que me preguntaba si podr&amp;iacute;a escribir algo como:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4e9c7ca3cba63f88a7f2beb9aa8b0fd134ef00c" translate="yes" xml:space="preserve">
          <source>If you are into java8, you find a lot of material there to get you started.</source>
          <target state="translated">Si estás en Java 8,encontrarás mucho material para empezar.</target>
        </trans-unit>
        <trans-unit id="781db1d80a60dcc6aabaa9061ce2149462c30b0c" translate="yes" xml:space="preserve">
          <source>If you list of objects has a property called &lt;code&gt;startDate&lt;/code&gt;, you call use this over and over.  You can even chain them &lt;code&gt;startDate.time&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si su lista de objetos tiene una propiedad llamada &lt;/font&gt;&lt;/font&gt; &lt;code&gt;startDate&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , llame a use this una y otra vez. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Incluso puede encadenarlos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;startDate.time&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="41a5a6c67fb54543c8ca68b42d3222828236914a" translate="yes" xml:space="preserve">
          <source>If you notice here I'm creating a &lt;em&gt;anonymous inner class&lt;/em&gt; ( which is the Java for closures ) and passing it directly to the &lt;code&gt;sort&lt;/code&gt; method of the class &lt;code&gt;Arrays&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si observa aqu&amp;iacute;, estoy creando una &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;clase interna an&amp;oacute;nima&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (que es el Java para cierres) y la paso directamente al &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sort&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de la clase &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Arrays&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f4cc498bd504b64aff459c5958fda467ade95ac" translate="yes" xml:space="preserve">
          <source>If you want to sort for alphabet that contains non English characters you can use Locale... Below code use Turkish character sort...</source>
          <target state="translated">Si quieres ordenar por un alfabeto que contiene caracteres no ingleses puedes usar Locale...Debajo del código usa el orden de los caracteres turcos...</target>
        </trans-unit>
        <trans-unit id="f9c610be65e9558aebb75915cdbbbbf4eed90049" translate="yes" xml:space="preserve">
          <source>JAVA 8 lambda expression</source>
          <target state="translated">JAVA 8 expresión lambda</target>
        </trans-unit>
        <trans-unit id="d7cee396c0e7068c5b4f1207048c32c3cbd1fd5b" translate="yes" xml:space="preserve">
          <source>Java 8 Lambda shortens the sort.</source>
          <target state="translated">Java 8 Lambda acorta el tipo.</target>
        </trans-unit>
        <trans-unit id="a564256630046e8e9280f8cb39c3ab0acf1edd86" translate="yes" xml:space="preserve">
          <source>New since 1.8 is a List.sort() method instead of using the Collection.sort()
so you directly call  mylistcontainer.sort()</source>
          <target state="translated">Nuevo desde 1.8 es un método List.sort()en lugar de usar el Collection.sort()para llamar directamente a mylistcontainer.sort()</target>
        </trans-unit>
        <trans-unit id="9da0bbb0da4a2aa73010c31f55f2680af57f1e0b" translate="yes" xml:space="preserve">
          <source>Not with my solution! The following code lets you compare object's field by knowing their string name. You could easily modify it not to use the name, but then you need to expose it or construct one of the Objects you want to compare against.</source>
          <target state="translated">¡No con mi solución! El siguiente código te permite comparar el campo del objeto conociendo su nombre de cadena.Podrías modificarlo fácilmente para no usar el nombre,pero entonces necesitas exponerlo o construir uno de los objetos con los que quieres comparar.</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="4b41b3eaad64a8c5986b6080390c99fcd5408b03" translate="yes" xml:space="preserve">
          <source>Of course, having this kind of beauty impacts in the performance (an average of 2 times), but can you find a more readable code?</source>
          <target state="translated">Por supuesto,tener este tipo de belleza impacta en el desempeño (un promedio de 2 veces),pero ¿puedes encontrar un código más legible?</target>
        </trans-unit>
        <trans-unit id="cbd26a554e23607e71d1a6f463a34fc1c5d0b566" translate="yes" xml:space="preserve">
          <source>Only a few slides use German language, 99% of the content is &quot;English based&quot; Java source code; like</source>
          <target state="translated">Sólo unas pocas diapositivas usan el idioma alemán,el 99% del contenido es código fuente Java &quot;basado en inglés&quot;;como</target>
        </trans-unit>
        <trans-unit id="1123d7a81b1cc2edcd9372d0ac9ba830be779fdf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://visvv.blogspot.in/2016/01/sorting-objects-in-java-8.html&quot;&gt;http://visvv.blogspot.in/2016/01/sorting-objects-in-java-8.html&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ver &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://visvv.blogspot.in/2016/01/sorting-objects-in-java-8.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://visvv.blogspot.in/2016/01/sorting-objects-in-java-8.html&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa288c54a64be94716607dc79f70266fa8537aa4" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;//docs.oracle.com/javase/8/docs/api/java/util/Date.html&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; implements &lt;a href=&quot;//docs.oracle.com/javase/8/docs/api/java/lang/Comparable.html&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;, it has a &lt;code&gt;compareTo&lt;/code&gt; method just like &lt;code&gt;String&lt;/code&gt; does.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Dado que &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;//docs.oracle.com/javase/8/docs/api/java/util/Date.html&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; implementa &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;//docs.oracle.com/javase/8/docs/api/java/lang/Comparable.html&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , tiene un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;compareTo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; al igual que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="11f5723028acd0e99146d2e89999b8f4802ca578" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;/questions/tagged/java-8&quot;&gt;java-8&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Desde &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;/questions/tagged/java-8&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;java-8&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1a89adb61fc4b1b0df8a02e3d2a6d2ada88e53a5" translate="yes" xml:space="preserve">
          <source>Since technologies appear everyday, the answer will change in the time. I took a look at LambdaJ and seems very interesting.</source>
          <target state="translated">Dado que las tecnologías aparecen todos los días,la respuesta cambiará con el tiempo.He echado un vistazo a LambdaJ y parece muy interesante.</target>
        </trans-unit>
        <trans-unit id="f41dce5f5869fa3171f3787d6bb5ef39f7f21856" translate="yes" xml:space="preserve">
          <source>So your custom &lt;a href=&quot;//docs.oracle.com/javase/8/docs/api/java/util/Comparator.html&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; could look like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces su &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;//docs.oracle.com/javase/8/docs/api/java/util/Comparator.html&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; personalizado &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;podr&amp;iacute;a verse as&amp;iacute;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4bc7c59180c587867a7429d6ebc3f726ae62d989" translate="yes" xml:space="preserve">
          <source>Sort ArrayList of custom Objects by property</source>
          <target state="translated">Ordenar ArrayLista de objetos personalizados por propiedad</target>
        </trans-unit>
        <trans-unit id="ef1a2cab7ffad3c051de48eb6ca6dedffde8d93b" translate="yes" xml:space="preserve">
          <source>That will cause the Collections.sort method to use your comparator for it's sorting mechanism.  If the objects in the ArrayList implement comparable, you can instead do something like this:</source>
          <target state="translated">Eso hará que el método Collections.sort utilice su comparador para su mecanismo de clasificación.Si los objetos de la lista de arreglos implementan comparaciones,puedes hacer algo como esto:</target>
        </trans-unit>
        <trans-unit id="ccb4ed5fe895cb34b43243ccf79e47755d3ce295" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/util/Collections.html&quot;&gt;Collections&lt;/a&gt; class contains a number of these useful, common tools.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;clase &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/util/Collections.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Colecciones&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; contiene varias de estas herramientas &amp;uacute;tiles y comunes.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="34c52931924eed6cb3665ef1b6dc98281d65a5cd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#sort(java.util.List,java.util.Comparator)&quot;&gt;&lt;code&gt;Collections.sort&lt;/code&gt;&lt;/a&gt; method can sort a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/List.html&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; using a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Comparator.html&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; you pass. That &lt;code&gt;Comparator&lt;/code&gt; can be implemented using the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Comparator.html#comparing(java.util.function.Function)&quot;&gt;&lt;code&gt;Comparator.comparing&lt;/code&gt;&lt;/a&gt; method where you can pass a &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html&quot;&gt;method reference&lt;/a&gt; as the necessary &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/function/Function.html&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;. Fortunately, the actual code is much simpler and shorter than this description.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#sort(java.util.List,java.util.Comparator)&quot;&gt; &lt;code&gt;Collections.sort&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; puede ordenar una &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/List.html&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; utilizando un &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Comparator.html&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que pasa. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ese &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se puede implementar utilizando el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Comparator.html#comparing(java.util.function.Function)&quot;&gt; &lt;code&gt;Comparator.comparing&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; donde puede pasar una &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;referencia de m&amp;eacute;todo&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/function/Function.html&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; necesaria &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Afortunadamente, el c&amp;oacute;digo real es mucho m&amp;aacute;s simple y m&amp;aacute;s corto que esta descripci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dd345fd3ee7090dce138e8c91efb68d7712f10d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;compare()&lt;/code&gt; method must return an &lt;code&gt;int&lt;/code&gt;, so you couldn't directly return a &lt;code&gt;boolean&lt;/code&gt; like you were planning to anyway.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;compare()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; debe devolver un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , por lo que no podr&amp;iacute;a devolver directamente un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;boolean&lt;/code&gt; o&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como planeaba de todos modos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a4e02668775df63dad94a133d23b7e64ad608f6" translate="yes" xml:space="preserve">
          <source>The Fruit class is:</source>
          <target state="translated">La clase de fruta es:</target>
        </trans-unit>
        <trans-unit id="831f4dc56af57cbfafca752622f2248a84c74ed8" translate="yes" xml:space="preserve">
          <source>The drawback is, that this comparator silently ignores properties which does not exist or are not accessible and handles this as &lt;em&gt;null&lt;/em&gt; value for comparison. This means, you should carefully test such a comparator or validate the existence of the property path somehow.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El inconveniente es que este comparador ignora silenciosamente las propiedades que no existen o no son accesibles y lo maneja como un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;valor &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nulo&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para la comparaci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto significa que debe probar cuidadosamente dicho comparador o validar la existencia de la ruta de la propiedad de alguna manera.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="80e903fd7375e24e8fccb6eca0794a9f3f3e6bad" translate="yes" xml:space="preserve">
          <source>This code snippets might be useful. If you want to sort an Object
in my case I want to sort by VolumeName:</source>
          <target state="translated">Estos fragmentos de código podrían ser útiles.Si quieres ordenar un objeto en mi caso,quiero ordenar por nombre de volumen:</target>
        </trans-unit>
        <trans-unit id="feba6ee35c2611c1cc682372df4fec27ddaebfbc" translate="yes" xml:space="preserve">
          <source>This is such a common idiom that there's &lt;a href=&quot;//docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#comparing-java.util.function.Function-&quot;&gt;a built-in method&lt;/a&gt; to generate a &lt;code&gt;Comparator&lt;/code&gt; for a class with a &lt;code&gt;Comparable&lt;/code&gt; key:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este es un idioma tan com&amp;uacute;n que hay &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;//docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#comparing-java.util.function.Function-&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;un m&amp;eacute;todo incorporado&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para generar un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para una clase con una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;clave &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ffe44baad2e660ae828bd5dc33546e983ec04001" translate="yes" xml:space="preserve">
          <source>This requires your object to be &lt;code&gt;Comparable&lt;/code&gt; which means you need a &lt;code&gt;compareTo&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, and &lt;code&gt;hashCode&lt;/code&gt; implementation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto requiere que su objeto sea &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Comparable&lt;/code&gt; ,lo&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que significa que necesita una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;implementaci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;compareTo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;equals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;hashCode&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91d9a7522d1a4e43e2b84c27ac70049bfd12e1b7" translate="yes" xml:space="preserve">
          <source>This works. I use it in my jsp.</source>
          <target state="translated">Esto funciona.Lo uso en mi JSP.</target>
        </trans-unit>
        <trans-unit id="d01b0eae5f6efc6f9f01f284f3f4b45a89ce0bff" translate="yes" xml:space="preserve">
          <source>Two examples:</source>
          <target state="translated">Dos ejemplos:</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="8e78c07333c4dcd1e989e17ef23c814e2dcdc33d" translate="yes" xml:space="preserve">
          <source>Use any of the following way:</source>
          <target state="translated">Use cualquiera de las siguientes formas:</target>
        </trans-unit>
        <trans-unit id="2f146e835a7d01f8325abae48b9e3b072cab4f27" translate="yes" xml:space="preserve">
          <source>Using Java 8 use can define the &lt;code&gt;Comparator&lt;/code&gt; in one line using &lt;code&gt;Comparator.comparing()&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El uso de Java 8 puede definir el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en una l&amp;iacute;nea usando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Comparator.comparing()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e2fe807d1184a8bbbfd64fe2831cdd1acb2c7a88" translate="yes" xml:space="preserve">
          <source>With Java 8 you can use a method reference for your comparator:</source>
          <target state="translated">Con Java 8 puedes usar un método de referencia para tu comparador:</target>
        </trans-unit>
        <trans-unit id="418547555b128d7cb309c85795946ece51b53f5b" translate="yes" xml:space="preserve">
          <source>With this library &lt;a href=&quot;https://github.com/ipillars/public/tree/master/java/utils/com/ipillars/sorter&quot;&gt;here&lt;/a&gt; you can sort the list of custom objects on multiple columns. The library uses version 8.0 features. Sample is also available there. Here is a sample to do</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Con esta biblioteca &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/ipillars/public/tree/master/java/utils/com/ipillars/sorter&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aqu&amp;iacute;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; puede ordenar la lista de objetos personalizados en varias columnas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La biblioteca utiliza caracter&amp;iacute;sticas de la versi&amp;oacute;n 8.0. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La muestra tambi&amp;eacute;n est&amp;aacute; disponible all&amp;iacute;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; hay una muestra para hacer&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="06e6bf00859fe0bfe286d10d7d0e8933d97494cc" translate="yes" xml:space="preserve">
          <source>Yes, it could be faster... But now you don't have to make a new Comparator for each type of sort.  If you can save on dev time and give up on runtime, you might go with this one.</source>
          <target state="translated">Sí,podría ser más rápido......pero ahora no tienes que hacer un nuevo comparador para cada tipo de clase.Si puedes ahorrar en tiempo de desarrollo y renunciar al tiempo de ejecución,podrías usar este.</target>
        </trans-unit>
        <trans-unit id="8c51b81cd6bcd49656499e90eb17a2bdd0ea3b91" translate="yes" xml:space="preserve">
          <source>Yes, that's possible for instance  in &lt;a href=&quot;https://stackoverflow.com/questions/2784218/get-indexes-of-n-smallest-elements-in-an-array/2784353#2784353&quot;&gt;this answer&lt;/a&gt; I sort by the property &lt;code&gt;v&lt;/code&gt; of the class &lt;code&gt;IndexValue&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;S&amp;iacute;, eso es posible, por ejemplo, en &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2784218/get-indexes-of-n-smallest-elements-in-an-array/2784353#2784353&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;esta respuesta&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt; &lt;code&gt;IndexValue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; por la propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;v&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de la clase &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;IndexValue&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d205eb5bb81debb183f3d148fe0ff3aaf2b6b727" translate="yes" xml:space="preserve">
          <source>Yes, you can.  There are two options with comparing items, the &lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/lang/Comparable.html&quot;&gt;Comparable&lt;/a&gt; interface, and the &lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/util/Comparator.html&quot;&gt;Comparator&lt;/a&gt; interface.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;S&amp;iacute; tu puedes. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hay dos opciones para comparar elementos, la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;interfaz &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/lang/Comparable.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Comparable&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;interfaz &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/util/Comparator.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Comparador&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e25b42d2c7b232f96ad73bd5d2e6c8f7a56870e0" translate="yes" xml:space="preserve">
          <source>You can check this article if you would like to read more about the Comparable interface (disclosure: I am the author ;) )
&lt;a href=&quot;https://nullbeans.com/the-java-comparable-interface-automatic-sort-of-collections/&quot;&gt;https://nullbeans.com/the-java-comparable-interface-automatic-sort-of-collections/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede consultar este art&amp;iacute;culo si desea leer m&amp;aacute;s sobre la interfaz comparable (divulgaci&amp;oacute;n: soy el autor;)) &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://nullbeans.com/the-java-comparable-interface-automatic-sort-of-collections/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://nullbeans.com/the-java-comparable-interface-automatic-sort-of-collections/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1873bd632428b167bbaee82fd51af7b0d498e013" translate="yes" xml:space="preserve">
          <source>You can have a look into this &lt;a href=&quot;http://2016.java-forum-stuttgart.de/_data/D4_Wiedeking.pdf&quot;&gt;presentation&lt;/a&gt; hold at the Java Forum in Stuttgart Germany in 2016.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puedes echar un vistazo a esta &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://2016.java-forum-stuttgart.de/_data/D4_Wiedeking.pdf&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;presentaci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en el Foro Java en Stuttgart, Alemania, en 2016.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d38596eab644ef67db7ed5c73578f0d3d76b3379" translate="yes" xml:space="preserve">
          <source>You can now write the last example in a shorter form by using a &lt;a href=&quot;//docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html&quot;&gt;lambda expression&lt;/a&gt; for the &lt;code&gt;Comparator&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora puede escribir el &amp;uacute;ltimo ejemplo en una forma m&amp;aacute;s corta utilizando una &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;//docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;expresi&amp;oacute;n lambda&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33f59cf3ef9c763cbd601da39d89352bdec034cf" translate="yes" xml:space="preserve">
          <source>You can then use the collections.sort(myList) to sort your list without having to feed in a comparator. This method also has the advantage of having things sorted automatically if you use a sorted collection data structures like a TreeSet or a TreeMap.</source>
          <target state="translated">Entonces puedes usar el collections.sort(myList)para ordenar tu lista sin tener que alimentar un comparador.Este método también tiene la ventaja de tener las cosas ordenadas automáticamente si se utiliza una colección ordenada de estructuras de datos como un TreeSet o un TreeMap.</target>
        </trans-unit>
        <trans-unit id="9372414469408c328de28b041058256f9b3eb158" translate="yes" xml:space="preserve">
          <source>You can try Guava &lt;a href=&quot;http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Ordering.html&quot;&gt;Ordering&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puedes probar el &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Ordering.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pedido de&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; guayaba &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="42a3059b836bfd80c48064ec74b89cbbb2fd9497" translate="yes" xml:space="preserve">
          <source>You can try solving these tasks with &lt;strong&gt;LambdaJ&lt;/strong&gt;. You can find it here: &lt;a href=&quot;http://code.google.com/p/lambdaj/&quot;&gt;http://code.google.com/p/lambdaj/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puedes intentar resolver estas tareas con &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;LambdaJ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede encontrarlo aqu&amp;iacute;: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://code.google.com/p/lambdaj/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://code.google.com/p/lambdaj/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48b603f3d617a76d2671b8fe63c2daae3e94eb54" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;http://tips4java.wordpress.com/2008/10/23/bean-comparator/&quot;&gt;Bean Comparator&lt;/a&gt; to sort on any property in your custom class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede usar el &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://tips4java.wordpress.com/2008/10/23/bean-comparator/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bean Comparator&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para ordenar cualquier propiedad de su clase personalizada.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee0523bf60848874bbe1869ff3fded8e197846d0" translate="yes" xml:space="preserve">
          <source>You could also use Springs &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/support/PropertyComparator.html&quot;&gt;PropertyComparator&lt;/a&gt; if you have just a String property path to the (nested) property you want to sort:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n puede usar Springs &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/support/PropertyComparator.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PropertyComparator&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; si solo tiene una ruta de propiedad de cadena a la propiedad (anidada) que desea ordenar:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="18a9a78fbdace6d8b65b121ef3561eb1dc09f025" translate="yes" xml:space="preserve">
          <source>Your custom class can implement the &quot;Comparable&quot; interface, which requires an implementation of the CompareTo method. In the CompareTo method, you can then define what it means that an object is &lt;em&gt;less than or more than&lt;/em&gt; the other object. So in your example, it can look something like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Su clase personalizada puede implementar la interfaz &quot;Comparable&quot;, que requiere una implementaci&amp;oacute;n del m&amp;eacute;todo CompareTo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En el m&amp;eacute;todo CompareTo, puede definir lo que significa que un objeto es &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;menor o mayor que&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; el otro objeto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, en su ejemplo, puede verse m&amp;aacute;s o menos as&amp;iacute;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7a6460bdfd772928e6645a9cca768f748b64c805" translate="yes" xml:space="preserve">
          <source>Your object may also implement &lt;code&gt;Comparable&lt;/code&gt; ( that's what String and most of the core libraries in Java does ) but that would define the &quot;natural sort order&quot; of the class it self, and doesn't let you plug new ones.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Su objeto tambi&amp;eacute;n puede implementar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (eso es lo que hace String y la mayor&amp;iacute;a de las bibliotecas principales en Java) pero eso definir&amp;iacute;a el &quot;orden de clasificaci&amp;oacute;n natural&quot; de la clase en s&amp;iacute; mismo, y no le permite conectar otras nuevas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a62c08a75a84e457023e965ca807bcbbc103acba" translate="yes" xml:space="preserve">
          <source>Your sorting code would be just about like you wrote:</source>
          <target state="translated">Tu código de clasificación sería casi como el que escribiste:</target>
        </trans-unit>
        <trans-unit id="9c551074cfdb2a0c1f5d7ef16d4abb57fb10d961" translate="yes" xml:space="preserve">
          <source>compare() must answer the question:  Is object 1 less than, equal to or greater than object 2?</source>
          <target state="translated">compare()debe responder a la pregunta:¿El objeto 1 es menor,igual o mayor que el objeto 2?</target>
        </trans-unit>
        <trans-unit id="4f7b6f4a4bf97c80602131498002541e05f16d1e" translate="yes" xml:space="preserve">
          <source>full docs: &lt;a href=&quot;http://java.sun.com/j2se/1.5.0/docs/api/java/util/Comparator.html&quot;&gt;http://java.sun.com/j2se/1.5.0/docs/api/java/util/Comparator.html&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;documentos completos: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://java.sun.com/j2se/1.5.0/docs/api/java/util/Comparator.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://java.sun.com/j2se/1.5.0/docs/api/java/util/Comparator.html&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="34a74a501f68c42a62987e4114c5828112021fc5" translate="yes" xml:space="preserve">
          <source>using the java-8 stream api you can sort an &lt;code&gt;ArrayList&lt;/code&gt; by:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;utilizando la API de flujo de Java 8 puede ordenar una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ArrayList&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; por:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="34e5d30dad3803840ad3984c71184e59bf788beb" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;OurCustomComparator&lt;/code&gt; is using default methods (and other interesting ideas). As shown, leading to very concise code to pick some getter method for sorting; and super simple chaining (or reversing) of sort criteria.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;donde &lt;/font&gt;&lt;/font&gt; &lt;code&gt;OurCustomComparator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; est&amp;aacute; utilizando m&amp;eacute;todos predeterminados (y otras ideas interesantes). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como se muestra, conduce a un c&amp;oacute;digo muy conciso para elegir alg&amp;uacute;n m&amp;eacute;todo getter para ordenar; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;y encadenamiento s&amp;uacute;per simple (o inversi&amp;oacute;n) de criterios de clasificaci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7fe1f15ae979ef887494c2dc6041d4abb153f8a9" translate="yes" xml:space="preserve">
          <source>your customComparator class must implement java.util.Comparator in order to be used.
it must also overide compare() AND equals()</source>
          <target state="translated">tu clase customComparator debe implementar java.util.Comparator para poder ser usada.también debe anular compare()Y es igual a()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
