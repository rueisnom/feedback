<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/2706500">
    <body>
      <group id="2706500">
        <trans-unit id="abbfd7d47daef7f82ce3af11fcf364c37711cae6" translate="yes" xml:space="preserve">
          <source>*&amp;ldquo;Random&amp;rdquo; class generates only PSEUDO random number and to generate SECURE random number we need to use &amp;ldquo;RNGCryptoServiceProvider&amp;rdquo; class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;* &amp;laquo;Случайный&amp;raquo; класс генерирует только случайное число PSEUDO, и для генерации БЕЗОПАСНОГО случайного числа нам нужно использовать класс &amp;laquo;RNGCryptoServiceProvider&amp;raquo;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea162270b297e6ccccf3f1f69a8dabd04b8fb5e5" translate="yes" xml:space="preserve">
          <source>**Note: ** &lt;code&gt;.NET Core 2.0.0+&lt;/code&gt; uses a different seed on the parameterless constructor: instead of CPU clock it uses &lt;code&gt;Guid.NewGuid().GetHashCode()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;** Примечание: ** &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.NET Core 2.0.0+&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; использует другое начальное число в конструкторе без параметров: вместо тактовой частоты процессора он использует &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Guid.NewGuid().GetHashCode()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b04a50a0b5d0291aad88037c97598657c9e5753" translate="yes" xml:space="preserve">
          <source>0 is min and 999 is max. You can change the values to whatever you want.</source>
          <target state="translated">0-мин и 999-макс.Вы можете менять значения на все,что захотите.</target>
        </trans-unit>
        <trans-unit id="d80e78c095e57fa4cf82545a7129711a51ed8f0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Create function:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Создать функцию:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="200627b0eb37efd54845f9a6bd7c0133da5e8d51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Update&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2df4f7c53f783bffe74641c08bb66c84262ed5a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt;: Seeding isn't necessary if you instantiate the Random class once. So it'd be best to create a static class and call a method off that.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обновление&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : заполнение не требуется, если вы создаете экземпляр класса Random один раз. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так что было бы лучше создать статический класс и вызвать метод из этого.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d864ad92158e75560283cbf8a0ccdc7be229694b" translate="yes" xml:space="preserve">
          <source>Basically, they have changed the default seed from &lt;code&gt;Environment.TickCount&lt;/code&gt; to &lt;code&gt;Guid.NewGuid().GetHashCode()&lt;/code&gt;, so if you create 2 instances of Random it won't display the same numbers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;По сути, они изменили начальное значение по умолчанию из &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Environment.TickCount&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; на &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Guid.NewGuid().GetHashCode()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , поэтому, если вы создадите 2 экземпляра Random, он не будет отображать одинаковые числа.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cbdc6f9a0e482ca7c8fee312c4ea18cd47525001" translate="yes" xml:space="preserve">
          <source>Beware that &lt;code&gt;new Random()&lt;/code&gt; is seeded on current timestamp.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Остерегайтесь того, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Random()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; добавлена ​​в текущую метку времени.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="226e9e35bac38a237adfecca37311e06945bd9a7" translate="yes" xml:space="preserve">
          <source>Did Microsoft change Random default seed?</source>
          <target state="translated">Изменила ли Microsoft стандартное семя по умолчанию?</target>
        </trans-unit>
        <trans-unit id="cd643d993ea9cabe4f8ec728e330a9ac662f9dc1" translate="yes" xml:space="preserve">
          <source>Do you think you will get two different IDs? &lt;strong&gt;NOPE&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как вы думаете, вы получите два разных идентификатора? &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;НЕА&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="000c3b516fdd5bf46848fb833465e293e581b520" translate="yes" xml:space="preserve">
          <source>Even so, if you still need &lt;em&gt;true&lt;/em&gt; random numbers you will need to use an external source such as devices accounting for radioactive decay as a seed for an random number generator. Since, by definition, any number generated by purely algorithmic means cannot be truly random.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Тем не менее, если вам все еще нужны &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;истинные&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; случайные числа, вам нужно будет использовать внешний источник, например устройства, учитывающие радиоактивный распад, в качестве начального числа для генератора случайных чисел. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Поскольку по определению любое число, генерируемое чисто алгоритмическими средствами, не может быть действительно случайным.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd277b3c60fa260b880a56088e6fd1c0bfe2a889" translate="yes" xml:space="preserve">
          <source>Every time you do new Random() it is initialized . This means that in a tight loop you get the same value lots of times. You should keep a single Random instance and keep using Next on the same instance.</source>
          <target state="translated">Каждый раз,когда вы делаете новый Random(),он инициализируется.Это означает,что в узком цикле вы получаете одно и то же значение много раз.Вы должны хранить один экземпляр Random и продолжать использовать Next на том же экземпляре.</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="a0de464d924bece4cb1d86f19d039604e3e09eb7" translate="yes" xml:space="preserve">
          <source>First thing let us understand the philosophy of RANDOMNESS.  When we tell a person to choose between RED,  GREEN and YELLOW  what happens internally. What makes a person choose RED or YELLOW or GREEN?</source>
          <target state="translated">Прежде всего,давайте разберемся с философией РАНДОМНЕСА.Когда мы говорим человеку выбирать между КРАСНЫМ,ЗЕЛЕНЫМ и ЖЕЛТЫМ,что происходит внутри.Что заставляет человека выбирать КРАСНЫЙ,ЖЕЛТЫЙ или ЗЕЛЕНЫЙ?</target>
        </trans-unit>
        <trans-unit id="91f61718ccf7cffe221915d6c81af59b61d15f2f" translate="yes" xml:space="preserve">
          <source>For example a person chooses is color depending on weather and sound combination then  it would be difficult to guess the initial seed.</source>
          <target state="translated">Например,человек выбирает цвет в зависимости от погоды и звукового сочетания,тогда будет трудно угадать исходное семя.</target>
        </trans-unit>
        <trans-unit id="cc2fe695ec11501acd7c971d0040e8e8d078e0ab" translate="yes" xml:space="preserve">
          <source>For more information, look at the &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.random.aspx&quot;&gt;Random&lt;/a&gt; class, though please note:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для получения дополнительной информации посмотрите на &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;класс &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.random.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Random&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , хотя, пожалуйста, обратите внимание:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd0651df7b6818b0b7ddeb2abd24eb3dbae37f37" translate="yes" xml:space="preserve">
          <source>For strong random seed I always use CryptoRNG and not Time.</source>
          <target state="translated">Для сильного случайного семени я всегда использую CryptoRNG,а не Time.</target>
        </trans-unit>
        <trans-unit id="14a34d527e026f228da7120e6406fda83d2caa4e" translate="yes" xml:space="preserve">
          <source>For that we need to first understand the term RANDOMNESS and the philosophy behind it.</source>
          <target state="translated">Для этого нам необходимо сначала понять термин РАНДОМНЕС и философию,лежащую в его основе.</target>
        </trans-unit>
        <trans-unit id="4933758b484e55cbebdbee5ab541bc932719f289" translate="yes" xml:space="preserve">
          <source>Generate&amp;nbsp;a&amp;nbsp;random&amp;nbsp;number&amp;nbsp;between&amp;nbsp;two&amp;nbsp;numbers:</source>
          <target state="translated">Generate&amp;nbsp;a&amp;nbsp;random&amp;nbsp;number&amp;nbsp;between&amp;nbsp;two&amp;nbsp;numbers:</target>
        </trans-unit>
        <trans-unit id="d6808b4dea211debab4db5ddb89aaba3b5b2fb7f" translate="yes" xml:space="preserve">
          <source>How do I generate a random int number</source>
          <target state="translated">Как сгенерировать случайное число int</target>
        </trans-unit>
        <trans-unit id="b999d0f63cf6350c11407c2d5658af5f46bf2100" translate="yes" xml:space="preserve">
          <source>How do I generate a random integer in C#?</source>
          <target state="translated">Как сгенерировать случайное целое число в C#?</target>
        </trans-unit>
        <trans-unit id="cc8bd160bec1fd804d06b9c479d8235ae42fb8d6" translate="yes" xml:space="preserve">
          <source>However, because the clock has finite resolution, using the parameterless constructor to create different Random objects in close succession creates random number generators that produce identical sequences of random numbers</source>
          <target state="translated">Однако,поскольку часы имеют конечное разрешение,использование безпараметрического конструктора для создания различных случайных объектов в тесной последовательности создает генераторы случайных чисел,которые производят идентичные последовательности случайных чисел</target>
        </trans-unit>
        <trans-unit id="657b84f8217cc34a138ebcc97afd64132cfc85c7" translate="yes" xml:space="preserve">
          <source>I admit I like this approach better.</source>
          <target state="translated">Я признаю,что мне больше нравится этот подход.</target>
        </trans-unit>
        <trans-unit id="600aee2b14448ed36408e4f2ad73410a93773a62" translate="yes" xml:space="preserve">
          <source>I create a random integer by parsing out the non-digits from Guid, then I use that to instantiate my Random class.</source>
          <target state="translated">Я создаю случайное целое число путем разбора нецифр из Guid,а затем использую его для инстанцирования своего класса Random.</target>
        </trans-unit>
        <trans-unit id="89eb4d4f47b408dfe4e6736867dfa9083eb20970" translate="yes" xml:space="preserve">
          <source>I know that &lt;code&gt;new Random()&lt;/code&gt; uses the current ticks as seed, but seeding with current milliseconds is still good enough as it's good random start</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я знаю, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Random()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; использует текущие тики в качестве начального числа, но затравка с текущими миллисекундами все еще достаточно хороша, так как это хороший случайный запуск&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f7c827561f0e6766afe82f8a414c2528b9e3bb46" translate="yes" xml:space="preserve">
          <source>I use below code to have a random number:</source>
          <target state="translated">Я использую нижеприведенный код,чтобы иметь случайное число:</target>
        </trans-unit>
        <trans-unit id="9fa4039be56bf3b17e8752de0675e980a2aeaf29" translate="yes" xml:space="preserve">
          <source>I wanted to add a cryptographically secure version:</source>
          <target state="translated">Я хотел добавить криптографически безопасную версию:</target>
        </trans-unit>
        <trans-unit id="2dfbcfc100c004a16d2c7ec0cdd546dc94364568" translate="yes" xml:space="preserve">
          <source>I wanted to demonstrate what happens when a new random generator is used every time. Suppose you have two methods or two classes each requiring a random number. And naively you code them like:</source>
          <target state="translated">Я хотел продемонстрировать,что происходит,когда каждый раз используется новый случайный генератор.Предположим,что у вас есть два метода или два класса,каждый из которых требует случайного числа.И наивно вы их кодируете,как..:</target>
        </trans-unit>
        <trans-unit id="97c8efc53dbac76e7ec6f9f97f14bca1d93a1bd6" translate="yes" xml:space="preserve">
          <source>I will assume that you want a uniformly distributed random number generator like below. Random number in most of programming language including C# and C++ is not properly shuffled before using them. This means that you will get the same number over and over, which isn't really random.  To avoid to draw the same number over and over, you need a seed. Typically, ticks in time is ok for this task. Remember that you will get the same number over and over if you are using the same seed every time. So try to use varying seed always. Time is a good source for seed because they chage always.</source>
          <target state="translated">Я предполагаю,что вам нужен генератор равномерно распределенных случайных чисел,как показано ниже.Случайные числа в большинстве языков программирования,включая C#и C++,перед их использованием неправильно перетасовываются.Это означает,что вы будете получать одно и то же число снова и снова,что на самом деле не является случайностью.Чтобы не рисовать одно и то же число снова и снова,вам понадобится семя.Как правило,тики во времени подходят для этой задачи.Помните,что вы будете получать одно и то же число снова и снова,если вы используете один и тот же посевной каждый раз.Поэтому старайтесь всегда использовать разное семя.Время-хороший источник для семян,потому что они гоняются всегда.</target>
        </trans-unit>
        <trans-unit id="24d9f698a5b365733927faa7ad9e7cc8511fe788" translate="yes" xml:space="preserve">
          <source>I would encourage you to watch this video which goes in depth in the philosophy of RANDOMNESS using C# &lt;a href=&quot;https://www.youtube.com/watch?v=tCYxc-2-3fY&quot;&gt;https://www.youtube.com/watch?v=tCYxc-2-3fY&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я бы посоветовал вам посмотреть это видео, которое углубляется в философию случайности, используя C # &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=tCYxc-2-3fY&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://www.youtube.com/watch?v=tCYxc-2-3fY&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7445a166961ee42493efe105e6b0fb2981906a0" translate="yes" xml:space="preserve">
          <source>I've tried all of these solutions excluding the COBOL answer... lol</source>
          <target state="translated">Я перепробовал все эти решения,исключая ответ КОБОЛа...Лол...</target>
        </trans-unit>
        <trans-unit id="9a56b42c80f29c6d879da0a45dc78c9632290c41" translate="yes" xml:space="preserve">
          <source>If you are going to create more than one random number, you should keep the &lt;code&gt;Random&lt;/code&gt; instance and reuse it. If you create new instances too close in time, they will produce the same series of random numbers as the random generator is seeded from the system clock.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы собираетесь создать более одного случайного числа, вам следует сохранить &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;экземпляр &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Random&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и использовать его повторно. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы создаете новые экземпляры слишком близко по времени, они будут производить ту же серию случайных чисел, что и генератор случайных чисел, посеянный из системных часов.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c6026511d86ffd79ee1217c6c68facc79aab6a6" translate="yes" xml:space="preserve">
          <source>If you don't have a compatible CPU to execute the code on, just use the RESTful services at rdrand.com. With the RdRandom wrapper library included in your project, you would just need to do this (you get 1000 free calls when you signup):</source>
          <target state="translated">Если у вас нет совместимого процессора для выполнения кода,просто воспользуйтесь услугами RESTful на rdrand.com.С библиотекой оберток RdRandom,включенной в ваш проект,вам просто нужно будет это сделать (вы получите 1000 бесплатных звонков при регистрации):</target>
        </trans-unit>
        <trans-unit id="c03a7da2266af160ec11f3c447fec6ea2bd88106" translate="yes" xml:space="preserve">
          <source>If you have access to an Intel Secure Key compatible CPU, you can generate real random numbers and strings using these libraries: &lt;a href=&quot;https://github.com/JebteK/RdRand&quot;&gt;https://github.com/JebteK/RdRand&lt;/a&gt; and &lt;a href=&quot;https://www.rdrand.com/&quot;&gt;https://www.rdrand.com/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если у вас есть доступ к совместимому с Intel Secure Key процессору, вы можете генерировать реальные случайные числа и строки, используя следующие библиотеки: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/JebteK/RdRand&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/JebteK/RdRand&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.rdrand.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://www.rdrand.com/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e5003341a4d26ea1914881df37dd58f221f3a4e" translate="yes" xml:space="preserve">
          <source>If you want a CSRNG to generate random numbers between a min and max, this is for you. It will initialize &lt;code&gt;Random&lt;/code&gt; classes with secure random seeds.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы хотите, чтобы CSRNG генерировал случайные числа от мин до макс, это для вас. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он инициализирует &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Random&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; классы с безопасными случайными семенами.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e58a0557465f3b74d9de4ba47ff127c6244f39e6" translate="yes" xml:space="preserve">
          <source>If you want a genuine random numbers, the randomness comes from atmospheric noise or radioactive decay.</source>
          <target state="translated">Если вам нужны настоящие случайные числа,случайность исходит от атмосферного шума или радиоактивного распада.</target>
        </trans-unit>
        <trans-unit id="845ebbb5cb755afc4e1d6dd08e1a7b08d49981e2" translate="yes" xml:space="preserve">
          <source>If you want to generate &lt;strong&gt;just one number&lt;/strong&gt; you can use:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы хотите сгенерировать &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;только один номер,&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вы можете использовать:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e16b65e5e21816e532ef0fad91c7c97e94524c00" translate="yes" xml:space="preserve">
          <source>If you want true random numbers, the closest we can get is &quot;secure Pseudo Random Generator&quot; which can be generated by using the Cryptographic classes in C# such as &lt;code&gt;RNGCryptoServiceProvider&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вам нужны истинные случайные числа, то самое близкое, что мы можем получить, - это &amp;laquo;безопасный генератор псевдослучайных данных&amp;raquo;, который можно сгенерировать с помощью криптографических классов в C #, таких как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;RNGCryptoServiceProvider&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d92622b86c6c8d71a31f26eb389cefb92c49b6e6" translate="yes" xml:space="preserve">
          <source>If you're using .NET Core, multiple Random instances isn't as dangerous as before. I'm aware that this question is from 2010, but since this question is old but has some attraction, I think it's a good thing to document the change.</source>
          <target state="translated">Если вы используете .NET Core,несколько Случайных экземпляров не так опасны,как раньше.Я знаю,что этот вопрос относится к 2010 году,но поскольку этот вопрос старый,но имеет некоторое притяжение,я думаю,что хорошо задокументировать изменения.</target>
        </trans-unit>
        <trans-unit id="9e316631a5dbf34f354466a3b51c349b1acf884d" translate="yes" xml:space="preserve">
          <source>It implements IDisposable.</source>
          <target state="translated">Он реализует IDisposable.</target>
        </trans-unit>
        <trans-unit id="4d17f8fae74ca50296de1f5ef053f49b7bcd218d" translate="yes" xml:space="preserve">
          <source>It isn't as safe as RNGCryptoServiceProvider, but at least it won't give you weird results.</source>
          <target state="translated">Это не так безопасно,как RNGCryptoServiceProvider,но,по крайней мере,не даст странных результатов.</target>
        </trans-unit>
        <trans-unit id="c16ffd92271699f919d33b9195b6c8b6327e8a3e" translate="yes" xml:space="preserve">
          <source>It's all about the seed.</source>
          <target state="translated">Все дело в семени.</target>
        </trans-unit>
        <trans-unit id="6d82ab8d0ed31cfa1bbd270f6a89e3f5a07a0407" translate="yes" xml:space="preserve">
          <source>Just as a note for future reference.</source>
          <target state="translated">В качестве примечания для будущего использования.</target>
        </trans-unit>
        <trans-unit id="9d57b4aabeb87d48b2682cc1c170e8693fa14d1b" translate="yes" xml:space="preserve">
          <source>Just download the latest version from &lt;a href=&quot;https://github.com/JebteK/RdRand/tree/master/Versions&quot;&gt;here&lt;/a&gt;, include Jebtek.RdRand and add a using statement for it. Then, all you need to do is this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Просто скачайте последнюю версию &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/JebteK/RdRand/tree/master/Versions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;отсюда&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , включите Jebtek.RdRand и добавьте для него оператор использования. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Затем все, что вам нужно сделать, это:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="11f2406ae7e9be7e75d5bbf29b9e80e8f2c3be07" translate="yes" xml:space="preserve">
          <source>Modified answer from &lt;a href=&quot;https://stackoverflow.com/questions/1122483/random-string-generator-returning-same-string/22801467#22801467&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Модифицированный ответ &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1122483/random-string-generator-returning-same-string/22801467#22801467&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;отсюда&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dd8fd26858ebf880483637a8b30da453c296c0a7" translate="yes" xml:space="preserve">
          <source>None of these solutions were good enough. I needed randoms in a fast for int loop and I was getting tons of duplicate values even in very wide ranges. After settling for kind of random results far too long I decided to finally tackle this problem once and for all.</source>
          <target state="translated">Ни одно из этих решений не было достаточно хорошим.Мне нужны были рэндомы в быстром цикле int,и я получал тонны дубликатов даже в очень широких диапазонах.После того,как я слишком долго соглашался на своего рода случайные результаты,я решил наконец-то решить эту проблему раз и навсегда.</target>
        </trans-unit>
        <trans-unit id="adea012617b70cb36e91dcc3a9ab4c6583acd88a" translate="yes" xml:space="preserve">
          <source>Now if a SEED is easy to guess then those kind of random numbers are termed as &lt;strong&gt;PSEUDO&lt;/strong&gt; and when a seed is difficult to guess those random numbers are termed  &lt;strong&gt;SECURED&lt;/strong&gt; random numbers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь, если SEED легко угадать, то такие виды случайных чисел называются &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PSEUDO,&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; а когда семени трудно угадать, эти случайные числа называются &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SECURED&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; случайными числами.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f662949cab7c85ae6c402eaa2c08e8a6fe308723" translate="yes" xml:space="preserve">
          <source>Now let me make an important statement:-</source>
          <target state="translated">А теперь позвольте мне сделать важное заявление.</target>
        </trans-unit>
        <trans-unit id="b63ac707583f25e358154ecf161117fb407159b9" translate="yes" xml:space="preserve">
          <source>Numbers calculated by a computer through a deterministic process, cannot, by definition, be random.</source>
          <target state="translated">Числа,вычисленные компьютером посредством детерминистического процесса,по определению не могут быть случайными.</target>
        </trans-unit>
        <trans-unit id="67885541bf071860413e01f7eec977b0cb1d98f8" translate="yes" xml:space="preserve">
          <source>Put whatever values you want in the second parentheses
make sure you have set a name by writing prop and double tab to generate the code</source>
          <target state="translated">Положите любые значения во вторые круглые скобки,убедитесь,что вы установили имя,написав prop и double tab,чтобы сгенерировать код.</target>
        </trans-unit>
        <trans-unit id="57e50da763a9ce7c172ccdfa270ca1991015489f" translate="yes" xml:space="preserve">
          <source>Quick and easy for inline,  use bellow code:</source>
          <target state="translated">Быстро и легко для встраивания,используйте сильфонный код:</target>
        </trans-unit>
        <trans-unit id="af47ed3c7279d1e329a5ba072f293ed73a110e35" translate="yes" xml:space="preserve">
          <source>RNGCryptoServiceProvider Class (&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.security.cryptography.rngcryptoserviceprovider(v=vs.110).aspx&quot;&gt;MSDN&lt;/a&gt; or &lt;a href=&quot;http://www.dotnetperls.com/rngcryptoserviceprovider&quot;&gt;dotnetperls&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Класс RNGCryptoServiceProvider ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.security.cryptography.rngcryptoserviceprovider(v=vs.110).aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MSDN&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.dotnetperls.com/rngcryptoserviceprovider&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;dotnetperls&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d6fadd181fdc6dade6e5be3573d65e7fe197aaa" translate="yes" xml:space="preserve">
          <source>Random Gaussian Variables</source>
          <target state="translated">Случайные гауссовские перепады</target>
        </trans-unit>
        <trans-unit id="e934863708dea8227b8a4d06802b44f45850a9ec" translate="yes" xml:space="preserve">
          <source>Random class takes seed values from your CPU clock which is very much predictable.  So in other words RANDOM class of C# generates pseudo random numbers , below is the code for the same.</source>
          <target state="translated">Случайный класс берет начальные значения из вашего процессора,что очень предсказуемо.Другими словами,класс RANDOM C#генерирует псевдослучайные числа,ниже приведен код для того же самого.</target>
        </trans-unit>
        <trans-unit id="badbd5bc702da6da698381ad8a7daa27b1ba4532" translate="yes" xml:space="preserve">
          <source>So do not use this code to generate a series of random number.</source>
          <target state="translated">Поэтому не используйте этот код для генерации ряда случайных чисел.</target>
        </trans-unit>
        <trans-unit id="f5d65164e2ce6bed3dbd896506d92147f55ff27f" translate="yes" xml:space="preserve">
          <source>So if i want my random number to be between say 5 and 15, I'd just do</source>
          <target state="translated">Так что если я хочу,чтобы мой случайный номер был между 5 и 15,я бы просто сделал</target>
        </trans-unit>
        <trans-unit id="1ea2b1ee6be444bf6d62acd4cf8b2204954cdb9d" translate="yes" xml:space="preserve">
          <source>Some initial thought goes into the persons mind which decides his choice, it can be favorite color , lucky color and so on. In other words some initial trigger which we term in RANDOM as SEED.This SEED is the beginning point, the trigger which instigates him to select the RANDOM value.</source>
          <target state="translated">Некоторая первичная мысль приходит в голову человека,который решает свой выбор,это может быть любимый цвет,счастливый цвет и так далее.Другими словами,некоторый начальный триггер,который мы называем в RANDOM как SEED.Этот SEED является начальной точкой,триггером,который побуждает его выбрать значение RANDOM.</target>
        </trans-unit>
        <trans-unit id="c9348fb85574dfcc3419b015a40e3fc581abf85a" translate="yes" xml:space="preserve">
          <source>Sorry, OP indeed requires a random &lt;strong&gt;&lt;code&gt;int&lt;/code&gt;&lt;/strong&gt; value, but for the simple purpose to share knowledge if you want a random &lt;code&gt;BigInteger&lt;/code&gt; value you can use following statement:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Извините, OP действительно требует случайного &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;значения &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;int&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , но для простой цели обмена знаниями, если вы хотите случайное &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;значение &lt;/font&gt;&lt;/font&gt; &lt;code&gt;BigInteger&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вы можете использовать следующее утверждение:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3cab5112bdd9645675d42bf5bd63a93216d88479" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.random&quot;&gt;&lt;code&gt;Random&lt;/code&gt; class&lt;/a&gt; is used to create random numbers. (Pseudo-random that is of course.).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.random&quot;&gt; &lt;code&gt;Random&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; класс&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; используется для создания случайных чисел. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Псевдослучайный, конечно.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6cabb5af38e2ec6490ce9bad1d7be38825dd4b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Next()&lt;/code&gt; method accepts two parameters, min and max.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Метод &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Next()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; принимает два параметра, min и max.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dbeec0ee81562b0b9d42d05f4af1fd3df72b27f9" translate="yes" xml:space="preserve">
          <source>The easiest way is probably just &lt;code&gt;Random.range(1, 3)&lt;/code&gt; This would generate a number between 1 and 2.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Самый простой способ, вероятно, это просто &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Random.range(1, 3)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Это сгенерирует число от 1 до 2.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="08ed9ebb451c315c636ab7f2c8314eab9b937d9c" translate="yes" xml:space="preserve">
          <source>The following code returns a random number between the min and the max range.</source>
          <target state="translated">Следующий код возвращает случайное число между минимальным и максимальным диапазоном.</target>
        </trans-unit>
        <trans-unit id="ee55843082eefd6fde2b0929ab69e940494c85ca" translate="yes" xml:space="preserve">
          <source>The following code returns a random number less than 1000.&amp;nbsp;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Следующий код возвращает случайное число меньше 1000.&amp;nbsp;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a3b8a685a187f50815e1e0e93e3c181d090bbcd2" translate="yes" xml:space="preserve">
          <source>The following code returns a random number.&amp;nbsp;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Следующий код возвращает случайное число.&amp;nbsp;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="397254fb1b911cd7c8ad4be30a5aac897bf136a9" translate="yes" xml:space="preserve">
          <source>The last remaining point is that you don't have to initialize &lt;code&gt;new Random()&lt;/code&gt; every time you need a random number, initiate one Random object then use it as many times as you need inside a loop or whatever</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Последний оставшийся момент заключается в том, что вам не нужно инициализировать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Random()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; каждый раз, когда вам нужно случайное число, инициировать один объект Random, затем использовать его столько раз, сколько вам нужно внутри цикла или что-то еще&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2e341760257d154970a268e8b1c7f6c64c168d6b" translate="yes" xml:space="preserve">
          <source>The numbers generated by the inbuilt &lt;code&gt;Random&lt;/code&gt; class (System.Random) generates pseudo random numbers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Числа, генерируемые встроенным &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;классом &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Random&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (System.Random), генерируют псевдослучайные числа.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="416de5409476abc0bc380a0a56b156bac127131e" translate="yes" xml:space="preserve">
          <source>The question looks very simple but the answer is  bit complicated. If you see almost everyone has suggested to use the Random class and some have suggested to use the RNG crypto class. But then when to choose what.</source>
          <target state="translated">Вопрос выглядит очень просто,но ответ на него немного сложноват.Если вы видите,что почти все предлагали использовать класс Random,а некоторые предлагали использовать класс RNG crypto.Но потом,когда выбрать что.</target>
        </trans-unit>
        <trans-unit id="ea44102c483cbb9c8ac1fcff0b08b1765650506d" translate="yes" xml:space="preserve">
          <source>The solution is to &lt;em&gt;always&lt;/em&gt; use a single static random generator. Like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Решение состоит в том, чтобы &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;всегда&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; использовать один статический генератор случайных чисел. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как это:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49d65d6e727bc704368a3e03ebcc9cb4ec054b5d" translate="yes" xml:space="preserve">
          <source>Then you can use the static class like so..</source>
          <target state="translated">Тогда ты можешь использовать статический класс так...</target>
        </trans-unit>
        <trans-unit id="c2819086a92482f65d859bf2454b2e5d8390a2e4" translate="yes" xml:space="preserve">
          <source>This article takes a look at why randomness causes so many problems, and how to address them.
&lt;a href=&quot;http://csharpindepth.com/Articles/Chapter12/Random.aspx&quot;&gt;http://csharpindepth.com/Articles/Chapter12/Random.aspx&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В этой статье рассматривается, почему случайность вызывает так много проблем, и как их решать. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://csharpindepth.com/Articles/Chapter12/Random.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://csharpindepth.com/Articles/Chapter12/Random.aspx&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5cb8ec48f3641b82fded0bcb4b8605c9b8b8fb23" translate="yes" xml:space="preserve">
          <source>This is the class I use. Works like &lt;code&gt;RandomNumber.GenerateRandom(1, 666)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это класс, который я использую. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Работает как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;RandomNumber.GenerateRandom(1, 666)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c1b99191f450509971d7f63ef91cd34d791c6d7" translate="yes" xml:space="preserve">
          <source>To understand OS entropy see this video from 14:30 &lt;a href=&quot;https://youtu.be/tCYxc-2-3fY?t=14m31s&quot;&gt;https://www.youtube.com/watch?v=tCYxc-2-3fY&lt;/a&gt; where the logic of OS entropy is explained. So putting in simple words RNG Crypto generates SECURE random numbers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чтобы понять энтропию ОС, посмотрите это видео с 14:30 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://youtu.be/tCYxc-2-3fY?t=14m31s&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://www.youtube.com/watch?v=tCYxc-2-3fY,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; где объясняется логика энтропии ОС. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, говоря простыми словами, RNG Crypto генерирует БЕЗОПАСНЫЕ случайные числа.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cf1b382618e5a297cf248083442d837bc36c17ae" translate="yes" xml:space="preserve">
          <source>Try these simple steps to create random numbers:</source>
          <target state="translated">Попробуйте эти простые шаги для создания случайных чисел:</target>
        </trans-unit>
        <trans-unit id="4e00736dfa84fe21aee5428e9e7b4473806c7994" translate="yes" xml:space="preserve">
          <source>Use one instance of Random repeatedly</source>
          <target state="translated">Используйте один экземпляр Random повторно</target>
        </trans-unit>
        <trans-unit id="ce392fdbf5bb24e36d98f7452cae0678e096b1e8" translate="yes" xml:space="preserve">
          <source>Use the above function in a location where you want to use random numbers. Suppose you want to use it in a text box.</source>
          <target state="translated">Используйте приведенную выше функцию в месте,где необходимо использовать случайные числа.Предположим,вы хотите использовать ее в текстовом поле.</target>
        </trans-unit>
        <trans-unit id="c35334a8ed6b5df94821b6dac1953c6263726d0c" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;RNGCryptoServiceProvider&lt;/code&gt; class uses OS entropy to generate seeds. OS entropy is a random value which is generated using sound, mouse click, and keyboard timings, thermal temp etc. Below goes the code for the same.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В то время &lt;/font&gt;&lt;/font&gt; &lt;code&gt;RNGCryptoServiceProvider&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; класс &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;RNGCryptoServiceProvider&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; использует энтропию ОС для генерации &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;начальных чисел&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Энтропия ОС - это случайное значение, которое генерируется с использованием звука, щелчков мыши и таймингов клавиатуры, температуры и т. Д. Ниже приведен код того же самого.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27f0ffb3a8fc45ac741347e830f419dc71f5b45c" translate="yes" xml:space="preserve">
          <source>While this is okay:</source>
          <target state="translated">Пока это нормально:</target>
        </trans-unit>
        <trans-unit id="6b7b100c58ff8d646e1c196adcca06650862ca99" translate="yes" xml:space="preserve">
          <source>Why not use &lt;code&gt;int randomNumber = Random.Range(start_range, end_range)&lt;/code&gt; ?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Почему бы не использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int randomNumber = Random.Range(start_range, end_range)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c5d4888f40fd48d603d3340296bf8d14a288bc88" translate="yes" xml:space="preserve">
          <source>You can see the file diffs from .NET Framework/.NET Core (2.0.0+) here: &lt;a href=&quot;https://github.com/dotnet/coreclr/pull/2192/commits/9f6a0b675e5ac0065a268554de49162c539ff66d&quot;&gt;https://github.com/dotnet/coreclr/pull/2192/commits/9f6a0b675e5ac0065a268554de49162c539ff66d&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете увидеть различия в файлах из .NET Framework / .NET Core (2.0.0+) здесь: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/dotnet/coreclr/pull/2192/commits/9f6a0b675e5ac0065a268554de49162c539ff66d&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/dotnet/coreclr/pull/2192/commits/9f6a0b675e5ac0065a268554de49162c539ff66d&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eafcea8f499cb8c50e2821247665cab3bf4454fa" translate="yes" xml:space="preserve">
          <source>You can try for example RANDOM.ORG (it reduces performance)</source>
          <target state="translated">Вы можете попробовать,например,RANDOM.ORG (это снижает производительность).</target>
        </trans-unit>
        <trans-unit id="493cea7633f189ea4266cbd2a5fcdbb4322f376a" translate="yes" xml:space="preserve">
          <source>You can try with random seed value using below:</source>
          <target state="translated">Вы можете попробовать со случайным значением посевного материала,используя ниже:</target>
        </trans-unit>
        <trans-unit id="31a00fb08535456058a3521283a0215f6ef0322b" translate="yes" xml:space="preserve">
          <source>You could use Jon Skeet's &lt;a href=&quot;https://jonskeet.uk/csharp/miscutil/&quot;&gt;StaticRandom&lt;/a&gt; method inside the MiscUtil class library that he built for a pseudo-random number.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете использовать &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;метод &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Jon Skeet &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://jonskeet.uk/csharp/miscutil/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;StaticRandom&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; внутри библиотеки классов MiscUtil, которую он построил для псевдослучайного числа.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="462416f2d6b94075bd6ab7454309200f747e9da0" translate="yes" xml:space="preserve">
          <source>You may refer to this question I made a while back:</source>
          <target state="translated">Вы можете обратиться к вопросу,который я задал недавно:</target>
        </trans-unit>
        <trans-unit id="3d2b2be4bad21cd04b226e437100364a3af1e446" translate="yes" xml:space="preserve">
          <source>You'd want to control the limit (min and max mumbers) most of the time. So you need to specify where the random number starts and ends.</source>
          <target state="translated">Большую часть времени вам захочется контролировать лимит (минимальный и максимальный).Поэтому вам нужно указать,где начинается и заканчивается случайное число.</target>
        </trans-unit>
        <trans-unit id="4d88f6ddfd27a70e9f5ccae97c14c6c5a5134669" translate="yes" xml:space="preserve">
          <source>if you are looking for random number generator for normal distribution, you might use a Box-Muller transformation. Check the answer by yoyoyoyosef in Random Gaussian Variable Question. Since you want integer, you have to cast double value to integer at the end.</source>
          <target state="translated">если вы ищете генератор случайных чисел для нормального распределения,вы можете использовать преобразование Бокс-Мюллера.Проверьте ответ yoyoyosef в Случайном Гауссовом Переменном Вопросе.Так как вам нужно целое число,вы должны привести двойное значение к целому в конце.</target>
        </trans-unit>
        <trans-unit id="eb46f8927c27355615a5cfd60c095088a598bb46" translate="yes" xml:space="preserve">
          <source>it's better to seed the Random object with current milliseconds, to ensure true random number, and you almost won't find duplicates using it many times</source>
          <target state="translated">лучше посадить случайный объект с текущими миллисекундами,чтобы обеспечить истинное случайное число,и вы почти не найдете дубликатов,использующих его много раз.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
