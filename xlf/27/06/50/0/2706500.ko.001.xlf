<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/2706500">
    <body>
      <group id="2706500">
        <trans-unit id="abbfd7d47daef7f82ce3af11fcf364c37711cae6" translate="yes" xml:space="preserve">
          <source>*&amp;ldquo;Random&amp;rdquo; class generates only PSEUDO random number and to generate SECURE random number we need to use &amp;ldquo;RNGCryptoServiceProvider&amp;rdquo; class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;*&amp;ldquo;랜덤&amp;rdquo;클래스는 PSEUDO 난수 만 생성하며 SECURE 난수를 생성하려면&amp;ldquo;RNGCryptoServiceProvider&amp;rdquo;클래스를 사용해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea162270b297e6ccccf3f1f69a8dabd04b8fb5e5" translate="yes" xml:space="preserve">
          <source>**Note: ** &lt;code&gt;.NET Core 2.0.0+&lt;/code&gt; uses a different seed on the parameterless constructor: instead of CPU clock it uses &lt;code&gt;Guid.NewGuid().GetHashCode()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;** 참고 : ** &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.NET Core 2.0.0+&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 매개 변수가없는 생성자에서 다른 시드를 사용합니다. CPU 시계 대신 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Guid.NewGuid().GetHashCode()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b04a50a0b5d0291aad88037c97598657c9e5753" translate="yes" xml:space="preserve">
          <source>0 is min and 999 is max. You can change the values to whatever you want.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;0은 최소이고 999는 최대입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;원하는대로 값을 변경할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d80e78c095e57fa4cf82545a7129711a51ed8f0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Create function:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수 만들기 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="200627b0eb37efd54845f9a6bd7c0133da5e8d51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Update&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2df4f7c53f783bffe74641c08bb66c84262ed5a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt;: Seeding isn't necessary if you instantiate the Random class once. So it'd be best to create a static class and call a method off that.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;업데이트&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : Random 클래스를 한 번 인스턴스화하면 시드가 필요하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 정적 클래스를 작성하고 메소드를 호출하는 것이 가장 좋습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d864ad92158e75560283cbf8a0ccdc7be229694b" translate="yes" xml:space="preserve">
          <source>Basically, they have changed the default seed from &lt;code&gt;Environment.TickCount&lt;/code&gt; to &lt;code&gt;Guid.NewGuid().GetHashCode()&lt;/code&gt;, so if you create 2 instances of Random it won't display the same numbers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본적으로 기본 시드가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Environment.TickCount&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Guid.NewGuid().GetHashCode()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 변경되었으므로 Random 인스턴스를 2 개 생성하면 동일한 숫자가 표시되지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cbdc6f9a0e482ca7c8fee312c4ea18cd47525001" translate="yes" xml:space="preserve">
          <source>Beware that &lt;code&gt;new Random()&lt;/code&gt; is seeded on current timestamp.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이주의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Random()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 현재 타임 스탬프에 씨앗을 품고있다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="226e9e35bac38a237adfecca37311e06945bd9a7" translate="yes" xml:space="preserve">
          <source>Did Microsoft change Random default seed?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Microsoft는 임의의 기본 시드를 변경 했습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd643d993ea9cabe4f8ec728e330a9ac662f9dc1" translate="yes" xml:space="preserve">
          <source>Do you think you will get two different IDs? &lt;strong&gt;NOPE&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 두 개의 다른 ID를 얻을 것이라고 생각하십니까? &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아니&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="000c3b516fdd5bf46848fb833465e293e581b520" translate="yes" xml:space="preserve">
          <source>Even so, if you still need &lt;em&gt;true&lt;/em&gt; random numbers you will need to use an external source such as devices accounting for radioactive decay as a seed for an random number generator. Since, by definition, any number generated by purely algorithmic means cannot be truly random.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그럼에도 불구하고 여전히 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 난수가 필요한 경우에는 방사성 붕괴를 설명하는 장치와 같은 외부 소스를 난수 생성기의 시드로 사용해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정의상 순전히 알고리즘적인 수단으로 생성 된 숫자는 실제로 임의의 숫자 일 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd277b3c60fa260b880a56088e6fd1c0bfe2a889" translate="yes" xml:space="preserve">
          <source>Every time you do new Random() it is initialized . This means that in a tight loop you get the same value lots of times. You should keep a single Random instance and keep using Next on the same instance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;새로운 Random () 할 때마다 초기화됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 타이트한 루프에서 같은 값을 여러 번 얻는다는 것을 의미합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;단일 임의 인스턴스를 유지하고 동일한 인스턴스에서 다음을 계속 사용해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="a0de464d924bece4cb1d86f19d039604e3e09eb7" translate="yes" xml:space="preserve">
          <source>First thing let us understand the philosophy of RANDOMNESS.  When we tell a person to choose between RED,  GREEN and YELLOW  what happens internally. What makes a person choose RED or YELLOW or GREEN?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우선 RANDOMNESS의 철학을 이해하겠습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리가 사람에게 RED, GREEN, YELLOW 중에서 내부에서 일어나는 일을 선택하라고 말할 때. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사람이 빨간색, 노란색 또는 녹색을 선택하게하는 이유는 무엇입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91f61718ccf7cffe221915d6c81af59b61d15f2f" translate="yes" xml:space="preserve">
          <source>For example a person chooses is color depending on weather and sound combination then  it would be difficult to guess the initial seed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 날씨와 소리의 조합에 따라 색상을 선택하면 초기 씨앗을 추측하기가 어렵습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc2fe695ec11501acd7c971d0040e8e8d078e0ab" translate="yes" xml:space="preserve">
          <source>For more information, look at the &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.random.aspx&quot;&gt;Random&lt;/a&gt; class, though please note:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 내용은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.random.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Random&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스를 참조하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd0651df7b6818b0b7ddeb2abd24eb3dbae37f37" translate="yes" xml:space="preserve">
          <source>For strong random seed I always use CryptoRNG and not Time.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;강력한 무작위 시드의 경우 항상 시간이 아닌 CryptoRNG를 사용합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="14a34d527e026f228da7120e6406fda83d2caa4e" translate="yes" xml:space="preserve">
          <source>For that we need to first understand the term RANDOMNESS and the philosophy behind it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이를 위해서는 먼저 RANDOMNESS라는 용어와 그 뒤에있는 철학을 이해해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4933758b484e55cbebdbee5ab541bc932719f289" translate="yes" xml:space="preserve">
          <source>Generate&amp;nbsp;a&amp;nbsp;random&amp;nbsp;number&amp;nbsp;between&amp;nbsp;two&amp;nbsp;numbers:</source>
          <target state="translated">Generate&amp;nbsp;a&amp;nbsp;random&amp;nbsp;number&amp;nbsp;between&amp;nbsp;two&amp;nbsp;numbers:</target>
        </trans-unit>
        <trans-unit id="d6808b4dea211debab4db5ddb89aaba3b5b2fb7f" translate="yes" xml:space="preserve">
          <source>How do I generate a random int number</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;난수 int 숫자를 생성하는 방법&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b999d0f63cf6350c11407c2d5658af5f46bf2100" translate="yes" xml:space="preserve">
          <source>How do I generate a random integer in C#?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C #에서 임의의 정수를 어떻게 생성합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc8bd160bec1fd804d06b9c479d8235ae42fb8d6" translate="yes" xml:space="preserve">
          <source>However, because the clock has finite resolution, using the parameterless constructor to create different Random objects in close succession creates random number generators that produce identical sequences of random numbers</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 클럭의 해상도는 유한하기 때문에 매개 변수가없는 생성자를 사용하여 연속적으로 다른 임의의 객체를 생성하면 동일한 난수 시퀀스를 생성하는 난수 생성기가 생성됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="657b84f8217cc34a138ebcc97afd64132cfc85c7" translate="yes" xml:space="preserve">
          <source>I admit I like this approach better.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는이 접근법이 더 좋다는 것을 인정한다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="600aee2b14448ed36408e4f2ad73410a93773a62" translate="yes" xml:space="preserve">
          <source>I create a random integer by parsing out the non-digits from Guid, then I use that to instantiate my Random class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Guid에서 숫자가 아닌 숫자를 파싱하여 임의의 정수를 만든 다음 Random 클래스를 인스턴스화하는 데 사용합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="89eb4d4f47b408dfe4e6736867dfa9083eb20970" translate="yes" xml:space="preserve">
          <source>I know that &lt;code&gt;new Random()&lt;/code&gt; uses the current ticks as seed, but seeding with current milliseconds is still good enough as it's good random start</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 알고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Random()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 씨 등 현재의 틱을 사용하지만, 현재의 밀리 초에 파종하는 것은 그것의 좋은 임의 시작으로 여전히 좋은 충분하다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f7c827561f0e6766afe82f8a414c2528b9e3bb46" translate="yes" xml:space="preserve">
          <source>I use below code to have a random number:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래 코드를 사용하여 임의의 숫자를 갖습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9fa4039be56bf3b17e8752de0675e980a2aeaf29" translate="yes" xml:space="preserve">
          <source>I wanted to add a cryptographically secure version:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;암호화 적으로 안전한 버전을 추가하고 싶었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2dfbcfc100c004a16d2c7ec0cdd546dc94364568" translate="yes" xml:space="preserve">
          <source>I wanted to demonstrate what happens when a new random generator is used every time. Suppose you have two methods or two classes each requiring a random number. And naively you code them like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;매번 새로운 랜덤 생성기가 사용될 때 어떤 일이 발생하는지 보여주고 싶었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;각각 임의의 숫자가 필요한 두 개의 메소드 또는 두 개의 클래스가 있다고 가정하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 순진하게 당신은 그들을 다음과 같이 코딩합니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="97c8efc53dbac76e7ec6f9f97f14bca1d93a1bd6" translate="yes" xml:space="preserve">
          <source>I will assume that you want a uniformly distributed random number generator like below. Random number in most of programming language including C# and C++ is not properly shuffled before using them. This means that you will get the same number over and over, which isn't really random.  To avoid to draw the same number over and over, you need a seed. Typically, ticks in time is ok for this task. Remember that you will get the same number over and over if you are using the same seed every time. So try to use varying seed always. Time is a good source for seed because they chage always.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래처럼 균일하게 분포 된 난수 생성기를 원한다고 가정합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 및 C ++를 포함한 대부분의 프로그래밍 언어에서 난수는 사용하기 전에 제대로 섞이지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 당신이 같은 숫자를 반복해서 얻을 것이라는 것을 의미합니다. 이것은 실제로 무작위가 아닙니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;같은 숫자를 반복해서 그리는 것을 피하려면 씨앗이 필요합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적으로 시간의 틱은이 작업에 적합합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;매번 같은 시드를 사용하는 경우 같은 숫자를 계속해서 얻게됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 항상 다양한 씨앗을 사용하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;씨앗은 항상 변화하기 때문에 씨앗은 좋은 소스입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24d9f698a5b365733927faa7ad9e7cc8511fe788" translate="yes" xml:space="preserve">
          <source>I would encourage you to watch this video which goes in depth in the philosophy of RANDOMNESS using C# &lt;a href=&quot;https://www.youtube.com/watch?v=tCYxc-2-3fY&quot;&gt;https://www.youtube.com/watch?v=tCYxc-2-3fY&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # &lt;/font&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=tCYxc-2-3fY&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://www.youtube.com/watch?v=tCYxc-2-3fY를&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하여 RANDOMNESS의 철학에 깊이 들어가는이 비디오를 시청 &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하시기 바랍니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b7445a166961ee42493efe105e6b0fb2981906a0" translate="yes" xml:space="preserve">
          <source>I've tried all of these solutions excluding the COBOL answer... lol</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;COBOL 답변을 제외한 모든 솔루션을 시도했습니다 ... lol&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a56b42c80f29c6d879da0a45dc78c9632290c41" translate="yes" xml:space="preserve">
          <source>If you are going to create more than one random number, you should keep the &lt;code&gt;Random&lt;/code&gt; instance and reuse it. If you create new instances too close in time, they will produce the same series of random numbers as the random generator is seeded from the system clock.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;둘 이상의 난수를 생성하려는 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Random&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인스턴스를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유지 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고 재사용해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;새 인스턴스를 제 시간에 너무 가깝게 만들면 시스템 생성기에서 임의 생성기가 시드 될 때와 동일한 일련의 난수가 생성됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c6026511d86ffd79ee1217c6c68facc79aab6a6" translate="yes" xml:space="preserve">
          <source>If you don't have a compatible CPU to execute the code on, just use the RESTful services at rdrand.com. With the RdRandom wrapper library included in your project, you would just need to do this (you get 1000 free calls when you signup):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드를 실행할 호환 CPU가없는 경우 rdrand.com에서 RESTful 서비스를 사용하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로젝트에 RdRandom 래퍼 라이브러리가 포함되어 있으면이 작업을 수행하면됩니다 (가입 할 때 1000 번의 무료 통화가 제공됨).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c03a7da2266af160ec11f3c447fec6ea2bd88106" translate="yes" xml:space="preserve">
          <source>If you have access to an Intel Secure Key compatible CPU, you can generate real random numbers and strings using these libraries: &lt;a href=&quot;https://github.com/JebteK/RdRand&quot;&gt;https://github.com/JebteK/RdRand&lt;/a&gt; and &lt;a href=&quot;https://www.rdrand.com/&quot;&gt;https://www.rdrand.com/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Intel Secure Key 호환 CPU에 액세스 할 수있는 경우 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/JebteK/RdRand&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/JebteK/RdRand&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;a href=&quot;https://www.rdrand.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://www.rdrand.com/&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 라이브러리를 사용하여 실제 난수 및 문자열을 생성 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e5003341a4d26ea1914881df37dd58f221f3a4e" translate="yes" xml:space="preserve">
          <source>If you want a CSRNG to generate random numbers between a min and max, this is for you. It will initialize &lt;code&gt;Random&lt;/code&gt; classes with secure random seeds.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CSRNG가 최소값과 최대 값 사이의 난수를 생성하도록하려면이 방법이 적합합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;안전한 임의의 시드로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Random&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;초기화 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e58a0557465f3b74d9de4ba47ff127c6244f39e6" translate="yes" xml:space="preserve">
          <source>If you want a genuine random numbers, the randomness comes from atmospheric noise or radioactive decay.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;진정한 난수를 원한다면 대기 잡음이나 방사성 붕괴로 인해 난수가 발생합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="845ebbb5cb755afc4e1d6dd08e1a7b08d49981e2" translate="yes" xml:space="preserve">
          <source>If you want to generate &lt;strong&gt;just one number&lt;/strong&gt; you can use:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하나의 숫자 만&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 생성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하려면 다음을 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e16b65e5e21816e532ef0fad91c7c97e94524c00" translate="yes" xml:space="preserve">
          <source>If you want true random numbers, the closest we can get is &quot;secure Pseudo Random Generator&quot; which can be generated by using the Cryptographic classes in C# such as &lt;code&gt;RNGCryptoServiceProvider&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;진정한 난수를 원한다면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;RNGCryptoServiceProvider&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 같은 암호화 클래스를 사용하여 생성 할 수있는 &quot;보안 의사 난수 생성기&quot;가 가장 가깝습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d92622b86c6c8d71a31f26eb389cefb92c49b6e6" translate="yes" xml:space="preserve">
          <source>If you're using .NET Core, multiple Random instances isn't as dangerous as before. I'm aware that this question is from 2010, but since this question is old but has some attraction, I think it's a good thing to document the change.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.NET Core를 사용하는 경우 여러 랜덤 인스턴스는 이전처럼 위험하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는이 질문이 2010 년에서 온 것임을 알고 있지만,이 질문은 오래되었지만 매력이 있기 때문에 변경 사항을 문서화하는 것이 좋습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9e316631a5dbf34f354466a3b51c349b1acf884d" translate="yes" xml:space="preserve">
          <source>It implements IDisposable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;IDisposable을 구현합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d17f8fae74ca50296de1f5ef053f49b7bcd218d" translate="yes" xml:space="preserve">
          <source>It isn't as safe as RNGCryptoServiceProvider, but at least it won't give you weird results.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;RNGCryptoServiceProvider만큼 안전하지는 않지만 적어도 이상한 결과를 제공하지는 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c16ffd92271699f919d33b9195b6c8b6327e8a3e" translate="yes" xml:space="preserve">
          <source>It's all about the seed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;씨앗에 관한 모든 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d82ab8d0ed31cfa1bbd270f6a89e3f5a07a0407" translate="yes" xml:space="preserve">
          <source>Just as a note for future reference.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나중에 참조 할 수 있도록 참고하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d57b4aabeb87d48b2682cc1c170e8693fa14d1b" translate="yes" xml:space="preserve">
          <source>Just download the latest version from &lt;a href=&quot;https://github.com/JebteK/RdRand/tree/master/Versions&quot;&gt;here&lt;/a&gt;, include Jebtek.RdRand and add a using statement for it. Then, all you need to do is this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/JebteK/RdRand/tree/master/Versions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 최신 버전을 다운로드하고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Jebtek.RdRand를 포함하고 using 문을 추가하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음이 작업 만하면됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="11f2406ae7e9be7e75d5bbf29b9e80e8f2c3be07" translate="yes" xml:space="preserve">
          <source>Modified answer from &lt;a href=&quot;https://stackoverflow.com/questions/1122483/random-string-generator-returning-same-string/22801467#22801467&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1122483/random-string-generator-returning-same-string/22801467#22801467&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 수정 된 답변입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dd8fd26858ebf880483637a8b30da453c296c0a7" translate="yes" xml:space="preserve">
          <source>None of these solutions were good enough. I needed randoms in a fast for int loop and I was getting tons of duplicate values even in very wide ranges. After settling for kind of random results far too long I decided to finally tackle this problem once and for all.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 솔루션들 중 어느 것도 충분하지 않았습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;int 루프를 위해 fast에서 randoms가 필요했으며 매우 넓은 범위에서도 수많은 중복 값을 얻었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;너무 오랫동안 임의의 결과에 정착 한 후 마침내이 문제를 한 번에 해결하기로 결정했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="adea012617b70cb36e91dcc3a9ab4c6583acd88a" translate="yes" xml:space="preserve">
          <source>Now if a SEED is easy to guess then those kind of random numbers are termed as &lt;strong&gt;PSEUDO&lt;/strong&gt; and when a seed is difficult to guess those random numbers are termed  &lt;strong&gt;SECURED&lt;/strong&gt; random numbers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 SEED가 추측하기 쉬운 경우 이러한 종류의 난수를 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PSEUDO&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 라고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하며 시드를 추측하기 어려운 경우 해당 난수를 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SECURED&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 난수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;라고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f662949cab7c85ae6c402eaa2c08e8a6fe308723" translate="yes" xml:space="preserve">
          <source>Now let me make an important statement:-</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 중요한 진술을하겠습니다 :-&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b63ac707583f25e358154ecf161117fb407159b9" translate="yes" xml:space="preserve">
          <source>Numbers calculated by a computer through a deterministic process, cannot, by definition, be random.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결정 론적 프로세스를 통해 컴퓨터에 의해 계산 된 숫자는 정의에 따라 무작위 일 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67885541bf071860413e01f7eec977b0cb1d98f8" translate="yes" xml:space="preserve">
          <source>Put whatever values you want in the second parentheses
make sure you have set a name by writing prop and double tab to generate the code</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 괄호 안에 원하는 값을 넣으면 prop 및 double tab을 작성하여 코드를 생성하여 이름을 설정했는지 확인하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="57e50da763a9ce7c172ccdfa270ca1991015489f" translate="yes" xml:space="preserve">
          <source>Quick and easy for inline,  use bellow code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인라인을위한 빠르고 쉬운 다음 코드를 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="af47ed3c7279d1e329a5ba072f293ed73a110e35" translate="yes" xml:space="preserve">
          <source>RNGCryptoServiceProvider Class (&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.security.cryptography.rngcryptoserviceprovider(v=vs.110).aspx&quot;&gt;MSDN&lt;/a&gt; or &lt;a href=&quot;http://www.dotnetperls.com/rngcryptoserviceprovider&quot;&gt;dotnetperls&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;RNGCryptoServiceProvider 클래스 ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.security.cryptography.rngcryptoserviceprovider(v=vs.110).aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MSDN&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.dotnetperls.com/rngcryptoserviceprovider&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;dotnetperls&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d6fadd181fdc6dade6e5be3573d65e7fe197aaa" translate="yes" xml:space="preserve">
          <source>Random Gaussian Variables</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;랜덤 가우스 변수&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e934863708dea8227b8a4d06802b44f45850a9ec" translate="yes" xml:space="preserve">
          <source>Random class takes seed values from your CPU clock which is very much predictable.  So in other words RANDOM class of C# generates pseudo random numbers , below is the code for the same.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;랜덤 클래스는 CPU 클럭에서 시드 값을 가져와 매우 예측 가능합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, C #의 RANDOM 클래스는 의사 난수를 생성합니다. 아래는 동일한 코드입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="badbd5bc702da6da698381ad8a7daa27b1ba4532" translate="yes" xml:space="preserve">
          <source>So do not use this code to generate a series of random number.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서이 코드를 사용하여 일련의 난수를 생성하지 마십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5d65164e2ce6bed3dbd896506d92147f55ff27f" translate="yes" xml:space="preserve">
          <source>So if i want my random number to be between say 5 and 15, I'd just do</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 임의의 숫자가 5와 15 사이에 있기를 원한다면 그냥 할 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ea2b1ee6be444bf6d62acd4cf8b2204954cdb9d" translate="yes" xml:space="preserve">
          <source>Some initial thought goes into the persons mind which decides his choice, it can be favorite color , lucky color and so on. In other words some initial trigger which we term in RANDOM as SEED.This SEED is the beginning point, the trigger which instigates him to select the RANDOM value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부 초기 생각은 사람의 마음에 들어가 그의 선택을 결정합니다. 좋아하는 색, 행운의 색 등이 될 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다시 말해 RANDOM에서 SEED라고하는 초기 트리거입니다.이 SEED는 시작점이며, RANDOM 값을 선택하도록하는 트리거입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c9348fb85574dfcc3419b015a40e3fc581abf85a" translate="yes" xml:space="preserve">
          <source>Sorry, OP indeed requires a random &lt;strong&gt;&lt;code&gt;int&lt;/code&gt;&lt;/strong&gt; value, but for the simple purpose to share knowledge if you want a random &lt;code&gt;BigInteger&lt;/code&gt; value you can use following statement:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;죄송하지만 OP에는 실제로 임의의 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;int&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 값이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;필요 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지만 임의의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;BigInteger&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 값을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;원하는 경우 간단한 지식을 공유 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하기 위해 다음 명령문을 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3cab5112bdd9645675d42bf5bd63a93216d88479" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.random&quot;&gt;&lt;code&gt;Random&lt;/code&gt; class&lt;/a&gt; is used to create random numbers. (Pseudo-random that is of course.).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.random&quot;&gt; &lt;code&gt;Random&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스는&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 임의의 숫자를 생성하는 데 사용됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(물론 의사 난수입니다.).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6cabb5af38e2ec6490ce9bad1d7be38825dd4b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Next()&lt;/code&gt; method accepts two parameters, min and max.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Next()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 방법은 두개의 파라미터, 최소 및 최대를 받아 들인다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dbeec0ee81562b0b9d42d05f4af1fd3df72b27f9" translate="yes" xml:space="preserve">
          <source>The easiest way is probably just &lt;code&gt;Random.range(1, 3)&lt;/code&gt; This would generate a number between 1 and 2.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가장 쉬운 방법은 아마도 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Random.range(1, 3)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. 1과 2 사이의 숫자를 생성합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="08ed9ebb451c315c636ab7f2c8314eab9b937d9c" translate="yes" xml:space="preserve">
          <source>The following code returns a random number between the min and the max range.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 코드는 최소 범위와 최대 범위 사이의 임의의 숫자를 반환합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee55843082eefd6fde2b0929ab69e940494c85ca" translate="yes" xml:space="preserve">
          <source>The following code returns a random number less than 1000.&amp;nbsp;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 코드는 1000보다 작은 난수를 반환합니다.&amp;nbsp;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a3b8a685a187f50815e1e0e93e3c181d090bbcd2" translate="yes" xml:space="preserve">
          <source>The following code returns a random number.&amp;nbsp;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 코드는 난수를 반환합니다.&amp;nbsp;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="397254fb1b911cd7c8ad4be30a5aac897bf136a9" translate="yes" xml:space="preserve">
          <source>The last remaining point is that you don't have to initialize &lt;code&gt;new Random()&lt;/code&gt; every time you need a random number, initiate one Random object then use it as many times as you need inside a loop or whatever</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마지막 남은 요점은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;임의의 숫자가 필요할 때마다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Random()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 초기화 할 필요가 없다는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Random 객체를 하나 시작한 다음 루프 내에서 필요한만큼 여러 번 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2e341760257d154970a268e8b1c7f6c64c168d6b" translate="yes" xml:space="preserve">
          <source>The numbers generated by the inbuilt &lt;code&gt;Random&lt;/code&gt; class (System.Random) generates pseudo random numbers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내장 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Random&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스 (System.Random)에 의해 생성 된 숫자는 의사 난수를 생성합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="416de5409476abc0bc380a0a56b156bac127131e" translate="yes" xml:space="preserve">
          <source>The question looks very simple but the answer is  bit complicated. If you see almost everyone has suggested to use the Random class and some have suggested to use the RNG crypto class. But then when to choose what.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;질문은 매우 단순 해 보이지만 대답은 약간 복잡합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;거의 모든 사람들이 Random 클래스를 사용하도록 제안했으며 일부는 RNG 암호화 클래스를 사용하도록 제안했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 언제 무엇을 선택할 지.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea44102c483cbb9c8ac1fcff0b08b1765650506d" translate="yes" xml:space="preserve">
          <source>The solution is to &lt;em&gt;always&lt;/em&gt; use a single static random generator. Like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해결책은 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;항상&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 단일 정적 랜덤 생성기를 사용하는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이처럼 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49d65d6e727bc704368a3e03ebcc9cb4ec054b5d" translate="yes" xml:space="preserve">
          <source>Then you can use the static class like so..</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 정적 클래스를 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c2819086a92482f65d859bf2454b2e5d8390a2e4" translate="yes" xml:space="preserve">
          <source>This article takes a look at why randomness causes so many problems, and how to address them.
&lt;a href=&quot;http://csharpindepth.com/Articles/Chapter12/Random.aspx&quot;&gt;http://csharpindepth.com/Articles/Chapter12/Random.aspx&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 기사에서는 임의성이 왜 많은 문제를 일으키는 지, 그리고이를 해결하는 방법을 살펴 봅니다. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://csharpindepth.com/Articles/Chapter12/Random.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://csharpindepth.com/Articles/Chapter12/Random.aspx&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5cb8ec48f3641b82fded0bcb4b8605c9b8b8fb23" translate="yes" xml:space="preserve">
          <source>This is the class I use. Works like &lt;code&gt;RandomNumber.GenerateRandom(1, 666)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 내가 사용하는 수업입니다. &lt;/font&gt; &lt;code&gt;RandomNumber.GenerateRandom(1, 666)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 처럼 작동합니다&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9c1b99191f450509971d7f63ef91cd34d791c6d7" translate="yes" xml:space="preserve">
          <source>To understand OS entropy see this video from 14:30 &lt;a href=&quot;https://youtu.be/tCYxc-2-3fY?t=14m31s&quot;&gt;https://www.youtube.com/watch?v=tCYxc-2-3fY&lt;/a&gt; where the logic of OS entropy is explained. So putting in simple words RNG Crypto generates SECURE random numbers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;OS 엔트로피를 이해하려면 14:30 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://youtu.be/tCYxc-2-3fY?t=14m31s&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://www.youtube.com/watch?v=tCYxc-2-3fY&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서이 비디오를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조하십시오.&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 여기서 OS 엔트로피의 논리가 설명됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 간단한 단어로 RNG Crypto를 사용하면 SECURE 난수가 생성됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cf1b382618e5a297cf248083442d837bc36c17ae" translate="yes" xml:space="preserve">
          <source>Try these simple steps to create random numbers:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;임의의 숫자를 만들려면 다음 간단한 단계를 수행하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e00736dfa84fe21aee5428e9e7b4473806c7994" translate="yes" xml:space="preserve">
          <source>Use one instance of Random repeatedly</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Random의 한 인스턴스를 반복적으로 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce392fdbf5bb24e36d98f7452cae0678e096b1e8" translate="yes" xml:space="preserve">
          <source>Use the above function in a location where you want to use random numbers. Suppose you want to use it in a text box.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;난수를 사용하려는 위치에서 위 기능을 사용하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;텍스트 상자에 사용한다고 가정하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c35334a8ed6b5df94821b6dac1953c6263726d0c" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;RNGCryptoServiceProvider&lt;/code&gt; class uses OS entropy to generate seeds. OS entropy is a random value which is generated using sound, mouse click, and keyboard timings, thermal temp etc. Below goes the code for the same.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그동안 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;RNGCryptoServiceProvider&lt;/code&gt; 의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스가 사용하는 OS는 씨앗을 생성하기 위해 엔트로피. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;OS 엔트로피는 소리, 마우스 클릭 및 키보드 타이밍, 열 온도 등을 사용하여 생성되는 임의의 값입니다. 아래는 동일한 코드입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27f0ffb3a8fc45ac741347e830f419dc71f5b45c" translate="yes" xml:space="preserve">
          <source>While this is okay:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 괜찮지 만 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b7b100c58ff8d646e1c196adcca06650862ca99" translate="yes" xml:space="preserve">
          <source>Why not use &lt;code&gt;int randomNumber = Random.Range(start_range, end_range)&lt;/code&gt; ?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;왜 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int randomNumber = Random.Range(start_range, end_range)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 않습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c5d4888f40fd48d603d3340296bf8d14a288bc88" translate="yes" xml:space="preserve">
          <source>You can see the file diffs from .NET Framework/.NET Core (2.0.0+) here: &lt;a href=&quot;https://github.com/dotnet/coreclr/pull/2192/commits/9f6a0b675e5ac0065a268554de49162c539ff66d&quot;&gt;https://github.com/dotnet/coreclr/pull/2192/commits/9f6a0b675e5ac0065a268554de49162c539ff66d&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;: 현재 .NET 프레임 워크 / .NET 코어 (2.0.0+)에서 파일의 차이점을 볼 수 있습니다 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/dotnet/coreclr/pull/2192/commits/9f6a0b675e5ac0065a268554de49162c539ff66d&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/dotnet/coreclr/pull/2192/commits/9f6a0b675e5ac0065a268554de49162c539ff66d&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eafcea8f499cb8c50e2821247665cab3bf4454fa" translate="yes" xml:space="preserve">
          <source>You can try for example RANDOM.ORG (it reduces performance)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 RANDOM.ORG를 사용해 볼 수 있습니다 (성능이 저하됩니다)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="493cea7633f189ea4266cbd2a5fcdbb4322f376a" translate="yes" xml:space="preserve">
          <source>You can try with random seed value using below:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래를 사용하여 임의의 시드 값으로 시도 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31a00fb08535456058a3521283a0215f6ef0322b" translate="yes" xml:space="preserve">
          <source>You could use Jon Skeet's &lt;a href=&quot;https://jonskeet.uk/csharp/miscutil/&quot;&gt;StaticRandom&lt;/a&gt; method inside the MiscUtil class library that he built for a pseudo-random number.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Jon Skeet의 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://jonskeet.uk/csharp/miscutil/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;StaticRandom&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드를 의사 난수로 작성한 MiscUtil 클래스 라이브러리에서 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="462416f2d6b94075bd6ab7454309200f747e9da0" translate="yes" xml:space="preserve">
          <source>You may refer to this question I made a while back:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 잠시 전에 만든이 질문을 언급 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3d2b2be4bad21cd04b226e437100364a3af1e446" translate="yes" xml:space="preserve">
          <source>You'd want to control the limit (min and max mumbers) most of the time. So you need to specify where the random number starts and ends.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대부분의 시간에 한계 (최소 및 최대 mumbers)를 제어하려고합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 임의의 숫자가 시작하고 끝나는 위치를 지정해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d88f6ddfd27a70e9f5ccae97c14c6c5a5134669" translate="yes" xml:space="preserve">
          <source>if you are looking for random number generator for normal distribution, you might use a Box-Muller transformation. Check the answer by yoyoyoyosef in Random Gaussian Variable Question. Since you want integer, you have to cast double value to integer at the end.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정규 분포의 난수 생성기를 찾고 있다면 Box-Muller 변환을 사용할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Random Gaussian Variable Question에서 yoyoyoyosef의 답변을 확인하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정수를 원하기 때문에 마지막에 double 값을 정수로 캐스트해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eb46f8927c27355615a5cfd60c095088a598bb46" translate="yes" xml:space="preserve">
          <source>it's better to seed the Random object with current milliseconds, to ensure true random number, and you almost won't find duplicates using it many times</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제 임의의 숫자를 보장하기 위해 현재 밀리 초로 Random 객체를 시드하는 것이 좋으며 여러 번 사용하여 중복을 거의 찾지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
