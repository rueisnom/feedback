<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/2709821">
    <body>
      <group id="2709821">
        <trans-unit id="50e85d29c47a1d85bd7c5be469ba8466758d942e" translate="yes" xml:space="preserve">
          <source>1: Use of self explained</source>
          <target state="translated">1:Uso de la autoexplicación</target>
        </trans-unit>
        <trans-unit id="1537a8e68e069434e270cc3838444c83d94e5cc8" translate="yes" xml:space="preserve">
          <source>2: Why do we have it this way and why can we not eliminate it as an argument, like Java, and have a keyword instead</source>
          <target state="translated">2:¿Por qué lo tenemos así y por qué no podemos eliminarlo como argumento,como Java,y tener una palabra clave en su lugar</target>
        </trans-unit>
        <trans-unit id="5eb8f3b2312bc947db52c8a97e61506d1aedafe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; is an object reference to the object itself, therefore, they are same.
Python methods are not called in the context of the object itself.
&lt;code&gt;self&lt;/code&gt; in Python may be used to deal with custom object models or something.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una referencia de objeto al objeto en s&amp;iacute; mismo, por lo tanto, son lo mismo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los m&amp;eacute;todos de Python no se invocan en el contexto del objeto mismo. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en Python se puede usar para tratar con modelos de objetos personalizados o algo as&amp;iacute;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a874337841087eb6d4e3fd02ebeff09e3f41e30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; is used/needed to distinguish between instances.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se usa / necesita para distinguir entre instancias.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7bbbee55cb7764d08e89b619ce2618705e50c5e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;code&gt;self&lt;/code&gt; is inevitable.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es inevitable.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="000ff359a4612c3cd78461682bd92e1a6e08cc41" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;So where the &lt;code&gt;self&lt;/code&gt; live?&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, &amp;iquest;d&amp;oacute;nde &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;vive &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ?&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5876d210d7b4d75c13a6ac1e49433fa1a45a8975" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PS&lt;/strong&gt;:This works only in Python 3.x.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PD&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : esto solo funciona en Python 3.x.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9670bbb1d8cee5fcdc65d7155e230400409ebb4a" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;Note there are three different types of class methods: &lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que hay tres tipos diferentes de m&amp;eacute;todos de clase: &lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="63fc6fb7eeb47a2032fb704c9b812e661ad6c8da" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;class methods, &lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todos de clase, &lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="5984bb71b436be400f88353cdf605e197b5f9688" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;instance methods (mentioned).&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todos de instancia (mencionados).&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="32c3319fe4e24251db9e0824df8d8a9e43367f69" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;static methods (read: functions), &lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todos est&amp;aacute;ticos (l&amp;eacute;ase: funciones), &lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="c34a16b60167fe7774a9bd522b90a56ffc18afb0" translate="yes" xml:space="preserve">
          <source>Although this may not be wholly accurate, think of the process of instantiating an object like this: When an object is made it uses the class as a template for its own data and methods. Without passing it's own name into the self parameter, the attributes and methods in the class would remain as a general template and would not be referenced to (belong to) the object. So by passing the object's name into the self parameter it means that if 100 objects are instantiated from the one class, they can all keep track of their own data and methods.</source>
          <target state="translated">Aunque esto puede no ser del todo exacto,piense en el proceso de instanciación de un objeto como este:Cuando un objeto se hace,utiliza la clase como una plantilla para sus propios datos y métodos.Sin pasar su propio nombre al autoparámetro,los atributos y métodos de la clase permanecerían como una plantilla general y no serían referenciados a (pertenecer a)el objeto.Por lo tanto,al pasar el nombre del objeto al autoparámetro significa que si se instancian 100 objetos de la misma clase,todos ellos pueden hacer un seguimiento de sus propios datos y métodos.</target>
        </trans-unit>
        <trans-unit id="d191bd2f194e5d4b89d87364b155e100ffda17d8" translate="yes" xml:space="preserve">
          <source>An example of where it&amp;rsquo;s useful:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un ejemplo de d&amp;oacute;nde es &amp;uacute;til:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd718882d8614d635c144a6cb59b0ee9a633fd83" translate="yes" xml:space="preserve">
          <source>Another thing I would like to add is, an optional &lt;code&gt;self&lt;/code&gt; argument allows me to declare static methods inside a class, by not writing &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Otra cosa que me gustar&amp;iacute;a agregar es que un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;argumento &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; opcional &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;me permite declarar m&amp;eacute;todos est&amp;aacute;ticos dentro de una clase, al no escribir &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7fda3041282a75d7a819bf9be5dbebcf81e8c5b" translate="yes" xml:space="preserve">
          <source>Another way of understanding the need for the explicit &lt;code&gt;self&lt;/code&gt; is to see where Python adds some syntactical sugar. When you keep in mind, that basically, a call like</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Otra forma de entender la necesidad del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; expl&amp;iacute;cito &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;es ver d&amp;oacute;nde Python agrega algo de az&amp;uacute;car sint&amp;aacute;ctico. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando recuerdas, b&amp;aacute;sicamente, una llamada como&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d51ef4a664f88c7337f20cd95fa343ccee08592" translate="yes" xml:space="preserve">
          <source>As in Modula-3, there are no shorthands [in Python] for referencing the object&amp;rsquo;s members from its methods: the method function is declared with an explicit first argument representing the object, which is provided implicitly by the call.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como en Modula-3, no hay shorthands [en Python] para hacer referencia a los miembros del objeto desde sus m&amp;eacute;todos: la funci&amp;oacute;n del m&amp;eacute;todo se declara con un primer argumento expl&amp;iacute;cito que representa el objeto, que se proporciona impl&amp;iacute;citamente por la llamada.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6965d4a50fc0bb5303c1ad50710d902fffd1a3fd" translate="yes" xml:space="preserve">
          <source>As well as all the other reasons already stated, it allows for easier access to overridden methods; you can call &lt;code&gt;Class.some_method(inst)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s de todas las otras razones ya mencionadas, permite un acceso m&amp;aacute;s f&amp;aacute;cil a los m&amp;eacute;todos anulados; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;puede llamar a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class.some_method(inst)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="47825e120c811078fab3444ae5cfd581d14f7642" translate="yes" xml:space="preserve">
          <source>Because of this, the object&amp;rsquo;s data is bound to the object. Below is an example of how you might like to visualize what each object&amp;rsquo;s data might look. Notice how &amp;lsquo;self&amp;rsquo; is replaced with the objects name. I'm not saying this example diagram below is wholly accurate but it hopefully with serve a purpose in visualizing the use of self.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Debido a esto, los datos del objeto est&amp;aacute;n vinculados al objeto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A continuaci&amp;oacute;n se muestra un ejemplo de c&amp;oacute;mo le gustar&amp;iacute;a visualizar el aspecto de los datos de cada objeto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Observe c&amp;oacute;mo 'self' se reemplaza con el nombre de los objetos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No digo que este diagrama de ejemplo a continuaci&amp;oacute;n sea del todo exacto, pero espero que sirva para visualizar el uso de uno mismo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f75756ae2686b3787b103a87d2e562911fda7698" translate="yes" xml:space="preserve">
          <source>Can anyone talk me through this? It is not something I've come across in my (admittedly limited) experience.</source>
          <target state="translated">¿Alguien puede hablarme de esto? No es algo con lo que me haya encontrado en mi (obviamente limitada)experiencia.</target>
        </trans-unit>
        <trans-unit id="2a0a65b981f3e6edeea679d1cb736a592c98898e" translate="yes" xml:space="preserve">
          <source>Classes are just a way to avoid passing in this &quot;state&quot; thing all the time (and other nice things like initializing, class composition, the rarely-needed metaclasses, and supporting custom methods to override operators).</source>
          <target state="translated">Las clases son sólo una forma de evitar pasar por este &quot;estado&quot; todo el tiempo (y otras cosas bonitas como la inicialización,la composición de las clases,las metaclases que raramente se necesitan y el apoyo a los métodos personalizados para anular los operadores).</target>
        </trans-unit>
        <trans-unit id="f6149f799d8c444725006c9698a101c422ecde86" translate="yes" xml:space="preserve">
          <source>Code examples:</source>
          <target state="translated">Ejemplos de códigos:</target>
        </trans-unit>
        <trans-unit id="3d397aef3c49cb0016377f1a744764bdb0ac8452" translate="yes" xml:space="preserve">
          <source>Code is here</source>
          <target state="translated">El código está aquí</target>
        </trans-unit>
        <trans-unit id="2850358a794f53a868ef5cde0f2e09281010eb73" translate="yes" xml:space="preserve">
          <source>First of all, self is a conventional name, you could put anything else (being coherent) in its stead.</source>
          <target state="translated">En primer lugar,&quot;yo&quot; es un nombre convencional,podrías poner cualquier otra cosa (siendo coherente)en su lugar.</target>
        </trans-unit>
        <trans-unit id="d1091bb5dc4fffffabec8d605e2909ed5e5beae7" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;http://docs.python.org/tutorial/classes.html&quot;&gt;Python documentation tutorial on classes&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte el &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/tutorial/classes.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tutorial de documentaci&amp;oacute;n de Python sobre clases&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ebb6ada30b264c4be67d7f9f6f903e92d521dbe" translate="yes" xml:space="preserve">
          <source>Here is the typical use case &lt;code&gt;class C&lt;/code&gt; with the method &lt;code&gt;m1&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; est&amp;aacute; el caso de uso t&amp;iacute;pico &lt;/font&gt;&lt;/font&gt; &lt;code&gt;class C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; con el m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;m1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="86dbec6b29f290589f8c98a049e22d2aa0593076" translate="yes" xml:space="preserve">
          <source>However the current situation works out well:</source>
          <target state="translated">Sin embargo,la situación actual funciona bien:</target>
        </trans-unit>
        <trans-unit id="679cfe9a74012f5e9ad53e01c20c9cb0c6bd960c" translate="yes" xml:space="preserve">
          <source>However, an object method, which requires you to make a variable, which is an Animal, in this case, needs the self argument</source>
          <target state="translated">Sin embargo,un método de objeto,que requiere hacer una variable,que es un animal,en este caso,necesita el argumento de sí mismo</target>
        </trans-unit>
        <trans-unit id="78a980d3d9db85fa50ef635a3331990e04311c7b" translate="yes" xml:space="preserve">
          <source>I like this example:</source>
          <target state="translated">Me gusta este ejemplo:</target>
        </trans-unit>
        <trans-unit id="8e492903d2e5ae5c26b7a8e28f06043f9f5a5b80" translate="yes" xml:space="preserve">
          <source>I will demonstrate with code that &lt;strong&gt;does not use classes&lt;/strong&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo demostrar&amp;eacute; con c&amp;oacute;digo que &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no usa clases&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c19c4bc24da7e68f7630b6e13941c1405ee9f20d" translate="yes" xml:space="preserve">
          <source>I'm surprised nobody has brought up Lua. Lua also uses the 'self' variable however it can be omitted but still used. C++ does the same with 'this'. I don't see any reason to have to declare 'self' in each function but you should still be able to use it just like you can with lua and C++. For a language that prides itself on being brief it's odd that it requires you to declare the self variable.</source>
          <target state="translated">Me sorprende que nadie haya hablado de Lua.Lua también usa la variable &quot;self&quot;,sin embargo puede ser omitida pero aún así usada.C++hace lo mismo con 'esto'.No veo ninguna razón para tener que declarar &quot;self&quot; en cada función,pero aún así deberías ser capaz de usarla como puedes con Lua y C++.Para un lenguaje que se enorgullece de ser breve es extraño que requiera que declares la variable self.</target>
        </trans-unit>
        <trans-unit id="cf2a59502df9000886690e5c93aa08fae3dbb2f0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;user_type_name&lt;/code&gt; is a field on your model you access it by &lt;code&gt;self.user_type_name&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si &lt;/font&gt;&lt;/font&gt; &lt;code&gt;user_type_name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es un campo en su modelo, puede acceder por &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self.user_type_name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3cd8541d9818861c74e04f0ea1206bb8511dbd2b" translate="yes" xml:space="preserve">
          <source>If we would just stick to functional programming we would not need &lt;code&gt;self&lt;/code&gt;.
Once we enter the &lt;em&gt;Python OOP&lt;/em&gt; we find &lt;code&gt;self&lt;/code&gt; there.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si nos limit&amp;aacute;ramos a la programaci&amp;oacute;n funcional, no nos necesitar&amp;iacute;amos a nosotros &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una vez que entramos en la &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;programaci&amp;oacute;n orientada a objetos Python&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; nos encontramos con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; all&amp;iacute;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f3a3b993145f45c688b6cfd5b2591df95605e36f" translate="yes" xml:space="preserve">
          <source>If you don't understand a single word of what I am saying, then Google &quot;Object Oriented Programming.&quot; Once you understand this, you won't even need to ask that question :).</source>
          <target state="translated">Si no entiendes ni una sola palabra de lo que digo,entonces busca en Google &quot;Programación Orientada a Objetos&quot;.Una vez que entiendas esto,ni siquiera necesitarás hacer esa pregunta :).</target>
        </trans-unit>
        <trans-unit id="b25b45089714fe4d147920ae1c6a7e704509ca1a" translate="yes" xml:space="preserve">
          <source>In previous versions, you have to explicitly add &lt;code&gt;@staticmethod&lt;/code&gt; decorator, otherwise &lt;code&gt;self&lt;/code&gt; argument is obligatory.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En versiones anteriores, debe agregar expl&amp;iacute;citamente el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;decorador &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@staticmethod&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , de lo contrario, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; argumento &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propio&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es obligatorio.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1be71fcef2d5e1bb4f22ae67b000649511c0af59" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;__init__&lt;/code&gt; method, self refers to the newly created object; in other class methods, it refers to the instance whose method was called.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , self se refiere al objeto reci&amp;eacute;n creado; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en otros m&amp;eacute;todos de clase, se refiere a la instancia cuyo m&amp;eacute;todo fue llamado.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="452b0a268b84f2447c95120175df2b3e61456dd3" translate="yes" xml:space="preserve">
          <source>In this case, self is referring to the animalName variable of the entire class. REMEMBER: If you have a variable within a method, self will not work. That variable is simply existent only while that method is running. For defining fields (the variables of the entire class), you have to define them OUTSIDE the class methods.</source>
          <target state="translated">En este caso,el &quot;yo&quot; se refiere a la variable &quot;nombre del animal&quot; de toda la clase.RECUERDA:Si tienes una variable dentro de un método,el &quot;self&quot; no funcionará.Esa variable simplemente existe sólo mientras el método está funcionando.Para definir los campos (las variables de toda la clase),tienes que definirlos FUERA de los métodos de la clase.</target>
        </trans-unit>
        <trans-unit id="bad7092bf970259d27d6ca40103b481dc18aeada" translate="yes" xml:space="preserve">
          <source>Is because by the way python is designed the alternatives would hardly work. Python is designed to allow methods or functions to be defined in a context where both implicit &lt;code&gt;this&lt;/code&gt; (a-la Java/C++) or explicit &lt;code&gt;@&lt;/code&gt; (a-la ruby) wouldn't work. Let's have an example with the explicit approach with python conventions:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es porque, por cierto, Python est&amp;aacute; dise&amp;ntilde;ado, las alternativas dif&amp;iacute;cilmente funcionar&amp;iacute;an. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python est&amp;aacute; dise&amp;ntilde;ado para permitir que los m&amp;eacute;todos o funciones se definan en un contexto donde ambos, impl&amp;iacute;cito, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (a-la Java / C ++) o expl&amp;iacute;cito &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (a-la ruby) no funcionar&amp;iacute;an. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Veamos un ejemplo con el enfoque expl&amp;iacute;cito con las convenciones de python:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4ed620c87c639fb9b0860ceeda85570cbe8b9b3e" translate="yes" xml:space="preserve">
          <source>It refers to the object itself, so when you are using it, you are declaring that .name and .age are properties of the Student objects (note, not of the Student class) you are going to create.</source>
          <target state="translated">Se refiere al objeto en sí mismo,así que cuando lo usas,estás declarando que .name y .age son propiedades de los objetos de Student (nota,no de la clase de Student)que vas a crear.</target>
        </trans-unit>
        <trans-unit id="21bf8feaa6c0a2f61c70a863156d23df7a935d91" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s there to follow the Python zen &amp;ldquo;explicit is better than implicit&amp;rdquo;. It&amp;rsquo;s indeed a reference to your class object. In Java and PHP, for example, it's called &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Est&amp;aacute; ah&amp;iacute; para seguir el zen de Python &quot;expl&amp;iacute;cito es mejor que impl&amp;iacute;cito&quot;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De hecho, es una referencia a su objeto de clase. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En Java y PHP, por ejemplo, se llama &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2c9c4c77d4adbd01f1435185efa5957ed6778e9" translate="yes" xml:space="preserve">
          <source>Its use is similar to the use of &lt;code&gt;this&lt;/code&gt; keyword in Java, i.e. to give a reference to the current object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Su uso es similar al uso de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; palabra clave en Java, es decir, para dar una referencia al objeto actual.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a620020f809368b31aaece363f3a58b2d40f3ba" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take a simple vector class:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tomemos una clase de vector simple:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20fb24e3a04118e838e61d25d5d3d3b68eab42e7" translate="yes" xml:space="preserve">
          <source>Let's say you have a class &lt;code&gt;ClassA&lt;/code&gt; which contains a method &lt;code&gt;methodA&lt;/code&gt; defined as:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Digamos que tiene una clase &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ClassA&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que contiene un m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;methodA&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; definido como:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="42b61ca4b9c209d049a6afa504e32bd2ac5178b9" translate="yes" xml:space="preserve">
          <source>Note that it is not a keyword.</source>
          <target state="translated">Tengan en cuenta que no es una palabra clave.</target>
        </trans-unit>
        <trans-unit id="d0f0ab3b327e5b3e363a25cd02fd12261e55f5a3" translate="yes" xml:space="preserve">
          <source>Now let's demonstrate the above code using the built-in python class machinery, to show how it's basically the same thing.</source>
          <target state="translated">Ahora vamos a demostrar el código anterior utilizando la maquinaria de clase pitón incorporada,para mostrar cómo es básicamente lo mismo.</target>
        </trans-unit>
        <trans-unit id="63c6bd152a96e31a755ef297e6442c2fb1689438" translate="yes" xml:space="preserve">
          <source>Now the &lt;code&gt;fubar&lt;/code&gt; function wouldn't work since it would assume that &lt;code&gt;self&lt;/code&gt; is a global variable (and in &lt;code&gt;frob&lt;/code&gt; as well). The alternative would be to execute method's with a replaced global scope (where &lt;code&gt;self&lt;/code&gt; is the object).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fubar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no funcionar&amp;iacute;a, ya que supondr&amp;iacute;a que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una variable global (y tambi&amp;eacute;n en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;frob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La alternativa ser&amp;iacute;a ejecutar m&amp;eacute;todos con un alcance global reemplazado (donde &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es el objeto).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15df964e763425375e70415f5ca93a9ba7753977" translate="yes" xml:space="preserve">
          <source>Now when &lt;code&gt;ObjectA.methodA(arg1, arg2)&lt;/code&gt; is called, python internally converts it for you as:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora, cuando se &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ObjectA.methodA(arg1, arg2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , python lo convierte internamente para usted como:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c4f1512422cda9536646701fa09bf1ff9841053" translate="yes" xml:space="preserve">
          <source>Often, the first argument of a method is called self. This is nothing more than a convention: the name self has absolutely no special meaning to Python. Note, however, that by not following the convention your code may be less readable to other Python programmers, and it is also conceivable that a class browser program might be written that relies upon such a convention.</source>
          <target state="translated">A menudo,el primer argumento de un método se llama &quot;self&quot;.Esto no es más que una convención:el nombre &quot;self&quot; no tiene ningún significado especial para Python.Sin embargo,hay que tener en cuenta que al no seguir la convención su código puede ser menos legible para otros programadores de Python,y también es concebible que se escriba un programa de navegación de clases que se base en dicha convención.</target>
        </trans-unit>
        <trans-unit id="258a1ed20442bd3f7ba346c3f9794ef4a31bfa8e" translate="yes" xml:space="preserve">
          <source>Python could have done something else to distinguish normal names from attributes -- special syntax like Ruby has, or requiring declarations like C++ and Java do, or perhaps something  yet more different -- but it didn't. Python's all for making things explicit, making it obvious what's what, and although it doesn't do it entirely everywhere, it does do it for instance attributes. That's why assigning to an instance attribute needs to know what instance to assign to, and that's why it needs &lt;code&gt;self.&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python podr&amp;iacute;a haber hecho algo m&amp;aacute;s para distinguir los nombres normales de los atributos, una sintaxis especial como la que Ruby tiene, o que requiere declaraciones como C ++ y Java, o tal vez algo a&amp;uacute;n m&amp;aacute;s diferente, pero no fue as&amp;iacute;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python es todo para hacer las cosas expl&amp;iacute;citas, haciendo obvio qu&amp;eacute; es qu&amp;eacute;, y aunque no lo hace completamente en todas partes, s&amp;iacute; lo hace, por ejemplo, los atributos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es por eso que la asignaci&amp;oacute;n a un atributo de instancia necesita saber a qu&amp;eacute; instancia asignar, y es por eso que necesita &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4683d3f409566286d2017192d77dcb16ba4f059d" translate="yes" xml:space="preserve">
          <source>Python is not a language built for Object Oriented Programming unlike Java or C++.</source>
          <target state="translated">Python no es un lenguaje construido para la Programación Orientada a Objetos a diferencia de Java o C++.</target>
        </trans-unit>
        <trans-unit id="e9f759641972f26a0f6ec82d58012e08599b7ace" translate="yes" xml:space="preserve">
          <source>See the illustration below:</source>
          <target state="translated">Vea la ilustración de abajo:</target>
        </trans-unit>
        <trans-unit id="3c5d6c52a96c36ca40fc11c0b386b2571f9c617c" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;self&lt;/code&gt; holds the memory address of the class instance.
&lt;em&gt;The purpose&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt; would be to hold the reference for &lt;em&gt;instance methods&lt;/em&gt; and for us to have &lt;strong&gt;explicit&lt;/strong&gt; access to that reference.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; contiene la direcci&amp;oacute;n de memoria de la instancia de clase. &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El prop&amp;oacute;sito&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ser&amp;iacute;a mantener la referencia, por &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ejemplo, los m&amp;eacute;todos&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y tener &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;acceso &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;expl&amp;iacute;cito&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a esa referencia.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8033fe43cda2814a433763ba5aed294a107a16ff" translate="yes" xml:space="preserve">
          <source>So the whole structure stays the same. How can me make use of this? If we assume for a moment that we hadn&amp;rsquo;t written a &lt;code&gt;length&lt;/code&gt; method for our &lt;code&gt;Vector&lt;/code&gt; class, we could do this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces toda la estructura permanece igual. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;C&amp;oacute;mo puedo hacer uso de esto? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si suponemos por un momento que no hab&amp;iacute;amos escrito un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;length&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para nuestra &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;clase de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Vector&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , podr&amp;iacute;amos hacer esto:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8eb070aa7c635eb9bd885287b9adbf5e28e64710" translate="yes" xml:space="preserve">
          <source>Take a look at the following example, which clearly explains the purpose of &lt;code&gt;self&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Eche un vistazo al siguiente ejemplo, que explica claramente el prop&amp;oacute;sito de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="34b1e6c79b713cc0f1cb08dee730316708c202e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;self&lt;/code&gt; variable refers to the object itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;variable &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refiere al objeto mismo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33ab0fa14d5634f4ae1f8ce119fc35712999037e" translate="yes" xml:space="preserve">
          <source>The Object is passed into the self parameter so that the object can keep hold of its own data.</source>
          <target state="translated">El objeto se pasa al autoparámetro para que el objeto pueda mantener sus propios datos.</target>
        </trans-unit>
        <trans-unit id="4b52872a14b15cd870db6e292baff0770de114fd" translate="yes" xml:space="preserve">
          <source>The first argument of every class method, including init, is always a reference to the current instance of the class. By convention, this argument is always named self. In the init method, self refers to the newly created object; in other class methods, it refers to the instance whose method was called. For example the below code is the same as the above code.</source>
          <target state="translated">El primer argumento de cada método de clase,incluido el init,es siempre una referencia a la instancia actual de la clase.Por convención,este argumento siempre se denomina self.En el método init,self se refiere al objeto recién creado;en otros métodos de clase,se refiere a la instancia cuyo método fue llamado.Por ejemplo,el código de abajo es el mismo que el de arriba.</target>
        </trans-unit>
        <trans-unit id="a5debc952d5b06e246420009c31e64d9cf5ef808" translate="yes" xml:space="preserve">
          <source>The following excerpts are from the &lt;a href=&quot;http://docs.python.org/tutorial/classes.html&quot;&gt;Python documentation about self&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los siguientes extractos son de la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/tutorial/classes.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;documentaci&amp;oacute;n de Python sobre self&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71f9277b0ee801046ce1b5d5d98d2fbb263d87c6" translate="yes" xml:space="preserve">
          <source>The implicit approach would be</source>
          <target state="translated">El enfoque implícito sería</target>
        </trans-unit>
        <trans-unit id="ddfded39a7b36e02781c387a61e0e0bb144cd52e" translate="yes" xml:space="preserve">
          <source>The reason you need to use &lt;code&gt;self.&lt;/code&gt; is because Python does not use the &lt;code&gt;@&lt;/code&gt; syntax to refer to instance attributes. Python decided to do methods in a way that makes the instance to which the method belongs be &lt;em&gt;passed&lt;/em&gt; automatically, but not &lt;em&gt;received&lt;/em&gt; automatically: the first parameter of methods is the instance the method is called on. That makes methods entirely the same as functions, and leaves the actual name to use up to you (although &lt;code&gt;self&lt;/code&gt; is the convention, and people will generally frown at you when you use something else.) &lt;code&gt;self&lt;/code&gt; is not special to the code, it's just another object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La raz&amp;oacute;n por la que necesitas usar el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es porque Python no usa la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;sintaxis &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para referirse a los atributos de instancia. Python decidi&amp;oacute; hacer m&amp;eacute;todos de una manera que haga que la instancia a la que pertenece el m&amp;eacute;todo se &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pase&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; autom&amp;aacute;ticamente, pero no se &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;reciba&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; autom&amp;aacute;ticamente: el primer par&amp;aacute;metro de los m&amp;eacute;todos es la instancia en la que se llama al m&amp;eacute;todo. Eso hace que los m&amp;eacute;todos sean completamente iguales a las funciones, y deja que el nombre real lo use usted (aunque &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es la convenci&amp;oacute;n, y la gente generalmente fruncir&amp;aacute; el ce&amp;ntilde;o cuando usa otra cosa). &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no es especial para el c&amp;oacute;digo, es solo otro objeto&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="236e866fde0d76ee2f000c8552125a8a8ff7ae46" translate="yes" xml:space="preserve">
          <source>The self method is also used to refer to a variable field within the class.</source>
          <target state="translated">El método de autocontrol también se utiliza para referirse a un campo variable dentro de la clase.</target>
        </trans-unit>
        <trans-unit id="357314b070890139eadce8c33ddb4a9f5b685e85" translate="yes" xml:space="preserve">
          <source>The use of the argument, conventionally called &lt;code&gt;self&lt;/code&gt; isn't as hard to understand, as is why is it necessary? Or as to why explicitly mention it? That, I suppose, is a bigger question for most users who look up this question, or if it is not, they will certainly have the same question as they move forward learning python. I recommend them to read these couple of blogs:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El uso del argumento, convencionalmente llamado &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no es tan dif&amp;iacute;cil de entender, como es &amp;iquest;por qu&amp;eacute; es necesario? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;O por qu&amp;eacute; mencionarlo expl&amp;iacute;citamente? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esa, supongo, es una pregunta m&amp;aacute;s grande para la mayor&amp;iacute;a de los usuarios que buscan esta pregunta, o si no es as&amp;iacute;, sin duda tendr&amp;aacute;n la misma pregunta a medida que avanzan aprendiendo Python. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Les recomiendo que lean estos dos blogs:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aad90dfdf56f4dead42a985825163ec490775638" translate="yes" xml:space="preserve">
          <source>There was just a &lt;a href=&quot;https://www.artima.com/weblogs/viewpost.jsp?thread=239003&quot;&gt;question&lt;/a&gt; should &lt;code&gt;self&lt;/code&gt; be implicit or explicit.
&lt;a href=&quot;https://en.wikipedia.org/wiki/Guido_van_Rossum&quot;&gt;&lt;code&gt;Guido van Rossum&lt;/code&gt;&lt;/a&gt; resolved this question saying &lt;a href=&quot;https://neopythonic.blogspot.com/2008/10/why-explicit-self-has-to-stay.html&quot;&gt;&lt;code&gt;self&lt;/code&gt; has to stay&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No era s&amp;oacute;lo una &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.artima.com/weblogs/viewpost.jsp?thread=239003&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cuesti&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; deber&amp;iacute;a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sea impl&amp;iacute;cita o expl&amp;iacute;cita. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Guido_van_Rossum&quot;&gt; &lt;code&gt;Guido van Rossum&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; resolvi&amp;oacute; esta pregunta diciendo que &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://neopythonic.blogspot.com/2008/10/why-explicit-self-has-to-stay.html&quot;&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene que quedarse&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="593c5330f958a39918abf861eca976eee15dc227" translate="yes" xml:space="preserve">
          <source>This program will output:</source>
          <target state="translated">Este programa dará salida:</target>
        </trans-unit>
        <trans-unit id="eef4955b5010ecd4fd99113e1edfc155496ebf10" translate="yes" xml:space="preserve">
          <source>This works because the first parameter of &lt;code&gt;length_global&lt;/code&gt;, can be re-used as the &lt;code&gt;self&lt;/code&gt; parameter in &lt;code&gt;length_new&lt;/code&gt;. This would not be possible without an explicit &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto funciona porque el primer par&amp;aacute;metro de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;length_global&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , se puede reutilizar como &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;par&amp;aacute;metro &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;length_new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto no ser&amp;iacute;a posible sin un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; expl&amp;iacute;cito &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2596a67954f16752ece427c512b8db673c0d7cf7" translate="yes" xml:space="preserve">
          <source>This would mean that &lt;code&gt;myX&lt;/code&gt; would be interpreted as a local variable in &lt;code&gt;fubar&lt;/code&gt; (and in &lt;code&gt;frob&lt;/code&gt; as well). The alternative here would be to execute methods with a replaced local scope which is retained between calls, but that would remove the posibility of method local variables.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto significar&amp;iacute;a que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;myX&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se interpretar&amp;iacute;a como una variable local en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fubar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (y tambi&amp;eacute;n en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;frob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La alternativa aqu&amp;iacute; ser&amp;iacute;a ejecutar m&amp;eacute;todos con un alcance local reemplazado que se retiene entre llamadas, pero eso eliminar&amp;iacute;a la posibilidad de variables locales del m&amp;eacute;todo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed2cbf212c8ade235fd86f44cae03dacd4093358" translate="yes" xml:space="preserve">
          <source>We want to have a method which calculates the length. What would it look like if we wanted to define it inside the class?</source>
          <target state="translated">Queremos tener un método que calcule la longitud.¿Cómo sería si quisiéramos definirla dentro de la clase?</target>
        </trans-unit>
        <trans-unit id="51c707af171267923b8f12ea5d5f5baf6defa4a4" translate="yes" xml:space="preserve">
          <source>What is the purpose of the &lt;code&gt;self&lt;/code&gt; word in Python? I understand it refers to the specific object created from that class, but I can't see why it explicitly needs to be added to every function as a parameter. To illustrate, in Ruby I can do this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Cu&amp;aacute;l es el prop&amp;oacute;sito de la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;palabra &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en Python? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entiendo que se refiere al objeto espec&amp;iacute;fico creado a partir de esa clase, pero no puedo ver por qu&amp;eacute; debe agregarse expl&amp;iacute;citamente a cada funci&amp;oacute;n como par&amp;aacute;metro. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para ilustrar, en Ruby puedo hacer esto:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20f72ac8403123e86e8f003d52ec694b7faef133" translate="yes" xml:space="preserve">
          <source>What is the purpose of the word 'self'</source>
          <target state="translated">¿Cuál es el propósito de la palabra &quot;yo&quot;?</target>
        </trans-unit>
        <trans-unit id="f4d688a1bfa95956a5de1b7469fb1318897cb850" translate="yes" xml:space="preserve">
          <source>What should it look like when we were to define it as a global method/function?</source>
          <target state="translated">¿Cómo debería ser cuando lo definamos como una función de método global?</target>
        </trans-unit>
        <trans-unit id="e01e46f09d9e7888039e78471558742a261a5a69" translate="yes" xml:space="preserve">
          <source>When calling a static method in Python, one simply writes a method with regular arguments inside it.</source>
          <target state="translated">Cuando se llama a un método estático en Python,uno simplemente escribe un método con argumentos regulares dentro de él.</target>
        </trans-unit>
        <trans-unit id="7184698ade8e0047ba5ca2450108ac89df6c1957" translate="yes" xml:space="preserve">
          <source>When objects are instantiated, the object itself is passed into the self parameter.</source>
          <target state="translated">Cuando los objetos se instancian,el propio objeto se pasa al autoparámetro.</target>
        </trans-unit>
        <trans-unit id="8de116e44bafb791e48be7570d1a71f076e1700d" translate="yes" xml:space="preserve">
          <source>Which I understand, quite easily. However in Python I need to include &lt;code&gt;self&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo cual entiendo, con bastante facilidad. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, en Python necesito incluir &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="62a45f03a7cb6b87698f82532e1d2c3771f05107" translate="yes" xml:space="preserve">
          <source>You should take a look at &lt;code&gt;cls&lt;/code&gt; too, to have &lt;strong&gt;&lt;em&gt;the bigger picture&lt;/em&gt;&lt;/strong&gt;. This &lt;a href=&quot;https://stackoverflow.com/questions/7554738/python-self-no-self-and-cls&quot;&gt;&lt;strong&gt;post&lt;/strong&gt;&lt;/a&gt; could be helpful.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n deber&amp;iacute;as echar un vistazo a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;cls&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para tener &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;una imagen m&amp;aacute;s grande&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/7554738/python-self-no-self-and-cls&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;publicaci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; podr&amp;iacute;a ser &amp;uacute;til.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cda8d6f8522fc89e6f8523ec1bd67f9f85b7a529" translate="yes" xml:space="preserve">
          <source>[migrated my answer from duplicate closed question]</source>
          <target state="translated">[migró mi respuesta de la pregunta cerrada duplicada]</target>
        </trans-unit>
        <trans-unit id="121ffea1a0e29f88cc77aa8380ef0cbc7ebc882f" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;ObjectA&lt;/code&gt; is an instance of this class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ObjectA&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una instancia de esta clase.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="36566f0d5cd3b605a76017fb817f21e2ece7b8c5" translate="yes" xml:space="preserve">
          <source>from the &lt;a href=&quot;https://docs.python.org/3/tutorial/classes.html#method-objects&quot;&gt;docs&lt;/a&gt;,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;de los &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/tutorial/classes.html#method-objects&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;documentos&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ,&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5298c83d605c12f453bc762c3d960a8cb581ef99" translate="yes" xml:space="preserve">
          <source>here when called as a method &lt;code&gt;frob&lt;/code&gt; will receive the object on which it's called via the &lt;code&gt;self&lt;/code&gt; parameter, and &lt;code&gt;fubar&lt;/code&gt; can still be called with an object as parameter and work the same (it &lt;em&gt;is&lt;/em&gt; the same as &lt;code&gt;C.frob&lt;/code&gt; I think).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aqu&amp;iacute;, cuando se llama como m&amp;eacute;todo, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;frob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; recibir&amp;aacute; el objeto en el que se llama a trav&amp;eacute;s del &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;par&amp;aacute;metro &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;todav&amp;iacute;a se puede llamar a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fubar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; con un objeto como par&amp;aacute;metro y funciona igual ( &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;creo &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;que &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;es&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; lo mismo que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C.frob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="743291c3850784c84035f299485b24abf93248d8" translate="yes" xml:space="preserve">
          <source>is internally transformed to</source>
          <target state="translated">se transforma internamente para</target>
        </trans-unit>
        <trans-unit id="ff4cfbf9b524daaa207c90c3ff07eeccb917e997" translate="yes" xml:space="preserve">
          <source>it is easy to see where the &lt;code&gt;self&lt;/code&gt; fits in. You don't actually write instance methods in Python; what you write is class methods which must take an instance as a first parameter. And therefore, you&amp;rsquo;ll have to place the instance parameter somewhere explicitly.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;es f&amp;aacute;cil ver d&amp;oacute;nde &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;encaja &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . En realidad, no escribe m&amp;eacute;todos de instancia en Python; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lo que escribes son m&amp;eacute;todos de clase que deben tomar una instancia como primer par&amp;aacute;metro. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y por lo tanto, tendr&amp;aacute; que colocar el par&amp;aacute;metro de instancia en alg&amp;uacute;n lugar expl&amp;iacute;citamente.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="602a92975ef013086ca7aaa6bf413c282246b22d" translate="yes" xml:space="preserve">
          <source>it's an explicit reference to the class instance object.</source>
          <target state="translated">es una referencia explícita al objeto de la instancia de clase.</target>
        </trans-unit>
        <trans-unit id="4a914850299ac09863ca47de283030472b1323a8" translate="yes" xml:space="preserve">
          <source>preceding this the related snippet,</source>
          <target state="translated">precediendo a esto el fragmento relacionado,</target>
        </trans-unit>
        <trans-unit id="662e7a4e1ccf087f0bd4e57b2d8916d49da4bba7" translate="yes" xml:space="preserve">
          <source>self is acting as like current object name or instance of class .</source>
          <target state="translated">El yo está actuando como el nombre del objeto actual o la instancia de la clase.</target>
        </trans-unit>
        <trans-unit id="2299eef37790f4ca4597855716d34cdfde332c03" translate="yes" xml:space="preserve">
          <source>self, as a name, is &lt;strong&gt;&lt;em&gt;just a convention&lt;/em&gt;&lt;/strong&gt;, call it as you want ! but when using it, for example to delete the object, you have to use the same name: &lt;code&gt;__del__(var)&lt;/code&gt;, where &lt;code&gt;var&lt;/code&gt; was used in the &lt;code&gt;__init__(var,[...])&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;self, como nombre, es &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;solo una convenci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &amp;iexcl;ll&amp;aacute;malo como quieras! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pero al usarlo, por ejemplo, para eliminar el objeto, debe usar el mismo nombre: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__del__(var)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , donde &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se us&amp;oacute; en el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__(var,[...])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f65e60d4715eb9fb11f7c4dc1fe62b7ab19827e" translate="yes" xml:space="preserve">
          <source>the special thing about methods is that the instance object is passed as the first argument of the function. In our example, the call &lt;code&gt;x.f()&lt;/code&gt; is exactly equivalent to &lt;code&gt;MyClass.f(x)&lt;/code&gt;. In general, calling a method with a list of n arguments is equivalent to calling the corresponding function with an argument list that is created by inserting the method&amp;rsquo;s instance object before the first argument.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo especial de los m&amp;eacute;todos es que el objeto de instancia se pasa como el primer argumento de la funci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En nuestro ejemplo, la llamada &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x.f()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es exactamente equivalente a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyClass.f(x)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En general, llamar a un m&amp;eacute;todo con una lista de n argumentos es equivalente a llamar a la funci&amp;oacute;n correspondiente con una lista de argumentos que se crea insertando el objeto de instancia del m&amp;eacute;todo antes del primer argumento.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
