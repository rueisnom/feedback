<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/2709821">
    <body>
      <group id="2709821">
        <trans-unit id="50e85d29c47a1d85bd7c5be469ba8466758d942e" translate="yes" xml:space="preserve">
          <source>1: Use of self explained</source>
          <target state="translated">1:自己説明の利用</target>
        </trans-unit>
        <trans-unit id="1537a8e68e069434e270cc3838444c83d94e5cc8" translate="yes" xml:space="preserve">
          <source>2: Why do we have it this way and why can we not eliminate it as an argument, like Java, and have a keyword instead</source>
          <target state="translated">2:なぜこのようにしているのか、なぜJavaのように引数として排除せず、代わりにキーワードを持つことができるのか。</target>
        </trans-unit>
        <trans-unit id="5eb8f3b2312bc947db52c8a97e61506d1aedafe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; is an object reference to the object itself, therefore, they are same.
Python methods are not called in the context of the object itself.
&lt;code&gt;self&lt;/code&gt; in Python may be used to deal with custom object models or something.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はオブジェクト自体へのオブジェクト参照であるため、同じです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonメソッドは、オブジェクト自体のコンテキストでは呼び出されません。 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、カスタムオブジェクトモデルなどを処理するために使用できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a874337841087eb6d4e3fd02ebeff09e3f41e30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; is used/needed to distinguish between instances.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はインスタンスを区別するために使用/必要です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7bbbee55cb7764d08e89b619ce2618705e50c5e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;code&gt;self&lt;/code&gt; is inevitable.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は避けられません。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="000ff359a4612c3cd78461682bd92e1a6e08cc41" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;So where the &lt;code&gt;self&lt;/code&gt; live?&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それで、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はどこに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;住んでいますか？&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5876d210d7b4d75c13a6ac1e49433fa1a45a8975" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PS&lt;/strong&gt;:This works only in Python 3.x.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PS&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：これはPython 3.xでのみ機能します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9670bbb1d8cee5fcdc65d7155e230400409ebb4a" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;Note there are three different types of class methods: &lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスメソッドには3つの異なるタイプがあることに注意してください。 &lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="63fc6fb7eeb47a2032fb704c9b812e661ad6c8da" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;class methods, &lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスメソッド、 &lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="5984bb71b436be400f88353cdf605e197b5f9688" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;instance methods (mentioned).&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンスメソッド（言及）。&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="32c3319fe4e24251db9e0824df8d8a9e43367f69" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;static methods (read: functions), &lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的メソッド（読み取り：関数）、 &lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="c34a16b60167fe7774a9bd522b90a56ffc18afb0" translate="yes" xml:space="preserve">
          <source>Although this may not be wholly accurate, think of the process of instantiating an object like this: When an object is made it uses the class as a template for its own data and methods. Without passing it's own name into the self parameter, the attributes and methods in the class would remain as a general template and would not be referenced to (belong to) the object. So by passing the object's name into the self parameter it means that if 100 objects are instantiated from the one class, they can all keep track of their own data and methods.</source>
          <target state="translated">これは完全に正確ではないかもしれませんが、このようにオブジェクトをインスタンス化するプロセスを考えてみましょう。オブジェクトが作成されると、それ自身のデータとメソッドのテンプレートとしてクラスを使用します。オブジェクトが作られると、それ自身のデータとメソッドのテンプレートとしてクラスを使用します。selfパラメータに自分の名前を渡さなければ、クラスの属性とメソッドは一般的なテンプレートのままで、オブジェクトには参照されません。つまり、オブジェクトの名前をselfパラメータに渡すことで、100個のオブジェクトが1つのクラスからインスタンス化されたとしても、それらはすべて自分のデータとメソッドを管理することができるということです。</target>
        </trans-unit>
        <trans-unit id="d191bd2f194e5d4b89d87364b155e100ffda17d8" translate="yes" xml:space="preserve">
          <source>An example of where it&amp;rsquo;s useful:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;便利な例：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd718882d8614d635c144a6cb59b0ee9a633fd83" translate="yes" xml:space="preserve">
          <source>Another thing I would like to add is, an optional &lt;code&gt;self&lt;/code&gt; argument allows me to declare static methods inside a class, by not writing &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は追加したいもう一つは、オプションであり、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引数は、私が書いていないことで、クラス内の静的メソッドを宣言することを可能にする&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7fda3041282a75d7a819bf9be5dbebcf81e8c5b" translate="yes" xml:space="preserve">
          <source>Another way of understanding the need for the explicit &lt;code&gt;self&lt;/code&gt; is to see where Python adds some syntactical sugar. When you keep in mind, that basically, a call like</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;明示的な&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要性を理解する別の方法は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、Pythonが構文上の砂糖を追加する場所を確認することです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたが心に留めておくと、それは基本的に、&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d51ef4a664f88c7337f20cd95fa343ccee08592" translate="yes" xml:space="preserve">
          <source>As in Modula-3, there are no shorthands [in Python] for referencing the object&amp;rsquo;s members from its methods: the method function is declared with an explicit first argument representing the object, which is provided implicitly by the call.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Modula-3のように、メソッドからオブジェクトのメンバーを参照するための省略表現はありません。メソッド関数は、オブジェクトを表す明示的な最初の引数で宣言され、呼び出しによって暗黙的に提供されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6965d4a50fc0bb5303c1ad50710d902fffd1a3fd" translate="yes" xml:space="preserve">
          <source>As well as all the other reasons already stated, it allows for easier access to overridden methods; you can call &lt;code&gt;Class.some_method(inst)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すでに述べた他のすべての理由と同様に、オーバーライドされたメソッドに簡単にアクセスできます。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class.some_method(inst)&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出すことができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="47825e120c811078fab3444ae5cfd581d14f7642" translate="yes" xml:space="preserve">
          <source>Because of this, the object&amp;rsquo;s data is bound to the object. Below is an example of how you might like to visualize what each object&amp;rsquo;s data might look. Notice how &amp;lsquo;self&amp;rsquo; is replaced with the objects name. I'm not saying this example diagram below is wholly accurate but it hopefully with serve a purpose in visualizing the use of self.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このため、オブジェクトのデータはオブジェクトにバインドされます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下は、各オブジェクトのデータがどのように見えるかを視覚化する方法の例です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「self」がオブジェクト名に置き換えられていることに注意してください。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下のこの図の例が完全に正確であるとは言いませんが、うまくいけば、自己の使用を視覚化する目的で役立ちます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f75756ae2686b3787b103a87d2e562911fda7698" translate="yes" xml:space="preserve">
          <source>Can anyone talk me through this? It is not something I've come across in my (admittedly limited) experience.</source>
          <target state="translated">誰かこれを介して私に話すことができますか?それは、私の経験(確かに限られた)の中で出くわしたものではありません。</target>
        </trans-unit>
        <trans-unit id="2a0a65b981f3e6edeea679d1cb736a592c98898e" translate="yes" xml:space="preserve">
          <source>Classes are just a way to avoid passing in this &quot;state&quot; thing all the time (and other nice things like initializing, class composition, the rarely-needed metaclasses, and supporting custom methods to override operators).</source>
          <target state="translated">クラスとは、この「状態」のものを常に渡すことを避けるための方法にすぎません(初期化、クラス構成、めったに必要とされないメタクラス、演算子をオーバーライドするためのカスタムメソッドのサポートなど、他の素敵なことも)。</target>
        </trans-unit>
        <trans-unit id="f6149f799d8c444725006c9698a101c422ecde86" translate="yes" xml:space="preserve">
          <source>Code examples:</source>
          <target state="translated">コード例。</target>
        </trans-unit>
        <trans-unit id="3d397aef3c49cb0016377f1a744764bdb0ac8452" translate="yes" xml:space="preserve">
          <source>Code is here</source>
          <target state="translated">コードはこちら</target>
        </trans-unit>
        <trans-unit id="2850358a794f53a868ef5cde0f2e09281010eb73" translate="yes" xml:space="preserve">
          <source>First of all, self is a conventional name, you could put anything else (being coherent) in its stead.</source>
          <target state="translated">まず、自己というのは従来の名前なので、それ以外のもの(まとまりのあるもの)を代用することができます。</target>
        </trans-unit>
        <trans-unit id="d1091bb5dc4fffffabec8d605e2909ed5e5beae7" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;http://docs.python.org/tutorial/classes.html&quot;&gt;Python documentation tutorial on classes&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細については、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/tutorial/classes.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスに関するPythonドキュメントチュートリアルを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ご覧ください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ebb6ada30b264c4be67d7f9f6f903e92d521dbe" translate="yes" xml:space="preserve">
          <source>Here is the typical use case &lt;code&gt;class C&lt;/code&gt; with the method &lt;code&gt;m1&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッド&lt;/font&gt; &lt;code&gt;m1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用した典型的なユースケース&lt;/font&gt;&lt;/font&gt; &lt;code&gt;class C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を以下に示します。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="86dbec6b29f290589f8c98a049e22d2aa0593076" translate="yes" xml:space="preserve">
          <source>However the current situation works out well:</source>
          <target state="translated">しかし、現状はうまくいっています。</target>
        </trans-unit>
        <trans-unit id="679cfe9a74012f5e9ad53e01c20c9cb0c6bd960c" translate="yes" xml:space="preserve">
          <source>However, an object method, which requires you to make a variable, which is an Animal, in this case, needs the self argument</source>
          <target state="translated">しかし、Animalである変数を作らなければならないオブジェクトメソッドでは、この場合、自己引数に</target>
        </trans-unit>
        <trans-unit id="78a980d3d9db85fa50ef635a3331990e04311c7b" translate="yes" xml:space="preserve">
          <source>I like this example:</source>
          <target state="translated">私はこの例が好きです。</target>
        </trans-unit>
        <trans-unit id="8e492903d2e5ae5c26b7a8e28f06043f9f5a5b80" translate="yes" xml:space="preserve">
          <source>I will demonstrate with code that &lt;strong&gt;does not use classes&lt;/strong&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスを使用しない&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コードでデモンストレーションします&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c19c4bc24da7e68f7630b6e13941c1405ee9f20d" translate="yes" xml:space="preserve">
          <source>I'm surprised nobody has brought up Lua. Lua also uses the 'self' variable however it can be omitted but still used. C++ does the same with 'this'. I don't see any reason to have to declare 'self' in each function but you should still be able to use it just like you can with lua and C++. For a language that prides itself on being brief it's odd that it requires you to declare the self variable.</source>
          <target state="translated">誰もLuaのことを持ち出していないのが驚きです。Luaでも'self'変数を使用していますが、省略することはできますが、まだ使用されています。C++も同様に'this'変数を使用します。各関数で'self'を宣言する必要はないと思いますが、luaやC++と同じように使うことができるはずです。簡潔であることを誇りにしている言語にしては、self変数の宣言を要求するのは奇妙なことです。</target>
        </trans-unit>
        <trans-unit id="cf2a59502df9000886690e5c93aa08fae3dbb2f0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;user_type_name&lt;/code&gt; is a field on your model you access it by &lt;code&gt;self.user_type_name&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合&lt;/font&gt;&lt;/font&gt; &lt;code&gt;user_type_name&lt;/code&gt; は&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、モデル上のフィールドである、あなたはでアクセス&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self.user_type_name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3cd8541d9818861c74e04f0ea1206bb8511dbd2b" translate="yes" xml:space="preserve">
          <source>If we would just stick to functional programming we would not need &lt;code&gt;self&lt;/code&gt;.
Once we enter the &lt;em&gt;Python OOP&lt;/em&gt; we find &lt;code&gt;self&lt;/code&gt; there.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数型プログラミングに固執するのであれば、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は必要ありません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私たちが入ると&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PythonのOOPを&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我々は見つける&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f3a3b993145f45c688b6cfd5b2591df95605e36f" translate="yes" xml:space="preserve">
          <source>If you don't understand a single word of what I am saying, then Google &quot;Object Oriented Programming.&quot; Once you understand this, you won't even need to ask that question :).</source>
          <target state="translated">もし私の言っていることが一言も理解できないのであれば、&quot;オブジェクト指向プログラミング &quot;でググってみてください。これを理解してしまえば、その質問をする必要はありません。)</target>
        </trans-unit>
        <trans-unit id="b25b45089714fe4d147920ae1c6a7e704509ca1a" translate="yes" xml:space="preserve">
          <source>In previous versions, you have to explicitly add &lt;code&gt;@staticmethod&lt;/code&gt; decorator, otherwise &lt;code&gt;self&lt;/code&gt; argument is obligatory.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以前のバージョンでは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@staticmethod&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デコレーター&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を明示的に追加する必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そうしないと、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引数が必須になります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1be71fcef2d5e1bb4f22ae67b000649511c0af59" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;__init__&lt;/code&gt; method, self refers to the newly created object; in other class methods, it refers to the instance whose method was called.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法、自己が新しく作成されたオブジェクトを指します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他のクラスメソッドでは、メソッドが呼び出されたインスタンスを参照します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="452b0a268b84f2447c95120175df2b3e61456dd3" translate="yes" xml:space="preserve">
          <source>In this case, self is referring to the animalName variable of the entire class. REMEMBER: If you have a variable within a method, self will not work. That variable is simply existent only while that method is running. For defining fields (the variables of the entire class), you have to define them OUTSIDE the class methods.</source>
          <target state="translated">この場合、self はクラス全体の animalName 変数を参照しています。覚えておいてください:メソッド内に変数がある場合、selfは動作しません。その変数は、そのメソッドが実行されている間だけ存在します。フィールド(クラス全体の変数)を定義するには、クラスメソッドの外側で定義しなければなりません。</target>
        </trans-unit>
        <trans-unit id="bad7092bf970259d27d6ca40103b481dc18aeada" translate="yes" xml:space="preserve">
          <source>Is because by the way python is designed the alternatives would hardly work. Python is designed to allow methods or functions to be defined in a context where both implicit &lt;code&gt;this&lt;/code&gt; (a-la Java/C++) or explicit &lt;code&gt;@&lt;/code&gt; (a-la ruby) wouldn't work. Let's have an example with the explicit approach with python conventions:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なぜなら、Pythonが設計されているため、代替手段はほとんど機能しないからです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonは、暗黙の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（a-la Java / C ++）または明示的な&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（a-la ruby​​）の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;両方が機能しないコンテキストでメソッドまたは関数を定義できるように設計されています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonの規則を使用した明示的なアプローチの例を見てみましょう。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4ed620c87c639fb9b0860ceeda85570cbe8b9b3e" translate="yes" xml:space="preserve">
          <source>It refers to the object itself, so when you are using it, you are declaring that .name and .age are properties of the Student objects (note, not of the Student class) you are going to create.</source>
          <target state="translated">これはオブジェクト自体を参照しますので、これを使用する場合は、.nameと.ageが作成しようとしているStudentオブジェクトのプロパティであることを宣言していることになります(Studentクラスのプロパティではないことに注意してください)。</target>
        </trans-unit>
        <trans-unit id="21bf8feaa6c0a2f61c70a863156d23df7a935d91" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s there to follow the Python zen &amp;ldquo;explicit is better than implicit&amp;rdquo;. It&amp;rsquo;s indeed a reference to your class object. In Java and PHP, for example, it's called &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python zenの「明示的なものは暗黙的なものよりも優れている」に続くものです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは実際にクラスオブジェクトへの参照です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、JavaとPHPでは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2c9c4c77d4adbd01f1435185efa5957ed6778e9" translate="yes" xml:space="preserve">
          <source>Its use is similar to the use of &lt;code&gt;this&lt;/code&gt; keyword in Java, i.e. to give a reference to the current object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その使用法は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、Java &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;での&lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーワード&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の使用法に似てい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。つまり、現在のオブジェクトへの参照を提供します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a620020f809368b31aaece363f3a58b2d40f3ba" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take a simple vector class:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;簡単なベクタークラスを見てみましょう。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20fb24e3a04118e838e61d25d5d3d3b68eab42e7" translate="yes" xml:space="preserve">
          <source>Let's say you have a class &lt;code&gt;ClassA&lt;/code&gt; which contains a method &lt;code&gt;methodA&lt;/code&gt; defined as:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次のように定義され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たメソッド&lt;/font&gt; &lt;code&gt;methodA&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を含む&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ClassA&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があるとします&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="42b61ca4b9c209d049a6afa504e32bd2ac5178b9" translate="yes" xml:space="preserve">
          <source>Note that it is not a keyword.</source>
          <target state="translated">キーワードではないので注意してください。</target>
        </trans-unit>
        <trans-unit id="d0f0ab3b327e5b3e363a25cd02fd12261e55f5a3" translate="yes" xml:space="preserve">
          <source>Now let's demonstrate the above code using the built-in python class machinery, to show how it's basically the same thing.</source>
          <target state="translated">では、上記のコードが基本的には同じものであることを示すために、組み込みの python クラスの machinery を使ってデモをしてみましょう。</target>
        </trans-unit>
        <trans-unit id="63c6bd152a96e31a755ef297e6442c2fb1689438" translate="yes" xml:space="preserve">
          <source>Now the &lt;code&gt;fubar&lt;/code&gt; function wouldn't work since it would assume that &lt;code&gt;self&lt;/code&gt; is a global variable (and in &lt;code&gt;frob&lt;/code&gt; as well). The alternative would be to execute method's with a replaced global scope (where &lt;code&gt;self&lt;/code&gt; is the object).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;現在、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fubar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がグローバル変数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;であると想定して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いるため（そして&lt;/font&gt;&lt;/font&gt; &lt;code&gt;frob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でも同様）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機能しません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代替方法は、置換されたグローバルスコープ（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がオブジェクト）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用してメソッドを実行すること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15df964e763425375e70415f5ca93a9ba7753977" translate="yes" xml:space="preserve">
          <source>Now when &lt;code&gt;ObjectA.methodA(arg1, arg2)&lt;/code&gt; is called, python internally converts it for you as:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;今とき&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ObjectA.methodA(arg1, arg2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれ、Pythonは内部的にあなたのためにそれを変換します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c4f1512422cda9536646701fa09bf1ff9841053" translate="yes" xml:space="preserve">
          <source>Often, the first argument of a method is called self. This is nothing more than a convention: the name self has absolutely no special meaning to Python. Note, however, that by not following the convention your code may be less readable to other Python programmers, and it is also conceivable that a class browser program might be written that relies upon such a convention.</source>
          <target state="translated">しばしば、メソッドの第一引数はselfと呼ばれます。これは慣例に過ぎません:selfという名前はPythonにとって特別な意味を持ちません。しかし、この規約に従わないことで、あなたのコードは他のPythonプログラマーには読みにくくなるかもしれないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="258a1ed20442bd3f7ba346c3f9794ef4a31bfa8e" translate="yes" xml:space="preserve">
          <source>Python could have done something else to distinguish normal names from attributes -- special syntax like Ruby has, or requiring declarations like C++ and Java do, or perhaps something  yet more different -- but it didn't. Python's all for making things explicit, making it obvious what's what, and although it doesn't do it entirely everywhere, it does do it for instance attributes. That's why assigning to an instance attribute needs to know what instance to assign to, and that's why it needs &lt;code&gt;self.&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonは通常の名前を属性から区別するために別のことを行った可能性があります-Rubyのような特別な構文、またはC ++やJavaのような宣言を要求すること、あるいはおそらくさらに異なる何か-しかし、実際はそうではありませんでした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonは、物事を明確にし、何が何であるかを明確にするためのものであり、すべての場所で完全に実行されるわけではありませんが、インスタンス属性に対して実行されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのため、インスタンス属性に割り当てるには、どのインスタンスに割り当てるかを知る必要があり、そのため、それ自体が必要&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4683d3f409566286d2017192d77dcb16ba4f059d" translate="yes" xml:space="preserve">
          <source>Python is not a language built for Object Oriented Programming unlike Java or C++.</source>
          <target state="translated">PythonはJavaやC++と違ってオブジェクト指向プログラミングのために作られた言語ではありません。</target>
        </trans-unit>
        <trans-unit id="e9f759641972f26a0f6ec82d58012e08599b7ace" translate="yes" xml:space="preserve">
          <source>See the illustration below:</source>
          <target state="translated">下のイラストをご覧ください。</target>
        </trans-unit>
        <trans-unit id="3c5d6c52a96c36ca40fc11c0b386b2571f9c617c" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;self&lt;/code&gt; holds the memory address of the class instance.
&lt;em&gt;The purpose&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt; would be to hold the reference for &lt;em&gt;instance methods&lt;/em&gt; and for us to have &lt;strong&gt;explicit&lt;/strong&gt; access to that reference.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はクラスインスタンスのメモリアドレスを保持します。 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;目的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のための参照を保持することです&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンスメソッドを&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私たちは持っていると&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;明示的な&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その参照へのアクセスを。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8033fe43cda2814a433763ba5aed294a107a16ff" translate="yes" xml:space="preserve">
          <source>So the whole structure stays the same. How can me make use of this? If we assume for a moment that we hadn&amp;rsquo;t written a &lt;code&gt;length&lt;/code&gt; method for our &lt;code&gt;Vector&lt;/code&gt; class, we could do this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、全体の構造は同じままです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どうすればこれを利用できますか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しばらくの間&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;Vector&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;length&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;記述していなかったと想定すると、次の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ようになります。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8eb070aa7c635eb9bd885287b9adbf5e28e64710" translate="yes" xml:space="preserve">
          <source>Take a look at the following example, which clearly explains the purpose of &lt;code&gt;self&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;の目的を明確に説明している次の例を見てください。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="34b1e6c79b713cc0f1cb08dee730316708c202e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;self&lt;/code&gt; variable refers to the object itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数は、オブジェクト自体を指します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33ab0fa14d5634f4ae1f8ce119fc35712999037e" translate="yes" xml:space="preserve">
          <source>The Object is passed into the self parameter so that the object can keep hold of its own data.</source>
          <target state="translated">オブジェクトが自分のデータを保持できるように、オブジェクトはselfパラメータに渡されます。</target>
        </trans-unit>
        <trans-unit id="4b52872a14b15cd870db6e292baff0770de114fd" translate="yes" xml:space="preserve">
          <source>The first argument of every class method, including init, is always a reference to the current instance of the class. By convention, this argument is always named self. In the init method, self refers to the newly created object; in other class methods, it refers to the instance whose method was called. For example the below code is the same as the above code.</source>
          <target state="translated">initを含むすべてのクラスメソッドの第一引数は、常にクラスの現在のインスタンスへの参照です。慣習的に、この引数は常にselfという名前になります。initメソッドでは、selfは新しく作成されたオブジェクトを参照し、他のクラスメソッドでは、メソッドが呼び出されたインスタンスを参照します。例えば、以下のコードは上のコードと同じです。</target>
        </trans-unit>
        <trans-unit id="a5debc952d5b06e246420009c31e64d9cf5ef808" translate="yes" xml:space="preserve">
          <source>The following excerpts are from the &lt;a href=&quot;http://docs.python.org/tutorial/classes.html&quot;&gt;Python documentation about self&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次の抜粋は、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/tutorial/classes.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;selfに関するPythonのドキュメント&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;からの抜粋です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71f9277b0ee801046ce1b5d5d98d2fbb263d87c6" translate="yes" xml:space="preserve">
          <source>The implicit approach would be</source>
          <target state="translated">暗黙のアプローチは、次のようになります。</target>
        </trans-unit>
        <trans-unit id="ddfded39a7b36e02781c387a61e0e0bb144cd52e" translate="yes" xml:space="preserve">
          <source>The reason you need to use &lt;code&gt;self.&lt;/code&gt; is because Python does not use the &lt;code&gt;@&lt;/code&gt; syntax to refer to instance attributes. Python decided to do methods in a way that makes the instance to which the method belongs be &lt;em&gt;passed&lt;/em&gt; automatically, but not &lt;em&gt;received&lt;/em&gt; automatically: the first parameter of methods is the instance the method is called on. That makes methods entirely the same as functions, and leaves the actual name to use up to you (although &lt;code&gt;self&lt;/code&gt; is the convention, and people will generally frown at you when you use something else.) &lt;code&gt;self&lt;/code&gt; is not special to the code, it's just another object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;self.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使う必要がある理由&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Pythonが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;構文を使用してインスタンス属性を参照&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しないためです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。 Pythonは、メソッドが属するインスタンス&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自動的に&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;渡さ&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れる&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自動的に&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;受け取ら&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れないようにメソッドを実行することを決定しました。メソッド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の最初のパラメーターは、メソッドが呼び出されるインスタンスです。それは関数と全く同じ方法、および葉君まで使用する実際の名前になり（が、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;慣例で、人々はあなたが何か他のものを一般的に顔をしかめあなたに使用するときに。）&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コードに特別なものではありません、それだけです別のオブジェクト。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="236e866fde0d76ee2f000c8552125a8a8ff7ae46" translate="yes" xml:space="preserve">
          <source>The self method is also used to refer to a variable field within the class.</source>
          <target state="translated">selfメソッドは、クラス内の変数フィールドを参照するためにも使用されます。</target>
        </trans-unit>
        <trans-unit id="357314b070890139eadce8c33ddb4a9f5b685e85" translate="yes" xml:space="preserve">
          <source>The use of the argument, conventionally called &lt;code&gt;self&lt;/code&gt; isn't as hard to understand, as is why is it necessary? Or as to why explicitly mention it? That, I suppose, is a bigger question for most users who look up this question, or if it is not, they will certainly have the same question as they move forward learning python. I recommend them to read these couple of blogs:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;慣習&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼ばれている議論の使用は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なぜそれが必要であるのと同様に、理解するのが難しくありませんか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;またはなぜそれを明示的に言及するのか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それは、この質問を検索するほとんどのユーザーにとってより大きな質問だと思います。そうでない場合は、Pythonの学習を進めるにつれて、同じ質問をすることになります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらのブログをいくつか読むことをお勧めします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aad90dfdf56f4dead42a985825163ec490775638" translate="yes" xml:space="preserve">
          <source>There was just a &lt;a href=&quot;https://www.artima.com/weblogs/viewpost.jsp?thread=239003&quot;&gt;question&lt;/a&gt; should &lt;code&gt;self&lt;/code&gt; be implicit or explicit.
&lt;a href=&quot;https://en.wikipedia.org/wiki/Guido_van_Rossum&quot;&gt;&lt;code&gt;Guido van Rossum&lt;/code&gt;&lt;/a&gt; resolved this question saying &lt;a href=&quot;https://neopythonic.blogspot.com/2008/10/why-explicit-self-has-to-stay.html&quot;&gt;&lt;code&gt;self&lt;/code&gt; has to stay&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ちょうどあった&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.artima.com/weblogs/viewpost.jsp?thread=239003&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;質問&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべき&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;暗黙的または明示的なことは。 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Guido_van_Rossum&quot;&gt; &lt;code&gt;Guido van Rossum&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この質問を解決し、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://neopythonic.blogspot.com/2008/10/why-explicit-self-has-to-stay.html&quot;&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は留まらなければなら&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ないと述べた&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="593c5330f958a39918abf861eca976eee15dc227" translate="yes" xml:space="preserve">
          <source>This program will output:</source>
          <target state="translated">このプログラムは出力します。</target>
        </trans-unit>
        <trans-unit id="eef4955b5010ecd4fd99113e1edfc155496ebf10" translate="yes" xml:space="preserve">
          <source>This works because the first parameter of &lt;code&gt;length_global&lt;/code&gt;, can be re-used as the &lt;code&gt;self&lt;/code&gt; parameter in &lt;code&gt;length_new&lt;/code&gt;. This would not be possible without an explicit &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;length_global&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の最初のパラメーターが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;length_new&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パラメーター&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;として再利用できるため&lt;/font&gt;&lt;/font&gt; &lt;code&gt;length_new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、明示的な&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なしでは不可能&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2596a67954f16752ece427c512b8db673c0d7cf7" translate="yes" xml:space="preserve">
          <source>This would mean that &lt;code&gt;myX&lt;/code&gt; would be interpreted as a local variable in &lt;code&gt;fubar&lt;/code&gt; (and in &lt;code&gt;frob&lt;/code&gt; as well). The alternative here would be to execute methods with a replaced local scope which is retained between calls, but that would remove the posibility of method local variables.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;myX&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fubar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;frob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でも）の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ローカル変数として解釈される&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことを意味し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここでの代替策は、呼び出し間で保持される置き換えられたローカルスコープでメソッドを実行することですが、これにより、メソッドローカル変数の可能性がなくなります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed2cbf212c8ade235fd86f44cae03dacd4093358" translate="yes" xml:space="preserve">
          <source>We want to have a method which calculates the length. What would it look like if we wanted to define it inside the class?</source>
          <target state="translated">長さを計算するメソッドが欲しい。それをクラス内で定義するとどうなるでしょうか?</target>
        </trans-unit>
        <trans-unit id="51c707af171267923b8f12ea5d5f5baf6defa4a4" translate="yes" xml:space="preserve">
          <source>What is the purpose of the &lt;code&gt;self&lt;/code&gt; word in Python? I understand it refers to the specific object created from that class, but I can't see why it explicitly needs to be added to every function as a parameter. To illustrate, in Ruby I can do this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;での&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;語の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;目的は何&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ですか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのクラスから作成された特定のオブジェクトを参照していることは理解していますが、すべての関数にパラメーターとして明示的に追加する必要がある理由がわかりません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;説明のために、Rubyでこれを行うことができます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20f72ac8403123e86e8f003d52ec694b7faef133" translate="yes" xml:space="preserve">
          <source>What is the purpose of the word 'self'</source>
          <target state="translated">自己」という言葉の目的とは</target>
        </trans-unit>
        <trans-unit id="f4d688a1bfa95956a5de1b7469fb1318897cb850" translate="yes" xml:space="preserve">
          <source>What should it look like when we were to define it as a global method/function?</source>
          <target state="translated">グローバルなメソッド関数として定義するとしたら、どのような形になるでしょうか?</target>
        </trans-unit>
        <trans-unit id="e01e46f09d9e7888039e78471558742a261a5a69" translate="yes" xml:space="preserve">
          <source>When calling a static method in Python, one simply writes a method with regular arguments inside it.</source>
          <target state="translated">Pythonで静的メソッドを呼び出すときは、通常の引数を使ってメソッドを書くだけです。</target>
        </trans-unit>
        <trans-unit id="7184698ade8e0047ba5ca2450108ac89df6c1957" translate="yes" xml:space="preserve">
          <source>When objects are instantiated, the object itself is passed into the self parameter.</source>
          <target state="translated">オブジェクトがインスタンス化されると、オブジェクト自体がselfパラメータに渡されます。</target>
        </trans-unit>
        <trans-unit id="8de116e44bafb791e48be7570d1a71f076e1700d" translate="yes" xml:space="preserve">
          <source>Which I understand, quite easily. However in Python I need to include &lt;code&gt;self&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私にはわかります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、Pythonでは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を含める必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="62a45f03a7cb6b87698f82532e1d2c3771f05107" translate="yes" xml:space="preserve">
          <source>You should take a look at &lt;code&gt;cls&lt;/code&gt; too, to have &lt;strong&gt;&lt;em&gt;the bigger picture&lt;/em&gt;&lt;/strong&gt;. This &lt;a href=&quot;https://stackoverflow.com/questions/7554738/python-self-no-self-and-cls&quot;&gt;&lt;strong&gt;post&lt;/strong&gt;&lt;/a&gt; could be helpful.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;全体像を把握&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するには&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/font&gt; &lt;code&gt;cls&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;確認する必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/7554738/python-self-no-self-and-cls&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;投稿&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は役に立ちます。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cda8d6f8522fc89e6f8523ec1bd67f9f85b7a529" translate="yes" xml:space="preserve">
          <source>[migrated my answer from duplicate closed question]</source>
          <target state="translated">[重複したクローズドクエスチョンから回答を移行]</target>
        </trans-unit>
        <trans-unit id="121ffea1a0e29f88cc77aa8380ef0cbc7ebc882f" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;ObjectA&lt;/code&gt; is an instance of this class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そして&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ObjectA&lt;/code&gt; には、&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このクラスのインスタンスです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="36566f0d5cd3b605a76017fb817f21e2ece7b8c5" translate="yes" xml:space="preserve">
          <source>from the &lt;a href=&quot;https://docs.python.org/3/tutorial/classes.html#method-objects&quot;&gt;docs&lt;/a&gt;,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/tutorial/classes.html#method-objects&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ドキュメント&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5298c83d605c12f453bc762c3d960a8cb581ef99" translate="yes" xml:space="preserve">
          <source>here when called as a method &lt;code&gt;frob&lt;/code&gt; will receive the object on which it's called via the &lt;code&gt;self&lt;/code&gt; parameter, and &lt;code&gt;fubar&lt;/code&gt; can still be called with an object as parameter and work the same (it &lt;em&gt;is&lt;/em&gt; the same as &lt;code&gt;C.frob&lt;/code&gt; I think).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここでは、メソッドとして呼び出されたとき&lt;/font&gt;&lt;/font&gt; &lt;code&gt;frob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それが経由して呼ばれていているオブジェクト受信する&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パラメータを、そして&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fubar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;まだパラメータとしてオブジェクトを呼び出すことができますし、（それが同じように動作&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;される&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のと同じ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;C.frob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は思います）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="743291c3850784c84035f299485b24abf93248d8" translate="yes" xml:space="preserve">
          <source>is internally transformed to</source>
          <target state="translated">に内部的に変換されます。</target>
        </trans-unit>
        <trans-unit id="ff4cfbf9b524daaa207c90c3ff07eeccb917e997" translate="yes" xml:space="preserve">
          <source>it is easy to see where the &lt;code&gt;self&lt;/code&gt; fits in. You don't actually write instance methods in Python; what you write is class methods which must take an instance as a first parameter. And therefore, you&amp;rsquo;ll have to place the instance parameter somewhere explicitly.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がどこに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;適合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するかを簡単に確認でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。実際には、Pythonでインスタンスメソッドを作成するわけではありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたが書くのは、最初のパラメータとしてインスタンスをとらなければならないクラスメソッドです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、インスタンスパラメータを明示的にどこかに配置する必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="602a92975ef013086ca7aaa6bf413c282246b22d" translate="yes" xml:space="preserve">
          <source>it's an explicit reference to the class instance object.</source>
          <target state="translated">クラスインスタンスオブジェクトへの明示的な参照です。</target>
        </trans-unit>
        <trans-unit id="4a914850299ac09863ca47de283030472b1323a8" translate="yes" xml:space="preserve">
          <source>preceding this the related snippet,</source>
          <target state="translated">この前に関連するスニペットがあります。</target>
        </trans-unit>
        <trans-unit id="662e7a4e1ccf087f0bd4e57b2d8916d49da4bba7" translate="yes" xml:space="preserve">
          <source>self is acting as like current object name or instance of class .</source>
          <target state="translated">selfは現在のオブジェクト名やクラスのインスタンスのように動作しています。</target>
        </trans-unit>
        <trans-unit id="2299eef37790f4ca4597855716d34cdfde332c03" translate="yes" xml:space="preserve">
          <source>self, as a name, is &lt;strong&gt;&lt;em&gt;just a convention&lt;/em&gt;&lt;/strong&gt;, call it as you want ! but when using it, for example to delete the object, you have to use the same name: &lt;code&gt;__del__(var)&lt;/code&gt;, where &lt;code&gt;var&lt;/code&gt; was used in the &lt;code&gt;__init__(var,[...])&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自分自身は、名前として、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;単なる慣習であり&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、好きなように呼んでください！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、たとえばオブジェクトを削除するためにそれを使用するときは、同じ名前を使用する必要があります：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__del__(var)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、ここで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt; &lt;code&gt;__init__(var,[...])&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用されました&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f65e60d4715eb9fb11f7c4dc1fe62b7ab19827e" translate="yes" xml:space="preserve">
          <source>the special thing about methods is that the instance object is passed as the first argument of the function. In our example, the call &lt;code&gt;x.f()&lt;/code&gt; is exactly equivalent to &lt;code&gt;MyClass.f(x)&lt;/code&gt;. In general, calling a method with a list of n arguments is equivalent to calling the corresponding function with an argument list that is created by inserting the method&amp;rsquo;s instance object before the first argument.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドの特別な点は、インスタンスオブジェクトが関数の最初の引数として渡されることです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この例では、呼び出し&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x.f()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyClass.f(x)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とまったく同じ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一般に、n個の引数のリストでメソッドを呼び出すことは、最初の引数の前にメソッドのインスタンスオブジェクトを挿入することによって作成された引数リストで対応する関数を呼び出すことと同じです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
