<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/2709821">
    <body>
      <group id="2709821">
        <trans-unit id="50e85d29c47a1d85bd7c5be469ba8466758d942e" translate="yes" xml:space="preserve">
          <source>1: Use of self explained</source>
          <target state="translated">1:Использование объясненных самостоятельно</target>
        </trans-unit>
        <trans-unit id="1537a8e68e069434e270cc3838444c83d94e5cc8" translate="yes" xml:space="preserve">
          <source>2: Why do we have it this way and why can we not eliminate it as an argument, like Java, and have a keyword instead</source>
          <target state="translated">2:Почему мы имеем его таким образом и почему мы не можем исключить его в качестве аргумента,как Java,а иметь вместо него ключевое слово.</target>
        </trans-unit>
        <trans-unit id="5eb8f3b2312bc947db52c8a97e61506d1aedafe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; is an object reference to the object itself, therefore, they are same.
Python methods are not called in the context of the object itself.
&lt;code&gt;self&lt;/code&gt; in Python may be used to deal with custom object models or something.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это объектная ссылка на сам объект, поэтому они одинаковы. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Методы Python не вызываются в контексте самого объекта. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в Python может использоваться для работы с пользовательскими объектными моделями или чем-то еще.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a874337841087eb6d4e3fd02ebeff09e3f41e30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; is used/needed to distinguish between instances.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; используется / необходим для различения экземпляров.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7bbbee55cb7764d08e89b619ce2618705e50c5e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;code&gt;self&lt;/code&gt; is inevitable.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; неизбежна.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="000ff359a4612c3cd78461682bd92e1a6e08cc41" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;So where the &lt;code&gt;self&lt;/code&gt; live?&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так где же &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; живу?&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5876d210d7b4d75c13a6ac1e49433fa1a45a8975" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PS&lt;/strong&gt;:This works only in Python 3.x.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PS&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : это работает только в Python 3.x.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9670bbb1d8cee5fcdc65d7155e230400409ebb4a" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;Note there are three different types of class methods: &lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обратите внимание, что есть три различных типа методов класса: &lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="63fc6fb7eeb47a2032fb704c9b812e661ad6c8da" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;class methods, &lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;методы класса, &lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="5984bb71b436be400f88353cdf605e197b5f9688" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;instance methods (mentioned).&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;методы экземпляра (упомянутые).&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="32c3319fe4e24251db9e0824df8d8a9e43367f69" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;static methods (read: functions), &lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;статические методы (читай: функции), &lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="c34a16b60167fe7774a9bd522b90a56ffc18afb0" translate="yes" xml:space="preserve">
          <source>Although this may not be wholly accurate, think of the process of instantiating an object like this: When an object is made it uses the class as a template for its own data and methods. Without passing it's own name into the self parameter, the attributes and methods in the class would remain as a general template and would not be referenced to (belong to) the object. So by passing the object's name into the self parameter it means that if 100 objects are instantiated from the one class, they can all keep track of their own data and methods.</source>
          <target state="translated">Хотя это может быть не совсем верно,подумайте о процессе конкретизации такого объекта:Когда объект создан,он использует класс в качестве шаблона для своих данных и методов.Без передачи собственного имени в свой параметр,атрибуты и методы класса останутся общим шаблоном и не будут ссылаться (принадлежать)на объект.Таким образом,передача имени объекта в самопараметр означает,что если 100 объектов инстанцируются из одного класса,то все они могут отслеживать свои собственные данные и методы.</target>
        </trans-unit>
        <trans-unit id="d191bd2f194e5d4b89d87364b155e100ffda17d8" translate="yes" xml:space="preserve">
          <source>An example of where it&amp;rsquo;s useful:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Пример того, где это полезно:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd718882d8614d635c144a6cb59b0ee9a633fd83" translate="yes" xml:space="preserve">
          <source>Another thing I would like to add is, an optional &lt;code&gt;self&lt;/code&gt; argument allows me to declare static methods inside a class, by not writing &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Еще я хотел бы добавить, что необязательный &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;аргумент &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; позволяет мне объявлять статические методы внутри класса, не записывая &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7fda3041282a75d7a819bf9be5dbebcf81e8c5b" translate="yes" xml:space="preserve">
          <source>Another way of understanding the need for the explicit &lt;code&gt;self&lt;/code&gt; is to see where Python adds some syntactical sugar. When you keep in mind, that basically, a call like</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Другой способ понять необходимость явного &amp;laquo; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - посмотреть, где Python добавляет немного синтаксического сахара. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда вы имейте в виду, что в основном, вызов как&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d51ef4a664f88c7337f20cd95fa343ccee08592" translate="yes" xml:space="preserve">
          <source>As in Modula-3, there are no shorthands [in Python] for referencing the object&amp;rsquo;s members from its methods: the method function is declared with an explicit first argument representing the object, which is provided implicitly by the call.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как и в Modula-3, не существует сокращений [в Python] для ссылки на члены объекта из его методов: функция метода объявляется с явным первым аргументом, представляющим объект, который неявно предоставляется вызовом.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6965d4a50fc0bb5303c1ad50710d902fffd1a3fd" translate="yes" xml:space="preserve">
          <source>As well as all the other reasons already stated, it allows for easier access to overridden methods; you can call &lt;code&gt;Class.some_method(inst)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как и все другие причины, о которых уже говорилось, это упрощает доступ к переопределенным методам; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете вызвать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class.some_method(inst)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="47825e120c811078fab3444ae5cfd581d14f7642" translate="yes" xml:space="preserve">
          <source>Because of this, the object&amp;rsquo;s data is bound to the object. Below is an example of how you might like to visualize what each object&amp;rsquo;s data might look. Notice how &amp;lsquo;self&amp;rsquo; is replaced with the objects name. I'm not saying this example diagram below is wholly accurate but it hopefully with serve a purpose in visualizing the use of self.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Из-за этого данные объекта привязаны к объекту. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ниже приведен пример того, как вы можете визуализировать, как могут выглядеть данные каждого объекта. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обратите внимание, как &amp;laquo;я&amp;raquo; заменяется именем объекта. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я не говорю, что приведенная ниже примерная диаграмма является полностью точной, но, надеюсь, она послужит цели визуализации использования себя.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f75756ae2686b3787b103a87d2e562911fda7698" translate="yes" xml:space="preserve">
          <source>Can anyone talk me through this? It is not something I've come across in my (admittedly limited) experience.</source>
          <target state="translated">Кто-нибудь может меня уговорить? Это не то,на что я наткнулся в моем (по общему признанию,ограниченном)опыте.</target>
        </trans-unit>
        <trans-unit id="2a0a65b981f3e6edeea679d1cb736a592c98898e" translate="yes" xml:space="preserve">
          <source>Classes are just a way to avoid passing in this &quot;state&quot; thing all the time (and other nice things like initializing, class composition, the rarely-needed metaclasses, and supporting custom methods to override operators).</source>
          <target state="translated">Классы-это просто способ избежать постоянного прохождения в этом &quot;состоянии&quot; (и другие приятные вещи,такие как инициализация,состав классов,редко используемые метаклассы,поддержка пользовательских методов переопределения операторов).</target>
        </trans-unit>
        <trans-unit id="f6149f799d8c444725006c9698a101c422ecde86" translate="yes" xml:space="preserve">
          <source>Code examples:</source>
          <target state="translated">Примеры кода:</target>
        </trans-unit>
        <trans-unit id="3d397aef3c49cb0016377f1a744764bdb0ac8452" translate="yes" xml:space="preserve">
          <source>Code is here</source>
          <target state="translated">Код здесь</target>
        </trans-unit>
        <trans-unit id="2850358a794f53a868ef5cde0f2e09281010eb73" translate="yes" xml:space="preserve">
          <source>First of all, self is a conventional name, you could put anything else (being coherent) in its stead.</source>
          <target state="translated">Прежде всего,&quot;Я&quot;-это условное имя,вместо него можно поставить все,что угодно (будучи связным).</target>
        </trans-unit>
        <trans-unit id="d1091bb5dc4fffffabec8d605e2909ed5e5beae7" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;http://docs.python.org/tutorial/classes.html&quot;&gt;Python documentation tutorial on classes&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для получения дополнительной информации см. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/tutorial/classes.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Руководство по документации Python по классам&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ebb6ada30b264c4be67d7f9f6f903e92d521dbe" translate="yes" xml:space="preserve">
          <source>Here is the typical use case &lt;code&gt;class C&lt;/code&gt; with the method &lt;code&gt;m1&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот типичный пример использования &lt;/font&gt;&lt;/font&gt; &lt;code&gt;class C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; с методом &lt;/font&gt;&lt;/font&gt; &lt;code&gt;m1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="86dbec6b29f290589f8c98a049e22d2aa0593076" translate="yes" xml:space="preserve">
          <source>However the current situation works out well:</source>
          <target state="translated">Однако текущая ситуация складывается хорошо:</target>
        </trans-unit>
        <trans-unit id="679cfe9a74012f5e9ad53e01c20c9cb0c6bd960c" translate="yes" xml:space="preserve">
          <source>However, an object method, which requires you to make a variable, which is an Animal, in this case, needs the self argument</source>
          <target state="translated">Тем не менее,объектный метод,который требует,чтобы вы сделали переменную,которая является Animal,в данном случае,нуждается в аргументе self</target>
        </trans-unit>
        <trans-unit id="78a980d3d9db85fa50ef635a3331990e04311c7b" translate="yes" xml:space="preserve">
          <source>I like this example:</source>
          <target state="translated">Мне нравится этот пример:</target>
        </trans-unit>
        <trans-unit id="8e492903d2e5ae5c26b7a8e28f06043f9f5a5b80" translate="yes" xml:space="preserve">
          <source>I will demonstrate with code that &lt;strong&gt;does not use classes&lt;/strong&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я продемонстрирую с кодом, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;который не использует классы&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c19c4bc24da7e68f7630b6e13941c1405ee9f20d" translate="yes" xml:space="preserve">
          <source>I'm surprised nobody has brought up Lua. Lua also uses the 'self' variable however it can be omitted but still used. C++ does the same with 'this'. I don't see any reason to have to declare 'self' in each function but you should still be able to use it just like you can with lua and C++. For a language that prides itself on being brief it's odd that it requires you to declare the self variable.</source>
          <target state="translated">Удивительно,что никто не вспомнил о Луа.Lua также использует переменную 'Я',однако ее можно опустить,но все равно использовать.С++делает то же самое с 'this'.Я не вижу причин объявлять 'self' в каждой функции,но вы все равно должны быть в состоянии использовать его так же,как вы можете использовать lua и C++.Для языка,который гордится своей краткостью,странно,что он требует,чтобы вы объявили переменную 'self'.</target>
        </trans-unit>
        <trans-unit id="cf2a59502df9000886690e5c93aa08fae3dbb2f0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;user_type_name&lt;/code&gt; is a field on your model you access it by &lt;code&gt;self.user_type_name&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если &lt;/font&gt;&lt;/font&gt; &lt;code&gt;user_type_name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это поле в вашей модели, вы можете получить к нему доступ через &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self.user_type_name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3cd8541d9818861c74e04f0ea1206bb8511dbd2b" translate="yes" xml:space="preserve">
          <source>If we would just stick to functional programming we would not need &lt;code&gt;self&lt;/code&gt;.
Once we enter the &lt;em&gt;Python OOP&lt;/em&gt; we find &lt;code&gt;self&lt;/code&gt; there.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если бы мы просто придерживались функционального программирования, мы бы не нуждались в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как только мы входим в &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ООП Python,&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; мы обнаруживаем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; там.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f3a3b993145f45c688b6cfd5b2591df95605e36f" translate="yes" xml:space="preserve">
          <source>If you don't understand a single word of what I am saying, then Google &quot;Object Oriented Programming.&quot; Once you understand this, you won't even need to ask that question :).</source>
          <target state="translated">Если вы не понимаете ни слова из того,что я говорю,тогда Google &quot;Объектно-ориентированное программирование&quot;.Как только вы это поймете,вам даже не придется задавать этот вопрос :).</target>
        </trans-unit>
        <trans-unit id="b25b45089714fe4d147920ae1c6a7e704509ca1a" translate="yes" xml:space="preserve">
          <source>In previous versions, you have to explicitly add &lt;code&gt;@staticmethod&lt;/code&gt; decorator, otherwise &lt;code&gt;self&lt;/code&gt; argument is obligatory.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В предыдущих версиях вы должны явно добавлять &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;декоратор &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@staticmethod&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , в противном случае &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;аргумент &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; обязателен.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1be71fcef2d5e1bb4f22ae67b000649511c0af59" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;__init__&lt;/code&gt; method, self refers to the newly created object; in other class methods, it refers to the instance whose method was called.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;методе &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; self ссылается на вновь созданный объект; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;в других методах класса это относится к экземпляру, метод которого был вызван.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="452b0a268b84f2447c95120175df2b3e61456dd3" translate="yes" xml:space="preserve">
          <source>In this case, self is referring to the animalName variable of the entire class. REMEMBER: If you have a variable within a method, self will not work. That variable is simply existent only while that method is running. For defining fields (the variables of the entire class), you have to define them OUTSIDE the class methods.</source>
          <target state="translated">В данном случае self относится к переменной animalName всего класса.REMEMBER:Если у вас есть переменная внутри метода,self не будет работать.Эта переменная просто существует только во время работы метода.Для определения полей (переменных всего класса)необходимо определить их OUTSIDE методов класса.</target>
        </trans-unit>
        <trans-unit id="bad7092bf970259d27d6ca40103b481dc18aeada" translate="yes" xml:space="preserve">
          <source>Is because by the way python is designed the alternatives would hardly work. Python is designed to allow methods or functions to be defined in a context where both implicit &lt;code&gt;this&lt;/code&gt; (a-la Java/C++) or explicit &lt;code&gt;@&lt;/code&gt; (a-la ruby) wouldn't work. Let's have an example with the explicit approach with python conventions:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Дело в том, что при разработке python альтернативы вряд ли будут работать. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python разработан для того, чтобы позволить методам или функциям быть определенными в контексте, где неявное как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (a-la Java / C ++), так и явное &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (a-la ruby) не будет работать. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Давайте рассмотрим пример с явным подходом с соглашениями Python:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4ed620c87c639fb9b0860ceeda85570cbe8b9b3e" translate="yes" xml:space="preserve">
          <source>It refers to the object itself, so when you are using it, you are declaring that .name and .age are properties of the Student objects (note, not of the Student class) you are going to create.</source>
          <target state="translated">Он относится к самому объекту,поэтому при его использовании вы объявляете,что .name и .age являются свойствами объектов Student (обратите внимание,не класса Student),которые вы собираетесь создать.</target>
        </trans-unit>
        <trans-unit id="21bf8feaa6c0a2f61c70a863156d23df7a935d91" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s there to follow the Python zen &amp;ldquo;explicit is better than implicit&amp;rdquo;. It&amp;rsquo;s indeed a reference to your class object. In Java and PHP, for example, it's called &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он должен следовать дзену Python &amp;laquo;явное лучше, чем неявное&amp;raquo;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это действительно ссылка на ваш объект класса. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Например, в Java и PHP это называется &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2c9c4c77d4adbd01f1435185efa5957ed6778e9" translate="yes" xml:space="preserve">
          <source>Its use is similar to the use of &lt;code&gt;this&lt;/code&gt; keyword in Java, i.e. to give a reference to the current object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Его использование аналогично использованию &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ключевого слова в Java, то есть, чтобы дать ссылку на текущий объект.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a620020f809368b31aaece363f3a58b2d40f3ba" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take a simple vector class:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Давайте возьмем простой векторный класс:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20fb24e3a04118e838e61d25d5d3d3b68eab42e7" translate="yes" xml:space="preserve">
          <source>Let's say you have a class &lt;code&gt;ClassA&lt;/code&gt; which contains a method &lt;code&gt;methodA&lt;/code&gt; defined as:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Допустим, у вас есть класс &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ClassA&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который содержит метод &lt;/font&gt;&lt;/font&gt; &lt;code&gt;methodA&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; определенный как:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="42b61ca4b9c209d049a6afa504e32bd2ac5178b9" translate="yes" xml:space="preserve">
          <source>Note that it is not a keyword.</source>
          <target state="translated">Обратите внимание,что это не ключевое слово.</target>
        </trans-unit>
        <trans-unit id="d0f0ab3b327e5b3e363a25cd02fd12261e55f5a3" translate="yes" xml:space="preserve">
          <source>Now let's demonstrate the above code using the built-in python class machinery, to show how it's basically the same thing.</source>
          <target state="translated">Теперь продемонстрируем приведенный выше код,используя встроенную технику класса питона,чтобы показать,как это в принципе одно и то же.</target>
        </trans-unit>
        <trans-unit id="63c6bd152a96e31a755ef297e6442c2fb1689438" translate="yes" xml:space="preserve">
          <source>Now the &lt;code&gt;fubar&lt;/code&gt; function wouldn't work since it would assume that &lt;code&gt;self&lt;/code&gt; is a global variable (and in &lt;code&gt;frob&lt;/code&gt; as well). The alternative would be to execute method's with a replaced global scope (where &lt;code&gt;self&lt;/code&gt; is the object).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;функция &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fubar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не будет работать, поскольку она предполагает, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является глобальной переменной (и в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;frob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; также). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Альтернативой может быть выполнение методов с замененной глобальной областью действия (где &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это объект).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15df964e763425375e70415f5ca93a9ba7753977" translate="yes" xml:space="preserve">
          <source>Now when &lt;code&gt;ObjectA.methodA(arg1, arg2)&lt;/code&gt; is called, python internally converts it for you as:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь, когда &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ObjectA.methodA(arg1, arg2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , python внутренне преобразует его для вас как:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c4f1512422cda9536646701fa09bf1ff9841053" translate="yes" xml:space="preserve">
          <source>Often, the first argument of a method is called self. This is nothing more than a convention: the name self has absolutely no special meaning to Python. Note, however, that by not following the convention your code may be less readable to other Python programmers, and it is also conceivable that a class browser program might be written that relies upon such a convention.</source>
          <target state="translated">Часто первый аргумент метода называется &quot;Я&quot;.Это не более чем конвенция:имя &quot;Я&quot; не имеет абсолютно никакого особого значения для Python.Обратите внимание,однако,что,не следуя этому условию,ваш код может быть менее читабельным для других программистов,работающих на Python,а также возможно,что может быть написана программа для браузера классов,которая полагается на такое условное обозначение.</target>
        </trans-unit>
        <trans-unit id="258a1ed20442bd3f7ba346c3f9794ef4a31bfa8e" translate="yes" xml:space="preserve">
          <source>Python could have done something else to distinguish normal names from attributes -- special syntax like Ruby has, or requiring declarations like C++ and Java do, or perhaps something  yet more different -- but it didn't. Python's all for making things explicit, making it obvious what's what, and although it doesn't do it entirely everywhere, it does do it for instance attributes. That's why assigning to an instance attribute needs to know what instance to assign to, and that's why it needs &lt;code&gt;self.&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python мог бы сделать что-то еще, чтобы отличить нормальные имена от атрибутов - особый синтаксис, как в Ruby, или требующий объявлений, как в C ++ и Java, или, возможно, что-то еще более отличное - но это не так. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python - все для того, чтобы сделать вещи явными, сделать очевидным, что к чему, и хотя он не делает это везде, он делает это для атрибутов экземпляра. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот почему при назначении атрибута экземпляра необходимо знать, какой экземпляр назначить, и поэтому ему нужно &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;,&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4683d3f409566286d2017192d77dcb16ba4f059d" translate="yes" xml:space="preserve">
          <source>Python is not a language built for Object Oriented Programming unlike Java or C++.</source>
          <target state="translated">Python не является языком,построенным для объектно-ориентированного программирования,в отличие от Java или C++.</target>
        </trans-unit>
        <trans-unit id="e9f759641972f26a0f6ec82d58012e08599b7ace" translate="yes" xml:space="preserve">
          <source>See the illustration below:</source>
          <target state="translated">См.иллюстрацию ниже:</target>
        </trans-unit>
        <trans-unit id="3c5d6c52a96c36ca40fc11c0b386b2571f9c617c" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;self&lt;/code&gt; holds the memory address of the class instance.
&lt;em&gt;The purpose&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt; would be to hold the reference for &lt;em&gt;instance methods&lt;/em&gt; and for us to have &lt;strong&gt;explicit&lt;/strong&gt; access to that reference.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; хранит адрес памяти экземпляра класса. &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Цель&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; из &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будет содержать ссылку на &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;методы экземпляра&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и для нас , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;чтобы иметь &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;явный&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; доступ к этой ссылке.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8033fe43cda2814a433763ba5aed294a107a16ff" translate="yes" xml:space="preserve">
          <source>So the whole structure stays the same. How can me make use of this? If we assume for a moment that we hadn&amp;rsquo;t written a &lt;code&gt;length&lt;/code&gt; method for our &lt;code&gt;Vector&lt;/code&gt; class, we could do this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, вся структура остается прежней. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как я могу использовать это? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если мы на мгновение предположим, что мы не написали &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;метод &lt;/font&gt;&lt;/font&gt; &lt;code&gt;length&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для нашего &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;класса &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Vector&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , мы могли бы сделать это:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8eb070aa7c635eb9bd885287b9adbf5e28e64710" translate="yes" xml:space="preserve">
          <source>Take a look at the following example, which clearly explains the purpose of &lt;code&gt;self&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Посмотрите на следующий пример, в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;котором четко объясняет цель &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="34b1e6c79b713cc0f1cb08dee730316708c202e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;self&lt;/code&gt; variable refers to the object itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; переменный относится к самому объекту.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33ab0fa14d5634f4ae1f8ce119fc35712999037e" translate="yes" xml:space="preserve">
          <source>The Object is passed into the self parameter so that the object can keep hold of its own data.</source>
          <target state="translated">Объект передается в параметр self,чтобы объект мог хранить свои данные.</target>
        </trans-unit>
        <trans-unit id="4b52872a14b15cd870db6e292baff0770de114fd" translate="yes" xml:space="preserve">
          <source>The first argument of every class method, including init, is always a reference to the current instance of the class. By convention, this argument is always named self. In the init method, self refers to the newly created object; in other class methods, it refers to the instance whose method was called. For example the below code is the same as the above code.</source>
          <target state="translated">Первым аргументом каждого метода класса,включая init,всегда является ссылка на текущий экземпляр класса.По условию,этот аргумент всегда называется &quot;Я&quot;.В методе init self ссылается на вновь созданный объект;в других методах класса он ссылается на экземпляр,чей метод был вызван.Например,приведенный ниже код аналогичен приведенному выше.</target>
        </trans-unit>
        <trans-unit id="a5debc952d5b06e246420009c31e64d9cf5ef808" translate="yes" xml:space="preserve">
          <source>The following excerpts are from the &lt;a href=&quot;http://docs.python.org/tutorial/classes.html&quot;&gt;Python documentation about self&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Следующие выдержки взяты из &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/tutorial/classes.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;документации Python о себе&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71f9277b0ee801046ce1b5d5d98d2fbb263d87c6" translate="yes" xml:space="preserve">
          <source>The implicit approach would be</source>
          <target state="translated">Неявный подход будет заключаться в следующем</target>
        </trans-unit>
        <trans-unit id="ddfded39a7b36e02781c387a61e0e0bb144cd52e" translate="yes" xml:space="preserve">
          <source>The reason you need to use &lt;code&gt;self.&lt;/code&gt; is because Python does not use the &lt;code&gt;@&lt;/code&gt; syntax to refer to instance attributes. Python decided to do methods in a way that makes the instance to which the method belongs be &lt;em&gt;passed&lt;/em&gt; automatically, but not &lt;em&gt;received&lt;/em&gt; automatically: the first parameter of methods is the instance the method is called on. That makes methods entirely the same as functions, and leaves the actual name to use up to you (although &lt;code&gt;self&lt;/code&gt; is the convention, and people will generally frown at you when you use something else.) &lt;code&gt;self&lt;/code&gt; is not special to the code, it's just another object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Причина, по которой вам нужно использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; потому что Python не использует &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;синтаксис &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для ссылки на атрибуты экземпляра. Python решил сделать методы так, чтобы экземпляр, которому принадлежит метод, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;передавался&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; автоматически, но не &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;получался&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; автоматически: первый параметр методов - это экземпляр, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;к которому &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вызывается метод. Это делает методы полностью такими же, как функции, и оставляет фактическое имя для использования на ваше усмотрение (хотя &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является соглашением, и люди, как правило, недовольны вами, когда вы используете что-то другое.) &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не является особенным для кода, оно просто другой объект.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="236e866fde0d76ee2f000c8552125a8a8ff7ae46" translate="yes" xml:space="preserve">
          <source>The self method is also used to refer to a variable field within the class.</source>
          <target state="translated">Самостоятельный метод также используется для ссылки на поле переменной внутри класса.</target>
        </trans-unit>
        <trans-unit id="357314b070890139eadce8c33ddb4a9f5b685e85" translate="yes" xml:space="preserve">
          <source>The use of the argument, conventionally called &lt;code&gt;self&lt;/code&gt; isn't as hard to understand, as is why is it necessary? Or as to why explicitly mention it? That, I suppose, is a bigger question for most users who look up this question, or if it is not, they will certainly have the same question as they move forward learning python. I recommend them to read these couple of blogs:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Использование аргумента, условно называемого &amp;laquo; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , не так сложно для понимания, так как зачем это нужно? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Или относительно того, почему это явно упоминается? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это, я полагаю, более важный вопрос для большинства пользователей, которые ищут этот вопрос, или, если это не так, у них наверняка возникнет тот же вопрос, что и в дальнейшем изучении Python. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я рекомендую им прочитать эти пару блогов:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aad90dfdf56f4dead42a985825163ec490775638" translate="yes" xml:space="preserve">
          <source>There was just a &lt;a href=&quot;https://www.artima.com/weblogs/viewpost.jsp?thread=239003&quot;&gt;question&lt;/a&gt; should &lt;code&gt;self&lt;/code&gt; be implicit or explicit.
&lt;a href=&quot;https://en.wikipedia.org/wiki/Guido_van_Rossum&quot;&gt;&lt;code&gt;Guido van Rossum&lt;/code&gt;&lt;/a&gt; resolved this question saying &lt;a href=&quot;https://neopythonic.blogspot.com/2008/10/why-explicit-self-has-to-stay.html&quot;&gt;&lt;code&gt;self&lt;/code&gt; has to stay&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Был только &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.artima.com/weblogs/viewpost.jsp?thread=239003&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вопрос&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; должен &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; быть неявным или явным. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Guido_van_Rossum&quot;&gt; &lt;code&gt;Guido van Rossum&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; решил этот вопрос, сказав, что &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://neopythonic.blogspot.com/2008/10/why-explicit-self-has-to-stay.html&quot;&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; должен остаться&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="593c5330f958a39918abf861eca976eee15dc227" translate="yes" xml:space="preserve">
          <source>This program will output:</source>
          <target state="translated">Эта программа будет выводить:</target>
        </trans-unit>
        <trans-unit id="eef4955b5010ecd4fd99113e1edfc155496ebf10" translate="yes" xml:space="preserve">
          <source>This works because the first parameter of &lt;code&gt;length_global&lt;/code&gt;, can be re-used as the &lt;code&gt;self&lt;/code&gt; parameter in &lt;code&gt;length_new&lt;/code&gt;. This would not be possible without an explicit &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это работает, потому что первый параметр &lt;/font&gt;&lt;/font&gt; &lt;code&gt;length_global&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; может быть повторно использован в качестве &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;параметра &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;length_new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это не было бы возможно без явной &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2596a67954f16752ece427c512b8db673c0d7cf7" translate="yes" xml:space="preserve">
          <source>This would mean that &lt;code&gt;myX&lt;/code&gt; would be interpreted as a local variable in &lt;code&gt;fubar&lt;/code&gt; (and in &lt;code&gt;frob&lt;/code&gt; as well). The alternative here would be to execute methods with a replaced local scope which is retained between calls, but that would remove the posibility of method local variables.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это будет означать, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;myX&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будет интерпретироваться как локальная переменная в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fubar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (и в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;frob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Альтернативой здесь было бы выполнение методов с замененной локальной областью действия, которая сохраняется между вызовами, но это исключило бы возможность использования локальных переменных метода.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed2cbf212c8ade235fd86f44cae03dacd4093358" translate="yes" xml:space="preserve">
          <source>We want to have a method which calculates the length. What would it look like if we wanted to define it inside the class?</source>
          <target state="translated">Мы хотим иметь метод,который вычисляет длину.Как бы он выглядел,если бы мы хотели определить его внутри класса?</target>
        </trans-unit>
        <trans-unit id="51c707af171267923b8f12ea5d5f5baf6defa4a4" translate="yes" xml:space="preserve">
          <source>What is the purpose of the &lt;code&gt;self&lt;/code&gt; word in Python? I understand it refers to the specific object created from that class, but I can't see why it explicitly needs to be added to every function as a parameter. To illustrate, in Ruby I can do this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Какова цель &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; слова в Python? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я понимаю, что это относится к конкретному объекту, созданному из этого класса, но я не понимаю, почему его необходимо явно добавлять в каждую функцию в качестве параметра. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для иллюстрации, в Ruby я могу сделать это:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20f72ac8403123e86e8f003d52ec694b7faef133" translate="yes" xml:space="preserve">
          <source>What is the purpose of the word 'self'</source>
          <target state="translated">Каково назначение слова &quot;я&quot;.</target>
        </trans-unit>
        <trans-unit id="f4d688a1bfa95956a5de1b7469fb1318897cb850" translate="yes" xml:space="preserve">
          <source>What should it look like when we were to define it as a global method/function?</source>
          <target state="translated">Как это должно выглядеть,когда мы должны были определить его как глобальную методологическую функцию?</target>
        </trans-unit>
        <trans-unit id="e01e46f09d9e7888039e78471558742a261a5a69" translate="yes" xml:space="preserve">
          <source>When calling a static method in Python, one simply writes a method with regular arguments inside it.</source>
          <target state="translated">При вызове статического метода на Python просто пишется метод с регулярными аргументами внутри.</target>
        </trans-unit>
        <trans-unit id="7184698ade8e0047ba5ca2450108ac89df6c1957" translate="yes" xml:space="preserve">
          <source>When objects are instantiated, the object itself is passed into the self parameter.</source>
          <target state="translated">Когда объекты инстанцируются,сам объект передается в самопараметр.</target>
        </trans-unit>
        <trans-unit id="8de116e44bafb791e48be7570d1a71f076e1700d" translate="yes" xml:space="preserve">
          <source>Which I understand, quite easily. However in Python I need to include &lt;code&gt;self&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Что я понимаю, довольно легко. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Однако в Python мне нужно включить &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="62a45f03a7cb6b87698f82532e1d2c3771f05107" translate="yes" xml:space="preserve">
          <source>You should take a look at &lt;code&gt;cls&lt;/code&gt; too, to have &lt;strong&gt;&lt;em&gt;the bigger picture&lt;/em&gt;&lt;/strong&gt;. This &lt;a href=&quot;https://stackoverflow.com/questions/7554738/python-self-no-self-and-cls&quot;&gt;&lt;strong&gt;post&lt;/strong&gt;&lt;/a&gt; could be helpful.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы должны взглянуть на &lt;/font&gt;&lt;/font&gt; &lt;code&gt;cls&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; тоже, чтобы иметь &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;более широкую картину&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Этот &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/7554738/python-self-no-self-and-cls&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;пост&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; может быть полезным.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cda8d6f8522fc89e6f8523ec1bd67f9f85b7a529" translate="yes" xml:space="preserve">
          <source>[migrated my answer from duplicate closed question]</source>
          <target state="translated">[перенес мой ответ из дублированного закрытого вопроса]</target>
        </trans-unit>
        <trans-unit id="121ffea1a0e29f88cc77aa8380ef0cbc7ebc882f" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;ObjectA&lt;/code&gt; is an instance of this class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ObjectA&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является экземпляром этого класса.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="36566f0d5cd3b605a76017fb817f21e2ece7b8c5" translate="yes" xml:space="preserve">
          <source>from the &lt;a href=&quot;https://docs.python.org/3/tutorial/classes.html#method-objects&quot;&gt;docs&lt;/a&gt;,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;из &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/tutorial/classes.html#method-objects&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;документов&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ,&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5298c83d605c12f453bc762c3d960a8cb581ef99" translate="yes" xml:space="preserve">
          <source>here when called as a method &lt;code&gt;frob&lt;/code&gt; will receive the object on which it's called via the &lt;code&gt;self&lt;/code&gt; parameter, and &lt;code&gt;fubar&lt;/code&gt; can still be called with an object as parameter and work the same (it &lt;em&gt;is&lt;/em&gt; the same as &lt;code&gt;C.frob&lt;/code&gt; I think).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;здесь , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;когда вызываются как метод &lt;/font&gt;&lt;/font&gt; &lt;code&gt;frob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; получит объект , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;на котором он вызываемый через &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; параметр, и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fubar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; еще можно назвать с объектом в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;качестве параметра и работать так же (он &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;является&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; таким же , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C.frob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; я думаю).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="743291c3850784c84035f299485b24abf93248d8" translate="yes" xml:space="preserve">
          <source>is internally transformed to</source>
          <target state="translated">преобразуется внутри организации в</target>
        </trans-unit>
        <trans-unit id="ff4cfbf9b524daaa207c90c3ff07eeccb917e997" translate="yes" xml:space="preserve">
          <source>it is easy to see where the &lt;code&gt;self&lt;/code&gt; fits in. You don't actually write instance methods in Python; what you write is class methods which must take an instance as a first parameter. And therefore, you&amp;rsquo;ll have to place the instance parameter somewhere explicitly.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;легко увидеть, куда &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;входит &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . На самом деле вы не пишете методы экземпляра в Python; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;то, что вы пишете, это методы класса, которые должны принимать экземпляр в качестве первого параметра. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;И поэтому вам нужно будет явно указать параметр экземпляра где-нибудь.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="602a92975ef013086ca7aaa6bf413c282246b22d" translate="yes" xml:space="preserve">
          <source>it's an explicit reference to the class instance object.</source>
          <target state="translated">это явная ссылка на объект экземпляра класса.</target>
        </trans-unit>
        <trans-unit id="4a914850299ac09863ca47de283030472b1323a8" translate="yes" xml:space="preserve">
          <source>preceding this the related snippet,</source>
          <target state="translated">перед этим соответствующим отрывком,</target>
        </trans-unit>
        <trans-unit id="662e7a4e1ccf087f0bd4e57b2d8916d49da4bba7" translate="yes" xml:space="preserve">
          <source>self is acting as like current object name or instance of class .</source>
          <target state="translated">self действует как текущее имя объекта или экземпляр класса .</target>
        </trans-unit>
        <trans-unit id="2299eef37790f4ca4597855716d34cdfde332c03" translate="yes" xml:space="preserve">
          <source>self, as a name, is &lt;strong&gt;&lt;em&gt;just a convention&lt;/em&gt;&lt;/strong&gt;, call it as you want ! but when using it, for example to delete the object, you have to use the same name: &lt;code&gt;__del__(var)&lt;/code&gt;, where &lt;code&gt;var&lt;/code&gt; was used in the &lt;code&gt;__init__(var,[...])&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я, как имя, это &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;просто соглашение&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , называйте его как хотите! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;но при его использовании, например, для удаления объекта, вы должны использовать то же имя: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__del__(var)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , где &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; использовался в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__(var,[...])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f65e60d4715eb9fb11f7c4dc1fe62b7ab19827e" translate="yes" xml:space="preserve">
          <source>the special thing about methods is that the instance object is passed as the first argument of the function. In our example, the call &lt;code&gt;x.f()&lt;/code&gt; is exactly equivalent to &lt;code&gt;MyClass.f(x)&lt;/code&gt;. In general, calling a method with a list of n arguments is equivalent to calling the corresponding function with an argument list that is created by inserting the method&amp;rsquo;s instance object before the first argument.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Особенность методов заключается в том, что объект экземпляра передается в качестве первого аргумента функции. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В нашем примере вызов &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x.f()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в точности эквивалентен &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyClass.f(x)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В общем, вызов метода со списком из n аргументов эквивалентен вызову соответствующей функции со списком аргументов, который создается путем вставки объекта экземпляра метода перед первым аргументом.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
