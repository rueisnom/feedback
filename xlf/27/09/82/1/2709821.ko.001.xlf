<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/2709821">
    <body>
      <group id="2709821">
        <trans-unit id="50e85d29c47a1d85bd7c5be469ba8466758d942e" translate="yes" xml:space="preserve">
          <source>1: Use of self explained</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1 : 자기 설명의 사용&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1537a8e68e069434e270cc3838444c83d94e5cc8" translate="yes" xml:space="preserve">
          <source>2: Why do we have it this way and why can we not eliminate it as an argument, like Java, and have a keyword instead</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2 : 왜 우리는 이런 식으로 그것을 가지고 있고 왜 우리는 그것을 Java와 같은 인수로 제거 할 수없고 대신 키워드를 가질 수 없습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5eb8f3b2312bc947db52c8a97e61506d1aedafe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; is an object reference to the object itself, therefore, they are same.
Python methods are not called in the context of the object itself.
&lt;code&gt;self&lt;/code&gt; in Python may be used to deal with custom object models or something.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 객체 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자체&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 대한 객체 참조이므로 동일합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬 메서드는 객체 자체의 컨텍스트에서 호출되지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 커스텀 객체 모델이나 무언가를 다루는 데 사용될 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a874337841087eb6d4e3fd02ebeff09e3f41e30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; is used/needed to distinguish between instances.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 인스턴스를 구별하기 위해 사용 / 필요합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7bbbee55cb7764d08e89b619ce2618705e50c5e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;code&gt;self&lt;/code&gt; is inevitable.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 불가피하다.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="000ff359a4612c3cd78461682bd92e1a6e08cc41" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;So where the &lt;code&gt;self&lt;/code&gt; live?&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 어디에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;살고 있습니까?&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5876d210d7b4d75c13a6ac1e49433fa1a45a8975" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PS&lt;/strong&gt;:This works only in Python 3.x.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추신&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : 이것은 Python 3.x에서만 작동합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9670bbb1d8cee5fcdc65d7155e230400409ebb4a" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;Note there are three different types of class methods: &lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 메소드에는 세 가지 유형이 있습니다. &lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="63fc6fb7eeb47a2032fb704c9b812e661ad6c8da" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;class methods, &lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수업 방법, &lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="5984bb71b436be400f88353cdf605e197b5f9688" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;instance methods (mentioned).&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인스턴스 메소드 (언급).&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="32c3319fe4e24251db9e0824df8d8a9e43367f69" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;static methods (read: functions), &lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 메소드 (읽기 : 함수) &lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="c34a16b60167fe7774a9bd522b90a56ffc18afb0" translate="yes" xml:space="preserve">
          <source>Although this may not be wholly accurate, think of the process of instantiating an object like this: When an object is made it uses the class as a template for its own data and methods. Without passing it's own name into the self parameter, the attributes and methods in the class would remain as a general template and would not be referenced to (belong to) the object. So by passing the object's name into the self parameter it means that if 100 objects are instantiated from the one class, they can all keep track of their own data and methods.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 완전히 정확하지는 않지만 다음과 같이 객체를 인스턴스화하는 프로세스를 생각해보십시오. 객체가 만들어 질 때 클래스는 자체 데이터 및 메소드의 템플리트로 클래스를 사용합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자체 매개 변수에 자체 이름을 전달하지 않으면 클래스의 속성과 메서드는 일반 템플릿으로 유지되며 객체와 관련하여 참조되지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 객체 이름을 self 매개 변수에 전달하면 하나의 클래스에서 100 개의 객체를 인스턴스화하면 모두 자신의 데이터와 메서드를 추적 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d191bd2f194e5d4b89d87364b155e100ffda17d8" translate="yes" xml:space="preserve">
          <source>An example of where it&amp;rsquo;s useful:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유용한 곳의 예 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd718882d8614d635c144a6cb59b0ee9a633fd83" translate="yes" xml:space="preserve">
          <source>Another thing I would like to add is, an optional &lt;code&gt;self&lt;/code&gt; argument allows me to declare static methods inside a class, by not writing &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 추가하고 싶은 또 다른 것은 선택적 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인수를 사용하면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 작성하지 않고 클래스 내에서 정적 메소드를 선언 할 수 있다는 것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7fda3041282a75d7a819bf9be5dbebcf81e8c5b" translate="yes" xml:space="preserve">
          <source>Another way of understanding the need for the explicit &lt;code&gt;self&lt;/code&gt; is to see where Python adds some syntactical sugar. When you keep in mind, that basically, a call like</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;명시 적 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 필요성을 이해하는 또 다른 방법은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬이 구문 설탕을 추가하는 위치를 보는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;명심하면 기본적으로&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d51ef4a664f88c7337f20cd95fa343ccee08592" translate="yes" xml:space="preserve">
          <source>As in Modula-3, there are no shorthands [in Python] for referencing the object&amp;rsquo;s members from its methods: the method function is declared with an explicit first argument representing the object, which is provided implicitly by the call.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Modula-3에서와 같이, 메소드에서 객체의 멤버를 참조하기위한 [Python에서는] 속기가 없습니다. 메소드 함수는 객체를 나타내는 명시적인 첫 번째 인수로 선언되며, 이는 호출에 의해 암시 적으로 제공됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6965d4a50fc0bb5303c1ad50710d902fffd1a3fd" translate="yes" xml:space="preserve">
          <source>As well as all the other reasons already stated, it allows for easier access to overridden methods; you can call &lt;code&gt;Class.some_method(inst)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이미 언급 된 다른 모든 이유뿐만 아니라 재정의 된 메소드에보다 쉽게 ​​액세스 할 수 있습니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class.some_method(inst)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 호출 할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="47825e120c811078fab3444ae5cfd581d14f7642" translate="yes" xml:space="preserve">
          <source>Because of this, the object&amp;rsquo;s data is bound to the object. Below is an example of how you might like to visualize what each object&amp;rsquo;s data might look. Notice how &amp;lsquo;self&amp;rsquo; is replaced with the objects name. I'm not saying this example diagram below is wholly accurate but it hopefully with serve a purpose in visualizing the use of self.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이로 인해 객체의 데이터가 객체에 바인딩됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래는 각 객체의 데이터가 어떻게 보이는지 시각화하는 방법의 예입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'self'가 어떻게 객체 이름으로 대체되는지 확인하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래 예제 다이어그램이 완전히 정확하다고 말하지는 않지만 자아 사용을 시각화하는 목적으로 사용되기를 바랍니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f75756ae2686b3787b103a87d2e562911fda7698" translate="yes" xml:space="preserve">
          <source>Can anyone talk me through this? It is not something I've come across in my (admittedly limited) experience.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;누구든지 이것을 통해 나에게 이야기 할 수 있습니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;제 경험에 비추어 볼 수있는 것은 아닙니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a0a65b981f3e6edeea679d1cb736a592c98898e" translate="yes" xml:space="preserve">
          <source>Classes are just a way to avoid passing in this &quot;state&quot; thing all the time (and other nice things like initializing, class composition, the rarely-needed metaclasses, and supporting custom methods to override operators).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스는이 &quot;상태&quot;항목을 항상 전달하지 않는 방법입니다 (초기화, 클래스 구성, 거의 필요하지 않은 메타 클래스 및 연산자 재정의를위한 사용자 정의 메소드 지원과 같은 다른 좋은 것).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f6149f799d8c444725006c9698a101c422ecde86" translate="yes" xml:space="preserve">
          <source>Code examples:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드 예 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3d397aef3c49cb0016377f1a744764bdb0ac8452" translate="yes" xml:space="preserve">
          <source>Code is here</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드는 여기&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2850358a794f53a868ef5cde0f2e09281010eb73" translate="yes" xml:space="preserve">
          <source>First of all, self is a conventional name, you could put anything else (being coherent) in its stead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우선, self는 관습적인 이름이므로, 그 대신에 다른 것 (일관성있는 것)을 넣을 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d1091bb5dc4fffffabec8d605e2909ed5e5beae7" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;http://docs.python.org/tutorial/classes.html&quot;&gt;Python documentation tutorial on classes&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 정보 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/tutorial/classes.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 클래스&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 문서 학습서를&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 참조하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ebb6ada30b264c4be67d7f9f6f903e92d521dbe" translate="yes" xml:space="preserve">
          <source>Here is the typical use case &lt;code&gt;class C&lt;/code&gt; with the method &lt;code&gt;m1&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 &lt;/font&gt; &lt;code&gt;m1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 일반적인 유스 케이스 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;class C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="86dbec6b29f290589f8c98a049e22d2aa0593076" translate="yes" xml:space="preserve">
          <source>However the current situation works out well:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 현재 상황은 잘 작동합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="679cfe9a74012f5e9ad53e01c20c9cb0c6bd960c" translate="yes" xml:space="preserve">
          <source>However, an object method, which requires you to make a variable, which is an Animal, in this case, needs the self argument</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 동물 인 변수 인 변수를 만들어야하는 개체 메서드에는이 경우 자체 인수가 필요합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="78a980d3d9db85fa50ef635a3331990e04311c7b" translate="yes" xml:space="preserve">
          <source>I like this example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는이 예를 좋아한다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e492903d2e5ae5c26b7a8e28f06043f9f5a5b80" translate="yes" xml:space="preserve">
          <source>I will demonstrate with code that &lt;strong&gt;does not use classes&lt;/strong&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스를 사용하지 않는&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 코드로 시연하겠습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c19c4bc24da7e68f7630b6e13941c1405ee9f20d" translate="yes" xml:space="preserve">
          <source>I'm surprised nobody has brought up Lua. Lua also uses the 'self' variable however it can be omitted but still used. C++ does the same with 'this'. I don't see any reason to have to declare 'self' in each function but you should still be able to use it just like you can with lua and C++. For a language that prides itself on being brief it's odd that it requires you to declare the self variable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;루아를 키운 사람이 아무도 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;루아는 또한 'self'변수를 사용하지만 생략 할 수는 있지만 여전히 사용됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C ++은 'this'와 동일한 기능을 수행합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;각 함수에서 'self'를 선언 해야하는 이유는 없지만 lua 및 C ++에서와 마찬가지로 여전히 사용할 수 있어야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;간결한 언어를 자랑스럽게 생각하는 언어의 경우 자체 변수를 선언해야하는 것이 이상합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cf2a59502df9000886690e5c93aa08fae3dbb2f0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;user_type_name&lt;/code&gt; is a field on your model you access it by &lt;code&gt;self.user_type_name&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;user_type_name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 모델의 필드 인 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self.user_type_name&lt;/code&gt; 으로&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 액세스하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3cd8541d9818861c74e04f0ea1206bb8511dbd2b" translate="yes" xml:space="preserve">
          <source>If we would just stick to functional programming we would not need &lt;code&gt;self&lt;/code&gt;.
Once we enter the &lt;em&gt;Python OOP&lt;/em&gt; we find &lt;code&gt;self&lt;/code&gt; there.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수형 프로그래밍을 고수한다면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 필요하지 않을 것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일단 우리가 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬 OOP에&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 들어가면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;거기서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 찾을 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f3a3b993145f45c688b6cfd5b2591df95605e36f" translate="yes" xml:space="preserve">
          <source>If you don't understand a single word of what I am saying, then Google &quot;Object Oriented Programming.&quot; Once you understand this, you won't even need to ask that question :).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 말하고있는 한 마디를 이해하지 못하면 Google &quot;객체 지향 프로그래밍&quot; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일단 이것을 이해하면 그 질문을 할 필요조차 없습니다 :).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b25b45089714fe4d147920ae1c6a7e704509ca1a" translate="yes" xml:space="preserve">
          <source>In previous versions, you have to explicitly add &lt;code&gt;@staticmethod&lt;/code&gt; decorator, otherwise &lt;code&gt;self&lt;/code&gt; argument is obligatory.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이전 버전에서는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@staticmethod&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 데코레이터 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 명시 적으로 추가해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇지 않으면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인수가 필요합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1be71fcef2d5e1bb4f22ae67b000649511c0af59" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;__init__&lt;/code&gt; method, self refers to the newly created object; in other class methods, it refers to the instance whose method was called.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있어서, 자기가 새로 생성 된 객체를 참조; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 클래스 메서드에서는 메서드가 호출 된 인스턴스를 나타냅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="452b0a268b84f2447c95120175df2b3e61456dd3" translate="yes" xml:space="preserve">
          <source>In this case, self is referring to the animalName variable of the entire class. REMEMBER: If you have a variable within a method, self will not work. That variable is simply existent only while that method is running. For defining fields (the variables of the entire class), you have to define them OUTSIDE the class methods.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우 self는 전체 클래스의 animalName 변수를 참조합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기억하십시오 : 메소드 내에 변수가 있으면 self가 작동하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 변수는 해당 메소드가 실행되는 동안에 만 존재합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;필드 (전체 클래스의 변수)를 정의하려면 클래스 메소드 외부에서 필드를 정의해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bad7092bf970259d27d6ca40103b481dc18aeada" translate="yes" xml:space="preserve">
          <source>Is because by the way python is designed the alternatives would hardly work. Python is designed to allow methods or functions to be defined in a context where both implicit &lt;code&gt;this&lt;/code&gt; (a-la Java/C++) or explicit &lt;code&gt;@&lt;/code&gt; (a-la ruby) wouldn't work. Let's have an example with the explicit approach with python conventions:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬이 설계된 방식으로 대안이 거의 작동하지 않기 때문입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python은 암시 적 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (a-la Java / C ++) 또는 명시적인 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (a-la ruby)가 작동하지 않는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컨텍스트에서 메소드 또는 함수를 정의 할 수 있도록 설계되었습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬 규칙을 사용한 명시 적 접근 방식의 예를 보자.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4ed620c87c639fb9b0860ceeda85570cbe8b9b3e" translate="yes" xml:space="preserve">
          <source>It refers to the object itself, so when you are using it, you are declaring that .name and .age are properties of the Student objects (note, not of the Student class) you are going to create.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체 자체를 참조하므로 사용하는 경우 .name 및 .age는 만들려는 Student 객체 (참고 : Student 클래스가 아님)의 속성임을 선언합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="21bf8feaa6c0a2f61c70a863156d23df7a935d91" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s there to follow the Python zen &amp;ldquo;explicit is better than implicit&amp;rdquo;. It&amp;rsquo;s indeed a reference to your class object. In Java and PHP, for example, it's called &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬 선을 따르는 것은 &quot;명시적인 것이 암시적인 것보다 낫다&quot;입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로 클래스 객체에 대한 참조입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 Java와 PHP에서는 이것을 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 라고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2c9c4c77d4adbd01f1435185efa5957ed6778e9" translate="yes" xml:space="preserve">
          <source>Its use is similar to the use of &lt;code&gt;this&lt;/code&gt; keyword in Java, i.e. to give a reference to the current object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 키워드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 사용은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서이&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 키워드를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하는 것과 유사합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, 현재 객체에 대한 참조를 제공합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a620020f809368b31aaece363f3a58b2d40f3ba" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take a simple vector class:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;간단한 벡터 클래스를 보자.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20fb24e3a04118e838e61d25d5d3d3b68eab42e7" translate="yes" xml:space="preserve">
          <source>Let's say you have a class &lt;code&gt;ClassA&lt;/code&gt; which contains a method &lt;code&gt;methodA&lt;/code&gt; defined as:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;과 같이 정의 된 &lt;/font&gt; &lt;code&gt;methodA&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드를 포함하는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ClassA&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스가 있다고 가정 해 봅시다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="42b61ca4b9c209d049a6afa504e32bd2ac5178b9" translate="yes" xml:space="preserve">
          <source>Note that it is not a keyword.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;키워드가 아닙니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d0f0ab3b327e5b3e363a25cd02fd12261e55f5a3" translate="yes" xml:space="preserve">
          <source>Now let's demonstrate the above code using the built-in python class machinery, to show how it's basically the same thing.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 기본 제공 파이썬 클래스 기계를 사용하여 위 코드를 시연 해 보자. 기본적으로 동일한 방법을 보여 주겠다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63c6bd152a96e31a755ef297e6442c2fb1689438" translate="yes" xml:space="preserve">
          <source>Now the &lt;code&gt;fubar&lt;/code&gt; function wouldn't work since it would assume that &lt;code&gt;self&lt;/code&gt; is a global variable (and in &lt;code&gt;frob&lt;/code&gt; as well). The alternative would be to execute method's with a replaced global scope (where &lt;code&gt;self&lt;/code&gt; is the object).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fubar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 전역 변수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;라고 가정하기 때문에 작동하지 않습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(그리고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;frob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서도). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대안은 대체 된 전역 범위 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 객체 임) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로 메소드를 실행하는 것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15df964e763425375e70415f5ca93a9ba7753977" translate="yes" xml:space="preserve">
          <source>Now when &lt;code&gt;ObjectA.methodA(arg1, arg2)&lt;/code&gt; is called, python internally converts it for you as:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ObjectA.methodA(arg1, arg2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 호출되면 파이썬은 내부적으로 다음과 같이 변환합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c4f1512422cda9536646701fa09bf1ff9841053" translate="yes" xml:space="preserve">
          <source>Often, the first argument of a method is called self. This is nothing more than a convention: the name self has absolutely no special meaning to Python. Note, however, that by not following the convention your code may be less readable to other Python programmers, and it is also conceivable that a class browser program might be written that relies upon such a convention.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;종종 메소드의 첫 번째 인수를 self라고합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 규칙에 지나지 않습니다. self라는 이름은 파이썬에 특별한 의미가 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 규칙을 따르지 않으면 코드를 다른 Python 프로그래머가 읽을 수 없을 수 있으며 이러한 규칙에 의존하는 클래스 브라우저 프로그램을 작성할 수도 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="258a1ed20442bd3f7ba346c3f9794ef4a31bfa8e" translate="yes" xml:space="preserve">
          <source>Python could have done something else to distinguish normal names from attributes -- special syntax like Ruby has, or requiring declarations like C++ and Java do, or perhaps something  yet more different -- but it didn't. Python's all for making things explicit, making it obvious what's what, and although it doesn't do it entirely everywhere, it does do it for instance attributes. That's why assigning to an instance attribute needs to know what instance to assign to, and that's why it needs &lt;code&gt;self.&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬은 일반 이름과 속성 (루비의 특수 구문, C ++ 및 Java와 같은 선언이 필요하거나 다른 표현이 필요함)을 구별하기 위해 다른 것을 할 수 있었지만 그렇지 않았습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬은 모든 것을 명시 적으로 만들고, 무엇이 무엇인지 분명하게 만들고, 모든 곳에서 그것을하지는 않지만 인스턴스 속성을 위해 수행합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇기 때문에 인스턴스 속성에 할당 할 인스턴스를 할당해야하는 이유가 무엇이며 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성이 필요한 이유 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4683d3f409566286d2017192d77dcb16ba4f059d" translate="yes" xml:space="preserve">
          <source>Python is not a language built for Object Oriented Programming unlike Java or C++.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬은 자바 나 C ++과 달리 객체 지향 프로그래밍을 위해 만들어진 언어가 아닙니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e9f759641972f26a0f6ec82d58012e08599b7ace" translate="yes" xml:space="preserve">
          <source>See the illustration below:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래 그림을 참조하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3c5d6c52a96c36ca40fc11c0b386b2571f9c617c" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;self&lt;/code&gt; holds the memory address of the class instance.
&lt;em&gt;The purpose&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt; would be to hold the reference for &lt;em&gt;instance methods&lt;/em&gt; and for us to have &lt;strong&gt;explicit&lt;/strong&gt; access to that reference.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 클래스 인스턴스의 메모리 주소를 보유합니다. &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;목적&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 대한 참조 유지하는 것입니다 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인스턴스 메소드를&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 우리가 가지고과 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;명시 적으로&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 해당 참조에 액세스 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8033fe43cda2814a433763ba5aed294a107a16ff" translate="yes" xml:space="preserve">
          <source>So the whole structure stays the same. How can me make use of this? If we assume for a moment that we hadn&amp;rsquo;t written a &lt;code&gt;length&lt;/code&gt; method for our &lt;code&gt;Vector&lt;/code&gt; class, we could do this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 전체 구조는 동일하게 유지됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것을 어떻게 활용할 수 있습니까? &lt;/font&gt; &lt;code&gt;Vector&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;length&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작성하지 않았다고 가정하면 다음 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;과 같이 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8eb070aa7c635eb9bd885287b9adbf5e28e64710" translate="yes" xml:space="preserve">
          <source>Take a look at the following example, which clearly explains the purpose of &lt;code&gt;self&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 목적을 명확하게 설명하는 다음 예를 살펴보십시오.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="34b1e6c79b713cc0f1cb08dee730316708c202e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;self&lt;/code&gt; variable refers to the object itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변수는 객체 자체를 의미합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33ab0fa14d5634f4ae1f8ce119fc35712999037e" translate="yes" xml:space="preserve">
          <source>The Object is passed into the self parameter so that the object can keep hold of its own data.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오브젝트는 자체 매개 변수로 전달되므로 오브젝트가 자체 데이터를 보유 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b52872a14b15cd870db6e292baff0770de114fd" translate="yes" xml:space="preserve">
          <source>The first argument of every class method, including init, is always a reference to the current instance of the class. By convention, this argument is always named self. In the init method, self refers to the newly created object; in other class methods, it refers to the instance whose method was called. For example the below code is the same as the above code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;init를 포함한 모든 클래스 메소드의 첫 번째 인수는 항상 클래스의 현재 인스턴스에 대한 참조입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적으로이 인수는 항상 self로 명명됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;init 메소드에서 self는 새로 작성된 오브젝트를 나타냅니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 클래스 메서드에서는 메서드가 호출 된 인스턴스를 나타냅니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 아래 코드는 위 코드와 동일합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a5debc952d5b06e246420009c31e64d9cf5ef808" translate="yes" xml:space="preserve">
          <source>The following excerpts are from the &lt;a href=&quot;http://docs.python.org/tutorial/classes.html&quot;&gt;Python documentation about self&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 발췌 부분은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/tutorial/classes.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 문서에서 self에 대한 것입니다&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71f9277b0ee801046ce1b5d5d98d2fbb263d87c6" translate="yes" xml:space="preserve">
          <source>The implicit approach would be</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;암시 적 접근 방식은&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ddfded39a7b36e02781c387a61e0e0bb144cd52e" translate="yes" xml:space="preserve">
          <source>The reason you need to use &lt;code&gt;self.&lt;/code&gt; is because Python does not use the &lt;code&gt;@&lt;/code&gt; syntax to refer to instance attributes. Python decided to do methods in a way that makes the instance to which the method belongs be &lt;em&gt;passed&lt;/em&gt; automatically, but not &lt;em&gt;received&lt;/em&gt; automatically: the first parameter of methods is the instance the method is called on. That makes methods entirely the same as functions, and leaves the actual name to use up to you (although &lt;code&gt;self&lt;/code&gt; is the convention, and people will generally frown at you when you use something else.) &lt;code&gt;self&lt;/code&gt; is not special to the code, it's just another object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;self.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용해야하는 이유 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 파이썬은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구문을 사용하여 인스턴스 속성을 참조 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지 않기 때문 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다. 파이썬은 메소드가 속한 인스턴스가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자동으로 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전달&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 되지만 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자동으로 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수신&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 되지 않는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;방식으로 메소드를 수행하기로 결정했습니다. 메소드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 첫 번째 매개 변수는 메소드가 호출되는 인스턴스입니다. 이렇게하면 메소드가 함수와 완전히 동일하게 만들어지고 실제 이름을 사용할 수 있습니다 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 관습 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이지만 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사람들은 일반적으로 다른 것을 사용할 때 찌를 것입니다.) &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 코드에 특별하지 않습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 물건.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="236e866fde0d76ee2f000c8552125a8a8ff7ae46" translate="yes" xml:space="preserve">
          <source>The self method is also used to refer to a variable field within the class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;self 메소드는 클래스 내 변수 필드를 참조하는 데에도 사용됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="357314b070890139eadce8c33ddb4a9f5b685e85" translate="yes" xml:space="preserve">
          <source>The use of the argument, conventionally called &lt;code&gt;self&lt;/code&gt; isn't as hard to understand, as is why is it necessary? Or as to why explicitly mention it? That, I suppose, is a bigger question for most users who look up this question, or if it is not, they will certainly have the same question as they move forward learning python. I recommend them to read these couple of blogs:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적으로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 라고 불리는이 주장의 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 왜 그렇게 필요한지 이해하기 어렵지 않습니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 왜 명시 적으로 언급합니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은이 질문을 찾는 대부분의 사용자에게 더 큰 질문이라고 생각합니다. 그렇지 않은 경우 파이썬 학습을 진행할 때 확실히 같은 질문이있을 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 두 블로그를 읽는 것이 좋습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aad90dfdf56f4dead42a985825163ec490775638" translate="yes" xml:space="preserve">
          <source>There was just a &lt;a href=&quot;https://www.artima.com/weblogs/viewpost.jsp?thread=239003&quot;&gt;question&lt;/a&gt; should &lt;code&gt;self&lt;/code&gt; be implicit or explicit.
&lt;a href=&quot;https://en.wikipedia.org/wiki/Guido_van_Rossum&quot;&gt;&lt;code&gt;Guido van Rossum&lt;/code&gt;&lt;/a&gt; resolved this question saying &lt;a href=&quot;https://neopythonic.blogspot.com/2008/10/why-explicit-self-has-to-stay.html&quot;&gt;&lt;code&gt;self&lt;/code&gt; has to stay&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 암시 적이거나 명시 적 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이어야한다는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.artima.com/weblogs/viewpost.jsp?thread=239003&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;질문&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 만있었습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Guido_van_Rossum&quot;&gt; &lt;code&gt;Guido van Rossum&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://neopythonic.blogspot.com/2008/10/why-explicit-self-has-to-stay.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;/a&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 머물러야한다는&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 문제를 해결했다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="593c5330f958a39918abf861eca976eee15dc227" translate="yes" xml:space="preserve">
          <source>This program will output:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 프로그램은 다음을 출력합니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eef4955b5010ecd4fd99113e1edfc155496ebf10" translate="yes" xml:space="preserve">
          <source>This works because the first parameter of &lt;code&gt;length_global&lt;/code&gt;, can be re-used as the &lt;code&gt;self&lt;/code&gt; parameter in &lt;code&gt;length_new&lt;/code&gt;. This would not be possible without an explicit &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 작품의 첫 번째 매개 변수 때문에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;length_global&lt;/code&gt; 는&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 으로 사용하여 다시이 될 수 있습니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 매개 변수 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;length_new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;명백한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 없이는 불가능할 것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2596a67954f16752ece427c512b8db673c0d7cf7" translate="yes" xml:space="preserve">
          <source>This would mean that &lt;code&gt;myX&lt;/code&gt; would be interpreted as a local variable in &lt;code&gt;fubar&lt;/code&gt; (and in &lt;code&gt;frob&lt;/code&gt; as well). The alternative here would be to execute methods with a replaced local scope which is retained between calls, but that would remove the posibility of method local variables.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 것을 의미 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;myX&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있는 지역 변수로 해석됩니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fubar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (와의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;frob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 아니라). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 대안은 호출간에 유지되는 대체 로컬 범위로 메소드를 실행하는 것이지만 메소드 로컬 변수의 가능성을 제거합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed2cbf212c8ade235fd86f44cae03dacd4093358" translate="yes" xml:space="preserve">
          <source>We want to have a method which calculates the length. What would it look like if we wanted to define it inside the class?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 길이를 계산하는 방법을 원합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 내에서 정의하고 싶다면 어떻게 보일까요?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="51c707af171267923b8f12ea5d5f5baf6defa4a4" translate="yes" xml:space="preserve">
          <source>What is the purpose of the &lt;code&gt;self&lt;/code&gt; word in Python? I understand it refers to the specific object created from that class, but I can't see why it explicitly needs to be added to every function as a parameter. To illustrate, in Ruby I can do this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 단어 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 목적은 무엇입니까 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 그것이 그 클래스에서 생성 된 특정 객체를 참조한다는 것을 이해하지만 왜 그것이 모든 함수에 매개 변수로 명시 적으로 추가되어야하는지 볼 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어, Ruby에서는 다음과 같이 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20f72ac8403123e86e8f003d52ec694b7faef133" translate="yes" xml:space="preserve">
          <source>What is the purpose of the word 'self'</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'자기'라는 단어의 목적은 무엇입니까&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f4d688a1bfa95956a5de1b7469fb1318897cb850" translate="yes" xml:space="preserve">
          <source>What should it look like when we were to define it as a global method/function?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전역적인 메소드 / 함수로 정의 할 때 어떤 모습일까요?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e01e46f09d9e7888039e78471558742a261a5a69" translate="yes" xml:space="preserve">
          <source>When calling a static method in Python, one simply writes a method with regular arguments inside it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬에서 정적 메소드를 호출 할 때, 그 안에 규칙적인 인수가있는 메소드를 작성하기 만하면됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7184698ade8e0047ba5ca2450108ac89df6c1957" translate="yes" xml:space="preserve">
          <source>When objects are instantiated, the object itself is passed into the self parameter.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체가 인스턴스화되면 객체 자체가 자체 매개 변수로 전달됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8de116e44bafb791e48be7570d1a71f076e1700d" translate="yes" xml:space="preserve">
          <source>Which I understand, quite easily. However in Python I need to include &lt;code&gt;self&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아주 쉽게 이해할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 파이썬에서는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 포함시켜야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="62a45f03a7cb6b87698f82532e1d2c3771f05107" translate="yes" xml:space="preserve">
          <source>You should take a look at &lt;code&gt;cls&lt;/code&gt; too, to have &lt;strong&gt;&lt;em&gt;the bigger picture&lt;/em&gt;&lt;/strong&gt;. This &lt;a href=&quot;https://stackoverflow.com/questions/7554738/python-self-no-self-and-cls&quot;&gt;&lt;strong&gt;post&lt;/strong&gt;&lt;/a&gt; could be helpful.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 큰 그림&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;얻으려면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;cls&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 도 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;살펴보십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 &lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/7554738/python-self-no-self-and-cls&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;게시물&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 도움 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;될 수 있습니다.&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cda8d6f8522fc89e6f8523ec1bd67f9f85b7a529" translate="yes" xml:space="preserve">
          <source>[migrated my answer from duplicate closed question]</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[중복 된 질문에서 답변을 마이그레이션했습니다]&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="121ffea1a0e29f88cc77aa8380ef0cbc7ebc882f" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;ObjectA&lt;/code&gt; is an instance of this class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ObjectA&lt;/code&gt; 는&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 클래스의 인스턴스입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="36566f0d5cd3b605a76017fb817f21e2ece7b8c5" translate="yes" xml:space="preserve">
          <source>from the &lt;a href=&quot;https://docs.python.org/3/tutorial/classes.html#method-objects&quot;&gt;docs&lt;/a&gt;,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로부터 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/tutorial/classes.html#method-objects&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문서&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ,&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5298c83d605c12f453bc762c3d960a8cb581ef99" translate="yes" xml:space="preserve">
          <source>here when called as a method &lt;code&gt;frob&lt;/code&gt; will receive the object on which it's called via the &lt;code&gt;self&lt;/code&gt; parameter, and &lt;code&gt;fubar&lt;/code&gt; can still be called with an object as parameter and work the same (it &lt;em&gt;is&lt;/em&gt; the same as &lt;code&gt;C.frob&lt;/code&gt; I think).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에 방법으로 호출 될 때 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;frob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 그것이를 통해이라고하는 객체 받게됩니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 매개 변수를, 그리고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fubar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 여전히 매개 변수로 객체를 호출 할 수 있으며 (이 같은 일을 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하다&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 같은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C.frob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 나는 생각한다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="743291c3850784c84035f299485b24abf93248d8" translate="yes" xml:space="preserve">
          <source>is internally transformed to</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내부적으로&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff4cfbf9b524daaa207c90c3ff07eeccb917e997" translate="yes" xml:space="preserve">
          <source>it is easy to see where the &lt;code&gt;self&lt;/code&gt; fits in. You don't actually write instance methods in Python; what you write is class methods which must take an instance as a first parameter. And therefore, you&amp;rsquo;ll have to place the instance parameter somewhere explicitly.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 어디에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;맞는지 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;쉽게 알 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 실제로 파이썬에서 인스턴스 메소드를 작성하지는 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이 쓰는 것은 인스턴스를 첫 번째 매개 변수로 가져야하는 클래스 메소드입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 인스턴스 매개 변수를 명시 적 어딘가에 배치해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="602a92975ef013086ca7aaa6bf413c282246b22d" translate="yes" xml:space="preserve">
          <source>it's an explicit reference to the class instance object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 인스턴스 객체에 대한 명시 적 참조입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a914850299ac09863ca47de283030472b1323a8" translate="yes" xml:space="preserve">
          <source>preceding this the related snippet,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이에 앞서 관련 스 니펫,&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="662e7a4e1ccf087f0bd4e57b2d8916d49da4bba7" translate="yes" xml:space="preserve">
          <source>self is acting as like current object name or instance of class .</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;self는 현재 객체 이름 또는 클래스 인스턴스처럼 작동합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2299eef37790f4ca4597855716d34cdfde332c03" translate="yes" xml:space="preserve">
          <source>self, as a name, is &lt;strong&gt;&lt;em&gt;just a convention&lt;/em&gt;&lt;/strong&gt;, call it as you want ! but when using it, for example to delete the object, you have to use the same name: &lt;code&gt;__del__(var)&lt;/code&gt;, where &lt;code&gt;var&lt;/code&gt; was used in the &lt;code&gt;__init__(var,[...])&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이름으로 self &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 컨벤션 일뿐입니다.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 원하는대로 부르십시오! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 예를 들어 객체를 삭제하는 데 사용하는 경우 동일한 이름을 사용해야합니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__del__(var)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 여기서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__(var,[...])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f65e60d4715eb9fb11f7c4dc1fe62b7ab19827e" translate="yes" xml:space="preserve">
          <source>the special thing about methods is that the instance object is passed as the first argument of the function. In our example, the call &lt;code&gt;x.f()&lt;/code&gt; is exactly equivalent to &lt;code&gt;MyClass.f(x)&lt;/code&gt;. In general, calling a method with a list of n arguments is equivalent to calling the corresponding function with an argument list that is created by inserting the method&amp;rsquo;s instance object before the first argument.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메소드의 특별한 점은 인스턴스 오브젝트가 함수의 첫 번째 인수로 전달된다는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 예에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x.f()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 호출 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyClass.f(x)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 정확히 같습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적으로, n 개의 인수 목록으로 메소드를 호출하는 것은 첫 번째 인수 앞에 메소드의 인스턴스 오브젝트를 삽입하여 작성된 인수 목록으로 해당 함수를 호출하는 것과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
