<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/279170">
    <body>
      <group id="279170">
        <trans-unit id="06af4577aef7c6aa04de62a9e9affe6b5e40b70b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;For HTML before HTML5 only&lt;/em&gt;: note that the W3C HTML spec says that clients &quot;should&quot; default to sending forms back to the server in whatever charset the server served, but this is apparently only a recommendation, hence the need for being explicit on every single &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">&lt;em&gt;Только для HTML до HTML5&lt;/em&gt; : обратите внимание, что спецификация HTML W3C гласит, что клиенты &amp;laquo;должны&amp;raquo; по умолчанию отправлять формы обратно на сервер в любой кодировке, которую обслуживал сервер, но это, очевидно, только рекомендация, поэтому необходимо указывать явное в каждом &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63a5e5ecb09bd491d8a8810b798d6527433245c9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;For HTML before HTML5 only&lt;/em&gt;: you want all data sent to you by browsers to be in UTF-8.  Unfortunately, if you go by the the only way to reliably do this is add the &lt;code&gt;accept-charset&lt;/code&gt; attribute to all your &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tags: &lt;code&gt;&amp;lt;form ... accept-charset=&quot;UTF-8&quot;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;Только для HTML до HTML5&lt;/em&gt; : вы хотите, чтобы все данные, отправляемые вам браузерами, были в UTF-8. К сожалению, если вы выбрали единственный надежный способ сделать это, добавьте атрибут &lt;code&gt;accept-charset&lt;/code&gt; ко всем вашим тегам &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; : &lt;code&gt;&amp;lt;form ... accept-charset=&quot;UTF-8&quot;&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8c51bc805d030d10018e00d31e67169a5f6f3c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DATABASES&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;DATABASES&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b578f9568f5e971f11c2590a5e8ca72330cedc3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Data Access&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Доступ к данным&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="6eaab0ed7f59813378f7ec1bba3510d7ed00e863" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Data Storage&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Хранение данных&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="5fbf4a00d6a882121a802d2725d98940aaaeb108" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Edit:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0104b54fcea146c5135352deefd00773ae9075b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ICONV&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ICONV&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b9faff448a1c9eb4a9b5e4cce892878666473b55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;INTL&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;INTL&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1673cd90fc65534f0976e8f49b4fcd67b98478cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Input&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Input&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="fbe923d3cfa7af2e6086dda3a5d6845ee1e97481" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Other Code Considerations&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Другие аспекты кода&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="226c6d195092d25e48f4779200988ceb25b71b01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Output&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="d10301de7a9ca554fa4dac27ebbda55facc94927" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PHP's built-in string operations are &lt;em&gt;not&lt;/em&gt; by default UTF-8 safe.&lt;/strong&gt;  There are some things you can safely do with normal PHP string operations (like concatenation), but for most things you should use the equivalent &lt;code&gt;mbstring&lt;/code&gt; function.</source>
          <target state="translated">&lt;strong&gt;Встроенные строковые операции PHP &lt;em&gt;не&lt;/em&gt; являются безопасными по умолчанию в UTF-8.&lt;/strong&gt; Есть некоторые вещи, которые вы можете безопасно делать с обычными строковыми операциями PHP (например, конкатенация), но для большинства вещей вы должны использовать эквивалентную функцию &lt;code&gt;mbstring&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2bf5005644d67207d699204077f6491c88ae0c49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Some other Gotchas&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Некоторые другие Gotchas&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="743f380d56d8b8ea4558c5433cb1e69cdffd790c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;mb_string&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e6ba71b4dfcb183a9c30569388266d19535ac62" translate="yes" xml:space="preserve">
          <source>A good library to check into is &lt;a href=&quot;http://phputf8.sourceforge.net/&quot;&gt;phputf8&lt;/a&gt;. This rewrites all of the &quot;bad&quot; functions so you can safely work on UTF8 strings. There are extensions like the mbstring extension that try to do this for you, too, but I prefer using the library because it's more portable (but I write mass-market products, so that's important for me). But phputf8 can use mbstring behind the scenes, anyway, to increase performance.</source>
          <target state="translated">Хорошая библиотека для проверки - &lt;a href=&quot;http://phputf8.sourceforge.net/&quot;&gt;phputf8&lt;/a&gt; . Это переписывает все &amp;laquo;плохие&amp;raquo; функции, чтобы вы могли безопасно работать со строками UTF8. Существуют такие расширения, как расширение mbstring, которые пытаются сделать это и для вас, но я предпочитаю использовать библиотеку, потому что она более переносима (но я пишу продукты для массового рынка, поэтому это важно для меня). Но phputf8 может использовать mbstring за кулисами, чтобы увеличить производительность.</target>
        </trans-unit>
        <trans-unit id="66be105f647b3b6d7fea9e91efdb0af8b57b0a5e" translate="yes" xml:space="preserve">
          <source>After adding  this line to my config file everything works fine!</source>
          <target state="translated">После добавления этой строки в мой конфигурационный файл все работает отлично!</target>
        </trans-unit>
        <trans-unit id="ad2335ab936d79f64b8be9cdb644fc54d355f7e9" translate="yes" xml:space="preserve">
          <source>As a side note, I also discovered by running &lt;code&gt;mb_internal_encoding()&lt;/code&gt; that the internal encoding wasn't utf-8, and I changed that by running &lt;code&gt;mb_internal_encoding(&quot;UTF-8&quot;);&lt;/code&gt;.</source>
          <target state="translated">Как примечание, я также обнаружил, запустив &lt;code&gt;mb_internal_encoding()&lt;/code&gt; что внутренняя кодировка не была utf-8, и я изменил это, запустив &lt;code&gt;mb_internal_encoding(&quot;UTF-8&quot;);&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="b1ff57d696aa3ec09bd76c88944e1a7097ee37a3" translate="yes" xml:space="preserve">
          <source>Bad:</source>
          <target state="translated">Bad:</target>
        </trans-unit>
        <trans-unit id="50d0051ba372bbd20fb081fe3197142413d36a87" translate="yes" xml:space="preserve">
          <source>Calendars, dates, timezone and time</source>
          <target state="translated">Календари,даты,часовой пояс и время.</target>
        </trans-unit>
        <trans-unit id="71fdd7641faff64b3e623e8dd14f6178bec7555d" translate="yes" xml:space="preserve">
          <source>Collation</source>
          <target state="translated">Collation</target>
        </trans-unit>
        <trans-unit id="d042e4b29618ce17f584c5ea070221c0f7d91503" translate="yes" xml:space="preserve">
          <source>Convertors</source>
          <target state="translated">Convertors</target>
        </trans-unit>
        <trans-unit id="3efa3f00ec81206e84b7d8365bbb3c2536320aa7" translate="yes" xml:space="preserve">
          <source>Currency formatting</source>
          <target state="translated">валютное форматирование</target>
        </trans-unit>
        <trans-unit id="d5bb76d4f2af1da73cdec9cd996d21666b8aaa4b" translate="yes" xml:space="preserve">
          <source>Declaring character encodings in HTML</source>
          <target state="translated">Объявление кодировок символов в HTML</target>
        </trans-unit>
        <trans-unit id="bb3692b8edda6477fc06e9567b300b75a2bba9f9" translate="yes" xml:space="preserve">
          <source>Does not support HTTP input output conversion</source>
          <target state="translated">Не поддерживает преобразование HTTP-входного сигнала</target>
        </trans-unit>
        <trans-unit id="794ecab07a1cf25661dcd00aef43b87b9493cf8b" translate="yes" xml:space="preserve">
          <source>Does not support function overloading</source>
          <target state="translated">Не поддерживает перегрузку функции</target>
        </trans-unit>
        <trans-unit id="7d6c707795a253449aa3897eabc13c82bba0f06d" translate="yes" xml:space="preserve">
          <source>Does not support zend_multibite</source>
          <target state="translated">Не поддерживает zend_multibite</target>
        </trans-unit>
        <trans-unit id="ac7607d30da804d7490261abc5759d7c4b829406" translate="yes" xml:space="preserve">
          <source>Don't forget the META tag either (like this, or &lt;a href=&quot;http://www.w3.org/International/questions/qa-html-encoding-declarations#quicklookup&quot;&gt;the HTML4 or XHTML version of it&lt;/a&gt;):</source>
          <target state="translated">Не забудьте также и тег META (например, или &lt;a href=&quot;http://www.w3.org/International/questions/qa-html-encoding-declarations#quicklookup&quot;&gt;его версию HTML4 или XHTML&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="4f7b323d49c49bf74f1433d88c9d3b49aa763eb8" translate="yes" xml:space="preserve">
          <source>Enables zend_multibyte support</source>
          <target state="translated">Включает поддержку zend_multibyte</target>
        </trans-unit>
        <trans-unit id="06c4ea17f2f205a02094fcf1a8c86a4cab0b049c" translate="yes" xml:space="preserve">
          <source>FAQ: Changing (X)HTML page encoding to UTF-8</source>
          <target state="translated">ЧАСТО ЗАДАВАЕМЫЕ ВОПРОСЫ:Изменение кодировки (X)HTML страницы на UTF-8</target>
        </trans-unit>
        <trans-unit id="a6697dfee4d67a3e60a8f6e5b3ab085570c9806b" translate="yes" xml:space="preserve">
          <source>First of all if you are in &amp;lt; 5.3PHP then no. You've got a ton of problems to tackle.</source>
          <target state="translated">Прежде всего, если вы находитесь в &amp;lt;5.3PHP, то нет. У вас есть куча проблем для решения.</target>
        </trans-unit>
        <trans-unit id="8948689b97542f60657f89c506bc510f2f9aa1ba" translate="yes" xml:space="preserve">
          <source>From my reading of the current &lt;a href=&quot;http://whatwg.org/html&quot;&gt;HTML spec&lt;/a&gt;, the following sub-bullets are not necessary or even valid anymore for modern HTML.  My understanding is that browsers will work with and submit data in the character set specified for the document.  However, if you're targeting older versions of HTML (XHTML, HTML4, etc.), these points may still be useful:</source>
          <target state="translated">Из моего прочтения текущей &lt;a href=&quot;http://whatwg.org/html&quot;&gt;спецификации HTML&lt;/a&gt; следующие подпункты больше не нужны и даже не действительны для современного HTML. Насколько я понимаю, браузеры будут работать и отправлять данные в наборе символов, указанном для документа. Однако, если вы ориентируетесь на более старые версии HTML (XHTML, HTML4 и т. Д.), Эти пункты могут быть полезны:</target>
        </trans-unit>
        <trans-unit id="f179b6f36465b5aac2f67605586252775def9c70" translate="yes" xml:space="preserve">
          <source>Good:</source>
          <target state="translated">Good:</target>
        </trans-unit>
        <trans-unit id="b79d7de20905687ddf09552514a209f7642eb172" translate="yes" xml:space="preserve">
          <source>Graphemes</source>
          <target state="translated">Graphemes</target>
        </trans-unit>
        <trans-unit id="a47ced5ebf103e6f29aef86c197000fed6c93968" translate="yes" xml:space="preserve">
          <source>I am surprised that none has mentioned the &lt;a href=&quot;http://php.net/intl&quot;&gt;&lt;strong&gt;intl&lt;/strong&gt;&lt;/a&gt; library, the one that has good support for &lt;strong&gt;unicode&lt;/strong&gt;, &lt;strong&gt;graphemes&lt;/strong&gt;, &lt;strong&gt;string operations&lt;/strong&gt; , &lt;strong&gt;localisation&lt;/strong&gt; and many more, see below.</source>
          <target state="translated">Я удивлен, что никто не упомянул библиотеку &lt;a href=&quot;http://php.net/intl&quot;&gt;&lt;strong&gt;intl&lt;/strong&gt;&lt;/a&gt; , которая имеет хорошую поддержку &lt;strong&gt;юникода&lt;/strong&gt; , &lt;strong&gt;графем&lt;/strong&gt; , &lt;strong&gt;строковых операций&lt;/strong&gt; , &lt;strong&gt;локализации&lt;/strong&gt; и многих других, см. Ниже.</target>
        </trans-unit>
        <trans-unit id="63a7aca8ab1413b2b54336381660a056df51aae1" translate="yes" xml:space="preserve">
          <source>I changed all my file encoding to UTF8 then the default encoding on my connection. This solved all the problems.</source>
          <target state="translated">Я изменил всю кодировку моего файла на UTF8,а затем на кодировку по умолчанию на моем соединении.Это решило все проблемы.</target>
        </trans-unit>
        <trans-unit id="7d04fad80998f11575c6ef10a584a7f72a849404" translate="yes" xml:space="preserve">
          <source>I found an issue with someone using PDO and the answer was to use this for the PDO connection string:</source>
          <target state="translated">Я обнаружил проблему с тем,что кто-то использует PDO,и ответом было использование этого для строки соединения PDO:</target>
        </trans-unit>
        <trans-unit id="adf8e4bcbc3f4fb1f02131328680ee49d7ad4623" translate="yes" xml:space="preserve">
          <source>I found this solution &lt;a href=&quot;https://www.w3schools.com/PHP/func_mysqli_set_charset.asp&quot;&gt;https://www.w3schools.com/PHP/func_mysqli_set_charset.asp&lt;/a&gt; when i was looking to solve a insert from html query</source>
          <target state="translated">Я нашел это решение &lt;a href=&quot;https://www.w3schools.com/PHP/func_mysqli_set_charset.asp&quot;&gt;https://www.w3schools.com/PHP/func_mysqli_set_charset.asp,&lt;/a&gt; когда искал решение для вставки из запроса HTML</target>
        </trans-unit>
        <trans-unit id="3712718493dedcde16dfe00371c49ad1e75c3d08" translate="yes" xml:space="preserve">
          <source>I have just went through the same issue and found a good solution at PHP manuals.</source>
          <target state="translated">Я только что прошел через эту же проблему и нашел хорошее решение в руководствах по PHP.</target>
        </trans-unit>
        <trans-unit id="cbe87772a90cce5e56d7f7bcd63502aa95584759" translate="yes" xml:space="preserve">
          <source>I ll update this answer in case things change features added and so on.</source>
          <target state="translated">Я обновлю этот ответ в случае,если что-то изменит добавленные функции и так далее.</target>
        </trans-unit>
        <trans-unit id="03011cd320b77197c5142401ea09ade77de5ac83" translate="yes" xml:space="preserve">
          <source>I recently discovered that using &lt;code&gt;strtolower()&lt;/code&gt; can cause issues where the data is truncated after a special character.</source>
          <target state="translated">Недавно я обнаружил, что использование &lt;code&gt;strtolower()&lt;/code&gt; может вызвать проблемы, когда данные усекаются после специального символа.</target>
        </trans-unit>
        <trans-unit id="21120a9ba534d136733cce10663a538aca732686" translate="yes" xml:space="preserve">
          <source>I was doing everything right; the database, database connection and Content-Type HTTP header were all set to UTF-8, and it worked fine in all other browsers, but Internet Explorer still insisted on using the &quot;Western European&quot; encoding.</source>
          <target state="translated">Я все делал правильно;база данных,подключение к базе данных и заголовок Content-Type HTTP были установлены на UTF-8,и это прекрасно работало во всех остальных браузерах,но Internet Explorer все равно настаивал на использовании &quot;западноевропейской&quot; кодировки.</target>
        </trans-unit>
        <trans-unit id="f3f6cf01462325f4e47dbce87e5164dfc905c429" translate="yes" xml:space="preserve">
          <source>I will quote some information about unicode support in PHP by &lt;strong&gt;Elizabeth Smith's&lt;/strong&gt;&lt;a href=&quot;http://www.slideshare.net/auroraeosrose/using-unicode-with-php&quot;&gt;slides&lt;/a&gt; at &lt;strong&gt;PHPBenelux'14&lt;/strong&gt;</source>
          <target state="translated">Я процитирую некоторую информацию о поддержке юникода в PHP на &lt;a href=&quot;http://www.slideshare.net/auroraeosrose/using-unicode-with-php&quot;&gt;слайдах&lt;/a&gt; &lt;strong&gt;Элизабет Смит&lt;/strong&gt; на &lt;strong&gt;PHPBenelux'14&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="770525ab9fd169302211602b74e1ddefc1417f52" translate="yes" xml:space="preserve">
          <source>I'd like to add one thing to &lt;a href=&quot;https://stackoverflow.com/questions/279170/utf-8-all-the-way-through#279279&quot;&gt;chazomaticus' excellent answer&lt;/a&gt;:</source>
          <target state="translated">Я хотел бы добавить одну вещь к &lt;a href=&quot;https://stackoverflow.com/questions/279170/utf-8-all-the-way-through#279279&quot;&gt;отличному ответу chazomaticus&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="c0a702df3182396e3f9bc9b7512198794c576da5" translate="yes" xml:space="preserve">
          <source>I'm setting up a new server and want to support UTF-8 fully in my web application. I have tried this in the past on existing servers and always seem to end up having to fall back to ISO-8859-1.</source>
          <target state="translated">Я настраиваю новый сервер и хочу полностью поддерживать UTF-8 в моем веб-приложении.Я пробовал это в прошлом на существующих серверах и всегда казалось,что в конце концов придется вернуться к ISO-8859-1.</target>
        </trans-unit>
        <trans-unit id="35d3d2d3404abeb8346dba6488194ef8d13aafd7" translate="yes" xml:space="preserve">
          <source>IDN support</source>
          <target state="translated">поддержка ИДИ</target>
        </trans-unit>
        <trans-unit id="682b756eeb7b8de097992166c3aca915f1ccf3b0" translate="yes" xml:space="preserve">
          <source>If the driver does not provide its own mechanism for setting the connection character set, you may have to issue a query to tell MySQL how your application expects data on the connection to be encoded: &lt;a href=&quot;http://dev.mysql.com/doc/en/charset-connection.html&quot;&gt;&lt;code&gt;SET NAMES 'utf8mb4'&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Если драйвер не предоставляет свой собственный механизм для установки набора символов соединения, вам, возможно, придется выполнить запрос, чтобы сообщить MySQL, как ваше приложение ожидает данные в соединении для кодирования: &lt;a href=&quot;http://dev.mysql.com/doc/en/charset-connection.html&quot;&gt; &lt;code&gt;SET NAMES 'utf8mb4'&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cfe4b018ffc2451f02a8054a2d60f5a06e25c89b" translate="yes" xml:space="preserve">
          <source>If you want MySQL server to decide character set, and not PHP as a client (old behaviour; preferred, in my opinion), try adding &lt;code&gt;skip-character-set-client-handshake&lt;/code&gt; to your &lt;code&gt;my.cnf&lt;/code&gt;, under &lt;code&gt;[mysqld]&lt;/code&gt;, and restart &lt;code&gt;mysql&lt;/code&gt;.</source>
          <target state="translated">Если вы хотите, чтобы сервер MySQL определял набор символов, а не PHP как клиент (старое поведение; на мой взгляд, предпочтительнее), попробуйте добавить &lt;code&gt;skip-character-set-client-handshake&lt;/code&gt; в ваш &lt;code&gt;my.cnf&lt;/code&gt; , под &lt;code&gt;[mysqld]&lt;/code&gt; , и перезапустите &lt;code&gt;mysql&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b48374e9bd1777c30f301bbd9674e2da8787a738" translate="yes" xml:space="preserve">
          <source>If you're stuck with plain &lt;a href=&quot;http://php.net/manual/en/book.mysql.php&quot;&gt;mysql&lt;/a&gt; but happen to be running PHP &amp;ge; 5.2.3, you can call &lt;a href=&quot;http://php.net/manual/en/function.mysql-set-charset.php&quot;&gt;&lt;code&gt;mysql_set_charset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Если вы застряли на обычном &lt;a href=&quot;http://php.net/manual/en/book.mysql.php&quot;&gt;mysql,&lt;/a&gt; но на вашем компьютере работает PHP &amp;ge; 5.2.3, вы можете вызвать &lt;a href=&quot;http://php.net/manual/en/function.mysql-set-charset.php&quot;&gt; &lt;code&gt;mysql_set_charset&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9335d436ae15d41a84ad0b6a7a0f197c72f6f00b" translate="yes" xml:space="preserve">
          <source>If you're using &lt;a href=&quot;http://www.php.net/manual/en/book.mysqli.php&quot;&gt;mysqli&lt;/a&gt;, you can call &lt;a href=&quot;http://php.net/manual/en/mysqli.set-charset.php&quot;&gt;&lt;code&gt;set_charset()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Если вы используете &lt;a href=&quot;http://www.php.net/manual/en/book.mysqli.php&quot;&gt;mysqli&lt;/a&gt; , вы можете вызвать &lt;a href=&quot;http://php.net/manual/en/mysqli.set-charset.php&quot;&gt; &lt;code&gt;set_charset()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="fefe169ac2e400b0fc6ab51769c9866a48bc28e9" translate="yes" xml:space="preserve">
          <source>If you're using the &lt;a href=&quot;http://www.php.net/manual/en/book.pdo.php&quot;&gt;PDO&lt;/a&gt; abstraction layer with PHP &amp;ge; 5.3.6, you can specify &lt;code&gt;charset&lt;/code&gt; in the &lt;a href=&quot;http://php.net/manual/en/ref.pdo-mysql.connection.php&quot;&gt;DSN&lt;/a&gt;:</source>
          <target state="translated">Если вы используете уровень абстракции &lt;a href=&quot;http://www.php.net/manual/en/book.pdo.php&quot;&gt;PDO&lt;/a&gt; с PHP &amp;ge; 5.3.6, вы можете указать &lt;code&gt;charset&lt;/code&gt; в &lt;a href=&quot;http://php.net/manual/en/ref.pdo-mysql.connection.php&quot;&gt;DSN&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="1898bc147327787e953f78d4016b5c48e60e87ad" translate="yes" xml:space="preserve">
          <source>If your application transmits text to other systems, they will also need to be informed of the character encoding.  With web applications, the browser must be informed of the encoding in which data is sent (through HTTP response headers or &lt;a href=&quot;https://stackoverflow.com/q/4696499&quot;&gt;HTML metadata&lt;/a&gt;).</source>
          <target state="translated">Если ваше приложение передает текст в другие системы, они также должны быть проинформированы о кодировке символов. В веб-приложениях браузер должен быть информирован о кодировке, в которой отправляются данные (через заголовки ответа HTTP или &lt;a href=&quot;https://stackoverflow.com/q/4696499&quot;&gt;метаданные HTML&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a129ed10d5f803fb83e471303457dc258c00ea47" translate="yes" xml:space="preserve">
          <source>In PHP, you can use the &lt;a href=&quot;http://www.php.net/manual/en/ini.core.php#ini.default-charset&quot;&gt;&lt;code&gt;default_charset&lt;/code&gt;&lt;/a&gt; php.ini option, or manually issue the &lt;code&gt;Content-Type&lt;/code&gt; MIME header yourself, which is just more work but has the same effect.</source>
          <target state="translated">В PHP вы можете использовать опцию &lt;a href=&quot;http://www.php.net/manual/en/ini.core.php#ini.default-charset&quot;&gt; &lt;code&gt;default_charset&lt;/code&gt; &lt;/a&gt; php.ini или вручную выполнить MIME-заголовок &lt;code&gt;Content-Type&lt;/code&gt; , который просто требует больше работы, но имеет тот же эффект.</target>
        </trans-unit>
        <trans-unit id="f8b2b69a6838665fed13eb36c4fcec2f4b757c01" translate="yes" xml:space="preserve">
          <source>In PHP, you'll need to either use the &lt;a href=&quot;http://us2.php.net/manual/en/ref.mbstring.php&quot;&gt;multibyte functions&lt;/a&gt;, or turn on &lt;a href=&quot;http://us2.php.net/manual/en/mbstring.configuration.php&quot;&gt;mbstring.func_overload&lt;/a&gt;. That way things like strlen will work if you have characters that take more than one byte.</source>
          <target state="translated">В PHP вам нужно либо использовать &lt;a href=&quot;http://us2.php.net/manual/en/ref.mbstring.php&quot;&gt;многобайтовые функции&lt;/a&gt; , либо включить &lt;a href=&quot;http://us2.php.net/manual/en/mbstring.configuration.php&quot;&gt;mbstring.func_overload&lt;/a&gt; . Таким образом, такие вещи, как strlen, будут работать, если у вас есть символы, которые занимают более одного байта.</target>
        </trans-unit>
        <trans-unit id="fd2b6ceb2f874d60fca2e4bd22ed6eeb8d7bd6c0" translate="yes" xml:space="preserve">
          <source>In addition to setting &lt;code&gt;default_charset&lt;/code&gt; in php.ini, you can send the correct charset using &lt;code&gt;header()&lt;/code&gt; from within your code, before any output:</source>
          <target state="translated">В дополнение к настройке &lt;code&gt;default_charset&lt;/code&gt; в php.ini, вы можете отправить правильный набор символов с помощью &lt;code&gt;header()&lt;/code&gt; из вашего кода перед любым выводом:</target>
        </trans-unit>
        <trans-unit id="fe91ce9865b5ecd79f40561addba9ba37c3cced6" translate="yes" xml:space="preserve">
          <source>In my case, I was using &lt;code&gt;mb_split&lt;/code&gt;, which uses regex.  Therefore I also had to manually make sure the regex encoding was utf-8 by doing &lt;code&gt;mb_regex_encoding('UTF-8');&lt;/code&gt;</source>
          <target state="translated">В моем случае я использовал &lt;code&gt;mb_split&lt;/code&gt; , который использует регулярные выражения. Поэтому мне также пришлось вручную убедиться, что кодировка регулярного выражения была utf-8, выполнив &lt;code&gt;mb_regex_encoding('UTF-8');&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="632241254f08ee5d73bd409b1d0c460dc9788224" translate="yes" xml:space="preserve">
          <source>In older versions of MySQL (&amp;lt; 5.5.3), you'll unfortunately be forced to use simply &lt;code&gt;utf8&lt;/code&gt;, which only supports a subset of Unicode characters.  I wish I were kidding.</source>
          <target state="translated">В более старых версиях MySQL (&amp;lt;5.5.3) вам, к сожалению, придется использовать просто &lt;code&gt;utf8&lt;/code&gt; , который поддерживает только подмножество символов Unicode. Я хотел бы шутить.</target>
        </trans-unit>
        <trans-unit id="912a06bcfd3e9f52c102e2c87f7a921de2afc61b" translate="yes" xml:space="preserve">
          <source>In your application code (e.g. PHP), in whatever DB access method you use, you'll need to set the connection charset to &lt;code&gt;utf8mb4&lt;/code&gt;.  This way, MySQL does no conversion from its native UTF-8 when it hands data off to your application and vice versa.</source>
          <target state="translated">В коде вашего приложения (например, PHP), в каком бы методе доступа к БД вы ни использовали, вам нужно установить кодировку соединения &lt;code&gt;utf8mb4&lt;/code&gt; . Таким образом, MySQL не выполняет преобразование из своего собственного UTF-8, когда передает данные в ваше приложение, и наоборот.</target>
        </trans-unit>
        <trans-unit id="0172cb92edbbc5688d0590b316c09f7a6bbc4e25" translate="yes" xml:space="preserve">
          <source>It turned out the page was missing the META tag. Adding that solved the problem.</source>
          <target state="translated">Оказалось,что на странице не хватает META-тега.Добавив его,мы решили проблему.</target>
        </trans-unit>
        <trans-unit id="909a5f0dfd8c3a4ef79cd1458e2b5fb136ad7fae" translate="yes" xml:space="preserve">
          <source>Iterators</source>
          <target state="translated">Iterators</target>
        </trans-unit>
        <trans-unit id="85cccc55a91ff650683ca4dcbe18b519c3e551fa" translate="yes" xml:space="preserve">
          <source>Just a note:</source>
          <target state="translated">Просто записка:</target>
        </trans-unit>
        <trans-unit id="cb62b45096d74bf04e878b551336ed27b3e70bfb" translate="yes" xml:space="preserve">
          <source>Message formatting (replaces gettext)</source>
          <target state="translated">Форматирование сообщений (заменяет gettext)</target>
        </trans-unit>
        <trans-unit id="2918c4d5af1ec648f31fc83cb72666722f8d463c" translate="yes" xml:space="preserve">
          <source>Number formatting</source>
          <target state="translated">Форматирование номеров</target>
        </trans-unit>
        <trans-unit id="c2e15a99804f3111c87710df5b8bbc36c1b58676" translate="yes" xml:space="preserve">
          <source>Obviously enough, all files you'll be serving (PHP, HTML, JavaScript, etc.) should be encoded in valid UTF-8.</source>
          <target state="translated">Очевидно,что все файлы,которые вы будете обслуживать (PHP,HTML,JavaScript и т.д.)должны быть закодированы в действующем UTF-8.</target>
        </trans-unit>
        <trans-unit id="7a5f4b2172d0ba6cdfc6374714fe97f6276fa2ba" translate="yes" xml:space="preserve">
          <source>Output buffer handler</source>
          <target state="translated">Обработчик выходного буфера</target>
        </trans-unit>
        <trans-unit id="26f5d9263b944f4ffea960d76ef426383723d981" translate="yes" xml:space="preserve">
          <source>Plain text is not plain text, files have encodings</source>
          <target state="translated">Обычный текст не является обычным текстом,файлы имеют кодировку</target>
        </trans-unit>
        <trans-unit id="224f0139fffbe62aa800883b0c73169a34b8189f" translate="yes" xml:space="preserve">
          <source>Primary for charset conversion</source>
          <target state="translated">Первичный для преобразования кодовых таблиц</target>
        </trans-unit>
        <trans-unit id="3c79dbd6ac5538d78945198363b90c930673b12a" translate="yes" xml:space="preserve">
          <source>Provides some wrappers for funtionallity such as strtoupper</source>
          <target state="translated">Предоставляет некоторые обертки для фантастики,такие как штруппер.</target>
        </trans-unit>
        <trans-unit id="02be837b723fb590d4a8ea4f2058a4f78cd91434" translate="yes" xml:space="preserve">
          <source>Resource bundles</source>
          <target state="translated">Ресурсные пакеты</target>
        </trans-unit>
        <trans-unit id="a37fde2217f946af090ae60ac59301f33e9bece6" translate="yes" xml:space="preserve">
          <source>Send everything in ASCII if you are using exec, proc_open and other command line calls</source>
          <target state="translated">Отправлять все в ASCII,если вы используете вызовы командной строки exec,proc_open и другие.</target>
        </trans-unit>
        <trans-unit id="65ad3613d563f20af3dd93010f55f976016b3a60" translate="yes" xml:space="preserve">
          <source>Setting the HTTP charset parameter</source>
          <target state="translated">Настройка параметра кодовой страницы HTTP</target>
        </trans-unit>
        <trans-unit id="637e537c6a0662f94014b3a6e3ff7ff53ba32088" translate="yes" xml:space="preserve">
          <source>Some drivers provide their own mechanism for configuring the connection character set, which both updates its own internal state and informs MySQL of the encoding to be used on the connection&amp;mdash;this is usually the preferred approach.   In PHP:</source>
          <target state="translated">Некоторые драйверы предоставляют собственный механизм для настройки набора символов соединения, который одновременно обновляет свое собственное внутреннее состояние и сообщает MySQL о кодировке, которая будет использоваться в соединении - обычно это предпочтительный подход. В PHP:</target>
        </trans-unit>
        <trans-unit id="207a48134f0b853aa739eb8c5d3372fb7a7e2ef7" translate="yes" xml:space="preserve">
          <source>Sometime ago i had someone ask me to add utf8 support for a php/mysql application designed by someone else, i noticed that all files were encoded in ANSI, so I had to use ICONV to convert all files, change the database tables to use the utf8 charset and utf8_general_ci collate, add 'SET NAMES utf8' to the database abstraction layer after the connection (if using 5.3.6 or earlier otherwise you have to use charset=utf8 in the connection string) and change string functions to use the php multibyte string functions equivalent.</source>
          <target state="translated">Некоторое время назад меня попросили добавить поддержку utf8 для phpmysql приложения,разработанного кем-то другим,я заметил,что все файлы были закодированы в ANSI,поэтому мне пришлось использовать ICONV для преобразования всех файлов,изменения таблиц БД для использования кодировки utf8 и сопоставления utf8_general_ci,добавления 'SET NAMES utf8' на уровень абстракции БД после соединения (при использовании 5.3.6 или более ранней версии,иначе вы должны использовать charset=utf8 в строке соединения)и изменить строковые функции на использование многобайтовых php-функций,эквивалентных строковым.</target>
        </trans-unit>
        <trans-unit id="b7ca532411e2a0f37bc7c62898bcacc6895fc8b7" translate="yes" xml:space="preserve">
          <source>Specify the &lt;code&gt;utf8mb4&lt;/code&gt; character set on all tables and text columns in your database.  This makes MySQL physically store and retrieve values encoded natively in UTF-8.  Note that MySQL will implicitly use &lt;code&gt;utf8mb4&lt;/code&gt; encoding if a &lt;code&gt;utf8mb4_*&lt;/code&gt; collation is specified (without any explicit character set).</source>
          <target state="translated">Укажите &lt;code&gt;utf8mb4&lt;/code&gt; символов utf8mb4 для всех таблиц и текстовых столбцов в вашей базе данных. Это заставляет MySQL физически хранить и извлекать значения, изначально закодированные в UTF-8. Обратите внимание, что MySQL будет неявно использовать кодировку &lt;code&gt;utf8mb4&lt;/code&gt; , если &lt;code&gt;utf8mb4_*&lt;/code&gt; сопоставление utf8mb4_ * (без какого-либо явного набора символов).</target>
        </trans-unit>
        <trans-unit id="01ef8e43542fd0225f4be2d16d90a14a1985274c" translate="yes" xml:space="preserve">
          <source>Spoofchecker</source>
          <target state="translated">Spoofchecker</target>
        </trans-unit>
        <trans-unit id="b7adc98398543c6ac7fdfa87ff652b753458844a" translate="yes" xml:space="preserve">
          <source>Standardised locales, set locale per script</source>
          <target state="translated">Стандартизированные локали,задавать локали для каждого сценария.</target>
        </trans-unit>
        <trans-unit id="9cef3ed7b1d2767b1b75b7e0cfa79ac5b57098ba" translate="yes" xml:space="preserve">
          <source>Stream Filter &lt;code&gt;stream_filter_append($fp, 'convert.iconv.ISO-2022-JP/EUC-JP')&lt;/code&gt;</source>
          <target state="translated">Потоковый фильтр &lt;code&gt;stream_filter_append($fp, 'convert.iconv.ISO-2022-JP/EUC-JP')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f5b5d04b61b87167f4ce215be3349bb000ca275" translate="yes" xml:space="preserve">
          <source>Supports transparent HTTP in/out encoding</source>
          <target state="translated">Поддерживает прозрачное кодирование HTTP на выходе</target>
        </trans-unit>
        <trans-unit id="582d3a55d7d8925dbd67239e75e1aca1a73af2a6" translate="yes" xml:space="preserve">
          <source>That is mostly because you are testing on &lt;strong&gt;your old data&lt;/strong&gt; which has been inserted to the database using the wrong charset and got converted and stored to actually the question mark characters &lt;code&gt;?&lt;/code&gt;. Which means you lost your original text forever and no matter what you try you will get &lt;code&gt;???????&lt;/code&gt;.</source>
          <target state="translated">Это в основном потому, что вы тестируете &lt;strong&gt;свои старые данные,&lt;/strong&gt; которые были вставлены в базу данных с использованием неправильной кодировки, а затем преобразованы и сохранены в символах вопросительного знака &lt;code&gt;?&lt;/code&gt; , Что означает, что вы потеряли свой оригинальный текст навсегда, и независимо от того, что вы пытаетесь, вы получите &lt;code&gt;???????&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="6f9a141ac6949a7ea66b109b173df0117edc8e5e" translate="yes" xml:space="preserve">
          <source>That seems trivial, but IE7 has given me problems with that before.</source>
          <target state="translated">Это кажется банальным,но IE7 уже давал мне проблемы с этим раньше.</target>
        </trans-unit>
        <trans-unit id="10b31519efe292a65c45c4715e1cf4bb614c331d" translate="yes" xml:space="preserve">
          <source>The W3C actually has a rather large &lt;a href=&quot;http://www.w3.org/International/&quot;&gt;section dedicated to I18N&lt;/a&gt;. They have a number of articles related to this issue &amp;ndash; describing the HTTP, (X)HTML and CSS side of things:</source>
          <target state="translated">На самом деле W3C имеет довольно большой &lt;a href=&quot;http://www.w3.org/International/&quot;&gt;раздел, посвященный I18N&lt;/a&gt; . У них есть ряд статей, связанных с этой проблемой - описывающих стороны HTTP, (X) HTML и CSS:</target>
        </trans-unit>
        <trans-unit id="4f49ce6fbca1578d556973165019742531ed7c7a" translate="yes" xml:space="preserve">
          <source>The easy part is just specifying the charset in HTTP headers and in the database and such, but none of that matters if your PHP code doesn't output valid UTF8. That's the hard part, and PHP gives you virtually no help there. (I think PHP6 is supposed to fix the worst of this, but that's still a while away)</source>
          <target state="translated">Простая часть заключается в указании кодовой страницы в заголовках HTTP и в базе данных,но ничто из этого не имеет значения,если ваш PHP-код не выводит действительный UTF8.Это сложная часть,и PHP практически не поможет вам в этом.(Я думаю,что PHP6 должен исправить худшее из этого,но это еще не все).</target>
        </trans-unit>
        <trans-unit id="2eca6cfca3016461d976cf886468837372d8ba57" translate="yes" xml:space="preserve">
          <source>The only thing I would add to these amazing answers is to emphasize on saving your files in utf8 encoding, i have noticed that browsers accept this property over setting utf8 as your code encoding. Any decent text editor will show you this, for example Notepad++ has a menu option for file enconding, it shows you the current encoding and enables you to change it. For all my php files I use utf8 without BOM.</source>
          <target state="translated">Единственное,что я бы добавил к этим удивительным ответам,это подчеркнуть сохранение ваших файлов в кодировке utf8,я заметил,что браузеры принимают это свойство,вместо того,чтобы устанавливать utf8 в качестве вашей кодировки.Любой приличный текстовый редактор покажет вам это,например,Блокнот++имеет опцию меню для кодирования файлов,он показывает вам текущую кодировку и позволяет ее изменить.Для всех моих php файлов я использую utf8 без BOM.</target>
        </trans-unit>
        <trans-unit id="aabb4fa7740be048d6bc94be8a99701c67c6887f" translate="yes" xml:space="preserve">
          <source>The same consideration regarding &lt;code&gt;utf8mb4&lt;/code&gt;/&lt;code&gt;utf8&lt;/code&gt; applies as above.</source>
          <target state="translated">То же &lt;code&gt;utf8mb4&lt;/code&gt; относится к utf8mb4 / &lt;code&gt;utf8&lt;/code&gt; , как и выше.</target>
        </trans-unit>
        <trans-unit id="d3149418384152b6a8646b1e2c84fb2829d07735" translate="yes" xml:space="preserve">
          <source>The site I took this from is down, but I was able to get it using the Google cache, luckily.</source>
          <target state="translated">Сайт,с которого я взял это,не работает,но,к счастью,я смог получить его с помощью кэша Google.</target>
        </trans-unit>
        <trans-unit id="de921e19c600d4a63955aee66d84ee2993f8c2d6" translate="yes" xml:space="preserve">
          <source>The solution was to use</source>
          <target state="translated">Решение заключалось в том,чтобы использовать</target>
        </trans-unit>
        <trans-unit id="8d7f8223526b4dbca13f549494d81749c27ce04c" translate="yes" xml:space="preserve">
          <source>The top answer is excellent. Here is what I had to on a regular debian/php/mysql setup:</source>
          <target state="translated">Верхний ответ отличный.Вот что мне пришлось сделать для обычной установки debianphpmysql:</target>
        </trans-unit>
        <trans-unit id="2fcce31f6cb0431af1d8ba6779198785476b7250" translate="yes" xml:space="preserve">
          <source>They recommend using both the HTTP header and HTML meta tag (or XML declaration in case of XHTML served as XML).</source>
          <target state="translated">Они рекомендуют использовать как заголовок HTTP,так и метатег HTML (или XML-декларацию в случае,если XHTML служит XML).</target>
        </trans-unit>
        <trans-unit id="e4ad4bf1f1a927d88ec22e472c9e6b3808e51204" translate="yes" xml:space="preserve">
          <source>This is for a new Linux server, running MySQL 5, PHP, 5 and Apache 2.</source>
          <target state="translated">Это для нового сервера Linux,работающего под управлением MySQL 5,PHP,5 и Apache 2.</target>
        </trans-unit>
        <trans-unit id="8fa896fbfc35af84e91997a19fde7a200f6410dd" translate="yes" xml:space="preserve">
          <source>This may cause troubles in case you're using anything other than UTF8.</source>
          <target state="translated">Это может вызвать проблемы,если вы используете что-то кроме UTF8.</target>
        </trans-unit>
        <trans-unit id="5a622fad92083ea56438e393bc329df640736daa" translate="yes" xml:space="preserve">
          <source>To know what you're doing (read: not mess it up), you really need to know UTF-8 and how it works on the lowest possible level.  Check out any of the links from &lt;a href=&quot;http://www.utf8.com/&quot;&gt;utf8.com&lt;/a&gt; for some good resources to learn everything you need to know.</source>
          <target state="translated">Чтобы знать, что вы делаете (читай: не путайте), вам действительно нужно знать UTF-8 и как он работает на самом низком уровне. Проверьте любую из ссылок с &lt;a href=&quot;http://www.utf8.com/&quot;&gt;utf8.com&lt;/a&gt; для некоторых хороших ресурсов, чтобы узнать все, что вам нужно знать.</target>
        </trans-unit>
        <trans-unit id="ba455ba021d7ce65308fca89d0584483a47a8d4e" translate="yes" xml:space="preserve">
          <source>Transliterator</source>
          <target state="translated">Transliterator</target>
        </trans-unit>
        <trans-unit id="efa99878bac8950b369b416ed67b7da66d18ad86" translate="yes" xml:space="preserve">
          <source>Tutorial: Character sets &amp;amp; encodings in XHTML, HTML and CSS</source>
          <target state="translated">Учебное пособие: наборы символов и кодировки в XHTML, HTML и CSS</target>
        </trans-unit>
        <trans-unit id="1a737ada225b54daf9665a302016b367189c3214" translate="yes" xml:space="preserve">
          <source>UTF-8 all the way through</source>
          <target state="translated">UTF-8 до конца</target>
        </trans-unit>
        <trans-unit id="4f626a9b47979a2a7f85ee3a003879389665a7e2" translate="yes" xml:space="preserve">
          <source>Unfortunately, you should verify every received string as being valid UTF-8 before you try to store it or use it anywhere.  PHP's &lt;a href=&quot;http://php.net/manual/en/function.mb-check-encoding.php&quot;&gt;&lt;code&gt;mb_check_encoding()&lt;/code&gt;&lt;/a&gt; does the trick, but you have to use it religiously.  There's really no way around this, as malicious clients can submit data in whatever encoding they want, and I haven't found a trick to get PHP to do this for you reliably.</source>
          <target state="translated">К сожалению, вы должны проверить каждую полученную строку как действительную UTF-8, прежде чем пытаться сохранить ее или использовать где-либо. PHP &lt;a href=&quot;http://php.net/manual/en/function.mb-check-encoding.php&quot;&gt; &lt;code&gt;mb_check_encoding()&lt;/code&gt; &lt;/a&gt; делает свое дело, но вы должны использовать его неукоснительно. Это действительно невозможно, поскольку злонамеренные клиенты могут отправлять данные в любой нужной им кодировке, и я не нашел способа заставить PHP сделать это для вас надежно.</target>
        </trans-unit>
        <trans-unit id="bbbae2a97b532d10d05a657f576cdb6b71bc1b68" translate="yes" xml:space="preserve">
          <source>Unicode support in PHP is still a huge mess. While it's capable of converting an ISO8859 string (which it uses internally) to utf8, it lacks the capability to work with unicode strings natively, which means all the string processing functions will mangle and corrupt your strings. So you have to either use a separate library for proper utf8 support, or rewrite all the string handling functions yourself.</source>
          <target state="translated">Поддержка юникода в PHP все еще остается огромным бардаком.Несмотря на то,что он способен преобразовывать строку ISO8859 (которую он использует внутри)в utf8,ему не хватает возможности работать со строками юникода в исходном формате,а это означает,что все функции обработки строк будут искажать и повреждать ваши строки.Поэтому вы должны либо использовать отдельную библиотеку для правильной поддержки utf8,либо переписать все функции обработки строк самостоятельно.</target>
        </trans-unit>
        <trans-unit id="accd4b912118c7e4a7de25740b3e4c5a2c86712e" translate="yes" xml:space="preserve">
          <source>View Source</source>
          <target state="translated">Источник просмотра</target>
        </trans-unit>
        <trans-unit id="48675f90267ddcde6fd852648cbdedc142bb7d96" translate="yes" xml:space="preserve">
          <source>When encoding the output using &lt;code&gt;json_encode()&lt;/code&gt;, add &lt;code&gt;JSON_UNESCAPED_UNICODE&lt;/code&gt; as a second parameter.</source>
          <target state="translated">При кодировании вывода с помощью &lt;code&gt;json_encode()&lt;/code&gt; добавьте &lt;code&gt;JSON_UNESCAPED_UNICODE&lt;/code&gt; в качестве второго параметра.</target>
        </trans-unit>
        <trans-unit id="15727aa8a979f4b718bd9a96ec3508ca46061cc8" translate="yes" xml:space="preserve">
          <source>Where exactly do I need to set the encoding/charsets? I'm aware that I need to configure Apache, MySQL, and PHP to do this &amp;mdash; is there some standard checklist I can follow, or perhaps troubleshoot where the mismatches occur?</source>
          <target state="translated">Где именно мне нужно установить кодировку / кодировки? Я знаю, что для этого мне нужно настроить Apache, MySQL и PHP - есть ли какой-нибудь стандартный контрольный список, которому я могу следовать, или, возможно, устранить неполадки в случае несоответствия?</target>
        </trans-unit>
        <trans-unit id="cbbf06985cb0082a248a4aaa3458b7838a14f917" translate="yes" xml:space="preserve">
          <source>Working with Unicode in PHP is easy as long as you realize that most of the &lt;strong&gt;string functions don't work with Unicode, and some might mangle strings completely&lt;/strong&gt;. PHP considers &quot;characters&quot; to be 1 byte long. Sometimes this is okay (for example, &lt;code&gt;explode()&lt;/code&gt; only looks for a byte sequence and uses it as a separator -- so it doesn't matter what actual characters you look for). But other times, when the function is actually designed to work on &lt;em&gt;characters&lt;/em&gt;, PHP has no idea that your text has multi-byte characters that are found with Unicode.</source>
          <target state="translated">Работать с Unicode в PHP легко, если вы понимаете, что большинство &lt;strong&gt;строковых функций не работают с Unicode, а некоторые могут полностью искажать строки&lt;/strong&gt; . PHP считает &quot;символы&quot; длиной 1 байт. Иногда это нормально (например, &lt;code&gt;explode()&lt;/code&gt; ищет только последовательность байтов и использует ее в качестве разделителя - поэтому не имеет значения, какие именно символы вы ищете). Но в других случаях, когда функция фактически предназначена для работы с &lt;em&gt;символами&lt;/em&gt; , PHP не знает, что ваш текст содержит многобайтовые символы, которые можно найти в Unicode.</target>
        </trans-unit>
        <trans-unit id="6655db021e6fed68cec4c59ba76e1b3c487b6f57" translate="yes" xml:space="preserve">
          <source>Wrapper around ICU library</source>
          <target state="translated">Обертка вокруг библиотеки ICU</target>
        </trans-unit>
        <trans-unit id="2ae0ed48e37f2e02e46f33b03b7510c47ed8cefa" translate="yes" xml:space="preserve">
          <source>You are facing the problem of your non-latin characters is showing as &lt;code&gt;?????????&lt;/code&gt; , you asked a question, and it got closed with a reference to this canonical question, you tried everything and no matter what you do you still get &lt;code&gt;??????????&lt;/code&gt; from &lt;code&gt;MySQL&lt;/code&gt;.</source>
          <target state="translated">Вы сталкиваетесь с проблемой, когда ваши нелатинские символы отображаются как &lt;code&gt;?????????&lt;/code&gt; , вы задали вопрос, и он был закрыт со ссылкой на этот канонический вопрос, вы перепробовали все, и независимо от того, что вы делаете, вы все равно получаете &lt;code&gt;??????????&lt;/code&gt; из &lt;code&gt;MySQL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b164784fa8f261338cec31e801b8e72a1828dc7" translate="yes" xml:space="preserve">
          <source>You can convert files on the fly with the iconv filter</source>
          <target state="translated">Вы можете конвертировать файлы &quot;на лету&quot; с помощью фильтра iconv</target>
        </trans-unit>
        <trans-unit id="d403e71451a2f19d8575749fcd05090e7e348288" translate="yes" xml:space="preserve">
          <source>You cannot use unicode filenames with PHP and windows unless you use a 3rd part extension.</source>
          <target state="translated">Вы не можете использовать имена файлов в юникоде с PHP и windows,если не используете расширение третьей части.</target>
        </trans-unit>
        <trans-unit id="8b37a9d9e415bc8221c1b11d04ca54c6a6648f23" translate="yes" xml:space="preserve">
          <source>You need to make sure that every time you process a UTF-8 string, you do so safely.  This is, unfortunately, the hard part.  You'll probably want to make extensive use of PHP's &lt;a href=&quot;http://www.php.net/manual/en/book.mbstring.php&quot;&gt;&lt;code&gt;mbstring&lt;/code&gt;&lt;/a&gt; extension.</source>
          <target state="translated">Вы должны быть уверены, что каждый раз, когда вы обрабатываете строку UTF-8, вы делаете это безопасно. Это, к сожалению, самая сложная часть. Возможно, вы захотите широко использовать &lt;a href=&quot;http://www.php.net/manual/en/book.mbstring.php&quot;&gt; &lt;code&gt;mbstring&lt;/code&gt; &lt;/a&gt; PHP mbstring .</target>
        </trans-unit>
        <trans-unit id="48f40e3284384ba88de282b171078281c9e11cac" translate="yes" xml:space="preserve">
          <source>You'll also need to identify the character set of your responses. You can either use AddDefaultCharset, as above, or write PHP code that returns the header. (Or you can add a META tag to your HTML documents.)</source>
          <target state="translated">Вам также нужно будет определить набор символов ваших ответов.Вы можете использовать AddDefaultCharset,как описано выше,или написать PHP-код,возвращающий заголовок.(Или вы можете добавить META-тег к вашим HTML-документам).</target>
        </trans-unit>
        <trans-unit id="21faa67da1fdbfe3a5a17ee67b0e79f4017e8bfc" translate="yes" xml:space="preserve">
          <source>conversion</source>
          <target state="translated">conversion</target>
        </trans-unit>
        <trans-unit id="d6b88f784ad82597b546d77bd5d819d1ae014a0d" translate="yes" xml:space="preserve">
          <source>good luck!</source>
          <target state="translated">удачи!</target>
        </trans-unit>
        <trans-unit id="dc7ad30ba9ebdea9c06f78450dfe81e3e379c9e9" translate="yes" xml:space="preserve">
          <source>if you want a mysql solution,  I had similar issues with 2 of my projects, after a server migration. After searching and trying a lot of solutions i came across with this one /nothing before this one worked):</source>
          <target state="translated">если вам нужно решение на основе mysql,у меня были похожие проблемы с двумя моими проектами,после переноса сервера.После поиска и перепробования множества решений я наткнулся с этим ни на что до того,как это решение заработало):</target>
        </trans-unit>
        <trans-unit id="5858c8fc80c96241aabb9bf1ac3cedfc7e5fde56" translate="yes" xml:space="preserve">
          <source>mb_ uses MultiByte. It supports more characters but in general is a little slower.</source>
          <target state="translated">mb_использует MultiByte.Поддерживает больше символов,но в целом немного медленнее.</target>
        </trans-unit>
        <trans-unit id="ca9725ab9df433013617c6d2b1f80b15fec7783f" translate="yes" xml:space="preserve">
          <source>mime encoding functionality</source>
          <target state="translated">функциональность кодирования пантомимы</target>
        </trans-unit>
        <trans-unit id="6753bf8acd23a41246a8480a0f2c510fcd3782e5" translate="yes" xml:space="preserve">
          <source>mysql: Charset and collation on tables and on connection (not the collation). Also don't use mysql - msqli or PDO</source>
          <target state="translated">микл:Чарсет и сопоставление на столах и при соединении (не сопоставление).Также не используйте mysql-msqli или PDO.</target>
        </trans-unit>
        <trans-unit id="72878135f7c3cf76c8c397477c2b790c3bfe5f9a" translate="yes" xml:space="preserve">
          <source>postgresql: pg_set_client_encoding</source>
          <target state="translated">postgresql:pg_set_client_encoding</target>
        </trans-unit>
        <trans-unit id="e75417cec808d303c6a86e1996166bafc1abc546" translate="yes" xml:space="preserve">
          <source>re applying what you have learned from the answers of this question on a fresh data could solve your problem.</source>
          <target state="translated">Применение того,что вы узнали из ответов на этот вопрос,на свежих данных может решить вашу проблему.</target>
        </trans-unit>
        <trans-unit id="b6333cd52beca5bbacde284512084b655544c695" translate="yes" xml:space="preserve">
          <source>some string helpers (len, substr, strpos, strrpos)</source>
          <target state="translated">некоторые строковые помощники (len,подложка,strpos,strrpos)</target>
        </trans-unit>
        <trans-unit id="ef364574a8f0d1be78900349f12be514ef88db95" translate="yes" xml:space="preserve">
          <source>sqlite(3): Make sure it was compiled with unicode and intl support</source>
          <target state="translated">квадратный(3):Убедитесь,что он был скомпилирован с поддержкой unicode и intl.</target>
        </trans-unit>
        <trans-unit id="2f27ef05bfa13338492e0888a52b4b98262e6258" translate="yes" xml:space="preserve">
          <source>that was all !</source>
          <target state="translated">вот и всё!</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
