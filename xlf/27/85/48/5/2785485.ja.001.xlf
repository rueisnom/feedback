<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/2785485">
    <body>
      <group id="2785485">
        <trans-unit id="b181b1b9d0c086707ac87cdae3439b4b938c3820" translate="yes" xml:space="preserve">
          <source>(Extra info: The technique given above was copied from an article on &lt;a href=&quot;http://www.pocketmagic.net/?p=1662&quot;&gt;Pocket Magic&lt;/a&gt;.)</source>
          <target state="translated">（補足：上記のテクニックは&lt;a href=&quot;http://www.pocketmagic.net/?p=1662&quot;&gt;Pocket Magicの&lt;/a&gt;記事からコピーされました。）</target>
        </trans-unit>
        <trans-unit id="f46132bef288a5dfab4aa74662227d9af6352df6" translate="yes" xml:space="preserve">
          <source>- Guarantee uniqueness (include rooted devices) for API &amp;gt;= 9/10 (99.5% of Android devices)</source>
          <target state="translated">-9/10以上のAPI（Androidデバイスの99.5％）の一意性を保証（根ざしたデバイスを含む）</target>
        </trans-unit>
        <trans-unit id="64a8a656b27e5414def3b68719d22dbd0722b3fe" translate="yes" xml:space="preserve">
          <source>- No extra permissions</source>
          <target state="translated">-追加のパーミッションはありません。</target>
        </trans-unit>
        <trans-unit id="3dbcc62d78a806b5dd67ba63ab7e0076a5dee116" translate="yes" xml:space="preserve">
          <source>3 IDs are:</source>
          <target state="translated">3つのIDがあります。</target>
        </trans-unit>
        <trans-unit id="24308b13f274d9b2b66681dadbb1969845233a3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://developer.android.com/google/play-services/id.html&quot;&gt;http://developer.android.com/google/play-services/id.html&lt;/a&gt;&lt;a href=&quot;http://developer.android.com/reference/com/google/android/gms/ads/identifier/AdvertisingIdClient.html&quot;&gt;http://developer.android.com/reference/com/google/android/gms/ads/identifier/AdvertisingIdClient.html&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://developer.android.com/google/play-services/id.html&quot;&gt;http://developer.android.com/google/play-services/id.html&lt;/a&gt;&lt;a href=&quot;http://developer.android.com/reference/com/google/android/gms/ads/identifier/AdvertisingIdClient.html&quot;&gt;http://developer.android.com/reference/com/google/android/gms/ads/identifier/AdvertisingIdClient.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aad57647718e1189a9ca068c1268dc9b89e9426f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID&quot;&gt;&lt;code&gt;Settings.Secure#ANDROID_ID&lt;/code&gt;&lt;/a&gt; returns the Android ID as an &lt;em&gt;&lt;a href=&quot;https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID&quot;&gt;unique for each user&lt;/a&gt;&lt;/em&gt; 64-bit hex string.</source>
          <target state="translated">&lt;a href=&quot;http://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID&quot;&gt; &lt;code&gt;Settings.Secure#ANDROID_ID&lt;/code&gt; &lt;/a&gt;は、 &lt;em&gt;&lt;a href=&quot;https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID&quot;&gt;ユーザーごとに&lt;/a&gt;&lt;/em&gt; 64ビットの16進数文字列として&lt;em&gt;一意の&lt;/em&gt; Android IDを返します。</target>
        </trans-unit>
        <trans-unit id="e220c504ed1a53f66958d05ced7b441afe39b2ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ANDROID_ID&lt;/code&gt; seems a good choice for a unique device identifier. There are downsides: First, it is not 100% reliable on releases of Android prior to 2.2 &lt;code&gt;(&amp;ldquo;Froyo&amp;rdquo;).&lt;/code&gt; Also, there has been at least one widely-observed bug in a popular handset from a major manufacturer, where every instance has the same ANDROID_ID.</source>
          <target state="translated">&lt;code&gt;ANDROID_ID&lt;/code&gt; は、一意のデバイス識別子に適しています。 欠点があります。まず、Android 2.2より前のリリース &lt;code&gt;(&amp;ldquo;Froyo&amp;rdquo;).&lt;/code&gt; では100％信頼できません。 また、大手メーカーの人気のある携帯電話には、すべてのインスタンスが同じANDROID_IDを持っている、少なくとも1つの広く観察されているバグがありました。</target>
        </trans-unit>
        <trans-unit id="2a7ecef876d978aff21a723a463c8cce70f74986" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ANDROID_ID&lt;/strong&gt; - &lt;code&gt;Settings.Secure.ANDROID_ID&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;ANDROID_ID&lt;/strong&gt; - &lt;code&gt;Settings.Secure.ANDROID_ID&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea50d53bb38b142bacc83d97cb9a3172bd16f9e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Android ID - Hardware&lt;/strong&gt; (can be null, can change upon factory reset, can be altered on a rooted device)</source>
          <target state="translated">&lt;strong&gt;Android ID-ハードウェア&lt;/strong&gt; （nullの可能性、出荷時設定へのリセット時に変更可能、ルート化されたデバイスで変更可能）</target>
        </trans-unit>
        <trans-unit id="8db07429bf3578e05973ce8664b1a9bb4287d884" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Android ID&lt;/strong&gt; (can be null, can change upon factory reset, can be altered on rooted phone)</source>
          <target state="translated">&lt;strong&gt;Android ID&lt;/strong&gt; （nullの可能性、出荷時設定へのリセット時に変更可能、根ざした電話で変更可能）</target>
        </trans-unit>
        <trans-unit id="b44abe0e3872a3ddf088098375b5b0ae4112d430" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Avoid using hardware identifiers&lt;/strong&gt;, such as SSAID (Android ID), IMEI, MAC address, etc...</source>
          <target state="translated">SSAID（Android ID）、IMEI、MACアドレスなどの&lt;strong&gt;ハードウェア識別子の使用は避けてください&lt;/strong&gt; ...</target>
        </trans-unit>
        <trans-unit id="c8d538e3ef150d20979c342b78b601121605b217" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BT MAC Address&lt;/strong&gt; string (devices with Bluetooth, needs &lt;code&gt;android.permission.BLUETOOTH&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;BT MACアドレス&lt;/strong&gt;文字列（Bluetooth搭載デバイス、 &lt;code&gt;android.permission.BLUETOOTH&lt;/code&gt; が必要）</target>
        </trans-unit>
        <trans-unit id="bafd04e528102e85d4eeba4b49e7e6ebeeec8fb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best practices for unique identifiers:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;一意の識別子のベストプラクティス：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ecd8905c7608c04bb17e1494f7f8edfc6c13ec35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bluetooth Address&lt;/strong&gt; - Bluetooth adapter address</source>
          <target state="translated">&lt;strong&gt;Bluetoothアドレス&lt;/strong&gt; -Bluetoothアダプターアドレス</target>
        </trans-unit>
        <trans-unit id="45d48748303dd882fbebc79403ba709067aa415c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bluetooth MAC Address - Hardware&lt;/strong&gt; (devices with Bluetooth, needs &lt;strong&gt;&lt;code&gt;android.permission.BLUETOOTH&lt;/code&gt;&lt;/strong&gt;)</source>
          <target state="translated">&lt;strong&gt;Bluetooth MACアドレス-ハードウェア&lt;/strong&gt; （Bluetoothを搭載したデバイス、 &lt;strong&gt; &lt;code&gt;android.permission.BLUETOOTH&lt;/code&gt; &lt;/strong&gt;が必要）</target>
        </trans-unit>
        <trans-unit id="411c38caf68a6ed824124e24cd4675443673ecf8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;From the Google Play Developer's console:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Google Playデベロッパーコンソールから：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="957809252710cee9969716976cc2c3db8defd64a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Google Instance ID&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;GoogleインスタンスID&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab8e6abb67f419400f610c6784d884532f8e22fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IMEI - Hardware&lt;/strong&gt; (only phones, needs &lt;strong&gt;&lt;code&gt;android.permission.READ_PHONE_STATE&lt;/code&gt;&lt;/strong&gt;)</source>
          <target state="translated">&lt;strong&gt;IMEI-ハードウェア&lt;/strong&gt; （電話のみ、 &lt;strong&gt; &lt;code&gt;android.permission.READ_PHONE_STATE&lt;/code&gt; &lt;/strong&gt;が必要）</target>
        </trans-unit>
        <trans-unit id="ade3c7f4182c7dcfa5ef96877cdd5eaca6556b53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IMEI&lt;/strong&gt; (only for Android devices with Phone use; needs &lt;code&gt;android.permission.READ_PHONE_STATE&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;IMEI&lt;/strong&gt; （電話を使用するAndroidデバイスのみ &lt;code&gt;android.permission.READ_PHONE_STATE&lt;/code&gt; が必要です）</target>
        </trans-unit>
        <trans-unit id="f83425a65c1c8ba0f03466a55d7707c4f2fa69f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Implementation&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Implementation&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="962b31d714025ad16d50eaddcc6f19a63d8d2d31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; From Android 6.x, it returns consistent fake mac address: &lt;code&gt;02:00:00:00:00:00&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; Android 6.x以降、一貫した偽のMACアドレスを返します： &lt;code&gt;02:00:00:00:00:00&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ba920baef2e1d3c3aa47f6f7d2ad1446698b61b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Only use an Advertising ID for user profiling or ads use cases&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ユーザーIDのプロファイリングまたは広告のユースケースにのみ広告IDを使用する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4d109d7d27f4b7602674fb5784993cbe1455bc34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pseudo-ID&lt;/strong&gt; - It is generated based on physical device specifications</source>
          <target state="translated">&lt;strong&gt;疑似ID-&lt;/strong&gt;物理デバイスの仕様に基づいて生成されます</target>
        </trans-unit>
        <trans-unit id="815a9883ed04b839e75540b14a9029833584eabe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pseudo-Unique ID - Software&lt;/strong&gt; (for all Android devices)</source>
          <target state="translated">&lt;strong&gt;疑似固有ID-ソフトウェア&lt;/strong&gt; （すべてのAndroidデバイス用）</target>
        </trans-unit>
        <trans-unit id="562a2ba67fe226b4583a2412fbc3121061de8f16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pseudo-Unique ID&lt;/strong&gt; (for all Android devices)</source>
          <target state="translated">&lt;strong&gt;疑似固有ID&lt;/strong&gt; （すべてのAndroidデバイス用）</target>
        </trans-unit>
        <trans-unit id="3fd7c31e3b7b82748b721e9ea087cfb28bb8a87c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;REMEMBER&lt;/strong&gt;, you are technically only missing out on around 0.5% of users &lt;a href=&quot;http://developer.android.com/about/dashboards/index.html&quot;&gt;who have API &amp;lt; 9&lt;/a&gt;. So you can focus on the rest: This is 99.5% of the users!</source>
          <target state="translated">&lt;strong&gt;覚えて&lt;/strong&gt;おいてください。あなたは技術的に&lt;a href=&quot;http://developer.android.com/about/dashboards/index.html&quot;&gt;APIが9&lt;/a&gt;未満のユーザーの約0.5％だけを見逃しています 。 残りの部分に集中できます。これはユーザーの99.5％です。</target>
        </trans-unit>
        <trans-unit id="1f5e9d463b8f8c18af8677bb343915a7bfe86673" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Settings.Secure.ANDROID_ID&lt;/strong&gt; that returns the Android ID as an unique 64-bit hex string.</source>
          <target state="translated">Android IDを一意の64ビット16進文字列として返す&lt;strong&gt;Settings.Secure.ANDROID_ID&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="80eef0df3a09d650af671812b11c019ca7ae0159" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source/Docs:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Source/Docs:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15790c02e5af662271cb875986ccd5a65911222a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TelephonyManger.getDeviceId()&lt;/strong&gt; Returns the unique device ID, for example, the IMEI for GSM and the MEID or ESN for CDMA phones.</source>
          <target state="translated">&lt;strong&gt;TelephonyManger.getDeviceId（）&lt;/strong&gt;一意のデバイスID（GSMの場合はIMEI、CDMA電話の場合はMEIDまたはESNなど&lt;strong&gt;）を&lt;/strong&gt;返します。</target>
        </trans-unit>
        <trans-unit id="aa2405819ce2f56f35d257d203c19d30a9159b58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The advantages of instance ID&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;インスタンスIDの利点&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d042742c0ce55d371e0baed1452d826e2d0af521" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The disadvantages/issues&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;短所/問題&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f7e9b35e6804a6b024cdee61b803053446c2cd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE&lt;/strong&gt;: As of recent versions of Android, many of the issues with &lt;code&gt;ANDROID_ID&lt;/code&gt; have been resolved, and I believe this approach is no longer necessary. Please take a look at &lt;a href=&quot;https://stackoverflow.com/a/2785493/231078&quot;&gt;Anthony's answer&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;更新&lt;/strong&gt; ：Androidの最近のバージョンでは、 &lt;code&gt;ANDROID_ID&lt;/code&gt; に関する問題の多くが解決されており、このアプローチは不要になったと思います。 &lt;a href=&quot;https://stackoverflow.com/a/2785493/231078&quot;&gt;アンソニーの答えを&lt;/a&gt;見てください。</target>
        </trans-unit>
        <trans-unit id="18d0b195c6490ecf8258b68c44ba7edb801668ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use a FirebaseInstanceId or a privately stored GUID&lt;/strong&gt; whenever possible for all other use cases, except for payment fraud prevention and telephony.</source>
          <target state="translated">支払い詐欺防止とテレフォニーを除いて、他のすべてのユースケースで可能な限り&lt;strong&gt;、FirebaseInstanceIdまたはプライベートに格納されたGUIDを使用してください&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2e9748d24580165cbb22e2726f522e8b890e0b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User Email - Software&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ユーザーのメール-ソフトウェア&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b795ef3d501d5a65ec77a93fb104d3f775a17b7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User Phone Number - Software&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ユーザーの電話番号-ソフトウェア&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d6199e99727aa312214a0a51a948a3a4853b9ba6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WLAN MAC Address - Hardware&lt;/strong&gt; (needs &lt;strong&gt;&lt;code&gt;android.permission.ACCESS_WIFI_STATE&lt;/code&gt;&lt;/strong&gt;)</source>
          <target state="translated">&lt;strong&gt;WLAN MACアドレス-ハードウェア&lt;/strong&gt; （ &lt;strong&gt; &lt;code&gt;android.permission.ACCESS_WIFI_STATE&lt;/code&gt; &lt;/strong&gt;が必要）</target>
        </trans-unit>
        <trans-unit id="d78239e458e5232305215bdb49433ff53b4c162a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WLAN MAC Address&lt;/strong&gt; string (needs &lt;code&gt;android.permission.ACCESS_WIFI_STATE&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;WLAN MACアドレス&lt;/strong&gt;文字列（ &lt;code&gt;android.permission.ACCESS_WIFI_STATE&lt;/code&gt; が必要）</target>
        </trans-unit>
        <trans-unit id="ebdbf7280232433bb44ce8df29850d11f2652d33" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;http://developer.android.com/reference/android/os/Build.html#SERIAL&quot;&gt;Serial&lt;/a&gt; field was added to the &lt;code&gt;Build&lt;/code&gt; class in API level 9 (Android 2.3 - Gingerbread). Documentation says it represents the hardware serial number. Thus it should be unique, if it exists on the device.</source>
          <target state="translated">&lt;a href=&quot;http://developer.android.com/reference/android/os/Build.html#SERIAL&quot;&gt;シリアル&lt;/a&gt;フィールドがAPIレベル9（Android 2.3-Gingerbread）の &lt;code&gt;Build&lt;/code&gt; クラスに追加されました。 ドキュメントには、ハードウェアのシリアル番号を表すと記載されています。 したがって、デバイス上に存在する場合、一意である必要があります。</target>
        </trans-unit>
        <trans-unit id="6b4a06b5ef830134d9fec0ddd03fca8e9d484bb1" translate="yes" xml:space="preserve">
          <source>ANDROID_ID is the preferred device identifier.  ANDROID_ID is perfectly reliable on versions of Android &amp;lt;=2.1 or &amp;gt;=2.3.  Only 2.2 has the problems mentioned in the post.</source>
          <target state="translated">ANDROID_IDは優先デバイス識別子です。 ANDROID_IDは、Android &amp;lt;= 2.1または&amp;gt; = 2.3のバージョンで完全に信頼できます。 投稿で言及されている問題があるのは2.2だけです。</target>
        </trans-unit>
        <trans-unit id="68aa9980fe376e4905566c98ee670984dbe45080" translate="yes" xml:space="preserve">
          <source>API &amp;gt;= 9:</source>
          <target state="translated">API&amp;gt; = 9：</target>
        </trans-unit>
        <trans-unit id="29a897557ef6d56f7d7d648fcaddf92743c494e5" translate="yes" xml:space="preserve">
          <source>API &amp;lt; 9:</source>
          <target state="translated">API &amp;lt;9：</target>
        </trans-unit>
        <trans-unit id="f0bdeaf0b89418308e592d0083e5b065f0e07b91" translate="yes" xml:space="preserve">
          <source>API 14+ &lt;code&gt;&amp;lt;uses-permission android:name=&quot;android.permission.READ_PROFILE&quot; /&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;uses-permission android:name=&quot;android.permission.READ_CONTACTS&quot; /&amp;gt;&lt;/code&gt; (&lt;a href=&quot;https://stackoverflow.com/questions/2112965/how-to-get-the-android-devices-primary-e-mail-address&quot;&gt;How to get the Android device's primary e-mail address&lt;/a&gt;)</source>
          <target state="translated">API 14+ &lt;code&gt;&amp;lt;uses-permission android:name=&quot;android.permission.READ_PROFILE&quot; /&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;uses-permission android:name=&quot;android.permission.READ_CONTACTS&quot; /&amp;gt;&lt;/code&gt; （ &lt;a href=&quot;https://stackoverflow.com/questions/2112965/how-to-get-the-android-devices-primary-e-mail-address&quot;&gt;Androidデバイスのメインのメールアドレスを取得する方法&lt;/a&gt; ）</target>
        </trans-unit>
        <trans-unit id="a41b24d1a450d71fe88f28c02825ff387777023d" translate="yes" xml:space="preserve">
          <source>API 5+ &lt;code&gt;&amp;lt;uses-permission android:name=&quot;android.permission.GET_ACCOUNTS&quot; /&amp;gt;&lt;/code&gt; or</source>
          <target state="translated">API 5+ &lt;code&gt;&amp;lt;uses-permission android:name=&quot;android.permission.GET_ACCOUNTS&quot; /&amp;gt;&lt;/code&gt; または</target>
        </trans-unit>
        <trans-unit id="89b151af4a909f2db1de25b74e9195a4ef188176" translate="yes" xml:space="preserve">
          <source>Abusing other IDs like &lt;a href=&quot;https://en.wikipedia.org/wiki/International_Mobile_Station_Equipment_Identity&quot;&gt;IMEI&lt;/a&gt;, serial number, Wi-Fi/Bluetooth-MAC address (they won't exist on all devices or additional permissions become necessary)</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/International_Mobile_Station_Equipment_Identity&quot;&gt;IMEI&lt;/a&gt; 、シリアル番号、Wi-Fi / Bluetooth-MACアドレスなどの他のIDの悪用（すべてのデバイスに存在するわけではないか、追加の権限が必要になります）</target>
        </trans-unit>
        <trans-unit id="c12f5ec035062f96ae0b0e2215e9dbc890a13231" translate="yes" xml:space="preserve">
          <source>Add Below code in class file:</source>
          <target state="translated">クラスファイルに以下のコードを追加します。</target>
        </trans-unit>
        <trans-unit id="0e30f5508581eb8326f00fd68d87f89e0c275a2f" translate="yes" xml:space="preserve">
          <source>Add in AndroidManifest.xml:</source>
          <target state="translated">AndroidManifest.xmlに追加します。</target>
        </trans-unit>
        <trans-unit id="2c199c5dde5288a035f4af10d6f11a0e368ca3e5" translate="yes" xml:space="preserve">
          <source>After reading every Stack Overflow post about creating a unique ID, the Google developer blog and Android documentation, I feel as if the 'Pseudo ID' is the best possible option.</source>
          <target state="translated">ユニークなIDの作成についてのStack Overflowの記事、Googleの開発者ブログ、Androidのドキュメントをすべて読んだ後、私は「疑似ID」が最良の選択肢であるように感じています。</target>
        </trans-unit>
        <trans-unit id="c3e749475078b1c951d38bbbc94315254d2f3009" translate="yes" xml:space="preserve">
          <source>Again, this code is for a device ID, not an app installation ID.  For most situations, an app installation ID is probably what you're looking for.  But if you do need a device ID, then the following code will probably work for you.</source>
          <target state="translated">繰り返しになりますが、このコードはデバイスIDのためのものであり、アプリのインストールIDではありません。ほとんどの状況では、アプリのインストールIDが必要でしょう。しかし、デバイスIDが必要な場合は、以下のコードを使用するとよいでしょう。</target>
        </trans-unit>
        <trans-unit id="5a92c69287df1de09fcce1814c08b09a18e1c16d" translate="yes" xml:space="preserve">
          <source>All CDMA devices returned null for &lt;code&gt;getSimSerialNumber()&lt;/code&gt; (as expected)</source>
          <target state="translated">すべてのCDMAデバイスが &lt;code&gt;getSimSerialNumber()&lt;/code&gt; に対してnullを返しました（期待どおり）</target>
        </trans-unit>
        <trans-unit id="72ac9336052e7432124e824524b2a7f0e7906d72" translate="yes" xml:space="preserve">
          <source>All CDMA devices returned the same value (or derivation of the same value) for both &lt;code&gt;ANDROID_ID&lt;/code&gt; and &lt;code&gt;TelephonyManager.getDeviceId()&lt;/code&gt; -- &lt;em&gt;as long as&lt;/em&gt; a Google account has been added during setup.</source>
          <target state="translated">&lt;code&gt;ANDROID_ID&lt;/code&gt; と &lt;code&gt;TelephonyManager.getDeviceId()&lt;/code&gt; の両方に対して 、すべてのCDMAデバイスが同じ値（または同じ値の派生）を返しました -セットアップ中にGoogleアカウントが追加されている&lt;em&gt;限り&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="2dd555f826a536eccab4f888bde32943a6a65c01" translate="yes" xml:space="preserve">
          <source>All GSM devices (all tested with a SIM) returned a value for &lt;code&gt;TelephonyManager.getSimSerialNumber()&lt;/code&gt;</source>
          <target state="translated">すべてのGSMデバイス（すべてSIMでテスト済み）が &lt;code&gt;TelephonyManager.getSimSerialNumber()&lt;/code&gt; の値を返しました</target>
        </trans-unit>
        <trans-unit id="82968c3a33493da4908421d9d3916cd2a050b103" translate="yes" xml:space="preserve">
          <source>All devices tested returned a value for &lt;code&gt;TelephonyManager.getDeviceId()&lt;/code&gt;</source>
          <target state="translated">テストしたすべてのデバイスが &lt;code&gt;TelephonyManager.getDeviceId()&lt;/code&gt; の値を返しました</target>
        </trans-unit>
        <trans-unit id="82a207f42b5d4fa46e41089bee741f31f1ace78b" translate="yes" xml:space="preserve">
          <source>All devices with a Google account added returned a value for &lt;code&gt;ANDROID_ID&lt;/code&gt;</source>
          <target state="translated">Googleアカウントが追加されたすべてのデバイスが &lt;code&gt;ANDROID_ID&lt;/code&gt; の値を返しました</target>
        </trans-unit>
        <trans-unit id="9e2a6399aef2e6af31c0bc620b1b6d8c81bf7654" translate="yes" xml:space="preserve">
          <source>All the hardware based identifiers (SSAID, IMEI, MAC, etc) are unreliable for non-google's devices (Everything except Pixels and Nexuses), which are more than 50% of active devices worldwide. Therefore official &lt;a href=&quot;https://developer.android.com/training/articles/user-data-ids&quot;&gt;Android identifiers best practices&lt;/a&gt; clearly states:</source>
          <target state="translated">すべてのハードウェアベースの識別子（SSAID、IMEI、MACなど）は、世界中のアクティブなデバイスの50％を超えるGoogle以外のデバイス（PixelとNexusを除くすべて）では信頼できません。 したがって、公式の&lt;a href=&quot;https://developer.android.com/training/articles/user-data-ids&quot;&gt;Android識別子のベストプラクティス&lt;/a&gt;には、次のように明記されています。</target>
        </trans-unit>
        <trans-unit id="1b721bff82659fe3b5c324c29d407b7ffd71e37e" translate="yes" xml:space="preserve">
          <source>Also you might consider the Wi-Fi adapter's MAC address. Retrieved thusly:</source>
          <target state="translated">また、Wi-FiアダプタのMACアドレスを考慮するかもしれません。このように取得しました。</target>
        </trans-unit>
        <trans-unit id="0384ddde4f6c46d85c48c9f0e81874ca1cb837a8" translate="yes" xml:space="preserve">
          <source>And for full details of how to implement the backup agent see &lt;em&gt;&lt;a href=&quot;http://developer.android.com/guide/topics/data/backup.html&quot;&gt;Data Backup&lt;/a&gt;&lt;/em&gt;. I particularly recommend the section at the bottom on testing as the backup does not happen instantaneously and so to test you have to force the backup.</source>
          <target state="translated">また、バックアップエージェントの実装方法の詳細については、 &lt;em&gt;&lt;a href=&quot;http://developer.android.com/guide/topics/data/backup.html&quot;&gt;データバックアップを&lt;/a&gt;&lt;/em&gt;参照してください。 バックアップは瞬時に実行されないため、テストを実行するにはバックアップを強制する必要があるため、テストの下部にあるセクションを特にお勧めします。</target>
        </trans-unit>
        <trans-unit id="287d37fcbbd0b457575f30632d52a2581be37066" translate="yes" xml:space="preserve">
          <source>And use the code below in a background thread:</source>
          <target state="translated">そして、以下のコードをバックグラウンドスレッドで使用します。</target>
        </trans-unit>
        <trans-unit id="a2ff67e89682f23c7d347c28c1e4eb8cef1210bf" translate="yes" xml:space="preserve">
          <source>Another way is to use &lt;code&gt;/sys/class/android_usb/android0/iSerial&lt;/code&gt; in an app without any permissions whatsoever.</source>
          <target state="translated">別の方法は、権限なしでアプリで &lt;code&gt;/sys/class/android_usb/android0/iSerial&lt;/code&gt; を使用することです。</target>
        </trans-unit>
        <trans-unit id="15316009acf564b5ec5c638dfc827a10d8ab311c" translate="yes" xml:space="preserve">
          <source>As Dave Webb mentions, the &lt;a href=&quot;https://android-developers.blogspot.com/2011/03/identifying-app-installations.html&quot;&gt;Android Developer Blog has an article&lt;/a&gt; that covers this.  Their preferred solution is to track app installs rather than devices, and that will work well for most use cases.  The blog post will show you the necessary code to make that work, and I recommend you check it out.</source>
          <target state="translated">Dave Webbが言及しているように、 &lt;a href=&quot;https://android-developers.blogspot.com/2011/03/identifying-app-installations.html&quot;&gt;Android開発者ブログには&lt;/a&gt;これをカバーする記事があります。 彼らが好むソリューションは、デバイスではなくアプリのインストールを追跡することであり、ほとんどのユースケースでうまく機能します。 ブログの投稿には、その機能を実現するために必要なコードが表示されます。ぜひチェックしてください。</target>
        </trans-unit>
        <trans-unit id="e7798ee7e23de9bd2dfada829db8987b37fcd47f" translate="yes" xml:space="preserve">
          <source>As Richard mentions below, don't forget that you need permission to read the &lt;code&gt;TelephonyManager&lt;/code&gt; properties, so add this to your manifest:</source>
          <target state="translated">Richardが以下で言及するように、 &lt;code&gt;TelephonyManager&lt;/code&gt; プロパティを読み取るための権限が必要であることを忘れないでください。そのため、これをマニフェストに追加してください：</target>
        </trans-unit>
        <trans-unit id="a2123c71994da4ed1f169f9aa935b0767903ddce" translate="yes" xml:space="preserve">
          <source>As example &lt;code&gt;CVE-2018-9489&lt;/code&gt; which affects all the WIFI based techniques mentioned above.</source>
          <target state="translated">例として、上記のすべてのWIFIベースの手法に影響する &lt;code&gt;CVE-2018-9489&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82e65ec7745c482ede932c1bda8de37db0c79df5" translate="yes" xml:space="preserve">
          <source>As far as I've been able to determine, all affected devices have &lt;a href=&quot;https://issuetracker.google.com/issues/36920653&quot;&gt;the same ANDROID_ID&lt;/a&gt;, which is &lt;a href=&quot;https://www.google.com/search?sourceid=chrome&amp;amp;ie=UTF-8&amp;amp;q=9774d56d682e549c&quot;&gt;9774d56d682e549c&lt;/a&gt;.  Which is also the same device id reported by the emulator, btw.</source>
          <target state="translated">私が判断できる限り、影響を受けるすべてのデバイスは&lt;a href=&quot;https://issuetracker.google.com/issues/36920653&quot;&gt;同じANDROID_IDを&lt;/a&gt;持っています。これは&lt;a href=&quot;https://www.google.com/search?sourceid=chrome&amp;amp;ie=UTF-8&amp;amp;q=9774d56d682e549c&quot;&gt;9774d56d682e549c&lt;/a&gt;です。 これは、エミュレーターによって報告された同じデバイスIDでもあります。</target>
        </trans-unit>
        <trans-unit id="60dc22dc2be6b68254c05392e8b934f87a0ef9f0" translate="yes" xml:space="preserve">
          <source>At &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_I/O&quot;&gt;Google I/O&lt;/a&gt; Reto Meier released a robust answer to how to approach this which should meet most developers needs to track users across installations. Anthony Nolan shows the direction in his answer, but I thought I'd write out the full approach so that others can easily see how to do it (it took me a while to figure out the details).</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Google_I/O&quot;&gt;Google I / Oで、&lt;/a&gt; Reto Meierは、インストール全体でユーザーを追跡するほとんどの開発者のニーズを満たす必要がある、これにアプローチする方法に対する堅牢な回答をリリースしました。 アンソニーノーランは彼の答えに方向性を示していますが、他の人が簡単にその方法を理解できるように、完全なアプローチを書き出そうと思いました（詳細を理解するのにしばらく時間がかかりました）。</target>
        </trans-unit>
        <trans-unit id="bc88674eb70c904f011dc5ee3fb4f27aba9862f2" translate="yes" xml:space="preserve">
          <source>At least the following devices are known to have this file world-readable:</source>
          <target state="translated">少なくとも以下のデバイスでは、このファイルがworld-readableであることが知られています。</target>
        </trans-unit>
        <trans-unit id="b831a6047597da45c8ebb40fb3b3f371f45a7ca5" translate="yes" xml:space="preserve">
          <source>Based on Google's recommendations, I implemented a class that will generate a unique UUID for each device, using ANDROID_ID as the seed where appropriate, falling back on TelephonyManager.getDeviceId() as necessary, and if that fails, resorting to a randomly generated unique UUID that is persisted across app restarts (but not app re-installations).</source>
          <target state="translated">Googleの推奨事項に基づいて、私は各デバイスに一意のUUIDを生成するクラスを実装しました。必要に応じてTelephonyManager.getDeviceId()にフォールバックし、失敗した場合はランダムに生成された一意のUUIDに頼り、アプリの再起動(アプリの再インストールではなく)にわたって永続化されます。</target>
        </trans-unit>
        <trans-unit id="ce0e5f8df217bf7f4b4bc0e5b9db109dc4e72700" translate="yes" xml:space="preserve">
          <source>Based on my tests of devices (all phones, at least one of which is not activated):</source>
          <target state="translated">デバイス(すべての電話機、少なくとも1つは起動していない)の私のテストに基づいています。</target>
        </trans-unit>
        <trans-unit id="4a41bd95f5fe6b7b904cbf8306ccd3f50f598759" translate="yes" xml:space="preserve">
          <source>Beginning August 1st, 2014, the Google Play Developer Program Policy
  requires all new app uploads and updates to use the advertising ID in
  lieu of any other persistent identifiers for any advertising purposes.
  Learn more</source>
          <target state="translated">2014年8月1日より、Google Play デベロッパー プログラム ポリシーでは、新しいアプリのアップロードとアップデートには、広告目的で他の永続的な識別子の代わりに広告 ID を使用することが義務付けられています。詳細はこちら</target>
        </trans-unit>
        <trans-unit id="5551d514845c47662940105033550cdb6568d20e" translate="yes" xml:space="preserve">
          <source>But I strongly recommend a method suggested by Google, see &lt;em&gt;&lt;a href=&quot;http://android-developers.blogspot.mx/2011/03/identifying-app-installations.html&quot;&gt;Identifying App Installations&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">ただし、Googleが提案する方法を強くお勧めします。 &lt;em&gt;&lt;a href=&quot;http://android-developers.blogspot.mx/2011/03/identifying-app-installations.html&quot;&gt;アプリインストールの識別を&lt;/a&gt;&lt;/em&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="c1190cce9e57205b886e4861b18c71cf98724858" translate="yes" xml:space="preserve">
          <source>But i recommend to use:</source>
          <target state="translated">しかし、私は使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="e4f0c2ef1b6ba41d408d174704493fdeecddd1f5" translate="yes" xml:space="preserve">
          <source>Changed the Pseudo</source>
          <target state="translated">擬似的に変更した</target>
        </trans-unit>
        <trans-unit id="d797b89f3211afa4ec1e56bf65e028e8ed315137" translate="yes" xml:space="preserve">
          <source>Changes:</source>
          <target state="translated">Changes:</target>
        </trans-unit>
        <trans-unit id="ca567dda33cdf7058994a40bb9ef4db135c7d283" translate="yes" xml:space="preserve">
          <source>Code:</source>
          <target state="translated">Code:</target>
        </trans-unit>
        <trans-unit id="b3faa22d95bd029d5e8eb421fac2504f3d17d490" translate="yes" xml:space="preserve">
          <source>Do Android devices have a unique ID, and if so, what is a simple way to access it using Java?</source>
          <target state="translated">Android端末は固有のIDを持っているのか、持っている場合はJavaを使って簡単にアクセスする方法を教えてください。</target>
        </trans-unit>
        <trans-unit id="ee4b6d17a79863a088ad5f4cb3971a3a274cea1b" translate="yes" xml:space="preserve">
          <source>Edited the code to change on API</source>
          <target state="translated">API上で変更するためにコードを編集しました</target>
        </trans-unit>
        <trans-unit id="81d8557b9b477cf320e57ebec08f61219c93cad4" translate="yes" xml:space="preserve">
          <source>Finally create a user ID, if it doesn't already exist, and store it in the SharedPreferences:</source>
          <target state="translated">最後に、まだ存在しない場合はユーザーIDを作成し、それをSharedPreferencesに格納します。</target>
        </trans-unit>
        <trans-unit id="4d508e5126e2607ecdbc5585d6f5feddb0141747" translate="yes" xml:space="preserve">
          <source>For &lt;strong&gt;TRACKING HARDWARE&lt;/strong&gt;, this is a great idea</source>
          <target state="translated">&lt;strong&gt;TRACKING HARDWAREの&lt;/strong&gt;場合、これは素晴らしいアイデアです</target>
        </trans-unit>
        <trans-unit id="a5aaa337d1440bdae5d23e8ace9adf091f4c1bb2" translate="yes" xml:space="preserve">
          <source>For detailed instructions on how to get a unique identifier for each Android device your application is installed from, see the official Android Developers Blog posting &lt;em&gt;&lt;a href=&quot;http://android-developers.blogspot.com/2011/03/identifying-app-installations.html&quot;&gt;Identifying App Installations&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">アプリケーションのインストール元であるAndroidデバイスごとに一意の識別子を取得する方法の詳細については、Android開発者の公式ブログの投稿「 &lt;em&gt;&lt;a href=&quot;http://android-developers.blogspot.com/2011/03/identifying-app-installations.html&quot;&gt;アプリのインストールの識別&lt;/a&gt;&lt;/em&gt; 」を参照してください。</target>
        </trans-unit>
        <trans-unit id="c7fcb4dff4d000ebe9767dab18b43055f96799e0" translate="yes" xml:space="preserve">
          <source>For hardware recognition of a specific Android device you could check the MAC Addresses.</source>
          <target state="translated">特定のAndroidデバイスのハードウェア認識については、MACアドレスを確認することができます。</target>
        </trans-unit>
        <trans-unit id="74a63bc03f2c45c8de27ed0ee3cd9f09b7d7ae05" translate="yes" xml:space="preserve">
          <source>For more information on this approach see &lt;a href=&quot;http://www.google.com/events/io/2011/sessions/android-protips-advanced-topics-for-expert-android-app-developers.html&quot;&gt;Reto's talk&lt;/a&gt;.</source>
          <target state="translated">このアプローチの詳細については、 &lt;a href=&quot;http://www.google.com/events/io/2011/sessions/android-protips-advanced-topics-for-expert-android-app-developers.html&quot;&gt;Retoの講演を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c761e900a9e6f2abf00dadb6a1e61c902d515440" translate="yes" xml:space="preserve">
          <source>Full disclosure: my app used the below approach originally but no longer uses this approach, and we now use the approach outlined in the &lt;a href=&quot;http://android-developers.blogspot.com/2011/03/identifying-app-installations.html&quot;&gt;Android Developer Blog&lt;/a&gt; entry that &lt;a href=&quot;https://stackoverflow.com/a/5626208/231078&quot;&gt;emmby's answer&lt;/a&gt; links to (namely, generating and saving a &lt;a href=&quot;http://developer.android.com/reference/java/util/UUID.html#randomUUID()&quot;&gt;&lt;code&gt;UUID#randomUUID()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">完全な開示：私のアプリは元々以下のアプローチを使用していましたが、現在はこのアプローチを使用していません。現在は、 &lt;a href=&quot;https://stackoverflow.com/a/5626208/231078&quot;&gt;emmbyの回答&lt;/a&gt;リンクへの &lt;a href=&quot;http://android-developers.blogspot.com/2011/03/identifying-app-installations.html&quot;&gt;Android開発者ブログ&lt;/a&gt;エントリで概説されているアプローチを使用しています（つまり、 &lt;a href=&quot;http://developer.android.com/reference/java/util/UUID.html#randomUUID()&quot;&gt; &lt;code&gt;UUID#randomUUID()&lt;/code&gt; の&lt;/a&gt;生成と保存）。</target>
        </trans-unit>
        <trans-unit id="2c2cd906ea84d8bcee34e2068a1fa4560468873b" translate="yes" xml:space="preserve">
          <source>Galaxy Nexus</source>
          <target state="translated">ギャラクシーネクサス</target>
        </trans-unit>
        <trans-unit id="44fffff309134b9b2bdf71b19d330caa1f1f4db7" translate="yes" xml:space="preserve">
          <source>Google Player Services InstanceID</source>
          <target state="translated">Google Player Services InstanceID</target>
        </trans-unit>
        <trans-unit id="64bb16ae288df58d9c0fb9528840bd40020a3ef4" translate="yes" xml:space="preserve">
          <source>Google believes that OEMs have patched the issue for many or most of their devices, but I was able to verify that as of the beginning of April 2011, at least, it's still quite easy to find devices that have the broken ANDROID_ID.</source>
          <target state="translated">Googleは、OEMが多くの、またはほとんどのデバイスの問題をパッチしたと考えていますが、私が確認できたのは、少なくとも2011年4月の初めの時点では、壊れたandroid_idを持っているデバイスを見つけるのはまだかなり簡単です。</target>
        </trans-unit>
        <trans-unit id="66ffbf021486edd946d859959189cdbdaa6ac774" translate="yes" xml:space="preserve">
          <source>Google will give you a backup service key which you need to add to the manifest. You also need to tell the application to use the BackupAgent as follows:</source>
          <target state="translated">Googleは、マニフェストに追加する必要があるバックアップサービスキーを提供します。また、以下のようにアプリケーションにBackupAgentを使用するように指示する必要があります。</target>
        </trans-unit>
        <trans-unit id="0cc10b27cdcc1e9484e50c527f7df63edcd51bd5" translate="yes" xml:space="preserve">
          <source>HTC One V</source>
          <target state="translated">HTCワンV</target>
        </trans-unit>
        <trans-unit id="b76ab65957a69ff57e8c72352794d437fd34c788" translate="yes" xml:space="preserve">
          <source>Hardware</source>
          <target state="translated">Hardware</target>
        </trans-unit>
        <trans-unit id="c328e6f1d27b686f33f8c2a1cb31439f110901b3" translate="yes" xml:space="preserve">
          <source>Here are a few things to take in mind:</source>
          <target state="translated">ここでは、いくつかの注意点をご紹介します。</target>
        </trans-unit>
        <trans-unit id="db30e0d3f173e7a651d727b69350a9ac513b2027" translate="yes" xml:space="preserve">
          <source>Here is how I am generating the unique id:</source>
          <target state="translated">私がユニークIDを生成している方法は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="909ed0a3f13ac0a179921a37eecac87855d385d5" translate="yes" xml:space="preserve">
          <source>Here is the code that Reto Meier used in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_I/O&quot;&gt;Google I/O&lt;/a&gt; presentation this year to get a unique id for the user:</source>
          <target state="translated">Reto Meierがユーザーの一意のIDを取得するために今年の&lt;a href=&quot;https://en.wikipedia.org/wiki/Google_I/O&quot;&gt;Google I / O&lt;/a&gt;プレゼンテーションで使用したコードは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="c38334779e436ea91f7bfab6257a7dad9862f212" translate="yes" xml:space="preserve">
          <source>How about the &lt;a href=&quot;http://en.wikipedia.org/wiki/International_Mobile_Equipment_Identity&quot;&gt;IMEI&lt;/a&gt;. That is unique for Android or other mobile devices.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/International_Mobile_Equipment_Identity&quot;&gt;IMEIは&lt;/a&gt;どうですか。 これはAndroidやその他のモバイルデバイスに固有のものです。</target>
        </trans-unit>
        <trans-unit id="7748c168ff521cd3dda63c31c7fb08b724c2706a" translate="yes" xml:space="preserve">
          <source>However, the blog post goes on to discuss solutions if you need a device identifier rather than an app installation identifier.  I spoke with someone at Google to get some additional clarification on a few items in the event that you need to do so.  Here's what I discovered about device identifiers that's NOT mentioned in the aforementioned blog post:</source>
          <target state="translated">しかし、ブログ記事では、アプリのインストール識別子ではなく、デバイス識別子が必要な場合の解決策について述べています。必要な場合に備えて、いくつかの項目について追加の説明を得るために、Googleの担当者と話をしました。ここでは、前述のブログ記事では触れられていないデバイス識別子について発見したことを紹介します。</target>
        </trans-unit>
        <trans-unit id="156b25fd784ead3f040e53e4d7236506840f56f2" translate="yes" xml:space="preserve">
          <source>I did not yet have a chance to test GSM devices with no SIM, a GSM device with no Google account added, or any of the devices in airplane mode.</source>
          <target state="translated">私はまだSIMなしのGSMデバイス、Googleアカウントが追加されていないGSMデバイス、または飛行機モードでデバイスのいずれかをテストする機会を持っていませんでした。</target>
        </trans-unit>
        <trans-unit id="a4c6aa4b572309ea35cf741ad3d2a12472e946d4" translate="yes" xml:space="preserve">
          <source>I don't know whether it is actually supported (=not null) by all devices with API level &amp;gt;= 9 though.</source>
          <target state="translated">ただし、APIレベルが9以上のすべてのデバイスで実際にサポートされている（= nullではない）かどうかはわかりません。</target>
        </trans-unit>
        <trans-unit id="3a733cbbb39274e68cf086005cf1e1f3376f3f67" translate="yes" xml:space="preserve">
          <source>I have tried to reference every link that I took information from. If you are missing and need to be included, please comment!</source>
          <target state="translated">情報を取ったリンクは全て参考にしてみました。不足していたり、含まれている必要がある場合は、コメントをお願いします</target>
        </trans-unit>
        <trans-unit id="c9e6270ca55fb5962a1695210945e5b160b251aa" translate="yes" xml:space="preserve">
          <source>I know there isn't any 'perfect' way of getting a unique ID without using permissions; however, sometimes we only really need to track the device installation. When it comes to creating a unique ID, we can create a 'pseudo unique id' based solely off of information that the Android API gives us without using extra permissions. This way, we can show the user respect and try to offer a good user experience as well.</source>
          <target state="translated">パーミッションを使わずにユニークなIDを取得する「完璧な」方法がないことは知っていますが、デバイスのインストールを追跡する必要がある場合もあります。ユニークなIDを作成することになると、余分なパーミッションを使用せずにAndroid APIが与えてくれる情報だけに基づいて「擬似的にユニークなID」を作成することができます。このようにして、ユーザーに敬意を示し、良いユーザー体験を提供しようとすることができます。</target>
        </trans-unit>
        <trans-unit id="bfa122338cdf92af7137efd94b974b0d33bd5fd1" translate="yes" xml:space="preserve">
          <source>I myself prefer using an existing OpenUDID implementation (see &lt;a href=&quot;https://github.com/ylechelle/OpenUDID&quot;&gt;https://github.com/ylechelle/OpenUDID&lt;/a&gt;) for Android (see &lt;a href=&quot;https://github.com/vieux/OpenUDID&quot;&gt;https://github.com/vieux/OpenUDID&lt;/a&gt;). It is easy to integrate and makes use of the &lt;code&gt;ANDROID_ID&lt;/code&gt; with fallbacks for those issues mentioned above.</source>
          <target state="translated">私自身は、Android用の既存のOpenUDID実装（ &lt;a href=&quot;https://github.com/ylechelle/OpenUDID&quot;&gt;https://github.com/ylechelle/OpenUDIDを&lt;/a&gt;参照）を使用することを好みます （ &lt;a href=&quot;https://github.com/vieux/OpenUDID&quot;&gt;https://github.com/vieux/OpenUDIDを&lt;/a&gt;参照）。 &lt;code&gt;ANDROID_ID&lt;/code&gt; は統合が簡単で、上記の問題のフォールバックを利用できます。</target>
        </trans-unit>
        <trans-unit id="6b606db7e3a8dffabbb25480301dd8f04d9879aa" translate="yes" xml:space="preserve">
          <source>I personally find this acceptable but not ideal. No one identifier provided by Android works in all instances as most are dependent on the phone's radio states (Wi-Fi on/off, cellular on/off, Bluetooth on/off). The others, like &lt;code&gt;Settings.Secure.ANDROID_ID&lt;/code&gt; must be implemented by the manufacturer and are not guaranteed to be unique.</source>
          <target state="translated">私は個人的にはこれは受け入れられるが、理想的ではないと思います。 ほとんどの場合、Androidによって提供される識別子はどれも機能しません。ほとんどがスマートフォンの無線状態（Wi-Fiオン/オフ、携帯電話オン/オフ、Bluetoothオン/オフ）に依存しているためです。 その他、 &lt;code&gt;Settings.Secure.ANDROID_ID&lt;/code&gt; などは製造元が実装する必要があり、一意であるとは限りません。</target>
        </trans-unit>
        <trans-unit id="e938574a512fc75c74a4248fc0bef6cc438366b9" translate="yes" xml:space="preserve">
          <source>I think this is sure fire way of building a skeleton for a unique ID...  check it out.</source>
          <target state="translated">ユニークなIDのための骨格を作るための確実な方法だと思います...チェックしてみてください。</target>
        </trans-unit>
        <trans-unit id="f81d00de22f916abb3004846fde32e53ec7ae94d" translate="yes" xml:space="preserve">
          <source>I use the following code to get the &lt;code&gt;IMEI&lt;/code&gt; or use Secure.&lt;code&gt;ANDROID_ID&lt;/code&gt; as an alternative, when the device doesn't have phone capabilities:</source>
          <target state="translated">次のコードを使用して &lt;code&gt;IMEI&lt;/code&gt; を取得するか、Secureを使用します。 デバイスに電話機能がない場合の代替としての &lt;code&gt;ANDROID_ID&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="57a804aec5bf6e57ee40407af2a281ca3431eca3" translate="yes" xml:space="preserve">
          <source>IMEI, Mac Addresses, Instance Id, GUIDs, SSAID, Advertising Id, Safety Net API to verify devices.</source>
          <target state="translated">IMEI、Macアドレス、インスタンスID、GUID、SSAID、広告ID、デバイスを検証するSafety Net API。</target>
        </trans-unit>
        <trans-unit id="06071d8f8cd78e028ee7c3525bd3c0ef79dc3ddd" translate="yes" xml:space="preserve">
          <source>If all else fails, if the user does have lower than API 9 (lower than Gingerbread), has reset their device or 'Secure.ANDROID_ID' returns 'null', then simply the ID returned will be solely based off their Android device information. This is where the collisions can happen.</source>
          <target state="translated">他のすべてが失敗した場合、ユーザが API 9 未満 (Gingerbread 未満)のデバイスを使用していたり、デバイスをリセットしていたり、「Secure.ANDROID_ID」が「null」を返したりした場合、返される ID は単純に、ユーザの Android デバイス情報のみに基づいていることになります。このような場合、衝突が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="dc3a0a3dba7c8ea7891c00a199b23c671d5c51a8" translate="yes" xml:space="preserve">
          <source>If all else fails:</source>
          <target state="translated">他のすべてが失敗した場合</target>
        </trans-unit>
        <trans-unit id="762e4f4e43bad11983bc567125f5da4ca9333dd0" translate="yes" xml:space="preserve">
          <source>If the user's Android device is lower than API 9; hopefully, they have not done a factory reset and their 'Secure.ANDROID_ID' will be preserved or not 'null'. (see &lt;a href=&quot;http://developer.android.com/about/dashboards/index.html&quot;&gt;http://developer.android.com/about/dashboards/index.html&lt;/a&gt;)</source>
          <target state="translated">ユーザーのAndroidデバイスがAPI 9より低い場合。 うまくいけば、彼らは出荷時設定へのリセットを行っておらず、「Secure.ANDROID_ID」は保持されるか「null」にならないでしょう。 （ &lt;a href=&quot;http://developer.android.com/about/dashboards/index.html&quot;&gt;http://developer.android.com/about/dashboards/index.htmlを&lt;/a&gt;参照してください）</target>
        </trans-unit>
        <trans-unit id="fa0ea4d56f487e060e2bef1ed328eb75796b719b" translate="yes" xml:space="preserve">
          <source>If their Android device is API 9 or over, this is guaranteed to be unique because of the 'Build.SERIAL' field.</source>
          <target state="translated">AndroidデバイスがAPI 9以上の場合、'Build.SERIAL'フィールドのため、これは一意であることが保証されています。</target>
        </trans-unit>
        <trans-unit id="3575fde2de857ff87c8118647f87e52a16628549" translate="yes" xml:space="preserve">
          <source>If you couple this with a backup strategy to send preferences to the cloud (also described in Reto's &lt;a href=&quot;http://www.google.com/events/io/2011/sessions/android-protips-advanced-topics-for-expert-android-app-developers.html&quot;&gt;talk&lt;/a&gt;, you should have an id that ties to a user and sticks around after the device has been wiped, or even replaced. I plan to use this in analytics going forward (in other words, I have not done that bit yet :).</source>
          <target state="translated">これをバックアップ戦略と組み合わせてプリファレンスをクラウドに送信する場合（Retoの&lt;a href=&quot;http://www.google.com/events/io/2011/sessions/android-protips-advanced-topics-for-expert-android-app-developers.html&quot;&gt;トーク&lt;/a&gt;でも説明されています）、ユーザーに関連付けられ、デバイスがワイプされた後、または交換された後も固執するIDが必要です。これを使用する予定です。今後の分析では（言い換えれば、まだその段階ではありません:)。</target>
        </trans-unit>
        <trans-unit id="3eb06bbafe2a8c1917c4f2423475d42118fed40e" translate="yes" xml:space="preserve">
          <source>If you have a user with a factory reset device, the value may have changed or altered on the rooted device so there may be duplicates entries if you are tracking user installs.</source>
          <target state="translated">工場出荷時にリセットされたデバイスを使用しているユーザーがいる場合、root化されたデバイスで値が変更または変更されている可能性があるため、ユーザーのインストールを追跡している場合、重複したエントリが存在する可能性があります。</target>
        </trans-unit>
        <trans-unit id="4de44081ecbabe0f12a4e9710368ae86429838b2" translate="yes" xml:space="preserve">
          <source>If you need to store the device identification on your remote server, then don't store it as is (plain text), but a &lt;a href=&quot;https://en.wikipedia.org/wiki/Salt_(cryptography)&quot;&gt;hash with salt&lt;/a&gt;.</source>
          <target state="translated">リモートサーバーにデバイスIDを保存する必要がある場合は、そのまま（プレーンテキスト）ではなく、 &lt;a href=&quot;https://en.wikipedia.org/wiki/Salt_(cryptography)&quot;&gt;saltを使用し&lt;/a&gt;たハッシュで保存します。</target>
        </trans-unit>
        <trans-unit id="c69ab1c2ee0514d03ee5cd6b934bf576aa81b87c" translate="yes" xml:space="preserve">
          <source>If you use GCM, then you will eventually need to use this instance ID because you need it in order to get the GCM token (which replaces the old GCM registration ID).</source>
          <target state="translated">GCM を使用している場合は、GCM トークン(旧 GCM 登録 ID に代わるもの)を取得するためにこのインスタンス ID が必要なので、最終的にはこのインスタンス ID を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="528661f594242632fc3a1475ecad83ff4445ee50" translate="yes" xml:space="preserve">
          <source>If you use the ID for the purposes they intend - eg. app authentication, app identification, GCM - I think this 1-3 seconds could be a nuisance (depending on your app, of course).</source>
          <target state="translated">アプリ認証、アプリ識別、GCMなどの目的でIDを使用する場合、この1~3秒は迷惑になると思います(もちろんアプリにもよりますが)。</target>
        </trans-unit>
        <trans-unit id="1ac06007cebb29579c97114d7324ea4840e62e4a" translate="yes" xml:space="preserve">
          <source>Implementing a custom ID generation algorithm (based on device properties that are supposed to be static and won't change -&amp;gt; who knows)</source>
          <target state="translated">カスタムID生成アルゴリズムの実装（静的であることが想定されており、変更されないデバイスプロパティに基づく-&amp;gt;知っている）</target>
        </trans-unit>
        <trans-unit id="18dd7e894b3d90006c19d4622173976d09581f63" translate="yes" xml:space="preserve">
          <source>Important:</source>
          <target state="translated">Important:</target>
        </trans-unit>
        <trans-unit id="75a08b4ae0701d301a9b9dd2a57267b1b16cb80c" translate="yes" xml:space="preserve">
          <source>In every Android device their is at least a &quot;wlan0&quot; Interface witch is the WI-FI chip.
This code works even when WI-FI is not turned on.</source>
          <target state="translated">すべてのAndroidデバイスでは、少なくとも &quot;wlan0 &quot;インターフェースの魔女は、WI-FIチップです。このコードはWI-FIがオンになっていない場合でも動作します。</target>
        </trans-unit>
        <trans-unit id="a63fbc8d29b93f78056c57ad30866d3b8fd12d3e" translate="yes" xml:space="preserve">
          <source>In the current implementation (GPS 7.5) the instance ID is retrieved from a server when your app requests it.  This means that the call above is a blocking call - in my unscientific testing it takes 1-3 seconds if the device is online, and 0.5 - 1.0 seconds if off-line (presumably this is how long it waits before giving up and generating a random ID).  This was tested in North America on Nexus 5 with Android 5.1.1 and GPS 7.5.</source>
          <target state="translated">現在の実装(GPS 7.5)では、インスタンスIDはアプリが要求したときにサーバーから取得されます。これは、上記の呼び出しがブロッキングコールであることを意味します-私の非科学的なテストでは、デバイスがオンラインの場合は1~3秒、オフラインの場合は0.5~1.0秒かかります(おそらくこれは、それが諦めてランダムなIDを生成する前に待っている時間です)。これは北米でAndroid 5.1.1.1とGPS 7.5を搭載したNexus 5でテストしました。</target>
        </trans-unit>
        <trans-unit id="2ae8f70f4300bc2ba3098af2f4adc093761dbe21" translate="yes" xml:space="preserve">
          <source>Instead, I encapsulated the various strategies for getting a (device) ID in an enum - changing the order of the enum constants affects the priority of the various ways of getting the ID. The first non-null ID is returned or an exception is thrown (as per good Java practices of not giving null a meaning). So for instance I have the TELEPHONY one first - but a good default choice would be the ANDROID_ID
&lt;strong&gt;beta:&lt;/strong&gt;</source>
          <target state="translated">代わりに、（デバイス）IDを取得するためのさまざまな戦略を列挙型にカプセル化しました。列挙定数の順序を変更すると、IDを取得するさまざまな方法の優先順位に影響します。 最初のnull以外のIDが返されるか、例外がスローされます（nullに意味を与えないというJavaの適切な慣行に従って）。 たとえば、最初にTELEPHONYを最初に持っていますが、デフォルトの適切な選択はANDROID_ID &lt;strong&gt;ベータ版です。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c29126da6664f6edcac9f12325eb165daa92de65" translate="yes" xml:space="preserve">
          <source>Is there a unique Android device ID</source>
          <target state="translated">Android端末固有のIDはありますか?</target>
        </trans-unit>
        <trans-unit id="b47bb185dbab4ea38c6cbb61b904354a8215bbea" translate="yes" xml:space="preserve">
          <source>It appears to me that Google intends for it to be used for this purpose (identifying your installations), it is cross-platform, and can be used for a number of other purposes (see the links above).</source>
          <target state="translated">Google はこの目的(インストールしたものを識別すること)に使用することを意図しているように見えますが、それはクロスプラットフォームであり、他の多くの目的に使用することができます(上のリンクを参照してください)。</target>
        </trans-unit>
        <trans-unit id="e48e1d7951eaa1e687adda314e217b648f7dd4d3" translate="yes" xml:space="preserve">
          <source>It combines 3 IDs and creates a 32-digit hex string. It has worked very well for me.</source>
          <target state="translated">3つのIDを組み合わせて32桁の16進数の文字列を作成します。これは私にとって非常にうまく機能しています。</target>
        </trans-unit>
        <trans-unit id="2c160ef6ce12d88a829702227c10d5289519ab11" translate="yes" xml:space="preserve">
          <source>It covers five different ID types:</source>
          <target state="translated">5種類のIDをカバーしています。</target>
        </trans-unit>
        <trans-unit id="1a9ced4556496d02cc0a71b2e1e4ff599463200a" translate="yes" xml:space="preserve">
          <source>It identifies an installation rather then a device, but then again, ANDROID_ID (which is the accepted answer) now no longer identifies devices either.  With the ARC runtime a new ANDROID_ID is generated for every installation (&lt;a href=&quot;https://stackoverflow.com/questions/29656101/how-does-android-id-on-arc-chrome-differ-from-android&quot;&gt;details here&lt;/a&gt;), just like this new instance ID.  Also, I think that identifying installations (not devices) is what most of us are actually looking for.</source>
          <target state="translated">これは、デバイスではなくインストールを識別しますが、ANDROID_ID（これは受け入れられた回答です）もデバイスを識別しなくなりました。 ARCランタイムでは、この新しいインスタンスIDと同様に、インストールごとに新しいANDROID_IDが生成されます（ &lt;a href=&quot;https://stackoverflow.com/questions/29656101/how-does-android-id-on-arc-chrome-differ-from-android&quot;&gt;詳細はこちら&lt;/a&gt; ）。 また、（デバイスではなく）設備を特定することは、私たちの多くが実際に求めていることだと思います。</target>
        </trans-unit>
        <trans-unit id="a64f6056588034fc4d220538d26c0b1682bf2e4d" translate="yes" xml:space="preserve">
          <source>It is intended that the advertising ID completely replace existing
  usage of other identifiers for ads purposes (such as the use of ANDROID_ID
  in Settings.Secure) when Google Play Services is available. Cases
  where Google Play Services is unavailable are indicated by a
  GooglePlayServicesNotAvailableException being thrown by
  getAdvertisingIdInfo().</source>
          <target state="translated">広告IDは、Google Play Servicesが利用可能な場合には、広告目的で他の識別子を使用することを完全に置き換えることが意図されています (Settings.SecureでのANDROID_IDの使用など)。GooglePlayサービスが利用できない場合は、getAdvertisingIdInfo()によりGooglePlayServicesNotAvailableExceptionがスローされます。</target>
        </trans-unit>
        <trans-unit id="48ab83801f8db7d5cd0d68add1c88ce8c0ff1d0e" translate="yes" xml:space="preserve">
          <source>It seems that Google intends for this ID to be used to identify installations across Android, Chrome, and iOS.</source>
          <target state="translated">GoogleはこのIDをAndroid、Chrome、iOSにまたがってインストールされたものを識別するために使用する意図があるようです。</target>
        </trans-unit>
        <trans-unit id="661748ef478e8f40ca9ba7610f202aa6326f6fdf" translate="yes" xml:space="preserve">
          <source>It seems the best way is for you to generate one yourself upon installation and subsequently read it when the application is re-launched.</source>
          <target state="translated">インストール時に自分で生成して、アプリケーションを再起動したときに読むのが一番良い方法のようです。</target>
        </trans-unit>
        <trans-unit id="c60f8164d86460485efd8a7405c3f239b0f4e312" translate="yes" xml:space="preserve">
          <source>It will return something like this:  &lt;strong&gt;551F27C060712A72730B0A0F734064B1&lt;/strong&gt;</source>
          <target state="translated">次のようなものが返されます： &lt;strong&gt;551F27C060712A72730B0A0F734064B1&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e469922a6bbfc6a99ddffec61b7d063177d70a1c" translate="yes" xml:space="preserve">
          <source>It works well enough for me.</source>
          <target state="translated">私には十分に機能しています。</target>
        </trans-unit>
        <trans-unit id="5f78b3acf61010d46d7a439aaa6bd62d6aeb0a2d" translate="yes" xml:space="preserve">
          <source>It's a simple question, with no simple answer.</source>
          <target state="translated">単純な質問で、単純な答えはありません。</target>
        </trans-unit>
        <trans-unit id="247f9767730bc5c8c15744b994fbc8656ec12600" translate="yes" xml:space="preserve">
          <source>It's not only unreliable for device identification, but you also must follow the &lt;a href=&quot;https://play.google.com/about/monetization-ads/ads/#!?zippy_activeEl=ad-id#ad-id&quot;&gt;user privacy regarding ad tracking&lt;/a&gt; policy, which states clearly that user can reset or block it at any moment.</source>
          <target state="translated">これはデバイスの識別に信頼できないだけでなく、ユーザーがいつでもリセットまたはブロックできることを明記している&lt;a href=&quot;https://play.google.com/about/monetization-ads/ads/#!?zippy_activeEl=ad-id#ad-id&quot;&gt;広告追跡&lt;/a&gt;ポリシーに関するユーザーのプライバシーに従う必要があります 。</target>
        </trans-unit>
        <trans-unit id="e3a4a1aa378c1161638d051127dad02b5e8af7a4" translate="yes" xml:space="preserve">
          <source>It's unique for the application installation on the device, so when the user uninstall the app - it's wiped out, so it's not 100% reliable, but it's the next best thing.</source>
          <target state="translated">端末にインストールされているアプリに固有のものなので、ユーザーがアプリをアンインストールすると-全滅してしまうので、100%の信頼性はありませんが、次善の策です。</target>
        </trans-unit>
        <trans-unit id="8e2cd4c7ea6ed9c1da9c0b5458920576c63b6da8" translate="yes" xml:space="preserve">
          <source>Last Updated: 6/2/15</source>
          <target state="translated">最終更新日 6215</target>
        </trans-unit>
        <trans-unit id="496c98f39e8e3600d46a85e0a6a8f53c36f64d75" translate="yes" xml:space="preserve">
          <source>Let's go through the full approach. First, we need to create a backup for our SharedPreferences using the Android Backup Service. Start by registering your app via &lt;code&gt;http://developer.android.com/google/backup/signup.html&lt;/code&gt;.</source>
          <target state="translated">完全なアプローチを見てみましょう。 まず、Androidバックアップサービスを使用してSharedPreferencesのバックアップを作成する必要があります。 まず、 &lt;code&gt;http://developer.android.com/google/backup/signup.html&lt;/code&gt; からアプリを登録します。</target>
        </trans-unit>
        <trans-unit id="4d1d40e4e6e4d5b5057568f722d23bc52c97f7bf" translate="yes" xml:space="preserve">
          <source>List of options - reasons why/ why not to use them:</source>
          <target state="translated">オプションの一覧-なぜ使わないのかの理由</target>
        </trans-unit>
        <trans-unit id="8ed8661fcd4fe9d083532cfc96cbc88d049d4b3a" translate="yes" xml:space="preserve">
          <source>Main Issue: Hardware vs Software</source>
          <target state="translated">主な問題 ハードウェアとソフトウェア</target>
        </trans-unit>
        <trans-unit id="9cb382f8ab032841aa8265aab6792980ecc82a07" translate="yes" xml:space="preserve">
          <source>Makes it interesting playing &quot;Pocket Empires&quot; which gives you instant access to someone's account based on the &quot;unique&quot; DeviceID.</source>
          <target state="translated">ユニークなデバイスIDに基づいて誰かのアカウントにすぐにアクセスできる「ポケットエンパイア」をプレイするのが面白くなってきました。</target>
        </trans-unit>
        <trans-unit id="8407cc5c571fc70b49a29b1d8d5c087a101668c0" translate="yes" xml:space="preserve">
          <source>Many other answers here are suggesting to use the &lt;code&gt;AdvertisingIdClient&lt;/code&gt;, which is also incompatible, as its by design should be used only for ads profiling. It's also stated in the &lt;a href=&quot;https://developer.android.com/training/articles/user-data-ids&quot;&gt;official reference&lt;/a&gt;</source>
          <target state="translated">他の多くの答えは、 &lt;code&gt;AdvertisingIdClient&lt;/code&gt; を使用することを提案しています。これは互換性もありません。仕様上、広告プロファイリングにのみ使用する必要があるためです。 &lt;a href=&quot;https://developer.android.com/training/articles/user-data-ids&quot;&gt;公式リファレンスに&lt;/a&gt;も記載されています</target>
        </trans-unit>
        <trans-unit id="8ad1775c5ffeddd50a06ef8242262cdc6b3efc15" translate="yes" xml:space="preserve">
          <source>Mini MK802</source>
          <target state="translated">ミニMK802</target>
        </trans-unit>
        <trans-unit id="20633f608fc0a2559531f24278a3c2e5959dce8a" translate="yes" xml:space="preserve">
          <source>More over, all of the existing answers here are whether out of date or unreliable.</source>
          <target state="translated">もっと言えば、ここにある既存の回答はすべて、時代遅れか信頼できないものばかりです。</target>
        </trans-unit>
        <trans-unit id="9dcd7866a1f6d57e1475eb160f7d5e8cb2eb96a8" translate="yes" xml:space="preserve">
          <source>More specifically, &lt;code&gt;Settings.Secure.ANDROID_ID&lt;/code&gt;. This is a 64-bit quantity that is generated and stored when the device first boots. It is reset when the device is wiped.</source>
          <target state="translated">具体的には、 &lt;code&gt;Settings.Secure.ANDROID_ID&lt;/code&gt; です。 これは、デバイスが最初に起動したときに生成および保存される64ビットの量です。 デバイスがワイプされるとリセットされます。</target>
        </trans-unit>
        <trans-unit id="b532ed3a11e14d9ce0eab31a5498be481833d792" translate="yes" xml:space="preserve">
          <source>Most applications on the market do not use Bluetooth, and so if your application doesn't use Bluetooth and you are including this, the user could become suspicious.</source>
          <target state="translated">市販されているアプリのほとんどはBluetoothを使用していないので、Bluetoothを使用していないアプリでこれを入れているとユーザーが怪しまれる可能性があります。</target>
        </trans-unit>
        <trans-unit id="df90379ebe5f94bce4c858d9844cdc05ecf3ba9b" translate="yes" xml:space="preserve">
          <source>Most of the Build members are strings, what we're doing here is to take their length and transform it via modulo in a digit. We have 13 such digits and we are adding two more in front (35) to have the same size ID as the IMEI (15 digits). There are other possibilities here are well, just have a look at these strings.
Returns something like &lt;code&gt;355715565309247&lt;/code&gt;. No special permission is required, making this approach very convenient.</source>
          <target state="translated">Buildメンバーのほとんどは文字列です。ここで行うのは、その長さを受け取り、モジュロを介して数字に変換することです。 このような数字は13桁あり、IMEIと同じサイズのID（15桁）になるように前に2つ（35）追加します。 ここには他にも可能性があります。これらの文字列を見てください。 &lt;code&gt;355715565309247&lt;/code&gt; のようなものを返します。 特別な許可は必要ないため、このアプローチは非常に便利です。</target>
        </trans-unit>
        <trans-unit id="45ad2b97af05faae0b04ef0eca23dec62b094976" translate="yes" xml:space="preserve">
          <source>Most users hate the fact that it says &quot;Phone Calls&quot; in the permission. Some users give bad ratings, because they believe you are simply stealing their personal information when all you really want to do is track device installs. It is obvious that you are collecting data.</source>
          <target state="translated">ほとんどのユーザーは、パーミッションに「電話」と書かれていることを嫌っています。一部のユーザーは、あなたが本当にしたいのはデバイスのインストールを追跡することだけなのに、あなたは単に個人情報を盗んでいるだけだと信じているので、悪い評価をしています。データを収集しているのは明らかです。</target>
        </trans-unit>
        <trans-unit id="f83d27aeb68503f7856b1a64f2202d260cb1f5a6" translate="yes" xml:space="preserve">
          <source>Motorola Xoom 3G</source>
          <target state="translated">モトローラXoom 3G</target>
        </trans-unit>
        <trans-unit id="b1d9cca4bbe81715372255d8568403f7b52ca07c" translate="yes" xml:space="preserve">
          <source>My device does not have a cell radio.</source>
          <target state="translated">私の端末にはセルラジオがありません。</target>
        </trans-unit>
        <trans-unit id="5ca245e28b63eff96a79947951e1ad46738bf8bc" translate="yes" xml:space="preserve">
          <source>My two cents - NB this is for a &lt;em&gt;device (err) unique ID&lt;/em&gt; - not the installation one as discussed in the &lt;a href=&quot;http://android-developers.blogspot.gr/2011/03/identifying-app-installations.html&quot;&gt;Android developers's blog&lt;/a&gt;.</source>
          <target state="translated">私の2セント-これは&lt;em&gt;デバイス（err）の一意のID&lt;/em&gt; &lt;a href=&quot;http://android-developers.blogspot.gr/2011/03/identifying-app-installations.html&quot;&gt;用&lt;/a&gt;であり、 Android開発者のブログで説明されているインストール用ではありません。</target>
        </trans-unit>
        <trans-unit id="a22ea5efcc531b0a7f05e8d215d271931ba7a266" translate="yes" xml:space="preserve">
          <source>New (for apps with ads AND Google Play Services):</source>
          <target state="translated">新規(広告付きアプリとGoogle Play Servicesのアプリが対象)。</target>
        </trans-unit>
        <trans-unit id="7c1f3d3b5bb9ed8154189e664ae03163e3d63802" translate="yes" xml:space="preserve">
          <source>Nexus S</source>
          <target state="translated">ネクサスS</target>
        </trans-unit>
        <trans-unit id="51bf8e626689b71d70b2d25b5cffc6d0364d6086" translate="yes" xml:space="preserve">
          <source>Note that for devices that have to fallback on the device ID, the unique ID &lt;strong&gt;WILL&lt;/strong&gt; persist across factory resets.  This is something to be aware of.  If you need to ensure that a factory reset will reset your unique ID, you may want to consider falling back directly to the random UUID instead of the device ID.</source>
          <target state="translated">デバイスIDにフォールバックする必要があるデバイスの場合、一意のIDは出荷時の設定にリセットされます。 これは知っておくべきことです。 出荷時設定にリセットして一意のIDを確実にリセットする必要がある場合は、デバイスIDではなくランダムなUUIDに直接フォールバックすることを検討してください。</target>
        </trans-unit>
        <trans-unit id="c7d96cc46215857f3ab29923513d98b7caa4abb4" translate="yes" xml:space="preserve">
          <source>Note: You can always add more IDs to the &lt;code&gt;longId&lt;/code&gt; string. For example, Serial #. wifi adapter address. IMEI. This way you are making it more unique per device.</source>
          <target state="translated">注：いつでも &lt;code&gt;longId&lt;/code&gt; 文字列にさらにIDを追加できます。 たとえば、シリアル番号。 wifiアダプターのアドレス。 IMEI。 このようにして、デバイスごとに固有のものにします。</target>
        </trans-unit>
        <trans-unit id="c2b3b587b0270f11cd6fb7276d052c83fb8e31d3" translate="yes" xml:space="preserve">
          <source>Of note that the &lt;a href=&quot;https://stackoverflow.com/a/5626208/281545&quot;&gt;solution&lt;/a&gt; provided by @emmby falls back in a per application ID as the SharedPreferences are not synchronized across processes (see &lt;a href=&quot;https://stackoverflow.com/a/4695567/281545&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/a/12430507/281545&quot;&gt;here&lt;/a&gt;). So I avoided this altogether.</source>
          <target state="translated">SharedPreferencesはプロセス間で同期されないため、@ emmbyによって提供される&lt;a href=&quot;https://stackoverflow.com/a/5626208/281545&quot;&gt;ソリューション&lt;/a&gt;はアプリケーションIDごとにフォールバックすることに注意してください（ &lt;a href=&quot;https://stackoverflow.com/a/4695567/281545&quot;&gt;ここ&lt;/a&gt;と&lt;a href=&quot;https://stackoverflow.com/a/12430507/281545&quot;&gt;ここを&lt;/a&gt;参照）。 だから私はこれを完全に避けました。</target>
        </trans-unit>
        <trans-unit id="7b858ac6ee952c4e1c29dbed67542329a12e91ca" translate="yes" xml:space="preserve">
          <source>On some devices, it's not available when Wi-Fi is turned off.</source>
          <target state="translated">一部の端末では、Wi-Fiをオフにすると使えなくなります。</target>
        </trans-unit>
        <trans-unit id="fea990c88823f6a996f794658a2b1f4a63161630" translate="yes" xml:space="preserve">
          <source>One thing I'll add - I have one of those unique situations.</source>
          <target state="translated">一つ付け加えておきますが、私にはそのようなユニークな状況の一つがあります。</target>
        </trans-unit>
        <trans-unit id="6b0628d57a71956a4d436825b3621152ec1cdcb9" translate="yes" xml:space="preserve">
          <source>Overall breakdown with Android</source>
          <target state="translated">Androidとの全体的な内訳</target>
        </trans-unit>
        <trans-unit id="d1d4f3a4b1a894473b73554723e896e7999c4e19" translate="yes" xml:space="preserve">
          <source>P.S.
Their are a bunch of other Interfaces you will get from the list containing MACS But this can change between phones.</source>
          <target state="translated">追伸:MACS を含むリストから得られる他のインタフェースの束がありますが、これは電話間で変更することができます。</target>
        </trans-unit>
        <trans-unit id="9438f2fced23130820e071328ec1f2bcf6199b7c" translate="yes" xml:space="preserve">
          <source>Permission:</source>
          <target state="translated">Permission:</target>
        </trans-unit>
        <trans-unit id="93f824548789ff13bb6d1d934795cc90b5617e43" translate="yes" xml:space="preserve">
          <source>Please take a look at the method below:</source>
          <target state="translated">下記の方法を参考にしてみてください。</target>
        </trans-unit>
        <trans-unit id="b9c68184369baf07c4fe98cf6d372fcfa66f85cb" translate="yes" xml:space="preserve">
          <source>Pseudo-Unique ID, that works on all Android devices
Some devices don't have a phone (eg. Tablets) or for some reason, you don't want to include the READ_PHONE_STATE permission. You can still read details like ROM Version, Manufacturer name, CPU type, and other hardware details, that will be well suited if you want to use the ID for a serial key check, or other general purposes. The ID computed in this way won't be unique: it is possible to find two devices with the same ID (based on the same hardware and ROM image) but the changes in real-world applications are negligible. For this purpose you can use the Build class:</source>
          <target state="translated">すべてのAndroidデバイスで動作する疑似ユニークID 一部のデバイスには電話(例:タブレット)がないか、何らかの理由でREAD_PHONE_STATEパーミッションを含めたくない場合があります。あなたはまだROMのバージョン、メーカー名、CPUの種類、および他のハードウェアの詳細のような詳細を読み取ることができます、あなたがシリアルキーのチェック、または他の一般的な目的のためにIDを使用したい場合に適しています。このようにして計算された ID は一意ではありません:同じ ID を持つ 2 つのデバイスを見つけることは可能ですが (同じハードウェアと ROM イメージに基づいて)、実世界のアプリケーションでの変更は無視できる程度です。この目的のために、Build クラスを使用することができます。</target>
        </trans-unit>
        <trans-unit id="828b89426734a1dbf3d781b4c25ec7ed065cbe5d" translate="yes" xml:space="preserve">
          <source>Psuedo code:</source>
          <target state="translated">プセドコード。</target>
        </trans-unit>
        <trans-unit id="1ffe529de2ce9e48aa199df705c1bc6a92bf20fb" translate="yes" xml:space="preserve">
          <source>Released at I/O 2015; on Android requires play services 7.5.</source>
          <target state="translated">IO 2015でリリース;Androidではプレイサービス7.5が必要です。</target>
        </trans-unit>
        <trans-unit id="6de6b60549f50e1d1cbaf1b29181768532c910e9" translate="yes" xml:space="preserve">
          <source>Removed 'Android.SECURE_ID' because of factory resets could cause the value to change</source>
          <target state="translated">工場出荷時にリセットすると値が変更される可能性があるため、「Android.SECURE_ID」を削除しました。</target>
        </trans-unit>
        <trans-unit id="8270d4f261192696bb72cbe06c682b3f122e2a07" translate="yes" xml:space="preserve">
          <source>Reported to be available even when Wi-Fi is not connected. If Joe from the answer above gives this one a try on his many devices, that'd be nice.</source>
          <target state="translated">Wi-Fiが接続されていなくても利用できると報告されています。上の回答のジョーさんが、たくさんのデバイスでこれを試してくれたら嬉しいですね。</target>
        </trans-unit>
        <trans-unit id="134114ca5240a5e4691dd1e37f4c5aa68fc6acc8" translate="yes" xml:space="preserve">
          <source>Requires permission &lt;code&gt;android.permission.ACCESS_WIFI_STATE&lt;/code&gt; in the manifest.</source>
          <target state="translated">マニフェストで &lt;code&gt;android.permission.ACCESS_WIFI_STATE&lt;/code&gt; 権限が必要です。</target>
        </trans-unit>
        <trans-unit id="ee4d3582f9c51303c6568490e833b1f95b0069fd" translate="yes" xml:space="preserve">
          <source>Samsung Galaxy S II</source>
          <target state="translated">サムスンギャラクシーS II</target>
        </trans-unit>
        <trans-unit id="5ce411708b005262ceb84b1c8eb166c785e758e8" translate="yes" xml:space="preserve">
          <source>Several devices by several manufacturers are affected by the ANDROID_ID bug in 2.2.</source>
          <target state="translated">複数のメーカーのいくつかのデバイスが2.2のandroid_idバグの影響を受けています。</target>
        </trans-unit>
        <trans-unit id="7e62cfb084266e44f02a7e371b4bd1adc044c427" translate="yes" xml:space="preserve">
          <source>Since it can be 'null', we can check for 'null' and change its value, but this means it will no longer be unique.</source>
          <target state="translated">'null'になることもあるので、'null'をチェックして値を変えればいいのですが、これでは一意ではなくなってしまいます。</target>
        </trans-unit>
        <trans-unit id="d920418d8f4614d4d0b63e82f9636375e140b2d6" translate="yes" xml:space="preserve">
          <source>Since you cannot have the desired static globally unique and reliable device identifier. Android's official reference suggest:</source>
          <target state="translated">あなたが望む静的なグローバルにユニークで信頼性の高いデバイス識別子を持つことはできませんので。Androidの公式リファレンスが示唆しています。</target>
        </trans-unit>
        <trans-unit id="cdcf5ddba809b2ba77d0382e19fc247a84923e08" translate="yes" xml:space="preserve">
          <source>So &lt;strong&gt;don't use it either&lt;/strong&gt;.</source>
          <target state="translated">したがって&lt;strong&gt;、どちらも使用しないでください&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e16899c26951bab23a1b9380b2fc33c3c1eaa76" translate="yes" xml:space="preserve">
          <source>So &lt;strong&gt;if you're searching for a solution in 2020&lt;/strong&gt;.</source>
          <target state="translated">したがって&lt;strong&gt;、2020年に解決策を探している場合&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7777ad95f1578ad31f8994518a10746131c329c" translate="yes" xml:space="preserve">
          <source>So if you want something unique to the device itself, &lt;code&gt;TM.getDeviceId()&lt;/code&gt;&lt;em&gt;should&lt;/em&gt; be sufficient.  Obviously some users are more paranoid than others, so it might be useful to hash 1 or more of these identifiers, so that the string is still virtually unique to the device, but does not explicitly identify the user's actual device.  For example, using &lt;code&gt;String.hashCode()&lt;/code&gt;, combined with a UUID:</source>
          <target state="translated">したがって、デバイス自体に固有のものが必要な場合は、 &lt;code&gt;TM.getDeviceId()&lt;/code&gt; で十分です。 明らかに、一部のユーザーは他のユーザーより偏執的であるため、これらの識別子の1つ以上をハッシュすると、文字列がデバイスに対して実質的に一意でありながら、ユーザーの実際のデバイスを明示的に識別できない場合があります。 たとえば、UUIDと組み合わせた &lt;code&gt;String.hashCode()&lt;/code&gt; を使用します 。</target>
        </trans-unit>
        <trans-unit id="b4523d93c05eeae3b5f762c60fbb784c35c4eab3" translate="yes" xml:space="preserve">
          <source>So in simpler words: &lt;strong&gt;don't use those techniques&lt;/strong&gt;.</source>
          <target state="translated">簡単に言うと、 &lt;strong&gt;これらのテクニックは使用しないでください&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ad052271e0186ed108ab51a2c5684a90c5a025a" translate="yes" xml:space="preserve">
          <source>Software</source>
          <target state="translated">Software</target>
        </trans-unit>
        <trans-unit id="824e115bb343a6c2b073c90b205c674541dede20" translate="yes" xml:space="preserve">
          <source>Sometimes &lt;strong&gt;TelephonyManger.getDeviceId()&lt;/strong&gt; will return null, so to assure an unique id you will use this method:</source>
          <target state="translated">&lt;strong&gt;TelephonyManger.getDeviceId（）&lt;/strong&gt;がnullを返すことがあるので、一意のIDを保証するには、このメソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="fa282f2cba151c130ce9452ee659d095a0527356" translate="yes" xml:space="preserve">
          <source>Thanks to @stansult for posting &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/a/9186943/950427&quot;&gt;all of our options&lt;/a&gt;&lt;/em&gt; (in this Stack Overflow question).</source>
          <target state="translated">（このスタックオーバーフローの質問に） &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/a/9186943/950427&quot;&gt;すべてのオプション&lt;/a&gt;&lt;/em&gt;を投稿してくれた@stansultに感謝し&lt;em&gt;ます&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="9529b3a28c1cf43145ca418d76d36d8cf35abea2" translate="yes" xml:space="preserve">
          <source>That makes most of the answers above invalid. Also due to different android security updates, some of them require newer and stricter runtime permissions, which can be simply denied by user.</source>
          <target state="translated">そのため、上記の回答のほとんどは無効です。また、別のアンドロイドのセキュリティアップデートのために、それらのいくつかは、単にユーザーによって拒否することができます新しいと厳しいランタイム権限を必要とします。</target>
        </trans-unit>
        <trans-unit id="4e6856a55aeec398595efc5e505f103b1698374f" translate="yes" xml:space="preserve">
          <source>That makes those identifiers not only unreliable, but also unaccessible in many cases.</source>
          <target state="translated">そのため、これらの識別子は信頼性が低いだけでなく、多くの場合アクセスできません。</target>
        </trans-unit>
        <trans-unit id="905daa971c03007ead998008eca6fb60a27cff11" translate="yes" xml:space="preserve">
          <source>The best want to &lt;strong&gt;TRACK AN INDIVIDUAL USER&lt;/strong&gt; with their &lt;strong&gt;consent&lt;/strong&gt; is to simply have them login (make this seamless using OAuth)</source>
          <target state="translated">&lt;strong&gt;同意を得て&lt;/strong&gt; &lt;strong&gt;個々のユーザー&lt;/strong&gt;を&lt;strong&gt;追跡&lt;/strong&gt;するのに最適なのは、単にログインさせることです（OAuthを使用してこれをシームレスにします）。</target>
        </trans-unit>
        <trans-unit id="36bf022d28e15b55eb29741570cafc304868cddb" translate="yes" xml:space="preserve">
          <source>The following code returns the device serial number using a hidden Android API. But, this code don't works on Samsung Galaxy Tab because &quot;ro.serialno&quot; isn't set on this device.</source>
          <target state="translated">以下のコードは、Androidの隠しAPIを使って端末のシリアル番号を返します。ただし、このコードはGalaxy Tabでは &quot;ro.serialno &quot;が設定されていないため、動作しません。</target>
        </trans-unit>
        <trans-unit id="b6577cebf8bae08c3eded7692e3648e217ceef6f" translate="yes" xml:space="preserve">
          <source>The following is an example of writing data to an &lt;em&gt;installation&lt;/em&gt; file that would be stored along with any other data the application saves locally.</source>
          <target state="translated">以下は、アプリケーションがローカルに保存する他のデータとともに保存される&lt;em&gt;インストール&lt;/em&gt;ファイルにデータを書き込む例です。</target>
        </trans-unit>
        <trans-unit id="80fc7d27c0f1418901088d16652afa967d1415b3" translate="yes" xml:space="preserve">
          <source>The official Android Developers Blog now has a full article just about this very subject, &lt;em&gt;&lt;a href=&quot;http://android-developers.blogspot.com/2011/03/identifying-app-installations.html&quot;&gt;Identifying App Installations&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">Android Developersの公式ブログに、このテーマについての記事「 &lt;em&gt;&lt;a href=&quot;http://android-developers.blogspot.com/2011/03/identifying-app-installations.html&quot;&gt;Identifying App Installations」の&lt;/a&gt;&lt;/em&gt;完全な記事が掲載されました。</target>
        </trans-unit>
        <trans-unit id="074be9cec2bc29c9ee4c0e9dbb3fe0548fb0d38d" translate="yes" xml:space="preserve">
          <source>The unique device ID of an Android OS device as String, using &lt;code&gt;TelephonyManager&lt;/code&gt; and &lt;code&gt;ANDROID_ID&lt;/code&gt;, is obtained by:</source>
          <target state="translated">&lt;code&gt;TelephonyManager&lt;/code&gt; と &lt;code&gt;ANDROID_ID&lt;/code&gt; を使用して、Android OSデバイスの一意のデバイスIDを文字列として取得するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="bc09c662db608413c569349598f23d8b62ac1e78" translate="yes" xml:space="preserve">
          <source>Then you need to create the backup agent and tell it to use the helper agent for sharedpreferences:</source>
          <target state="translated">次に、バックアップエージェントを作成し、共有プリファレンスのヘルパーエージェントを使用するように指示する必要があります。</target>
        </trans-unit>
        <trans-unit id="d8fc0f501e5874abfd9379770f3cee8f3c897aec" translate="yes" xml:space="preserve">
          <source>There are 30+ answers here and some are same and some are unique. This answer is based on few of those answers. One of them being @Lenn Dolling's answer.</source>
          <target state="translated">ここには30以上の回答があり、同じものもあればユニークなものもあります。この回答はそのうちのいくつかの回答に基づいています。そのうちの一つは@Lenn Dollingさんの回答です。</target>
        </trans-unit>
        <trans-unit id="29056e3e33a93c541a24754b8c06e180ba1ae93d" translate="yes" xml:space="preserve">
          <source>There are a lot of different approaches to work around those &lt;code&gt;ANDROID_ID&lt;/code&gt; issues (may be &lt;code&gt;null&lt;/code&gt; sometimes or devices of a specific model always return the same ID) with pros and cons:</source>
          <target state="translated">これらの &lt;code&gt;ANDROID_ID&lt;/code&gt; の問題を回避するための多くの異なるアプローチがあり &lt;code&gt;null&lt;/code&gt; （ nullになることも、特定のモデルのデバイスが常に同じIDを返すこともあります）。</target>
        </trans-unit>
        <trans-unit id="01ed028e38c624820207a524646c40ef83ca4867" translate="yes" xml:space="preserve">
          <source>There are many answers to this question, most of which will only work &quot;some&quot; of the time, and unfortunately that's not good enough.</source>
          <target state="translated">この質問に対する答えはたくさんありますが、そのほとんどは「一部」しか機能しませんし、残念ながらそれでは十分ではありません。</target>
        </trans-unit>
        <trans-unit id="e201f88d418a41f759fed71d40f5ade63db27d32" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s rather useful info &lt;strong&gt;&lt;a href=&quot;http://www.pocketmagic.net/?p=1662&quot;&gt;here&lt;/a&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://www.pocketmagic.net/?p=1662&quot;&gt;ここに&lt;/a&gt;&lt;/strong&gt;はかなり役立つ情報があり&lt;strong&gt;ます&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="562a763319bb1d2ce353484fa678f6b147833dd2" translate="yes" xml:space="preserve">
          <source>This User_ID will now be persistent across installations, even if the user moves device.</source>
          <target state="translated">このUser_IDは、ユーザーがデバイスを移動した場合でも、インストール間で永続的に保持されるようになりました。</target>
        </trans-unit>
        <trans-unit id="302601b1cc75faca7a1d398bd9ba7abf9898f8f1" translate="yes" xml:space="preserve">
          <source>This allows you to have an 'almost unique' ID from the user without taking anything that is private. You can create your own anonymous ID from device information.</source>
          <target state="translated">これにより、プライベートなものを取ることなく、ユーザーから「ほぼユニーク」なIDを取得することができます。デバイス情報から自分だけの匿名IDを作成することができます。</target>
        </trans-unit>
        <trans-unit id="d4bd714a0dd7483ee18a4fdbf629832954e33bdb" translate="yes" xml:space="preserve">
          <source>This approach will give you an anonymous, secure user ID which will be persistent for the user across different devices (based on the primary Google account) and across installs. The basic approach is to generate a random user ID and to store this in the apps' shared preferences. You then use Google's backup agent to store the shared preferences linked to the Google account in the cloud.</source>
          <target state="translated">このアプローチでは、匿名で安全なユーザー ID が得られます。このユーザー ID は、異なるデバイス間(プライマリの Google アカウントに基づいて)やインストール間でユーザーのために永続的に保持されます。基本的なアプローチは、ランダムなユーザー ID を生成し、これをアプリの共有環境設定に保存することです。その後、Googleのバックアップエージェントを使用して、Googleアカウントにリンクされた共有環境設定をクラウドに保存します。</target>
        </trans-unit>
        <trans-unit id="9f50ac534bb8c59be341b2d0712eafda3bd4512a" translate="yes" xml:space="preserve">
          <source>This could be the second best option, but you are still collecting and storing a unique identifier that comes directly from a user. This is obvious that you are collecting data.</source>
          <target state="translated">これは2番目に良い選択肢かもしれませんが、ユーザーから直接送られてくるユニークな識別子を収集して保存していることに変わりはありません。これは、データを収集していることは明らかです。</target>
        </trans-unit>
        <trans-unit id="a2e7b7e94544edb39f6971fe9517b25bad113277" translate="yes" xml:space="preserve">
          <source>To complete the backup you need to create an instance of BackupManager in your main Activity:</source>
          <target state="translated">バックアップを完了するには、メインアクティビティにBackupManagerのインスタンスを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="13ab41a1d9198a55ef12f9d41d9d016266a0a92e" translate="yes" xml:space="preserve">
          <source>To do this in Java one would just use a FileInputStream to open the iSerial file and read out the characters. Just be sure you wrap it in an exception handler, because not all devices have this file.</source>
          <target state="translated">Javaでこれを行うには、FileInputStreamを使用してiSerialファイルを開き、文字を読み出すだけです。すべてのデバイスがこのファイルを持っているわけではないので、例外ハンドラでラップするようにしてください。</target>
        </trans-unit>
        <trans-unit id="b58b17f345f421d7ea4731213d42eb8ef4c1f87e" translate="yes" xml:space="preserve">
          <source>To understand the available Unique Ids in Android devices. Use this official guide.</source>
          <target state="translated">Androidデバイスで利用可能なユニークIDを理解するために。この公式ガイドを使用してください。</target>
        </trans-unit>
        <trans-unit id="3ebe8b4731cdde611da33593d1f3f3a78ae88a34" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;FirebaseInstanceId&lt;/code&gt; add the &lt;a href=&quot;https://firebase.google.com/support/release-notes/android#latest_sdk_versions&quot;&gt;latest firebase-messaging dependency&lt;/a&gt; into your gradle</source>
          <target state="translated">&lt;code&gt;FirebaseInstanceId&lt;/code&gt; を使用するには、 &lt;a href=&quot;https://firebase.google.com/support/release-notes/android#latest_sdk_versions&quot;&gt;最新のfirebase-messaging依存関係&lt;/a&gt;をグラドルに追加します</target>
        </trans-unit>
        <trans-unit id="1f853b1bfb2a0e3a98db7409ef50f8db8efb056d" translate="yes" xml:space="preserve">
          <source>Today it's not only a best practice, you actually must to do it by law according to &lt;a href=&quot;https://gdpr.eu/eu-gdpr-personal-data/&quot;&gt;GDPR - identifiers&lt;/a&gt; and similar regulations.</source>
          <target state="translated">今日では、これはベストプラクティスであるだけでなく、実際には&lt;a href=&quot;https://gdpr.eu/eu-gdpr-personal-data/&quot;&gt;GDPR（識別子&lt;/a&gt;および類似の規制）に従って法律で行う必要があります。</target>
        </trans-unit>
        <trans-unit id="68d47c10de20824156d87337e3f252405833a920" translate="yes" xml:space="preserve">
          <source>Toshiba AT300</source>
          <target state="translated">東芝AT300</target>
        </trans-unit>
        <trans-unit id="45ccc2fea58a079a8f7060830d2466031b3a736e" translate="yes" xml:space="preserve">
          <source>Turns out that even though my Viewsonic G Tablet reports a DeviceID that is not Null, every single G Tablet reports the same number.</source>
          <target state="translated">私のViewsonic G TabletがNullではないDeviceIDを報告しているにもかかわらず、すべてのGタブレットが同じ番号を報告していることが判明しました。</target>
        </trans-unit>
        <trans-unit id="9f1880d3d84b85c4d9d8a877ac7b0d41644b35ef" translate="yes" xml:space="preserve">
          <source>User could change email - HIGHLY unlikely</source>
          <target state="translated">ユーザーがメールを変更できる可能性は非常に低い</target>
        </trans-unit>
        <trans-unit id="ce1e8bd228fc7c368c4c0db36b399db47b4e3058" translate="yes" xml:space="preserve">
          <source>Users can change their hardware, Android tablet or phone, so unique IDs based on hardware are not good ideas for &lt;strong&gt;TRACKING USERS&lt;/strong&gt;</source>
          <target state="translated">ユーザーはハードウェア、Androidタブレット、または電話を変更できるため、ハードウェアに基づく一意のIDはユーザーを&lt;strong&gt;追跡する&lt;/strong&gt;ための良いアイデアではありません</target>
        </trans-unit>
        <trans-unit id="8dcf78b4b2188b958880e49748a252aefba98c7e" translate="yes" xml:space="preserve">
          <source>Users can wipe/change their ROM if they are rooted</source>
          <target state="translated">root化されている場合、ユーザーは自分のROMをwipechangeすることができます。</target>
        </trans-unit>
        <trans-unit id="e7eb67e2f0bd5ad6aae1393f7bce212f2e980fe6" translate="yes" xml:space="preserve">
          <source>Users could change phone numbers - HIGHLY unlikely</source>
          <target state="translated">ユーザーが電話番号を変更できる可能性は極めて低い</target>
        </trans-unit>
        <trans-unit id="3f6ae3a6aaf32da958424d244bb3083082ba470d" translate="yes" xml:space="preserve">
          <source>Using the code below, you can get the unique device ID of an Android OS device as a string.</source>
          <target state="translated">以下のコードを使用すると、Android OSデバイスのユニークなデバイスIDを文字列として取得することができます。</target>
        </trans-unit>
        <trans-unit id="6b960faa3ac35c8978dd66d8ba117ea264270677" translate="yes" xml:space="preserve">
          <source>Using:</source>
          <target state="translated">Using:</target>
        </trans-unit>
        <trans-unit id="374831e7e5ef5c7511cef96a4ee5925588f2e76c" translate="yes" xml:space="preserve">
          <source>Very possible, may contain collisions - See my method posted below!</source>
          <target state="translated">非常に可能性があり、衝突が含まれている可能性があります-以下に投稿された私の方法を参照してください!</target>
        </trans-unit>
        <trans-unit id="591e68bf2b0c7304e63142b9d6a9d22e41a8c1dd" translate="yes" xml:space="preserve">
          <source>Warning, users can reset:</source>
          <target state="translated">警告、ユーザーはリセットすることができます。</target>
        </trans-unit>
        <trans-unit id="07a15f5d49c1738f4d1b8b8a0f1122ca9168c573" translate="yes" xml:space="preserve">
          <source>With a pseudo-unique id, you really only run into the fact that there may be duplicates based on the fact that there are similar devices. You can tweak the combined method to make it more unique; however, some developers need to track device installs and this will do the trick or performance based on similar devices.</source>
          <target state="translated">擬似的に一意な ID を使用すると、似たようなデバイスがあるという事実に基づいて重複があるかもしれないという事実に直面するだけです。しかし、一部の開発者はデバイスのインストールを追跡する必要があり、これは類似したデバイスに基づいてトリックやパフォーマンスを行うことになります。</target>
        </trans-unit>
        <trans-unit id="84f20f82be25d2fdf6c2dd296bacc22769b6a570" translate="yes" xml:space="preserve">
          <source>You can also see my blog post &lt;em&gt;&lt;a href=&quot;http://insitusec.blogspot.com/2013/01/leaking-android-hardware-serial-number.html&quot;&gt;Leaking Android hardware serial number to unprivileged apps&lt;/a&gt;&lt;/em&gt; where I discuss what other files are available for information.</source>
          <target state="translated">また、私のブログの記事&lt;em&gt;&lt;a href=&quot;http://insitusec.blogspot.com/2013/01/leaking-android-hardware-serial-number.html&quot;&gt;「Androidハードウェアのシリアル番号を権限のないアプリ&lt;/a&gt;&lt;/em&gt;に&lt;em&gt;漏らす&lt;/em&gt; 」を参照して、他に入手可能なファイルについて説明してください。</target>
        </trans-unit>
        <trans-unit id="78d9deceaffad86d123cd0bee2083628aeef9feb" translate="yes" xml:space="preserve">
          <source>You can track users across platforms (iOS, Android, Windows, and Web)</source>
          <target state="translated">プラットフォーム(iOS、Android、Windows、Web)をまたいでユーザーを追跡することができます。</target>
        </trans-unit>
        <trans-unit id="379004bd3f37392fadc9d014330f1a47f898b470" translate="yes" xml:space="preserve">
          <source>import libs</source>
          <target state="translated">インポートリブ</target>
        </trans-unit>
        <trans-unit id="3fcb64d53ad87994fc0bcbc5f34fea67765a96ca" translate="yes" xml:space="preserve">
          <source>in AndroidManifest.xml</source>
          <target state="translated">AndroidManifest.xmlで</target>
        </trans-unit>
        <trans-unit id="0f70d4331be095195b9db0d315b40035a3f6c635" translate="yes" xml:space="preserve">
          <source>might result in something like: &lt;code&gt;00000000-54b3-e7c7-0000-000046bffd97&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;00000000-54b3-e7c7-0000-000046bffd97&lt;/code&gt; のような結果になる可能性があります</target>
        </trans-unit>
        <trans-unit id="ec4d23caadb883c263af5bd03cdfe1bc2b9b9c0e" translate="yes" xml:space="preserve">
          <source>now in your code:</source>
          <target state="translated">をコードに追加しました。</target>
        </trans-unit>
        <trans-unit id="88cc1dabe4fc988630e5d8d02389533e0523b9c6" translate="yes" xml:space="preserve">
          <source>you can do it that way:</source>
          <target state="translated">あなたはそのようにすることができます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
