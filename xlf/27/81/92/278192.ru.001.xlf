<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/278192">
    <body>
      <group id="278192">
        <trans-unit id="3d9d2543cd9f33e80da313ba517d5dc88b1923cd" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;All Branches&lt;/code&gt;' option is checked.</source>
          <target state="translated">Опция &amp;laquo; &lt;code&gt;All Branches&lt;/code&gt; &amp;raquo; отмечена.</target>
        </trans-unit>
        <trans-unit id="50cb7d88e548e886c2b9dd62592e340487b8f773" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;Show Whole Project&lt;/code&gt;' option is not checked.</source>
          <target state="translated">Параметр &amp;laquo; &lt;code&gt;Show Whole Project&lt;/code&gt; &amp;raquo; не установлен.</target>
        </trans-unit>
        <trans-unit id="3f9898a6633eef8d6e644f1d8b3f0ba85398c5eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.kernel.org/pub/software/scm/git/docs/git-whatchanged.html&quot;&gt;&lt;code&gt;git whatchanged -p filename&lt;/code&gt;&lt;/a&gt; is also equivalent to &lt;a href=&quot;http://git-scm.com/docs/git-log&quot;&gt;&lt;code&gt;git log -p filename&lt;/code&gt;&lt;/a&gt; in this case.</source>
          <target state="translated">&lt;a href=&quot;http://www.kernel.org/pub/software/scm/git/docs/git-whatchanged.html&quot;&gt; &lt;code&gt;git whatchanged -p filename&lt;/code&gt; &lt;/a&gt; также эквивалентен &lt;a href=&quot;http://git-scm.com/docs/git-log&quot;&gt; &lt;code&gt;git log -p filename&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f8cbe27670bf752f3ee2e7a9afb6da4fcf83b7e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git diff -U &amp;lt;filename&amp;gt;&lt;/code&gt; give you a unified diff.</source>
          <target state="translated">&lt;code&gt;git diff -U &amp;lt;filename&amp;gt;&lt;/code&gt; даст вам унифицированный diff.</target>
        </trans-unit>
        <trans-unit id="9ab0beb3dfd9d75c7e6a022d01bd40f5aa8a68bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://www.syntevo.com/smartgit/&quot;&gt;SmartGit&lt;/a&gt;:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://www.syntevo.com/smartgit/&quot;&gt;SmartGit&lt;/a&gt;:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59d10d1a55a9f4f2f09cbc7e16fe9fd6c8b98aae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Homebrew (OS X)&lt;/strong&gt;: &lt;code&gt;$ brew install tig&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Homebrew (OS X)&lt;/strong&gt; : &lt;code&gt;$ brew install tig&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d339bf632cffe1e16b96430aae9f59173359b31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;apt-get&lt;/strong&gt;: &lt;code&gt;# apt-get install tig&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;apt-get&lt;/strong&gt; : &lt;code&gt;# apt-get install tig&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a2cdae6daebf8e3de72ac219889c8a6a2cd3765f" translate="yes" xml:space="preserve">
          <source>Add this alias to your .gitconfig:</source>
          <target state="translated">Добавь этот псевдоним в свой .gitconfig:</target>
        </trans-unit>
        <trans-unit id="8e570f192283cf80cc37abc2a6ed39b3572b9ab5" translate="yes" xml:space="preserve">
          <source>And I'm currently using:</source>
          <target state="translated">И в настоящее время я использую:</target>
        </trans-unit>
        <trans-unit id="907d3b69806ca2991bb202f776e09b1d6384749f" translate="yes" xml:space="preserve">
          <source>And use the command like this:</source>
          <target state="translated">И используй команду вот так:</target>
        </trans-unit>
        <trans-unit id="ef5b76f3c64ba20c4b2d53d26c102f3d9254d481" translate="yes" xml:space="preserve">
          <source>Behavior is to output the commit comments when relevant changes are found and start offering &lt;em&gt;vimdiff&lt;/em&gt; runs for each changed file (that's &lt;em&gt;git difftool&lt;/em&gt; behavior, but it works here).</source>
          <target state="translated">Поведение состоит в том, чтобы выводить комментарии коммитов при обнаружении соответствующих изменений и начинать предлагать запуск &lt;em&gt;vimdiff&lt;/em&gt; для каждого измененного файла (это поведение &lt;em&gt;git difftool&lt;/em&gt; , но оно работает здесь).</target>
        </trans-unit>
        <trans-unit id="7b611c28effa01e83dd6ed3c702afd1a867eaed9" translate="yes" xml:space="preserve">
          <source>But you can also use either gitk (gui) or tig (text-ui) to give much more human-readable ways of looking at it.</source>
          <target state="translated">Но вы также можете использовать либо gitk (gui),либо tig (text-ui),чтобы дать гораздо более понятный человеку способ взглянуть на него.</target>
        </trans-unit>
        <trans-unit id="ba61754bb8fbfc6f454767dd12bcf472c3fb43c2" translate="yes" xml:space="preserve">
          <source>By default, it follows the file through the renames, and the &lt;code&gt;Blame&lt;/code&gt; tab allows to see the name at a given revision.</source>
          <target state="translated">По умолчанию он следует за файлом через переименования, а вкладка &amp;laquo; &lt;code&gt;Blame&lt;/code&gt; &amp;raquo; позволяет увидеть имя в данной ревизии.</target>
        </trans-unit>
        <trans-unit id="c232c15d8257abcac2bdd66df56ef7e4635b241d" translate="yes" xml:space="preserve">
          <source>Called with no args, this will start from the beginning of the repo history, otherwise it will start with whatever abbreviated commit hash you provide and proceed to the present - you can ctrl-C at any time to exit.  Any args after the first will limit the difference reports to include only the files listed among those args (which I think is what the OP wanted, and I'd recommend for all but tiny projects).  If you're checking changes to specific files &lt;strong&gt;and&lt;/strong&gt; want to start from the beginning, you'll need to provide an empty string for arg1.  If you're not a vim user, you can replace &lt;em&gt;vimdiff&lt;/em&gt; with your favorite diff tool.</source>
          <target state="translated">Вызванный без аргументов, он начнется с начала истории репо, в противном случае он начнется с любого сокращенного хэша коммита, который вы предоставите, и перейдет к настоящему моменту - вы можете в любое время выйти из ctrl-C. Любые аргументы после первого будут ограничивать отчеты о различиях только файлами, перечисленными среди этих аргументов (что, как я думаю, и было тем, что хотел OP, и я бы порекомендовал все, кроме небольших проектов). Если вы проверяете изменения в определенных файлах &lt;strong&gt;и&lt;/strong&gt; хотите начать с самого начала, вам нужно предоставить пустую строку для arg1. Если вы не являетесь пользователем vim, вы можете заменить &lt;em&gt;vimdiff&lt;/em&gt; своим любимым инструментом diff.</target>
        </trans-unit>
        <trans-unit id="9e8a14fed965c39f9d195257da284bac22347c82" translate="yes" xml:space="preserve">
          <source>For this I'd use:</source>
          <target state="translated">Для этого я бы использовал:</target>
        </trans-unit>
        <trans-unit id="cf5d18bed33cf32bad08e39d8d8e033c4d19ecf5" translate="yes" xml:space="preserve">
          <source>For your case, &lt;code&gt;tig &amp;lt;filename&amp;gt;&lt;/code&gt; might be what you're looking for.</source>
          <target state="translated">В вашем случае, &lt;code&gt;tig &amp;lt;filename&amp;gt;&lt;/code&gt; может быть тем, что вы ищете.</target>
        </trans-unit>
        <trans-unit id="f561722d503883a91b5447da50af1480ac6de4c4" translate="yes" xml:space="preserve">
          <source>How can I view the change history of an individual file in Git, complete details with what has changed?</source>
          <target state="translated">Как я могу просмотреть историю изменений отдельного файла в Git'е,подробнее о том,что изменилось?</target>
        </trans-unit>
        <trans-unit id="6c2a3d6b045eb89c60b0319ee29277161f1bb709" translate="yes" xml:space="preserve">
          <source>I have found a very simple solution to quickly find history of the file.</source>
          <target state="translated">Я нашел очень простое решение для быстрого поиска истории файла.</target>
        </trans-unit>
        <trans-unit id="c72d2bd24775db54e7ddc9bc05306cea03461588" translate="yes" xml:space="preserve">
          <source>I have got as far as:</source>
          <target state="translated">Я зашёл так далеко:</target>
        </trans-unit>
        <trans-unit id="e59701d8194fdae5084e88d2ea48cda13a65de6c" translate="yes" xml:space="preserve">
          <source>I wrote &lt;a href=&quot;https://github.com/jianli/git-playback&quot;&gt;git-playback&lt;/a&gt; for this exact purpose</source>
          <target state="translated">Я написал &lt;a href=&quot;https://github.com/jianli/git-playback&quot;&gt;Git-воспроизведения&lt;/a&gt; для этой цели</target>
        </trans-unit>
        <trans-unit id="a8cd81b6b8ce010c0e4a05a58657ebbc4cd0e8f6" translate="yes" xml:space="preserve">
          <source>I'm probably about where the OP was when this started, looking for something simple that would let me use &lt;em&gt;git difftool&lt;/em&gt; with &lt;em&gt;vimdiff&lt;/em&gt; to review changes to files in my repo starting from a specific commit.  I wasn't too happy with answers I was finding, so I threw this &lt;strong&gt;git inc&lt;/strong&gt;remental &lt;strong&gt;rep&lt;/strong&gt;orter (gitincrep) script together and it's been useful to me:</source>
          <target state="translated">Я, вероятно, о том, где был OP, когда это началось, в поисках чего-то простого, что позволило бы мне использовать &lt;em&gt;git difftool&lt;/em&gt; с &lt;em&gt;vimdiff&lt;/em&gt; для просмотра изменений в файлах в моем репо, начиная с определенного коммита. Я не был слишком доволен ответами, которые нашел, поэтому я собрал этот скрипт &lt;strong&gt;git inc&lt;/strong&gt; remental &lt;strong&gt;rep&lt;/strong&gt; orter (gitincrep), и он мне пригодился:</target>
        </trans-unit>
        <trans-unit id="0929b06e1c9a3d39f775d7b0a7093d8ceab102eb" translate="yes" xml:space="preserve">
          <source>I'm trying to make the transition from MS SourceSafe and that used to be a simple &lt;code&gt;right-click&lt;/code&gt; &amp;rarr; &lt;code&gt;show history&lt;/code&gt;.</source>
          <target state="translated">Я пытаюсь сделать переход с MS SourceSafe, и это был простой &lt;code&gt;right-click&lt;/code&gt; &amp;rarr; &lt;code&gt;show history&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b9c0ddeccf9d0e2407f2c4080a6fb0e35d7c9d7" translate="yes" xml:space="preserve">
          <source>If you are using eclipse with the git plugin, it has an excellent comparison view with history. Right click the file and select &quot;compare with&quot;=&amp;gt; &quot;history&quot;</source>
          <target state="translated">Если вы используете eclipse с плагином git, он имеет превосходное представление сравнения с историей. Щелкните правой кнопкой мыши файл и выберите &amp;laquo;сравнить с&amp;raquo; =&amp;gt; &amp;laquo;история&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="a21b9093f8406e02592174ccc05238fced88400f" translate="yes" xml:space="preserve">
          <source>If you prefer to stay text-based, you may want to use &lt;strong&gt;&lt;a href=&quot;https://github.com/jonas/tig&quot;&gt;tig&lt;/a&gt;&lt;/strong&gt;.</source>
          <target state="translated">Если вы предпочитаете оставаться текстовым, вы можете использовать &lt;strong&gt;&lt;a href=&quot;https://github.com/jonas/tig&quot;&gt;tig&lt;/a&gt;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="06513fd53256b56f2382ecd38ba91da7c0608ba7" translate="yes" xml:space="preserve">
          <source>If you use SourceTree to visualize your repository (it's free and quite good) you can right click a file and select &lt;strong&gt;Log Selected&lt;/strong&gt;</source>
          <target state="translated">Если вы используете SourceTree для визуализации своего хранилища (это бесплатно и довольно неплохо), вы можете щелкнуть правой кнопкой мыши файл и выбрать &lt;strong&gt;Журнал Выбран&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c4984f66360f919ef5d13b0f40807e8da46ba613" translate="yes" xml:space="preserve">
          <source>If you use TortoiseGit you should be able to right click on the file and do &lt;code&gt;TortoiseGit --&amp;gt; Show Log&lt;/code&gt;. In the window that pops up, make sure:</source>
          <target state="translated">Если вы используете TortoiseGit, вы сможете щелкнуть правой кнопкой мыши по файлу и сделать &lt;code&gt;TortoiseGit --&amp;gt; Show Log&lt;/code&gt; . В появившемся окне убедитесь, что:</target>
        </trans-unit>
        <trans-unit id="9656d3c058925e01df61b32b5c782c4e0bcbc732" translate="yes" xml:space="preserve">
          <source>If you want to see the whole history of a file, &lt;em&gt;including&lt;/em&gt; on &lt;em&gt;all other&lt;/em&gt; branches use:</source>
          <target state="translated">Если вы хотите просмотреть всю историю файла, в &lt;em&gt;том числе и&lt;/em&gt; во &lt;em&gt;всех других&lt;/em&gt; ветках, используйте:</target>
        </trans-unit>
        <trans-unit id="a879610c781443f3beabfa7df17b56d994f47859" translate="yes" xml:space="preserve">
          <source>If you're using the git GUI (on Windows) under the Repository menu you can use &quot;Visualize master's History&quot;.  Highlight a commit in the top pane and a file in the lower right and you'll see the diff for that commit in the lower left.</source>
          <target state="translated">Если вы используете Git GUI (на Windows)под меню Repository,вы можете использовать &quot;Visualize Master's History&quot;.Выделите коммит в верхней панели и файл в правом нижнем углу,а в левом нижнем углу вы увидите разницу для этого коммита.</target>
        </trans-unit>
        <trans-unit id="b63b3f52461317be40155db65724abad2131f0b6" translate="yes" xml:space="preserve">
          <source>In other words, if the file named &lt;code&gt;bar&lt;/code&gt; was once named &lt;code&gt;foo&lt;/code&gt;, then &lt;code&gt;git log -p bar&lt;/code&gt; (without the &lt;code&gt;--follow&lt;/code&gt; option) will only show the file's history up to the point where it was renamed -- it won't show the file's history when it was known as &lt;code&gt;foo&lt;/code&gt;. Using &lt;code&gt;git log --follow -p bar&lt;/code&gt; will show the file's entire history, including any changes to the file when it was known as &lt;code&gt;foo&lt;/code&gt;. The &lt;code&gt;-p&lt;/code&gt; option ensures that diffs are included for each change.</source>
          <target state="translated">Другими словами, если файл с именем &lt;code&gt;bar&lt;/code&gt; когда-то назывался &lt;code&gt;foo&lt;/code&gt; , то &lt;code&gt;--follow&lt;/code&gt; &lt;code&gt;git log -p bar&lt;/code&gt; (без опции --follow ) будет показывать историю файла только до точки, в которой он был переименован - он не будет отображать История файла, когда он был известен как &lt;code&gt;foo&lt;/code&gt; . Использование &lt;code&gt;git log --follow -p bar&lt;/code&gt; покажет всю историю файла, включая любые изменения в файле, когда он был известен как &lt;code&gt;foo&lt;/code&gt; . Опция &lt;code&gt;-p&lt;/code&gt; обеспечивает включение различий для каждого изменения.</target>
        </trans-unit>
        <trans-unit id="10b10cde131cf603e0cd3ee953af7677b22fd4e3" translate="yes" xml:space="preserve">
          <source>In the menu enable to display unchanged files: View / Show unchanged files</source>
          <target state="translated">В меню включите отображение файлов без изменений:Показать файлы без изменений</target>
        </trans-unit>
        <trans-unit id="da9d2c806c9ca3a715b990f7377a5ddd66eb4470" translate="yes" xml:space="preserve">
          <source>It has some minor gotchas, like showing &lt;code&gt;fatal: Not a valid object name&lt;/code&gt; in the &lt;code&gt;View&lt;/code&gt; tab when clicking on the deletion revision, but I can live with that. :-)</source>
          <target state="translated">У него есть несколько незначительных ошибок, таких как показ &lt;code&gt;fatal: Not a valid object name&lt;/code&gt; на вкладке &amp;laquo; &lt;code&gt;View&lt;/code&gt; &amp;raquo; при нажатии на ревизию удаления, но я могу с этим смириться. :-)</target>
        </trans-unit>
        <trans-unit id="c5170d47368bacc184b557bae26cb55c8b9aaf6d" translate="yes" xml:space="preserve">
          <source>It should be colored on red and green. If it's not, run: &lt;code&gt;git config color.ui auto&lt;/code&gt; first.</source>
          <target state="translated">Он должен быть окрашен в красный и зеленый. Если это не так, сначала запустите: &lt;code&gt;git config color.ui auto&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d8f0778b71f832c5b4caceb4c33cd118c8a927a" translate="yes" xml:space="preserve">
          <source>It will show as uncommitted changes on your sourcetree</source>
          <target state="translated">Он покажет как нефиксированные изменения в вашем дереве исходников.</target>
        </trans-unit>
        <trans-unit id="518643293a3b80fb0e4b811c9dc6f767c640621a" translate="yes" xml:space="preserve">
          <source>It would show the history of all the commits.</source>
          <target state="translated">Это покажет историю всех обязательств.</target>
        </trans-unit>
        <trans-unit id="69d4650334ca7af2f36bb97bceb4b7f26a81adb9" translate="yes" xml:space="preserve">
          <source>Lately I discovered &lt;code&gt;tig&lt;/code&gt; and found it very useful. There are some cases I'd wish it does A or B but most of the time it's rather neat.</source>
          <target state="translated">В последнее время я обнаружил &lt;code&gt;tig&lt;/code&gt; и нашел его очень полезным. В некоторых случаях мне бы хотелось, чтобы это делалось A или B, но в большинстве случаев это довольно аккуратно.</target>
        </trans-unit>
        <trans-unit id="b9fb34274dcd3fad3e617ac883d52d8956970ff0" translate="yes" xml:space="preserve">
          <source>Make a random change in the file</source>
          <target state="translated">Сделать случайное изменение в файле</target>
        </trans-unit>
        <trans-unit id="102b33e8b3a60913a071f79bb77f653582ea7716" translate="yes" xml:space="preserve">
          <source>More details at &lt;a href=&quot;https://www.techpurohit.com/list-some-useful-git-commands&quot;&gt;https://www.techpurohit.com/list-some-useful-git-commands&lt;/a&gt;</source>
          <target state="translated">Более подробная информация на &lt;a href=&quot;https://www.techpurohit.com/list-some-useful-git-commands&quot;&gt;https://www.techpurohit.com/list-some-useful-git-commands&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="996718383eca1dcb0cbdc1f04bae53d299cbf7f5" translate="yes" xml:space="preserve">
          <source>Or browse detailed repo history: &lt;code&gt;tig&lt;/code&gt;</source>
          <target state="translated">Или просмотрите подробную историю репо: &lt;code&gt;tig&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="00fcdda14949d42c1610edfba9ca80d41d59564f" translate="yes" xml:space="preserve">
          <source>Or:</source>
          <target state="translated">Or:</target>
        </trans-unit>
        <trans-unit id="a520a3a3229dd5e59c0c84e59603b886dd90c5d6" translate="yes" xml:space="preserve">
          <source>Quick Install:</source>
          <target state="translated">Быстрая установка:</target>
        </trans-unit>
        <trans-unit id="823f8269a30661e132c61497cbae8ee6ca4e0839" translate="yes" xml:space="preserve">
          <source>Result returned would be the list of commits that modified this particular part. Command :</source>
          <target state="translated">Результатом возврата будет список коммитов,которые изменили эту часть.Команда :</target>
        </trans-unit>
        <trans-unit id="53c3f12659701fc4786d5e8c56f7ee9c233c4231" translate="yes" xml:space="preserve">
          <source>Right click on the file and select 'Log Selected'</source>
          <target state="translated">Щелкните правой кнопкой мыши на файле и выберите &quot;Log Selected&quot;.</target>
        </trans-unit>
        <trans-unit id="4adc12e1d577535542728194a7eb79dcf9bf7700" translate="yes" xml:space="preserve">
          <source>Right click the file and select 'Log' or press 'Ctrl-L'</source>
          <target state="translated">Щелкните правой кнопкой мыши на файле и выберите 'Log' или нажмите 'Ctrl-L'.</target>
        </trans-unit>
        <trans-unit id="ce3df4d818316dd10c7bca5ae8539c894dc07dbb" translate="yes" xml:space="preserve">
          <source>See</source>
          <target state="translated">See</target>
        </trans-unit>
        <trans-unit id="b6419b3b81c52cefae0da0205084adfb75db266a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;gitk&lt;/code&gt; but text based. Supports colors in terminal!</source>
          <target state="translated">Похож на &lt;code&gt;gitk&lt;/code&gt; , но основан на тексте. Поддерживает цвета в терминале!</target>
        </trans-unit>
        <trans-unit id="530e3cc53044ad9513bde41a5e2a91317986227a" translate="yes" xml:space="preserve">
          <source>SourceTree users</source>
          <target state="translated">Пользователи SourceTree</target>
        </trans-unit>
        <trans-unit id="ce66f3def7b28e5504a11663228c58d6f583a79e" translate="yes" xml:space="preserve">
          <source>Summary of other answers after reading through them and playing a bit:</source>
          <target state="translated">Сводка других ответов после их прочтения и немного поиграть:</target>
        </trans-unit>
        <trans-unit id="6724c570133b9688c71101ffaa731c4942695a95" translate="yes" xml:space="preserve">
          <source>The answer I was looking for that wasn't in this thread is to see changes in files that I'd staged for commit. i.e.</source>
          <target state="translated">Ответ,который я искал не в этом потоке,заключается в том,чтобы увидеть изменения в файлах,которые я инсценировал для коммита,т.е.</target>
        </trans-unit>
        <trans-unit id="9206092056d34d3fb3dbf8041353b11aa145e577" translate="yes" xml:space="preserve">
          <source>The display (below) is much friendlier than gitk and most the other options listed. Unfortunately (at this time) there is no easy way to launch this view from the command line &amp;mdash; SourceTree's CLI currently just opens repos.</source>
          <target state="translated">Дисплей (ниже) намного удобнее, чем GITK и большинство других перечисленных опций. К сожалению (в настоящее время) не существует простого способа запустить это представление из командной строки - CLI SourceTree в настоящее время просто открывает репозитории.</target>
        </trans-unit>
        <trans-unit id="22ddb69223f4f6beef48d67a9d13f1e8c5974586" translate="yes" xml:space="preserve">
          <source>The output will look almost exactly the same as the gitk output. Enjoy.</source>
          <target state="translated">Вывод будет выглядеть почти точно так же,как и вывод гитка.Наслаждайтесь.</target>
        </trans-unit>
        <trans-unit id="0a34a9bc15e2e9cb04b3f64178b220c2e475a375" translate="yes" xml:space="preserve">
          <source>The usual command line command would be</source>
          <target state="translated">Обычная команда командной строки была бы</target>
        </trans-unit>
        <trans-unit id="6763d6717ddf4e76d6dbc8d3e5dc5d9474e41d6e" translate="yes" xml:space="preserve">
          <source>This approach is probably pretty naive, but looking through a lot of the solutions here and at a related post, many involved installing new tools on a system where I don't have admin access, with interfaces that had their own learning curve.  The above script did what I wanted without dealing with any of that.  I'll look into the many excellent suggestions here when I need something more sophisticated - but I think this is directly responsive to the OP.</source>
          <target state="translated">Такой подход,наверное,довольно наивен,но просматривая множество решений здесь и в соответствующей заметке,многие из них были связаны с установкой новых инструментов на систему,к которой у меня нет доступа администратора,с интерфейсами,у которых была своя кривая обучения.Вышеуказанный скрипт делал то,что я хотел,не имея с этим ничего общего.Я рассмотрю здесь множество отличных предложений,когда мне понадобится что-то более сложное-но я думаю,что это напрямую связано с операционной системой.</target>
        </trans-unit>
        <trans-unit id="01079e380958a3399c1ba2f91f24cc53c68c5a78" translate="yes" xml:space="preserve">
          <source>This has the benefit of both displaying the results in the command line (like &lt;code&gt;git log -p&lt;/code&gt;) while also letting you step through each commit using the arrow keys (like &lt;code&gt;gitk&lt;/code&gt;).</source>
          <target state="translated">Это дает преимущество как в отображении результатов в командной строке (например, в &lt;code&gt;git log -p&lt;/code&gt; ), так и в том, что вы можете проходить каждый коммит с помощью клавиш со стрелками (например, &lt;code&gt;gitk&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5a27b95bc773b006676e52278be4d3b6e894e450" translate="yes" xml:space="preserve">
          <source>This will show the &lt;strong&gt;entire&lt;/strong&gt; history of the file (including history beyond renames and with diffs for each change).</source>
          <target state="translated">Это покажет &lt;strong&gt;всю&lt;/strong&gt; историю файла (включая историю за переименованием и различия для каждого изменения).</target>
        </trans-unit>
        <trans-unit id="9f1a203ad6cb0a77f45c9e85899bf32f05d97b2f" translate="yes" xml:space="preserve">
          <source>To show what revision and author last modified each line of a file:</source>
          <target state="translated">Чтобы показать,какая ревизия и автор в последний раз изменяли каждую строку файла:</target>
        </trans-unit>
        <trans-unit id="36f7289d9cfcc16b57ff192e9fd25b53b47150c7" translate="yes" xml:space="preserve">
          <source>Under debian/ubuntu, the install command for these lovely tools is as expected :</source>
          <target state="translated">В debianubuntu команда установки для этих замечательных инструментов,как и ожидалось,:</target>
        </trans-unit>
        <trans-unit id="89d2bcf31e2c0e964fef82ac00f086c2d8d9ea80" translate="yes" xml:space="preserve">
          <source>Use it to view history on a single file: &lt;code&gt;tig [filename]&lt;/code&gt;</source>
          <target state="translated">Используйте его для просмотра истории в одном файле: &lt;code&gt;tig [filename]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24a6a9a291acf1dfc2d52669c7b93e504ae965b6" translate="yes" xml:space="preserve">
          <source>View the change history of a file using Git versioning</source>
          <target state="translated">Просмотр истории изменений файла с помощью Git-версионирования</target>
        </trans-unit>
        <trans-unit id="51577d47db12dc36a5c6664eda0a340385a8dfd7" translate="yes" xml:space="preserve">
          <source>With the excellent &lt;a href=&quot;http://code.google.com/p/gitextensions/&quot;&gt;Git Extensions&lt;/a&gt;, you go to a point in the history where the file still existed (if it have been deleted, otherwise just go to HEAD), switch to the &lt;code&gt;File tree&lt;/code&gt; tab, right-click on the file and choose &lt;code&gt;File history&lt;/code&gt;.</source>
          <target state="translated">С отличными &lt;a href=&quot;http://code.google.com/p/gitextensions/&quot;&gt;Git Extensions&lt;/a&gt; вы переходите к точке в истории, где файл еще существовал (если он был удален, в противном случае просто перейдите в HEAD), переключитесь на вкладку &amp;laquo; &lt;code&gt;File tree&lt;/code&gt; &amp;raquo;, щелкните правой кнопкой мыши файл и выберите &amp;laquo; &lt;code&gt;File history&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="b762b8b254131e07b18d947802908a7039d6f0b8" translate="yes" xml:space="preserve">
          <source>You can also see when a specific line of code inside a file was changed with &lt;a href=&quot;http://www.kernel.org/pub/software/scm/git/docs/git-blame.html&quot;&gt;&lt;code&gt;git blame filename&lt;/code&gt;&lt;/a&gt;. This will print out a short commit id, the author, timestamp, and complete line of code for every line in the file. 
This is very useful after you've found a bug and you want to know when it was introduced (or who's fault it was).</source>
          <target state="translated">Вы также можете увидеть, когда конкретная строка кода внутри файла была изменена с &lt;a href=&quot;http://www.kernel.org/pub/software/scm/git/docs/git-blame.html&quot;&gt; &lt;code&gt;git blame filename&lt;/code&gt; &lt;/a&gt; . Это выведет короткий идентификатор фиксации, автора, метку времени и полную строку кода для каждой строки в файле. Это очень полезно после того, как вы нашли ошибку и хотите узнать, когда она была обнаружена (или кто виноват в ней).</target>
        </trans-unit>
        <trans-unit id="73790fbab56af7e467e6a2f75fdc69bf69e8a385" translate="yes" xml:space="preserve">
          <source>You can also try this which lists the commits that has changed a specific part of a file (Implemented in Git 1.8.4).</source>
          <target state="translated">Вы также можете попробовать попробовать следующее:список коммитов,которые изменили определённую часть файла (реализовано в Git'е 1.8.4).</target>
        </trans-unit>
        <trans-unit id="3c94090f45521fa505560d818d146d87684fe4b4" translate="yes" xml:space="preserve">
          <source>You can use</source>
          <target state="translated">Вы можете использовать</target>
        </trans-unit>
        <trans-unit id="be4fbe738a4b80d1879805fb57a37167185cf295" translate="yes" xml:space="preserve">
          <source>You can use vscode with &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens&quot;&gt;GitLens&lt;/a&gt;, it's a very powerful tool.
After installed GitLens, go to GitLens tab, select &lt;code&gt;FILE HISTORY&lt;/code&gt; and you can browse it.</source>
          <target state="translated">Вы можете использовать vscode с &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens&quot;&gt;GitLens&lt;/a&gt; , это очень мощный инструмент. После установки GitLens перейдите на вкладку GitLens, выберите &amp;laquo; &lt;code&gt;FILE HISTORY&lt;/code&gt; и вы сможете просмотреть его.</target>
        </trans-unit>
        <trans-unit id="090feec247d24b15eb17b1c7987e52e99bce5410" translate="yes" xml:space="preserve">
          <source>for more options - it can actually do a lot of nice things :) To get just the diff for a specific commit you can</source>
          <target state="translated">для большего количества вариантов-на самом деле он может сделать много хороших вещей :)Получить только разницу для конкретного коммита вы можете</target>
        </trans-unit>
        <trans-unit id="bf358dc3e2df36683f9a0414a02a430a810a8c1c" translate="yes" xml:space="preserve">
          <source>if you're using &lt;a href=&quot;http://gitx.frim.nl/&quot;&gt;gitx&lt;/a&gt;</source>
          <target state="translated">если вы используете &lt;a href=&quot;http://gitx.frim.nl/&quot;&gt;GITX&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae5b0611bfda360ab13caeb7bf3b2d4cb25cc286" translate="yes" xml:space="preserve">
          <source>or any other revision by identifier. Or use</source>
          <target state="translated">или любой другой ревизии по идентификатору.Или использовать</target>
        </trans-unit>
        <trans-unit id="645102fba40918ec13b5f68f5ebd7bdd995c48bf" translate="yes" xml:space="preserve">
          <source>or if you want to use the powerful blame GUI:</source>
          <target state="translated">или если ты хочешь использовать мощный графический интерфейс вины:</target>
        </trans-unit>
        <trans-unit id="64d660575f741ec638e95accf2522e5b907b8ecb" translate="yes" xml:space="preserve">
          <source>or to follow filename past renames</source>
          <target state="translated">или следовать за прошлыми именами файлов</target>
        </trans-unit>
        <trans-unit id="65bb9667cb1d9319a279d67162176ef74d77d614" translate="yes" xml:space="preserve">
          <source>so that I can just type &lt;code&gt;gdf dir&lt;/code&gt; to get a focussed history of everything in subdirectory &lt;code&gt;dir&lt;/code&gt;.</source>
          <target state="translated">так что я могу просто набрать &lt;code&gt;gdf dir&lt;/code&gt; , чтобы получить целевую историю всего в подкаталоге &lt;code&gt;dir&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9c895492cb34cfa943e9d4767dd902b47e3dcee" translate="yes" xml:space="preserve">
          <source>to browse the changes visually.</source>
          <target state="translated">чтобы просмотреть изменения визуально.</target>
        </trans-unit>
        <trans-unit id="895c043a4b66f33e72db78ff834e2bd936135087" translate="yes" xml:space="preserve">
          <source>to let git generate the patches for each log entry.</source>
          <target state="translated">чтобы позволить git'у генерировать патчи для каждой записи журнала.</target>
        </trans-unit>
        <trans-unit id="22942d4d728e0aae43d146073f19b0f4eea93f28" translate="yes" xml:space="preserve">
          <source>where upperLimit is the start_line_number and lowerLimit is the ending_line_number of the file.</source>
          <target state="translated">где upperLimit-номер_line_number,а lowerLimit-номер end_line_line_number файла.</target>
        </trans-unit>
        <trans-unit id="095dbf3d3fb0bc97895fec230d608616398419ec" translate="yes" xml:space="preserve">
          <source>which shows me the commit history of the file, but how do I get at the content of each of the file changes?</source>
          <target state="translated">который показывает мне историю коммитов файла,но как я могу получить информацию о содержании каждого из изменений файла?</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
