<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/3446216">
    <body>
      <group id="3446216">
        <trans-unit id="3a9141228470c181df84b27d29d7e5f61a626436" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://php.net/manual/en/language.types.string.php&quot;&gt;&lt;strong&gt;PHP strings&lt;/strong&gt;&lt;/a&gt; can be specified not just in &lt;em&gt;two&lt;/em&gt; ways, but in &lt;strong&gt;four&lt;/strong&gt; ways.</source>
          <target state="translated">&lt;a href=&quot;https://php.net/manual/en/language.types.string.php&quot;&gt;&lt;strong&gt;PHP 문자열&lt;/strong&gt;&lt;/a&gt; 은 &lt;em&gt;두&lt;/em&gt; 가지 방법뿐만 아니라 &lt;strong&gt;네&lt;/strong&gt; 가지 방법으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48d5e7c0c84dfd72c8af04c8e6583554654b2f59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.double&quot;&gt;&lt;strong&gt;Double quote strings&lt;/strong&gt;&lt;/a&gt; will display a host of escaped characters (including some regexes), and variables in the strings will be evaluated. An important point here is that &lt;strong&gt;you can use curly braces to isolate the name of the variable you want evaluated&lt;/strong&gt;. For example let's say you have the variable &lt;code&gt;$type&lt;/code&gt; and you want to &lt;code&gt;echo &quot;The $types are&quot;&lt;/code&gt;. That will look for the variable &lt;code&gt;$types&lt;/code&gt;. To get around this use &lt;code&gt;echo &quot;The {$type}s are&quot;&lt;/code&gt; You can put the left brace before or after the dollar sign. Take a look at &lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.parsing&quot;&gt;string parsing&lt;/a&gt; to see how to use array variables and such.</source>
          <target state="translated">&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.double&quot;&gt;&lt;strong&gt;큰 따옴표 문자열&lt;/strong&gt;&lt;/a&gt; 에는 이스케이프 된 문자 (일부 정규식 포함)가 표시되고 문자열의 변수가 평가됩니다. 여기서 중요한 점은 &lt;strong&gt;중괄호를 사용하여 평가할 변수의 이름을 분리 할 수&lt;/strong&gt; 있다는 &lt;strong&gt;것&lt;/strong&gt; 입니다. 예를 들어 변수 &lt;code&gt;$type&lt;/code&gt; 있고 &lt;code&gt;echo &quot;The $types are&quot;&lt;/code&gt; 를 에코 한다고 가정합니다. 변수 &lt;code&gt;$types&lt;/code&gt; 찾습니다. 이 문제를 해결하려면 &lt;code&gt;echo &quot;The {$type}s are&quot;&lt;/code&gt; 하십시오. 달러 부호 앞뒤에 왼쪽 괄호를 넣을 수 있습니다. 배열 변수 등을 사용하는 방법을 보려면 &lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.parsing&quot;&gt;문자열 구문 분석&lt;/a&gt; 을 살펴보십시오.</target>
        </trans-unit>
        <trans-unit id="7d9e26c7a506d5697a5baf09be22cb9dd87c023d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.heredoc&quot;&gt;&lt;strong&gt;Heredoc&lt;/strong&gt;&lt;/a&gt; string syntax works like double quoted strings. It starts with &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt;. After this operator, an identifier is provided, then a newline. The string itself follows, and then the same identifier again to close the quotation. You don't need to escape quotes in this syntax.</source>
          <target state="translated">&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.heredoc&quot;&gt;&lt;strong&gt;Heredoc&lt;/strong&gt;&lt;/a&gt; 문자열 구문은 큰 따옴표로 묶인 문자열처럼 작동합니다. &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; 로 시작합니다. 이 연산자 뒤에 식별자가 제공되고 줄 바꿈이 제공됩니다. 문자열 자체가 뒤 따르고 동일한 식별자가 다시 인용 부호를 닫습니다. 이 구문에서 따옴표를 이스케이프 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="23d2241a96761a54a98136e46d4ca6d32a7868a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.nowdoc&quot;&gt;&lt;strong&gt;Nowdoc&lt;/strong&gt;&lt;/a&gt; (since PHP 5.3.0) string syntax works essentially like single quoted strings. The difference is that not even single quotes or backslashes have to be escaped. A nowdoc is identified with the same &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; sequence used for heredocs, but the identifier which follows is enclosed in single quotes, e.g. &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;'EOT'&lt;/code&gt;. &lt;strong&gt;No parsing is done in nowdoc.&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.nowdoc&quot;&gt;&lt;strong&gt;Nowdoc&lt;/strong&gt;&lt;/a&gt; (PHP 5.3.0부터) 문자열 구문은 작은 따옴표로 묶인 문자열과 본질적으로 작동합니다. 차이점은 작은 따옴표 나 백 슬래시도 이스케이프 할 필요가 없다는 것입니다. nowdoc은 heredocs에 사용 된 것과 동일한 &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; 시퀀스로 식별되지만 뒤에 오는 식별자는 작은 따옴표로 묶습니다 (예 : &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;'EOT'&lt;/code&gt; ) . &lt;strong&gt;nowdoc에서는 구문 분석이 수행되지 않습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1bd4a7f3efed5a1e84e410fb96619d010545302b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.single&quot;&gt;&lt;strong&gt;Single quoted strings&lt;/strong&gt;&lt;/a&gt; will display things almost completely &quot;as is.&quot; Variables and most escape sequences will not be interpreted. The exception is that to display a literal single quote, you can escape it with a back slash &lt;code&gt;\'&lt;/code&gt;, and to display a back slash, you can escape it with another backslash &lt;code&gt;\\&lt;/code&gt; (&lt;strong&gt;So yes, even single quoted strings are parsed&lt;/strong&gt;).</source>
          <target state="translated">&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.single&quot;&gt;&lt;strong&gt;작은 따옴표로 묶인 문자열&lt;/strong&gt;&lt;/a&gt; 은 거의 &quot;있는 그대로&quot;표시합니다. 변수와 대부분의 이스케이프 시퀀스는 해석되지 않습니다. 리터럴 작은 따옴표를 표시하고 백 슬래시 &lt;code&gt;\'&lt;/code&gt; 로 이스케이프 할 수 있고 백 슬래시를 표시하려면 다른 백 슬래시 &lt;code&gt;\\&lt;/code&gt; 로 이스케이프 할 수 있습니다 ( &lt;strong&gt;그렇습니다, 작은 따옴표로 묶인 문자열도 구문 분석됩니다&lt;/strong&gt; ).</target>
        </trans-unit>
        <trans-unit id="7b8598b823fc7da10274b081f959f5631d774968" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;&lt;/code&gt; Double quoted</source>
          <target state="translated">&lt;code&gt;&quot;&lt;/code&gt; 큰 따옴표</target>
        </trans-unit>
        <trans-unit id="4c2fd07094928f076aa215eed00bf0355c6d2942" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;/code&gt; Single quoted</source>
          <target state="translated">작은 따옴표</target>
        </trans-unit>
        <trans-unit id="f262491268b838b2aa40f0300a21c09acd76ea6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alert(&quot;It&amp;rsquo;s &amp;ldquo;game&amp;rdquo; time.&quot;);&lt;/code&gt; and &lt;code&gt;alert('It&amp;rsquo;s &amp;ldquo;game&amp;rdquo; time.');&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;alert(&quot;It&amp;rsquo;s &amp;ldquo;game&amp;rdquo; time.&quot;);&lt;/code&gt; and &lt;code&gt;alert('It&amp;rsquo;s &amp;ldquo;game&amp;rdquo; time.');&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fdd374bacb889984960007995407525f29accf22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alert(&quot;It's \&quot;game\&quot; time.&quot;);&lt;/code&gt; or &lt;code&gt;alert('It\'s &quot;game&quot; time.');&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;alert(&quot;It's \&quot;game\&quot; time.&quot;);&lt;/code&gt; 또는 &lt;code&gt;alert('It\'s &quot;game&quot; time.');&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4168878b06eaa6917a0f012585506612f5054ea6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="434db91c9fd125d5edb9e71082fe93be2fe2ad42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;One thing:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;한가지 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a7580dc2a111103766696295400af1aacd0543c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Speed:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Speed:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="173bf79b868d42e7f3d63c1fe1ceb12a86ef713f" translate="yes" xml:space="preserve">
          <source>A single-quoted string does not have variables within it interpreted.  A double-quoted string does.</source>
          <target state="translated">작은 따옴표로 묶인 문자열에는 해석 된 변수가 없습니다. 큰 따옴표로 묶인 문자열이 않습니다.</target>
        </trans-unit>
        <trans-unit id="c7d11cb3fb385f96f0ecdd9d25d6f8bcad88614f" translate="yes" xml:space="preserve">
          <source>Also, a double-quoted string can contain apostrophes without backslashes, while a single-quoted string can contain unescaped quotation marks.</source>
          <target state="translated">또한 큰 따옴표로 묶인 문자열에는 백 슬래시가없는 아포스트로피가 포함될 수 있고 작은 따옴표로 묶인 문자열에는 이스케이프되지 않은 따옴표가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d59e38dc61c44cc8a5f0ebe10b16a8264de9c263" translate="yes" xml:space="preserve">
          <source>And other thing is,</source>
          <target state="translated">그리고 다른 것은</target>
        </trans-unit>
        <trans-unit id="48f9734efb91a13c48f52fadf235d67f1ace4794" translate="yes" xml:space="preserve">
          <source>Both kinds of enclosed characters are strings.  One type of quote is conveniently used to enclose the other type of quote.  &lt;code&gt;&quot;'&quot;&lt;/code&gt;  and &lt;code&gt;'&quot;'&lt;/code&gt;.   The biggest difference between the types of quotes is that enclosed identifier references are substituted for inside double quotes, but not inside single quotes.</source>
          <target state="translated">두 종류의 동봉 된 문자는 문자열입니다. 한 가지 유형의 견적은 다른 유형의 견적을 묶는 데 편리하게 사용됩니다. &lt;code&gt;&quot;'&quot;&lt;/code&gt; 및 &lt;code&gt;'&quot;'&lt;/code&gt; . 따옴표 유형의 가장 큰 차이점은 동봉 된 식별자 참조가 큰 따옴표로 대체되지만 작은 따옴표로 대체되지 않는다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="7b82ea92e9d83bbfb9a6626bde77fecc6c3efec3" translate="yes" xml:space="preserve">
          <source>Example of single, double, heredoc, and nowdoc quotes</source>
          <target state="translated">단일, 이중, heredoc 및 nowdoc 따옴표의 예</target>
        </trans-unit>
        <trans-unit id="11845def3d7c038bca397c5b419e61575b380024" translate="yes" xml:space="preserve">
          <source>Here some possibilities of single and double quotes with variable</source>
          <target state="translated">변수가있는 작은 따옴표와 큰 따옴표의 가능성</target>
        </trans-unit>
        <trans-unit id="80177d1be6fc87e376d6f00098a24f3c9df2a77d" translate="yes" xml:space="preserve">
          <source>Here, double quote parse the value and single quote is considered as string value (without parsing the &lt;code&gt;$test&lt;/code&gt; variable.)</source>
          <target state="translated">여기서 큰 따옴표는 값을 구문 분석하고 작은 따옴표는 &lt;code&gt;$test&lt;/code&gt; 변수를 구문 분석하지 않고 문자열 값으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="76b3ed572e052202ef40e8ba9629ea19a74d4918" translate="yes" xml:space="preserve">
          <source>I just know in .NET, or the C language, if it is in a single quote, that means it is a character, not a string.</source>
          <target state="translated">.NET 또는 C 언어로 작은 따옴표로 묶인 경우 문자열이 아니라 문자임을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="790495c5c3316e8c6cbc2d93ca223f5152fdcedd" translate="yes" xml:space="preserve">
          <source>I would not put too much weight on single quotes being faster than double quotes. They probably are faster in certain situations. Here's an article &lt;a href=&quot;https://web.archive.org/web/20170703004051/https://www.phplens.com/lens/php-book/optimizing-debugging-php.php&quot;&gt;explaining one manner in which single and double quotes are essentially equally fast since PHP 4.3&lt;/a&gt; (&lt;code&gt;Useless Optimizations&lt;/code&gt; toward the bottom, section &lt;code&gt;C&lt;/code&gt;). Also, this &lt;a href=&quot;https://www.phpbench.com/&quot;&gt;&lt;strong&gt;benchmarks page&lt;/strong&gt;&lt;/a&gt; has a single vs double quote comparison. Most of the comparisons are the same. There is one comparison where double quotes are slower than single quotes.</source>
          <target state="translated">작은 따옴표보다 큰 따옴표보다 빠르지 않습니다. 특정 상황에서는 더 빠를 것입니다. 다음 &lt;a href=&quot;https://web.archive.org/web/20170703004051/https://www.phplens.com/lens/php-book/optimizing-debugging-php.php&quot;&gt;은 PHP 4.3부터 작은 따옴표와 큰 따옴표가 본질적으로 똑같이 빠르는 한 가지 방법을 설명&lt;/a&gt; 하는 기사입니다 (하단에 &lt;code&gt;Useless Optimizations&lt;/code&gt; 섹션 &lt;code&gt;C&lt;/code&gt; ). 또한이 &lt;a href=&quot;https://www.phpbench.com/&quot;&gt;&lt;strong&gt;벤치 마크 페이지&lt;/strong&gt;&lt;/a&gt; 에는 작은 따옴표와 큰 따옴표가 있습니다. 대부분의 비교는 동일합니다. 큰 따옴표가 작은 따옴표보다 느린 비교가 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a9f17af931e841717c5996feab5acf784be7c55" translate="yes" xml:space="preserve">
          <source>I'm a little confused why I see some code in PHP with string placed in single quotes and sometimes in double quotes.</source>
          <target state="translated">작은 따옴표로 묶인 문자열이 있고 때로는 큰 따옴표로 묶인 PHP의 코드를 보는 이유가 약간 혼란 스럽습니다.</target>
        </trans-unit>
        <trans-unit id="3c49833e2562e71a005b9e420a922d64aa39aae1" translate="yes" xml:space="preserve">
          <source>If you're familiar with the use of the english quotation marks, and the correct character for the apostrophe, you can use either double or single quotes, because it won't matter anymore:</source>
          <target state="translated">영어 따옴표 사용과 아포스트로피에 대한 올바른 문자에 익숙하면 더 이상 중요하지 않으므로 큰 따옴표 나 작은 따옴표를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13acfd213512b561872eed3be66aa6c12229c8b7" translate="yes" xml:space="preserve">
          <source>In PHP, both &lt;code&gt;'my name'&lt;/code&gt; and &lt;code&gt;&quot;my name&quot;&lt;/code&gt; are string. You can read more about it &lt;a href=&quot;http://www.php.net/manual/en/book.strings.php&quot;&gt;at the PHP manual&lt;/a&gt;.</source>
          <target state="translated">PHP에서 &lt;code&gt;'my name'&lt;/code&gt; 과 &lt;code&gt;&quot;my name&quot;&lt;/code&gt; 은 모두 문자열입니다. 자세한 내용 &lt;a href=&quot;http://www.php.net/manual/en/book.strings.php&quot;&gt;은 PHP 매뉴얼을 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ea61ed1ea424b6f33bf60838535defcb796218df" translate="yes" xml:space="preserve">
          <source>In PHP, people use single quote to define a constant string, like &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'my name'&lt;/code&gt;, &lt;code&gt;'abc xyz'&lt;/code&gt;, while using double quote to define a string contain identifier like &lt;code&gt;&quot;a $b $c $d&quot;&lt;/code&gt;.</source>
          <target state="translated">PHP에서 사람들은 작은 따옴표를 사용하여 &lt;code&gt;'a'&lt;/code&gt; , &lt;code&gt;'my name'&lt;/code&gt; , &lt;code&gt;'abc xyz'&lt;/code&gt; 와 같은 상수 문자열을 정의하고 큰 따옴표를 사용하여 &lt;code&gt;&quot;a $b $c $d&quot;&lt;/code&gt; 와 같은 식별자를 포함하는 문자열을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="ab80e7effbdff0bd13712f12147c827f2f92c357" translate="yes" xml:space="preserve">
          <source>In PHP, single quote text is considered as string value and double quote text will parse the variables by replacing and processing their value.</source>
          <target state="translated">PHP에서 작은 따옴표 텍스트는 문자열 값으로 간주되며 큰 따옴표 텍스트는 값을 바꾸고 처리하여 변수를 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="3692fe1dce1f70c97a908b1033543ac08069d768" translate="yes" xml:space="preserve">
          <source>Is there a performance benefit single quote vs double quote in PHP?</source>
          <target state="translated">PHP에서 작은 따옴표와 큰 따옴표의 성능 이점이 있습니까?</target>
        </trans-unit>
        <trans-unit id="18b954dd76bbef61c4302dd5ec13084080f37cd1" translate="yes" xml:space="preserve">
          <source>It is very important to note that the line with the closing identifier of &lt;strong&gt;Heredoc&lt;/strong&gt; must contain no other characters, except a &lt;strong&gt;semicolon (;)&lt;/strong&gt;. That means especially that the identifier may not be &lt;strong&gt;indented&lt;/strong&gt;, and there may not be any &lt;strong&gt;spaces&lt;/strong&gt; or &lt;strong&gt;tabs&lt;/strong&gt; before or after the semicolon.</source>
          <target state="translated">&lt;strong&gt;Heredoc&lt;/strong&gt; 의 닫는 식별자가있는 행은 &lt;strong&gt;세미콜론 (;)을&lt;/strong&gt; 제외하고 다른 문자를 포함하지 않아야합니다. 이는 특히 식별자가 &lt;strong&gt;들여 쓰기&lt;/strong&gt; 되지 않을 수 있으며 세미콜론 앞뒤에 &lt;strong&gt;공백&lt;/strong&gt; 이나 &lt;strong&gt;탭&lt;/strong&gt; 이 없을 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="1626aee386fdd763f4868b2b8e79419a142581d0" translate="yes" xml:space="preserve">
          <source>Maybe I'm a little late, and a little off-topic, but here it is anyway:</source>
          <target state="translated">어쩌면 나는 조금 늦었고 주제가 조금 벗어 났지만 어쨌든 여기 있습니다.</target>
        </trans-unit>
        <trans-unit id="5df3983e4e1babb4841b36a645322dc8b32bba2d" translate="yes" xml:space="preserve">
          <source>PHP won't use additional processing to interpret what is inside the single quote. when you use double quotes PHP has to parse to check if there are any variables within the string.</source>
          <target state="translated">PHP는 작은 따옴표 안에있는 것을 해석하기 위해 추가 처리를 사용하지 않습니다. 큰 따옴표를 사용하는 경우 PHP는 문자열 내에 변수가 있는지 확인하기 위해 구문 분석해야합니다.</target>
        </trans-unit>
        <trans-unit id="831e657cfeca10e9bb655fa267f3e2012c593f6c" translate="yes" xml:space="preserve">
          <source>The difference between using single quotes and double quotes in php is that if we use single quotes in echo statement then it is treated as a string. ... but if we enter variable name within double quotes then it will output the value of that variable along with the string.</source>
          <target state="translated">PHP에서 작은 따옴표와 큰 따옴표를 사용하는 것의 차이점은 echo 문에 작은 따옴표를 사용하면 문자열로 취급된다는 것입니다. ...하지만 큰 따옴표 안에 변수 이름을 입력하면 문자열과 함께 해당 변수의 값이 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="4c5c932c2c2863aa007334573ea04793c62d549f" translate="yes" xml:space="preserve">
          <source>The simplest way to specify a string is to enclose it in single quotes. Single quote is generally faster, and everything quoted inside treated as plain string.</source>
          <target state="translated">문자열을 지정하는 가장 간단한 방법은 작은 따옴표로 묶는 것입니다. 작은 따옴표는 일반적으로 빠르며 내부에서 인용 된 모든 것은 일반 문자열로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="22cd03a532628d42fa3a72d7f6ea48b4014e0c8b" translate="yes" xml:space="preserve">
          <source>The single-quoted strings are faster at runtime because they do not need to be parsed.</source>
          <target state="translated">작은 따옴표로 묶인 문자열은 구문 분석 할 필요가 없으므로 런타임에 더 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="6fc3a068f5fbde74d144d026d790844997a75c03" translate="yes" xml:space="preserve">
          <source>Thing you should know are</source>
          <target state="translated">당신이 알아야 할 것은</target>
        </trans-unit>
        <trans-unit id="00d73d8a462e25a3c4ae81a1cc9f3eb623530d64" translate="yes" xml:space="preserve">
          <source>Things get evaluated in double quotes but not in single:</source>
          <target state="translated">상황은 큰 따옴표로 평가되지만 작은 따옴표로 평가되지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="fb530ac76b11dae230a0b655e7ef8757e7629f52" translate="yes" xml:space="preserve">
          <source>This is true for other used of string.</source>
          <target state="translated">다른 문자열을 사용하는 경우에도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="cabc4124b7c5443ab45b98be1e7ed0ddb6f868ec" translate="yes" xml:space="preserve">
          <source>Use double quotes in PHP to avoid having to use the period to separate code (Note: Use curly braces &lt;code&gt;{}&lt;/code&gt; to include variables if you do not want to use concatenation (&lt;code&gt;.&lt;/code&gt;) operator) in string.</source>
          <target state="translated">문자열에서 코드를 분리하기 위해 마침표를 사용하지 않으려면 큰 따옴표를 사용하십시오 (참고 : 중괄호 &lt;code&gt;{}&lt;/code&gt; 를 사용하여 연결 ( &lt;code&gt;.&lt;/code&gt; ) 연산자를 사용하지 않으려는 경우 변수를 포함 시키십시오).</target>
        </trans-unit>
        <trans-unit id="6d569c464425b0aae9e754aa1e0cf33d370a9ef6" translate="yes" xml:space="preserve">
          <source>What is the difference between single-quoted and double-quoted strings in PHP</source>
          <target state="translated">PHP에서 작은 따옴표와 큰 따옴표로 묶은 문자열의 차이점은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="17cb4aeec0d963dd03702d61486dab1c1e5a46b5" translate="yes" xml:space="preserve">
          <source>Yes. It is slightly faster to use single quotes.</source>
          <target state="translated">예. 작은 따옴표를 사용하는 것이 약간 더 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="4d841473f0ca23f6ff5c1c7b5734254ad869132e" translate="yes" xml:space="preserve">
          <source>You don't necessarily have to choose because of your string's content between:</source>
          <target state="translated">문자열의 내용 때문에 반드시 선택할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="786e97b3ee9fc4b292d5852c2c5943153c4ce91a" translate="yes" xml:space="preserve">
          <source>but</source>
          <target state="translated">but</target>
        </trans-unit>
        <trans-unit id="457de2c47ea5d55d3e58fef0030d989ddeec39ea" translate="yes" xml:space="preserve">
          <source>is faster than</source>
          <target state="translated">보다 빠르다</target>
        </trans-unit>
        <trans-unit id="57e430e116971e873eefc3dde4fa051e8cf43562" translate="yes" xml:space="preserve">
          <source>is slower than</source>
          <target state="translated">보다 느리다</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
