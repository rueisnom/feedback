<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/3446216">
    <body>
      <group id="3446216">
        <trans-unit id="3a9141228470c181df84b27d29d7e5f61a626436" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://php.net/manual/en/language.types.string.php&quot;&gt;&lt;strong&gt;PHP strings&lt;/strong&gt;&lt;/a&gt; can be specified not just in &lt;em&gt;two&lt;/em&gt; ways, but in &lt;strong&gt;four&lt;/strong&gt; ways.</source>
          <target state="translated">&lt;a href=&quot;https://php.net/manual/en/language.types.string.php&quot;&gt;&lt;strong&gt;PHP字符串不仅&lt;/strong&gt;&lt;/a&gt;可以通过&lt;em&gt;两种&lt;/em&gt;方式指定，还可以通过&lt;strong&gt;四种&lt;/strong&gt;方式指定。</target>
        </trans-unit>
        <trans-unit id="48d5e7c0c84dfd72c8af04c8e6583554654b2f59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.double&quot;&gt;&lt;strong&gt;Double quote strings&lt;/strong&gt;&lt;/a&gt; will display a host of escaped characters (including some regexes), and variables in the strings will be evaluated. An important point here is that &lt;strong&gt;you can use curly braces to isolate the name of the variable you want evaluated&lt;/strong&gt;. For example let's say you have the variable &lt;code&gt;$type&lt;/code&gt; and you want to &lt;code&gt;echo &quot;The $types are&quot;&lt;/code&gt;. That will look for the variable &lt;code&gt;$types&lt;/code&gt;. To get around this use &lt;code&gt;echo &quot;The {$type}s are&quot;&lt;/code&gt; You can put the left brace before or after the dollar sign. Take a look at &lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.parsing&quot;&gt;string parsing&lt;/a&gt; to see how to use array variables and such.</source>
          <target state="translated">&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.double&quot;&gt;&lt;strong&gt;双引号字符串&lt;/strong&gt;&lt;/a&gt;将显示许多转义字符（包括一些正则表达式），并且将评估字符串中的变量。 这里重要的一点是， &lt;strong&gt;您可以使用花括号来分隔要评估的变量的名称&lt;/strong&gt; 。 例如，假设您具有变量 &lt;code&gt;$type&lt;/code&gt; 并且想要 &lt;code&gt;echo &quot;The $types are&quot;&lt;/code&gt; 。 这将寻找变量 &lt;code&gt;$types&lt;/code&gt; 。 要解决此问题，请使用 &lt;code&gt;echo &quot;The {$type}s are&quot;&lt;/code&gt; 您可以将左括号放在美元符号之前或之后。 看一看&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.parsing&quot;&gt;字符串解析&lt;/a&gt; ，看看如何使用数组变量等。</target>
        </trans-unit>
        <trans-unit id="7d9e26c7a506d5697a5baf09be22cb9dd87c023d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.heredoc&quot;&gt;&lt;strong&gt;Heredoc&lt;/strong&gt;&lt;/a&gt; string syntax works like double quoted strings. It starts with &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt;. After this operator, an identifier is provided, then a newline. The string itself follows, and then the same identifier again to close the quotation. You don't need to escape quotes in this syntax.</source>
          <target state="translated">&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.heredoc&quot;&gt;&lt;strong&gt;Heredoc&lt;/strong&gt;&lt;/a&gt;字符串语法的工作方式类似于双引号字符串。 它以 &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; 开头。 在此运算符之后，提供了一个标识符，然后提供了换行符。 字符串本身紧随其后，然后再次使用相同的标识符以关闭引号。 您无需使用此语法对引号进行转义。</target>
        </trans-unit>
        <trans-unit id="23d2241a96761a54a98136e46d4ca6d32a7868a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.nowdoc&quot;&gt;&lt;strong&gt;Nowdoc&lt;/strong&gt;&lt;/a&gt; (since PHP 5.3.0) string syntax works essentially like single quoted strings. The difference is that not even single quotes or backslashes have to be escaped. A nowdoc is identified with the same &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; sequence used for heredocs, but the identifier which follows is enclosed in single quotes, e.g. &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;'EOT'&lt;/code&gt;. &lt;strong&gt;No parsing is done in nowdoc.&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.nowdoc&quot;&gt;&lt;strong&gt;Nowdoc&lt;/strong&gt;&lt;/a&gt; （自PHP 5.3.0起）字符串语法的工作原理与单引号字符串相似。 区别在于，甚至不必转义单引号或反斜杠。 nowdoc使用与heredocs相同的 &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; 序列进行标识，但是后面的标识符用单引号引起来，例如 &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;'EOT'&lt;/code&gt; 。 &lt;strong&gt;nowdoc不进行任何解析。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1bd4a7f3efed5a1e84e410fb96619d010545302b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.single&quot;&gt;&lt;strong&gt;Single quoted strings&lt;/strong&gt;&lt;/a&gt; will display things almost completely &quot;as is.&quot; Variables and most escape sequences will not be interpreted. The exception is that to display a literal single quote, you can escape it with a back slash &lt;code&gt;\'&lt;/code&gt;, and to display a back slash, you can escape it with another backslash &lt;code&gt;\\&lt;/code&gt; (&lt;strong&gt;So yes, even single quoted strings are parsed&lt;/strong&gt;).</source>
          <target state="translated">&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.single&quot;&gt;&lt;strong&gt;用单引号引起来的字符串&lt;/strong&gt;&lt;/a&gt;几乎可以完全&amp;ldquo;按原样&amp;rdquo;显示事物。 变量和大多数转义序列将不被解释。 唯一的例外是，要显示文字单引号，可以使用反斜杠 &lt;code&gt;\'&lt;/code&gt; 对其进行转义，而要显示反斜杠，则可以使用另一个反斜杠 &lt;code&gt;\\&lt;/code&gt; 对其进行转义（ &lt;strong&gt;因此，即使单引号的字符串也已解析&lt;/strong&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7b8598b823fc7da10274b081f959f5631d774968" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;&lt;/code&gt; Double quoted</source>
          <target state="translated">双引号</target>
        </trans-unit>
        <trans-unit id="4c2fd07094928f076aa215eed00bf0355c6d2942" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;/code&gt; Single quoted</source>
          <target state="translated">&lt;code&gt;'&lt;/code&gt; 单引号</target>
        </trans-unit>
        <trans-unit id="f262491268b838b2aa40f0300a21c09acd76ea6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alert(&quot;It&amp;rsquo;s &amp;ldquo;game&amp;rdquo; time.&quot;);&lt;/code&gt; and &lt;code&gt;alert('It&amp;rsquo;s &amp;ldquo;game&amp;rdquo; time.');&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;alert(&quot;It&amp;rsquo;s &amp;ldquo;game&amp;rdquo; time.&quot;);&lt;/code&gt; 和 &lt;code&gt;alert('It&amp;rsquo;s &amp;ldquo;game&amp;rdquo; time.');&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fdd374bacb889984960007995407525f29accf22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alert(&quot;It's \&quot;game\&quot; time.&quot;);&lt;/code&gt; or &lt;code&gt;alert('It\'s &quot;game&quot; time.');&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;alert(&quot;It's \&quot;game\&quot; time.&quot;);&lt;/code&gt; 或 &lt;code&gt;alert('It\'s &quot;game&quot; time.');&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4168878b06eaa6917a0f012585506612f5054ea6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="434db91c9fd125d5edb9e71082fe93be2fe2ad42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;One thing:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;一样东西：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a7580dc2a111103766696295400af1aacd0543c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Speed:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Speed:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="173bf79b868d42e7f3d63c1fe1ceb12a86ef713f" translate="yes" xml:space="preserve">
          <source>A single-quoted string does not have variables within it interpreted.  A double-quoted string does.</source>
          <target state="translated">单引号的字符串不会解释其中的变量。而双引号字符串则有。</target>
        </trans-unit>
        <trans-unit id="c7d11cb3fb385f96f0ecdd9d25d6f8bcad88614f" translate="yes" xml:space="preserve">
          <source>Also, a double-quoted string can contain apostrophes without backslashes, while a single-quoted string can contain unescaped quotation marks.</source>
          <target state="translated">另外,双引号的字符串可以包含不含反斜杠的引号,而单引号的字符串可以包含无括号的引号。</target>
        </trans-unit>
        <trans-unit id="d59e38dc61c44cc8a5f0ebe10b16a8264de9c263" translate="yes" xml:space="preserve">
          <source>And other thing is,</source>
          <target state="translated">还有一件事是:</target>
        </trans-unit>
        <trans-unit id="48f9734efb91a13c48f52fadf235d67f1ace4794" translate="yes" xml:space="preserve">
          <source>Both kinds of enclosed characters are strings.  One type of quote is conveniently used to enclose the other type of quote.  &lt;code&gt;&quot;'&quot;&lt;/code&gt;  and &lt;code&gt;'&quot;'&lt;/code&gt;.   The biggest difference between the types of quotes is that enclosed identifier references are substituted for inside double quotes, but not inside single quotes.</source>
          <target state="translated">两种封闭字符都是字符串。 一种类型的引用可以方便地用于封装另一种类型的引用。 &lt;code&gt;&quot;'&quot;&lt;/code&gt; 和 &lt;code&gt;'&quot;'&lt;/code&gt; 。引号类型之间的最大区别是用封闭的标识符引用代替了双引号，而不是单引号。</target>
        </trans-unit>
        <trans-unit id="7b82ea92e9d83bbfb9a6626bde77fecc6c3efec3" translate="yes" xml:space="preserve">
          <source>Example of single, double, heredoc, and nowdoc quotes</source>
          <target state="translated">单引号、双引号、双引号、heredoc和nowdoc引号的例子</target>
        </trans-unit>
        <trans-unit id="11845def3d7c038bca397c5b419e61575b380024" translate="yes" xml:space="preserve">
          <source>Here some possibilities of single and double quotes with variable</source>
          <target state="translated">这里有一些带变量的单引号和双引号的可能性。</target>
        </trans-unit>
        <trans-unit id="80177d1be6fc87e376d6f00098a24f3c9df2a77d" translate="yes" xml:space="preserve">
          <source>Here, double quote parse the value and single quote is considered as string value (without parsing the &lt;code&gt;$test&lt;/code&gt; variable.)</source>
          <target state="translated">在这里，双引号解析值，单引号视为字符串值（不解析 &lt;code&gt;$test&lt;/code&gt; 变量。）</target>
        </trans-unit>
        <trans-unit id="76b3ed572e052202ef40e8ba9629ea19a74d4918" translate="yes" xml:space="preserve">
          <source>I just know in .NET, or the C language, if it is in a single quote, that means it is a character, not a string.</source>
          <target state="translated">我只是知道在.NET中,或者说在C语言中,如果是单引号,那就意味着它是一个字符,而不是字符串。</target>
        </trans-unit>
        <trans-unit id="790495c5c3316e8c6cbc2d93ca223f5152fdcedd" translate="yes" xml:space="preserve">
          <source>I would not put too much weight on single quotes being faster than double quotes. They probably are faster in certain situations. Here's an article &lt;a href=&quot;https://web.archive.org/web/20170703004051/https://www.phplens.com/lens/php-book/optimizing-debugging-php.php&quot;&gt;explaining one manner in which single and double quotes are essentially equally fast since PHP 4.3&lt;/a&gt; (&lt;code&gt;Useless Optimizations&lt;/code&gt; toward the bottom, section &lt;code&gt;C&lt;/code&gt;). Also, this &lt;a href=&quot;https://www.phpbench.com/&quot;&gt;&lt;strong&gt;benchmarks page&lt;/strong&gt;&lt;/a&gt; has a single vs double quote comparison. Most of the comparisons are the same. There is one comparison where double quotes are slower than single quotes.</source>
          <target state="translated">我不会过分强调单引号比双引号更快。 在某些情况下，它们可能更快。 这是一篇文章， &lt;a href=&quot;https://web.archive.org/web/20170703004051/https://www.phplens.com/lens/php-book/optimizing-debugging-php.php&quot;&gt;说明自PHP 4.3以来，单引号和双引号基本上一样快的一种方式&lt;/a&gt; （ &lt;code&gt;Useless Optimizations&lt;/code&gt; ， &lt;code&gt;C&lt;/code&gt; 节）。 此外，此&lt;a href=&quot;https://www.phpbench.com/&quot;&gt;&lt;strong&gt;基准测试页面&lt;/strong&gt;&lt;/a&gt;具有单引号与双引号的比较。 大多数比较是相同的。 有一个比较，双引号比单引号慢。</target>
        </trans-unit>
        <trans-unit id="5a9f17af931e841717c5996feab5acf784be7c55" translate="yes" xml:space="preserve">
          <source>I'm a little confused why I see some code in PHP with string placed in single quotes and sometimes in double quotes.</source>
          <target state="translated">我有点疑惑,为什么我在PHP中看到一些代码中的字符串被放在单引号中,有时又是双引号,这让我很困惑。</target>
        </trans-unit>
        <trans-unit id="3c49833e2562e71a005b9e420a922d64aa39aae1" translate="yes" xml:space="preserve">
          <source>If you're familiar with the use of the english quotation marks, and the correct character for the apostrophe, you can use either double or single quotes, because it won't matter anymore:</source>
          <target state="translated">如果你熟悉了英文引号的使用,以及正确的标点符号,你可以用双引号或单引号,因为这已经不重要了。</target>
        </trans-unit>
        <trans-unit id="13acfd213512b561872eed3be66aa6c12229c8b7" translate="yes" xml:space="preserve">
          <source>In PHP, both &lt;code&gt;'my name'&lt;/code&gt; and &lt;code&gt;&quot;my name&quot;&lt;/code&gt; are string. You can read more about it &lt;a href=&quot;http://www.php.net/manual/en/book.strings.php&quot;&gt;at the PHP manual&lt;/a&gt;.</source>
          <target state="translated">在PHP中， &lt;code&gt;'my name'&lt;/code&gt; 和 &lt;code&gt;&quot;my name&quot;&lt;/code&gt; 都是字符串。 您可以&lt;a href=&quot;http://www.php.net/manual/en/book.strings.php&quot;&gt;在PHP手册中&lt;/a&gt;阅读有关它的更多信息。</target>
        </trans-unit>
        <trans-unit id="ea61ed1ea424b6f33bf60838535defcb796218df" translate="yes" xml:space="preserve">
          <source>In PHP, people use single quote to define a constant string, like &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'my name'&lt;/code&gt;, &lt;code&gt;'abc xyz'&lt;/code&gt;, while using double quote to define a string contain identifier like &lt;code&gt;&quot;a $b $c $d&quot;&lt;/code&gt;.</source>
          <target state="translated">在PHP中，人们使用单引号定义一个常量字符串，例如 &lt;code&gt;'a'&lt;/code&gt; ， &lt;code&gt;'my name'&lt;/code&gt; ， &lt;code&gt;'abc xyz'&lt;/code&gt; ，而使用双引号定义一个包含标识符的字符串，例如 &lt;code&gt;&quot;a $b $c $d&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab80e7effbdff0bd13712f12147c827f2f92c357" translate="yes" xml:space="preserve">
          <source>In PHP, single quote text is considered as string value and double quote text will parse the variables by replacing and processing their value.</source>
          <target state="translated">在PHP中,单引号文本被认为是字符串值,双引号文本会通过替换和处理变量的值来解析变量。</target>
        </trans-unit>
        <trans-unit id="3692fe1dce1f70c97a908b1033543ac08069d768" translate="yes" xml:space="preserve">
          <source>Is there a performance benefit single quote vs double quote in PHP?</source>
          <target state="translated">PHP中的单报价与双报价是否有性能优势?</target>
        </trans-unit>
        <trans-unit id="18b954dd76bbef61c4302dd5ec13084080f37cd1" translate="yes" xml:space="preserve">
          <source>It is very important to note that the line with the closing identifier of &lt;strong&gt;Heredoc&lt;/strong&gt; must contain no other characters, except a &lt;strong&gt;semicolon (;)&lt;/strong&gt;. That means especially that the identifier may not be &lt;strong&gt;indented&lt;/strong&gt;, and there may not be any &lt;strong&gt;spaces&lt;/strong&gt; or &lt;strong&gt;tabs&lt;/strong&gt; before or after the semicolon.</source>
          <target state="translated">重要的是要注意，带有&lt;strong&gt;Heredoc&lt;/strong&gt;结束标识符的行除&lt;strong&gt;分号（;）&lt;/strong&gt;之外，不得包含其他任何字符。 特别是这意味着标识符不能&lt;strong&gt;缩进&lt;/strong&gt; ，分号之前或之后可能没有&lt;strong&gt;空格&lt;/strong&gt;或&lt;strong&gt;制表符&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="1626aee386fdd763f4868b2b8e79419a142581d0" translate="yes" xml:space="preserve">
          <source>Maybe I'm a little late, and a little off-topic, but here it is anyway:</source>
          <target state="translated">也许我说的有点晚了,也有点离题了,但无论如何都是这样。</target>
        </trans-unit>
        <trans-unit id="5df3983e4e1babb4841b36a645322dc8b32bba2d" translate="yes" xml:space="preserve">
          <source>PHP won't use additional processing to interpret what is inside the single quote. when you use double quotes PHP has to parse to check if there are any variables within the string.</source>
          <target state="translated">当你使用双引号时,PHP不会使用额外的处理来解释单引号内的内容。</target>
        </trans-unit>
        <trans-unit id="831e657cfeca10e9bb655fa267f3e2012c593f6c" translate="yes" xml:space="preserve">
          <source>The difference between using single quotes and double quotes in php is that if we use single quotes in echo statement then it is treated as a string. ... but if we enter variable name within double quotes then it will output the value of that variable along with the string.</source>
          <target state="translated">在php中使用单引号和双引号的区别在于,如果我们在回声语句中使用单引号,那么它将被视为一个字符串。....但是如果我们在双引号内输入变量名,那么它将会把这个变量的值和字符串一起输出。</target>
        </trans-unit>
        <trans-unit id="4c5c932c2c2863aa007334573ea04793c62d549f" translate="yes" xml:space="preserve">
          <source>The simplest way to specify a string is to enclose it in single quotes. Single quote is generally faster, and everything quoted inside treated as plain string.</source>
          <target state="translated">指定一个字符串的最简单的方法是用单引号括起来。单引号一般比较快,里面的所有引用的东西都被当作普通字符串处理。</target>
        </trans-unit>
        <trans-unit id="22cd03a532628d42fa3a72d7f6ea48b4014e0c8b" translate="yes" xml:space="preserve">
          <source>The single-quoted strings are faster at runtime because they do not need to be parsed.</source>
          <target state="translated">单引号字符串在运行时更快,因为它们不需要解析。</target>
        </trans-unit>
        <trans-unit id="6fc3a068f5fbde74d144d026d790844997a75c03" translate="yes" xml:space="preserve">
          <source>Thing you should know are</source>
          <target state="translated">你应该知道的事情是</target>
        </trans-unit>
        <trans-unit id="00d73d8a462e25a3c4ae81a1cc9f3eb623530d64" translate="yes" xml:space="preserve">
          <source>Things get evaluated in double quotes but not in single:</source>
          <target state="translated">事情会用双引号来评价,但不会用单引号来评价。</target>
        </trans-unit>
        <trans-unit id="fb530ac76b11dae230a0b655e7ef8757e7629f52" translate="yes" xml:space="preserve">
          <source>This is true for other used of string.</source>
          <target state="translated">对于其他使用的字符串也是如此。</target>
        </trans-unit>
        <trans-unit id="cabc4124b7c5443ab45b98be1e7ed0ddb6f868ec" translate="yes" xml:space="preserve">
          <source>Use double quotes in PHP to avoid having to use the period to separate code (Note: Use curly braces &lt;code&gt;{}&lt;/code&gt; to include variables if you do not want to use concatenation (&lt;code&gt;.&lt;/code&gt;) operator) in string.</source>
          <target state="translated">在PHP中使用双引号可以避免在字符串中使用句点来分隔代码（注意：如果不想使用串联（ &lt;code&gt;.&lt;/code&gt; ）运算符，请使用大括号 &lt;code&gt;{}&lt;/code&gt; 包含变量）。</target>
        </trans-unit>
        <trans-unit id="6d569c464425b0aae9e754aa1e0cf33d370a9ef6" translate="yes" xml:space="preserve">
          <source>What is the difference between single-quoted and double-quoted strings in PHP</source>
          <target state="translated">PHP中单引号和双引号字符串的区别是什么?</target>
        </trans-unit>
        <trans-unit id="17cb4aeec0d963dd03702d61486dab1c1e5a46b5" translate="yes" xml:space="preserve">
          <source>Yes. It is slightly faster to use single quotes.</source>
          <target state="translated">是的,用单引号的方式稍微快一点。</target>
        </trans-unit>
        <trans-unit id="4d841473f0ca23f6ff5c1c7b5734254ad869132e" translate="yes" xml:space="preserve">
          <source>You don't necessarily have to choose because of your string's content between:</source>
          <target state="translated">你不一定要选择,因为你的字符串的内容之间。</target>
        </trans-unit>
        <trans-unit id="786e97b3ee9fc4b292d5852c2c5943153c4ce91a" translate="yes" xml:space="preserve">
          <source>but</source>
          <target state="translated">but</target>
        </trans-unit>
        <trans-unit id="457de2c47ea5d55d3e58fef0030d989ddeec39ea" translate="yes" xml:space="preserve">
          <source>is faster than</source>
          <target state="translated">快于</target>
        </trans-unit>
        <trans-unit id="57e430e116971e873eefc3dde4fa051e8cf43562" translate="yes" xml:space="preserve">
          <source>is slower than</source>
          <target state="translated">慢于</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
