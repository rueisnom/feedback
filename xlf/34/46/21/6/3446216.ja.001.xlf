<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/3446216">
    <body>
      <group id="3446216">
        <trans-unit id="3a9141228470c181df84b27d29d7e5f61a626436" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://php.net/manual/en/language.types.string.php&quot;&gt;&lt;strong&gt;PHP strings&lt;/strong&gt;&lt;/a&gt; can be specified not just in &lt;em&gt;two&lt;/em&gt; ways, but in &lt;strong&gt;four&lt;/strong&gt; ways.</source>
          <target state="translated">&lt;a href=&quot;https://php.net/manual/en/language.types.string.php&quot;&gt;&lt;strong&gt;PHP文字列&lt;/strong&gt;&lt;/a&gt;は、 &lt;em&gt;2つの&lt;/em&gt;方法だけでなく、 &lt;strong&gt;4&lt;/strong&gt; &lt;em&gt;つの&lt;/em&gt;方法で指定できます。</target>
        </trans-unit>
        <trans-unit id="48d5e7c0c84dfd72c8af04c8e6583554654b2f59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.double&quot;&gt;&lt;strong&gt;Double quote strings&lt;/strong&gt;&lt;/a&gt; will display a host of escaped characters (including some regexes), and variables in the strings will be evaluated. An important point here is that &lt;strong&gt;you can use curly braces to isolate the name of the variable you want evaluated&lt;/strong&gt;. For example let's say you have the variable &lt;code&gt;$type&lt;/code&gt; and you want to &lt;code&gt;echo &quot;The $types are&quot;&lt;/code&gt;. That will look for the variable &lt;code&gt;$types&lt;/code&gt;. To get around this use &lt;code&gt;echo &quot;The {$type}s are&quot;&lt;/code&gt; You can put the left brace before or after the dollar sign. Take a look at &lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.parsing&quot;&gt;string parsing&lt;/a&gt; to see how to use array variables and such.</source>
          <target state="translated">&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.double&quot;&gt;&lt;strong&gt;二重引用符の文字列&lt;/strong&gt;&lt;/a&gt;は、エスケープされた文字（一部の正規表現を含む）のホストを表示し、文字列内の変数が評価されます。 ここで重要な点は、 &lt;strong&gt;中括弧を使用して、評価する変数の名前を分離できることです&lt;/strong&gt; 。 たとえば、変数 &lt;code&gt;$type&lt;/code&gt; あり、 &lt;code&gt;echo &quot;The $types are&quot;&lt;/code&gt; をエコーしたいとします。 変数 &lt;code&gt;$types&lt;/code&gt; を探します 。 これを回避するには、 &lt;code&gt;echo &quot;The {$type}s are&quot;&lt;/code&gt; ます。左中括弧をドル記号の前または後に置くことができます。 &lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.parsing&quot;&gt;文字列の解析&lt;/a&gt;を見て、配列変数などの使用方法を確認してください。</target>
        </trans-unit>
        <trans-unit id="7d9e26c7a506d5697a5baf09be22cb9dd87c023d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.heredoc&quot;&gt;&lt;strong&gt;Heredoc&lt;/strong&gt;&lt;/a&gt; string syntax works like double quoted strings. It starts with &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt;. After this operator, an identifier is provided, then a newline. The string itself follows, and then the same identifier again to close the quotation. You don't need to escape quotes in this syntax.</source>
          <target state="translated">&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.heredoc&quot;&gt;&lt;strong&gt;ヒアドキュメントの&lt;/strong&gt;&lt;/a&gt;文字列構文は、二重引用符で囲まれた文字列のように機能します。 &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; で始まります。 この演算子の後、識別子が提供され、次に改行が提供されます。 文字列自体が続き、次に同じ識別子が再び引用を閉じます。 この構文では引用符をエスケープする必要はありません。</target>
        </trans-unit>
        <trans-unit id="23d2241a96761a54a98136e46d4ca6d32a7868a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.nowdoc&quot;&gt;&lt;strong&gt;Nowdoc&lt;/strong&gt;&lt;/a&gt; (since PHP 5.3.0) string syntax works essentially like single quoted strings. The difference is that not even single quotes or backslashes have to be escaped. A nowdoc is identified with the same &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; sequence used for heredocs, but the identifier which follows is enclosed in single quotes, e.g. &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;'EOT'&lt;/code&gt;. &lt;strong&gt;No parsing is done in nowdoc.&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.nowdoc&quot;&gt;&lt;strong&gt;Nowdoc&lt;/strong&gt;&lt;/a&gt; （PHP 5.3.0以降）の文字列構文は、基本的に一重引用符で囲まれた文字列のように機能します。 違いは、単一引用符やバックスラッシュでさえエスケープする必要がないことです。 nowdocは、ヒアドキュメントで使用されるのと同じ &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; シーケンスで識別されますが、その後に続く識別子は、一重引用符で囲まれます（例： &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;'EOT'&lt;/code&gt; ) 。 &lt;strong&gt;nowdocでは解析は行われません。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1bd4a7f3efed5a1e84e410fb96619d010545302b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.single&quot;&gt;&lt;strong&gt;Single quoted strings&lt;/strong&gt;&lt;/a&gt; will display things almost completely &quot;as is.&quot; Variables and most escape sequences will not be interpreted. The exception is that to display a literal single quote, you can escape it with a back slash &lt;code&gt;\'&lt;/code&gt;, and to display a back slash, you can escape it with another backslash &lt;code&gt;\\&lt;/code&gt; (&lt;strong&gt;So yes, even single quoted strings are parsed&lt;/strong&gt;).</source>
          <target state="translated">&lt;a href=&quot;https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.single&quot;&gt;&lt;strong&gt;一重引用符で囲まれた文字列&lt;/strong&gt;&lt;/a&gt;は、ほぼ完全に「そのまま」表示&lt;strong&gt;されます&lt;/strong&gt; 。 変数とほとんどのエスケープシーケンスは解釈されません。 例外は、リテラルの単一引用符を表示するにはバックスラッシュ &lt;code&gt;\'&lt;/code&gt; でエスケープでき、バックスラッシュを表示するには別のバックスラッシュ &lt;code&gt;\\&lt;/code&gt; でエスケープできます（ &lt;strong&gt;そのため、単一引用符で囲まれた文字列でも解析されます&lt;/strong&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7b8598b823fc7da10274b081f959f5631d774968" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;&lt;/code&gt; Double quoted</source>
          <target state="translated">&lt;code&gt;&quot;&lt;/code&gt; 二重引用符</target>
        </trans-unit>
        <trans-unit id="4c2fd07094928f076aa215eed00bf0355c6d2942" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;/code&gt; Single quoted</source>
          <target state="translated">&lt;code&gt;'&lt;/code&gt; 一重引用符</target>
        </trans-unit>
        <trans-unit id="f262491268b838b2aa40f0300a21c09acd76ea6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alert(&quot;It&amp;rsquo;s &amp;ldquo;game&amp;rdquo; time.&quot;);&lt;/code&gt; and &lt;code&gt;alert('It&amp;rsquo;s &amp;ldquo;game&amp;rdquo; time.');&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;alert(&quot;It&amp;rsquo;s &amp;ldquo;game&amp;rdquo; time.&quot;);&lt;/code&gt; そして、 &lt;code&gt;alert('It&amp;rsquo;s &amp;ldquo;game&amp;rdquo; time.');&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fdd374bacb889984960007995407525f29accf22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alert(&quot;It's \&quot;game\&quot; time.&quot;);&lt;/code&gt; or &lt;code&gt;alert('It\'s &quot;game&quot; time.');&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;alert(&quot;It's \&quot;game\&quot; time.&quot;);&lt;/code&gt; または &lt;code&gt;alert('It\'s &quot;game&quot; time.');&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4168878b06eaa6917a0f012585506612f5054ea6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="434db91c9fd125d5edb9e71082fe93be2fe2ad42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;One thing:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ひとこと：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a7580dc2a111103766696295400af1aacd0543c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Speed:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Speed:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="173bf79b868d42e7f3d63c1fe1ceb12a86ef713f" translate="yes" xml:space="preserve">
          <source>A single-quoted string does not have variables within it interpreted.  A double-quoted string does.</source>
          <target state="translated">単一引用符で囲まれた文字列は、その中の変数が解釈されません。二重引用符で囲まれた文字列は解釈されます。</target>
        </trans-unit>
        <trans-unit id="c7d11cb3fb385f96f0ecdd9d25d6f8bcad88614f" translate="yes" xml:space="preserve">
          <source>Also, a double-quoted string can contain apostrophes without backslashes, while a single-quoted string can contain unescaped quotation marks.</source>
          <target state="translated">また、二重引用符で囲まれた文字列には、バックスラッシュなしのアポストロフィーを含めることができますが、一重引用符で囲まれた文字列には、エスケープされていない引用符を含めることができます。</target>
        </trans-unit>
        <trans-unit id="d59e38dc61c44cc8a5f0ebe10b16a8264de9c263" translate="yes" xml:space="preserve">
          <source>And other thing is,</source>
          <target state="translated">そしてもう一つは</target>
        </trans-unit>
        <trans-unit id="48f9734efb91a13c48f52fadf235d67f1ace4794" translate="yes" xml:space="preserve">
          <source>Both kinds of enclosed characters are strings.  One type of quote is conveniently used to enclose the other type of quote.  &lt;code&gt;&quot;'&quot;&lt;/code&gt;  and &lt;code&gt;'&quot;'&lt;/code&gt;.   The biggest difference between the types of quotes is that enclosed identifier references are substituted for inside double quotes, but not inside single quotes.</source>
          <target state="translated">どちらの種類の囲まれた文字も文字列です。 1つのタイプの引用は、他のタイプの引用を囲むのに便利に使用されます。 &lt;code&gt;&quot;'&quot;&lt;/code&gt; と &lt;code&gt;'&quot;'&lt;/code&gt; 。引用符のタイプの最大の違いは、囲まれた識別子参照が二重引用符の内側ではなく、単一引用符の内側で置き換えられることです。</target>
        </trans-unit>
        <trans-unit id="7b82ea92e9d83bbfb9a6626bde77fecc6c3efec3" translate="yes" xml:space="preserve">
          <source>Example of single, double, heredoc, and nowdoc quotes</source>
          <target state="translated">シングル、ダブル、ヘレドク、ナウドックの引用例</target>
        </trans-unit>
        <trans-unit id="11845def3d7c038bca397c5b419e61575b380024" translate="yes" xml:space="preserve">
          <source>Here some possibilities of single and double quotes with variable</source>
          <target state="translated">ここでは、シングルクォーテーションとダブルクォーテーションを変数にした場合のいくつかの可能性について説明します。</target>
        </trans-unit>
        <trans-unit id="80177d1be6fc87e376d6f00098a24f3c9df2a77d" translate="yes" xml:space="preserve">
          <source>Here, double quote parse the value and single quote is considered as string value (without parsing the &lt;code&gt;$test&lt;/code&gt; variable.)</source>
          <target state="translated">ここでは、二重引用符が値を解析し、単一引用符は文字列値と見なされます（ &lt;code&gt;$test&lt;/code&gt; 変数は解析されません）。</target>
        </trans-unit>
        <trans-unit id="76b3ed572e052202ef40e8ba9629ea19a74d4918" translate="yes" xml:space="preserve">
          <source>I just know in .NET, or the C language, if it is in a single quote, that means it is a character, not a string.</source>
          <target state="translated">.NETやC言語では、シングルクォートであれば、文字列ではなく文字であることを意味しています。</target>
        </trans-unit>
        <trans-unit id="790495c5c3316e8c6cbc2d93ca223f5152fdcedd" translate="yes" xml:space="preserve">
          <source>I would not put too much weight on single quotes being faster than double quotes. They probably are faster in certain situations. Here's an article &lt;a href=&quot;https://web.archive.org/web/20170703004051/https://www.phplens.com/lens/php-book/optimizing-debugging-php.php&quot;&gt;explaining one manner in which single and double quotes are essentially equally fast since PHP 4.3&lt;/a&gt; (&lt;code&gt;Useless Optimizations&lt;/code&gt; toward the bottom, section &lt;code&gt;C&lt;/code&gt;). Also, this &lt;a href=&quot;https://www.phpbench.com/&quot;&gt;&lt;strong&gt;benchmarks page&lt;/strong&gt;&lt;/a&gt; has a single vs double quote comparison. Most of the comparisons are the same. There is one comparison where double quotes are slower than single quotes.</source>
          <target state="translated">二重引用符よりも高速な単一引用符を重視しません。 特定の状況では、おそらくより高速です。 &lt;a href=&quot;https://web.archive.org/web/20170703004051/https://www.phplens.com/lens/php-book/optimizing-debugging-php.php&quot;&gt;PHP 4.3以降、一重引用符と二重引用符が基本的に等しく高速になる1つの方法を説明&lt;/a&gt;する記事を以下に示します （下に向かって &lt;code&gt;Useless Optimizations&lt;/code&gt; 、セクション &lt;code&gt;C&lt;/code&gt; ）。 また、この&lt;a href=&quot;https://www.phpbench.com/&quot;&gt;&lt;strong&gt;ベンチマークページに&lt;/strong&gt;&lt;/a&gt;は、一重引用符と二重引用符の比較があります。 ほとんどの比較は同じです。 二重引用符が単一引用符よりも遅い比較が1つあります。</target>
        </trans-unit>
        <trans-unit id="5a9f17af931e841717c5996feab5acf784be7c55" translate="yes" xml:space="preserve">
          <source>I'm a little confused why I see some code in PHP with string placed in single quotes and sometimes in double quotes.</source>
          <target state="translated">PHPで文字列が一重引用符で囲まれていたり、二重引用符で囲まれていたりするコードを見かけるのですが、なぜなのか少し混乱しています。</target>
        </trans-unit>
        <trans-unit id="3c49833e2562e71a005b9e420a922d64aa39aae1" translate="yes" xml:space="preserve">
          <source>If you're familiar with the use of the english quotation marks, and the correct character for the apostrophe, you can use either double or single quotes, because it won't matter anymore:</source>
          <target state="translated">あなたが英語の引用符の使用とアポストロフィの正しい文字に精通している場合は、それはもう問題ではないので、ダブルクォーテーションとシングルクォーテーションのどちらかを使用することができます。</target>
        </trans-unit>
        <trans-unit id="13acfd213512b561872eed3be66aa6c12229c8b7" translate="yes" xml:space="preserve">
          <source>In PHP, both &lt;code&gt;'my name'&lt;/code&gt; and &lt;code&gt;&quot;my name&quot;&lt;/code&gt; are string. You can read more about it &lt;a href=&quot;http://www.php.net/manual/en/book.strings.php&quot;&gt;at the PHP manual&lt;/a&gt;.</source>
          <target state="translated">PHPでは、 &lt;code&gt;'my name'&lt;/code&gt; と &lt;code&gt;&quot;my name&quot;&lt;/code&gt; はどちらも文字列です。 詳細について&lt;a href=&quot;http://www.php.net/manual/en/book.strings.php&quot;&gt;は、PHPのマニュアルを参照してください&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="ea61ed1ea424b6f33bf60838535defcb796218df" translate="yes" xml:space="preserve">
          <source>In PHP, people use single quote to define a constant string, like &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'my name'&lt;/code&gt;, &lt;code&gt;'abc xyz'&lt;/code&gt;, while using double quote to define a string contain identifier like &lt;code&gt;&quot;a $b $c $d&quot;&lt;/code&gt;.</source>
          <target state="translated">PHPでは、一重引用符を使用して &lt;code&gt;'a'&lt;/code&gt; 、 &lt;code&gt;'my name'&lt;/code&gt; 、 &lt;code&gt;'abc xyz'&lt;/code&gt; などの定数文字列を定義し、二重引用符を使用して &lt;code&gt;&quot;a $b $c $d&quot;&lt;/code&gt; などの識別子を含む文字列を定義します。</target>
        </trans-unit>
        <trans-unit id="ab80e7effbdff0bd13712f12147c827f2f92c357" translate="yes" xml:space="preserve">
          <source>In PHP, single quote text is considered as string value and double quote text will parse the variables by replacing and processing their value.</source>
          <target state="translated">PHPでは、シングルクォートテキストを文字列の値とみなし、ダブルクォートテキストは変数の値を置換して処理することで構文解析を行います。</target>
        </trans-unit>
        <trans-unit id="3692fe1dce1f70c97a908b1033543ac08069d768" translate="yes" xml:space="preserve">
          <source>Is there a performance benefit single quote vs double quote in PHP?</source>
          <target state="translated">PHPにおけるシングルクォートとダブルクォートのパフォーマンス上のメリットはありますか?</target>
        </trans-unit>
        <trans-unit id="18b954dd76bbef61c4302dd5ec13084080f37cd1" translate="yes" xml:space="preserve">
          <source>It is very important to note that the line with the closing identifier of &lt;strong&gt;Heredoc&lt;/strong&gt; must contain no other characters, except a &lt;strong&gt;semicolon (;)&lt;/strong&gt;. That means especially that the identifier may not be &lt;strong&gt;indented&lt;/strong&gt;, and there may not be any &lt;strong&gt;spaces&lt;/strong&gt; or &lt;strong&gt;tabs&lt;/strong&gt; before or after the semicolon.</source>
          <target state="translated">&lt;strong&gt;ヒアドキュメント&lt;/strong&gt;の終了識別子のある行には、 &lt;strong&gt;セミコロン（;）&lt;/strong&gt;以外の文字を&lt;strong&gt;含めて&lt;/strong&gt;はならないことに注意してください。 つまり、識別子が&lt;strong&gt;インデントされて&lt;/strong&gt;いない可能性があり、セミコロンの前後に&lt;strong&gt;スペース&lt;/strong&gt;や&lt;strong&gt;タブ&lt;/strong&gt;が含まれていない可能性があります。</target>
        </trans-unit>
        <trans-unit id="1626aee386fdd763f4868b2b8e79419a142581d0" translate="yes" xml:space="preserve">
          <source>Maybe I'm a little late, and a little off-topic, but here it is anyway:</source>
          <target state="translated">遅くなって少しオフトピックから外れているかもしれませんが、とにかくここにあります。</target>
        </trans-unit>
        <trans-unit id="5df3983e4e1babb4841b36a645322dc8b32bba2d" translate="yes" xml:space="preserve">
          <source>PHP won't use additional processing to interpret what is inside the single quote. when you use double quotes PHP has to parse to check if there are any variables within the string.</source>
          <target state="translated">PHPは、シングルクォートの中にあるものを解釈するために追加の処理を行いません。 ダブルクォートを使用する場合、PHPは文字列の中に変数があるかどうかを確認するためにパースしなければなりません。</target>
        </trans-unit>
        <trans-unit id="831e657cfeca10e9bb655fa267f3e2012c593f6c" translate="yes" xml:space="preserve">
          <source>The difference between using single quotes and double quotes in php is that if we use single quotes in echo statement then it is treated as a string. ... but if we enter variable name within double quotes then it will output the value of that variable along with the string.</source>
          <target state="translated">phpでシングルクォートを使うかダブルクォートを使うかの違いは、 echo文の中でシングルクォートを使うと文字列として扱われます。...しかし、二重引用符の中に変数名を入力すると、文字列と一緒にその変数の値が出力されます。</target>
        </trans-unit>
        <trans-unit id="4c5c932c2c2863aa007334573ea04793c62d549f" translate="yes" xml:space="preserve">
          <source>The simplest way to specify a string is to enclose it in single quotes. Single quote is generally faster, and everything quoted inside treated as plain string.</source>
          <target state="translated">文字列を指定する最も簡単な方法は、シングルクォートで囲むことです。シングルクォートの方が一般的に高速で、内部で引用されたものはすべてプレーンな文字列として扱われます。</target>
        </trans-unit>
        <trans-unit id="22cd03a532628d42fa3a72d7f6ea48b4014e0c8b" translate="yes" xml:space="preserve">
          <source>The single-quoted strings are faster at runtime because they do not need to be parsed.</source>
          <target state="translated">シングルクォートされた文字列は、パースする必要がないため、実行時に高速になります。</target>
        </trans-unit>
        <trans-unit id="6fc3a068f5fbde74d144d026d790844997a75c03" translate="yes" xml:space="preserve">
          <source>Thing you should know are</source>
          <target state="translated">知っておくべきことは</target>
        </trans-unit>
        <trans-unit id="00d73d8a462e25a3c4ae81a1cc9f3eb623530d64" translate="yes" xml:space="preserve">
          <source>Things get evaluated in double quotes but not in single:</source>
          <target state="translated">物事は二重引用符で評価されますが、シングルでは評価されません。</target>
        </trans-unit>
        <trans-unit id="fb530ac76b11dae230a0b655e7ef8757e7629f52" translate="yes" xml:space="preserve">
          <source>This is true for other used of string.</source>
          <target state="translated">これは、文字列の他の使用法についても同様です。</target>
        </trans-unit>
        <trans-unit id="cabc4124b7c5443ab45b98be1e7ed0ddb6f868ec" translate="yes" xml:space="preserve">
          <source>Use double quotes in PHP to avoid having to use the period to separate code (Note: Use curly braces &lt;code&gt;{}&lt;/code&gt; to include variables if you do not want to use concatenation (&lt;code&gt;.&lt;/code&gt;) operator) in string.</source>
          <target state="translated">PHPで二重引用符を使用すると、ピリオドを使用してコードを区切る必要がなくなります（注：連結（ &lt;code&gt;.&lt;/code&gt; ）演算子を使用しない場合は、中括弧 &lt;code&gt;{}&lt;/code&gt; を使用して変数を含めます）。</target>
        </trans-unit>
        <trans-unit id="6d569c464425b0aae9e754aa1e0cf33d370a9ef6" translate="yes" xml:space="preserve">
          <source>What is the difference between single-quoted and double-quoted strings in PHP</source>
          <target state="translated">PHPにおけるシングルクォートとダブルクォートの文字列の違いは何ですか?</target>
        </trans-unit>
        <trans-unit id="17cb4aeec0d963dd03702d61486dab1c1e5a46b5" translate="yes" xml:space="preserve">
          <source>Yes. It is slightly faster to use single quotes.</source>
          <target state="translated">はい、シングルクォートを使った方が若干早いです。</target>
        </trans-unit>
        <trans-unit id="4d841473f0ca23f6ff5c1c7b5734254ad869132e" translate="yes" xml:space="preserve">
          <source>You don't necessarily have to choose because of your string's content between:</source>
          <target state="translated">との間の文字列の内容があるからといって、必ずしも選択する必要はありません。</target>
        </trans-unit>
        <trans-unit id="786e97b3ee9fc4b292d5852c2c5943153c4ce91a" translate="yes" xml:space="preserve">
          <source>but</source>
          <target state="translated">but</target>
        </trans-unit>
        <trans-unit id="457de2c47ea5d55d3e58fef0030d989ddeec39ea" translate="yes" xml:space="preserve">
          <source>is faster than</source>
          <target state="translated">よりも速い</target>
        </trans-unit>
        <trans-unit id="57e430e116971e873eefc3dde4fa051e8cf43562" translate="yes" xml:space="preserve">
          <source>is slower than</source>
          <target state="translated">よりも遅い</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
