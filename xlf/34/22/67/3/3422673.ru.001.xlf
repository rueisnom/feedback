<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/3422673">
    <body>
      <group id="3422673">
        <trans-unit id="b189493d0723abaf0a25aabd29c10044c9aa3c0f" translate="yes" xml:space="preserve">
          <source>1 - Simple furmula</source>
          <target state="translated">1-Простой furmula</target>
        </trans-unit>
        <trans-unit id="7b17ad8051a0cd08297c27ef47792e7a5aea6b8f" translate="yes" xml:space="preserve">
          <source>1.1 Get the next token.
1.2 If the token is:</source>
          <target state="translated">1.1 Возьми следующий жетон.1.2 Если токен есть:</target>
        </trans-unit>
        <trans-unit id="70e5f660d27c4d6a729ee5eca4fc60ae93185e65" translate="yes" xml:space="preserve">
          <source>1.2.1 A number: push it onto the value stack.</source>
          <target state="translated">1.2.1 Число:вставьте его в стек значений.</target>
        </trans-unit>
        <trans-unit id="b54a111936c58ee5af526a780e97f447695a9829" translate="yes" xml:space="preserve">
          <source>1.2.2 A variable: get its value, and push onto the value stack.</source>
          <target state="translated">1.2.2 Переменная:получить ее значение и нажать на стек значений.</target>
        </trans-unit>
        <trans-unit id="91e884a1365182e677736fc56ff9444bf690c751" translate="yes" xml:space="preserve">
          <source>1.2.3 A left parenthesis: push it onto the operator stack.</source>
          <target state="translated">1.2.3 Левая скобка:вставьте ее в стек оператора.</target>
        </trans-unit>
        <trans-unit id="87f2589084a9e2986f1c812f2dd76b001c34f226" translate="yes" xml:space="preserve">
          <source>1.2.4 A right parenthesis:</source>
          <target state="translated">1.2.4 Правая скобка:</target>
        </trans-unit>
        <trans-unit id="f0735c6d8c0d48bfee9f097e3b57bbcb2f691ff1" translate="yes" xml:space="preserve">
          <source>1.2.5 An operator (call it thisOp):</source>
          <target state="translated">1.2.5 Оператор (назовите его &quot;thisOp&quot;):</target>
        </trans-unit>
        <trans-unit id="b70cb0631c94b280e75474fa969abb9710d178f2" translate="yes" xml:space="preserve">
          <source>2 - User defined arguments and constants</source>
          <target state="translated">2-определяемые пользователем аргументы и константы</target>
        </trans-unit>
        <trans-unit id="15cd0cb27cccb8c62a2245c1bf5615624c873f23" translate="yes" xml:space="preserve">
          <source>3 - User defined functions</source>
          <target state="translated">3-Определяемые пользователем функции</target>
        </trans-unit>
        <trans-unit id="ccc6e9cea830b7494c74794e255cdb8b267b2fb4" translate="yes" xml:space="preserve">
          <source>4 - Iteration</source>
          <target state="translated">4-итерация</target>
        </trans-unit>
        <trans-unit id="2fe4e674579e140c3dcf8a1fe81a54e3cf17b70a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.beyondlinux.com/2011/08/07/3-method-to-evaluate-expressions/&quot;&gt;This article&lt;/a&gt; discusses various approaches. Here are the 2 key approaches mentioned in the article:</source>
          <target state="translated">&lt;a href=&quot;http://www.beyondlinux.com/2011/08/07/3-method-to-evaluate-expressions/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В этой статье&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; рассматриваются различные подходы. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот 2 ключевых подхода, упомянутых в статье:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1740655f956511dc473f3c2abef5635fa5f3f604" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/uklimaschewski/EvalEx&quot;&gt;HERE&lt;/a&gt; is another open source library on GitHub named EvalEx.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/uklimaschewski/EvalEx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ЗДЕСЬ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; есть еще одна библиотека с открытым исходным кодом на GitHub под названием EvalEx.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="66851ccaa5d4bff14d124ad631290650d91d3081" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MVEL&lt;/code&gt; does runtime evaluation of expressions, we can write a java code in &lt;code&gt;String&lt;/code&gt; to get it evaluated in this.</source>
          <target state="translated">&lt;code&gt;MVEL&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; выполняет оценку выражений во время выполнения, мы можем написать Java-код в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; чтобы оценить его в этом.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1da97c9df67bfe9403bc690b02dd407fa01987a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Different datatypes:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Различные типы данных:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ea5c2c6b95749aa4e52965a30787c2b280bbfcac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Separate compilation and evaluation:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Отдельная компиляция и оценка:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4c51f75623c112c9098f9b294cb11df633411dc1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Variables:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Variables:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a470a1c3c36ac43c6f08cff8179aac1bd3f98305" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;All code in this answer released &lt;a href=&quot;https://creativecommons.org/publicdomain/zero/1.0/&quot;&gt;to the public domain&lt;/a&gt;. Have fun!&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Весь код в этом ответе опубликован &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://creativecommons.org/publicdomain/zero/1.0/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;в открытом доступе&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Веселиться!&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="4071041dfbfbcfced9aef256cf6b920e7da9354f" translate="yes" xml:space="preserve">
          <source>A Java class that can evaluate mathematical expressions:</source>
          <target state="translated">Класс Java,который может оценивать математические выражения:</target>
        </trans-unit>
        <trans-unit id="11958cfc83000edc5cd619a8e7a09c04db89d839" translate="yes" xml:space="preserve">
          <source>Allows for scripts that include references to java objects.</source>
          <target state="translated">Позволяет использовать скрипты,содержащие ссылки на java-объекты.</target>
        </trans-unit>
        <trans-unit id="a821e43c3b969654c45585b8dd96b345c961af5d" translate="yes" xml:space="preserve">
          <source>And few examples</source>
          <target state="translated">И несколько примеров</target>
        </trans-unit>
        <trans-unit id="b645420a182b55b4dad7f4c15d3ff4460c22c049" translate="yes" xml:space="preserve">
          <source>Another way is to use Spring Expression Language or SpEL which does a whole lot more along with evaluating mathematical expressions therefore maybe slightly overkill. You do not have to be using Spring framework to use this expression library as it is stand-alone. Copying examples from SpEL's documentation:</source>
          <target state="translated">Другой способ-использовать Spring Expression Language или SpEL,который наряду с вычислением математических выражений делает гораздо больше,поэтому,возможно,слегка переборщил.Вам не обязательно использовать фреймворк Spring для использования этой библиотеки выражений,так как он является самостоятельным.Копирование примеров из документации по SpEL:</target>
        </trans-unit>
        <trans-unit id="f183c3165e8afe8b17298049840cd2837f05e235" translate="yes" xml:space="preserve">
          <source>At this point the operator stack should be empty, and the value
stack should have only one value in it, which is the final result.</source>
          <target state="translated">В этот момент стек оператора должен быть пустым,а в стеке значений должно быть только одно значение,которое является конечным результатом.</target>
        </trans-unit>
        <trans-unit id="fcd813eb5299875e79422935a8b3ca8932f15b90" translate="yes" xml:space="preserve">
          <source>Best regards</source>
          <target state="translated">С уважением</target>
        </trans-unit>
        <trans-unit id="8cbf674db3a09bc0d1ffedc4e64c64fe1229a2bd" translate="yes" xml:space="preserve">
          <source>Building and processing a parse tree (&lt;a href=&quot;https://github.com/stefanhaustein/expressionparser/blob/master/src/main/java/org/kobjects/expressionparser/demo/cas/TreeBuilder.java&quot;&gt;TreeBuilder.java&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Построение и обработка дерева разбора ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/stefanhaustein/expressionparser/blob/master/src/main/java/org/kobjects/expressionparser/demo/cas/TreeBuilder.java&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TreeBuilder.java&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3be0db3faa728a3164e2835916a109d2d95df639" translate="yes" xml:space="preserve">
          <source>Creating a recursive descent parser is a really good learning exercise.</source>
          <target state="translated">Создание парсера рекурсивного спуска-действительно хорошее учебное упражнение.</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="6baee3a552afa63e9da9d9fb45a6ad9ce55441a4" translate="yes" xml:space="preserve">
          <source>External library like RHINO or NASHORN can be used to run javascript. And javascript can evaluate simple formula without parcing the string. No performance impact as well if code is written well.
Below is an example with RHINO -</source>
          <target state="translated">Внешняя библиотека,такая как RHINO или NASHORN,может быть использована для запуска javascript.А javascript может вычислить простую формулу без разбора строки.Это также не повлияет на производительность,если код написан хорошо.Ниже приведен пример с RHINO -</target>
        </trans-unit>
        <trans-unit id="b84959709066603663209b9212c3cbec6471419b" translate="yes" xml:space="preserve">
          <source>For example, in Sql Server or Sqlite</source>
          <target state="translated">Например,в Sql Server или Sqlite.</target>
        </trans-unit>
        <trans-unit id="7e2033bb95b31887135d46a7cf31bbffe1de185f" translate="yes" xml:space="preserve">
          <source>For my university project, I was looking for a parser / evaluator supporting both basic formulas and more complicated equations (especially iterated operators). I found very nice open source library for JAVA and .NET called mXparser. I will give a few examples to make some feeling on the syntax, for further instructions please visit project website (especially tutorial section).</source>
          <target state="translated">Для своего университетского проекта я искал парсера-оценщика,поддерживающего как базовые формулы,так и более сложные уравнения (особенно итерационные операторы).Я нашел очень хорошую открытую библиотеку для JAVA и .NET под названием mXparser.Я приведу несколько примеров,чтобы прочувствовать синтаксис,для дальнейших инструкций посетите сайт проекта (особенно раздел руководства).</target>
        </trans-unit>
        <trans-unit id="b9b18f2943c9be49acd7bc2c77a19af47150bfaf" translate="yes" xml:space="preserve">
          <source>Found recently - in case you would like to try the syntax (and see the advanced use case) you can download the &lt;a href=&quot;https://scalarmath.org&quot;&gt;Scalar&lt;/a&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=org.mathparser.scalar.lite&quot;&gt;Calculator&lt;/a&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=org.mathparser.scalar.pro&quot;&gt;app&lt;/a&gt; that is powered by mXparser.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Найден недавно - если вы хотите попробовать синтаксис (и посмотреть расширенный вариант использования), вы можете скачать &lt;/font&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=org.mathparser.scalar.pro&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;приложение &lt;/font&gt;&lt;/a&gt;&lt;/font&gt;&lt;a href=&quot;https://scalarmath.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Scalar &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=org.mathparser.scalar.lite&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Calculator&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , которое работает на mXparser.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3411c974c0ef8392a0d6137440c8d5198424994d" translate="yes" xml:space="preserve">
          <source>Here's a full working example in Java</source>
          <target state="translated">Вот полный рабочий пример на Java.</target>
        </trans-unit>
        <trans-unit id="6629b3a9b3a5e61946b4fe5db6db2d6f8b453cc7" translate="yes" xml:space="preserve">
          <source>How about something like this:</source>
          <target state="translated">Как насчет чего-нибудь подобного:</target>
        </trans-unit>
        <trans-unit id="6e2b7fc4783d971b7c62940ac33eb2e99955667f" translate="yes" xml:space="preserve">
          <source>How to evaluate a math expression given in string form</source>
          <target state="translated">Как оценить математическое выражение,данное в строковой форме</target>
        </trans-unit>
        <trans-unit id="325fea76c774fe7b6356a69cb6244d8a3cbe14a7" translate="yes" xml:space="preserve">
          <source>However performance may suffer if many single expressions need to be evaluated individually, particularly when the DB is located on a network server.</source>
          <target state="translated">Однако производительность может пострадать,если многие отдельные выражения должны быть оценены индивидуально,особенно,когда БД расположена на сетевом сервере.</target>
        </trans-unit>
        <trans-unit id="17e55fbea734c139b96c04e349f659a632f6759a" translate="yes" xml:space="preserve">
          <source>I have implemented this to have a simple but flexible option to permit both:</source>
          <target state="translated">Я внедрил это,чтобы иметь простой,но гибкий вариант,позволяющий и то,и другое:</target>
        </trans-unit>
        <trans-unit id="623b29168ddac051ff09736a9aa511a71211e965" translate="yes" xml:space="preserve">
          <source>I think what ever way you do this it's going to involve a lot of conditional statements. But for single operations like in your examples you could limit it to 4 if statements with something like</source>
          <target state="translated">Я думаю,что когда-нибудь,как ты это сделаешь,это будет связано с множеством условных заявлений.Но для одиночных операций,как в ваших примерах,вы можете ограничить их до 4,если операторы с чем-то вроде</target>
        </trans-unit>
        <trans-unit id="bf168a32289f3a69ce3fd562b11028652acb4b8a" translate="yes" xml:space="preserve">
          <source>I want to avoid a lot of if-then-else statements.
How can I do this?</source>
          <target state="translated">Я хочу избежать множества заявлений &quot;если-что-нибудь сделаю&quot;.Как я могу это сделать?</target>
        </trans-unit>
        <trans-unit id="f52ac2cae128448688ae1e1b88616db5220a6562" translate="yes" xml:space="preserve">
          <source>I wrote an article about it &lt;a href=&quot;http://emmanueljohn.me/2015/07/05/shunting-yard-algorithm/&quot;&gt;here, with an implementation in java&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я написал статью об этом &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://emmanueljohn.me/2015/07/05/shunting-yard-algorithm/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;здесь, с реализацией в Java&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db6312e4fe13c314171c46d43eed64f5e65efc3a" translate="yes" xml:space="preserve">
          <source>I'm trying to write a Java routine to evaluate simple math expressions from &lt;code&gt;String&lt;/code&gt; values like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я пытаюсь написать подпрограмму Java для оценки простых математических выражений из &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;значений &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; таких как:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="36f9c78b343cf9643dbbbdbc6f7278000062a536" translate="yes" xml:space="preserve">
          <source>I've written this &lt;code&gt;eval&lt;/code&gt; method for arithmetic expressions to answer this question. It does addition, subtraction, multiplication, division, exponentiation (using the &lt;code&gt;^&lt;/code&gt; symbol), and a few basic functions like &lt;code&gt;sqrt&lt;/code&gt;. It supports grouping using &lt;code&gt;(&lt;/code&gt;...&lt;code&gt;)&lt;/code&gt;, and it gets the operator &lt;a href=&quot;https://en.wikipedia.org/wiki/Order_of_operations&quot;&gt;precedence&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Operator_associativity&quot;&gt;associativity&lt;/a&gt; rules correct.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я написал этот &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;метод &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для арифметических выражений, чтобы ответить на этот вопрос. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он выполняет сложение, вычитание, умножение, деление, возведение в степень (используя &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;символ &lt;/font&gt;&lt;/font&gt; &lt;code&gt;^&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) и несколько основных функций, таких как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sqrt&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он поддерживает группировку с использованием &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ... &lt;/font&gt;&lt;/font&gt; &lt;code&gt;)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;корректно &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;определяет &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;правила &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Order_of_operations&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;приоритета&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; операторов &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;и &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Operator_associativity&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ассоциативности&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d485794358ab6c11b2019cb8c6037fc4d6d8ef14" translate="yes" xml:space="preserve">
          <source>If you are trying to build a calculator then I'd surgest passing each section of the calculation separatly (each number or operator) rather than as a single string.</source>
          <target state="translated">Если вы пытаетесь построить калькулятор,то я бы оперировал,передавая каждую секцию вычисления отдельно (каждое число или оператор),а не как одну строку.</target>
        </trans-unit>
        <trans-unit id="74afb4bc9ddb21ecdc9d9e1cc4f78237ba415ef5" translate="yes" xml:space="preserve">
          <source>Immediate processing (&lt;a href=&quot;https://github.com/stefanhaustein/expressionparser/blob/master/src/main/java/org/kobjects/expressionparser/demo/calculator/Calculator.java&quot;&gt;Calculator.java&lt;/a&gt;, &lt;a href=&quot;https://github.com/stefanhaustein/expressionparser/blob/master/src/main/java/org/kobjects/expressionparser/demo/sets/SetDemo.java&quot;&gt;SetDemo.java&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Немедленная обработка ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/stefanhaustein/expressionparser/blob/master/src/main/java/org/kobjects/expressionparser/demo/calculator/Calculator.java&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Calculator.java&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/stefanhaustein/expressionparser/blob/master/src/main/java/org/kobjects/expressionparser/demo/sets/SetDemo.java&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SetDemo.java&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd682725709d7c18e33d743d1899543f49415c27" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;double&lt;/code&gt;, you could change the evaluator to use something more powerful like &lt;code&gt;BigDecimal&lt;/code&gt;, or a class that implements complex numbers, or rational numbers (fractions). You could even use &lt;code&gt;Object&lt;/code&gt;, allowing some mix of datatypes in expressions, just like a real programming language. :)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вместо &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вы можете изменить оценщик, чтобы использовать что-то более мощное, например &lt;/font&gt;&lt;/font&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , или класс, реализующий комплексные числа или рациональные числа (дроби). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы даже можете использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , позволяющий смешивать типы данных в выражениях, как настоящий язык программирования. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7bcee2c0e8b42c9ac78ae27373922ae28e2af7e5" translate="yes" xml:space="preserve">
          <source>It gets a whole lot more complicated when you want to deal with multiple operations like &quot;4+5*6&quot;.</source>
          <target state="translated">Это становится намного сложнее,когда вы хотите иметь дело с несколькими операциями типа &quot;4+5*6&quot;.</target>
        </trans-unit>
        <trans-unit id="90886e457b8b4f6e08199c1f3dda7af9a02cc8a0" translate="yes" xml:space="preserve">
          <source>It is possible to convert any expression string in infix notation to a postfix notation using &lt;a href=&quot;https://en.wikipedia.org/wiki/Shunting-yard_algorithm&quot;&gt;Djikstra's shunting-yard algorithm&lt;/a&gt;. The result of the algorithm can then serve as input to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Reverse_Polish_notation&quot;&gt;postfix algorithm&lt;/a&gt; with returns the result of the expression.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Можно преобразовать любую строку выражения в инфиксной записи в постфиксную запись с помощью &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Shunting-yard_algorithm&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;алгоритма шунтирования ярда Джикстры&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Затем результат алгоритма может служить входом для &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Reverse_Polish_notation&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;постфиксного алгоритма&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; с возвращением результата выражения.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d99e7906eac1cb64e40d3c92b04a679282ed195" translate="yes" xml:space="preserve">
          <source>It seems like &lt;a href=&quot;http://sourceforge.net/projects/jep/&quot;&gt;JEP&lt;/a&gt; should do the job</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Кажется, что &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://sourceforge.net/projects/jep/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JEP&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; должен сделать работу&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b8b9b5fbb929d159cfd765eb6d2237e0dae020a7" translate="yes" xml:space="preserve">
          <source>It's too late to answer but I came across same situation to evaluate expression in java, it might help someone</source>
          <target state="translated">Слишком поздно отвечать,но я наткнулся на ту же ситуацию,чтобы оценить выражение на яве,это может кому-то помочь.</target>
        </trans-unit>
        <trans-unit id="85b20cbf34900b61174cbfef5cba7a1f6821812a" translate="yes" xml:space="preserve">
          <source>JEXL from Apache</source>
          <target state="translated">JEXL от Apache</target>
        </trans-unit>
        <trans-unit id="2bba50be43e087d392fb4d92db31e568505a3a97" translate="yes" xml:space="preserve">
          <source>Now change all the methods that return &lt;code&gt;double&lt;/code&gt;s, so instead they return an instance of that interface. Java 8's lambda syntax works great for this. Example of one of the changed methods:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь измените все методы, которые возвращают &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; s, поэтому вместо этого они возвращают экземпляр этого интерфейса. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Лямбда-синтаксис Java 8 отлично подходит для этого. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Пример одного из измененных методов:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa1aa70de67e04698badc45f571a75ae01d6e631" translate="yes" xml:space="preserve">
          <source>Of course you could extend the above code to handle multiple calculations at the same time.</source>
          <target state="translated">Конечно,можно было бы расширить приведенный выше код,чтобы обрабатывать несколько вычислений одновременно.</target>
        </trans-unit>
        <trans-unit id="fc961aeb1f377ae5820c9c4cbefba9bd2eda1d82" translate="yes" xml:space="preserve">
          <source>Output: 7.5 &lt;a href=&quot;https://www.wolframalpha.com/input/?i=%28%284%20-%202%5E3%20%2B%201%29%20*%20-sqrt%283*3%2B4*4%29%29%20%2F%202&quot;&gt;(which is correct)&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Выход: 7,5 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.wolframalpha.com/input/?i=%28%284%20-%202%5E3%20%2B%201%29%20*%20-sqrt%283*3%2B4*4%29%29%20%2F%202&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(что правильно)&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cec43fae0cef8de67977d1383f4b49f91a935853" translate="yes" xml:space="preserve">
          <source>Read more concise SpEL examples &lt;a href=&quot;http://syntx.co/languages-frameworks/evaluating-expressions-using-spring-expression-language-spel/&quot;&gt;here&lt;/a&gt; and the complete docs &lt;a href=&quot;http://docs.spring.io/spring/docs/3.0.x/reference/expressions.html&quot;&gt;here&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Прочитайте более краткие примеры SpEL &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://syntx.co/languages-frameworks/evaluating-expressions-using-spring-expression-language-spel/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;здесь&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и полные документы &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.spring.io/spring/docs/3.0.x/reference/expressions.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;здесь&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba8d40f12cf4b5e5c2a99a97e877c80d6edae1ff" translate="yes" xml:space="preserve">
          <source>Some databases require you to use a dummy table (eg, Oracle's &quot;dual&quot; table) and others will allow you to evaluate expressions without &quot;selecting&quot; from any table.</source>
          <target state="translated">Некоторые базы данных требуют использования фиктивной таблицы (например,&quot;двойная&quot; таблица Oracle),а другие позволяют оценивать выражения без &quot;выбора&quot; из любой таблицы.</target>
        </trans-unit>
        <trans-unit id="b8092c56a98d9121844bfd753f149b6a39b3dfd8" translate="yes" xml:space="preserve">
          <source>Take note that definitively more complex expressions can be evaluated:</source>
          <target state="translated">Обратите внимание,что определенно можно оценивать более сложные выражения:</target>
        </trans-unit>
        <trans-unit id="989811a1a1bfdb2953c7ad4dbb4583f10aa1b6b0" translate="yes" xml:space="preserve">
          <source>That builds a recursive tree of &lt;code&gt;Expression&lt;/code&gt; objects representing the compiled expression (an &lt;a href=&quot;https://en.wikipedia.org/wiki/Abstract_syntax_tree&quot;&gt;abstract syntax tree&lt;/a&gt;). Then you can compile it once and evaluate it repeatedly with different values:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это создает рекурсивное дерево &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объектов &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Expression&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; представляющих скомпилированное выражение ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Abstract_syntax_tree&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;абстрактное синтаксическое дерево&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Затем вы можете скомпилировать его один раз и повторно оценить с различными значениями:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="81b296efc64d139159d578efadf8e2d5e87c5c78" translate="yes" xml:space="preserve">
          <source>The TreeBuilder linked above is part of a &lt;a href=&quot;https://github.com/stefanhaustein/expressionparser/tree/master/src/main/java/org/kobjects/expressionparser/demo/cas&quot;&gt;CAS demo package&lt;/a&gt; that does symbolic derivation. There is also a &lt;a href=&quot;https://github.com/stefanhaustein/expressionparser/tree/master/src/main/java/org/kobjects/expressionparser/demo/basic&quot;&gt;BASIC interpreter&lt;/a&gt; example and I have started to build a &lt;a href=&quot;https://github.com/stefanhaustein/typo&quot;&gt;TypeScript interpreter&lt;/a&gt; using it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TreeBuilder, связанный выше, является частью &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/stefanhaustein/expressionparser/tree/master/src/main/java/org/kobjects/expressionparser/demo/cas&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;демонстрационного пакета CAS,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который выполняет символическое &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;создание &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Существует также &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;пример &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/stefanhaustein/expressionparser/tree/master/src/main/java/org/kobjects/expressionparser/demo/basic&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;интерпретатора BASIC,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и я начал создавать &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/stefanhaustein/typo&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;интерпретатор TypeScript,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; используя его.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0c5950787f087b30e58f48e90341a41a60db767" translate="yes" xml:space="preserve">
          <source>The advantage of using a DB is that you can evaluate many expressions at the same time. Also most DB's will allow you to use highly complex expressions and   will also have a number of extra functions that can be called as necessary.</source>
          <target state="translated">Преимущество использования БД заключается в том,что вы можете оценивать множество выражений одновременно.Кроме того,большинство БД позволит использовать очень сложные выражения,а также будет иметь ряд дополнительных функций,которые можно будет вызывать по мере необходимости.</target>
        </trans-unit>
        <trans-unit id="121608a35ff952255ffc4d2dcb8fe6c1156c1acc" translate="yes" xml:space="preserve">
          <source>The bit of the parser that reads the names for functions can easily be changed to handle custom variables too, by looking up names in a variable table passed to the &lt;code&gt;eval&lt;/code&gt; method, such as a &lt;code&gt;Map&amp;lt;String,Double&amp;gt; variables&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Бит синтаксического анализатора, который считывает имена для функций, можно легко изменить для обработки пользовательских переменных, просматривая имена в таблице переменных, передаваемой &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;методу &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , например &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Map&amp;lt;String,Double&amp;gt; variables&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc76437fb404aa0973705a9b71bea5feffe95245" translate="yes" xml:space="preserve">
          <source>The correct way to solve this is with a &lt;a href=&quot;http://en.wikipedia.org/wiki/Lexical_analysis&quot;&gt;lexer&lt;/a&gt; and a &lt;a href=&quot;http://en.wikipedia.org/wiki/Parser&quot;&gt;parser&lt;/a&gt;. You can write simple versions of these yourself, or those pages also have links to Java lexers and parsers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Правильный способ решить это с помощью &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Lexical_analysis&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;лексера&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Parser&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;парсера&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете написать их простые версии, или на этих страницах также есть ссылки на лексеры и парсеры Java.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4ef27834b8576cee4eb4589abe26cae562e3ae1b" translate="yes" xml:space="preserve">
          <source>The following addresses the performance problem to some extent, by using a Sqlite in-memory database.</source>
          <target state="translated">Ниже в некоторой степени решается проблема производительности,используя базу данных Sqlite in-memory.</target>
        </trans-unit>
        <trans-unit id="7f0556635ea4b80d289b2326474aac31712e9e37" translate="yes" xml:space="preserve">
          <source>The parser is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Recursive_descent_parser&quot;&gt;recursive descent parser&lt;/a&gt;, so internally uses separate parse methods for each level of operator precedence in its grammar. I kept it &lt;strong&gt;short&lt;/strong&gt; so it's easy to modify, but here are some ideas you might want to expand it with:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Анализатор является анализатором &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Recursive_descent_parser&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;рекурсивного спуска&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , поэтому внутренне использует отдельные методы синтаксического анализа для каждого уровня приоритета оператора в своей грамматике. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я оставил его &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;коротким,&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; чтобы его можно было легко изменить, но вот некоторые идеи, которые вы можете расширить:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0e8a1bfb3a7ce7335feba6207a0a26567db135b4" translate="yes" xml:space="preserve">
          <source>The usage is very simple and gets the job done, for example:</source>
          <target state="translated">Использование очень простое и позволяет,например,выполнить работу:</target>
        </trans-unit>
        <trans-unit id="dedcd3977682849e3e0915c68cc93b738e9bdbe0" translate="yes" xml:space="preserve">
          <source>This is actually complementing the answer given by @Boann. It has a slight bug which causes &quot;-2 ^ 2&quot; to give an erroneous result of -4.0. The problem for that is the point at which the exponentiation is evaluated in his. Just move the exponentiation to the block of parseTerm(), and you'll be all fine. Have a look at the below, which is &lt;a href=&quot;https://stackoverflow.com/a/26227947/3126973&quot;&gt;@Boann's answer&lt;/a&gt; slightly modified. Modification is in the comments.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это фактически дополняет ответ, данный @Boann. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Имеется небольшая ошибка, которая приводит к тому, что &amp;laquo;-2 ^ 2&amp;raquo; дает ошибочный результат -4.0. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Проблема в том, что степень возведения в степень оценивается по-своему. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Просто переместите возведение в блок parseTerm (), и все будет в порядке. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Посмотрите на приведенный ниже &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/26227947/3126973&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ответ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , который &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@ Boann&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; слегка изменил. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Модификация есть в комментариях.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90e2a9471c2f709fc05848b873caa40e15fd1cbf" translate="yes" xml:space="preserve">
          <source>This is another interesting alternative 
&lt;a href=&quot;https://github.com/Shy-Ta/expression-evaluator-demo&quot;&gt;https://github.com/Shy-Ta/expression-evaluator-demo&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это еще одна интересная альтернатива &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/Shy-Ta/expression-evaluator-demo&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/Shy-Ta/expression-evaluator-demo&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be5e94b4b48e4e011e9884468cd0c470cb061bde" translate="yes" xml:space="preserve">
          <source>Try the following sample code using JDK1.6's Javascript engine with code injection handling.</source>
          <target state="translated">Попробуйте следующий пример кода,используя JDK1.6 Javascript-движок с инжекторной обработкой кода.</target>
        </trans-unit>
        <trans-unit id="30915fa19fcda28878f14373f519a56dad5882c8" translate="yes" xml:space="preserve">
          <source>Unlike the JavaScript engine this library is focused in evaluating mathematical expressions only. Moreover, the library is extensible and supports use of boolean operators as well as parentheses.</source>
          <target state="translated">В отличие от JavaScript-движка эта библиотека ориентирована только на оценку математических выражений.Более того,библиотека является расширяемой и поддерживает использование булевых операторов,а также круглых скобок.</target>
        </trans-unit>
        <trans-unit id="9cbfc13d7a82087f1e8cf577c42c09a7d0a82c8d" translate="yes" xml:space="preserve">
          <source>Use the javascript engine embedded in the JDK:</source>
          <target state="translated">Используйте движок javascript,встроенный в JDK:</target>
        </trans-unit>
        <trans-unit id="6204cb7e170c3d221fd87e282b3a2b3873c65a6d" translate="yes" xml:space="preserve">
          <source>What if, having added support for variables, you wanted to evaluate the same expression millions of times with changed variables, without parsing it every time? It's possible. First define an interface to use to evaluate the precompiled expression:</source>
          <target state="translated">Что если,добавив поддержку переменных,вы захотите оценивать одно и то же выражение миллионы раз с измененными переменными,не разбирая их каждый раз? Это возможно.Сначала определите интерфейс,который будет использоваться для оценки прекомпилированного выражения:</target>
        </trans-unit>
        <trans-unit id="0166cedcc76e8442c40c96689443988315cbcb64" translate="yes" xml:space="preserve">
          <source>While the operator stack is not empty,
1 Pop the operator from the operator stack.
2 Pop the value stack twice, getting two operands.
3 Apply the operator to the operands, in the correct order.
4 Push the result onto the value stack.</source>
          <target state="translated">В то время как стек операторов не пуст,1 Вытащите оператора из стека операторов.2 Дважды вывести стек значений,получив два оператора.3 Применить оператор к операндам в правильном порядке.4 Вытащить результат на стек значений.</target>
        </trans-unit>
        <trans-unit id="d6e647ec522cf4392535ce381b93391ea8a426ab" translate="yes" xml:space="preserve">
          <source>While there are still tokens to be read in,</source>
          <target state="translated">Пока еще есть жетоны,которые нужно прочитать,</target>
        </trans-unit>
        <trans-unit id="454b9e3af42a6c3673119746e53dc7307f0dc64c" translate="yes" xml:space="preserve">
          <source>With JDK1.6, you can use the built-in Javascript engine.</source>
          <target state="translated">С JDK1.6 вы можете использовать встроенный Javascript-движок.</target>
        </trans-unit>
        <trans-unit id="897d74cc15da0bb04ccacc416d65bcf6e84639c8" translate="yes" xml:space="preserve">
          <source>Yet another option: &lt;a href=&quot;https://github.com/stefanhaustein/expressionparser&quot;&gt;https://github.com/stefanhaustein/expressionparser&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Еще один вариант: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/stefanhaustein/expressionparser&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/stefanhaustein/expressionparser&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65fc69e2020c789efb9a0acd35431dce809e40bb" translate="yes" xml:space="preserve">
          <source>You can also try the &lt;a href=&quot;http://www.beanshell.org&quot;&gt;BeanShell&lt;/a&gt; interpreter:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы также можете попробовать &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;интерпретатор &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.beanshell.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;BeanShell&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0b623f10fdcde6b68c56c2713f37bfe43b6c78c5" translate="yes" xml:space="preserve">
          <source>You can evaluate expressions easily if your Java application already accesses a database, without using any other JARs.</source>
          <target state="translated">Вы можете легко оценить выражения,если ваше Java-приложение уже имеет доступ к базе данных,без использования других JAR.</target>
        </trans-unit>
        <trans-unit id="4b9d403cc607c5b71149db139f6b3d9c030f467f" translate="yes" xml:space="preserve">
          <source>You might have a look at the &lt;a href=&quot;https://bitbucket.org/axelclk/symja_android_library/wiki/Home&quot;&gt;Symja framework&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете взглянуть на платформу &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://bitbucket.org/axelclk/symja_android_library/wiki/Home&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Symja&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="69a3ac5cc2fdd16ba0d883dd36cdb3d9021373b3" translate="yes" xml:space="preserve">
          <source>and do the similar thing for every other mathematical operator accordingly ..</source>
          <target state="translated">и делать похожие вещи для каждого другого математического оператора соответственно ...</target>
        </trans-unit>
        <trans-unit id="0c54051c8ea84dc3cc644818d81f2b68f0685c3b" translate="yes" xml:space="preserve">
          <source>and in Oracle</source>
          <target state="translated">и в Оракуле</target>
        </trans-unit>
        <trans-unit id="4fa697554e8a14e6d8fba6e8342c9232a0c25df0" translate="yes" xml:space="preserve">
          <source>if we are going to implement it then we can can use the below algorithm :--</source>
          <target state="translated">если мы собираемся его реализовать,то можем использовать следующий алгоритм :--</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
