<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/3422673">
    <body>
      <group id="3422673">
        <trans-unit id="b189493d0723abaf0a25aabd29c10044c9aa3c0f" translate="yes" xml:space="preserve">
          <source>1 - Simple furmula</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1-단순 furmula&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b17ad8051a0cd08297c27ef47792e7a5aea6b8f" translate="yes" xml:space="preserve">
          <source>1.1 Get the next token.
1.2 If the token is:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1.1 다음 토큰을 얻으십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1.2 토큰이 다음과 같은 경우 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="70e5f660d27c4d6a729ee5eca4fc60ae93185e65" translate="yes" xml:space="preserve">
          <source>1.2.1 A number: push it onto the value stack.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1.2.1 숫자 : 값 스택으로 밀어 넣습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b54a111936c58ee5af526a780e97f447695a9829" translate="yes" xml:space="preserve">
          <source>1.2.2 A variable: get its value, and push onto the value stack.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1.2.2 변수 : 값을 가져 와서 값 스택으로 푸시합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91e884a1365182e677736fc56ff9444bf690c751" translate="yes" xml:space="preserve">
          <source>1.2.3 A left parenthesis: push it onto the operator stack.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1.2.3 왼쪽 괄호 : 연산자 스택으로 밀어 넣습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87f2589084a9e2986f1c812f2dd76b001c34f226" translate="yes" xml:space="preserve">
          <source>1.2.4 A right parenthesis:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1.2.4 오른쪽 괄호 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0735c6d8c0d48bfee9f097e3b57bbcb2f691ff1" translate="yes" xml:space="preserve">
          <source>1.2.5 An operator (call it thisOp):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1.2.5 연산자 (이것이라고 부르십시오) :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b70cb0631c94b280e75474fa969abb9710d178f2" translate="yes" xml:space="preserve">
          <source>2 - User defined arguments and constants</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2-사용자 정의 인수 및 상수&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15cd0cb27cccb8c62a2245c1bf5615624c873f23" translate="yes" xml:space="preserve">
          <source>3 - User defined functions</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3-사용자 정의 함수&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ccc6e9cea830b7494c74794e255cdb8b267b2fb4" translate="yes" xml:space="preserve">
          <source>4 - Iteration</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;4-반복&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2fe4e674579e140c3dcf8a1fe81a54e3cf17b70a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.beyondlinux.com/2011/08/07/3-method-to-evaluate-expressions/&quot;&gt;This article&lt;/a&gt; discusses various approaches. Here are the 2 key approaches mentioned in the article:</source>
          <target state="translated">&lt;a href=&quot;http://www.beyondlinux.com/2011/08/07/3-method-to-evaluate-expressions/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 기사&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서는 다양한 접근 방식에 대해 설명합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 기사에서 언급 한 두 가지 주요 접근법은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1740655f956511dc473f3c2abef5635fa5f3f604" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/uklimaschewski/EvalEx&quot;&gt;HERE&lt;/a&gt; is another open source library on GitHub named EvalEx.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/uklimaschewski/EvalEx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; EitEx라는 GitHub의 또 다른 오픈 소스 라이브러리입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="66851ccaa5d4bff14d124ad631290650d91d3081" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MVEL&lt;/code&gt; does runtime evaluation of expressions, we can write a java code in &lt;code&gt;String&lt;/code&gt; to get it evaluated in this.</source>
          <target state="translated">&lt;code&gt;MVEL&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 표현식의 런타임 평가를 수행하며, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이를 평가하기 위해 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java 코드를 작성할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1da97c9df67bfe9403bc690b02dd407fa01987a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Different datatypes:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 데이터 유형 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ea5c2c6b95749aa4e52965a30787c2b280bbfcac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Separate compilation and evaluation:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;별도의 편집 및 평가 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4c51f75623c112c9098f9b294cb11df633411dc1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Variables:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Variables:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a470a1c3c36ac43c6f08cff8179aac1bd3f98305" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;All code in this answer released &lt;a href=&quot;https://creativecommons.org/publicdomain/zero/1.0/&quot;&gt;to the public domain&lt;/a&gt;. Have fun!&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 답변의 모든 코드 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://creativecommons.org/publicdomain/zero/1.0/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 공개 도메인에&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 릴리스되었습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즐기세요!&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="4071041dfbfbcfced9aef256cf6b920e7da9354f" translate="yes" xml:space="preserve">
          <source>A Java class that can evaluate mathematical expressions:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수학 표현식을 평가할 수있는 Java 클래스 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="11958cfc83000edc5cd619a8e7a09c04db89d839" translate="yes" xml:space="preserve">
          <source>Allows for scripts that include references to java objects.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java 객체에 대한 참조를 포함하는 스크립트를 허용합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a821e43c3b969654c45585b8dd96b345c961af5d" translate="yes" xml:space="preserve">
          <source>And few examples</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 몇 가지 예&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b645420a182b55b4dad7f4c15d3ff4460c22c049" translate="yes" xml:space="preserve">
          <source>Another way is to use Spring Expression Language or SpEL which does a whole lot more along with evaluating mathematical expressions therefore maybe slightly overkill. You do not have to be using Spring framework to use this expression library as it is stand-alone. Copying examples from SpEL's documentation:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또 다른 방법은 수학 표현 평가와 함께 훨씬 더 많은 기능을 수행하는 Spring Expression Language 또는 SpEL을 사용하는 것이므로 약간 과잉 일 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 표현식 라이브러리를 독립형으로 사용하기 위해 Spring 프레임 워크를 사용할 필요는 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SpEL 문서에서 예제 복사 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f183c3165e8afe8b17298049840cd2837f05e235" translate="yes" xml:space="preserve">
          <source>At this point the operator stack should be empty, and the value
stack should have only one value in it, which is the final result.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 시점에서 연산자 스택은 비어 있어야하며 값 스택에는 값이 하나만 있어야합니다. 이것이 최종 결과입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fcd813eb5299875e79422935a8b3ca8932f15b90" translate="yes" xml:space="preserve">
          <source>Best regards</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;친애하는&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8cbf674db3a09bc0d1ffedc4e64c64fe1229a2bd" translate="yes" xml:space="preserve">
          <source>Building and processing a parse tree (&lt;a href=&quot;https://github.com/stefanhaustein/expressionparser/blob/master/src/main/java/org/kobjects/expressionparser/demo/cas/TreeBuilder.java&quot;&gt;TreeBuilder.java&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;구문 분석 트리 빌드 및 처리 ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/stefanhaustein/expressionparser/blob/master/src/main/java/org/kobjects/expressionparser/demo/cas/TreeBuilder.java&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TreeBuilder.java&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3be0db3faa728a3164e2835916a109d2d95df639" translate="yes" xml:space="preserve">
          <source>Creating a recursive descent parser is a really good learning exercise.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;재귀 강하 파서를 만드는 것은 정말 좋은 학습 연습입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="6baee3a552afa63e9da9d9fb45a6ad9ce55441a4" translate="yes" xml:space="preserve">
          <source>External library like RHINO or NASHORN can be used to run javascript. And javascript can evaluate simple formula without parcing the string. No performance impact as well if code is written well.
Below is an example with RHINO -</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;RHINO 또는 NASHORN과 같은 외부 라이브러리를 사용하여 자바 스크립트를 실행할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 자바 스크립트는 문자열을 파싱하지 않고 간단한 수식을 평가할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드를 잘 작성해도 성능에 영향을 미치지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래는 RHINO의 예입니다-&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b84959709066603663209b9212c3cbec6471419b" translate="yes" xml:space="preserve">
          <source>For example, in Sql Server or Sqlite</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 Sql Server 또는 Sqlite에서&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7e2033bb95b31887135d46a7cf31bbffe1de185f" translate="yes" xml:space="preserve">
          <source>For my university project, I was looking for a parser / evaluator supporting both basic formulas and more complicated equations (especially iterated operators). I found very nice open source library for JAVA and .NET called mXparser. I will give a few examples to make some feeling on the syntax, for further instructions please visit project website (especially tutorial section).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대학 프로젝트에서 기본 수식과 더 복잡한 수식 (특히 반복 연산자)을 모두 지원하는 파서 / 평가자를 찾고있었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mXparser라는 JAVA 및 .NET에 대한 매우 훌륭한 오픈 소스 라이브러리를 찾았습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;구문에 대한 느낌을주는 몇 가지 예를 제공 할 것입니다. 자세한 지침은 프로젝트 웹 사이트 (특히 자습서 섹션)를 방문하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b9b18f2943c9be49acd7bc2c77a19af47150bfaf" translate="yes" xml:space="preserve">
          <source>Found recently - in case you would like to try the syntax (and see the advanced use case) you can download the &lt;a href=&quot;https://scalarmath.org&quot;&gt;Scalar&lt;/a&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=org.mathparser.scalar.lite&quot;&gt;Calculator&lt;/a&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=org.mathparser.scalar.pro&quot;&gt;app&lt;/a&gt; that is powered by mXparser.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;최근에 발견 &amp;ndash; 구문을 사용하려는 경우 (고급 사용 사례 참조) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mXparser가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;제공하는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://scalarmath.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Scalar &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=org.mathparser.scalar.lite&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Calculator &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=org.mathparser.scalar.pro&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;앱&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다운로드 할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3411c974c0ef8392a0d6137440c8d5198424994d" translate="yes" xml:space="preserve">
          <source>Here's a full working example in Java</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 Java의 전체 작동 예입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6629b3a9b3a5e61946b4fe5db6db2d6f8b453cc7" translate="yes" xml:space="preserve">
          <source>How about something like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이런 식으로 어떻습니까 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6e2b7fc4783d971b7c62940ac33eb2e99955667f" translate="yes" xml:space="preserve">
          <source>How to evaluate a math expression given in string form</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자열 형식으로 주어진 수학 표현식을 평가하는 방법&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="325fea76c774fe7b6356a69cb6244d8a3cbe14a7" translate="yes" xml:space="preserve">
          <source>However performance may suffer if many single expressions need to be evaluated individually, particularly when the DB is located on a network server.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 많은 단일 표현식을 개별적으로 평가해야하는 경우, 특히 DB가 네트워크 서버에있는 경우 성능이 저하 될 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="17e55fbea734c139b96c04e349f659a632f6759a" translate="yes" xml:space="preserve">
          <source>I have implemented this to have a simple but flexible option to permit both:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;간단하지만 유연한 옵션으로 두 가지를 모두 허용하도록 이것을 구현했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="623b29168ddac051ff09736a9aa511a71211e965" translate="yes" xml:space="preserve">
          <source>I think what ever way you do this it's going to involve a lot of conditional statements. But for single operations like in your examples you could limit it to 4 if statements with something like</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 당신이 이것을하는 방법에 많은 조건문이 포함될 것이라고 생각합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 귀하의 예제와 같은 단일 작업의 경우 다음과 같은 경우를 사용하여 4 개의 if 문으로 제한 할 수 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bf168a32289f3a69ce3fd562b11028652acb4b8a" translate="yes" xml:space="preserve">
          <source>I want to avoid a lot of if-then-else statements.
How can I do this?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 많은 if-then-else 진술을 피하고 싶습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어떻게해야합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f52ac2cae128448688ae1e1b88616db5220a6562" translate="yes" xml:space="preserve">
          <source>I wrote an article about it &lt;a href=&quot;http://emmanueljohn.me/2015/07/05/shunting-yard-algorithm/&quot;&gt;here, with an implementation in java&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;http://emmanueljohn.me/2015/07/05/shunting-yard-algorithm/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에 Java로 구현 된&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 기사를 썼습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db6312e4fe13c314171c46d43eed64f5e65efc3a" translate="yes" xml:space="preserve">
          <source>I'm trying to write a Java routine to evaluate simple math expressions from &lt;code&gt;String&lt;/code&gt; values like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;String&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 값 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 간단한 수학 표현식을 평가하기 위해 Java 루틴을 작성하려고합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="36f9c78b343cf9643dbbbdbc6f7278000062a536" translate="yes" xml:space="preserve">
          <source>I've written this &lt;code&gt;eval&lt;/code&gt; method for arithmetic expressions to answer this question. It does addition, subtraction, multiplication, division, exponentiation (using the &lt;code&gt;^&lt;/code&gt; symbol), and a few basic functions like &lt;code&gt;sqrt&lt;/code&gt;. It supports grouping using &lt;code&gt;(&lt;/code&gt;...&lt;code&gt;)&lt;/code&gt;, and it gets the operator &lt;a href=&quot;https://en.wikipedia.org/wiki/Order_of_operations&quot;&gt;precedence&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Operator_associativity&quot;&gt;associativity&lt;/a&gt; rules correct.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 질문에 답하기 위해 산술 표현식을위한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 방법을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작성했습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더하기, 빼기, 곱하기, 나누기, 지수 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;^&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 기호 사용) 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sqrt&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 같은 몇 가지 기본 함수를 수행 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ... &lt;/font&gt;&lt;/font&gt; &lt;code&gt;)&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용한 그룹화를 지원 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하며 연산자 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Order_of_operations&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우선 순위&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Operator_associativity&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;연관성&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 규칙을 올바르게 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가져옵니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d485794358ab6c11b2019cb8c6037fc4d6d8ef14" translate="yes" xml:space="preserve">
          <source>If you are trying to build a calculator then I'd surgest passing each section of the calculation separatly (each number or operator) rather than as a single string.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;계산기를 만들려고하면 계산의 각 섹션을 단일 문자열이 아닌 개별적으로 (각 숫자 또는 연산자) 전달하는 것이 가장 좋습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="74afb4bc9ddb21ecdc9d9e1cc4f78237ba415ef5" translate="yes" xml:space="preserve">
          <source>Immediate processing (&lt;a href=&quot;https://github.com/stefanhaustein/expressionparser/blob/master/src/main/java/org/kobjects/expressionparser/demo/calculator/Calculator.java&quot;&gt;Calculator.java&lt;/a&gt;, &lt;a href=&quot;https://github.com/stefanhaustein/expressionparser/blob/master/src/main/java/org/kobjects/expressionparser/demo/sets/SetDemo.java&quot;&gt;SetDemo.java&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉시 처리 ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/stefanhaustein/expressionparser/blob/master/src/main/java/org/kobjects/expressionparser/demo/calculator/Calculator.java&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Calculator.java&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/stefanhaustein/expressionparser/blob/master/src/main/java/org/kobjects/expressionparser/demo/sets/SetDemo.java&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SetDemo.java&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd682725709d7c18e33d743d1899543f49415c27" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;double&lt;/code&gt;, you could change the evaluator to use something more powerful like &lt;code&gt;BigDecimal&lt;/code&gt;, or a class that implements complex numbers, or rational numbers (fractions). You could even use &lt;code&gt;Object&lt;/code&gt;, allowing some mix of datatypes in expressions, just like a real programming language. :)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대신 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 같은 더 강력한 것을 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하거나 복소수 또는 유리수 (분수)를 구현하는 클래스 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 사용하도록 평가자를 변경할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 실제 프로그래밍 언어처럼 표현식에 여러 데이터 유형을 혼합 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7bcee2c0e8b42c9ac78ae27373922ae28e2af7e5" translate="yes" xml:space="preserve">
          <source>It gets a whole lot more complicated when you want to deal with multiple operations like &quot;4+5*6&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;4 + 5 * 6&quot;과 같은 여러 작업을 처리하려는 경우 훨씬 더 복잡해집니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90886e457b8b4f6e08199c1f3dda7af9a02cc8a0" translate="yes" xml:space="preserve">
          <source>It is possible to convert any expression string in infix notation to a postfix notation using &lt;a href=&quot;https://en.wikipedia.org/wiki/Shunting-yard_algorithm&quot;&gt;Djikstra's shunting-yard algorithm&lt;/a&gt;. The result of the algorithm can then serve as input to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Reverse_Polish_notation&quot;&gt;postfix algorithm&lt;/a&gt; with returns the result of the expression.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Shunting-yard_algorithm&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Djikstra의 분로 야드 알고리즘을&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하여 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;접두사&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 표기법의 표현식 문자열을 접미사 표기법으로 변환 할 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Reverse_Polish_notation&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;알고리즘&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 결과는 표현식의 결과를 리턴하여 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;접미사 알고리즘&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 대한 입력으로 사용될 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d99e7906eac1cb64e40d3c92b04a679282ed195" translate="yes" xml:space="preserve">
          <source>It seems like &lt;a href=&quot;http://sourceforge.net/projects/jep/&quot;&gt;JEP&lt;/a&gt; should do the job</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://sourceforge.net/projects/jep/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JEP&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 일을 해야하는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것처럼 보입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b8b9b5fbb929d159cfd765eb6d2237e0dae020a7" translate="yes" xml:space="preserve">
          <source>It's too late to answer but I came across same situation to evaluate expression in java, it might help someone</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대답하기에는 너무 늦었지만 Java에서 표현식을 평가하기 위해 동일한 상황을 겪었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="85b20cbf34900b61174cbfef5cba7a1f6821812a" translate="yes" xml:space="preserve">
          <source>JEXL from Apache</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Apache의 JEXL&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2bba50be43e087d392fb4d92db31e568505a3a97" translate="yes" xml:space="preserve">
          <source>Now change all the methods that return &lt;code&gt;double&lt;/code&gt;s, so instead they return an instance of that interface. Java 8's lambda syntax works great for this. Example of one of the changed methods:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 반환하는 모든 메서드를 변경 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 대신 해당 인터페이스의 인스턴스를 반환합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java 8의 람다 구문은이 작업에 효과적입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변경된 방법 중 하나의 예 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa1aa70de67e04698badc45f571a75ae01d6e631" translate="yes" xml:space="preserve">
          <source>Of course you could extend the above code to handle multiple calculations at the same time.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;물론 여러 계산을 동시에 처리하기 위해 위의 코드를 확장 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc961aeb1f377ae5820c9c4cbefba9bd2eda1d82" translate="yes" xml:space="preserve">
          <source>Output: 7.5 &lt;a href=&quot;https://www.wolframalpha.com/input/?i=%28%284%20-%202%5E3%20%2B%201%29%20*%20-sqrt%283*3%2B4*4%29%29%20%2F%202&quot;&gt;(which is correct)&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;출력 : 7.5 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.wolframalpha.com/input/?i=%28%284%20-%202%5E3%20%2B%201%29%20*%20-sqrt%283*3%2B4*4%29%29%20%2F%202&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(정확한)&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cec43fae0cef8de67977d1383f4b49f91a935853" translate="yes" xml:space="preserve">
          <source>Read more concise SpEL examples &lt;a href=&quot;http://syntx.co/languages-frameworks/evaluating-expressions-using-spring-expression-language-spel/&quot;&gt;here&lt;/a&gt; and the complete docs &lt;a href=&quot;http://docs.spring.io/spring/docs/3.0.x/reference/expressions.html&quot;&gt;here&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 간결한 SpEL 예제를 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://syntx.co/languages-frameworks/evaluating-expressions-using-spring-expression-language-spel/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에서&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 읽고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전체 문서를 &lt;/font&gt;&lt;a href=&quot;http://docs.spring.io/spring/docs/3.0.x/reference/expressions.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기 &lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 읽으 &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;십시오&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba8d40f12cf4b5e5c2a99a97e877c80d6edae1ff" translate="yes" xml:space="preserve">
          <source>Some databases require you to use a dummy table (eg, Oracle's &quot;dual&quot; table) and others will allow you to evaluate expressions without &quot;selecting&quot; from any table.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부 데이터베이스는 더미 테이블 (예 : Oracle의 &quot;이중&quot;테이블)을 사용해야하며 다른 데이터베이스에서는 테이블에서 &quot;선택&quot;하지 않고 식을 평가할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b8092c56a98d9121844bfd753f149b6a39b3dfd8" translate="yes" xml:space="preserve">
          <source>Take note that definitively more complex expressions can be evaluated:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;확실히 더 복잡한 표현을 평가할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="989811a1a1bfdb2953c7ad4dbb4583f10aa1b6b0" translate="yes" xml:space="preserve">
          <source>That builds a recursive tree of &lt;code&gt;Expression&lt;/code&gt; objects representing the compiled expression (an &lt;a href=&quot;https://en.wikipedia.org/wiki/Abstract_syntax_tree&quot;&gt;abstract syntax tree&lt;/a&gt;). Then you can compile it once and evaluate it repeatedly with different values:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컴파일 된 표현식 ( &lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Abstract_syntax_tree&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추상 구문 트리&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나타내는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Expression&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 재귀 트리를 만듭니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 한 번 컴파일하고 다른 값으로 반복해서 평가할 수 있습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="81b296efc64d139159d578efadf8e2d5e87c5c78" translate="yes" xml:space="preserve">
          <source>The TreeBuilder linked above is part of a &lt;a href=&quot;https://github.com/stefanhaustein/expressionparser/tree/master/src/main/java/org/kobjects/expressionparser/demo/cas&quot;&gt;CAS demo package&lt;/a&gt; that does symbolic derivation. There is also a &lt;a href=&quot;https://github.com/stefanhaustein/expressionparser/tree/master/src/main/java/org/kobjects/expressionparser/demo/basic&quot;&gt;BASIC interpreter&lt;/a&gt; example and I have started to build a &lt;a href=&quot;https://github.com/stefanhaustein/typo&quot;&gt;TypeScript interpreter&lt;/a&gt; using it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위에 링크 된 TreeBuilder &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 기호 파생을 수행 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/stefanhaustein/expressionparser/tree/master/src/main/java/org/kobjects/expressionparser/demo/cas&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CAS 데모 패키지의&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 일부입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/stefanhaustein/expressionparser/tree/master/src/main/java/org/kobjects/expressionparser/demo/basic&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;BASIC 인터프리터&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 예제 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;도 있으며 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이를 사용하여 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/stefanhaustein/typo&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TypeScript 인터프리터&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 빌드하기 시작 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0c5950787f087b30e58f48e90341a41a60db767" translate="yes" xml:space="preserve">
          <source>The advantage of using a DB is that you can evaluate many expressions at the same time. Also most DB's will allow you to use highly complex expressions and   will also have a number of extra functions that can be called as necessary.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DB를 사용하면 여러 식을 동시에 평가할 수 있다는 장점이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 대부분의 DB를 사용하면 매우 복잡한 표현식을 사용할 수 있으며 필요에 따라 호출 할 수있는 추가 기능이 많이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="121608a35ff952255ffc4d2dcb8fe6c1156c1acc" translate="yes" xml:space="preserve">
          <source>The bit of the parser that reads the names for functions can easily be changed to handle custom variables too, by looking up names in a variable table passed to the &lt;code&gt;eval&lt;/code&gt; method, such as a &lt;code&gt;Map&amp;lt;String,Double&amp;gt; variables&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수의 이름을 읽는 파서 비트는 &lt;/font&gt; &lt;code&gt;Map&amp;lt;String,Double&amp;gt; variables&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 같은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전달 된 변수 테이블에서 이름을 찾아서 사용자 정의 변수를 처리하도록 쉽게 변경할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc76437fb404aa0973705a9b71bea5feffe95245" translate="yes" xml:space="preserve">
          <source>The correct way to solve this is with a &lt;a href=&quot;http://en.wikipedia.org/wiki/Lexical_analysis&quot;&gt;lexer&lt;/a&gt; and a &lt;a href=&quot;http://en.wikipedia.org/wiki/Parser&quot;&gt;parser&lt;/a&gt;. You can write simple versions of these yourself, or those pages also have links to Java lexers and parsers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것을 해결하는 올바른 방법은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Lexical_analysis&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;렉서&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Parser&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파서를 사용하는 것&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 버전의 간단한 버전을 직접 작성하거나 해당 페이지에도 Java 렉서 및 구문 분석기에 대한 링크가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4ef27834b8576cee4eb4589abe26cae562e3ae1b" translate="yes" xml:space="preserve">
          <source>The following addresses the performance problem to some extent, by using a Sqlite in-memory database.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 Sqlite 인 메모리 데이터베이스를 사용하여 성능 문제를 어느 정도 해결합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f0556635ea4b80d289b2326474aac31712e9e37" translate="yes" xml:space="preserve">
          <source>The parser is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Recursive_descent_parser&quot;&gt;recursive descent parser&lt;/a&gt;, so internally uses separate parse methods for each level of operator precedence in its grammar. I kept it &lt;strong&gt;short&lt;/strong&gt; so it's easy to modify, but here are some ideas you might want to expand it with:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파서는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Recursive_descent_parser&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;재귀 하강 파서&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이므로 내부적으로 문법에서 각 연산자 우선 순위에 대해 별도의 구문 분석 방법을 사용합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수정하기 쉽도록 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;짧게&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유지 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;했지만 다음과 같이 확장하려는 아이디어가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0e8a1bfb3a7ce7335feba6207a0a26567db135b4" translate="yes" xml:space="preserve">
          <source>The usage is very simple and gets the job done, for example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용법은 매우 간단하고 작업을 완료합니다 (예 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dedcd3977682849e3e0915c68cc93b738e9bdbe0" translate="yes" xml:space="preserve">
          <source>This is actually complementing the answer given by @Boann. It has a slight bug which causes &quot;-2 ^ 2&quot; to give an erroneous result of -4.0. The problem for that is the point at which the exponentiation is evaluated in his. Just move the exponentiation to the block of parseTerm(), and you'll be all fine. Have a look at the below, which is &lt;a href=&quot;https://stackoverflow.com/a/26227947/3126973&quot;&gt;@Boann's answer&lt;/a&gt; slightly modified. Modification is in the comments.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 실제로 @Boann의 답변을 보완합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;약간의 버그가있어서 &quot;-2 ^ 2&quot;가 -4.0의 잘못된 결과를 낳습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그 문제는 지수가 지수에서 평가되는 시점입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;지수를 parseTerm () 블록으로 옮기면 괜찮을 것입니다. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/26227947/3126973&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Boann의 답변이&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 약간 수정 된 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래를 살펴보십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수정 사항은 의견에 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90e2a9471c2f709fc05848b873caa40e15fd1cbf" translate="yes" xml:space="preserve">
          <source>This is another interesting alternative 
&lt;a href=&quot;https://github.com/Shy-Ta/expression-evaluator-demo&quot;&gt;https://github.com/Shy-Ta/expression-evaluator-demo&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 또 다른 흥미로운 대안입니다 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/Shy-Ta/expression-evaluator-demo&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/Shy-Ta/expression-evaluator-demo&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be5e94b4b48e4e011e9884468cd0c470cb061bde" translate="yes" xml:space="preserve">
          <source>Try the following sample code using JDK1.6's Javascript engine with code injection handling.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드 삽입 처리와 함께 JDK1.6의 Javascript 엔진을 사용하여 다음 샘플 코드를 사용해보십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30915fa19fcda28878f14373f519a56dad5882c8" translate="yes" xml:space="preserve">
          <source>Unlike the JavaScript engine this library is focused in evaluating mathematical expressions only. Moreover, the library is extensible and supports use of boolean operators as well as parentheses.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript 엔진과 달리이 라이브러리는 수학 표현식 만 평가하는 데 중점을 둡니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 라이브러리는 확장 가능하며 부울 연산자와 괄호 사용을 지원합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9cbfc13d7a82087f1e8cf577c42c09a7d0a82c8d" translate="yes" xml:space="preserve">
          <source>Use the javascript engine embedded in the JDK:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JDK에 포함 된 자바 스크립트 엔진을 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6204cb7e170c3d221fd87e282b3a2b3873c65a6d" translate="yes" xml:space="preserve">
          <source>What if, having added support for variables, you wanted to evaluate the same expression millions of times with changed variables, without parsing it every time? It's possible. First define an interface to use to evaluate the precompiled expression:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수에 대한 지원을 추가 한 후 매번 구문 분석하지 않고 변경된 변수로 동일한 표현식을 수백만 번 평가하려면 어떻게해야합니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있을 수있다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;먼저 사전 컴파일 된 표현식을 평가하는 데 사용할 인터페이스를 정의하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0166cedcc76e8442c40c96689443988315cbcb64" translate="yes" xml:space="preserve">
          <source>While the operator stack is not empty,
1 Pop the operator from the operator stack.
2 Pop the value stack twice, getting two operands.
3 Apply the operator to the operands, in the correct order.
4 Push the result onto the value stack.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;운영자 스택이 비어 있지 않은 경우 1 운영자 스택에서 운영자를 팝합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2 값 스택을 두 번 팝하여 두 피연산자를 얻습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3 피연산자에 올바른 순서로 연산자를 적용하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;4 결과를 값 스택으로 밉니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d6e647ec522cf4392535ce381b93391ea8a426ab" translate="yes" xml:space="preserve">
          <source>While there are still tokens to be read in,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;읽을 토큰이 여전히 있지만,&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="454b9e3af42a6c3673119746e53dc7307f0dc64c" translate="yes" xml:space="preserve">
          <source>With JDK1.6, you can use the built-in Javascript engine.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JDK1.6에서는 내장 Javascript 엔진을 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="897d74cc15da0bb04ccacc416d65bcf6e84639c8" translate="yes" xml:space="preserve">
          <source>Yet another option: &lt;a href=&quot;https://github.com/stefanhaustein/expressionparser&quot;&gt;https://github.com/stefanhaustein/expressionparser&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또 다른 옵션 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/stefanhaustein/expressionparser&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/stefanhaustein/expressionparser&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65fc69e2020c789efb9a0acd35431dce809e40bb" translate="yes" xml:space="preserve">
          <source>You can also try the &lt;a href=&quot;http://www.beanshell.org&quot;&gt;BeanShell&lt;/a&gt; interpreter:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://www.beanshell.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;BeanShell&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인터프리터를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용해 볼 수도 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0b623f10fdcde6b68c56c2713f37bfe43b6c78c5" translate="yes" xml:space="preserve">
          <source>You can evaluate expressions easily if your Java application already accesses a database, without using any other JARs.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java 응용 프로그램이 다른 JAR을 사용하지 않고 이미 데이터베이스에 액세스하는 경우 표현식을 쉽게 평가할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b9d403cc607c5b71149db139f6b3d9c030f467f" translate="yes" xml:space="preserve">
          <source>You might have a look at the &lt;a href=&quot;https://bitbucket.org/axelclk/symja_android_library/wiki/Home&quot;&gt;Symja framework&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://bitbucket.org/axelclk/symja_android_library/wiki/Home&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Symja 프레임 워크를&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 살펴볼 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="69a3ac5cc2fdd16ba0d883dd36cdb3d9021373b3" translate="yes" xml:space="preserve">
          <source>and do the similar thing for every other mathematical operator accordingly ..</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 다른 모든 수학적 연산자에 대해서도 비슷한 일을합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0c54051c8ea84dc3cc644818d81f2b68f0685c3b" translate="yes" xml:space="preserve">
          <source>and in Oracle</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오라클에서&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4fa697554e8a14e6d8fba6e8342c9232a0c25df0" translate="yes" xml:space="preserve">
          <source>if we are going to implement it then we can can use the below algorithm :--</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리가 그것을 구현하려고한다면 우리는 아래 알고리즘을 사용할 수 있습니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
