<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/34413">
    <body>
      <group id="34413">
        <trans-unit id="57e52cc4b87772caf763ed2e72c6db1b960c94e2" translate="yes" xml:space="preserve">
          <source>3 ways to solve NoClassDefFoundError</source>
          <target state="translated">NoClassDefFoundErrorを解決する3つの方法</target>
        </trans-unit>
        <trans-unit id="a1519d61f0f8a8df6bfae9f91156156ad44d72b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NoClassDefError&lt;/code&gt; will be thrown accompanied with &lt;code&gt;ExceptionInInitializerError&lt;/code&gt; from the static block &lt;code&gt;RuntimeException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NoClassDefError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、静的ブロック&lt;/font&gt; &lt;code&gt;RuntimeException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;からの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExceptionInInitializerError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と共にスローされ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6a2a48f2e84eea79fedf2fd5daf8ddf626bce091" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NoClassDefFoundError&lt;/code&gt; can also occur when a &lt;strong&gt;static&lt;/strong&gt; initializer tries to load a resource bundle that is not available in runtime, for example a properties file that the affected class tries to load from the &lt;code&gt;META-INF&lt;/code&gt; directory, but isn&amp;rsquo;t there. If you don&amp;rsquo;t catch &lt;code&gt;NoClassDefFoundError&lt;/code&gt;, sometimes you won&amp;rsquo;t be able to see the full stack trace; to overcome this you can temporarily use a &lt;code&gt;catch&lt;/code&gt; clause for &lt;code&gt;Throwable&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;NoClassDefFoundError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;イニシャライザが実行時に利用できないリソースバンドルをロードしようとした&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ときにも発生する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可能性があります。たとえば、影響を受けるクラスが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;META-INF&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ディレクトリ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;からロードしようとし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たが、そこにない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティファイルなどです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NoClassDefFoundError&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キャッチし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ないと、完全なスタックトレースを表示できない場合があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを克服するには&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;Throwable&lt;/code&gt; の&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;句を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一時的に使用できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9386b5f1f7d9706b2db7acb7e0857743ae15458c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;throw&lt;/code&gt; a &lt;code&gt;RuntimeException&lt;/code&gt; in the &lt;code&gt;static&lt;/code&gt; block of your class &lt;code&gt;Example&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;throw&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;RuntimeException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;中で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスのブロック&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Example&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f21a364d4d4c803255008e46cc44047ccd8cdbc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NoClassDefFoundErrorDemo.java&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;NoClassDefFoundErrorDemo.java&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dcdf3e747b6e67d35ab577f4653f1ce7baaa7df3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SimpleCalculator.java&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;SimpleCalculator.java&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b7a9b383bcbc1ff0b23ba323d930bf62a6191df9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;java.lang.ClassNotFoundException&lt;/code&gt;&lt;/strong&gt;  This exception indicates that the class was not found on the classpath.  This indicates that we were trying to load the class definition, and the class did not exist on the classpath.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;java.lang.ClassNotFoundException&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; この例外は、クラスパスでクラスが見つからなかったことを示し&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、クラス定義をロードしようとしていて、クラスがクラスパスに存在しなかったことを示しています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba7d37be5019def9ffd08842077d08e27515caee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;java.lang.NoClassDefFoundError&lt;/code&gt;&lt;/strong&gt;  This exception indicates that the JVM looked in its internal class definition data structure for the definition of a class and did not find it.  This is different than saying that it could not be loaded from the classpath.  Usually this indicates that we previously attempted to load a class from the classpath, but it failed for some reason - now we're trying to use the class again (and thus need to load it, since it failed last time), but we're not even going to try to load it, because we failed loading it earlier (and reasonably suspect that we would fail again).  The earlier failure could be a ClassNotFoundException or an ExceptionInInitializerError (indicating a failure in the static initialization block) or any number of other problems.  The point is, a NoClassDefFoundError is not necessarily a classpath problem.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;java.lang.NoClassDefFoundError&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; この例外は、JVMがそのクラス定義の内部クラス定義データ構造を調べたが、それが見つからなかったことを示しています。これは、クラスパスからロードできなかったということとは異なります。通常、これは以前にクラスパスからクラスをロードしようとしたが、なんらかの理由で失敗したことを示します。今度はクラスを再度使用しようとしています（したがって、前回失敗したため、クラスをロードする必要があります）が、以前にロードに失敗したので、それをロードしようとするつもりもありません（そして、再び失敗するだろうと合理的に疑っています）。以前の失敗は、ClassNotFoundExceptionまたはExceptionInInitializerError（静的な初期化ブロックの失敗を示す）またはその他の多くの問題である可能性があります。ポイントは、NoClassDefFoundErrorは必ずしもクラスパスの問題ではないということです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d567935bda089f038f9487635ef77e4b9985df14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;NoClassDefFoundError In Java&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaのNoClassDefFoundError&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc2ca60ff95080d9c7260cc1eb1cf297b8c92b83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Definition:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Definition:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1bc0a5d67820f61786ae04d054caabfe5bd3f6ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Examples:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Examples:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e1c7074b21c3a5ac9d584a22259a989ac14e1e8e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible Solutions:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可能な解決策：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5c0435aa8d4f5bb52639e905e11db05cfc6b6f40" translate="yes" xml:space="preserve">
          <source>@xli's answer gave me insight into what may be wrong in my code.</source>
          <target state="translated">xliさんの回答で、自分のコードの何が間違っているかを知ることができました。</target>
        </trans-unit>
        <trans-unit id="69ddab323655457605f73f4ce44e131eda507e08" translate="yes" xml:space="preserve">
          <source>A simple example of NoClassDefFoundError is class belongs to a missing JAR file or JAR was not added into classpath or sometimes jar's name has been changed by someone like in my case one of my colleagues has changed tibco.jar into tibco_v3.jar and the program is failing with java.lang.NoClassDefFoundError and I were wondering what's wrong.</source>
          <target state="translated">NoClassDefFoundErrorの簡単な例としては、クラスが行方不明のJARファイルに属していたり、JARがクラスパスに追加されていなかったり、jarの名前が誰かによって変更されていたりすることがあります。</target>
        </trans-unit>
        <trans-unit id="cb6b723f5f050129121fd7a91281748634add107" translate="yes" xml:space="preserve">
          <source>And the problem gone away.</source>
          <target state="translated">そして問題は消えた。</target>
        </trans-unit>
        <trans-unit id="d9f342c83c5a36c6b8ec1a64f3e7895bf86d97cd" translate="yes" xml:space="preserve">
          <source>Any start-up script is overriding Classpath environment variable.</source>
          <target state="translated">任意の起動スクリプトはクラスパス環境変数をオーバーライドしています。</target>
        </trans-unit>
        <trans-unit id="2b8e74a4746e45f061e28c8dfd703d2482b23c53" translate="yes" xml:space="preserve">
          <source>Because NoClassDefFoundError is a subclass of java.lang.LinkageError it can also come if one of it dependency like native library may not available.</source>
          <target state="translated">NoClassDefFoundErrorはjava.lang.LinkageErrorのサブクラスなので、ネイティブライブラリのような依存関係にあるものが利用できない場合にも利用できます。</target>
        </trans-unit>
        <trans-unit id="c4833eba910efe9d61cf1332137cab992a7b1ee3" translate="yes" xml:space="preserve">
          <source>Check for java.lang.ExceptionInInitializerError in your log file. NoClassDefFoundError due to the failure of static initialization is quite common.</source>
          <target state="translated">ログファイルにjava.lang.ExceptionInInitializerErrorが出ていないか確認してみましょう。静的初期化の失敗によるNoClassDefFoundErrorはよくあります。</target>
        </trans-unit>
        <trans-unit id="97db3580f50ebe0bc28bf5a1ff82f9a8336717e6" translate="yes" xml:space="preserve">
          <source>Closing the trunk copy of the project and running the test case again got rid of the problem.</source>
          <target state="translated">プロジェクトのトランクコピーを閉じて、再びテストケースを実行すると、問題は解決しました。</target>
        </trans-unit>
        <trans-unit id="3d08248a26d501b5d358854009df0c5a0bab69cb" translate="yes" xml:space="preserve">
          <source>Everyone talks here about some Java configuration stuff, JVM problems etc., in my case the error was not related to these topics at all and had a very trivial and easy to solve reason: I had a wrong annotation at my endpoint in my Controller (Spring Boot application).</source>
          <target state="translated">ここでは誰もがJavaの設定やJVMの問題などについて話していますが、私の場合、エラーはこれらのトピックとは全く関係なく、非常に些細で簡単に解決できる理由がありました:コントローラ(Spring Bootアプリケーション)のエンドポイントに間違ったアノテーションがあったからです。</target>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="c7bf3ddc94afafc1925db5e1825792d1fb95efd0" translate="yes" xml:space="preserve">
          <source>HelloWorld (main class)</source>
          <target state="translated">ハローワールド</target>
        </trans-unit>
        <trans-unit id="1d931d63441f355830eb61cfe58ae13a4d194572" translate="yes" xml:space="preserve">
          <source>Here is the code to illustrate &lt;code&gt;java.lang.NoClassDefFoundError&lt;/code&gt;. Please see &lt;a href=&quot;https://stackoverflow.com/a/5756989/1018906&quot;&gt;Jared's answer&lt;/a&gt; for detailed explanation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;java.lang.NoClassDefFoundError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を示すコードは次の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とおり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細については、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/5756989/1018906&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Jaredの回答&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="86ffba6361dd37c04250149b99aecd0973a0ec23" translate="yes" xml:space="preserve">
          <source>I am getting a &lt;code&gt;NoClassDefFoundError&lt;/code&gt; when I run my Java application.  What is typically the cause of this?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Javaアプリケーションを実行すると&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NoClassDefFoundError&lt;/code&gt; が発生&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常、これの原因は何ですか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00b2ecba32363036e04b14716fa7bd97db77c857" translate="yes" xml:space="preserve">
          <source>I fixed my problem by disabling the preDexLibraries for all modules:</source>
          <target state="translated">すべてのモジュールのpreDexLibrariesを無効にすることで問題を解決しました。</target>
        </trans-unit>
        <trans-unit id="6d8d191c0c124e3e0d20cbf8f37ad10ed14c7fd4" translate="yes" xml:space="preserve">
          <source>I found the solution. In my case, there was the static method defined due to that. The JVM can not create the another object of that class.</source>
          <target state="translated">解決策を見つけました。私の場合、そのために定義された静的メソッドがありました。JVMは、そのクラスの別のオブジェクトを作成することができません。</target>
        </trans-unit>
        <trans-unit id="ca169d9114f4ceca5d97df77712952a368facca3" translate="yes" xml:space="preserve">
          <source>I get NoClassFoundError when classes loaded by the runtime class loader cannot access classes already loaded by the java rootloader. Because the different class loaders are in different security domains (according to java) the jvm won't allow classes already loaded by the rootloader to be resolved in the runtime loader address space.</source>
          <target state="translated">ランタイム・クラス・ローダによってロードされたクラスが、すでに java ルートローダによってロードされたクラスにアクセスできないときに NoClassFoundError を取得します。異なるクラス・ローダが異なるセキュリティ・ドメインにあるため(javaによると)、jvmはルートローダによって既にロードされたクラスがランタイム・ローダのアドレス空間で解決されることを許可しません。</target>
        </trans-unit>
        <trans-unit id="68b5eec23a6049e8b8a077d8f50c753b77d0b0f5" translate="yes" xml:space="preserve">
          <source>I got NoClassDefFound errors when I didn't export a class on the &quot;Order and Export&quot; tab in the Java Build Path of my project.  Make sure to put a checkmark in the &quot;Order and Export&quot; tab of any dependencies you add to the project's build path.  See &lt;a href=&quot;https://stackoverflow.com/questions/8884818/eclipse-warning-xxxxxxxxxxx-jar-will-not-be-exported-or-published-runtime-clas&quot;&gt;Eclipse warning: XXXXXXXXXXX.jar will not be exported or published. Runtime ClassNotFoundExceptions may result&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロジェクトのJavaビルドパスの[順序とエクスポート]タブでクラスをエクスポートしないと、NoClassDefFoundエラーが発生しました。プロジェクトのビルドパスに追加する依存関係の[注文とエクスポート]タブに必ずチェックマークを付けてください。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/8884818/eclipse-warning-xxxxxxxxxxx-jar-will-not-be-exported-or-published-runtime-clas&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Eclipseの警告を&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：XXXXXXXXXXX.jarはエクスポートまたは公開されません。実行時ClassNotFoundExceptionsが発生する可能性があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6fd677550b89fe8177f29c95d3273fe065c94e3c" translate="yes" xml:space="preserve">
          <source>I got this error when I add  Maven dependency of another module to my project, the issue was finally solved by add &lt;code&gt;-Xss2m&lt;/code&gt; to my program's JVM option(It's one megabyte by default since JDK5.0). It's believed the program does not have enough stack to load class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロジェクトに別のモジュールのMaven依存関係を追加すると、このエラーが発生しました。問題は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、プログラムのJVMオプションに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;-Xss2m&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;追加することで最終的に解決され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ました（JDK5.0以降、デフォルトで1メガバイトです）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プログラムにクラスをロードするのに十分なスタックがないと考えられています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="582aae21877e63f364af9e7312e0f030a40f9b50" translate="yes" xml:space="preserve">
          <source>I got this message after removing two files from the SRC library, and when I brought them back I kept seeing this error message.</source>
          <target state="translated">SRC ライブラリから 2 つのファイルを削除した後にこのメッセージが表示されました。</target>
        </trans-unit>
        <trans-unit id="32c13fb7a419c76293ba6cd0750fc60a93e80b6d" translate="yes" xml:space="preserve">
          <source>I had the same problem, and I was stock for many hours.</source>
          <target state="translated">私も同じようなことがあり、何時間もストックしていました。</target>
        </trans-unit>
        <trans-unit id="234f71d3d8cdf45aef4bfa8e2387e2118bcee7d8" translate="yes" xml:space="preserve">
          <source>I have found that sometimes I get a NoClassDefFound error when code is compiled with an incompatible version of the class found at runtime.  The specific instance I recall is with the apache axis library.  There were actually 2 versions on my runtime classpath and it was picking up the out of date and incompatible version and not the correct one, causing a NoClassDefFound error.  This was in a command line app where I was using a command similar to this.</source>
          <target state="translated">コードが実行時に見つかったクラスの互換性のないバージョンでコンパイルされたときに、時々 NoClassDefFound エラーが出ることがわかりました。私が覚えている具体的なインスタンスは、apache axis ライブラリです。ランタイムのクラスパス上に実際には2つのバージョンがあり、古いバージョンと互換性のないバージョンを拾っていて、正しいバージョンではなく、NoClassDefFoundエラーを引き起こしていました。これは、コマンドライン・アプリケーションで、以下のようなコマンドを使用していました。</target>
        </trans-unit>
        <trans-unit id="ec8d236e9be7ab7376c9b5fca622850affbe0f0a" translate="yes" xml:space="preserve">
          <source>I was able to get it to pick up the proper version by using:</source>
          <target state="translated">を使って適正版を拾ってもらうことができました。</target>
        </trans-unit>
        <trans-unit id="3726cbb1c872a4cae7095ad3f77ba424d3863f02" translate="yes" xml:space="preserve">
          <source>I was using &lt;a href=&quot;http://en.wikipedia.org/wiki/Spring_Framework&quot;&gt;Spring Framework&lt;/a&gt; with &lt;a href=&quot;http://en.wikipedia.org/wiki/Apache_Maven&quot;&gt;Maven&lt;/a&gt; and solved this error in my project.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Apache_Maven&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mavenで&lt;/font&gt;&lt;/a&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Spring_Framework&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Spring Framework&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;していて、このエラーをプロジェクトで解決しました。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43eb4afc59538d1c08f7f7bbb63e691af28719d9" translate="yes" xml:space="preserve">
          <source>If a class was present during compile time but not available in java classpath during runtime.</source>
          <target state="translated">コンパイル時にクラスが存在していたが、実行時に java クラスパスで利用できなかった場合。</target>
        </trans-unit>
        <trans-unit id="745d481bcc8d7a898e2d28e8dc4dcff7589e0984" translate="yes" xml:space="preserve">
          <source>If someone comes here because of &lt;code&gt;java.lang.NoClassDefFoundError: org/apache/log4j/Logger&lt;/code&gt; error, in my case it was produced because I used log4j 2 (but I didn't add all the files that come with it), and some dependency library used log4j 1. The solution was to add the Log4j 1.x bridge: the jar &lt;code&gt;log4j-1.2-api-&amp;lt;version&amp;gt;.jar&lt;/code&gt; which comes with log4j 2. More info in the log4j 2 &lt;a href=&quot;https://logging.apache.org/log4j/2.x/manual/migration.html&quot;&gt;migration&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;java.lang.NoClassDefFoundError: org/apache/log4j/Logger&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エラーの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ために誰かがここに来た&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合、私の場合は、log4j 2を使用したために生成されました（ただし、付属のすべてのファイルを追加しませんでした）。依存関係ライブラリはlog4jを使用しました1.解決策はLog4j 1.xブリッジを追加することでした：jar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;log4j-1.2-api-&amp;lt;version&amp;gt;.jar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はlog4jに付属しています2. log4j 2 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://logging.apache.org/log4j/2.x/manual/migration.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;移行の&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細情報&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f36a9b53b3a6cf9f7ca4bcaed874ba90976887f" translate="yes" xml:space="preserve">
          <source>If you are working in J2EE environment than the visibility of Class among multiple Classloader can also cause java.lang.NoClassDefFoundError, see examples and scenario section for detailed discussion.</source>
          <target state="translated">J2EE環境で作業している場合、複数のクラスローダ間のクラスの可視性よりも、java.lang.NoClassDefFoundErrorが発生する可能性があるので、詳細は例とシナリオのセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="f2f0082b0b295feb9e7035eb54659c523da25c31" translate="yes" xml:space="preserve">
          <source>In a way you're &quot;sharing&quot; the &lt;code&gt;static&lt;/code&gt; block execution between tests, but the initial &lt;code&gt;ExceptionInInitializerError&lt;/code&gt; will be just in one test case. The first one that uses the problematic &lt;code&gt;Example&lt;/code&gt; class. Other test cases that use the &lt;code&gt;Example&lt;/code&gt; class will just throw &lt;code&gt;NoClassDefFoundErrors&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ある方法では&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、テスト間で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ブロックの実行を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「共有」し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、最初の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExceptionInInitializerError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は1つのテストケースに含まれます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;問題のある&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Example&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する最初の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Example&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する他のテストケースは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NoClassDefFoundErrors&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スローするだけ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3753b91439a3b75b1cb16cafc0df80103e871b79" translate="yes" xml:space="preserve">
          <source>In case you have generated-code (EMF, etc.) there can be too many static initialisers which consume all stack space.</source>
          <target state="translated">生成コード(EMFなど)を使用している場合、スタティックイニシャライザが多すぎてスタックスペースを消費してしまうことがあります。</target>
        </trans-unit>
        <trans-unit id="1f777202b37c483eb3c646ecaa746e8c51a14e8e" translate="yes" xml:space="preserve">
          <source>In my case I was able to resolve this error, while building a high-profile open-source project, by switching from Java 9 to Java 8 using &lt;a href=&quot;http://sdkman.io/&quot;&gt;SDKMAN!&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私の場合、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://sdkman.io/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SDKMAN&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用してJava 9からJava 8に切り替えることで、注目度の高いオープンソースプロジェクトを構築しながら、このエラーを解決することができました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4479d3b5b07f53cb01d4b5dd73a7478484f039ef" translate="yes" xml:space="preserve">
          <source>In my case I was getting this error due to a mismatch in the JDK versions. When I tried to run the application from Intelij it wasn't working but then running it from the command line worked. This is because Intelij was attempting to run it with the Java 11 JDK that was setup but on the command line it was running with the Java 8 JDK. After switching that setting under File &amp;gt; Project Structure &amp;gt; Project Settings &amp;gt; Project SDK, it worked for me.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私の場合、JDKバージョンの不一致が原因でこのエラーが発生していました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Intelijからアプリケーションを実行しようとすると、機能しませんでしたが、コマンドラインから実行すると機能しました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、IntelijがセットアップされたJava 11 JDKで実行しようとしたが、コマンドラインではJava 8 JDKで実行されていたためです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[ファイル]&amp;gt; [プロジェクトの構造]&amp;gt; [プロジェクトの設定]&amp;gt; [プロジェクトSDK]でその設定を切り替えた後、うまくいきました。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9bb1065d9690529d68ecdae981f3682abe847ea6" translate="yes" xml:space="preserve">
          <source>In my case, the problem was Eclipse's inability to differentiate between two different copies of the same project. I have one locked on trunk (SVN version control) and the other one working in one branch at a time. I tried out one change in the working copy as a JUnit test case, which included extracting a private inner class to be a public class on its own and while it was working, I open the other copy of the project to look around at some other part of the code that needed changes. At some point, the &lt;code&gt;NoClassDefFoundError&lt;/code&gt; popped up complaining that the private inner class was not there; double-clicking in the stack trace brought me to the source file in the wrong project copy.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私の場合、問題はEclipseが同じプロジェクトの2つの異なるコピーを区別できないことでした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は1つをトランク（SVNバージョン管理）でロックし、もう1つは一度に1つのブランチで作業しています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私はJUnitテストケースとして、作業コピーの1つの変更を試しました。これには、プライベート内部クラスをそれ自体でパブリッククラスとして抽出することが含まれ、それが機能している間に、プロジェクトのもう1つのコピーを開いて、他のいくつかを見回しました。変更が必要なコードの一部。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ある時点で、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NoClassDefFoundError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が表示され、プライベート内部クラスがそこにないという不満が出ました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スタックトレースをダブルクリックすると、間違ったプロジェクトコピーのソースファイルが表示されました。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3c2ba8f67cb651fefdb65d6e513fe46beaa68fa7" translate="yes" xml:space="preserve">
          <source>Intercept it (or if it just doesn't matter like it is thrown in a &lt;strong&gt;test case&lt;/strong&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インターセプトする（または&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テストケースで&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スローされるように問題ない&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="728040beb48a429d96f5116f90d98cfd6e48de84" translate="yes" xml:space="preserve">
          <source>It could also be because you copy the code file from an IDE with a certain package name and you want to try to run it using terminal. You will have to remove the package name from the code first.
This happens to me.</source>
          <target state="translated">また、IDEから特定のパッケージ名のコードファイルをコピーして、ターミナルを使って実行しようとした場合も考えられます。まずコードからパッケージ名を削除する必要があります。これは私にも起こります。</target>
        </trans-unit>
        <trans-unit id="adc0a84a6fe0893397c46a5382d84d8524ed7894" translate="yes" xml:space="preserve">
          <source>It is important to keep two or three different exceptions straight in our head in this case:</source>
          <target state="translated">この場合、2つ3つの異なる例外を頭の中で真っ直ぐにしておくことが大切です。</target>
        </trans-unit>
        <trans-unit id="a10feddb9f6bf99835141c23001ba7f00cbb0271" translate="yes" xml:space="preserve">
          <source>It produces output showing the loaded class, and the loader env that loaded the class.  It's very helpful tracing why a class cannot be resolved.</source>
          <target state="translated">これは、ロードされたクラスと、そのクラスをロードしたローダー環境を示す出力を生成します。クラスが解決できない理由を追跡するのに非常に便利です。</target>
        </trans-unit>
        <trans-unit id="f50ff27510433117f1cd9ba8c0a63cc27602c161" translate="yes" xml:space="preserve">
          <source>Java Virtual Machine is not able to find a particular class at runtime which was available at compile time.</source>
          <target state="translated">Java Virtual Machine は、コンパイル時に利用可能だった特定のクラスを実行時に見つけることができません。</target>
        </trans-unit>
        <trans-unit id="c9931d0a458a905d9d751a4c3d07632368c8116a" translate="yes" xml:space="preserve">
          <source>Java was unable to find the class A in runtime. 
Class A was in maven project ArtClient from a different workspace.
So I imported ArtClient to my Eclipse project. 
Two of my projects was using ArtClient as dependency.
I changed library reference to project reference for these ones (Build Path -&amp;gt; Configure Build Path).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Javaは実行時にクラスAを見つけることができませんでした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスAは、別のワークスペースのMavenプロジェクトArtClientにありました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そこで、ArtClientをEclipseプロジェクトにインポートしました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私のプロジェクトのうち2つは、依存関係としてArtClientを使用していました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ライブラリ参照をこれらのプロジェクト参照に変更しました（ビルドパス-&amp;gt;ビルドパスの構成）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cdf0e8fa49a1fdad66243404ca4f8e94c4d219d3" translate="yes" xml:space="preserve">
          <source>Just try to run with explicitly -classpath option with the classpath you think will work and if it's working then it's a sure short sign that someone is overriding java classpath.</source>
          <target state="translated">動作すると思うクラスパスを明示的に-classpathオプションで実行してみて、動作していれば、誰かがjavaのクラスパスをオーバーライドしていることを確認することができます。</target>
        </trans-unit>
        <trans-unit id="3658b1920aa2333e047d99ce0a71e6fe74e80d2b" translate="yes" xml:space="preserve">
          <source>Make sure this matches in the &lt;code&gt;module:app&lt;/code&gt; and &lt;code&gt;module:lib&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;module:app&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;module:lib&lt;/code&gt; で&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一致していることを確認し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b3e0d8aa134e15f9ca573c7669bcc313797375a" translate="yes" xml:space="preserve">
          <source>My solution was: Restart Eclipse. Since then I haven't seen this message again :-)</source>
          <target state="translated">私の解決策は Eclipseを再起動してください。それ以来、このメッセージを見たことはありません。)</target>
        </trans-unit>
        <trans-unit id="8fb3fb7dc66129f287c57838abab4b10d9d8ea7c" translate="yes" xml:space="preserve">
          <source>Now that &lt;em&gt;everything&lt;/em&gt; has been built and installed, you can go ahead and run the tests.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;今すぐこと&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてが&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;構築され、インストールされている、あなたは先に行くと、テストを実行することができます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="86634958e2731c9d17199012667e7ec7eaef4731" translate="yes" xml:space="preserve">
          <source>One interesting case in which you might see a lot of &lt;code&gt;NoClassDefFoundErrors&lt;/code&gt; is when you:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;多くの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NoClassDefFoundErrors&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;見られる興味深いケースの1つ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、次のような場合です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="faa8e0e36d055d1b8015068695eb63f71ee59e93" translate="yes" xml:space="preserve">
          <source>Permission issue on JAR file can also cause NoClassDefFoundError in Java.</source>
          <target state="translated">JAR ファイルのパーミッションの問題は、Java で NoClassDefFoundError を引き起こす可能性があります。</target>
        </trans-unit>
        <trans-unit id="90bdbcb63d1c58de798fcf3d27eefa22f192272c" translate="yes" xml:space="preserve">
          <source>Resources:</source>
          <target state="translated">Resources:</target>
        </trans-unit>
        <trans-unit id="9087de2d2ca6c4b361a59f796dafa7375244f02d" translate="yes" xml:space="preserve">
          <source>Run your program with 'java -javaagent:tracer.jar [YOUR java ARGS]'</source>
          <target state="translated">java -javaagent:tracer.jar [Your java ARGS]' でプログラムを実行します。</target>
        </trans-unit>
        <trans-unit id="ca0f57c39d3358832b4ca3878203a852efe159ee" translate="yes" xml:space="preserve">
          <source>See Stack&amp;nbsp;Overflow question &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/3700459/how-to-increase-the-java-stack-size&quot;&gt;How to increase the Java stack size?&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Stack Overflowの質問を参照してください&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/3700459/how-to-increase-the-java-stack-size&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。Javaスタックサイズを増やす方法は？&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b69b2e756e4688b953165d3657c214e1aa352344" translate="yes" xml:space="preserve">
          <source>Spring did not give me a full stack trace of on which line the runtime failed.
It simply said &lt;code&gt;NoClassDefFoundError&lt;/code&gt;. But when I executed it as a native Java application (taking it out of MVC), it gave &lt;code&gt;ExceptionInInitializerError&lt;/code&gt; which was the true cause and which is how I traced the error.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Springは、ランタイムが失敗した行の完全なスタックトレースを提供しませんでした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それは単に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NoClassDefFoundError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と言っただけ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、それをネイティブJavaアプリケーションとして実行すると（MVCから取り出し）、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExceptionInInitializerError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返されました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これが本当の原因であり、エラーを追跡する方法です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c09f2e254d5729033900a0113fb7796832ca2fe3" translate="yes" xml:space="preserve">
          <source>SupportClass</source>
          <target state="translated">SupportClass</target>
        </trans-unit>
        <trans-unit id="9a9a38926a813ef513da9f48f505f643d3ab3764" translate="yes" xml:space="preserve">
          <source>Suppose we have a package called &lt;code&gt;org.mypackage&lt;/code&gt; containing the classes:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスを含む&lt;/font&gt;&lt;/font&gt; &lt;code&gt;org.mypackage&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;というパッケージがあると&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ab085e8b2a90d0371c5281a516c4a985cf9af668" translate="yes" xml:space="preserve">
          <source>The class is not available in Java Classpath.</source>
          <target state="translated">このクラスはJavaのクラスパスでは利用できません。</target>
        </trans-unit>
        <trans-unit id="7053cc2ad05c863268798f79129f5d61ca230e22" translate="yes" xml:space="preserve">
          <source>The class is not in Classpath, there is no sure shot way of knowing it but many times you can just have a look to print System.getproperty(&quot;java.classpath&quot;) and it will print the classpath from there you can at least get an idea of your actual runtime classpath.</source>
          <target state="translated">クラスはクラスパスにありません、それを知る確実な方法はありませんが、多くの場合、単にprint System.getproperty(&quot;java.classpath&quot;)を見て、そこからクラスパスを表示することができますあなたは少なくともあなたの実際の実行時のクラスパスのアイデアを得ることができます。</target>
        </trans-unit>
        <trans-unit id="15d8721fe45ddc081c11776f2aead8a0eda5e85b" translate="yes" xml:space="preserve">
          <source>The file structure will look like this:</source>
          <target state="translated">ファイル構造は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="ede6c04b4ae8c13d58465d41e2d72571fdd366e8" translate="yes" xml:space="preserve">
          <source>The technique below helped me many times:</source>
          <target state="translated">下のテクニックに何度も助けられました。</target>
        </trans-unit>
        <trans-unit id="853d3344c8aeb325ccf55b69417dee4326efaf78" translate="yes" xml:space="preserve">
          <source>Then doing a clean install as described below.</source>
          <target state="translated">その後、以下のようにクリーンインストールを行います。</target>
        </trans-unit>
        <trans-unit id="d4b8d0d42f45bc00391d49a1a6a92e66a43c45c3" translate="yes" xml:space="preserve">
          <source>There was a runtime error in the class. I was reading a property as integer, but when it read the value from the property file, its value was double.</source>
          <target state="translated">クラスにランタイムエラーが発生していました。プロパティを整数で読み込んでいたのですが、プロパティファイルから値を読み込んだときに値が倍になっていました。</target>
        </trans-unit>
        <trans-unit id="dd7e594c8de433dcd48a57a6dc450c4093c04e9d" translate="yes" xml:space="preserve">
          <source>This error can be caused by unchecked &lt;strong&gt;Java version&lt;/strong&gt; requirements.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このエラーは、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Javaバージョンの&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要件が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チェックされていないことが原因である可能性があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3bf8e3139961357ac4340ef7908429310abb5bad" translate="yes" xml:space="preserve">
          <source>This is caused when there is a class file that your code depends on and it is present at compile time but not found at runtime. Look for differences in your build time and runtime  classpaths.</source>
          <target state="translated">これは、コードが依存しているクラスファイルがあり、コンパイル時には存在しているが実行時には見つからない場合に発生します。ビルド時とランタイム時のクラスパスの違いを探してください。</target>
        </trans-unit>
        <trans-unit id="bb7ec40f552694634bba8d78dac88b8742dbefb3" translate="yes" xml:space="preserve">
          <source>This is especially important case when you see &lt;code&gt;NoClassDefFoundErrors&lt;/code&gt; in your &lt;strong&gt;UNIT TESTS&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたが見たときに、これは特に重要なケースである&lt;/font&gt;&lt;/font&gt; &lt;code&gt;NoClassDefFoundErrors&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたに&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ユニットテスト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67908c8167e27ad453fa7148613b4d924db31a71" translate="yes" xml:space="preserve">
          <source>This is the &lt;a href=&quot;https://en.wikipedia.org/wiki/Classpath_%28Java%29#Setting_the_path_to_execute_Java_programs&quot;&gt;best solution&lt;/a&gt; I found so far.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私がこれまでに見つけ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;た&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Classpath_%28Java%29#Setting_the_path_to_execute_Java_programs&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最良の解決策&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b1529fcf9fc8103fcfa3e93afef7ed28677fde08" translate="yes" xml:space="preserve">
          <source>Try to create an instance of this class &lt;code&gt;Example&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このクラスのインスタンスを作成してみてください&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Example&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f4c3e715f490f5a4b8937fcc16b123c82d9d4216" translate="yes" xml:space="preserve">
          <source>Two different checkout copies of the same project</source>
          <target state="translated">同じプロジェクトのチェックアウトコピーを2種類</target>
        </trans-unit>
        <trans-unit id="ae80df1448238f83d573f828092a4c71762b37a8" translate="yes" xml:space="preserve">
          <source>Typo on XML Configuration can also cause NoClassDefFoundError in Java.</source>
          <target state="translated">XML 構成のタイポは、Java で NoClassDefFoundError を引き起こす可能性があります。</target>
        </trans-unit>
        <trans-unit id="38982cb16e7e025b6947b980c5cb6ae8ae5ef358" translate="yes" xml:space="preserve">
          <source>UtilClass</source>
          <target state="translated">UtilClass</target>
        </trans-unit>
        <trans-unit id="7e8c28f0b7bf0f4db575c299ac73031974da9e36" translate="yes" xml:space="preserve">
          <source>When using &lt;strong&gt;Maven&lt;/strong&gt; as your build tool, it is sometimes helpful -- and usually gratifying, to do a &lt;em&gt;clean&lt;/em&gt; 'install' build &lt;strong&gt;with testing disabled&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ビルドツールとして&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Maven&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用する場合&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、テストを無効&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;にして&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クリーンな&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「インストール」ビルド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を行うと役立つことがあります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b11f1aae403ae19cdb9e5598e3f4b3c7a75bd54b" translate="yes" xml:space="preserve">
          <source>When we invoke Java, we specify the name of the application to run: &lt;code&gt;org.mypackage.HelloWorld&lt;/code&gt;. However we must also tell Java where to look for the files and directories defining our package. So to launch the program, we have to use the following command:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Javaを呼び出すときに、実行するアプリケーションの名前を指定します：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;org.mypackage.HelloWorld&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、パッケージを定義するファイルとディレクトリの場所をJavaに通知する必要もあります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、プログラムを起動するには、次のコマンドを使用する必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="959dccaf0448ed5c85ce7d18c2302216f99e4a44" translate="yes" xml:space="preserve">
          <source>While it's possible that this is due to a classpath mismatch between compile-time and run-time, it's not necessarily true.</source>
          <target state="translated">コンパイル時とランタイムのクラスパスの不一致が原因である可能性はありますが、必ずしもそうとは限りません。</target>
        </trans-unit>
        <trans-unit id="c77ee1e663c6e40877047549a43cb698e0a8d39a" translate="yes" xml:space="preserve">
          <source>Why am I getting a NoClassDefFoundError in Java</source>
          <target state="translated">Java で NoClassDefFoundError が発生するのはなぜですか?</target>
        </trans-unit>
        <trans-unit id="0e89f88a7065954e8c54492ebdcbb948a9e38cbf" translate="yes" xml:space="preserve">
          <source>You might be running your program using jar command and class was not defined in manifest file's ClassPath attribute.</source>
          <target state="translated">jar コマンドを使用してプログラムを実行していて、マニフェストファイルの ClassPath 属性にクラスが定義されていない場合があります。</target>
        </trans-unit>
        <trans-unit id="8b207ba1775bf7b0260f368c1b9e1f08719b62c0" translate="yes" xml:space="preserve">
          <source>and the files defining this package are stored physically under the directory &lt;code&gt;D:\myprogram&lt;/code&gt; (on Windows) or &lt;code&gt;/home/user/myprogram&lt;/code&gt; (on Linux).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このパッケージを定義するファイルは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;D:\myprogram&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（Windowsの場合）または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;/home/user/myprogram&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（Linuxの場合）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のディレクトリに物理的に保存さ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d555cf163346e45886f0f0e737a31f9bd4f99f0e" translate="yes" xml:space="preserve">
          <source>java.lang.NoClassDefFoundError Problem patterns</source>
          <target state="translated">java.lang.NoClassDefFoundError 問題のパターン</target>
        </trans-unit>
        <trans-unit id="82106b9c4822d5a36c80a270ecc4ed4a8c6f47d4" translate="yes" xml:space="preserve">
          <source>when your compiled class which is defined in a package, doesn&amp;rsquo;t present in the same package while loading like in the case of JApplet it will throw NoClassDefFoundError in Java.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JAppletの場合のようにロード中にパッケージで定義されたコンパイル済みクラスが同じパッケージに存在しない場合、JavaでNoClassDefFoundErrorがスローされます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="810af9d12d00a35f766764ba5687942cba9c1548" translate="yes" xml:space="preserve">
          <source>where the TheNoDefFoundClass is the class that might be &quot;lost&quot; due to a preference for an older version of the same library used by your program. This most frequently happens with the cases, when the client software is being deployed into a dominant container, armed with its own classloaders and tons of ancient versions of most popular libs.</source>
          <target state="translated">ここで、TheNoDefFoundClass は、あなたのプログラムで使われている同じライブラリの古いバージョンを好むために &quot;失われる &quot;可能性のあるクラスです。これは、クライアントソフトウェアが支配的なコンテナにデプロイされ、独自のクラスローダや人気のあるライブラリの古いバージョンを何トンも持っている場合に最も頻繁に起こります。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
