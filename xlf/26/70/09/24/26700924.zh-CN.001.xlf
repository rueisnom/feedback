<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/26700924">
    <body>
      <group id="26700924">
        <trans-unit id="9bdc2c56312fa95d248c06452dea7ee648df0115" translate="yes" xml:space="preserve">
          <source>1. filter most on the server, do the rest on the client</source>
          <target state="translated">1.在服务器上过滤大部分,其余的在客户端上进行过滤</target>
        </trans-unit>
        <trans-unit id="98a84de1d39a7821229f64274f40fe6ac2a31c9b" translate="yes" xml:space="preserve">
          <source>2. add a property that combines the values that you want to filter on</source>
          <target state="translated">2.添加一个属性,结合你要过滤的值,在</target>
        </trans-unit>
        <trans-unit id="6f5412b046bd40d16bbb87b9f5d915c49be5a697" translate="yes" xml:space="preserve">
          <source>3. create a custom index programmatically</source>
          <target state="translated">3.按程序创建一个自定义索引</target>
        </trans-unit>
        <trans-unit id="be948b233f15c0f786af0f708cb5eee2f7dfe97f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Meet Querybase!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;认识Querybase！&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1d91e42027c91b775f1ef7796cafd2119e40d3b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Once we obtain the initial filtered data from the database, we need to do further filter in our backend.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从数据库中获取初始过滤后的数据后，我们需要在后端进行进一步的过滤。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="152319156c55d671a3958e4b2f85fc76c670ac11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;We need to download the initial filtered data from the database and store it in an array list.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们需要从数据库下载初始过滤的数据，并将其存储在数组列表中。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08f5f6cd99863a3f7fd6fff64dd62db80ff56dd4" translate="yes" xml:space="preserve">
          <source>A very special variant of this is implemented by the &lt;a href=&quot;https://github.com/firebase/geofire-js&quot;&gt;GeoFire library for Firebase&lt;/a&gt;. This library combines the latitude and longitude of a location into a so-called &lt;a href=&quot;https://en.wikipedia.org/wiki/Geohash&quot;&gt;Geohash&lt;/a&gt;, which can then be used to do realtime range queries on Firebase.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是一个非常特殊的变体，由&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/firebase/geofire-js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Firebase&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;GeoFire库实现&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该库将位置的纬度和经度组合到一个所谓的&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Geohash&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Geohash中&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，然后可用于在Firebase上进行实时范围查询。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="730ae2545988ada4c52fd4c4a07f219882d90768" translate="yes" xml:space="preserve">
          <source>And then query for comedies of the 90s with:</source>
          <target state="translated">然后查询90年代的喜剧片与。</target>
        </trans-unit>
        <trans-unit id="2385a9fb2fa1089be1e58e7df92ebda57e8705de" translate="yes" xml:space="preserve">
          <source>But as @RobDiMarco from Firebase says in the comments:</source>
          <target state="translated">但正如Firebase的@RobDiMarco在评论中所说。</target>
        </trans-unit>
        <trans-unit id="40001f05598fdf8d19594f8dacc4562219668f3a" translate="yes" xml:space="preserve">
          <source>David East has written a &lt;a href=&quot;https://github.com/davideast/Querybase&quot;&gt;library called QueryBase that helps with generating such properties&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;David East编写了一个&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/davideast/Querybase&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名为QueryBase&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;库，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;库有助于生成此类属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b835e6a33cee876b03e211fde7f9ea745bfadf8d" translate="yes" xml:space="preserve">
          <source>Firebase doesn't allow querying with multiple conditions. 
However, I did find a way around for this:</source>
          <target state="translated">Firebase不允许用多个条件查询。不过,我确实找到了一个方法来解决这个问题。</target>
        </trans-unit>
        <trans-unit id="37d562375a84cc7754a70b0ddb0b87be4e58e113" translate="yes" xml:space="preserve">
          <source>Frank's answer is good but Firestore introduced &lt;a href=&quot;https://firebase.google.com/docs/firestore/query-data/queries#array_membership&quot;&gt;&lt;code&gt;array-contains&lt;/code&gt;&lt;/a&gt; recently that makes it easier to do AND queries.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Frank的回答很好，但是Firestore &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最近&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引入了&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://firebase.google.com/docs/firestore/query-data/queries#array_membership&quot;&gt; &lt;code&gt;array-contains&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，这使得执行AND查询变得更加容易。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="32e91290698336c858a2a656e0583735999320aa" translate="yes" xml:space="preserve">
          <source>I am a Firebase newbie. How can I retrieve a result from the data above &lt;strong&gt;where &lt;code&gt;genre = 'comedy'&lt;/code&gt; AND &lt;code&gt;lead = 'Jack Nicholson'&lt;/code&gt;&lt;/strong&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我是Firebase新手。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我怎样才能检索到从上述数据的结果&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，其中&lt;/font&gt;&lt;/font&gt; &lt;code&gt;genre = 'comedy'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;lead = 'Jack Nicholson'&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a364dca5eb779958720285720f12a7c40b89d2d" translate="yes" xml:space="preserve">
          <source>I know of three approaches that will work.</source>
          <target state="translated">据我所知,有三种方法会有效果。</target>
        </trans-unit>
        <trans-unit id="eb275941a3448a6db6323ca271b265af864b9aef" translate="yes" xml:space="preserve">
          <source>I've written a personal library that allows you to order by multiple values, with all the ordering done on the server.</source>
          <target state="translated">我写了一个个人库,允许你用多个值来排序,所有的排序都在服务器上完成。</target>
        </trans-unit>
        <trans-unit id="b3917e45c2df8e92236032d54765d729f5b92043" translate="yes" xml:space="preserve">
          <source>If that isn't good enough, you should consider modifying/expanding your data to allow your use-case. For example: you could stuff genre+lead into a single property that you just use for this filter.</source>
          <target state="translated">如果这还不够好,你应该考虑修改你的数据,以允许你的用例。例如:你可以把genre+lead塞进一个单独的属性中,而这个属性只是用于这个过滤器。</target>
        </trans-unit>
        <trans-unit id="63637444ab676ee830078e00c6f54a1252b9b1dd" translate="yes" xml:space="preserve">
          <source>If you need to filter on more than just the year, make sure to add the other date parts in descending order, e.g. &lt;code&gt;&quot;comedy_1997-12-25&quot;&lt;/code&gt;. This way the lexicographical ordering that Firebase does on string values will be the same as the chronological ordering.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您需要过滤的不仅仅是一年，请确保以降序添加其他日期部分，例如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;comedy_1997-12-25&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这样，Firebase对字符串值进行的词典编排顺序将与时间顺序相同。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5cd8445af1c9df1a634dc7e628810f4e39c3c054" translate="yes" xml:space="preserve">
          <source>Query based on multiple where clauses in Firebase</source>
          <target state="translated">基于Firebase中多个where子句的查询</target>
        </trans-unit>
        <trans-unit id="4231ca1e91a48f9c30c07c85f001f5a5ed71958c" translate="yes" xml:space="preserve">
          <source>Querybase takes in a Firebase Database Reference and an array of fields you wish to index on. When you create new records it will automatically handle the generation of keys that allow for multiple querying. The caveat is that it only supports straight equivalence (no less than or greater than).</source>
          <target state="translated">Querybase会接收一个Firebase数据库参考资料和一个你希望建立索引的字段数组。当你创建新记录时,它将自动处理生成允许多次查询的密钥。注意事项是,它只支持直接等价(不小于或大于)。</target>
        </trans-unit>
        <trans-unit id="726ebc46e3a567df59e1ca53327f07bae4792b0e" translate="yes" xml:space="preserve">
          <source>So &lt;strong&gt;my code above will not work&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所以&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我上面的代码将无法工作&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="80e9fd597598b253453084df85b20d763c39c0c2" translate="yes" xml:space="preserve">
          <source>There are probably more approaches. For example, this answer highlights an alternative tree-shaped custom index: &lt;a href=&quot;https://stackoverflow.com/a/34105063&quot;&gt;https://stackoverflow.com/a/34105063&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可能有更多的方法。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如，此答案突出显示了替代的树形自定义索引：&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/34105063&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//stackoverflow.com/a/34105063&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5ac8fd8a598db9657f0ebd75c3a230a2ca86502" translate="yes" xml:space="preserve">
          <source>This combining of values in a property can work with more than two values, but you can only do a range filter on the last value in the composite property.</source>
          <target state="translated">这种复合属性中的值的组合可以使用两个以上的值,但你只能对复合属性中的最后一个值进行范围过滤。</target>
        </trans-unit>
        <trans-unit id="689a84e5e08730f34cf622cadacd4b5a8728b305" translate="yes" xml:space="preserve">
          <source>This will work.</source>
          <target state="translated">这样就可以了。</target>
        </trans-unit>
        <trans-unit id="50ff47bf96915b57f1325e802909a2e3151fc379" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;https://www.firebase.com/docs/beta/queries/web.html&quot;&gt;Firebase's Query API&lt;/a&gt;, you might be tempted to try this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.firebase.com/docs/beta/queries/web.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Firebase的Query API&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，您可能会想尝试以下方法：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="35d46b5709fde46f97eb35bf2fa62cd0d87d7582" translate="yes" xml:space="preserve">
          <source>What options do I have?</source>
          <target state="translated">我有哪些选择?</target>
        </trans-unit>
        <trans-unit id="dcaca23c1945246a67f980090eb5a766242d44c1" translate="yes" xml:space="preserve">
          <source>What you &lt;em&gt;can&lt;/em&gt; do is execute one &lt;code&gt;orderBy().startAt()./endAt()&lt;/code&gt; on the server, pull down the remaining data and filter that in JavaScript code on your client.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;做的是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在服务器上&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;执行一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;orderBy().startAt()./endAt()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，下拉剩余的数据，然后在客户端的JavaScript代码中进行过滤。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65144d8e17eb4b0654c8ff1f1b11976d36650a27" translate="yes" xml:space="preserve">
          <source>Yet another alternative is to do what we've all done before this new Query API was added: create an index in a different node:</source>
          <target state="translated">然而,另一种选择是在这个新的Query API添加之前我们都做过的事情:在不同的节点中创建一个索引。</target>
        </trans-unit>
        <trans-unit id="51afa662587faaf5d1637a949405c31fd1b54a8c" translate="yes" xml:space="preserve">
          <source>You can create a &lt;code&gt;filters&lt;/code&gt; field to add you filters. You can add as many values as you need. For example to filter by &lt;em&gt;comedy&lt;/em&gt; and &lt;em&gt;Jack Nicholson&lt;/em&gt; you can add the value &lt;code&gt;comedy_Jack Nicholson&lt;/code&gt; but if you also you want to by &lt;em&gt;comedy&lt;/em&gt; and &lt;em&gt;2014&lt;/em&gt; you can add the value &lt;code&gt;comedy_2014&lt;/code&gt; without creating more fields.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以创建一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;filters&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;字段以添加过滤器。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以根据需要添加任意多个值。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如，按&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;喜剧&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Jack Nicholson&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进行过滤，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以添加值&lt;/font&gt;&lt;/font&gt; &lt;code&gt;comedy_Jack Nicholson&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但如果您也希望按&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;喜剧&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2014&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进行过滤，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;则&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以添加值&lt;/font&gt;&lt;/font&gt; &lt;code&gt;comedy_2014&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而不创建更多字段。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d4b6392f409c164b59aec93107debce7cb36009" translate="yes" xml:space="preserve">
          <source>You could even do relative/range queries, let's say that you want to allow querying movies by category and year. You'd use this data structure:</source>
          <target state="translated">你甚至可以做关联查询,比如说你想允许按类别和年份查询电影。你会使用这样的数据结构。</target>
        </trans-unit>
        <trans-unit id="9237a2175cee7ea386e28ea37589f7ddcd365d91" translate="yes" xml:space="preserve">
          <source>You're essentially building your own multi-column index that way and can query it with:</source>
          <target state="translated">你本质上是在建立自己的多列索引,可以用这种方式查询。</target>
        </trans-unit>
        <trans-unit id="11532c1db141538d5fd03d10ed30b8ec1579855b" translate="yes" xml:space="preserve">
          <source>multiple &lt;code&gt;orderBy()&lt;/code&gt; calls will throw an error</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;多个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;orderBy()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调用将引发错误&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
