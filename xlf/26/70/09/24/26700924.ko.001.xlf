<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/26700924">
    <body>
      <group id="26700924">
        <trans-unit id="9bdc2c56312fa95d248c06452dea7ee648df0115" translate="yes" xml:space="preserve">
          <source>1. filter most on the server, do the rest on the client</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1. 서버에서 대부분을 필터링하고 클라이언트에서 나머지를 수행하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="98a84de1d39a7821229f64274f40fe6ac2a31c9b" translate="yes" xml:space="preserve">
          <source>2. add a property that combines the values that you want to filter on</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2. 필터링 할 값을 결합한 속성을 추가하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f5412b046bd40d16bbb87b9f5d915c49be5a697" translate="yes" xml:space="preserve">
          <source>3. create a custom index programmatically</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3. 프로그래밍 방식으로 맞춤 색인 만들기&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="be948b233f15c0f786af0f708cb5eee2f7dfe97f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Meet Querybase!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Querybase를 만나십시오!&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1d91e42027c91b775f1ef7796cafd2119e40d3b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Once we obtain the initial filtered data from the database, we need to do further filter in our backend.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;데이터베이스에서 초기 필터링 된 데이터를 얻으면 백엔드에서 추가 필터링을 수행해야합니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="152319156c55d671a3958e4b2f85fc76c670ac11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;We need to download the initial filtered data from the database and store it in an array list.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;데이터베이스에서 필터링 된 초기 데이터를 다운로드하여 배열 목록에 저장해야합니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08f5f6cd99863a3f7fd6fff64dd62db80ff56dd4" translate="yes" xml:space="preserve">
          <source>A very special variant of this is implemented by the &lt;a href=&quot;https://github.com/firebase/geofire-js&quot;&gt;GeoFire library for Firebase&lt;/a&gt;. This library combines the latitude and longitude of a location into a so-called &lt;a href=&quot;https://en.wikipedia.org/wiki/Geohash&quot;&gt;Geohash&lt;/a&gt;, which can then be used to do realtime range queries on Firebase.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;매우 특별한 변형은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/firebase/geofire-js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Firebase 용 GeoFire 라이브러리에&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의해 구현됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 라이브러리는 위치의 위도와 경도를 소위 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Geohash&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Geohash로 결합한&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 다음 Firebase에서 실시간 범위 쿼리를 수행하는 데 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="730ae2545988ada4c52fd4c4a07f219882d90768" translate="yes" xml:space="preserve">
          <source>And then query for comedies of the 90s with:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 90 년대 코미디를 요청하십시오 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2385a9fb2fa1089be1e58e7df92ebda57e8705de" translate="yes" xml:space="preserve">
          <source>But as @RobDiMarco from Firebase says in the comments:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 Firebase의 @RobDiMarco는 주석에서 다음과 같이 말합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="40001f05598fdf8d19594f8dacc4562219668f3a" translate="yes" xml:space="preserve">
          <source>David East has written a &lt;a href=&quot;https://github.com/davideast/Querybase&quot;&gt;library called QueryBase that helps with generating such properties&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;David East는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/davideast/Querybase&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이러한 속성을 생성하는 데 도움이되는 QueryBase라는 라이브러리&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 작성했습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b835e6a33cee876b03e211fde7f9ea745bfadf8d" translate="yes" xml:space="preserve">
          <source>Firebase doesn't allow querying with multiple conditions. 
However, I did find a way around for this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Firebase에서는 여러 조건으로 쿼리 할 수 ​​없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 나는 이것에 대한 길을 찾았습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="37d562375a84cc7754a70b0ddb0b87be4e58e113" translate="yes" xml:space="preserve">
          <source>Frank's answer is good but Firestore introduced &lt;a href=&quot;https://firebase.google.com/docs/firestore/query-data/queries#array_membership&quot;&gt;&lt;code&gt;array-contains&lt;/code&gt;&lt;/a&gt; recently that makes it easier to do AND queries.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Frank의 대답은 좋지만 Firestore &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://firebase.google.com/docs/firestore/query-data/queries#array_membership&quot;&gt; &lt;code&gt;array-contains&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 최근에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열이 포함되어&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있어 AND 쿼리를보다 쉽게 ​​수행 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="32e91290698336c858a2a656e0583735999320aa" translate="yes" xml:space="preserve">
          <source>I am a Firebase newbie. How can I retrieve a result from the data above &lt;strong&gt;where &lt;code&gt;genre = 'comedy'&lt;/code&gt; AND &lt;code&gt;lead = 'Jack Nicholson'&lt;/code&gt;&lt;/strong&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;저는 Firebase 초보자입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어떻게 위의 데이터에서 결과를 검색 할 수있는 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;곳 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;genre = 'comedy'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;lead = 'Jack Nicholson'&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a364dca5eb779958720285720f12a7c40b89d2d" translate="yes" xml:space="preserve">
          <source>I know of three approaches that will work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 작동 할 세 가지 접근법을 알고 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eb275941a3448a6db6323ca271b265af864b9aef" translate="yes" xml:space="preserve">
          <source>I've written a personal library that allows you to order by multiple values, with all the ordering done on the server.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서버에서 모든 주문을 수행하면서 여러 값으로 주문할 수있는 개인 라이브러리를 작성했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b3917e45c2df8e92236032d54765d729f5b92043" translate="yes" xml:space="preserve">
          <source>If that isn't good enough, you should consider modifying/expanding your data to allow your use-case. For example: you could stuff genre+lead into a single property that you just use for this filter.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것으로 충분하지 않으면 사용 사례를 허용하도록 데이터 수정 / 확장을 고려해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어, 장르 + 리드를이 필터에 사용하는 단일 속성에 넣을 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63637444ab676ee830078e00c6f54a1252b9b1dd" translate="yes" xml:space="preserve">
          <source>If you need to filter on more than just the year, make sure to add the other date parts in descending order, e.g. &lt;code&gt;&quot;comedy_1997-12-25&quot;&lt;/code&gt;. This way the lexicographical ordering that Firebase does on string values will be the same as the chronological ordering.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;연도 이상을 필터링해야하는 경우 다른 날짜 부분을 내림차순으로 추가하십시오 (예 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;comedy_1997-12-25&quot;&lt;/code&gt; )&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이런 식으로 Firebase가 문자열 값에서 수행하는 사전 식 순서는 시간 순서와 동일합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5cd8445af1c9df1a634dc7e628810f4e39c3c054" translate="yes" xml:space="preserve">
          <source>Query based on multiple where clauses in Firebase</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Firebase의 여러 where 절을 기반으로 한 쿼리&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4231ca1e91a48f9c30c07c85f001f5a5ed71958c" translate="yes" xml:space="preserve">
          <source>Querybase takes in a Firebase Database Reference and an array of fields you wish to index on. When you create new records it will automatically handle the generation of keys that allow for multiple querying. The caveat is that it only supports straight equivalence (no less than or greater than).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Querybase는 Firebase 데이터베이스 참조 및 색인을 생성 할 필드 배열을받습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;새 레코드를 만들면 여러 쿼리를 허용하는 키 생성이 자동으로 처리됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주의 사항은 직선 동등성을 지원한다는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="726ebc46e3a567df59e1ca53327f07bae4792b0e" translate="yes" xml:space="preserve">
          <source>So &lt;strong&gt;my code above will not work&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 코드는 작동하지 않습니다&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="80e9fd597598b253453084df85b20d763c39c0c2" translate="yes" xml:space="preserve">
          <source>There are probably more approaches. For example, this answer highlights an alternative tree-shaped custom index: &lt;a href=&quot;https://stackoverflow.com/a/34105063&quot;&gt;https://stackoverflow.com/a/34105063&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아마도 더 많은 접근법이있을 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어이 답변은 대체 트리 모양의 사용자 지정 인덱스 ( &lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/34105063&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://stackoverflow.com/a/34105063)를&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 강조합니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5ac8fd8a598db9657f0ebd75c3a230a2ca86502" translate="yes" xml:space="preserve">
          <source>This combining of values in a property can work with more than two values, but you can only do a range filter on the last value in the composite property.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 속성 값 조합은 둘 이상의 값으로 작동 할 수 있지만 복합 속성의 마지막 값에 대해서만 범위 필터를 수행 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="689a84e5e08730f34cf622cadacd4b5a8728b305" translate="yes" xml:space="preserve">
          <source>This will work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작동합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="50ff47bf96915b57f1325e802909a2e3151fc379" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;https://www.firebase.com/docs/beta/queries/web.html&quot;&gt;Firebase's Query API&lt;/a&gt;, you might be tempted to try this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.firebase.com/docs/beta/queries/web.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;중포 기지의 쿼리 API를&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 당신이 시도 유혹 될 수 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="35d46b5709fde46f97eb35bf2fa62cd0d87d7582" translate="yes" xml:space="preserve">
          <source>What options do I have?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어떤 옵션이 있습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dcaca23c1945246a67f980090eb5a766242d44c1" translate="yes" xml:space="preserve">
          <source>What you &lt;em&gt;can&lt;/em&gt; do is execute one &lt;code&gt;orderBy().startAt()./endAt()&lt;/code&gt; on the server, pull down the remaining data and filter that in JavaScript code on your client.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;할 수&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 할 것은 하나의 실행이다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;orderBy().startAt()./endAt()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 서버, 클라이언트에서 그 자바 스크립트 코드에 남아있는 데이터 및 필터 풀다운.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65144d8e17eb4b0654c8ff1f1b11976d36650a27" translate="yes" xml:space="preserve">
          <source>Yet another alternative is to do what we've all done before this new Query API was added: create an index in a different node:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또 다른 대안은이 새로운 Query API가 추가되기 전에 우리가 한 모든 작업을 수행하는 것입니다. 다른 노드에서 색인을 작성하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="51afa662587faaf5d1637a949405c31fd1b54a8c" translate="yes" xml:space="preserve">
          <source>You can create a &lt;code&gt;filters&lt;/code&gt; field to add you filters. You can add as many values as you need. For example to filter by &lt;em&gt;comedy&lt;/em&gt; and &lt;em&gt;Jack Nicholson&lt;/em&gt; you can add the value &lt;code&gt;comedy_Jack Nicholson&lt;/code&gt; but if you also you want to by &lt;em&gt;comedy&lt;/em&gt; and &lt;em&gt;2014&lt;/em&gt; you can add the value &lt;code&gt;comedy_2014&lt;/code&gt; without creating more fields.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;filters&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 필드를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;만들어 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;필터&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 추가 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;필요한만큼 값을 추가 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코미디&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;잭 니콜슨&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 기준으로 필터링 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하려면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;comedy_Jack Nicholson&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 값을 추가 할 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있지만 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코미디&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2014&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기준으로&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 추가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;필드를 만들지 않고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;comedy_2014&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 값을 추가 할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d4b6392f409c164b59aec93107debce7cb36009" translate="yes" xml:space="preserve">
          <source>You could even do relative/range queries, let's say that you want to allow querying movies by category and year. You'd use this data structure:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;상대 / 범위 쿼리를 수행 할 수도 있습니다. 카테고리 및 연도별로 영화 쿼리를 허용한다고 가정 해 봅시다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 데이터 구조를 사용합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9237a2175cee7ea386e28ea37589f7ddcd365d91" translate="yes" xml:space="preserve">
          <source>You're essentially building your own multi-column index that way and can query it with:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;본질적으로 그런 식으로 자신의 다중 열 인덱스를 작성하고 다음을 사용하여 쿼리 할 수 ​​있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="11532c1db141538d5fd03d10ed30b8ec1579855b" translate="yes" xml:space="preserve">
          <source>multiple &lt;code&gt;orderBy()&lt;/code&gt; calls will throw an error</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여러 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;orderBy()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 호출에서 오류가 발생합니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
