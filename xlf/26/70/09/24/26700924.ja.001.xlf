<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/26700924">
    <body>
      <group id="26700924">
        <trans-unit id="9bdc2c56312fa95d248c06452dea7ee648df0115" translate="yes" xml:space="preserve">
          <source>1. filter most on the server, do the rest on the client</source>
          <target state="translated">1.大部分をサーバーでフィルタリングし、残りはクライアントで行う</target>
        </trans-unit>
        <trans-unit id="98a84de1d39a7821229f64274f40fe6ac2a31c9b" translate="yes" xml:space="preserve">
          <source>2. add a property that combines the values that you want to filter on</source>
          <target state="translated">フィルタリングしたい値を組み合わせたプロパティを追加します。</target>
        </trans-unit>
        <trans-unit id="6f5412b046bd40d16bbb87b9f5d915c49be5a697" translate="yes" xml:space="preserve">
          <source>3. create a custom index programmatically</source>
          <target state="translated">3.プログラムでカスタムインデックスを作成する</target>
        </trans-unit>
        <trans-unit id="be948b233f15c0f786af0f708cb5eee2f7dfe97f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Meet Querybase!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クエリベースに会います！&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1d91e42027c91b775f1ef7796cafd2119e40d3b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Once we obtain the initial filtered data from the database, we need to do further filter in our backend.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;データベースから最初のフィルター処理されたデータを取得したら、バックエンドでさらにフィルター処理を行う必要があります。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="152319156c55d671a3958e4b2f85fc76c670ac11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;We need to download the initial filtered data from the database and store it in an array list.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初のフィルター処理されたデータをデータベースからダウンロードして、配列リストに格納する必要があります。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08f5f6cd99863a3f7fd6fff64dd62db80ff56dd4" translate="yes" xml:space="preserve">
          <source>A very special variant of this is implemented by the &lt;a href=&quot;https://github.com/firebase/geofire-js&quot;&gt;GeoFire library for Firebase&lt;/a&gt;. This library combines the latitude and longitude of a location into a so-called &lt;a href=&quot;https://en.wikipedia.org/wiki/Geohash&quot;&gt;Geohash&lt;/a&gt;, which can then be used to do realtime range queries on Firebase.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これの非常に特殊なバリアントは&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/firebase/geofire-js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、FirebaseのGeoFireライブラリ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;によって実装され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このライブラリは、場所の緯度と経度をいわゆる&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Geohash&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Geohash&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;結合し、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Firebaseでリアルタイムの範囲クエリを実行するために使用できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="730ae2545988ada4c52fd4c4a07f219882d90768" translate="yes" xml:space="preserve">
          <source>And then query for comedies of the 90s with:</source>
          <target state="translated">そして、90年代のコメディを検索します。</target>
        </trans-unit>
        <trans-unit id="2385a9fb2fa1089be1e58e7df92ebda57e8705de" translate="yes" xml:space="preserve">
          <source>But as @RobDiMarco from Firebase says in the comments:</source>
          <target state="translated">しかし、Firebaseの@RobDiMarcoさんがコメントで言っているように</target>
        </trans-unit>
        <trans-unit id="40001f05598fdf8d19594f8dacc4562219668f3a" translate="yes" xml:space="preserve">
          <source>David East has written a &lt;a href=&quot;https://github.com/davideast/Querybase&quot;&gt;library called QueryBase that helps with generating such properties&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;David Eastは、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/davideast/Querybase&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このようなプロパティの生成に役立つQueryBaseと呼ばれるライブラリ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を作成しました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b835e6a33cee876b03e211fde7f9ea745bfadf8d" translate="yes" xml:space="preserve">
          <source>Firebase doesn't allow querying with multiple conditions. 
However, I did find a way around for this:</source>
          <target state="translated">Firebaseでは複数の条件を指定してクエリを実行することはできません。しかし、これを回避する方法を見つけました。</target>
        </trans-unit>
        <trans-unit id="37d562375a84cc7754a70b0ddb0b87be4e58e113" translate="yes" xml:space="preserve">
          <source>Frank's answer is good but Firestore introduced &lt;a href=&quot;https://firebase.google.com/docs/firestore/query-data/queries#array_membership&quot;&gt;&lt;code&gt;array-contains&lt;/code&gt;&lt;/a&gt; recently that makes it easier to do AND queries.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フランクの答えは良いですが、Firestore &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://firebase.google.com/docs/firestore/query-data/queries#array_membership&quot;&gt; &lt;code&gt;array-contains&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最近ANDクエリの実行を容易にする&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンテナを導入しました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="32e91290698336c858a2a656e0583735999320aa" translate="yes" xml:space="preserve">
          <source>I am a Firebase newbie. How can I retrieve a result from the data above &lt;strong&gt;where &lt;code&gt;genre = 'comedy'&lt;/code&gt; AND &lt;code&gt;lead = 'Jack Nicholson'&lt;/code&gt;&lt;/strong&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私はFirebase初心者です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どのように私は上記のデータから結果を取得することができます&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どこ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;genre = 'comedy'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;lead = 'Jack Nicholson'&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a364dca5eb779958720285720f12a7c40b89d2d" translate="yes" xml:space="preserve">
          <source>I know of three approaches that will work.</source>
          <target state="translated">私は3つのアプローチを知っています。</target>
        </trans-unit>
        <trans-unit id="eb275941a3448a6db6323ca271b265af864b9aef" translate="yes" xml:space="preserve">
          <source>I've written a personal library that allows you to order by multiple values, with all the ordering done on the server.</source>
          <target state="translated">個人的なライブラリを書いてみたのですが、複数の値で順番を決めて、全てサーバー上で順番を決められるようにしています。</target>
        </trans-unit>
        <trans-unit id="b3917e45c2df8e92236032d54765d729f5b92043" translate="yes" xml:space="preserve">
          <source>If that isn't good enough, you should consider modifying/expanding your data to allow your use-case. For example: you could stuff genre+lead into a single property that you just use for this filter.</source>
          <target state="translated">それでも十分でない場合は、あなたのユースケースに合わせてデータを拡張することを検討すべきです。例えば、ジャンルとリードを一つのプロパティに詰め込んで、このフィルタのためだけに使うことができます。</target>
        </trans-unit>
        <trans-unit id="63637444ab676ee830078e00c6f54a1252b9b1dd" translate="yes" xml:space="preserve">
          <source>If you need to filter on more than just the year, make sure to add the other date parts in descending order, e.g. &lt;code&gt;&quot;comedy_1997-12-25&quot;&lt;/code&gt;. This way the lexicographical ordering that Firebase does on string values will be the same as the chronological ordering.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;年だけでなくフィルタリングする必要がある場合は、他の日付部分を降順で追加してください（例：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;comedy_1997-12-25&quot;&lt;/code&gt; )&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このように、Firebaseが文字列値に対して行う辞書式順序は、年代順と同じになります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5cd8445af1c9df1a634dc7e628810f4e39c3c054" translate="yes" xml:space="preserve">
          <source>Query based on multiple where clauses in Firebase</source>
          <target state="translated">Firebaseの複数のwhere句に基づくクエリ</target>
        </trans-unit>
        <trans-unit id="4231ca1e91a48f9c30c07c85f001f5a5ed71958c" translate="yes" xml:space="preserve">
          <source>Querybase takes in a Firebase Database Reference and an array of fields you wish to index on. When you create new records it will automatically handle the generation of keys that allow for multiple querying. The caveat is that it only supports straight equivalence (no less than or greater than).</source>
          <target state="translated">QuerybaseはFirebaseデータベースリファレンスとインデックスを作成したいフィールドの配列を受け取ります。新しいレコードを作成する際には、複数のクエリを可能にするキーを自動的に生成します。注意点としては、ストレートな同等性(以下でもそれ以上でもない)しかサポートしていません。</target>
        </trans-unit>
        <trans-unit id="726ebc46e3a567df59e1ca53327f07bae4792b0e" translate="yes" xml:space="preserve">
          <source>So &lt;strong&gt;my code above will not work&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、上記の私のコードは機能しません&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="80e9fd597598b253453084df85b20d763c39c0c2" translate="yes" xml:space="preserve">
          <source>There are probably more approaches. For example, this answer highlights an alternative tree-shaped custom index: &lt;a href=&quot;https://stackoverflow.com/a/34105063&quot;&gt;https://stackoverflow.com/a/34105063&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;おそらくもっと多くのアプローチがあります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、この回答は、代わりのツリー型のカスタムインデックスを強調してい&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/34105063&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//stackoverflow.com/a/34105063&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5ac8fd8a598db9657f0ebd75c3a230a2ca86502" translate="yes" xml:space="preserve">
          <source>This combining of values in a property can work with more than two values, but you can only do a range filter on the last value in the composite property.</source>
          <target state="translated">このプロパティ内の値の組み合わせは、2つ以上の値で動作しますが、合成プロパティ内の最後の値に対してのみ範囲フィルタを行うことができます。</target>
        </trans-unit>
        <trans-unit id="689a84e5e08730f34cf622cadacd4b5a8728b305" translate="yes" xml:space="preserve">
          <source>This will work.</source>
          <target state="translated">これなら大丈夫。</target>
        </trans-unit>
        <trans-unit id="50ff47bf96915b57f1325e802909a2e3151fc379" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;https://www.firebase.com/docs/beta/queries/web.html&quot;&gt;Firebase's Query API&lt;/a&gt;, you might be tempted to try this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://www.firebase.com/docs/beta/queries/web.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;FirebaseのQuery API&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すると、これを試してみたくなるかもしれません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="35d46b5709fde46f97eb35bf2fa62cd0d87d7582" translate="yes" xml:space="preserve">
          <source>What options do I have?</source>
          <target state="translated">どのような選択肢があるのでしょうか?</target>
        </trans-unit>
        <trans-unit id="dcaca23c1945246a67f980090eb5a766242d44c1" translate="yes" xml:space="preserve">
          <source>What you &lt;em&gt;can&lt;/em&gt; do is execute one &lt;code&gt;orderBy().startAt()./endAt()&lt;/code&gt; on the server, pull down the remaining data and filter that in JavaScript code on your client.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたが&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;することができ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ません、1つ実行している&lt;/font&gt;&lt;/font&gt; &lt;code&gt;orderBy().startAt()./endAt()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クライアント上のJavaScriptコードであること、サーバー上に残っているデータとフィルタプルダウン。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65144d8e17eb4b0654c8ff1f1b11976d36650a27" translate="yes" xml:space="preserve">
          <source>Yet another alternative is to do what we've all done before this new Query API was added: create an index in a different node:</source>
          <target state="translated">もう一つの方法は、この新しい Query API が追加される前に私たちが行っていたこと、つまり別のノードにインデックスを作成することです。</target>
        </trans-unit>
        <trans-unit id="51afa662587faaf5d1637a949405c31fd1b54a8c" translate="yes" xml:space="preserve">
          <source>You can create a &lt;code&gt;filters&lt;/code&gt; field to add you filters. You can add as many values as you need. For example to filter by &lt;em&gt;comedy&lt;/em&gt; and &lt;em&gt;Jack Nicholson&lt;/em&gt; you can add the value &lt;code&gt;comedy_Jack Nicholson&lt;/code&gt; but if you also you want to by &lt;em&gt;comedy&lt;/em&gt; and &lt;em&gt;2014&lt;/em&gt; you can add the value &lt;code&gt;comedy_2014&lt;/code&gt; without creating more fields.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;filters&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィールドを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成して、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィルター&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を追加できます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要な数の値を追加できます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コメディ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ジャックニコルソンで&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィルタリング&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するには、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;comedy_Jack Nicholson&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;という値を追加できますが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コメディ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2014で&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;追加し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィールドを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;追加&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;せずに&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コメディ&lt;/font&gt;&lt;/em&gt;&lt;/font&gt; &lt;code&gt;comedy_2014&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;という値を追加でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d4b6392f409c164b59aec93107debce7cb36009" translate="yes" xml:space="preserve">
          <source>You could even do relative/range queries, let's say that you want to allow querying movies by category and year. You'd use this data structure:</source>
          <target state="translated">relativerangeクエリを行うこともできます。例えば、映画をカテゴリと年で検索できるようにしたいとします。このようなデータ構造を使用します。</target>
        </trans-unit>
        <trans-unit id="9237a2175cee7ea386e28ea37589f7ddcd365d91" translate="yes" xml:space="preserve">
          <source>You're essentially building your own multi-column index that way and can query it with:</source>
          <target state="translated">このようにして自分自身のマルチカラムインデックスを構築し、それを使ってクエリを実行することができます。</target>
        </trans-unit>
        <trans-unit id="11532c1db141538d5fd03d10ed30b8ec1579855b" translate="yes" xml:space="preserve">
          <source>multiple &lt;code&gt;orderBy()&lt;/code&gt; calls will throw an error</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;複数の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;orderBy()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出しはエラーをスローします&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
