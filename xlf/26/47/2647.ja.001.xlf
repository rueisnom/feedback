<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/2647">
    <body>
      <group id="2647">
        <trans-unit id="72a2c2e7d726a2ccaa640da0ce6cafb1b179a74f" translate="yes" xml:space="preserve">
          <source>--See this for a position safe string-splitter (&lt;em&gt;zero-based&lt;/em&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-位置安全な文字列スプリッター（&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ゼロベース&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）については、次&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0f7adbd84e5b27d5f0791faad5ebbb56c30b5a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://sqlfiddle.com/#!3/9ebaa/1/0&quot;&gt;Results&lt;/a&gt;&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://sqlfiddle.com/#!3/9ebaa/1/0&quot;&gt;Results&lt;/a&gt;&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="4fb06e92859f47d2c08c9345c53acc5bd035ac83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://www.sqlfiddle.com/#!3/776f3/1&quot;&gt;SQL FIDDLE&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://www.sqlfiddle.com/#!3/776f3/1&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL FIDDLE&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="96829e303b9c7ac4c207907619fd8a78876e2fb9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Advantages:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Advantages:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="981e2372fc3dbc9e8b1def19af55d47c9b0fe0a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Limitations:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Limitations:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="394321db708cf5101024b8f9ad2fdccffecbe3dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;MS SQL Server 2008 Schema Setup&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MS SQL Server 2008スキーマのセットアップ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8c8ca96e1d5533f5e4dfc8425643a59d96ec3552" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: the solution can give sub-string up to to N.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：このソリューションでは、Nまでの部分文字列を指定できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ca3840cd4c0d7d0c63b456b01e7ca0adef2f3db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Query 1&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クエリ1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="abe643c1c3615c1a05c2b856696c064c8836d05d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update:&lt;/strong&gt; In case of Records &amp;gt; 50000 it is not &lt;strong&gt;advisable&lt;/strong&gt; to use &lt;strong&gt;&lt;code&gt;LOOPS&lt;/code&gt;&lt;/strong&gt; as it will degrade the &lt;strong&gt;Performance&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更新：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 50000を超えるレコードの場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パフォーマンス&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を低下させるため、&lt;/font&gt;&lt;strong&gt; &lt;code&gt;LOOPS&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことは&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;お勧めでき&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ません。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="200627b0eb37efd54845f9a6bd7c0133da5e8d51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Update&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0cee17c0c060d9cda5582f00079d925c63b171dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt; 18.09.2013</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アップデート&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 18.09.2013&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f04c764f0ef5db69d451efad93f62be0f80648db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;if anyone wants to get only one part of the seperatured text can use this&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;誰かが分離されたテキストの一部だけを取得したい場合、これを使用できます&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="89a93fddb071accc73c76f800168b9dc4c5b84e8" translate="yes" xml:space="preserve">
          <source>A string like &lt;code&gt;1,2,3&lt;/code&gt; needs nothing more than brackets: &lt;code&gt;[1,2,3]&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;1,2,3&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ような文字列には&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、角かっこだけが必要です：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[1,2,3]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc3dc5fe040e2c1097edcf524b46a887aedb1646" translate="yes" xml:space="preserve">
          <source>A string of words like &lt;code&gt;this is an example&lt;/code&gt; needs to be &lt;code&gt;[&quot;this&quot;,&quot;is&quot;,&quot;an&quot;,&quot;example&quot;]&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下のような単語列&lt;/font&gt;&lt;/font&gt; &lt;code&gt;this is an example&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことが必要である&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[&quot;this&quot;,&quot;is&quot;,&quot;an&quot;,&quot;example&quot;]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8ea98fb5ea31b819a90d6d6bbf2256ea00d4f95b" translate="yes" xml:space="preserve">
          <source>AND USE IT</source>
          <target state="translated">そしてそれを使用して下さい</target>
        </trans-unit>
        <trans-unit id="e4e07c58d00fb80978875575ef276d708670e25b" translate="yes" xml:space="preserve">
          <source>Again i hope this solution can help some-one.</source>
          <target state="translated">繰り返しになりますが、この解決策が誰かの助けになることを願っています。</target>
        </trans-unit>
        <trans-unit id="6d48abf56c1ddad2afc9d1dd6f73409cba48741d" translate="yes" xml:space="preserve">
          <source>All answers here are doing some kind of string splitting using recursion, &lt;code&gt;CTE&lt;/code&gt;s, multiple &lt;code&gt;CHARINDEX&lt;/code&gt;, &lt;code&gt;REVERSE&lt;/code&gt; and &lt;code&gt;PATINDEX&lt;/code&gt;, inventing functions, call for CLR methods, number tables, &lt;code&gt;CROSS APPLY&lt;/code&gt;s ... Most answers cover many lines of code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここでのすべての回答は、再帰、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;CTE&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、複数の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;CHARINDEX&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;REVERSE&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;PATINDEX&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して何らかの種類の文字列分割を行っており&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、関数を発明し、CLRメソッドの呼び出し、数値テーブル、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;CROSS APPLY&lt;/code&gt; を実行してい&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます...ほとんどの回答は、コードの多くの行をカバーしています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c229b6a324c2239b6fbb037af173cce636e2e3f8" translate="yes" xml:space="preserve">
          <source>Almost all the other answers are replacing the string being split which wastes CPU cycles and performs unnecessary memory allocations.</source>
          <target state="translated">他のほぼすべての回答は、CPU サイクルを無駄にし、不要なメモリ割り当てを行う分割された文字列を置き換えています。</target>
        </trans-unit>
        <trans-unit id="48d9d17d9f70fe4b51e2f810b212b1bd235e48d9" translate="yes" xml:space="preserve">
          <source>And the result-set is:</source>
          <target state="translated">そして、結果セットは</target>
        </trans-unit>
        <trans-unit id="8eed95c181bab1e316105fe8ae02c413e94f9e7b" translate="yes" xml:space="preserve">
          <source>And you call the function like this :</source>
          <target state="translated">そして、このように関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="b5a79baf5f6e495dfb7b7281c1855e8e5449326c" translate="yes" xml:space="preserve">
          <source>But - if you really &lt;strong&gt;want nothing more than an approach to get the nth element&lt;/strong&gt; - this can be done as &lt;strong&gt;real one-liner&lt;/strong&gt;, no UDF, not even a sub-select... And as an extra benefit: &lt;strong&gt;type safe&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、実際に&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;n番目の要素を取得するためのアプローチしか必要ない&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際のワンライナー&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;として、UDFを使用せずに、サブ選択を使用する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことなく行うことができ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます...そして、追加の利点として、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイプセーフ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1482c276f5a0023bfaf3389594f7540ca36995ba" translate="yes" xml:space="preserve">
          <source>But again the above &lt;a href=&quot;https://stackoverflow.com/questions/14101227/how-to-use-pivot-in-a-recursive-stored-procedure/14101790#14101790&quot;&gt;&lt;strong&gt;solution&lt;/strong&gt;&lt;/a&gt; can't be use in a table (Actaully i wasn't able to use it).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、上記の&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/14101227/how-to-use-pivot-in-a-recursive-stored-procedure/14101790#14101790&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;解決策&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はテーブルで使用できません（実際には使用できませんでした）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6042a31290e2401d3de09ecbcb9957bfe5736084" translate="yes" xml:space="preserve">
          <source>Comparing string splitting / concatenation methods</source>
          <target state="translated">文字列分割連結法の比較</target>
        </trans-unit>
        <trans-unit id="5ba1a2f7eafd2c2ced219397d83498a7a2986c20" translate="yes" xml:space="preserve">
          <source>Create a physical numbers table:</source>
          <target state="translated">物理的な数字の表を作成します。</target>
        </trans-unit>
        <trans-unit id="43bb4a8afa9a20e0c5886221420b6f618d03f7ca" translate="yes" xml:space="preserve">
          <source>Create test table with 1000000 rows</source>
          <target state="translated">1000000行のテストテーブルを作成</target>
        </trans-unit>
        <trans-unit id="322021e5d2014f6426eaa239e48681e57a3bda3a" translate="yes" xml:space="preserve">
          <source>Create the function</source>
          <target state="translated">関数を作成する</target>
        </trans-unit>
        <trans-unit id="b50a558b6bfc1972bb1b33bea79305788a9959ab" translate="yes" xml:space="preserve">
          <source>Demo on &lt;a href=&quot;http://sqlfiddle.com/#!3/c43e0/1&quot;&gt;&lt;strong&gt;SQLFiddle&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;http://sqlfiddle.com/#!3/c43e0/1&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQLFiddleの&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デモ&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b89eb239cd19b7ba2a12308ab1048431c6ccf7b8" translate="yes" xml:space="preserve">
          <source>Edit:  Updated solution to handle delimters with a len&amp;gt;1 as in :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;編集：以下のようにlen&amp;gt; 1のデリミタを処理するために更新されたソリューション：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="35e60436a7780ab36833ef00926cdfb1233274fb" translate="yes" xml:space="preserve">
          <source>Execute the function like this</source>
          <target state="translated">このような関数を実行します。</target>
        </trans-unit>
        <trans-unit id="eecdff3785eefc48fdf59c63f50bb75eb3a482f7" translate="yes" xml:space="preserve">
          <source>First, create a function (using CTE, common table expression does away with the need for a temp table)</source>
          <target state="translated">まず、関数を作成します(CTEを使用して、共通のテーブル式を使用すると、テンポラリテーブルの必要性がなくなります)。</target>
        </trans-unit>
        <trans-unit id="60afc768f6cf8b61ec14f515b053366cbe7c715b" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;OPENJSON&lt;/code&gt; the &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/functions/openjson-transact-sql?view=sql-server-2017&quot;&gt;documentation&lt;/a&gt; states clearly:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;OPENJSON&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/functions/openjson-transact-sql?view=sql-server-2017&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ドキュメントは&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;明確に述べて：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="48235f5bde524acc299870f8093bfbc5243e0667" translate="yes" xml:space="preserve">
          <source>Get part 2 delimited by a space:</source>
          <target state="translated">スペースで区切られたパート2を取得します。</target>
        </trans-unit>
        <trans-unit id="4b65d5e37f1fb0622d796e3dd4fee4b298fdd68a" translate="yes" xml:space="preserve">
          <source>Here I post a simple way of solution</source>
          <target state="translated">ここでは、私は簡単な解決方法を投稿します。</target>
        </trans-unit>
        <trans-unit id="4824e882fa23cb40673f4b5a34ae09e68bd30648" translate="yes" xml:space="preserve">
          <source>Here is a UDF which will do it.  It will return a table of the delimited values, haven't tried all scenarios on it but your example works fine.</source>
          <target state="translated">これはそれを行うUDFです。区切り値のテーブルを返します。すべてのシナリオを試したわけではありませんが、あなたの例では問題なく動作します。</target>
        </trans-unit>
        <trans-unit id="132cfe1a34b417e82b4e1d7222039410f4ea67b5" translate="yes" xml:space="preserve">
          <source>Here is the code:</source>
          <target state="translated">ここにコードがあります。</target>
        </trans-unit>
        <trans-unit id="36c24f5960ab9355b2b9d6ee6f617b00d3f25dd0" translate="yes" xml:space="preserve">
          <source>How do I split a string so I can access item x</source>
          <target state="translated">項目 x にアクセスできるように文字列を分割するには</target>
        </trans-unit>
        <trans-unit id="eabfefec4c697436e3b7f8f7164361bb2b6dc010" translate="yes" xml:space="preserve">
          <source>I cover a much better way to do a string split here: &lt;a href=&quot;http://www.digitalruby.com/split-string-sql-server/&quot;&gt;http://www.digitalruby.com/split-string-sql-server/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで文字列分割を行うより良い方法をカバーします：&lt;/font&gt;&lt;a href=&quot;http://www.digitalruby.com/split-string-sql-server/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//www.digitalruby.com/split-string-sql-server/&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="861eb6f16f2c3c87b1dfe11cd688a853499e8004" translate="yes" xml:space="preserve">
          <source>I devoloped this,</source>
          <target state="translated">私はこれを考案しました。</target>
        </trans-unit>
        <trans-unit id="3cbef447c0102c0794e74edffa16dce4ac6579b0" translate="yes" xml:space="preserve">
          <source>I don't believe SQL Server has a built-in split function, so other than a UDF, the only other answer I know is to hijack the PARSENAME function:</source>
          <target state="translated">SQL Serverにスプリット関数が組み込まれているとは思えないので、UDF以外では、PARSENAME関数をハイジャックするしかないと思います。</target>
        </trans-unit>
        <trans-unit id="39959eb83be8545c5da2d7ca40317243ab34a169" translate="yes" xml:space="preserve">
          <source>I know it's an old Question, but i think some one can benefit from my solution.</source>
          <target state="translated">古い質問だとは思いますが、誰かが私の解決策の恩恵を受けられると思います。</target>
        </trans-unit>
        <trans-unit id="04aa0c113d96f0176324c1c029d2eb74a32176a6" translate="yes" xml:space="preserve">
          <source>I modified it and I'm using &lt;code&gt;select&lt;/code&gt; with &lt;code&gt;union all&lt;/code&gt; and it works</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私はそれを修正し、私が使用しています&lt;/font&gt;&lt;/font&gt; &lt;code&gt;select&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して&lt;/font&gt;&lt;/font&gt; &lt;code&gt;union all&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、それが動作します&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1f6a2bf752a311af8f81beaa07837578b6e3a71f" translate="yes" xml:space="preserve">
          <source>I use the answer of frederic but this did not work in SQL Server 2005</source>
          <target state="translated">私はfredericの答えを使用していますが、これはSQL Server 2005で動作しませんでした</target>
        </trans-unit>
        <trans-unit id="04c6855e4a17d0c9edd3627bfef727732249b319" translate="yes" xml:space="preserve">
          <source>I was looking for the solution on net and the below works for me.
&lt;a href=&quot;http://code.developwithus.com/topics/database/mssql/&quot;&gt;Ref&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私はネット上の解決策を探していましたが、以下がうまくいきました。 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://code.developwithus.com/topics/database/mssql/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c8a44b5bd172fd6261fecf46592ecd45c159885f" translate="yes" xml:space="preserve">
          <source>If you need to support arbitrary strings (with xml special characters)</source>
          <target state="translated">任意の文字列をサポートする必要がある場合 (xml の特殊文字を使用)</target>
        </trans-unit>
        <trans-unit id="4ddf52229e7bbc5fd2591a2d73ca24d4855b7b5a" translate="yes" xml:space="preserve">
          <source>If your database has compatibility level of 130 or higher then you can use the &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/functions/string-split-transact-sql&quot;&gt;STRING_SPLIT&lt;/a&gt; function along with &lt;a href=&quot;https://technet.microsoft.com/en-us/library/gg699618(v=sql.110).aspx&quot;&gt;OFFSET FETCH&lt;/a&gt; clauses to get the specific item by index.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;データベースの互換性レベルが130以上の場合は、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/functions/string-split-transact-sql&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;STRING_SPLIT&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数を&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://technet.microsoft.com/en-us/library/gg699618(v=sql.110).aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;OFFSET FETCH&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;句&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とともに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インデックスで特定のアイテムを取得できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3c81647877212f7b3e13a0a3b355d67695773690" translate="yes" xml:space="preserve">
          <source>If your string might include &lt;strong&gt;forbidden characters&lt;/strong&gt; (especially one among &lt;code&gt;&amp;amp;&amp;gt;&amp;lt;&lt;/code&gt;), you still can do it this way. Just use &lt;code&gt;FOR XML PATH&lt;/code&gt; on your string first to replace all forbidden characters with the fitting escape sequence implicitly.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列に&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;禁止文字&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（特に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;amp;&amp;gt;&amp;lt;&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 1つ）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が含ま&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れている&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可能性がある&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合でも、この方法でそれを行うことができます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初に文字列に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;FOR XML PATH&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して、すべての禁止文字を暗黙のフィッティングエスケープシーケンスで置き換えます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c403768ce8e527567b543d8d94e7147a8e52139b" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://stackoverflow.com/a/56617711/5089204&quot;&gt;this post&lt;/a&gt; I tested various approaches and found, that &lt;code&gt;OPENJSON&lt;/code&gt; is really fast. Even much faster than the famous &quot;delimitedSplit8k()&quot; method...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/56617711/5089204&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この記事&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私がいることを、さまざまなアプローチをテストした&lt;/font&gt;&lt;/font&gt; &lt;code&gt;OPENJSON&lt;/code&gt; は&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;本当に速いです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有名な &quot;delimitedSplit8k（）&quot;メソッドよりもはるかに高速です...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="01f0e3929ac851d6ba2a48a6cf0179c3ef173237" translate="yes" xml:space="preserve">
          <source>In my opinion you guys are making it way too complicated. Just create a CLR UDF and be done with it.</source>
          <target state="translated">私の意見では、あなた方はそれを複雑にしすぎていると思います。CLR UDFを作成して終わりにしてください。</target>
        </trans-unit>
        <trans-unit id="85ac38e2e4bdbab14add73b55a236f560bce3a15" translate="yes" xml:space="preserve">
          <source>It separates all the 3 sub-strings deliminator by ' '.</source>
          <target state="translated">これは、3つのサブストリングの区切り文字をすべて' 'で区切っています。</target>
        </trans-unit>
        <trans-unit id="b5e708e912cf12943953343497a7f26a6683dddc" translate="yes" xml:space="preserve">
          <source>It's a very special case if - additionally - &lt;strong&gt;your delimiter is the semicolon&lt;/strong&gt;. In this case I replace the delimiter first to '#DLMT#', and replace this to the XML tags finally:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さらに&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、区切り文字がセミコロンである&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合は、非常に特殊なケースです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この場合、最初に区切り文字を '＃DLMT＃'に置き換え、最後にこれをXMLタグに置き換えます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a24be8d24a4992b13e8dc675c5e150d66b07a376" translate="yes" xml:space="preserve">
          <source>Let some table with identifiers like</source>
          <target state="translated">のような識別子を持つテーブルがあるとします。</target>
        </trans-unit>
        <trans-unit id="c4ad3601a12f283a0dfe334875cfc197a68b06a8" translate="yes" xml:space="preserve">
          <source>More on split functions, why (and proof that) while loops and recursive CTEs don't scale, and better alternatives, if splitting strings coming from the application layer:</source>
          <target state="translated">スプリット関数の詳細、ループや再帰的な CTE がスケールしない理由(と証明)、アプリケーション層から来る文字列を分割する場合のより良い代替案など。</target>
        </trans-unit>
        <trans-unit id="3b90547aa412262611249997d51148d327c875da" translate="yes" xml:space="preserve">
          <source>More on splitting lists : custom delimiters, preventing duplicates, and maintaining order</source>
          <target state="translated">リストの分割についての詳細:カスタムデリミタ、重複の防止、順序の維持</target>
        </trans-unit>
        <trans-unit id="003063d25d9f3cfd9dcc57ab2e3b7196b368694a" translate="yes" xml:space="preserve">
          <source>Most of the solutions here use while loops or recursive CTEs. A set-based approach will be superior, I promise, if you can use a delimiter other than a space:</source>
          <target state="translated">ここでの解決策のほとんどは、while loopやrecursive CTEsを使用しています。スペース以外の区切り文字を使用できるのであれば、セットベースのアプローチの方が優れていると思います。</target>
        </trans-unit>
        <trans-unit id="341cc4c343fa89b48e0fe21c6da6061f2d467fa5" translate="yes" xml:space="preserve">
          <source>No need to Pivot as all the resultant sub-string will be displayed in
one Row</source>
          <target state="translated">すべての結果のサブストリングが1つの行に表示されるので、ピボットする必要はありません。</target>
        </trans-unit>
        <trans-unit id="d736343b43f41bbed10a47afbca6994e9d09d2ec" translate="yes" xml:space="preserve">
          <source>Obvious problem is when the string already contains a period.  I still think using a UDF is the best way...any other suggestions?</source>
          <target state="translated">明らかな問題は、文字列にすでにピリオドが含まれている場合です。私はまだUDFを使用するのが最善の方法だと考えています...他に何か提案はありますか?</target>
        </trans-unit>
        <trans-unit id="07d1b33e9da0f055474f81da5975d811669562e9" translate="yes" xml:space="preserve">
          <source>Of course &lt;strong&gt;you can use variables&lt;/strong&gt; for delimiter and position (use &lt;code&gt;sql:column&lt;/code&gt; to retrieve the position directly from a query's value):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もちろん&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、区切り文字と位置に&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用できます&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sql:column&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して、クエリの値から直接位置を取得します）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f36c96e5edb394841d4c2c2a6e286f0583b94f1b" translate="yes" xml:space="preserve">
          <source>On SQL Server 2016 or above, though, you should look at &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/functions/string-split-transact-sql&quot;&gt;&lt;code&gt;STRING_SPLIT()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/functions/string-agg-transact-sql&quot;&gt;&lt;code&gt;STRING_AGG()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、SQL Server 2016以降では、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/functions/string-split-transact-sql&quot;&gt; &lt;code&gt;STRING_SPLIT()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/functions/string-agg-transact-sql&quot;&gt; &lt;code&gt;STRING_AGG()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を確認する必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd85a9f10b006b92d1ed131c96734a1a45495221" translate="yes" xml:space="preserve">
          <source>One must know the total no. of spaces (sub-string).</source>
          <target state="translated">スペース(サブストリング)の総数を知る必要があります。</target>
        </trans-unit>
        <trans-unit id="bd958060d7fa52e6e181df1f68e6d76c333f48e7" translate="yes" xml:space="preserve">
          <source>One must not use while loop, as it decreases the performance.</source>
          <target state="translated">パフォーマンスを低下させるので、ループを使用してはいけません。</target>
        </trans-unit>
        <trans-unit id="a92800167474fa577f6d5cf144fdee144ea91f2f" translate="yes" xml:space="preserve">
          <source>PARSENAME takes a string and splits it on the period character.  It takes a number as its second argument, and that number specifies which segment of the string to return (working from back to front).</source>
          <target state="translated">PARSENAMEは文字列を受け取り、ピリオド文字で分割します。第二引数に数値を取り、その数値は文字列のどのセグメントを返すかを指定します(後ろから前に向かって)。</target>
        </trans-unit>
        <trans-unit id="da13c82ad6be56c28c0ed22232bce2cede624ad2" translate="yes" xml:space="preserve">
          <source>Performance Surprises and Assumptions : STRING_SPLIT()</source>
          <target state="translated">パフォーマンスの驚きと仮定.STRING_SPLIT()</target>
        </trans-unit>
        <trans-unit id="e0d6f5fc0b7875cd6bbdd7ce8985d5482d212211" translate="yes" xml:space="preserve">
          <source>Performance here is not amazing, but calling a function over a million row table is not the best idea. If performing a string split over many rows I would avoid the function.</source>
          <target state="translated">ここでのパフォーマンスは驚くべきものではありませんが、100万行以上のテーブル上で関数を呼び出すのは最良のアイデアではありません。多くの行にまたがって文字列を分割する場合は、この関数は避けた方がいいでしょう。</target>
        </trans-unit>
        <trans-unit id="8d3ac0800929cd5126120c39c8530c2d9da8f38d" translate="yes" xml:space="preserve">
          <source>Please help with STRING_SPLIT improvements</source>
          <target state="translated">STRING_SPLITの改善に協力してください。</target>
        </trans-unit>
        <trans-unit id="b76ee5590758166f8886887ac998500d24a938f5" translate="yes" xml:space="preserve">
          <source>Previous version would fail for input string longer than 4000 chars. This version takes care of the limitation:</source>
          <target state="translated">以前のバージョンでは、4000文字以上の文字列を入力すると失敗していました。このバージョンでは、この制限を解消しました。</target>
        </trans-unit>
        <trans-unit id="92f19b66234430dd0acc511176e5905a7e4cfd0b" translate="yes" xml:space="preserve">
          <source>Processing a list of integers : my approach</source>
          <target state="translated">整数のリストを処理する:私のアプローチ</target>
        </trans-unit>
        <trans-unit id="94cff61e0718af25590279bb39e1078abb49e3fb" translate="yes" xml:space="preserve">
          <source>Pure set-based solution using &lt;code&gt;TVF&lt;/code&gt; with recursive &lt;code&gt;CTE&lt;/code&gt;. You can &lt;code&gt;JOIN&lt;/code&gt; and &lt;code&gt;APPLY&lt;/code&gt; this function to any dataset.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;TVF&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と再帰的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;CTE&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用した純粋なセットベースのソリューション&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたは、することができ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JOIN&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;APPLY&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;任意のデータセットに、この機能を。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ccde58b55f5d4af2bfe4e79ac99e1b349ae671c6" translate="yes" xml:space="preserve">
          <source>Recursive CTE solution with server pain, &lt;a href=&quot;http://sqlfiddle.com/#!3/9ebaa/1&quot;&gt;test it&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;サーバーの痛みを伴う再帰CTEソリューション、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://sqlfiddle.com/#!3/9ebaa/1&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テスト&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04bbef9b11a9583bc86430fb7431d6542dc456b7" translate="yes" xml:space="preserve">
          <source>Regretfully the developers forgot to return the part's index with &lt;code&gt;STRING_SPLIT&lt;/code&gt;. But, using SQL-Server 2016+, there is &lt;code&gt;JSON_VALUE&lt;/code&gt; and &lt;code&gt;OPENJSON&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;残念ながら、開発者は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;STRING_SPLIT&lt;/code&gt; で&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パーツのインデックスを返すのを忘れてい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、SQL-Server 2016+を使用すると、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON_VALUE&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;OPENJSON&lt;/code&gt; があり&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b83026ba77af2080b947f1ff2546c5bff3c127b" translate="yes" xml:space="preserve">
          <source>Removing Duplicates from Strings in SQL Server</source>
          <target state="translated">SQL Serverで文字列から重複を削除する</target>
        </trans-unit>
        <trans-unit id="e9bb44ca1add2be4f51e068be20fde923da66aab" translate="yes" xml:space="preserve">
          <source>Result-set achieved.</source>
          <target state="translated">結果セットを達成しました。</target>
        </trans-unit>
        <trans-unit id="bd4afc0073cac79bf136f8e1d922b83f76e969ad" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="translated">Result:</target>
        </trans-unit>
        <trans-unit id="fd19e6d6cb4b26b0ef86cb95d8b5872a311f4828" translate="yes" xml:space="preserve">
          <source>Results:</source>
          <target state="translated">Results:</target>
        </trans-unit>
        <trans-unit id="0bae97da1321b9a7df8976d139b9fc28d86204ad" translate="yes" xml:space="preserve">
          <source>SQL Server v.Next : STRING_AGG() performance</source>
          <target state="translated">SQL Server v.Next:STRING_AGG()のパフォーマンス</target>
        </trans-unit>
        <trans-unit id="df8f51891fa4fa1e3c6df84dd58ffc783c1af384" translate="yes" xml:space="preserve">
          <source>STRING_SPLIT is not feature complete</source>
          <target state="translated">STRING_SPLIT は機能的に完全ではありません。</target>
        </trans-unit>
        <trans-unit id="b7f55ab4bb0ad51206737c4deba9b7c27d908700" translate="yes" xml:space="preserve">
          <source>STRING_SPLIT() in SQL Server 2016 : Follow-Up #1</source>
          <target state="translated">SQL Server 2016 の STRING_SPLIT().フォローアップ #1</target>
        </trans-unit>
        <trans-unit id="dfef50c82f1b56acbf43b1e74a3ef1ad743f629a" translate="yes" xml:space="preserve">
          <source>STRING_SPLIT() in SQL Server 2016 : Follow-Up #2</source>
          <target state="translated">SQL Server 2016 の STRING_SPLIT().フォローアップ #2</target>
        </trans-unit>
        <trans-unit id="3409c76532f2ff56204d0e6566e878683cc674aa" translate="yes" xml:space="preserve">
          <source>Sample usage:</source>
          <target state="translated">使用例。</target>
        </trans-unit>
        <trans-unit id="b9a743399f9df68a14daddf028fd717424e0fe2f" translate="yes" xml:space="preserve">
          <source>Solve old problems with SQL Server&amp;rsquo;s new STRING_AGG and STRING_SPLIT functions</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL Serverの新しいSTRING_AGGおよびSTRING_SPLIT関数で古い問題を解決する&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="16aff6976116fe230a8e1cbc23f74a93fd8b417e" translate="yes" xml:space="preserve">
          <source>Split strings the right way &amp;ndash; or the next best way</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列を正しい方法で分割する&amp;ndash;または次善の方法&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fbcc09c69036d01d445700edaee343f9069c9993" translate="yes" xml:space="preserve">
          <source>Splitting Strings : A Follow-Up</source>
          <target state="translated">弦の分裂:フォローアップ</target>
        </trans-unit>
        <trans-unit id="0db55db24d0d4945ea9d9328e58d53ac9d572c6e" translate="yes" xml:space="preserve">
          <source>Splitting Strings : Now with less T-SQL</source>
          <target state="translated">文字列を分割する:T-SQLが少なくなった今</target>
        </trans-unit>
        <trans-unit id="917a0148efa215bf121070fa6cffef9f14258b4f" translate="yes" xml:space="preserve">
          <source>Splitting a list of integers : another roundup</source>
          <target state="translated">整数のリストを分割する:別のラウンドアップ</target>
        </trans-unit>
        <trans-unit id="b46f3eb004e4432dc8d922bc2589c876da1b11bc" translate="yes" xml:space="preserve">
          <source>Starting with &lt;strong&gt;SQL Server 2016&lt;/strong&gt; we &lt;strong&gt;string_split&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以降では&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、SQL Serverの2016年&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、私たちの&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;string_split&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="221ec6a3f6893766f8a547640720dd7f365056d1" translate="yes" xml:space="preserve">
          <source>Take a string &quot;Hello John Smith&quot;. How can I split the string by space and access the item at index 1 which should return &quot;John&quot;?</source>
          <target state="translated">Hello John Smith」という文字列を取ります。この文字列をスペースで分割して、&quot;John &quot;を返すはずのインデックス1の項目にアクセスするにはどうすればいいのでしょうか?</target>
        </trans-unit>
        <trans-unit id="03599af4332809fba34f145062047a5231967dd0" translate="yes" xml:space="preserve">
          <source>Test it like this:</source>
          <target state="translated">こんな感じでテストしてみてください。</target>
        </trans-unit>
        <trans-unit id="c5807f5457d5e1fbebfef0ef799d2794f69496af" translate="yes" xml:space="preserve">
          <source>The following example uses a recursive CTE</source>
          <target state="translated">次の例では、再帰的なCTEを使用しています。</target>
        </trans-unit>
        <trans-unit id="f59c73aa8302575dfb55eb3e72cea9d47cee1471" translate="yes" xml:space="preserve">
          <source>Then, use it as any table (or modify it to fit within your existing stored proc) like this.</source>
          <target state="translated">そして、次のように、これを任意のテーブルとして使用します(または、既存のストアドプロック内に収まるように変更します)。</target>
        </trans-unit>
        <trans-unit id="9ba06f5db22913a32635c4d0622911b1cca08557" translate="yes" xml:space="preserve">
          <source>Then, you can write</source>
          <target state="translated">では、以下のように書いてみましょう。</target>
        </trans-unit>
        <trans-unit id="901cf72b3e4b5bc287167a05d6c7b3d40e08f49e" translate="yes" xml:space="preserve">
          <source>These are very easy string operations. Just try it out:</source>
          <target state="translated">これらはとても簡単な文字列操作です。試しにやってみてください。</target>
        </trans-unit>
        <trans-unit id="37b8c832c6b1b1a7e1e83105b642c727215bb6f0" translate="yes" xml:space="preserve">
          <source>This pattern works fine and you can generalize</source>
          <target state="translated">このパターンは問題なく機能し、一般化することができます</target>
        </trans-unit>
        <trans-unit id="55796e7249206964e7b504cd38b0eee2ec464d4e" translate="yes" xml:space="preserve">
          <source>This question is &lt;strong&gt;not about a string split approach&lt;/strong&gt;, but about &lt;strong&gt;how to get the nth element&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この質問は&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、文字列分割アプローチ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ではなく&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、n番目の要素を取得する方法&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に関する&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もの&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8c21d28647d008ac352cd80473c6aa38cb6df8dd" translate="yes" xml:space="preserve">
          <source>To check the &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/relational-databases/databases/view-or-change-the-compatibility-level-of-a-database&quot;&gt;compatibility level of your database&lt;/a&gt;, execute this code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/sql/relational-databases/databases/view-or-change-the-compatibility-level-of-a-database&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;データベースの互換性レベル&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を確認するには&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、次のコードを実行します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24d35bd271104108a2fd0302f5e1f68f4bc6d5c5" translate="yes" xml:space="preserve">
          <source>To get the item at &lt;strong&gt;index N&lt;/strong&gt; (zero based), you can use the following code</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インデックスN&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（ゼロベース）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のアイテムを取得&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するには、次のコードを使用できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b2f11f42ff53e89c8755372f9046c692494421e" translate="yes" xml:space="preserve">
          <source>To overcame the limitation we can use the following &lt;a href=&quot;https://stackoverflow.com/questions/14101227/how-to-use-pivot-in-a-recursive-stored-procedure/14101790#14101790&quot;&gt;&lt;strong&gt;ref&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;制限を克服するために、次の&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/14101227/how-to-use-pivot-in-a-recursive-stored-procedure/14101790#14101790&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;refを&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b21480ff457e048e3c7a6593bfb52719279e1f05" translate="yes" xml:space="preserve">
          <source>Try this:</source>
          <target state="translated">これを試してみてください。</target>
        </trans-unit>
        <trans-unit id="23ebcbf32ebeb3d4fcd05823abf0a22e935fc0de" translate="yes" xml:space="preserve">
          <source>UPDATE 2 - Get the values type-safe</source>
          <target state="translated">UPDATE 2-タイプセーフの値を取得する</target>
        </trans-unit>
        <trans-unit id="f7912920e3c6169b5a6c45cf4949af939ffec569" translate="yes" xml:space="preserve">
          <source>UPDATE for SQL-Server 2016+</source>
          <target state="translated">SQL-Server 2016+用のUPDATE</target>
        </trans-unit>
        <trans-unit id="47a663d0f8860bf2c375f326071431d5934058f1" translate="yes" xml:space="preserve">
          <source>Usage (outputs 3mil rows in 40s on my laptop)</source>
          <target state="translated">使用方法(ノートパソコンの40代で3milの行を出力する</target>
        </trans-unit>
        <trans-unit id="d4b4c9d5eb9be686fbc41b31c30cb9ae3d801397" translate="yes" xml:space="preserve">
          <source>Usage remains the same.</source>
          <target state="translated">使い方は変わりません。</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="9381c6de032116be6102d1c04dc240c6930980d3" translate="yes" xml:space="preserve">
          <source>Using SQL Server, how do I split a string so I can access item x?</source>
          <target state="translated">SQL Serverを使用して、項目xにアクセスできるように文字列を分割するには?</target>
        </trans-unit>
        <trans-unit id="548773c946d2055d019fd2dc6e489906ebe794ea" translate="yes" xml:space="preserve">
          <source>We can use an &lt;em&gt;array within an array&lt;/em&gt; simply by using doubled &lt;code&gt;[[]]&lt;/code&gt;. This allows for a typed &lt;code&gt;WITH&lt;/code&gt;-clause:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;doubled &lt;/font&gt; &lt;code&gt;[[]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用するだけで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列内で配列を&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これにより、型付きの&lt;/font&gt; &lt;code&gt;WITH&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;句を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e4ff7c535919583428f97c8e9d5245e421d824fd" translate="yes" xml:space="preserve">
          <source>What about using &lt;code&gt;string&lt;/code&gt; and &lt;code&gt;values()&lt;/code&gt; statement?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;string&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;values()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ステートメントの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用についてはどう&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ですか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d6f30c134beec50100a607c2588826239dc4bbd4" translate="yes" xml:space="preserve">
          <source>When OPENJSON parses a JSON array, the function returns the indexes of the elements in the JSON text as keys.</source>
          <target state="translated">OPENJSONがJSON配列を解析すると、この関数はJSONテキスト内の要素のインデックスをキーとして返します。</target>
        </trans-unit>
        <trans-unit id="fde5191e61f235d540063dfca98fe58a2d10fc6c" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;JSON_VALUE&lt;/code&gt; we can pass in the position as the index' array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;JSON_VALUE&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我々はインデックス」配列としての位置に渡すことができます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3bea109303bffc4664a906dedb8f059c687091ba" translate="yes" xml:space="preserve">
          <source>With enough &lt;em&gt;qualitative&lt;/em&gt; feedback, they may actually consider making some of these enhancements:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;十分&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;な質的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィードバックが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あれば&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、実際にこれらの機能強化のいくつかを検討するかもしれません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6e0ecbe1f6015ab470e648ae1a51f16a6a216fc7" translate="yes" xml:space="preserve">
          <source>Yet another get n'th part of string by delimeter function:</source>
          <target state="translated">区切り関数で文字列の n'th 部分を取得しています。</target>
        </trans-unit>
        <trans-unit id="3f553d0ee241e3a362c4a2cd50340fa367e3c5ba" translate="yes" xml:space="preserve">
          <source>You can leverage a Number table to do the string parsing.</source>
          <target state="translated">数値テーブルを利用して文字列の解析を行うことができます。</target>
        </trans-unit>
        <trans-unit id="b60eefcfe17bae54494f40c2a68f97c7677cf458" translate="yes" xml:space="preserve">
          <source>You can split a string in SQL without needing a function:</source>
          <target state="translated">関数を使わずにSQLで文字列を分割することができます。</target>
        </trans-unit>
        <trans-unit id="868a3a9dccda30a0dccf1466701a675fe2cf393b" translate="yes" xml:space="preserve">
          <source>You can use this simple logic:</source>
          <target state="translated">このようなシンプルなロジックが使えます。</target>
        </trans-unit>
        <trans-unit id="4c63d9af4a215a03870db19ed308582b59f105ec" translate="yes" xml:space="preserve">
          <source>You can't do this with &lt;em&gt;just&lt;/em&gt; the &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/functions/string-split-transact-sql&quot;&gt;native &lt;code&gt;STRING_SPLIT&lt;/code&gt; function&lt;/a&gt; added in SQL Server 2016, because there is no guarantee that the output will be rendered in the order of the original list. In other words, if you pass in &lt;code&gt;3,6,1&lt;/code&gt; the result will likely be in that order, but it &lt;em&gt;could&lt;/em&gt; be &lt;code&gt;1,3,6&lt;/code&gt;. I have asked for the community's help in improving the built-in function here:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL Server 2016に追加され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;た&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/sql/t-sql/functions/string-split-transact-sql&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ネイティブの&lt;/font&gt;&lt;/a&gt; &lt;code&gt;STRING_SPLIT&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;だけで&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを行うことはできません。これ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、出力が元のリストの順序でレンダリングされる保証がないためです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたが渡す言い換えれば、&lt;/font&gt; &lt;code&gt;3,6,1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;の結果は、おそらくそのためになりますが、それは&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可能性が&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あること&lt;/font&gt; &lt;code&gt;1,3,6&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は組み込み機能を改善するためにコミュニティの助けをここに求めました：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3d905369fe067ccc3f810e420f50f111064b7616" translate="yes" xml:space="preserve">
          <source>You could also add the &lt;code&gt;idx&lt;/code&gt; you want as an argument to the function, but I'll leave that as an exercise to the reader.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要な&lt;/font&gt;&lt;/font&gt; &lt;code&gt;idx&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を関数の引数として&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;追加することもできますが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、それは読者の演習として残しておきます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="928716f65af4f0c6e020224d5f3b4fa869305b46" translate="yes" xml:space="preserve">
          <source>You may find the solution in &lt;em&gt;&lt;a href=&quot;http://www.codeproject.com/KB/database/SQL_UDF_to_Parse_a_String.aspx&quot;&gt;SQL User Defined Function to Parse a Delimited String&lt;/a&gt;&lt;/em&gt; helpful (from &lt;a href=&quot;http://en.wikipedia.org/wiki/The_Code_Project&quot;&gt;The Code Project&lt;/a&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;http://www.codeproject.com/KB/database/SQL_UDF_to_Parse_a_String.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;区切られた文字列を解析するSQLユーザー定義関数の&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ソリューションが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;役立つ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かもしれません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/The_Code_Project&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コードプロジェクト&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c2449da250eca0e7734b41e6b059e648c1d568aa" translate="yes" xml:space="preserve">
          <source>You would call it like this:</source>
          <target state="translated">こんな風に呼ぶんですね。</target>
        </trans-unit>
        <trans-unit id="8f6e1e08988118d2c705bf41bf9c85698b279b6f" translate="yes" xml:space="preserve">
          <source>and the usage:</source>
          <target state="translated">と使用方法を説明しています。</target>
        </trans-unit>
        <trans-unit id="4c8ac45ed0a7a33191cada106a8026ce63676924" translate="yes" xml:space="preserve">
          <source>building on @NothingsImpossible solution, or, rather, comment on the most voted answer (just below the accepted one), i found the following &lt;strong&gt;quick-and-dirty&lt;/strong&gt; solution fulfill my own needs - it has a benefit of being solely within SQL domain.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@NothingsImpossibleソリューションに基づいて構築するか、最も投票された回答（承認された回答のすぐ下）にコメントする場合、次の&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;迅速で汚い&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ソリューションが自分のニーズを満たしていることが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;わかりました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。SQLドメイン内にのみ存在するという利点があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a47bc9ccd1fcb4960be12d43b2dd3ff152c1784" translate="yes" xml:space="preserve">
          <source>cleanup</source>
          <target state="translated">cleanup</target>
        </trans-unit>
        <trans-unit id="71ca199b1263a3f7a4d70907b287b0ba573ac943" translate="yes" xml:space="preserve">
          <source>given a string &quot;first;second;third;fourth;fifth&quot;, say, I want to get the third token. this works only if we know how many tokens the string is going to have - in this case it's 5. so my way of action is to chop the last two tokens away (inner query), and then to chop the first two tokens away (outer query)</source>
          <target state="translated">文字列 &quot;first;second;third;fourth;fifth&quot; が与えられたとき、3番目のトークンを取得したいとします。これは、文字列が何個のトークンを持つかがわかっている場合にのみ機能します-この場合は5です。</target>
        </trans-unit>
        <trans-unit id="5dfcf638987079521643daa37153fab5b5bc3043" translate="yes" xml:space="preserve">
          <source>i know that this is ugly and covers the specific conditions i was in, but am posting it just in case somebody finds it useful. cheers</source>
          <target state="translated">私はこれが醜く、私がいた特定の条件をカバーしていることを知っていますが、誰かがそれを役に立つと思う場合に備えて、それを投稿しています。</target>
        </trans-unit>
        <trans-unit id="2cde93382bdc1145c67533058109ec0660435455" translate="yes" xml:space="preserve">
          <source>note &lt;strong&gt;FIELD&lt;/strong&gt;, &lt;strong&gt;INDEX&lt;/strong&gt; and &lt;strong&gt;TYPE&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;FIELD&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;INDEX&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、および&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TYPEに&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3aafd0c7ec29272c0315cdf4d710908324e186e9" translate="yes" xml:space="preserve">
          <source>ran in 8:30</source>
          <target state="translated">八時三十分</target>
        </trans-unit>
        <trans-unit id="ced78e476f2ee875c424188700e2167f9a32fbec" translate="yes" xml:space="preserve">
          <source>ran in 9:20</source>
          <target state="translated">九時二十分二十分</target>
        </trans-unit>
        <trans-unit id="21307220a8f67dca17ab7ae28c4a284dd2677037" translate="yes" xml:space="preserve">
          <source>select * from fromSplitStringSep('Word1 wordr2 word3',' ')</source>
          <target state="translated">select*fromSplitStringSep('Word1 wordr2 word3',' ')</target>
        </trans-unit>
        <trans-unit id="a031f41f64f10d505c7afa6206db7e5faaf3512b" translate="yes" xml:space="preserve">
          <source>splitting and casting all parts.</source>
          <target state="translated">すべての部品を分割し、鋳造します。</target>
        </trans-unit>
        <trans-unit id="822e72a2ddf0b2176c72181d1b0ac1540b2d16b1" translate="yes" xml:space="preserve">
          <source>the only attention you should is dot '.' that end of the @x is always should be there.</source>
          <target state="translated">唯一の注意点は、ドット '.' であり、@x の終わりは常にそこにあるべきです。</target>
        </trans-unit>
        <trans-unit id="0e899e70b75b90b65729658ed54cd0ca39432992" translate="yes" xml:space="preserve">
          <source>which returns:</source>
          <target state="translated">を返します。</target>
        </trans-unit>
        <trans-unit id="8d2b877907248133a5e414f14c20615ce31063b4" translate="yes" xml:space="preserve">
          <source>while similar to the xml based answer by josejuan, i found that processing the xml path only once, then pivoting was moderately more efficient:</source>
          <target state="translated">josejuan氏のxmlベースの回答と似ていますが、私はxmlパスを一度だけ処理してからピボットする方が適度に効率的であることを発見しました。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
