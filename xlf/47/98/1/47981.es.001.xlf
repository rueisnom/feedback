<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/47981">
    <body>
      <group id="47981">
        <trans-unit id="667b1c8089bc12eca14d4d550e23e87738e4ee0c" translate="yes" xml:space="preserve">
          <source>----[ TEST.C ]----------------------------------------------------------------</source>
          <target state="translated">----[PRUEBA.C ]--------------------------------------------------------------------------------</target>
        </trans-unit>
        <trans-unit id="82622d08753d1de6f9f3382a0f1ea825f47b86c1" translate="yes" xml:space="preserve">
          <source>----[ TEST.OUT (disassembled) ]-----------------------------------------------</source>
          <target state="translated">----[TEST.OUT (desmontado)]---------------------------------------------------------------</target>
        </trans-unit>
        <trans-unit id="28179a8129ad47c185aeefd2ab324dfd531a98ed" translate="yes" xml:space="preserve">
          <source>----[ finis ]-----------------------------------------------------------------</source>
          <target state="translated">----[finistarget>
        </trans-unit>
        <trans-unit id="6d19acaa2879cd1a9c40d2ce2d4d557352b4f059" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(number &amp;amp; ~(1UL &amp;lt;&amp;lt; n))&lt;/code&gt; will clear the &lt;code&gt;n&lt;/code&gt;th bit and &lt;code&gt;(x &amp;lt;&amp;lt; n)&lt;/code&gt; will set the &lt;code&gt;n&lt;/code&gt;th bit to &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(number &amp;amp; ~(1UL &amp;lt;&amp;lt; n))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se borrar&amp;aacute; el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;eacute;simo bit y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(x &amp;lt;&amp;lt; n)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; establecer&amp;aacute; el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;eacute;simo bit de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="88bab2da74a1a1522a542d4c0d7cf84f716233af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n = 4&lt;/code&gt; 0 based bit position to perform bitwise operations.</source>
          <target state="translated">&lt;code&gt;n = 4&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 0 posici&amp;oacute;n de bit basada para realizar operaciones bit a bit.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f9771c7e84c816a1c96a6550df0b6ef37bdaed6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;num = 55&lt;/code&gt; Integer to perform bitwise operations (set, get, clear, toggle).</source>
          <target state="translated">&lt;code&gt;num = 55&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Entero para realizar operaciones bit a bit (set, get, clear, toggle).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="848e31d285f7c9e89da0e7c2d41f36526f8b7106" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; may be too great for the shift &lt;code&gt;1 &amp;lt;&amp;lt; x&lt;/code&gt; leading to &lt;em&gt;undefined behavior&lt;/em&gt; (UB).  Even if &lt;code&gt;x&lt;/code&gt; is not too great, &lt;code&gt;~&lt;/code&gt; may not flip enough most-significant-bits.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; puede ser demasiado grande para el cambio &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1 &amp;lt;&amp;lt; x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; conduce a &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;un comportamiento indefinido&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (UB). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Incluso si &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no es demasiado grande, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;~&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; puede no voltear suficientes bits m&amp;aacute;s significativos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="382fd1a3e6786b545b23d712868c309637e86796" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;|&lt;/code&gt; operator: set the bit</source>
          <target state="translated">&lt;code&gt;|&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador: establece el bit&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0359414adb9597ed96d4e6d0bc16391e5df70a66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;1&lt;/code&gt; is not always wide enough&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no siempre es lo suficientemente ancho&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7c79a8c50f27d048849355f137c942afdd1661f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Clear a bit:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Claro un poco:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c543101c73c1a296c14039d59bf0a9635793189f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How it works?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;C&amp;oacute;mo funciona?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="61554349ab10dd3c0bd562fee6415e569b069485" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Let suppose few things first&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Supongamos primero algunas cosas&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7317348d5454e5ccfda6a26b4cd2b3fa9166fc7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notes:&lt;/strong&gt;
This is designed to be fast (given its flexibility) and non-branchy.  It results in efficient SPARC machine code when compiled Sun Studio 8; I've also tested it using MSVC++ 2008 on amd64.  It's possible to make similar macros for setting and clearing bits.  The key difference of this solution compared with many others here is that it works for any location in pretty much any type of variable.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Notas:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Esto est&amp;aacute; dise&amp;ntilde;ado para ser r&amp;aacute;pido (dada su flexibilidad) y no ramificado. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Da como resultado un c&amp;oacute;digo de m&amp;aacute;quina SPARC eficiente cuando se compila Sun Studio 8; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n lo prob&amp;eacute; usando MSVC ++ 2008 en amd64. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es posible hacer macros similares para configurar y borrar bits. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La diferencia clave de esta soluci&amp;oacute;n en comparaci&amp;oacute;n con muchas otras aqu&amp;iacute; es que funciona para cualquier ubicaci&amp;oacute;n en pr&amp;aacute;cticamente cualquier tipo de variable.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1cb021c737f247e65e724f7eb367810088853454" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sample usage:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Uso de la muestra:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="85768827ef5f80c7e352f5fa2d539548b98c629d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Set a bit:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Establecer un poco:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="42da513f420af644829d9bb366f65fa08d4eb836" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To insure 1 is wide enough:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para asegurar 1 es lo suficientemente ancho:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6f9e296a49ce2bc809c273d109dc52cec704e934" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Toggle a bit:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Alternar un poco:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="76484daaa9503e8ade8d19978cb56f30df1b0e1f" translate="yes" xml:space="preserve">
          <source>A C++11 templated version (put in a header):</source>
          <target state="translated">Una versión templada de C++11 (puesta en un encabezado):</target>
        </trans-unit>
        <trans-unit id="dd0efbc1af335ddf7596de68563a756f24d2af13" translate="yes" xml:space="preserve">
          <source>As this is tagged &quot;embedded&quot; I'll assume you're using a microcontroller. All of the above suggestions are valid &amp;amp; work (read-modify-write, unions, structs, etc.).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como esto est&amp;aacute; etiquetado como &quot;incrustado&quot;, supondr&amp;eacute; que est&amp;aacute; utilizando un microcontrolador. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Todas las sugerencias anteriores son v&amp;aacute;lidas y funcionan (lectura-modificaci&amp;oacute;n-escritura, uniones, estructuras, etc.).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ca3f48378eac716e70a5d35da0190c3f867ecea1" translate="yes" xml:space="preserve">
          <source>As with most bit manipulations, best to work with &lt;em&gt;unsigned&lt;/em&gt; types rather than &lt;em&gt;signed&lt;/em&gt; ones</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Al igual que con la mayor&amp;iacute;a de las manipulaciones de bits, mejor trabajar con &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;sin signo&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tipos en lugar de &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;firmados&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; los&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c15f6ad62fcb1c5adbc33a14883c9aec53fb6629" translate="yes" xml:space="preserve">
          <source>Bit &lt;code&gt;n&lt;/code&gt; will be set if &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;, and cleared if &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;.  If &lt;code&gt;x&lt;/code&gt; has some other value, you get garbage.  &lt;code&gt;x = !!x&lt;/code&gt; will booleanize it to 0 or 1.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El bit &lt;/font&gt;&lt;/font&gt; &lt;code&gt;n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se establecer&amp;aacute; si &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y se borrar&amp;aacute; si &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene alg&amp;uacute;n otro valor, obtienes basura. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x = !!x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; lo booleanizar&amp;aacute; a 0 o 1.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0dc3a25a7b2a779b187625efeb875cf8c20f29d" translate="yes" xml:space="preserve">
          <source>Changing the &lt;em&gt;n&lt;/em&gt;th bit to &lt;em&gt;x&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cambiar el &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;n&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;eacute;simo bit a &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;x&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1270985c4d41de2a73fbc1aacfe693c2c765689c" translate="yes" xml:space="preserve">
          <source>Check a bit at an arbitrary location in a variable of arbitrary type:</source>
          <target state="translated">Revisa un poco en una ubicación arbitraria en una variable de tipo arbitrario:</target>
        </trans-unit>
        <trans-unit id="0046e71f379a6dd39fb25966cd1653a420ea2c0c" translate="yes" xml:space="preserve">
          <source>Checking a bit</source>
          <target state="translated">Comprobando un poco</target>
        </trans-unit>
        <trans-unit id="57acd198ff9087d7520a01146414b47b3a14b3f1" translate="yes" xml:space="preserve">
          <source>Checking a bit:</source>
          <target state="translated">Comprobando un poco:</target>
        </trans-unit>
        <trans-unit id="4a6dd3b47c599cf59a114edea596417b09ee3985" translate="yes" xml:space="preserve">
          <source>Clearing a bit</source>
          <target state="translated">Despejando un poco</target>
        </trans-unit>
        <trans-unit id="6a8683eeffabe79feb1a889dc0f34644ae375aa3" translate="yes" xml:space="preserve">
          <source>Code could use &lt;code&gt;1ull&lt;/code&gt; or pedantically &lt;code&gt;(uintmax_t)1&lt;/code&gt; and let the compiler optimize.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El c&amp;oacute;digo podr&amp;iacute;a usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1ull&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o pedante &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(uintmax_t)1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y permitir que el compilador se optimice.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="a63c8c2a3c3b016fccf07ab1ac2d82cb938be8f1" translate="yes" xml:space="preserve">
          <source>Expanding on the &lt;code&gt;bitset&lt;/code&gt; answer:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ampliando la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;respuesta &lt;/font&gt;&lt;/font&gt; &lt;code&gt;bitset&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39eb92508ee5df2b84015b6338bf22397753fcda" translate="yes" xml:space="preserve">
          <source>Finally, perform bitwise AND &lt;code&gt;&amp;amp;&lt;/code&gt; operation with the above result and &lt;code&gt;num&lt;/code&gt;. The above three steps together can be written as &lt;code&gt;num &amp;amp; (~ (1 &amp;lt;&amp;lt; n))&lt;/code&gt;;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Finalmente, realice la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operaci&amp;oacute;n &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AND &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;amp;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; bit a bit &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;con el resultado anterior y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;num&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los tres pasos anteriores juntos se pueden escribir como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;num &amp;amp; (~ (1 &amp;lt;&amp;lt; n))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="acb53377ab75dda9fb22160fbaab3a8c655b90ac" translate="yes" xml:space="preserve">
          <source>For the beginner I would like to explain a bit more with an example:</source>
          <target state="translated">Para el principiante me gustaría explicar un poco más con un ejemplo:</target>
        </trans-unit>
        <trans-unit id="5901a13434d6c93a77c96dc821923c76bcdb001e" translate="yes" xml:space="preserve">
          <source>For those unfamiliar: In my example, the micro has a general pin-state register PORTn which reflects the output pins, so doing PORTn |= BIT_TO_SET results in a read-modify-write to that register. However, the PORTnSET / PORTnCLEAR registers take a '1' to mean &quot;please make this bit 1&quot; (SET) or &quot;please make this bit zero&quot; (CLEAR) and a '0' to mean &quot;leave the pin alone&quot;. so, you end up with two port addresses depending whether you're setting or clearing the bit (not always convenient) but a &lt;em&gt;much&lt;/em&gt; faster reaction and smaller assembled code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para aquellos que no est&amp;aacute;n familiarizados: en mi ejemplo, el micro tiene un registro general de estado de pin PORTn que refleja los pines de salida, por lo que hacer PORTn | = BIT_TO_SET da como resultado una lectura-modificaci&amp;oacute;n-escritura en ese registro. Sin embargo, los registros PORTnSET / PORTnCLEAR toman un '1' para significar &quot;por favor haga este bit 1&quot; (SET) o &quot;por favor haga que este bit sea cero&quot; (CLEAR) y un '0' para significar &quot;deje el pin en paz&quot;. entonces, terminas con dos direcciones de puerto dependiendo de si est&amp;aacute;s configurando o borrando el bit (no siempre es conveniente) pero una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;reacci&amp;oacute;n &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mucho&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; m&amp;aacute;s r&amp;aacute;pida y un c&amp;oacute;digo ensamblado m&amp;aacute;s peque&amp;ntilde;o.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6bf3ec6d6ad3785ab0fb41e4f4217bd944ff4d87" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;http://snippets.org/code/temp/snip-c.zip&quot;&gt;snip-c.zip&lt;/a&gt;'s bitops.h:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De los &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://snippets.org/code/temp/snip-c.zip&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bitops.h&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de snip-c.zip:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2acb84d0306fd7eb7601bbea16014daa02abef8a" translate="yes" xml:space="preserve">
          <source>Here are some macros I use:</source>
          <target state="translated">Aquí hay algunas macros que uso:</target>
        </trans-unit>
        <trans-unit id="4b9390e3e32e0b8afea1e32f1f1feefc845945fe" translate="yes" xml:space="preserve">
          <source>Here's my favorite bit arithmetic macro, which works for any type of unsigned integer array from &lt;code&gt;unsigned char&lt;/code&gt; up to &lt;code&gt;size_t&lt;/code&gt; (which is the biggest type that should be efficient to work with):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; est&amp;aacute; mi macro aritm&amp;eacute;tica de bits favorita, que funciona para cualquier tipo de matriz entera sin signo, desde &lt;/font&gt;&lt;/font&gt; &lt;code&gt;unsigned char&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; hasta &lt;/font&gt;&lt;/font&gt; &lt;code&gt;size_t&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (que es el tipo m&amp;aacute;s grande con el que deber&amp;iacute;a ser eficiente trabajar):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dab754019cefc4bba49daa09c429495b77c8d0c3" translate="yes" xml:space="preserve">
          <source>How do you set, clear, and toggle a bit?</source>
          <target state="translated">¿Cómo se establece,despeja y cambia un poco?</target>
        </trans-unit>
        <trans-unit id="f9c977f6f7383a9196447d907de3d0bb28b2af49" translate="yes" xml:space="preserve">
          <source>How do you set, clear, and toggle a single bit</source>
          <target state="translated">¿Cómo se establece,despeja y conmuta un solo bit</target>
        </trans-unit>
        <trans-unit id="a5ce3b216f3bac3897b9e763d3183b410d7f332d" translate="yes" xml:space="preserve">
          <source>How do you set, clear, and toggle a single bit?</source>
          <target state="translated">¿Cómo se establece,despeja y conmuta un solo trozo?</target>
        </trans-unit>
        <trans-unit id="99810e7c0f49901c9c73d5857a396a39cb6a6d07" translate="yes" xml:space="preserve">
          <source>How to clear a bit?</source>
          <target state="translated">¿Cómo despejar un poco?</target>
        </trans-unit>
        <trans-unit id="0ef616e8fabd6b1f05a5d3ef01a0cf8320d9920c" translate="yes" xml:space="preserve">
          <source>How to get a bit?</source>
          <target state="translated">¿Cómo conseguir un poco?</target>
        </trans-unit>
        <trans-unit id="676f6ee71c4069850ae2a5fa4f9c733b92d7f213" translate="yes" xml:space="preserve">
          <source>How to set a bit?</source>
          <target state="translated">¿Cómo poner un poco?</target>
        </trans-unit>
        <trans-unit id="7978c9b6c8953d08339eb06c78aa2fb897e8e58b" translate="yes" xml:space="preserve">
          <source>How to toggle a bit?</source>
          <target state="translated">¿Cómo se puede cambiar un poco?</target>
        </trans-unit>
        <trans-unit id="a2fa6ff8c5a509f7affb45b5f46e1b50f9d21608" translate="yes" xml:space="preserve">
          <source>However, during a bout of oscilloscope-based debugging I was amazed to find that these methods have a considerable overhead in CPU cycles compared to writing a value directly to the micro's PORTnSET / PORTnCLEAR registers which makes a real difference where there are tight loops / high-frequency ISR's toggling pins.</source>
          <target state="translated">Sin embargo,durante un ataque de depuración basada en el osciloscopio me sorprendió encontrar que estos métodos tienen una sobrecarga considerable en los ciclos de la CPU en comparación con la escritura de un valor directamente en los registros PORTnSET PORTnCLEAR del micro,lo que marca una verdadera diferencia cuando hay bucles estrechos en los pines de conmutación de la ISR de alta frecuencia.</target>
        </trans-unit>
        <trans-unit id="f9ff9f9c33b6614a39d7e8d0f6b8c3c83b05a88f" translate="yes" xml:space="preserve">
          <source>I once used this approach to find duplicate loan records, where loan_number was the ISAM key, using the 6-digit loan number as an index into the bit array. Savagely fast, and after 8 months, proved that the mainframe system we were getting the data from was in fact malfunctioning. The simplicity of bit arrays makes confidence in their correctness very high - vs a searching approach for example.</source>
          <target state="translated">Una vez usé este enfoque para encontrar registros de préstamo duplicados,donde loan_number era la clave ISAM,usando el número de préstamo de 6 dígitos como índice en la matriz de bits.Salvajemente rápido,y después de 8 meses,demostró que el sistema de la computadora central de la que obteníamos los datos estaba de hecho funcionando mal.La simplicidad de las matrices de bits hace que la confianza en su corrección sea muy alta,frente a un enfoque de búsqueda,por ejemplo.</target>
        </trans-unit>
        <trans-unit id="abb2634e4ade2a28866d25c8f2bdb63000cd6ff8" translate="yes" xml:space="preserve">
          <source>I use macros defined in a header file to handle bit set and clear:</source>
          <target state="translated">Utilizo macros definidas en un archivo de cabecera para manejar bit set y clear:</target>
        </trans-unit>
        <trans-unit id="7c4ffb4ea2a2439cee5a2c80ae16bef112cee616" translate="yes" xml:space="preserve">
          <source>I used &lt;code&gt;XXXb&lt;/code&gt; for clarity.  You'll probably be working with HEX representation, depending on the data structure in which you're packing bits.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sol&amp;iacute;a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;XXXb&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para mayor claridad. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Probablemente trabajar&amp;aacute; con representaci&amp;oacute;n HEX, dependiendo de la estructura de datos en la que est&amp;aacute; empacando bits.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="53333655be5b4db7377f60710f9b0ca634975fe0" translate="yes" xml:space="preserve">
          <source>If posn==8, it will evaluate to:</source>
          <target state="translated">Si posn==8,evaluará a:</target>
        </trans-unit>
        <trans-unit id="ab57d68adecc6b6e118572053a3f69dd754eef04" translate="yes" xml:space="preserve">
          <source>If the bit to toggle is 0 then, &lt;code&gt;0 ^ 1 =&amp;gt; 1&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si el bit para alternar es 0, entonces &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0 ^ 1 =&amp;gt; 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="709903b975187f0c348b45214e90d052b9e93fa0" translate="yes" xml:space="preserve">
          <source>If the bit to toggle is 1 then, &lt;code&gt;1 ^ 1 =&amp;gt; 0&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si el bit para alternar es 1, entonces &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1 ^ 1 =&amp;gt; 0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b5b6e652bc09f0ac15f015a6d4bb22acd19945ba" translate="yes" xml:space="preserve">
          <source>If you want to perform this all operation with C programming in the &lt;strong&gt;Linux kernel&lt;/strong&gt; then I suggest to use standard APIs of the Linux kernel.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si desea realizar todas estas operaciones con la programaci&amp;oacute;n C en el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;kernel de Linux&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , le sugiero que use API est&amp;aacute;ndar del kernel de Linux.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="61899a46cc7eb4e290f78ad5e2725eed57bd4439" translate="yes" xml:space="preserve">
          <source>If you're doing a lot of bit twiddling you might want to use masks which will make the whole thing quicker. The following functions are very fast and are still flexible (they allow bit twiddling in bit maps of any size).</source>
          <target state="translated">Si estás haciendo muchas tonterías,tal vez quieras usar máscaras para que todo sea más rápido.Las siguientes funciones son muy rápidas y siguen siendo flexibles (permiten el &quot;bit twiddling&quot; en mapas de bits de cualquier tamaño).</target>
        </trans-unit>
        <trans-unit id="e075322fcf0586e896160b581843d5cafec9bee4" translate="yes" xml:space="preserve">
          <source>In other words, it simply creates a field of 0's with a 1 at the specified
position. The only tricky part is in the BitClr() macro where we need to set
a single 0 bit in a field of 1's. This is accomplished by using the 1's
complement of the same expression as denoted by the tilde (~) operator.</source>
          <target state="translated">En otras palabras,simplemente crea un campo de 0 con un 1 en la posición especificada.La única parte difícil es en la macro BitClr()donde necesitamos poner un solo 0 bit en un campo de 1's.Esto se logra usando el complemento de 1's de la misma expresión que denota el operador tilde (~).</target>
        </trans-unit>
        <trans-unit id="5aa47be261e161951f1f0bafd740a16b32aa8b1c" translate="yes" xml:space="preserve">
          <source>It is sometimes worth using an &lt;code&gt;enum&lt;/code&gt; to &lt;em&gt;name&lt;/em&gt; the bits:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A veces vale la pena usar una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;enum&lt;/code&gt; eraci&amp;oacute;n&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nombrar&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; los bits:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0b473b87effc8c47c29548c29028f4de82eafa38" translate="yes" xml:space="preserve">
          <source>It's also generally a good idea to not to copy/paste code in general and so many people use preprocessor macros (like &lt;a href=&quot;https://stackoverflow.com/a/263738/52074&quot;&gt;the community wiki answer further down&lt;/a&gt;) or some sort of encapsulation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n es generalmente una buena idea no copiar / pegar c&amp;oacute;digo en general, y muchas personas usan macros de preprocesador (como &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/263738/52074&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la respuesta de la wiki de la comunidad m&amp;aacute;s abajo&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) o alg&amp;uacute;n tipo de encapsulaci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed20494581b901298a0d7477a63131dc2432faf0" translate="yes" xml:space="preserve">
          <source>It's generally a good idea to use unsigned types for portable bit manipulation.</source>
          <target state="translated">Por lo general,es una buena idea usar tipos no firmados para la manipulación de bits portátiles.</target>
        </trans-unit>
        <trans-unit id="f25048a05cb0bb71ed1211931fa89d7ef6b05ffc" translate="yes" xml:space="preserve">
          <source>It's up to you to ensure that the bit number is within the range of the bit map that you pass. Note that for little endian processors that bytes, words, dwords, qwords, etc., map correctly to each other in memory (main reason that little endian processors are 'better' than big-endian processors, ah, I feel a flame war coming on...).</source>
          <target state="translated">Depende de ti asegurarte de que el número de bits esté dentro del rango del mapa de bits que pases.Note que para los pequeños procesadores de endian que los bytes,palabras,dwords,qwords,etc.,se mapean correctamente entre sí en la memoria (razón principal por la que los pequeños procesadores de endian son 'mejores' que los procesadores big-endian,ah,siento que se avecina una guerra de llamas...).</target>
        </trans-unit>
        <trans-unit id="9127fb2258eb06efbfee1748ca9d04c76290852f" translate="yes" xml:space="preserve">
          <source>Left shift 1, &lt;code&gt;n&lt;/code&gt; times i.e. &lt;code&gt;1 &amp;lt;&amp;lt; n&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Desplazamiento a la izquierda 1, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; veces, es decir, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1 &amp;lt;&amp;lt; n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="73ef110f80c735334a2164f4ced66ec711a00839" translate="yes" xml:space="preserve">
          <source>More general, for arbitrary sized bitmaps:</source>
          <target state="translated">Más general,para mapas de bits de tamaño arbitrario:</target>
        </trans-unit>
        <trans-unit id="c85d279b39b892fb0988e34530a22460f26dde21" translate="yes" xml:space="preserve">
          <source>Note there is nothing &quot;special&quot; about this code. It treats a bit like an integer - which technically, it is. A 1 bit integer that can hold 2 values, and 2 values only.</source>
          <target state="translated">Tengan en cuenta que no hay nada &quot;especial&quot; en este código.Se trata de un poco como un número entero-que técnicamente,lo es.Un entero de 1 bit que puede contener 2 valores,y 2 valores solamente.</target>
        </trans-unit>
        <trans-unit id="43c1f0ee9dffa874878e37109448c03df6055fa1" translate="yes" xml:space="preserve">
          <source>Note, to set bit 'n' in a 16 bit integer you do the following:</source>
          <target state="translated">Nota,para establecer el bit 'n' en un entero de 16 bits se hace lo siguiente:</target>
        </trans-unit>
        <trans-unit id="c222bbbaefaedb63d5ffc3a5327c69e30a7a8475" translate="yes" xml:space="preserve">
          <source>Note: Here the whole operation happens in a single step. So these all are  guaranteed to be &lt;strong&gt;atomic&lt;/strong&gt; even on SMP computers and are useful
to keep coherence across processors.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nota: Aqu&amp;iacute; toda la operaci&amp;oacute;n ocurre en un solo paso. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, se garantiza que todos estos elementos ser&amp;aacute;n &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;at&amp;oacute;micos&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; incluso en computadoras SMP y son &amp;uacute;tiles para mantener la coherencia entre los procesadores.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5e87a0baab99790ee774b3f16e2f02538b65f612" translate="yes" xml:space="preserve">
          <source>OK, let's analyze things...</source>
          <target state="translated">Bien,analicemos las cosas...</target>
        </trans-unit>
        <trans-unit id="c9dff73a77556f8f89fef17ebdd7a3587ab11da9" translate="yes" xml:space="preserve">
          <source>Once the mask is created it's applied to the argument just as you suggest,
by use of the bitwise and (&amp;amp;), or (|), and xor (^) operators. Since the mask
is of type long, the macros will work just as well on char's, short's, int's,
or long's.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una vez que se crea la m&amp;aacute;scara, se aplica al argumento tal como lo sugiere, mediante el uso de los operadores bit a bit y (&amp;amp;), o (|) y xor (^). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como la m&amp;aacute;scara es de tipo long, las macros funcionar&amp;aacute;n igual de bien en char's, short's, int's o long's.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e72184f55cc026514b7160d78c3c5aef63c2a050" translate="yes" xml:space="preserve">
          <source>Or</source>
          <target state="translated">Or</target>
        </trans-unit>
        <trans-unit id="a72e2de1fad09c6b77cac7a842b1146a5d7550b7" translate="yes" xml:space="preserve">
          <source>Or cast - which makes for coding/review/maintenance issues keeping the cast correct and up-to-date.</source>
          <target state="translated">O el elenco,lo que hace que la revisión de los códigos sea un problema de mantenimiento,manteniendo el elenco correcto y actualizado.</target>
        </trans-unit>
        <trans-unit id="f4d6bde5a9d5b3d020e725f997fcf3b65b6d6418" translate="yes" xml:space="preserve">
          <source>Or gently promote the &lt;code&gt;1&lt;/code&gt; by forcing a math operation that is as least as wide as the type of &lt;code&gt;number&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;O promueva suavemente el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; forzando una operaci&amp;oacute;n matem&amp;aacute;tica que sea tan ancha como el tipo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;number&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="125721cc78969f3a2d79b9b18521bcc882ed9fac" translate="yes" xml:space="preserve">
          <source>Or the &lt;a href=&quot;http://en.wikipedia.org/wiki/Boost_%28C%2B%2B_libraries%29&quot;&gt;Boost&lt;/a&gt; version: &lt;a href=&quot;http://www.boost.org/doc/libs/release/libs/dynamic_bitset/dynamic_bitset.html&quot;&gt;&lt;code&gt;boost::dynamic_bitset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;O la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;versi&amp;oacute;n &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Boost_%28C%2B%2B_libraries%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Boost&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.boost.org/doc/libs/release/libs/dynamic_bitset/dynamic_bitset.html&quot;&gt; &lt;code&gt;boost::dynamic_bitset&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f2e9f4a4d6cdb522a496493f27b424fb5d782fa3" translate="yes" xml:space="preserve">
          <source>Other than that I endorse Jeremy's solution.</source>
          <target state="translated">Aparte de eso,apoyo la solución de Jeremy.</target>
        </trans-unit>
        <trans-unit id="bc375646114e7205fd7164e5b46611889f795982" translate="yes" xml:space="preserve">
          <source>Perform bitwise complement with the above result. So that the nth bit becomes unset and rest of bit becomes set i.e. &lt;code&gt;~ (1 &amp;lt;&amp;lt; n)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Realice un complemento bit a bit con el resultado anterior. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De modo que el en&amp;eacute;simo bit se desarma y el resto del bit se pone, es decir, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;~ (1 &amp;lt;&amp;lt; n)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="53ecbc4d6e26d20b1988671948ec51f0ce92790a" translate="yes" xml:space="preserve">
          <source>Recommended reading - &lt;a href=&quot;https://codeforwin.org/2016/01/bitwise-operator-programming-exercises-and-solutions-in-c.html&quot;&gt;Bitwise operator exercises&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lectura recomendada: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://codeforwin.org/2016/01/bitwise-operator-programming-exercises-and-solutions-in-c.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ejercicios de operador bit a bit&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9994ff248f68711d40d581bcf6caee98f87d856" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.kernel.org/doc/htmldocs/kernel-api/ch02s03.html&quot;&gt;https://www.kernel.org/doc/htmldocs/kernel-api/ch02s03.html&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ver &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.kernel.org/doc/htmldocs/kernel-api/ch02s03.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://www.kernel.org/doc/htmldocs/kernel-api/ch02s03.html&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61fa48f5afd4c97e0a87d8996b205d9f8d767a5a" translate="yes" xml:space="preserve">
          <source>Setting a bit</source>
          <target state="translated">Poniendo un poco</target>
        </trans-unit>
        <trans-unit id="4dd48a6020a0c4db5765caa2eb0ab4c448f79743" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;n&lt;/code&gt;th bit to either &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt; can be achieved with the following on a 2's complement C++ implementation:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ajuste del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;eacute;simo bit ya sea &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que puede lograrse con la siguiente en una de complemento a 2 implementaci&amp;oacute;n en C ++:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f820945537e9519e37cab115773e594cbfde9df" translate="yes" xml:space="preserve">
          <source>So, to your question, &lt;code&gt;IsGph[i] =1&lt;/code&gt;, or &lt;code&gt;IsGph[i] =0&lt;/code&gt; make setting and clearing bools easy.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, a su pregunta, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;IsGph[i] =1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;IsGph[i] =0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; facilitan la configuraci&amp;oacute;n y el borrado de bools.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0d66a3a0b4acef20f48d55cb3db57fc9e015602" translate="yes" xml:space="preserve">
          <source>That will clear the &lt;code&gt;n&lt;/code&gt;th bit of &lt;code&gt;number&lt;/code&gt;. You must invert the bit string with the bitwise NOT operator (&lt;code&gt;~&lt;/code&gt;), then AND it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Eso va a borrar el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;eacute;simo bit del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;number&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Debe invertir la cadena de bits con el operador NOT bit a bit ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;~&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), luego Y.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b7f8ce9f568420f97192ac7365e1a1d1e57b8cb9" translate="yes" xml:space="preserve">
          <source>That will put the value of the &lt;code&gt;n&lt;/code&gt;th bit of &lt;code&gt;number&lt;/code&gt; into the variable &lt;code&gt;bit&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Eso pondr&amp;aacute; el valor del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;eacute;simo bit de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;number&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en la variable de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;bit&lt;/code&gt; s&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e2b5c6a2b73e16c3c1c0419d83c252dff2bf6b9" translate="yes" xml:space="preserve">
          <source>That will set the &lt;code&gt;n&lt;/code&gt;th bit of &lt;code&gt;number&lt;/code&gt;. &lt;code&gt;n&lt;/code&gt; should be zero, if you want to set the &lt;code&gt;1&lt;/code&gt;st bit and so on upto &lt;code&gt;n-1&lt;/code&gt;, if you want to set the &lt;code&gt;n&lt;/code&gt;th bit.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Que establecer&amp;aacute; el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;eacute;simo bit del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;number&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt; &lt;code&gt;n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; debe ser cero, si desea establecer el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;deg; bit y as&amp;iacute; sucesivamente hasta &lt;/font&gt;&lt;/font&gt; &lt;code&gt;n-1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , si desea establecer el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;deg; bit.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e3792762dc53c61df78323ce8b14abd5d5c2d7fd" translate="yes" xml:space="preserve">
          <source>That will toggle the &lt;code&gt;n&lt;/code&gt;th bit of &lt;code&gt;number&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Eso va a cambiar el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;eacute;simo bit del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;number&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a6d75b05680564f82160755d4f06a5406f4c8d1b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;amp;&lt;/code&gt; operator is used check the bit:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;utiliza el operador &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;amp;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; compruebe el bit:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4720899f11a5ca9616a00586a34c7d0e1d6719c8" translate="yes" xml:space="preserve">
          <source>The Boost version allows a runtime sized bitset compared with a &lt;a href=&quot;https://en.wikipedia.org/wiki/C%2B%2B_Standard_Library&quot;&gt;standard library&lt;/a&gt; compile-time sized bitset.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La versi&amp;oacute;n Boost permite un conjunto de bits de tama&amp;ntilde;o de tiempo de ejecuci&amp;oacute;n en comparaci&amp;oacute;n con un conjunto de &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bits de tama&amp;ntilde;o de compilaci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/C%2B%2B_Standard_Library&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;biblioteca est&amp;aacute;ndar&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="765d09f1c16860f29a69134a7f599e35e0b8267a" translate="yes" xml:space="preserve">
          <source>The XOR operator (&lt;code&gt;^&lt;/code&gt;) can be used to toggle a bit.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El operador XOR ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;^&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) se puede usar para alternar un poco.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4cf704c5ff515de591788d3a37ab972dbffe1384" translate="yes" xml:space="preserve">
          <source>The bitfield approach has other advantages in the embedded arena. You can define a struct that maps directly onto the bits in a particular hardware register.</source>
          <target state="translated">El enfoque de campo de bits tiene otras ventajas en el ámbito de la incrustación.Se puede definir una estructura que se mapea directamente sobre los bits en un registro de hardware particular.</target>
        </trans-unit>
        <trans-unit id="839a26b96b5f54ea008530fd6494a3e0722cd1da" translate="yes" xml:space="preserve">
          <source>The bottom line is that this is a general solution to an entire class of
problems. It is, of course, possible and even appropriate to rewrite the
equivalent of any of these macros with explicit mask values every time you
need one, but why do it? Remember, the macro substitution occurs in the
preprocessor and so the generated code will reflect the fact that the values
are considered constant by the compiler - i.e. it's just as efficient to use
the generalized macros as to &quot;reinvent the wheel&quot; every time you need to do
bit manipulation.</source>
          <target state="translated">El resultado final es que esta es una solución general para toda una clase de problemas.Por supuesto,es posible e incluso apropiado reescribir el equivalente de cualquiera de estas macros con valores de máscara explícitos cada vez que se necesite,pero ¿por qué hacerlo? Recuerde que la sustitución de la macro se produce en el preprocesador y,por lo tanto,el código generado reflejará el hecho de que los valores son considerados constantes por el compilador,es decir,es tan eficiente utilizar las macros generalizadas como &quot;reinventar la rueda&quot; cada vez que se necesite hacer una manipulación de bits.</target>
        </trans-unit>
        <trans-unit id="22807ae60fb3a3ea091315d57264831db77c47c8" translate="yes" xml:space="preserve">
          <source>The common expression that you seem to be having problems with in all of these is &quot;(1L &amp;lt;&amp;lt; (posn))&quot;. All this does is create a mask with a single bit on
and which will work with any integer type. The &quot;posn&quot; argument specifies the
position where you want the bit. If posn==0, then this expression will
evaluate to:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La expresi&amp;oacute;n com&amp;uacute;n con la que parece estar teniendo problemas en todos estos es &quot;(1L &amp;lt;&amp;lt; (posn))&quot;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Todo lo que hace es crear una m&amp;aacute;scara con un solo bit y que funcionar&amp;aacute; con cualquier tipo de entero. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El argumento &quot;posn&quot; especifica la posici&amp;oacute;n donde desea el bit. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si posn == 0, entonces esta expresi&amp;oacute;n se evaluar&amp;aacute; para:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2cf1df7ab406c6d7796051b70b9c6b54ded8be0f" translate="yes" xml:space="preserve">
          <source>The other option is to use bit fields:</source>
          <target state="translated">La otra opción es usar campos de bits:</target>
        </trans-unit>
        <trans-unit id="6d5a256e0a435b0dd162d8da2c0e4951fd0c09a6" translate="yes" xml:space="preserve">
          <source>Then use the &lt;em&gt;names&lt;/em&gt; later on. I.e. write</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Luego use los &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nombres&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; m&amp;aacute;s adelante. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es decir, escribir&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="96f43706cb75f2ae9bded1dfc259d0010e530cea" translate="yes" xml:space="preserve">
          <source>There is no need to roll your own:</source>
          <target state="translated">No hay necesidad de enrollar las suyas:</target>
        </trans-unit>
        <trans-unit id="4908454acc4ef10e75093e07cef612a928ed415e" translate="yes" xml:space="preserve">
          <source>This only works with fixed-size bit fields. Otherwise you have to resort to the bit-twiddling techniques described in previous posts.</source>
          <target state="translated">Esto sólo funciona con campos de bits de tamaño fijo.De lo contrario,hay que recurrir a las técnicas de bit-twiddling descritas en los artículos anteriores.</target>
        </trans-unit>
        <trans-unit id="49ebcc18810c044e945316762b2409ebabeec5a3" translate="yes" xml:space="preserve">
          <source>This program is to change any data bit from 0 to 1 or 1 to 0:</source>
          <target state="translated">Este programa es para cambiar cualquier bit de datos de 0 a 1 o de 1 a 0:</target>
        </trans-unit>
        <trans-unit id="94dea5b7b912974a57bf942f92f6fcbceb094ddb" translate="yes" xml:space="preserve">
          <source>To address a common coding pitfall when attempting to form the mask:</source>
          <target state="translated">Para abordar un error de codificación común cuando se intenta formar la máscara:</target>
        </trans-unit>
        <trans-unit id="8bd00cd24171b73299a75c544c100d7ee8e8f976" translate="yes" xml:space="preserve">
          <source>To check a bit, shift the number n to the right, then bitwise AND it:</source>
          <target state="translated">Para comprobar un poco,desplaza el número n a la derecha,y luego en el sentido de los bits y él:</target>
        </trans-unit>
        <trans-unit id="f55448bd37502c20589b8abddd4ff82c93fb71ca" translate="yes" xml:space="preserve">
          <source>To check last bit in &lt;code&gt;foo&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para comprobar el &amp;uacute;ltimo bit en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b54a27b34b231f7dfbe4ac8c31019c52ca6554d2" translate="yes" xml:space="preserve">
          <source>To clear a bit:</source>
          <target state="translated">Para despejar un poco:</target>
        </trans-unit>
        <trans-unit id="cd4df75a60322ba893bf854ca414bc756b509949" translate="yes" xml:space="preserve">
          <source>To clear last bit in &lt;code&gt;foo&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para borrar el &amp;uacute;ltimo bit en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="83aa0df6b04e727ccad6ed04ce3e94028c5b988b" translate="yes" xml:space="preserve">
          <source>To find unprintable characters:</source>
          <target state="translated">Para encontrar caracteres no imprimibles:</target>
        </trans-unit>
        <trans-unit id="43b735ba3d04a81e8870ac8a77c98b4f54990879" translate="yes" xml:space="preserve">
          <source>To get the &lt;code&gt;nth&lt;/code&gt; bit of num right shift &lt;code&gt;num&lt;/code&gt;, &lt;code&gt;n&lt;/code&gt; times. Then perform bitwise AND &lt;code&gt;&amp;amp;&lt;/code&gt; with 1.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para obtener el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;nth&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; bit de desplazamiento a la derecha &lt;/font&gt;&lt;/font&gt; &lt;code&gt;num&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; veces. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Luego realice bit a bit AND &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;amp;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; con 1.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8980b85f79053d6948fc7141289370782531a289" translate="yes" xml:space="preserve">
          <source>To make this independent of 2's complement negation behaviour (where &lt;code&gt;-1&lt;/code&gt; has all bits set, unlike on a 1's complement or sign/magnitude C++ implementation), use unsigned negation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para hacer esto independiente del comportamiento de negaci&amp;oacute;n del complemento de 2 (donde &lt;/font&gt;&lt;/font&gt; &lt;code&gt;-1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene todos los bits establecidos, a diferencia de un complemento de 1 o implementaci&amp;oacute;n de signo / magnitud C ++), use la negaci&amp;oacute;n sin signo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4eb50e3328856c70c1dca6c48069360040ef97f7" translate="yes" xml:space="preserve">
          <source>To set a bit, used &lt;code&gt;int x = x | 0x?;&lt;/code&gt; where &lt;code&gt;?&lt;/code&gt; is the bit position in binary form.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para establecer un bit, usamos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int x = x | 0x?;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;donde &lt;/font&gt;&lt;/font&gt; &lt;code&gt;?&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;es la posici&amp;oacute;n del bit en forma binaria.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b53c97c6ee9a3d0d723e702f07943f5c9216677" translate="yes" xml:space="preserve">
          <source>To set a bit:</source>
          <target state="translated">Para poner un poco:</target>
        </trans-unit>
        <trans-unit id="f9a2b2fb3a1c748d3527c65eef445ab67ab9dcde" translate="yes" xml:space="preserve">
          <source>To set a particular bit of number. Left shift 1 &lt;code&gt;n&lt;/code&gt; times. Then perform bitwise OR &lt;code&gt;|&lt;/code&gt; operation with &lt;code&gt;num&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para establecer un n&amp;uacute;mero particular de n&amp;uacute;mero. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Desplazamiento a la izquierda 1 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; veces. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Luego realice bitwise OR &lt;/font&gt;&lt;/font&gt; &lt;code&gt;|&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operaci&amp;oacute;n con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;num&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10ccea6e8ef43829ca947e5c40c7f06cea47b440" translate="yes" xml:space="preserve">
          <source>To set last bit in &lt;code&gt;000b&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para establecer el &amp;uacute;ltimo bit en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;000b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e76ce493d90541c9b6b2be6f9c5d3d116427a803" translate="yes" xml:space="preserve">
          <source>To set or clear a bit:</source>
          <target state="translated">Para fijar o despejar un poco:</target>
        </trans-unit>
        <trans-unit id="7abc415f2ccd44198e64e7a06b7544cdcf261192" translate="yes" xml:space="preserve">
          <source>To test a bit:</source>
          <target state="translated">Para probar un poco:</target>
        </trans-unit>
        <trans-unit id="ad468829fc4c0b8c79a1a6e04e882eb31a677d32" translate="yes" xml:space="preserve">
          <source>To toggle a bit we use bitwise XOR &lt;code&gt;^&lt;/code&gt; operator. Bitwise XOR operator evaluates to 1 if corresponding bit of both operands are different, otherwise evaluates to 0.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para alternar un poco utilizamos el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;XOR &lt;/font&gt;&lt;/font&gt; &lt;code&gt;^&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; bit a bit &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El operador XOR bit a bit eval&amp;uacute;a a 1 si el bit correspondiente de ambos operandos es diferente, de lo contrario se eval&amp;uacute;a a 0.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30f8e6fd1f568c58652958a8cbd971492dd62a90" translate="yes" xml:space="preserve">
          <source>To toggle a bit:</source>
          <target state="translated">Para cambiar un poco:</target>
        </trans-unit>
        <trans-unit id="0bd9784c0a74db4482ebf43f0a721806f5b58c6d" translate="yes" xml:space="preserve">
          <source>Toggle or Flip:</source>
          <target state="translated">Alternar o dar la vuelta:</target>
        </trans-unit>
        <trans-unit id="1b00b054a368563296b1a5a7e8e2be16e927b009" translate="yes" xml:space="preserve">
          <source>Toggling a bit</source>
          <target state="translated">Cambiando un poco...</target>
        </trans-unit>
        <trans-unit id="d8ff662b08e88c27fe251936b1a4dbf6ca9db7af" translate="yes" xml:space="preserve">
          <source>Try one of these functions in the C language to change n bit:</source>
          <target state="translated">Pruebe una de estas funciones en el lenguaje C para cambiar n bit:</target>
        </trans-unit>
        <trans-unit id="e33fd3e89b9ceffcb431cb638d3fe473f841d813" translate="yes" xml:space="preserve">
          <source>Unconvinced? Here's some test code - I used Watcom C with full optimization
and without using _cdecl so the resulting disassembly would be as clean as
possible:</source>
          <target state="translated">¿No estás convencido? Aquí hay un código de prueba-usé el Watcom C con optimización total y sin usar _cdecl para que el desmontaje resultante fuera lo más limpio posible:</target>
        </trans-unit>
        <trans-unit id="a133f4d724536d565a412a2bc18a60f9e028ff9a" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;1ULL&lt;/code&gt; if &lt;code&gt;number&lt;/code&gt; is wider than &lt;code&gt;unsigned long&lt;/code&gt;; promotion of &lt;code&gt;1UL &amp;lt;&amp;lt; n&lt;/code&gt; doesn't happen until after evaluating &lt;code&gt;1UL &amp;lt;&amp;lt; n&lt;/code&gt; where it's undefined behaviour to shift by more than the width of a &lt;code&gt;long&lt;/code&gt;.  The same applies to all the rest of the examples.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1ULL&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; si el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;number&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es m&amp;aacute;s ancho que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;unsigned long&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la promoci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1UL &amp;lt;&amp;lt; n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no ocurre hasta despu&amp;eacute;s de evaluar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1UL &amp;lt;&amp;lt; n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; donde es un comportamiento indefinido desplazarse en m&amp;aacute;s del ancho de un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;long&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo mismo se aplica a todos los dem&amp;aacute;s ejemplos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3116a9203958e2fb47b3c9b0568831002b7f60d6" translate="yes" xml:space="preserve">
          <source>Use one of the operators as defined &lt;a href=&quot;http://www.vantasyworld.com/articles/articles/36/article36_programming_bits.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Utilice uno de los operadores como se define &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.vantasyworld.com/articles/articles/36/article36_programming_bits.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aqu&amp;iacute;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ae11cffafff825583beb30d38a053dbcaf524806" translate="yes" xml:space="preserve">
          <source>Use the bitwise AND operator (&lt;code&gt;&amp;amp;&lt;/code&gt;) to clear a bit.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Use el operador AND a nivel de bit ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;amp;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) para borrar un bit.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cfc0e11cd54b9e7a382a506d5c87343ec19762ac" translate="yes" xml:space="preserve">
          <source>Use the bitwise OR operator (&lt;code&gt;|&lt;/code&gt;) to set a bit.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Utilice el operador OR a nivel de bit ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;|&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) para establecer un bit.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="384b3daf63a6e18211f6b86fb2b43ebe6b8a0dbe" translate="yes" xml:space="preserve">
          <source>Use the bitwise operators: &lt;code&gt;&amp;amp;&lt;/code&gt;&lt;code&gt;|&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Utilice los operadores bit a bit: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;amp;&lt;/code&gt; &lt;code&gt;|&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b543720e8daabc3733964f244cca2d14e58df202" translate="yes" xml:space="preserve">
          <source>Use this:</source>
          <target state="translated">Usa esto:</target>
        </trans-unit>
        <trans-unit id="d680b05bc76ec8664f8f3ce8a41aeb3420399d4c" translate="yes" xml:space="preserve">
          <source>Using the Standard C++ Library: &lt;a href=&quot;http://en.cppreference.com/w/cpp/utility/bitset&quot;&gt;&lt;code&gt;std::bitset&amp;lt;N&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Uso de la biblioteca est&amp;aacute;ndar de C ++: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.cppreference.com/w/cpp/utility/bitset&quot;&gt; &lt;code&gt;std::bitset&amp;lt;N&amp;gt;&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="51b111bd60430d71673d27f3e1f35f2a3ef469ef" translate="yes" xml:space="preserve">
          <source>Variable used</source>
          <target state="translated">Variable utilizada</target>
        </trans-unit>
        <trans-unit id="759b6502d2072d601e3238211fe3053e9b2558a8" translate="yes" xml:space="preserve">
          <source>Visual C 2010, and perhaps many other compilers, have direct support for boolean operations built in. A bit has two possible values, just like a boolean, so we can use booleans instead - even if they take up more space than a single bit in memory in this representation. This works, even the &lt;code&gt;sizeof()&lt;/code&gt; operator works properly.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Visual C 2010, y quiz&amp;aacute;s muchos otros compiladores, tienen soporte directo para operaciones booleanas incorporadas. Un bit tiene dos valores posibles, al igual que un booleano, por lo que podemos usar booleanos en su lugar, incluso si ocupan m&amp;aacute;s espacio que un solo bit en memoria en esta representaci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto funciona, incluso el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sizeof()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funciona correctamente.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f9cf49e77f03430ebd5f25bc522c153cf1178625" translate="yes" xml:space="preserve">
          <source>What problems happen when &lt;code&gt;number&lt;/code&gt; is a wider type than &lt;code&gt;1&lt;/code&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Qu&amp;eacute; problemas ocurren cuando el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;number&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es un tipo m&amp;aacute;s amplio que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e4b095a3c1e4e7de61d2386a5c1c85ccaef3c5bf" translate="yes" xml:space="preserve">
          <source>Which means to toggle a bit, we need to perform XOR operation with the bit you want to toggle and 1.</source>
          <target state="translated">Lo que significa que para cambiar un poco,tenemos que realizar la operación XOR con el bit que quieres cambiar y 1.</target>
        </trans-unit>
        <trans-unit id="13283e05a2e6100d0b5a95ed8d1a08dbfce494f8" translate="yes" xml:space="preserve">
          <source>You can then read, write, test the individual values as before.</source>
          <target state="translated">Entonces puedes leer,escribir,probar los valores individuales como antes.</target>
        </trans-unit>
        <trans-unit id="a9a82378920a8af59723a93e1aefb067f39fc80d" translate="yes" xml:space="preserve">
          <source>You didn't ask for this, but I might as well add it.</source>
          <target state="translated">Tú no pediste esto,pero yo también podría añadirlo.</target>
        </trans-unit>
        <trans-unit id="271ba18b7db73f6cb5c1287e8c31e53799100ded" translate="yes" xml:space="preserve">
          <source>You need to be aware of the bit packing order - I think it's MSB first, but this may be implementation-dependent. Also, verify how your compiler handlers fields crossing byte boundaries.</source>
          <target state="translated">Tienes que ser consciente del orden de empaquetamiento de los bits...Creo que primero es MSB,pero esto puede depender de la implementación.Además,verifique cómo los campos de sus manejadores de compilación cruzan los límites de los bytes.</target>
        </trans-unit>
        <trans-unit id="c56a85cee06a9cbc75b6a43727c8741125980bfe" translate="yes" xml:space="preserve">
          <source>defines a 3-bit field (actually, it's three 1-bit felds). Bit operations now become a bit (haha) simpler:</source>
          <target state="translated">define un campo de 3 bits (en realidad,son tres feldespatos de 1 bit).Las operaciones de bits ahora se vuelven un poco (jaja)más simples:</target>
        </trans-unit>
        <trans-unit id="fb7f7c94028fe09a6d2d9b3bf0b8501eb7095619" translate="yes" xml:space="preserve">
          <source>etc.</source>
          <target state="translated">etc.</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="0c4add5f2b8e203f7f9a3a5902a4b7fbe3c3367f" translate="yes" xml:space="preserve">
          <source>pos - position of the bit that we're interested to set, clear or toggle.</source>
          <target state="translated">pos-posición del bit que nos interesa fijar,despejar o conmutar.</target>
        </trans-unit>
        <trans-unit id="d183c0deb14cb48b70d54a4509f56c94c7466e99" translate="yes" xml:space="preserve">
          <source>to set, clear and test. This way you hide the magic numbers from the rest of your code.</source>
          <target state="translated">para establecer,limpiar y probar.De esta manera escondes los números mágicos del resto de tu código.</target>
        </trans-unit>
        <trans-unit id="110686b5a36529717043f97083920f834fb221cc" translate="yes" xml:space="preserve">
          <source>value - Data</source>
          <target state="translated">valor-Datos</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
