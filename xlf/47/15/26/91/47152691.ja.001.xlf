<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/47152691">
    <body>
      <group id="47152691">
        <trans-unit id="9c9e0b4742b0e4b8d83ec4a59fb577777a9649a2" translate="yes" xml:space="preserve">
          <source>... But I'm going to give it a go.</source>
          <target state="translated">...でも、やってみようと思います。</target>
        </trans-unit>
        <trans-unit id="5177a25723f9348a5043acd05ad5b49c1ac6327b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.groupby.html&quot;&gt;&lt;strong&gt;&lt;code&gt;pd.DataFrame.groupby&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; + &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.unstack.html&quot;&gt;&lt;strong&gt;&lt;code&gt;pd.DataFrame.unstack&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.groupby.html&quot;&gt;&lt;strong&gt; &lt;code&gt;pd.DataFrame.groupby&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt; + &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.unstack.html&quot;&gt;&lt;strong&gt; &lt;code&gt;pd.DataFrame.unstack&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1a54a8c6be9637973728f235bdb7b3539b35a89e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.set_index.html&quot;&gt;&lt;strong&gt;&lt;code&gt;pd.DataFrame.set_index&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; + &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.unstack.html&quot;&gt;&lt;strong&gt;&lt;code&gt;pd.DataFrame.unstack&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.set_index.html&quot;&gt;&lt;strong&gt; &lt;code&gt;pd.DataFrame.set_index&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt; + &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.unstack.html&quot;&gt;&lt;strong&gt; &lt;code&gt;pd.DataFrame.unstack&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a638605f0cae9ca76ff8d11224834681152ccd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/generated/pandas.factorize.html&quot;&gt;&lt;strong&gt;&lt;code&gt;pd.factorize&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; + &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.bincount.html&quot;&gt;&lt;strong&gt;&lt;code&gt;np.bincount&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/generated/pandas.factorize.html&quot;&gt;&lt;strong&gt; &lt;code&gt;pd.factorize&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt; + &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.bincount.html&quot;&gt;&lt;strong&gt; &lt;code&gt;np.bincount&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e6a7a33725c389216a8f66b9f5eb35ca306746e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/generated/pandas.get_dummies.html&quot;&gt;&lt;strong&gt;&lt;code&gt;pd.get_dummies&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; + &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.dot.html&quot;&gt;&lt;strong&gt;&lt;code&gt;pd.DataFrame.dot&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/generated/pandas.get_dummies.html&quot;&gt;&lt;strong&gt; &lt;code&gt;pd.get_dummies&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt; + &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.dot.html&quot;&gt;&lt;strong&gt; &lt;code&gt;pd.DataFrame.dot&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8daaa99e5b752261b7279c1e722e997373bd5dbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggfunc='mean'&lt;/code&gt; is the default and I didn't have to set it.  I included it to be explicit.</source>
          <target state="translated">&lt;code&gt;aggfunc='mean'&lt;/code&gt; がデフォルトであり、設定する必要はありませんでした。 明確にするために含めました。</target>
        </trans-unit>
        <trans-unit id="fa07e0c93a5c66548f72c6f1b24fefc94ccacaeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fill_value&lt;/code&gt; is not set by default.  I tend to set it appropriately.  In this case I set it to &lt;code&gt;0&lt;/code&gt;.  Notice I skipped &lt;strong&gt;question 2&lt;/strong&gt; as it's the same as this answer without the &lt;code&gt;fill_value&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fill_value&lt;/code&gt; はデフォルトでは設定されていません。 私はそれを適切に設定する傾向があります。 この場合は &lt;code&gt;0&lt;/code&gt; に設定します 。 &lt;strong&gt;質問2&lt;/strong&gt;は、 &lt;code&gt;fill_value&lt;/code&gt; なしでこの回答と同じであるため、スキップした&lt;strong&gt;ことに&lt;/strong&gt;注意してください。</target>
        </trans-unit>
        <trans-unit id="61a03543a868f9fa9e4ab80e11fbec0bcdee7a4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pd.DataFrame.pivot_table&lt;/code&gt; we pass &lt;code&gt;values=['val0', 'val1']&lt;/code&gt; but we could've left that off completely</source>
          <target state="translated">&lt;code&gt;pd.DataFrame.pivot_table&lt;/code&gt; は、 &lt;code&gt;values=['val0', 'val1']&lt;/code&gt; を渡しますが、完全に省略することもできます。</target>
        </trans-unit>
        <trans-unit id="349b580f86a4a8dee9aa2cbf261eac5f997bd1d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pd.DataFrame.set_index&lt;/code&gt; because the set of keys are unique for both rows and columns</source>
          <target state="translated">キーのセットは行と列の両方で一意であるため、 &lt;code&gt;pd.DataFrame.set_index&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8820040c2340708b55efea265759b512622a12d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pd.factorize&lt;/code&gt; + &lt;code&gt;np.bincount&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pd.factorize&lt;/code&gt; + &lt;code&gt;np.bincount&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b5e91cd079743982ad8c6a7fe4ddb2613f115104" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;pd.DataFrame.pivot&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;pd.DataFrame.pivot&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4df5257cf5916dc5e77c7d0bfd78c134bf6a691a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;pd.DataFrame.pivot_table&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;pd.DataFrame.pivot_table&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="33e94ddd126d88bd831f6aaa925d75a1088f7e5d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;pd.crosstab&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;pd.crosstab&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="55ce45f1617ad73f8f679ffd4fa6d9afe6a2ab5a" translate="yes" xml:space="preserve">
          <source>A glorified version of &lt;code&gt;groupby&lt;/code&gt; with more intuitive API.  For many people, this is the preferred approach.  And is the intended approach by the developers.</source>
          <target state="translated">より直感的なAPIを備えた栄光バージョンの &lt;code&gt;groupby&lt;/code&gt; 。 多くの人にとって、これは好ましいアプローチです。 そして、開発者が意図したアプローチです。</target>
        </trans-unit>
        <trans-unit id="69044c5c9b5b050cc6e182e44fd955b281bcf4e4" translate="yes" xml:space="preserve">
          <source>Another decent question but the answer focuses on one method, namely &lt;code&gt;pd.DataFrame.pivot&lt;/code&gt;</source>
          <target state="translated">別のまともな質問ですが、答えは1つのメソッド、つまり &lt;code&gt;pd.DataFrame.pivot&lt;/code&gt; に焦点を当てています</target>
        </trans-unit>
        <trans-unit id="da152378c819dd3f65357a368528413d4ca515f7" translate="yes" xml:space="preserve">
          <source>Can I aggregate over multiple value columns?</source>
          <target state="translated">複数の値の列を集約することはできますか?</target>
        </trans-unit>
        <trans-unit id="3dd6f268a852843467900a4eb6f2d2d69dea1188" translate="yes" xml:space="preserve">
          <source>Can I aggregate the frequency in which the column and rows occur together, aka &quot;cross tabulation&quot;?</source>
          <target state="translated">列と行が一緒に発生する頻度、別名「クロス集計」を集計することはできますか?</target>
        </trans-unit>
        <trans-unit id="f6686ac757dd8917ea947e24d3d6aa9f8ca8ad25" translate="yes" xml:space="preserve">
          <source>Can I do more that one aggregation at a time?</source>
          <target state="translated">一度に複数のアグリゲーションを行うことはできますか?</target>
        </trans-unit>
        <trans-unit id="8165c99e0de74b4938859a0c03d964a6f797cc5e" translate="yes" xml:space="preserve">
          <source>Can I get something other than &lt;code&gt;mean&lt;/code&gt;, like maybe &lt;code&gt;sum&lt;/code&gt;?</source>
          <target state="translated">&lt;code&gt;sum&lt;/code&gt; など、 &lt;code&gt;mean&lt;/code&gt; 以外の値を取得できますか？</target>
        </trans-unit>
        <trans-unit id="a7e2ad807a03cddc1ccd92afd0b8dd5996b61b7c" translate="yes" xml:space="preserve">
          <source>Can Subdivide by multiple columns?</source>
          <target state="translated">複数の列で細分化できますか?</target>
        </trans-unit>
        <trans-unit id="d114ba830e663884d35c54e059e4b5f960822952" translate="yes" xml:space="preserve">
          <source>Convenient and intuitive for some (myself included).  Cannot handle duplicate grouped keys.</source>
          <target state="translated">便利で直感的な操作が可能です。グループ化されたキーの重複は扱えません。</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="3f66052a107eaf9bae7cad0f61fb462f47ec2c47" translate="yes" xml:space="preserve">
          <source>From</source>
          <target state="translated">From</target>
        </trans-unit>
        <trans-unit id="a1cc24414403fa1882895c103188e4c83c91fac7" translate="yes" xml:space="preserve">
          <source>Good general approach for doing just about any type of pivot</source>
          <target state="translated">あらゆるタイプのピボットを行うための優れた一般的なアプローチ</target>
        </trans-unit>
        <trans-unit id="445310f08a20bd9f233f07c01c86b8a72e8358b3" translate="yes" xml:space="preserve">
          <source>Good question and answer.  But the answer only answers the specific question with little explanation.</source>
          <target state="translated">良い質問と答え。しかし、その答えはほとんど説明がなく、具体的な質問にしか答えていない。</target>
        </trans-unit>
        <trans-unit id="9ae2a7d1964bef5dee1874e7d3e94d935e9e42d3" translate="yes" xml:space="preserve">
          <source>Here is a list of idioms we can use to pivot</source>
          <target state="translated">ピボットで使える熟語の一覧です。</target>
        </trans-unit>
        <trans-unit id="f3a04e55d188bae575e957eaa3b04c3f9f06bc96" translate="yes" xml:space="preserve">
          <source>How do I convert a DataFrame from long to wide by pivoting on ONLY two
  columns?</source>
          <target state="translated">2 つの列だけをピボットして、DataFrame を縦長から横長に変換するにはどうすればよいですか?</target>
        </trans-unit>
        <trans-unit id="f7d735aff3de1554d60c85e460b8e6d27595f81a" translate="yes" xml:space="preserve">
          <source>How do I convert a DataFrame from long to wide by pivoting on ONLY two columns? Given,</source>
          <target state="translated">2 つの列だけをピボットすることで、DataFrame を縦長から横長に変換するにはどうすればよいですか?与えられた</target>
        </trans-unit>
        <trans-unit id="9e312e9ed4573d831373724674cc2c57a903b2a5" translate="yes" xml:space="preserve">
          <source>How do I flatten the multiple index to single index after &lt;code&gt;pivot&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pivot&lt;/code&gt; 後に複数のインデックスを単一のインデックスにフラット化する方法</target>
        </trans-unit>
        <trans-unit id="2a3e927c4ad2891aa7640dd2f19fb5a1e6868ac3" translate="yes" xml:space="preserve">
          <source>How do I pivot &lt;code&gt;df&lt;/code&gt; such that the &lt;code&gt;col&lt;/code&gt; values are columns, &lt;code&gt;row&lt;/code&gt; values are the index, and mean of &lt;code&gt;val0&lt;/code&gt; are the values?</source>
          <target state="translated">&lt;code&gt;col&lt;/code&gt; 値が列、 &lt;code&gt;row&lt;/code&gt; 値がインデックス、 &lt;code&gt;val0&lt;/code&gt; の平均が値になるように &lt;code&gt;df&lt;/code&gt; をピボットするにはどうすればよいですか？</target>
        </trans-unit>
        <trans-unit id="5334c6269c5b94387b8e606fd0f0f9fd13480b7a" translate="yes" xml:space="preserve">
          <source>How do I pivot &lt;code&gt;df&lt;/code&gt; such that the &lt;code&gt;col&lt;/code&gt; values are columns, &lt;code&gt;row&lt;/code&gt; values are the index, mean of &lt;code&gt;val0&lt;/code&gt; are the values, and missing values are &lt;code&gt;0&lt;/code&gt;?</source>
          <target state="translated">&lt;code&gt;col&lt;/code&gt; 値が列、 &lt;code&gt;row&lt;/code&gt; 値がインデックス、 &lt;code&gt;val0&lt;/code&gt; の平均が値、欠損値が &lt;code&gt;0&lt;/code&gt; になるように &lt;code&gt;df&lt;/code&gt; をピボットするにはどうすればよいですか？</target>
        </trans-unit>
        <trans-unit id="ba779ac40026013459aa6c13ec7b397c72ffdf20" translate="yes" xml:space="preserve">
          <source>How do I pivot?</source>
          <target state="translated">どうやってピボットするの?</target>
        </trans-unit>
        <trans-unit id="2931e8a05acab408826651a302b5ffc09c123f32" translate="yes" xml:space="preserve">
          <source>How to pivot a dataframe</source>
          <target state="translated">データフレームをピボットする方法</target>
        </trans-unit>
        <trans-unit id="f2ffec5375d6c4f94da16bdcc1d9353705214907" translate="yes" xml:space="preserve">
          <source>How to pivot a dataframe in Pandas?</source>
          <target state="translated">Pandasでデータフレームをピボットするには?</target>
        </trans-unit>
        <trans-unit id="e31344e7a24dee59e0d50879cf653443c11d71cb" translate="yes" xml:space="preserve">
          <source>I get the error mentioned above.  In fact, I get the same error when I try to perform the same task with:</source>
          <target state="translated">上記のようなエラーが出ます。実際、同じタスクを一緒に実行しようとすると同じエラーが出ます。</target>
        </trans-unit>
        <trans-unit id="0ca2b50f6b6f6e220f220759266e3ce90b87835b" translate="yes" xml:space="preserve">
          <source>I use this for cleverly performing cross tabulation.</source>
          <target state="translated">クロス集計を巧妙に行うために使っています。</target>
        </trans-unit>
        <trans-unit id="5b0f6ad500a34ef884e6175069744bf6e90dd612" translate="yes" xml:space="preserve">
          <source>I've seen a lot of questions that ask about pivot tables.  Even if they don't know that they are asking about pivot tables, they usually are.  It is virtually impossible to write a canonical question and answer that encompasses all aspects of pivoting....</source>
          <target state="translated">ピボットテーブルについて質問しているのをたくさん見てきました。ピボットテーブルについて質問していることを知らなくても、たいていはそうです。ピボットのすべての側面を網羅した正準的な質問と回答を書くことは事実上不可能です...。</target>
        </trans-unit>
        <trans-unit id="8b603699c1a6f35d0871ba141ad56a3e4a3ed8ee" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;columns&lt;/code&gt; type &lt;code&gt;object&lt;/code&gt; with string &lt;code&gt;join&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;columns&lt;/code&gt; が文字列 &lt;code&gt;join&lt;/code&gt; 持つ &lt;code&gt;object&lt;/code&gt; を入力する場合</target>
        </trans-unit>
        <trans-unit id="1c3f48988e02f8d1ec529f082ba3843b24e82583" translate="yes" xml:space="preserve">
          <source>In this question, the OP is concerned with the output of the pivot.  Namely how the columns look.  OP wanted it to look like R.  This isn't very helpful for pandas users.</source>
          <target state="translated">この質問では、OPはピボットの出力に関係しています。つまり、列がどのように見えるかということです。OPはRのように見えるようにしたかったのですが、これはpandasユーザーにとってはあまり参考になりません。</target>
        </trans-unit>
        <trans-unit id="8235a825a0d80bb05c75a06569d21f4c773364c9" translate="yes" xml:space="preserve">
          <source>Is this a pivot?</source>
          <target state="translated">これはピボットですか?</target>
        </trans-unit>
        <trans-unit id="6ab56616b296301f84831126c03a8a8f770df25e" translate="yes" xml:space="preserve">
          <source>Long format to wide format?</source>
          <target state="translated">ロングフォーマットからワイドフォーマットへ?</target>
        </trans-unit>
        <trans-unit id="c7d158bd2ca40e01315dd19b088df99e6d76c32d" translate="yes" xml:space="preserve">
          <source>Look a few examples from my &lt;a href=&quot;https://www.google.com/search?q=how%20to%20pivot%20a%20pandas%20dataframe&amp;amp;oq=How%20do%20I%20pivot%20a%20pandas%20dataframe&quot;&gt;&lt;strong&gt;google search&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">私の&lt;a href=&quot;https://www.google.com/search?q=how%20to%20pivot%20a%20pandas%20dataframe&amp;amp;oq=How%20do%20I%20pivot%20a%20pandas%20dataframe&quot;&gt;&lt;strong&gt;グーグル検索&lt;/strong&gt;&lt;/a&gt;からいくつかの例を見てください</target>
        </trans-unit>
        <trans-unit id="ea24124188b83fe03403d78495b0c1875b53c43d" translate="yes" xml:space="preserve">
          <source>Notice that for &lt;code&gt;pivot_table&lt;/code&gt; and &lt;code&gt;crosstab&lt;/code&gt; I needed to pass list of callables.  On the other hand, &lt;code&gt;groupby.agg&lt;/code&gt; is able to take strings for a limited number of special functions.  &lt;code&gt;groupby.agg&lt;/code&gt; would also have taken the same callables we passed to the others, but it is often more efficient to leverage the string function names as there are efficiencies to be gained.</source>
          <target state="translated">&lt;code&gt;pivot_table&lt;/code&gt; とcrosstabでは 、呼び出し可能オブジェクトのリストを渡す必要があることに注意してください 。 一方、 &lt;code&gt;groupby.agg&lt;/code&gt; は、限られた数の特殊関数の文字列を取得できます。 &lt;code&gt;groupby.agg&lt;/code&gt; も、他に渡したものと同じ呼び出し可能オブジェクトを取得しますが、効率が向上するため、文字列関数名を利用する方が効率的であることがよくあります。</target>
        </trans-unit>
        <trans-unit id="e72184f55cc026514b7160d78c3c5aef63c2a050" translate="yes" xml:space="preserve">
          <source>Or</source>
          <target state="translated">Or</target>
        </trans-unit>
        <trans-unit id="7bc124f4afc3e6ef7f1c469ee05bf14cfe9cc498" translate="yes" xml:space="preserve">
          <source>Question 1</source>
          <target state="translated">質問1</target>
        </trans-unit>
        <trans-unit id="a4a89b7ac0a17d7e5c00629224c4ba850fd9621a" translate="yes" xml:space="preserve">
          <source>Question 10</source>
          <target state="translated">第10問</target>
        </trans-unit>
        <trans-unit id="6c14ecfea27f558f8c73dc5c1b33276c82e78fa7" translate="yes" xml:space="preserve">
          <source>Question 11</source>
          <target state="translated">質問11</target>
        </trans-unit>
        <trans-unit id="5ff45a36503b612e2afa069a9446f4968c1a8fff" translate="yes" xml:space="preserve">
          <source>Question 3</source>
          <target state="translated">質問3</target>
        </trans-unit>
        <trans-unit id="7c3ddc3e3f7528476885743dd084b2cc7d1d47ba" translate="yes" xml:space="preserve">
          <source>Question 4</source>
          <target state="translated">質問4</target>
        </trans-unit>
        <trans-unit id="31496a2c1faf4ae7616f8594425bd0181b9d9e43" translate="yes" xml:space="preserve">
          <source>Question 5</source>
          <target state="translated">質問5</target>
        </trans-unit>
        <trans-unit id="3de649aa242f90978e79c919f5599d4d3da83ac6" translate="yes" xml:space="preserve">
          <source>Question 6</source>
          <target state="translated">質問6</target>
        </trans-unit>
        <trans-unit id="8e809f1cf4ef45682a71353a754e38321847408e" translate="yes" xml:space="preserve">
          <source>Question 7</source>
          <target state="translated">質問7</target>
        </trans-unit>
        <trans-unit id="1530c7d6c1726cc964be251fbb23aca3fd3b3b42" translate="yes" xml:space="preserve">
          <source>Question 8</source>
          <target state="translated">質問8</target>
        </trans-unit>
        <trans-unit id="b265cb6417b54ff8dadc955e6ddbe478f424dafa" translate="yes" xml:space="preserve">
          <source>Question 9</source>
          <target state="translated">質問9</target>
        </trans-unit>
        <trans-unit id="18c25319cca311225969facd6466dcde7e8c7e2a" translate="yes" xml:space="preserve">
          <source>Question(s)</source>
          <target state="translated">Question(s)</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">Setup</target>
        </trans-unit>
        <trans-unit id="4c0676e0ea6b392cba7f777f7f811fa2d8e7374a" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;code&gt;groupby&lt;/code&gt; paradigm, we specify all columns that will eventually be either row or column levels and set those to be the index.  We then &lt;code&gt;unstack&lt;/code&gt; the levels we want in the columns.  If either the remaining index levels or column levels are not unique, this method will fail.</source>
          <target state="translated">&lt;code&gt;groupby&lt;/code&gt; パラダイムと同様に、最終的に行または列レベルになるすべての列を指定し、それらをインデックスに設定します。 次に、列に必要なレベルを &lt;code&gt;unstack&lt;/code&gt; します。 残りのインデックスレベルまたは列レベルのいずれかが一意でない場合、このメソッドは失敗します。</target>
        </trans-unit>
        <trans-unit id="8ebb250d155319542d83151b81bad7d4a5fc46f2" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;code&gt;pivot_table&lt;/code&gt; method in that we select rows, columns, and values on which to pivot.  However, we cannot aggregate and if either rows or columns are not unique, this method will fail.</source>
          <target state="translated">ピボットする行、列、値を選択するという点で、 &lt;code&gt;pivot_table&lt;/code&gt; メソッドに似ています。 ただし、集計することはできません。行または列が一意でない場合、このメソッドは失敗します。</target>
        </trans-unit>
        <trans-unit id="0c3835d6be4d3ff0a169bfc0f0711b446db6ac73" translate="yes" xml:space="preserve">
          <source>So when I &lt;code&gt;pivot&lt;/code&gt; using</source>
          <target state="translated">だから私が使用して &lt;code&gt;pivot&lt;/code&gt; するとき</target>
        </trans-unit>
        <trans-unit id="41e6c1c62f5a269d4ad4a973103c15670e42eca9" translate="yes" xml:space="preserve">
          <source>So whenever someone searches for &lt;code&gt;pivot&lt;/code&gt; they get sporadic results that are likely not going to answer their specific question.</source>
          <target state="translated">したがって、誰かが &lt;code&gt;pivot&lt;/code&gt; を検索するたびに、特定の質問には答えられない可能性が高い散発的な結果が得られます。</target>
        </trans-unit>
        <trans-unit id="f82a056d4aa3b0ee0ca768dafe0f3fb111a89161" translate="yes" xml:space="preserve">
          <source>Specify row level, column levels, values to be aggregated, and function(s) to perform aggregations.</source>
          <target state="translated">行レベル、列レベル、集約する値、集約を実行する関数を指定します。</target>
        </trans-unit>
        <trans-unit id="fd743d73290b44b63712a7bafa6dd94c2afe05e6" translate="yes" xml:space="preserve">
          <source>The expected should would look something like</source>
          <target state="translated">期待されるのは、次のようなものです。</target>
        </trans-unit>
        <trans-unit id="1941b3dc06296ac51d7f308cb43fa994fb39f5dd" translate="yes" xml:space="preserve">
          <source>The first step is to assign a number to each row - this number will be the row index of that value in the pivoted result. This is done using &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.core.groupby.GroupBy.cumcount.html&quot;&gt;&lt;strong&gt;&lt;code&gt;GroupBy.cumcount&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;:</source>
          <target state="translated">最初のステップは、各行に番号を割り当てることです。この番号は、ピボットされた結果におけるその値の行インデックスになります。 これは&lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.core.groupby.GroupBy.cumcount.html&quot;&gt;&lt;strong&gt; &lt;code&gt;GroupBy.cumcount&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt;を使用して行われ&lt;strong&gt;ます&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="df31d597ca252e1035930dc435053156cad2bd07" translate="yes" xml:space="preserve">
          <source>The problem with existing questions and answers is that often the question is focused on a nuance that the OP has trouble generalizing in order to use a number of the existing good answers.  However, none of the answers attempt to give a comprehensive explanation (because it's a daunting task)</source>
          <target state="translated">既存の質問と回答の問題点は、OPが既存の良い回答をいくつも使うために、一般化するのに苦労しているようなニュアンスの質問に集中することが多いことです。しかし、どの回答も包括的な説明をしようとはしていません(めんどくさいからです)。</target>
        </trans-unit>
        <trans-unit id="5aba85426b0e1d4a9c14b2dde8ab56325e7bbc33" translate="yes" xml:space="preserve">
          <source>The second step is to use the newly created column as the index to call &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.pivot.html&quot;&gt;&lt;strong&gt;&lt;code&gt;DataFrame.pivot&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">2番目のステップは、新しく作成された列をインデックスとして使用して&lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.pivot.html&quot;&gt;&lt;strong&gt; &lt;code&gt;DataFrame.pivot&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt;を呼び出すこと&lt;strong&gt;です&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="12f3bc262b397f53e20978695e14dd0ec8ac6661" translate="yes" xml:space="preserve">
          <source>This a specialized version of &lt;code&gt;pivot_table&lt;/code&gt; and in it's purest form is the most intuitive way to perform several tasks.</source>
          <target state="translated">これは、 &lt;code&gt;pivot_table&lt;/code&gt; の特別なバージョンであり、最も純粋な形式では、いくつかのタスクを実行する最も直感的な方法です。</target>
        </trans-unit>
        <trans-unit id="8ec3b40089bb4a720c260931ac6da12287e611df" translate="yes" xml:space="preserve">
          <source>This is a highly advanced technique that is very obscure but is very fast.  It cannot be used in all circumstances, but when it can be used and you are comfortable using it, you will reap the performance rewards.</source>
          <target state="translated">非常に曖昧ではありますが、非常に高速な高度なテクニックです。全ての状況で使えるわけではありませんが、使いこなせるようになって使いこなせるようになった時には、性能面での報いを受けることができます。</target>
        </trans-unit>
        <trans-unit id="31d6d52b26af8a1bb38967744317d7d712fdfa05" translate="yes" xml:space="preserve">
          <source>This occurs because pandas is attempting to reindex either a &lt;code&gt;columns&lt;/code&gt; or &lt;code&gt;index&lt;/code&gt; object with duplicate entries.  There are varying methods to use that can perform a pivot.  Some of them are not well suited to when there are duplicates of the keys in which it is being asked to pivot on.  For example.  Consider &lt;code&gt;pd.DataFrame.pivot&lt;/code&gt;.  I know there are duplicate entries that share the &lt;code&gt;row&lt;/code&gt; and &lt;code&gt;col&lt;/code&gt; values:</source>
          <target state="translated">これは、pandasが重複するエントリを含む &lt;code&gt;columns&lt;/code&gt; または &lt;code&gt;index&lt;/code&gt; オブジェクトのインデックスを再作成しようとしているために発生します。 ピボットを実行できるさまざまな使用方法があります。 それらのいくつかは、ピボットするように要求されているキーの重複がある場合にはあまり適していません。 例えば。 &lt;code&gt;pd.DataFrame.pivot&lt;/code&gt; を検討してください 。 &lt;code&gt;row&lt;/code&gt; と &lt;code&gt;col&lt;/code&gt; 値を共有する重複したエントリがあることを知っています。</target>
        </trans-unit>
        <trans-unit id="ae79ea1e9c6391a9ed83a2e18a031b835feec0c9" translate="yes" xml:space="preserve">
          <source>To</source>
          <target state="translated">To</target>
        </trans-unit>
        <trans-unit id="61f35897fb32b7b7e648f20d41f1a54adf9e5c84" translate="yes" xml:space="preserve">
          <source>Very similar to &lt;code&gt;set_index&lt;/code&gt; in that it shares the duplicate key limitation.  The API is very limited as well.  It only takes scalar values for &lt;code&gt;index&lt;/code&gt;, &lt;code&gt;columns&lt;/code&gt;, &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="translated">重複するキーの制限を共有するという点で &lt;code&gt;set_index&lt;/code&gt; と非常に似ています。 APIも非常に制限されています。 &lt;code&gt;index&lt;/code&gt; 、 &lt;code&gt;columns&lt;/code&gt; 、 &lt;code&gt;values&lt;/code&gt; スカラー値のみを受け取ります 。</target>
        </trans-unit>
        <trans-unit id="2327492238bff6989d45d12ab284c5bfc3b00b3e" translate="yes" xml:space="preserve">
          <source>We start by answering the first question:</source>
          <target state="translated">最初の質問に答えることから始めます。</target>
        </trans-unit>
        <trans-unit id="259538922f685a60d1034c66755c7f51ff4cb348" translate="yes" xml:space="preserve">
          <source>What I'm going to do for each subsequent answer and question is to answer it using &lt;code&gt;pd.DataFrame.pivot_table&lt;/code&gt;.  Then I'll provide alternatives to perform the same task.</source>
          <target state="translated">後続の各回答と質問に対して行うのは、 &lt;code&gt;pd.DataFrame.pivot_table&lt;/code&gt; を使用して回答することです 。 次に、同じタスクを実行するための代替手段を提供します。</target>
        </trans-unit>
        <trans-unit id="78556a100730a5ade981e0bf09c7e08f298efe66" translate="yes" xml:space="preserve">
          <source>What is pivot?</source>
          <target state="translated">ピボットとは?</target>
        </trans-unit>
        <trans-unit id="5c65bb70ac62cf0fb57173b3878a68a8730a0baf" translate="yes" xml:space="preserve">
          <source>Why do I get &lt;code&gt;ValueError: Index contains duplicate entries, cannot reshape&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ValueError: Index contains duplicate entries, cannot reshape&lt;/code&gt; 理由：インデックスに重複したエントリが含まれているため、 形状を変更できません</target>
        </trans-unit>
        <trans-unit id="289a8a3874f8287b0a9dc8c5d7c97e472c0c9c24" translate="yes" xml:space="preserve">
          <source>You may notice that I conspicuously named my columns and relevant column values to correspond with how I'm going to pivot in the answers below.</source>
          <target state="translated">以下の回答の中で、私がどのようにピボットするかに対応するために、私が目立たないように自分のカラムと関連するカラムの値に名前を付けたことに気づくかもしれません。</target>
        </trans-unit>
        <trans-unit id="2c0c7df09d65f98b3850d32f2798510641ac5ffd" translate="yes" xml:space="preserve">
          <source>You specify all columns that will constitute the pivoted row levels and column levels in one group by.  You follow that by selecting the remaining columns you want to aggregate and the function(s) you want to perform the aggregation.  Finally, you &lt;code&gt;unstack&lt;/code&gt; the levels that you want to be in the column index.</source>
          <target state="translated">ピボットされた行レベルと列レベルを構成するすべての列を1つのグループで指定します。 その後に、集計する残りの列と集計を実行する関数を選択します。 最後に、列インデックスに &lt;code&gt;unstack&lt;/code&gt; レベルをアンスタックします。</target>
        </trans-unit>
        <trans-unit id="054d51d259d3e11c2aa917be97f4a027e29321e8" translate="yes" xml:space="preserve">
          <source>else &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">他の &lt;code&gt;format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="de40e13b4656b864521d7588af68a32019f3077e" translate="yes" xml:space="preserve">
          <source>pandas pivot table to data frame</source>
          <target state="translated">パンダのピボットテーブルをデータフレームに</target>
        </trans-unit>
        <trans-unit id="1bfee57842bdb7a3c86e2ff359bfe6420aa41cf6" translate="yes" xml:space="preserve">
          <source>pandas pivoting a dataframe, duplicate rows</source>
          <target state="translated">パンダは、データフレーム、重複行をピボット</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
