<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/477816">
    <body>
      <group id="477816">
        <trans-unit id="305a16d74a88248143911fb5fcdb1ac6b1259f13" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;&lt;code&gt;application/json&lt;/code&gt;&amp;rdquo; is the correct JSON content type.</source>
          <target state="translated">&amp;ldquo; &lt;code&gt;application/json&lt;/code&gt; &amp;rdquo;是正确的JSON内容类型。</target>
        </trans-unit>
        <trans-unit id="04e7ecb4c549c6fbb02f493cb12d356a44fbacb7" translate="yes" xml:space="preserve">
          <source>.ashx (asynchronous handler) to</source>
          <target state="translated">.ashx (asynchronous handler)转为</target>
        </trans-unit>
        <trans-unit id="95673eb82de8462c9bc74f908703b32a55b1aa93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.iana.org&quot;&gt;IANA&lt;/a&gt; has registered the official MIME Type for JSON as &lt;strong&gt;&lt;code&gt;application/json&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.iana.org&quot;&gt;IANA&lt;/a&gt;已将JSON的正式MIME类型注册为&lt;strong&gt; &lt;code&gt;application/json&lt;/code&gt; &lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="d37a2faf0bf5138f22a9d3bc82240b411ccece07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.iana.org/assignments/media-types/application/&quot;&gt;The official mime type list at IANA&lt;/a&gt; from @gnrfan's answer below</source>
          <target state="translated">来自@gnrfan的&lt;a href=&quot;http://www.iana.org/assignments/media-types/application/&quot;&gt;IANA上的官方MIME类型列表&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8bfecbe028a477d76f237d6143603b2f5b8f289" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/JSON&quot;&gt;JSON&lt;/a&gt; (JavaScript Object Notation) and &lt;a href=&quot;https://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt; (&quot;JSON with padding&quot;) formats seems to be very similar and therefore it might be very confusing which MIME type they should be using. Even though the formats are similar, there are some subtle differences between them.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/JSON&quot;&gt;JSON&lt;/a&gt; （JavaScript对象表示法）和&lt;a href=&quot;https://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt; （&amp;ldquo;带填充的JSON&amp;rdquo;）格式似乎非常相似，因此可能会使他们应该使用哪种MIME类型感到非常困惑。 即使格式相似，它们之间也存在一些细微的差异。</target>
        </trans-unit>
        <trans-unit id="53a66a459c62f5e7601cd7dee292a8c6841e5ce2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Content-Type: application/javascript&lt;/code&gt; - json-P</source>
          <target state="translated">&lt;code&gt;Content-Type: application/javascript&lt;/code&gt; -json-P</target>
        </trans-unit>
        <trans-unit id="8a399e4f709c4a7f414cfe862a6f2eba4f10a4f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Content-Type: application/json&lt;/code&gt; - json</source>
          <target state="translated">&lt;code&gt;Content-Type: application/json&lt;/code&gt; -json</target>
        </trans-unit>
        <trans-unit id="2952c2b947e38414ceb1e39cbcf0b9b0cd5f6f9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Content-Type: application/x-javascript&lt;/code&gt; - javascript</source>
          <target state="translated">&lt;code&gt;Content-Type: application/x-javascript&lt;/code&gt; -javascript</target>
        </trans-unit>
        <trans-unit id="514debfe7f89d99e1e9cb4771187a7627e7e10de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Content-Type: text/javascript&lt;/code&gt; - javascript BUT obsolete, older IE versions used to use as html attribute.</source>
          <target state="translated">&lt;code&gt;Content-Type: text/javascript&lt;/code&gt; -javascript但过时，以前的IE版本曾经用作html属性。</target>
        </trans-unit>
        <trans-unit id="b3b67d61cb856a119810309b3ab4ba9b6fd36d03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Content-Type: text/x-javascript&lt;/code&gt; - JavaScript Media Types BUT obsolete</source>
          <target state="translated">&lt;code&gt;Content-Type: text/x-javascript&lt;/code&gt; -JavaScript媒体类型已过时</target>
        </trans-unit>
        <trans-unit id="fca6ed7381f4b996306c185a5cdf7d1028eb01db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Content-Type: text/x-json&lt;/code&gt; - json before application/json got officially registered.</source>
          <target state="translated">&lt;code&gt;Content-Type: text/x-json&lt;/code&gt; 正式注册application / json之前的json。</target>
        </trans-unit>
        <trans-unit id="5000f2afbb48150b13d6fb2940580df8928be2e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application/x-javascript&lt;/code&gt;: Experimental MIME type for JavaScript before &lt;code&gt;application/javascript&lt;/code&gt; was made standard.</source>
          <target state="translated">&lt;code&gt;application/x-javascript&lt;/code&gt; ：在将 &lt;code&gt;application/javascript&lt;/code&gt; 标准之前，JavaScript的实验性MIME类型。</target>
        </trans-unit>
        <trans-unit id="af5c69f7dfd99272594de49d479783401811550a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text/javascript&lt;/code&gt;: Now obsolete. You should use &lt;code&gt;application/javascript&lt;/code&gt; when using javascript.</source>
          <target state="translated">&lt;code&gt;text/javascript&lt;/code&gt; ：现已过时。 使用 &lt;code&gt;application/javascript&lt;/code&gt; 时，应使用application / javascript。</target>
        </trans-unit>
        <trans-unit id="0557592a1c804a26d5f2a7615fe09f8808ba8fab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text/x-javascript&lt;/code&gt;: Experimental MIME type for the above situation.</source>
          <target state="translated">&lt;code&gt;text/x-javascript&lt;/code&gt; ：以上情况的实验性MIME类型。</target>
        </trans-unit>
        <trans-unit id="268b07f9cf9e100084e153849f60731c2b17aa5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text/x-json&lt;/code&gt;: Experimental MIME type for JSON before &lt;code&gt;application/json&lt;/code&gt; got officially registered.</source>
          <target state="translated">&lt;code&gt;text/x-json&lt;/code&gt; ：在 &lt;code&gt;application/json&lt;/code&gt; 正式注册之前，用于JSON的实验MIME类型。</target>
        </trans-unit>
        <trans-unit id="8be5423676b928245aac76d473d2fa9498626704" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Client side, Ext GWT form listener&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;客户端，Ext GWT表单侦听器&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6a863d015e12fe10fc226b17fdbc98a574caed2c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Server side source code snippet using &lt;a href=&quot;http://en.wikipedia.org/wiki/Spring_Framework#Model-view-controller_framework&quot;&gt;Spring MVC&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;使用&lt;a href=&quot;http://en.wikipedia.org/wiki/Spring_Framework#Model-view-controller_framework&quot;&gt;Spring MVC的&lt;/a&gt;服务器端源代码片段&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="93f2958930ca00852722213cacc7611336f22eea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;application/javascript&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;application/javascript&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8ab16afdd58271a9c06493fb6a08e4a02823e894" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;application/json&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;application/json&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c11b06b378d2914be3e951d2a7fa4207751fb73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BUT&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;BUT&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c87ee9565caefb303e4aed56ae06d4a3ef70a9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Content-Type:&lt;/strong&gt;&lt;code&gt;application/javascript&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Content-Type:&lt;/strong&gt;&lt;code&gt;application/javascript&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60d262cb18ae8ae76d0bbd0facb66a122ff9a2bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Content-Type:&lt;/strong&gt;&lt;code&gt;application/json&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Content-Type:&lt;/strong&gt;&lt;code&gt;application/json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4168878b06eaa6917a0f012585506612f5054ea6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ca4c81ed3c1953319ed74b00bde494825198e437" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For &lt;a href=&quot;http://en.wikipedia.org/wiki/JSONP&quot;&gt;JSON-P&lt;/a&gt;:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;对于&lt;a href=&quot;http://en.wikipedia.org/wiki/JSONP&quot;&gt;JSON-P&lt;/a&gt; ：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8ecc0044350d60d1d17dae1cb880602ed1ec0398" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For JSON:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;对于JSON：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c8ab93e17a546dcfadf17f6f016003012e1d130b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSON-P:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;JSON-P:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d5884e0396dda81fe2608a72f1b37b70d68b576" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSON:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;JSON:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c3e1a51827f4174b2d0e3dc82af471e638d70255" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSON&lt;/strong&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc4627.txt&quot;&gt;RFC 4627&lt;/a&gt; (The application/json Media Type for JavaScript Object Notation (JSON)) is a specifications of JSON format. It says in section 6, that the MIME media type for JSON text is</source>
          <target state="translated">&lt;strong&gt;JSON&lt;/strong&gt; &lt;a href=&quot;http://www.ietf.org/rfc/rfc4627.txt&quot;&gt;RFC 4627&lt;/a&gt; （JavaScript对象表示法（JSON）的application / json媒体类型）是JSON格式的规范。 它在第6节中说，JSON文本的MIME媒体类型是</target>
        </trans-unit>
        <trans-unit id="37ced8e637f802fd56850d8848d9267f9693be20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSONP&lt;/strong&gt;
JSONP (&quot;JSON with padding&quot;) is handled different way than JSON, in a browser. JSONP is treated as a regular JavaScript script and therefore it should use &lt;code&gt;application/javascript,&lt;/code&gt; the current official MIME type for JavaScript. In many cases, however, &lt;code&gt;text/javascript&lt;/code&gt; MIME type will work fine too.</source>
          <target state="translated">&lt;strong&gt;JSONP&lt;/strong&gt;在浏览器中，JSONP（&amp;ldquo;带有填充的JSON&amp;rdquo;）与JSON的处理方式不同。 JSONP被视为常规JavaScript脚本，因此它应使用 &lt;code&gt;application/javascript,&lt;/code&gt; 这是JavaScript的当前官方MIME类型。 但是，在许多情况下， &lt;code&gt;text/javascript&lt;/code&gt; MIME类型也可以正常工作。</target>
        </trans-unit>
        <trans-unit id="024b65b9367df989e743ffa7e565ff7c30f6c47a" translate="yes" xml:space="preserve">
          <source>A rather complete list of Mimetypes and what to use them for</source>
          <target state="translated">一份相当完整的Mimetypes和用于什么用途的清单</target>
        </trans-unit>
        <trans-unit id="3ade0616960f52a9921b0469219ac0dd07020987" translate="yes" xml:space="preserve">
          <source>Add headers to the response:</source>
          <target state="translated">在回复中添加标题。</target>
        </trans-unit>
        <trans-unit id="bacd7139f24d945be63ac934266d7fd2c3b6a98c" translate="yes" xml:space="preserve">
          <source>After that I removed this newly added type and added</source>
          <target state="translated">之后,我把这个新增加的类型去掉了,并添加了</target>
        </trans-unit>
        <trans-unit id="9f42ab9aad96b8b379ba770b73e69fd8a4657a80" translate="yes" xml:space="preserve">
          <source>All in all, whenever you have any doubts about content types, you should check &lt;a href=&quot;http://www.iana.org/assignments/media-types/media-types.xhtml&quot;&gt;this link&lt;/a&gt;</source>
          <target state="translated">总而言之，每当对内容类型有疑问时，都应检查&lt;a href=&quot;http://www.iana.org/assignments/media-types/media-types.xhtml&quot;&gt;此链接&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4739bcc5cd44782a19ba69eb7bc07d5834258160" translate="yes" xml:space="preserve">
          <source>Altough there is not an universal standard, it is clear that the added semantic to the resources being transfered justify a more explicit &lt;em&gt;Content-Type&lt;/em&gt; than just &lt;code&gt;application/json&lt;/code&gt;.</source>
          <target state="translated">尽管还没有一个通用标准，但是很显然，向正在传输的资源中添加的语义证明了比 &lt;code&gt;application/json&lt;/code&gt; 更明确的&lt;em&gt;Content-Type&lt;/em&gt;是合理的。</target>
        </trans-unit>
        <trans-unit id="02a33fce415593816645b67e2e0e69ef645c1398" translate="yes" xml:space="preserve">
          <source>And if you decide to follow the &lt;strong&gt;jsonapi&lt;/strong&gt; specification, &lt;a href=&quot;http://jsonapi.org/format/#content-negotiation&quot;&gt;you should&lt;/a&gt; use of &lt;code&gt;application/vnd.api+json&lt;/code&gt;, as it is documented.</source>
          <target state="translated">而且，如果您决定遵循&lt;strong&gt;jsonapi&lt;/strong&gt;规范， &lt;a href=&quot;http://jsonapi.org/format/#content-negotiation&quot;&gt;则应&lt;/a&gt;使用 &lt;code&gt;application/vnd.api+json&lt;/code&gt; ，因为该文档已记录。</target>
        </trans-unit>
        <trans-unit id="0e2370e74e90355ff2f5af0fb4775fe67fb69557" translate="yes" xml:space="preserve">
          <source>And now I found that my JSON responses were compressed with g-zip. So I personally recommend to use</source>
          <target state="translated">而现在我发现我的JSON响应的时候用g-zip压缩了。所以我个人建议用</target>
        </trans-unit>
        <trans-unit id="ce21b36edfe8f242692533c3a07e4b864fbc3f58" translate="yes" xml:space="preserve">
          <source>Application/JSON!</source>
          <target state="translated">Application/JSON!</target>
        </trans-unit>
        <trans-unit id="e972e8e6b364000dec05223602851db762aef10a" translate="yes" xml:space="preserve">
          <source>Applications that use this media type:  JSON has been used to
     exchange data between applications written in all of these
     programming languages: ActionScript, C, C#, Clojure, ColdFusion,
     Common Lisp, E, Erlang, Go, Java, JavaScript, Lua, Objective CAML,
     Perl, PHP, Python, Rebol, Ruby, Scala, and Scheme.</source>
          <target state="translated">使用这种媒体类型的应用程序。JSON已被用于在所有这些编程语言编写的应用程序之间交换数据。ActionScript,C,C,C#,Clojure,ColdFusion,Common Lisp,E,Erlang,Go,Java,JavaScript,Lua,Objective CAML,Perl,PHP,Python,Rebol,Ruby,Scala,和 Scheme。</target>
        </trans-unit>
        <trans-unit id="05ddb02054d167f953b58b4dda7364610b69e96b" translate="yes" xml:space="preserve">
          <source>As many others have mentioned, &lt;code&gt;application/json&lt;/code&gt; is the correct answer.</source>
          <target state="translated">正如许多其他人提到的那样， &lt;code&gt;application/json&lt;/code&gt; 是正确的答案。</target>
        </trans-unit>
        <trans-unit id="b565191b3f6a0c5a792ad67960a8294b0befa5b9" translate="yes" xml:space="preserve">
          <source>Browser support is another thing.</source>
          <target state="translated">浏览器的支持是另一回事。</target>
        </trans-unit>
        <trans-unit id="7081f02ce044d876af7c717ed1d65ab058491584" translate="yes" xml:space="preserve">
          <source>But I had some experience where I had to use &lt;code&gt;application/x-javascript&lt;/code&gt; because of some compression issues. My hosting environment is shared hosting with &lt;a href=&quot;http://en.wikipedia.org/wiki/Go_Daddy&quot;&gt;GoDaddy&lt;/a&gt;. They do not allow me to change server configurations. I had added the following code to my &lt;code&gt;web.config&lt;/code&gt; file for compressing responses.</source>
          <target state="translated">但是由于一些压缩问题，我有一些必须使用 &lt;code&gt;application/x-javascript&lt;/code&gt; 的经验。 我的托管环境是与&lt;a href=&quot;http://en.wikipedia.org/wiki/Go_Daddy&quot;&gt;GoDaddy&lt;/a&gt;共享的托管。 它们不允许我更改服务器配置。 我已将以下代码添加到我的 &lt;code&gt;web.config&lt;/code&gt; 文件中以压缩响应。</target>
        </trans-unit>
        <trans-unit id="46fa4395eaa3e7600c33f07250b176db6ab81860" translate="yes" xml:space="preserve">
          <source>But honestly, your choice of MIME type is advice to the client as to how to interpret the data- &lt;code&gt;text/plain&lt;/code&gt; or &lt;code&gt;text/HTML&lt;/code&gt; (when it's not HTML) is like type erasure- it's as uninformative as making all your objects of type Object in a typed language.</source>
          <target state="translated">但说实话，您选择的MIME类型是向客户端提供有关如何解释数据的建议- &lt;code&gt;text/plain&lt;/code&gt; &lt;code&gt;text/HTML&lt;/code&gt; 或文本/ HTML （当不是HTML时）就像类型擦除-与使所有对象成为Object类型一样没有信息以一种打字语言。</target>
        </trans-unit>
        <trans-unit id="a4d97e0fce5d6efc9ce0757563674691d8d19576" translate="yes" xml:space="preserve">
          <source>But what haven't been explained yet is what the other options you proposed mean.</source>
          <target state="translated">但还没解释清楚的是,你提出的其他方案是什么意思。</target>
        </trans-unit>
        <trans-unit id="3f970d98aec528a6ba142bd7f71367f39e1e2733" translate="yes" xml:space="preserve">
          <source>But which one is correct, or best? I gather that there are security and browser support issues varying between them.</source>
          <target state="translated">但是,哪一个才是正确的,或者说是最好的?据我所知,安全和浏览器支持的问题各有不同。</target>
        </trans-unit>
        <trans-unit id="a7862d17b1831b09e9c86a63ea8a35f03b4eaaf4" translate="yes" xml:space="preserve">
          <source>By using this, the .aspx pages was compressed with g-zip but JSON responses were not. I added</source>
          <target state="translated">通过使用这个,.aspx页面用g-zip压缩了,但JSON响应没有被压缩。我添加了</target>
        </trans-unit>
        <trans-unit id="43077633e6f3d832f4eaafc3054cbedd8b5afab2" translate="yes" xml:space="preserve">
          <source>Even more strange is the Content-Type header sent by Flickr, who returns JSON as &lt;code&gt;text/xml&lt;/code&gt;. Google uses &lt;code&gt;text/javascript&lt;/code&gt; for some of it's ajax apis.</source>
          <target state="translated">更奇怪的是Flickr发送的Content-Type标头，后者返回JSON作为 &lt;code&gt;text/xml&lt;/code&gt; 。 Google对某些ajax API使用了 &lt;code&gt;text/javascript&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="27f83f6e7510dae5010fb91d09a7c49122c62e8c" translate="yes" xml:space="preserve">
          <source>Extending the accepted responses, when you are using JSON in a REST context...</source>
          <target state="translated">扩展接受的响应,当你在REST上下文中使用JSON时.....</target>
        </trans-unit>
        <trans-unit id="de2ced89dee9a26107e42e8aa2b8024940351dce" translate="yes" xml:space="preserve">
          <source>Firebug will add a tab to the response showing you the JSON data
formatted. If the MIME type is different, it will just show up as
'Response content'.</source>
          <target state="translated">Firebug会在响应中添加一个标签,显示JSON数据的格式。如果MIME类型不同,就会显示为 &quot;响应内容&quot;。</target>
        </trans-unit>
        <trans-unit id="a30d25b67f99dc20d57d21b477226c16d662dc1f" translate="yes" xml:space="preserve">
          <source>Following this reasoning, other contexts could justify a more specific &lt;em&gt;Content-Type&lt;/em&gt;.</source>
          <target state="translated">按照这种推理，其他上下文可以证明更具体的&lt;em&gt;Content-Type&lt;/em&gt;合理。</target>
        </trans-unit>
        <trans-unit id="e9df930f2e72c541f0f0eff19b649f6e2d851c7c" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;http://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt; (runnable javascript) with callback:</source>
          <target state="translated">对于&lt;a href=&quot;http://en.wikipedia.org/wiki/JSONP&quot;&gt;带回调的JSONP&lt;/a&gt; （可运行的javascript）：</target>
        </trans-unit>
        <trans-unit id="e45bb7efef6432ac0f53a602a8c635582cde2c6d" translate="yes" xml:space="preserve">
          <source>For JSON text:</source>
          <target state="translated">对于JSON文本。</target>
        </trans-unit>
        <trans-unit id="ea311b6f0a87bb493671d522a98083fbbd587cb7" translate="yes" xml:space="preserve">
          <source>For JSON, I am using:</source>
          <target state="translated">对于JSON,我使用的是。</target>
        </trans-unit>
        <trans-unit id="8fd1ea451a1ecbf8343ae785954eceeb85f24758" translate="yes" xml:space="preserve">
          <source>For example, I use &lt;a href=&quot;http://www.sencha.com/products/extgwt/&quot;&gt;Ext GWT&lt;/a&gt; and the server response must go as &lt;strong&gt;text/html&lt;/strong&gt; but contains JSON data.</source>
          <target state="translated">例如，我使用&lt;a href=&quot;http://www.sencha.com/products/extgwt/&quot;&gt;Ext GWT&lt;/a&gt; ，服务器响应必须为&lt;strong&gt;text / html，&lt;/strong&gt;但包含JSON数据。</target>
        </trans-unit>
        <trans-unit id="a5c843a8b4181106623391776dfd651237489e52" translate="yes" xml:space="preserve">
          <source>Here are some blog posts that were mentioned in the comments that are relevant.</source>
          <target state="translated">以下是评论中提到的一些相关的博文。</target>
        </trans-unit>
        <trans-unit id="1c7634417e4552c3590175f8e9d2e88241523be0" translate="yes" xml:space="preserve">
          <source>I experienced many situations where the browser type or the framework user needed:</source>
          <target state="translated">我经历过很多需要浏览器类型或框架用户的情况。</target>
        </trans-unit>
        <trans-unit id="704391717ec592c093ba4c3073e5cb22429bac32" translate="yes" xml:space="preserve">
          <source>I have seen &lt;em&gt;so&lt;/em&gt; many purported &quot;standards&quot; for the JSON content type:</source>
          <target state="translated">我已经看到许多所谓的JSON内容类型的&amp;ldquo;标准&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="62f8adc221cc4775991c1dd0ee2d766d511b6237" translate="yes" xml:space="preserve">
          <source>I know there's a similar question, &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/404470/what-mime-type-if-json-is-being-returned-by-a-rest-api&quot;&gt;What MIME type if JSON is being returned by a REST API?&lt;/a&gt;&lt;/em&gt;, but I'd like a slightly more targeted answer.</source>
          <target state="translated">我知道有一个类似的问题， &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/404470/what-mime-type-if-json-is-being-returned-by-a-rest-api&quot;&gt;如果REST API返回JSON，则为哪种MIME类型？&lt;/a&gt;&lt;/em&gt; ，但我想要一个更有针对性的答案。</target>
        </trans-unit>
        <trans-unit id="26e019bd0df54ae69d6358018a4bd27c72905a97" translate="yes" xml:space="preserve">
          <source>I use the below</source>
          <target state="translated">我用的是下面的方法</target>
        </trans-unit>
        <trans-unit id="4cfa69d4ecdba1eb406c2f420007b602590a1f5a" translate="yes" xml:space="preserve">
          <source>I use this code to put data in JSON on &lt;a href=&quot;https://stackoverflow.com/a/35738814/4058484&quot;&gt;&lt;em&gt;Google Cloud Storage (GCS)&lt;/em&gt;&lt;/a&gt; which is set &lt;a href=&quot;https://stackoverflow.com/a/38866924/4058484&quot;&gt;publically viewable&lt;/a&gt;:</source>
          <target state="translated">我使用此代码将数据以JSON格式放置在&lt;a href=&quot;https://stackoverflow.com/a/38866924/4058484&quot;&gt;可公开查看的&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/a/35738814/4058484&quot;&gt;&lt;em&gt;Google Cloud Storage（GCS）&lt;/em&gt;&lt;/a&gt;上：</target>
        </trans-unit>
        <trans-unit id="83ccc69b23c3356d7b0ee07a1031163c2ab025be" translate="yes" xml:space="preserve">
          <source>I've been messing around with &lt;a href=&quot;http://en.wikipedia.org/wiki/JSON&quot;&gt;JSON&lt;/a&gt; for some time, just pushing it out as text and it hasn't hurt anybody (that I know of), but I'd like to start doing things properly.</source>
          <target state="translated">我一直在弄乱&lt;a href=&quot;http://en.wikipedia.org/wiki/JSON&quot;&gt;JSON&lt;/a&gt;一段时间，只是将它作为文本推出，并没有伤害任何人（我知道），但是我想开始做正确的事情。</target>
        </trans-unit>
        <trans-unit id="2057e65ddcfb23c1268078bf07cb202e662529c8" translate="yes" xml:space="preserve">
          <source>If the JSON is with padding then it will be &lt;code&gt;application/jsonp&lt;/code&gt;. If the JSON is without padding then it will be &lt;code&gt;application/json&lt;/code&gt;.</source>
          <target state="translated">如果JSON带有填充，则它将为 &lt;code&gt;application/jsonp&lt;/code&gt; 。 如果JSON不带填充，则它将为 &lt;code&gt;application/json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18ae584c06c77d3349a25a497e95ae7aca644f72" translate="yes" xml:space="preserve">
          <source>If the server is using JSON to send the return object, then the &lt;code&gt;Content-Type&lt;/code&gt; header must be set to &lt;code&gt;text/html&lt;/code&gt; in order to tell the browser to insert the text unchanged into the document body.</source>
          <target state="translated">如果服务器使用JSON发送返回对象，则必须将 &lt;code&gt;Content-Type&lt;/code&gt; 标头设置为 &lt;code&gt;text/html&lt;/code&gt; ，以告知浏览器将未更改的文本插入文档主体。</target>
        </trans-unit>
        <trans-unit id="39f3bf03a1f08d63dfcf847d9fe88c5af065f629" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;http://en.wikipedia.org/wiki/Ext_JS&quot;&gt;Ext&amp;nbsp;JS&lt;/a&gt; form submit to upload file, be aware that the server response is parsed by the browser to create the document for the &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">如果您使用&lt;a href=&quot;http://en.wikipedia.org/wiki/Ext_JS&quot;&gt;Ext JS&lt;/a&gt;表单提交来上传文件，请注意，浏览器会解析服务器响应以创建 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 的文档。</target>
        </trans-unit>
        <trans-unit id="c6f7bdc8b79dcdb50bfa67d845ed5d59fb519149" translate="yes" xml:space="preserve">
          <source>If you are using Ubuntu or Debian and you serve .json files through Apache, you might want to serve the files with the correct content type. I am doing this primarily because I want to use the Firefox extension &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/10869/&quot;&gt;JSONView&lt;/a&gt;</source>
          <target state="translated">如果您使用的是Ubuntu或Debian，并且通过Apache提供.json文件，则可能需要提供具有正确内容类型的文件。 我这样做主要是因为我想使用Firefox扩展&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/10869/&quot;&gt;JSONView&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="409f23ca6b0ced2a393c1edef2947c2c741ba151" translate="yes" xml:space="preserve">
          <source>If you get data from REST API in JSON so you have to use content-type</source>
          <target state="translated">如果你从REST API中获取JSON格式的数据,那么你必须使用content-type</target>
        </trans-unit>
        <trans-unit id="b5acdaf16b789f7e9eca094df4e36f99623faaa8" translate="yes" xml:space="preserve">
          <source>If you're calling ASP.NET Web Services from the client-side you have to use &lt;code&gt;application/json&lt;/code&gt; for it to work. I believe this is the same for the &lt;a href=&quot;http://en.wikipedia.org/wiki/JQuery&quot;&gt;jQuery&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/Ext_%28JavaScript_library%29&quot;&gt;Ext&lt;/a&gt; frameworks.</source>
          <target state="translated">如果要从客户端调用ASP.NET Web服务，则必须使用 &lt;code&gt;application/json&lt;/code&gt; 使其正常工作。 我相信这对于&lt;a href=&quot;http://en.wikipedia.org/wiki/JQuery&quot;&gt;jQuery&lt;/a&gt;和&lt;a href=&quot;http://en.wikipedia.org/wiki/Ext_%28JavaScript_library%29&quot;&gt;Ext&lt;/a&gt;框架是相同的。</target>
        </trans-unit>
        <trans-unit id="9ef0951b055e41ab2ca3c00fb2589aad89e9a3df" translate="yes" xml:space="preserve">
          <source>If you're in a client-side environment, investigating about the cross-browser support is mandatory for a well supported web application.</source>
          <target state="translated">如果你是在客户端环境中,调查一下跨浏览器的支持是一个支持良好的Web应用的必修课。</target>
        </trans-unit>
        <trans-unit id="bde4cb239cd54918b15dd102b5b48df607d70698" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;http://en.wikipedia.org/wiki/JavaServer_Pages&quot;&gt;JSP&lt;/a&gt;, you can use this in page directive:</source>
          <target state="translated">在&lt;a href=&quot;http://en.wikipedia.org/wiki/JavaServer_Pages&quot;&gt;JSP中&lt;/a&gt; ，可以在page指令中使用此命令：</target>
        </trans-unit>
        <trans-unit id="7508be9173f0728f340df381cb89c60cdb0f04d5" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;http://en.wikipedia.org/wiki/Spring_Framework&quot;&gt;Spring&lt;/a&gt; you have a defined type: &lt;code&gt;MediaType.APPLICATION_JSON_VALUE&lt;/code&gt; which is equivalent to &lt;em&gt;application/json&lt;/em&gt;.</source>
          <target state="translated">在&lt;a href=&quot;http://en.wikipedia.org/wiki/Spring_Framework&quot;&gt;Spring中，&lt;/a&gt;您有一个定义的类型： &lt;code&gt;MediaType.APPLICATION_JSON_VALUE&lt;/code&gt; ，它等效于&lt;em&gt;application / json&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="e614f5aa289ee6297c999e4c0c66753e3a2e5599" translate="yes" xml:space="preserve">
          <source>In case of using &lt;strong&gt;application/json&lt;/strong&gt; response type, the browser suggests me to save the file.</source>
          <target state="translated">如果使用&lt;strong&gt;application / json&lt;/strong&gt;响应类型，浏览器建议我保存文件。</target>
        </trans-unit>
        <trans-unit id="2b8e0ea9204513444823e08bf93e89f100d6a77c" translate="yes" xml:space="preserve">
          <source>Internet&amp;nbsp;Explorer sometimes has issues with &lt;code&gt;application/json&lt;/code&gt;</source>
          <target state="translated">Internet Explorer有时与 &lt;code&gt;application/json&lt;/code&gt; 有关</target>
        </trans-unit>
        <trans-unit id="0388d290bf2c05273af541f94326e53ffddbde1b" translate="yes" xml:space="preserve">
          <source>JSON is a &lt;a href=&quot;http://en.wikipedia.org/wiki/Domain-specific_language&quot;&gt;domain-specific language&lt;/a&gt; (DSL) and a data format independent of JavaScript, and as such has its own &lt;a href=&quot;http://en.wikipedia.org/wiki/MIME&quot;&gt;MIME&lt;/a&gt; type, &lt;code&gt;application/json&lt;/code&gt;. Respect for MIME types is of course client driven, so &lt;code&gt;text/plain&lt;/code&gt; may do for transfer of bytes, but then you would be pushing up interpretation to the vendor application domain unnecessarily - &lt;code&gt;application/json&lt;/code&gt;. Would you transfer XML via &lt;code&gt;text/plain&lt;/code&gt;?</source>
          <target state="translated">JSON是一种&lt;a href=&quot;http://en.wikipedia.org/wiki/Domain-specific_language&quot;&gt;特定&lt;/a&gt;于域的语言 （DSL）和一种独立于JavaScript的数据格式，因此具有其自己的&lt;a href=&quot;http://en.wikipedia.org/wiki/MIME&quot;&gt;MIME&lt;/a&gt;类型 &lt;code&gt;application/json&lt;/code&gt; 。 对MIME类型的尊重当然是由客户端驱动的，因此 &lt;code&gt;text/plain&lt;/code&gt; 可能会传输字节，但是随后您将不必要地将解释推向供应商应用程序域-application &lt;code&gt;application/json&lt;/code&gt; 。 您会通过 &lt;code&gt;text/plain&lt;/code&gt; 传输XML吗？</target>
        </trans-unit>
        <trans-unit id="156fd9c7ea410524415df60a5cb1b41de44da575" translate="yes" xml:space="preserve">
          <source>JSON with padding.
Response is JSON data, with a function call wrapped around it.</source>
          <target state="translated">带padding的JSON。响应是JSON数据,周围有一个函数调用。</target>
        </trans-unit>
        <trans-unit id="0de7cc3b53c4a73afb24046c77d790906ba907be" translate="yes" xml:space="preserve">
          <source>Media Types</source>
          <target state="translated">媒体类型</target>
        </trans-unit>
        <trans-unit id="4c7024b22c3cf272016bef3c929b0222480ed8d5" translate="yes" xml:space="preserve">
          <source>More resources:</source>
          <target state="translated">更多的资源。</target>
        </trans-unit>
        <trans-unit id="6df4f61cd6866c9a408140ccd9ebaa6d0870822c" translate="yes" xml:space="preserve">
          <source>No browser runtime I know of will take a JSON document and automatically make it available to the runtime as a JavaScript accessible object without intervention, but if you are working with a crippled client, that's an entirely different matter. But that's not the whole story- &lt;a href=&quot;http://en.wikipedia.org/wiki/Representational_state_transfer#RESTful_web_services&quot;&gt;RESTful&lt;/a&gt; JSON services often don't have JavaScript runtimes, but it doesn't stop them using JSON as a viable data interchange format. If clients are that crippled... then I would consider perhaps HTML injection via an &lt;a href=&quot;http://en.wikipedia.org/wiki/Ajax_%28programming%29&quot;&gt;Ajax&lt;/a&gt; templating service instead.</source>
          <target state="translated">据我所知，没有浏览器运行时会使用JSON文档并自动将其作为JavaScript可访问对象自动提供给运行时，而无需干预，但是如果您使用的是残废的客户端，那就完全不同了。 但这还不是全部-RESTful JSON服务通常没有JavaScript运行时，但并不能阻止使用JSON作为可行的数据交换格式。 如果客户端瘫痪了&amp;hellip;&amp;hellip;那么我可能会考虑通过&lt;a href=&quot;http://en.wikipedia.org/wiki/Ajax_%28programming%29&quot;&gt;Ajax&lt;/a&gt;模板服务进行HTML注入。</target>
        </trans-unit>
        <trans-unit id="410777f25936e753931984c29d6cb29c45ae1a4b" translate="yes" xml:space="preserve">
          <source>No more warnings from Chrome when the JSON is loaded from the server.</source>
          <target state="translated">当从服务器加载JSON时,不再有来自Chrome浏览器的警告。</target>
        </trans-unit>
        <trans-unit id="5d29142357f1985ae5aba0943c0be0dd2db48dd3" translate="yes" xml:space="preserve">
          <source>Not everything works for content type &lt;code&gt;application/json&lt;/code&gt;.</source>
          <target state="translated">并非所有内容都适用于内容类型 &lt;code&gt;application/json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="915cd14c0933640193878f972f250615d2e9bfa9" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;text/javascript&lt;/code&gt; has been marked as obsolete by &lt;a href=&quot;http://www.rfc-editor.org/rfc/rfc4329.txt&quot;&gt;RFC 4329&lt;/a&gt; (Scripting Media Types) document and it is recommended to use &lt;code&gt;application/javascript&lt;/code&gt; type instead. However, due to legacy reasons, &lt;code&gt;text/javascript&lt;/code&gt; is still widely used and it has cross-browser support (which is not always a case with &lt;code&gt;application/javascript&lt;/code&gt; MIME type, especially with older browsers).</source>
          <target state="translated">请注意， &lt;a href=&quot;http://www.rfc-editor.org/rfc/rfc4329.txt&quot;&gt;RFC 4329&lt;/a&gt; （脚本媒体类型）文档已将 &lt;code&gt;text/javascript&lt;/code&gt; 标为过时，建议改用 &lt;code&gt;application/javascript&lt;/code&gt; 类型。 但是，由于遗留原因， &lt;code&gt;text/javascript&lt;/code&gt; 仍被广泛使用，并且具有跨浏览器支持（ &lt;code&gt;application/javascript&lt;/code&gt; MIME类型并不总是这样，尤其是对于较旧的浏览器）。</target>
        </trans-unit>
        <trans-unit id="12b5af28fc0f724ecc1cc85465bfe46899929ce6" translate="yes" xml:space="preserve">
          <source>Of course, the correct MIME media type for JSON is &lt;code&gt;application/json&lt;/code&gt;, but it's necessary to realize what type of data is expected in your application.</source>
          <target state="translated">当然，JSON的正确MIME媒体类型是 &lt;code&gt;application/json&lt;/code&gt; ，但是有必要认识到应用程序中期望的数据类型。</target>
        </trans-unit>
        <trans-unit id="0ec988b59b620d39a7bcfb76f84c3dab512b7510" translate="yes" xml:space="preserve">
          <source>Only when using &lt;code&gt;application/json&lt;/code&gt; as the &lt;a href=&quot;http://en.wikipedia.org/wiki/MIME&quot;&gt;MIME&lt;/a&gt; type I have the following (as of November 2011 with the most recent versions of Chrome, Firefox with &lt;a href=&quot;http://en.wikipedia.org/wiki/Firebug_%28software%29&quot;&gt;Firebug&lt;/a&gt;):</source>
          <target state="translated">仅当使用 &lt;code&gt;application/json&lt;/code&gt; 作为&lt;a href=&quot;http://en.wikipedia.org/wiki/MIME&quot;&gt;MIME&lt;/a&gt;类型时，我才具有以下内容（截至2011年11月，使用最新版本的Chrome，Firefox和&lt;a href=&quot;http://en.wikipedia.org/wiki/Firebug_%28software%29&quot;&gt;Firebug&lt;/a&gt; ）：</target>
        </trans-unit>
        <trans-unit id="af9c86f64894dc54f9915e620f3a56df97546db7" translate="yes" xml:space="preserve">
          <source>Output: &lt;code&gt;Content-Type: text/javascript&lt;/code&gt;</source>
          <target state="translated">输出： &lt;code&gt;Content-Type: text/javascript&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="22f1f2f72fbdaa13a603c513adc6f9ccd9eae787" translate="yes" xml:space="preserve">
          <source>Output: &lt;code&gt;Content-Type: text/xml&lt;/code&gt;</source>
          <target state="translated">输出： &lt;code&gt;Content-Type: text/xml&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8e6b274cfe72d91f63a1a9341e56f2646485cab6" translate="yes" xml:space="preserve">
          <source>PHP developers use this:</source>
          <target state="translated">PHP开发人员使用这个。</target>
        </trans-unit>
        <trans-unit id="634a66bc06a59526ccc480921778b47898f04a30" translate="yes" xml:space="preserve">
          <source>Request for Comments 4627</source>
          <target state="translated">征求意见 4627</target>
        </trans-unit>
        <trans-unit id="7871d7aa8f3ca24ff1baa153cdd36138f01e9462" translate="yes" xml:space="preserve">
          <source>Response is dynamically generated data, according to the query parameters passed in the URL.</source>
          <target state="translated">响应是动态生成的数据,根据URL中传递的查询参数动态生成的数据。</target>
        </trans-unit>
        <trans-unit id="0aae10cc6919dab45a4037486286ff775242918b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://dev.sencha.com/deploy/ext-3.4.0/docs/&quot;&gt;the Ext JS 3.4.0 API documentation&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;http://dev.sencha.com/deploy/ext-3.4.0/docs/&quot;&gt;Ext JS 3.4.0 API文档&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd19bcd6fff1357ea793aa42d01edf6c9ac329e0" translate="yes" xml:space="preserve">
          <source>So whenever in any doubts, I have a very simple approach (which works perfectly fine in most cases), namely, go and check corresponding RFC document.</source>
          <target state="translated">因此,每当有任何疑问,我有一个非常简单的方法(在大多数情况下都很好用),就是去检查相应的RFC文档。</target>
        </trans-unit>
        <trans-unit id="84bfc70f56ce853abc622ce6c4d8147e9a6a0850" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.iana.org/assignments/media-types/application/json&quot;&gt;IANA registration for &lt;code&gt;application/json&lt;/code&gt;&lt;/a&gt; says</source>
          <target state="translated">&lt;a href=&quot;http://www.iana.org/assignments/media-types/application/json&quot;&gt;IANA注册 &lt;code&gt;application/json&lt;/code&gt; &lt;/a&gt;说</target>
        </trans-unit>
        <trans-unit id="a8429b24dd4b1fe7f62b0e732f8254adfa99533c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;application/json&lt;/code&gt; works great in PHP to store an array or object
  data.</source>
          <target state="translated">&lt;code&gt;application/json&lt;/code&gt; 在PHP中可很好地用于存储数组或对象数据。</target>
        </trans-unit>
        <trans-unit id="da31e36b895527176f1a20efb752a74b57b23178" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Content-Type&lt;/strong&gt; header should be set to '&lt;strong&gt;application/json&lt;/strong&gt;' when posting. Server listening for the request should include &quot;&lt;strong&gt;Accept=application/json&lt;/strong&gt;&quot;.
In Spring MVC you can do it like this:</source>
          <target state="translated">发布时， &lt;strong&gt;Content-Type&lt;/strong&gt;标头应设置为' &lt;strong&gt;application / json&lt;/strong&gt; '。 侦听请求的服务器应包含&amp;ldquo; &lt;strong&gt;Accept = application / json&lt;/strong&gt; &amp;rdquo;。 在Spring MVC中，您可以这样做：</target>
        </trans-unit>
        <trans-unit id="aef275f80fd215364309332f25354edff8e6aff5" translate="yes" xml:space="preserve">
          <source>The Apache module &lt;a href=&quot;http://httpd.apache.org/docs/current/mod/mod_mime.html&quot;&gt;mod_mime&lt;/a&gt; will help to do this easily. However, with Ubuntu you need to edit the file &lt;em&gt;/etc/mime.types&lt;/em&gt; and add the line</source>
          <target state="translated">Apache模块&lt;a href=&quot;http://httpd.apache.org/docs/current/mod/mod_mime.html&quot;&gt;mod_mime&lt;/a&gt;将帮助您轻松完成此任务。 但是，在Ubuntu中，您需要编辑文件&lt;em&gt;/etc/mime.types&lt;/em&gt;并添加以下行</target>
        </trans-unit>
        <trans-unit id="79e5034397ea9de0ad78f533771c69814f945eb2" translate="yes" xml:space="preserve">
          <source>The MIME media type for JSON text is &lt;strong&gt;&lt;code&gt;application/json&lt;/code&gt;&lt;/strong&gt;. The default encoding is UTF-8. (Source: &lt;a href=&quot;http://www.ietf.org/rfc/rfc4627.txt&quot;&gt;RFC 4627&lt;/a&gt;).</source>
          <target state="translated">JSON文本的MIME媒体类型为&lt;strong&gt; &lt;code&gt;application/json&lt;/code&gt; &lt;/strong&gt; 。 默认编码为UTF-8。 （来源： &lt;a href=&quot;http://www.ietf.org/rfc/rfc4627.txt&quot;&gt;RFC 4627&lt;/a&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0d8c8b3be58560117b1abc06ce478f1ee85e5174" translate="yes" xml:space="preserve">
          <source>The correct &lt;a href=&quot;http://en.wikipedia.org/wiki/MIME&quot;&gt;MIME&lt;/a&gt; media type for JSON is &lt;code&gt;application/json&lt;/code&gt;.  JSP will use it for sending a response to the client.</source>
          <target state="translated">JSON的正确&lt;a href=&quot;http://en.wikipedia.org/wiki/MIME&quot;&gt;MIME&lt;/a&gt;媒体类型是 &lt;code&gt;application/json&lt;/code&gt; 。 JSP将使用它向客户端发送响应。</target>
        </trans-unit>
        <trans-unit id="6917931f259b3ea3d2c3143d305dd0fc12799498" translate="yes" xml:space="preserve">
          <source>The correct answer is:</source>
          <target state="translated">正确的答案是。</target>
        </trans-unit>
        <trans-unit id="b7eb66e0c2a000ccc4aad53cc232fb55acb6e81a" translate="yes" xml:space="preserve">
          <source>The most widely supported non-standard media types are &lt;code&gt;text/json&lt;/code&gt; or &lt;code&gt;text/javascript&lt;/code&gt;. But some big names even use &lt;code&gt;text/plain&lt;/code&gt;.</source>
          <target state="translated">支持最广泛的非标准媒体​​类型是 &lt;code&gt;text/json&lt;/code&gt; 或 &lt;code&gt;text/javascript&lt;/code&gt; 。 但是一些大牌甚至使用 &lt;code&gt;text/plain&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c18a1398b41bbd26c49be013b59625011555e11" translate="yes" xml:space="preserve">
          <source>The right HTTP Content-Type would be &lt;code&gt;application/json&lt;/code&gt;, as others already highlighted too, but some clients do not handle it very well, that's why jQuery recommends the default &lt;code&gt;text/html&lt;/code&gt;.</source>
          <target state="translated">正确的HTTP Content-Type将是 &lt;code&gt;application/json&lt;/code&gt; ，就像其他人已经强调过的那样，但是某些客户端不能很好地处理它，这就是jQuery建议使用默认 &lt;code&gt;text/html&lt;/code&gt; 的原因 。</target>
        </trans-unit>
        <trans-unit id="a547edeab94817456d8e51bbfe90e8a41bcacf14" translate="yes" xml:space="preserve">
          <source>The right MIME type is &lt;strong&gt;&lt;code&gt;application/json&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">正确的MIME类型是&lt;strong&gt; &lt;code&gt;application/json&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c77cab5024ce593d7f368bd5f5de8565c8950e5e" translate="yes" xml:space="preserve">
          <source>The right content type for JSON is &lt;code&gt;application/json&lt;/code&gt; UNLESS you're using &lt;a href=&quot;http://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt;, also known as JSON with Padding, which is actually JavaScript and so the right content type would be &lt;code&gt;application/javascript&lt;/code&gt;.</source>
          <target state="translated">JSON的正确内容类型是 &lt;code&gt;application/json&lt;/code&gt; ,除非您使用&lt;a href=&quot;http://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt; ，也称为JSON与Padding，实际上是JavaScript，因此正确的内容类型将是 &lt;code&gt;application/javascript&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="324d2e677fca0304e70d97619ad530d92465356f" translate="yes" xml:space="preserve">
          <source>Then restart Apache:</source>
          <target state="translated">然后重启Apache。</target>
        </trans-unit>
        <trans-unit id="cd27749de206bb4613c277bcefafd7f5fd9d15e5" translate="yes" xml:space="preserve">
          <source>There is a &lt;a href=&quot;http://restful-api-design.readthedocs.org/en/latest/resources.html#content-types&quot;&gt;strong argument&lt;/a&gt; about using &lt;code&gt;application/x-resource+json&lt;/code&gt; and &lt;code&gt;application/x-collection+json&lt;/code&gt; when you are representing REST resources and collections.</source>
          <target state="translated">在代表REST资源和集合时，有一个关于使用 &lt;code&gt;application/x-resource+json&lt;/code&gt; 和 &lt;code&gt;application/x-collection+json&lt;/code&gt; 的&lt;a href=&quot;http://restful-api-design.readthedocs.org/en/latest/resources.html#content-types&quot;&gt;强烈争论&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ef236b1fe2e5e60a2ba300550d10e9660862cc0" translate="yes" xml:space="preserve">
          <source>There is no doubt that &lt;code&gt;application/json&lt;/code&gt; is the best &lt;a href=&quot;http://en.wikipedia.org/wiki/MIME&quot;&gt;MIME&lt;/a&gt; type for a JSON response.</source>
          <target state="translated">毫无疑问， &lt;code&gt;application/json&lt;/code&gt; 是JSON响应的最佳&lt;a href=&quot;http://en.wikipedia.org/wiki/MIME&quot;&gt;MIME&lt;/a&gt;类型。</target>
        </trans-unit>
        <trans-unit id="886f2ac21a70fb71598739b19f73decaa306e750" translate="yes" xml:space="preserve">
          <source>This is described in the IETF's JSON Data Interchange Format 7158 proposal, &lt;a href=&quot;http://tools.ietf.org/html/rfc7158#section-1.2&quot;&gt;Section 1.2: Specifications of JSON&lt;/a&gt;.</source>
          <target state="translated">在IETF的JSON数据交换格式7158提案的&lt;a href=&quot;http://tools.ietf.org/html/rfc7158#section-1.2&quot;&gt;第1.2节：JSON规范中&lt;/a&gt;对此进行了描述。</target>
        </trans-unit>
        <trans-unit id="4f366479c81ad702fdb9a4f6a8c3c02e84db44ff" translate="yes" xml:space="preserve">
          <source>To deal with both, it is a good practice to use: 'application/javascript' without bothering whether it is with padding or without padding.</source>
          <target state="translated">要处理好这两个问题,使用:'applicationjavascript',而不去管它是带padding还是不带padding。</target>
        </trans-unit>
        <trans-unit id="81303554f5876fd744f284d513dc92e7eeed3241" translate="yes" xml:space="preserve">
          <source>To get back the data is straight forward:</source>
          <target state="translated">要拿回数据是直接的。</target>
        </trans-unit>
        <trans-unit id="1411b899e3ea557fa0463160225ee2fb5500166b" translate="yes" xml:space="preserve">
          <source>What is the correct JSON content type</source>
          <target state="translated">什么是正确的JSON内容类型</target>
        </trans-unit>
        <trans-unit id="79f16311e12c2d9e7fbb1afa22962451b4b60bc5" translate="yes" xml:space="preserve">
          <source>When asked about why not &lt;code&gt;text/json&lt;/code&gt;, Crockford seems to have said JSON is not really JavaScript nor text and also IANA was more likely to hand out &lt;code&gt;application/*&lt;/code&gt; than &lt;code&gt;text/*&lt;/code&gt;.</source>
          <target state="translated">当被问及为什么不是 &lt;code&gt;text/json&lt;/code&gt; 时 ，Crockford似乎说JSON并不是JavaScript也不是text，而且IANA比 &lt;code&gt;text/*&lt;/code&gt; 更可能分发 &lt;code&gt;application/*&lt;/code&gt; / * 。</target>
        </trans-unit>
        <trans-unit id="20d484edce87770e9fe2266d20eb15a44212e3cf" translate="yes" xml:space="preserve">
          <source>Why you shouldn't use &lt;code&gt;text/html&lt;/code&gt; for JSON</source>
          <target state="translated">为什么不应该将 &lt;code&gt;text/html&lt;/code&gt; 用于JSON</target>
        </trans-unit>
        <trans-unit id="0d17b0660e8dad871e7b7e63b3918bd5b6508796" translate="yes" xml:space="preserve">
          <source>You'll notice that IANA.org &lt;a href=&quot;http://www.iana.org/assignments/media-types/media-types.xhtml&quot;&gt;doesn't list any of these other media types&lt;/a&gt;, in fact even &lt;code&gt;application/javascript&lt;/code&gt; is now obsolete. So &lt;code&gt;application/json&lt;/code&gt; is really the only possible &lt;em&gt;correct&lt;/em&gt; answer.</source>
          <target state="translated">您会注意到IANA.org &lt;a href=&quot;http://www.iana.org/assignments/media-types/media-types.xhtml&quot;&gt;没有列出任何其他这些媒体类型&lt;/a&gt; ，实际上甚至 &lt;code&gt;application/javascript&lt;/code&gt; 现在已经过时了。 因此， &lt;code&gt;application/json&lt;/code&gt; 实际上是唯一可能的&lt;em&gt;正确&lt;/em&gt;答案。</target>
        </trans-unit>
        <trans-unit id="91103deca116df988990c11012f9ee6919aef5b3" translate="yes" xml:space="preserve">
          <source>bluesmoon: JSON has a type</source>
          <target state="translated">bluesmoon。JSON有一个类型</target>
        </trans-unit>
        <trans-unit id="800c3b37c9d66cc20139a3f66d1f6989753950a3" translate="yes" xml:space="preserve">
          <source>in both the static and dynamic types sections, and changed the response type in</source>
          <target state="translated">中的静态和动态类型部分中的响应类型,并在</target>
        </trans-unit>
        <trans-unit id="d5ff5b720b6b969032368d457de6b6043dd9e3b2" translate="yes" xml:space="preserve">
          <source>in the static and dynamic types sections. &lt;strong&gt;But this does not compress JSON responses at all.&lt;/strong&gt;</source>
          <target state="translated">在静态和动态类型部分中。 &lt;strong&gt;但这根本不会压缩JSON响应。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7b998c9f5da8fd39d4c4112ca1d62e01ef228384" translate="yes" xml:space="preserve">
          <source>only if you want to compress your JSON responses on a &lt;strong&gt;shared hosting environment&lt;/strong&gt;. Because in shared hosting, they do not allow you to change &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Information_Services&quot;&gt;IIS&lt;/a&gt; configurations.</source>
          <target state="translated">仅当您要在&lt;strong&gt;共享托管环境&lt;/strong&gt;上压缩JSON响应时。 因为在共享主机中，它们不允许您更改&lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Information_Services&quot;&gt;IIS&lt;/a&gt;配置。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
