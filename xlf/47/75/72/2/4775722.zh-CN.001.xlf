<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/4775722">
    <body>
      <group id="4775722">
        <trans-unit id="07e018d5ccf16aed96a3d0ff94f9994435537644" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray&quot;&gt;Supported by&lt;/a&gt; Chrome 5, Firefox 4.0, IE 9, Opera 10.5 and Safari 5)</source>
          <target state="translated">（ &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray&quot;&gt;受&lt;/a&gt; Chrome 5，Firefox 4.0，IE 9，Opera 10.5和Safari 5支持）</target>
        </trans-unit>
        <trans-unit id="74e7790243f9e3e5d9e2041e450881ddc66265fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.prototype.toString.call(arr) === '[object Array]'&lt;/code&gt;, or</source>
          <target state="translated">&lt;code&gt;Object.prototype.toString.call(arr) === '[object Array]'&lt;/code&gt; ，或</target>
        </trans-unit>
        <trans-unit id="33295c9a31b3e9a12fb3adb6e0f6bf48ec7a1cba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;concat&lt;/code&gt; seems to be one of the oldest methods of Array (even IE 5.5 knows it well).</source>
          <target state="translated">&lt;code&gt;concat&lt;/code&gt; 似乎是Array中最古老的方法之一（即使IE 5.5也很清楚）。</target>
        </trans-unit>
        <trans-unit id="e3f44af8638a0b21173aa87957c112c3ef49fad0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; A pitfall of this approach is that it &lt;a href=&quot;http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/&quot;&gt;wont work across &lt;code&gt;iframe&lt;/code&gt; boundaries&lt;/a&gt;, but for my use case this is not an issue.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;这种方法的一个缺陷是它&lt;a href=&quot;http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/&quot;&gt;无法跨 &lt;code&gt;iframe&lt;/code&gt; 边界工作&lt;/a&gt; ，但是对于我的用例来说，这不是问题。</target>
        </trans-unit>
        <trans-unit id="a6c17a9f33a932e199f25620ce677891dd72e670" translate="yes" xml:space="preserve">
          <source>A simple function for testing if an input value is an array is the following:</source>
          <target state="translated">一个测试输入值是否为数组的简单函数如下。</target>
        </trans-unit>
        <trans-unit id="3f74c681968dbb15b16f22b96ac1b58b9b61251c" translate="yes" xml:space="preserve">
          <source>Angular:</source>
          <target state="translated">Angular:</target>
        </trans-unit>
        <trans-unit id="f846ee5ba0d3e12640d3f52fd52926f6d3718a5d" translate="yes" xml:space="preserve">
          <source>Array.isArray works fast, but it isn't supported by all versions of browsers.
So you could make an exception for others and use universal method:</source>
          <target state="translated">Array.isArray的工作速度很快,但并不是所有版本的浏览器都支持。所以你可以为其他版本的浏览器做一个例外,使用通用方法。</target>
        </trans-unit>
        <trans-unit id="a051031adb7503a1b31ff71ed6658e09ae91f651" translate="yes" xml:space="preserve">
          <source>As MDN says &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/typeof#Normal_cases&quot;&gt;in here&lt;/a&gt;:</source>
          <target state="translated">正如MDN &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/typeof#Normal_cases&quot;&gt;在这里&lt;/a&gt;所说：</target>
        </trans-unit>
        <trans-unit id="b01846c8c7e4eefe6a12b73f21a6f5970c42a64f" translate="yes" xml:space="preserve">
          <source>By the way, if you are using jQuery, you can use it's method &lt;a href=&quot;http://api.jquery.com/jQuery.isArray/&quot;&gt;$.isArray()&lt;/a&gt;</source>
          <target state="translated">顺便说一句，如果您使用的是jQuery，则可以使用它的方法&lt;a href=&quot;http://api.jquery.com/jQuery.isArray/&quot;&gt;$ .isArray（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff3127d51e5831e1600de0b3afcc22b588c93e62" translate="yes" xml:space="preserve">
          <source>Check out a &lt;a href=&quot;http://blog.niftysnippets.org/2010/09/say-what.html&quot;&gt;thorough treatment&lt;/a&gt; from &lt;a href=&quot;https://stackoverflow.com/users/157247/t-j-crowder&quot;&gt;@T.J. Crowder's&lt;/a&gt; blog, as posted in his comment below.</source>
          <target state="translated">请查看&lt;a href=&quot;https://stackoverflow.com/users/157247/t-j-crowder&quot;&gt;@TJ Crowder&lt;/a&gt;博客的&lt;a href=&quot;http://blog.niftysnippets.org/2010/09/say-what.html&quot;&gt;详细处理方法&lt;/a&gt; ，如下面他的评论中所述。</target>
        </trans-unit>
        <trans-unit id="c69b6714309a51e13511669b236cc55c3585bc7b" translate="yes" xml:space="preserve">
          <source>Check out this &lt;a href=&quot;http://jsben.ch/#/QgYAV&quot;&gt;benchmark&lt;/a&gt; to get an idea which method performs better: &lt;a href=&quot;http://jsben.ch/#/QgYAV&quot;&gt;http://jsben.ch/#/QgYAV&lt;/a&gt;</source>
          <target state="translated">查看此&lt;a href=&quot;http://jsben.ch/#/QgYAV&quot;&gt;基准&lt;/a&gt;以了解哪种方法效果更好： &lt;a href=&quot;http://jsben.ch/#/QgYAV&quot;&gt;http&lt;/a&gt; : //jsben.ch/#/QgYAV</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">扩展片段</target>
        </trans-unit>
        <trans-unit id="76e9a39031ab0a6aa5ff51fcffa8a200537bee40" translate="yes" xml:space="preserve">
          <source>For backward compatibility you can add the following</source>
          <target state="translated">为了向后兼容,你可以添加以下内容</target>
        </trans-unit>
        <trans-unit id="94f1e6e76abf2087be71816835fc6dfdf668ce13" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://stackoverflow.com/users/8432239/bharath?tab=profile&quot;&gt;@Bharath&lt;/a&gt; convert string to array using Es6 for the question asked:</source>
          <target state="translated">从&lt;a href=&quot;https://stackoverflow.com/users/8432239/bharath?tab=profile&quot;&gt;@Bharath&lt;/a&gt;使用Es6将字符串转换为数组以解决以下问题：</target>
        </trans-unit>
        <trans-unit id="48a9062fba5c5e38b2f6f5ed248e9fc364fb1ec1" translate="yes" xml:space="preserve">
          <source>Here's my lazy approach:</source>
          <target state="translated">下面是我的偷懒方法。</target>
        </trans-unit>
        <trans-unit id="6f9dd24ea6fa2970354580e5554b5592985ccde1" translate="yes" xml:space="preserve">
          <source>How to check if an object is an array</source>
          <target state="translated">如何检查对象是否是一个数组</target>
        </trans-unit>
        <trans-unit id="94fdc208acf113ff0982c9da41182f258187b870" translate="yes" xml:space="preserve">
          <source>I do this in a very simple way. Works for me. Any drawbacks?</source>
          <target state="translated">我这样做的方法很简单。对我来说很管用。有什么缺点吗?</target>
        </trans-unit>
        <trans-unit id="9a0896f410b02f8d9a570599b9f1485672758eaf" translate="yes" xml:space="preserve">
          <source>I have updated the &lt;a href=&quot;http://jsperf.com/check-isarray/3&quot;&gt;jsperf fiddle&lt;/a&gt; with two alternative methods as well as error checking.</source>
          <target state="translated">我用两种替代方法以及错误检查更新了&lt;a href=&quot;http://jsperf.com/check-isarray/3&quot;&gt;jsperf小提琴&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c9ab3262037f6f97a8354eeedc053f7d74744c6" translate="yes" xml:space="preserve">
          <source>I know it's sacrilege to &quot;mess with&quot; the prototype, but &lt;a href=&quot;http://jsperf.com/isarray-approaches&quot;&gt;it appears to perform significantly better than the recommended &lt;code&gt;toString&lt;/code&gt; method&lt;/a&gt;.</source>
          <target state="translated">我知道它&amp;ldquo;牺牲&amp;rdquo;了原型，但是&lt;a href=&quot;http://jsperf.com/isarray-approaches&quot;&gt;它的性能似乎比推荐的 &lt;code&gt;toString&lt;/code&gt; 方法好得多&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="aefd6bb95422a138a0e1c2f092f8541139f998dd" translate="yes" xml:space="preserve">
          <source>I know, that people are looking for some kind of raw javascript approach.
But if you want think less about, take a look here: &lt;a href=&quot;http://underscorejs.org/#isArray&quot;&gt;http://underscorejs.org/#isArray&lt;/a&gt;</source>
          <target state="translated">我知道，人们正在寻找某种原始的javascript方法。 但是，如果您想少考虑一下，请看这里： &lt;a href=&quot;http://underscorejs.org/#isArray&quot;&gt;http&lt;/a&gt; : //underscorejs.org/#isArray</target>
        </trans-unit>
        <trans-unit id="6f3dbf22b95fa955fff05f6555afb263e428389d" translate="yes" xml:space="preserve">
          <source>I would first check if your implementation supports &lt;code&gt;isArray&lt;/code&gt;:</source>
          <target state="translated">我将首先检查您的实现是否支持 &lt;code&gt;isArray&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="85209d5833715b56d9f178c9ad70aa7160aa4604" translate="yes" xml:space="preserve">
          <source>I would make a function to test the type of object you are dealing with...</source>
          <target state="translated">我想做一个函数来测试你所处理的对象类型.....</target>
        </trans-unit>
        <trans-unit id="94ec18f71376de60ef52b1eca44d596f9ac8dfdf" translate="yes" xml:space="preserve">
          <source>I'm trying to write a function that either accepts a list of strings, or a single string. If it's a string, then I want to convert it to an array with just the one item, so I can loop over it without fear of an error.</source>
          <target state="translated">我想写一个函数,它可以接受一个字符串列表,也可以接受单个字符串。如果是一个字符串,那么我想把它转换为一个数组,只接受一个项目,这样我就可以在它上面循环,而不用担心出错。</target>
        </trans-unit>
        <trans-unit id="5b705c5f49328ec635221750e842052db2e88770" translate="yes" xml:space="preserve">
          <source>I've rounded up the various solutions below and created a &lt;a href=&quot;https://jsperf.com/js-isarray-comparison/16&quot;&gt;jsperf test&lt;/a&gt;. They're all fast, so just use &lt;code&gt;Array.isArray&lt;/code&gt; -- it's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray#Browser_compatibility&quot;&gt;well-supported&lt;/a&gt; now and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray#instanceof_vs_isArray&quot;&gt;works across frames&lt;/a&gt;.</source>
          <target state="translated">我整理了以下各种解决方案，并创建了&lt;a href=&quot;https://jsperf.com/js-isarray-comparison/16&quot;&gt;jsperf测试&lt;/a&gt; 。 它们都非常快，因此只需使用 &lt;code&gt;Array.isArray&lt;/code&gt; －现在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray#Browser_compatibility&quot;&gt;得到&lt;/a&gt;了很好的支持，并且&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray#instanceof_vs_isArray&quot;&gt;可以跨框架使用&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="752ae6571d4b1bf40a5a2d875e80374466bcec8b" translate="yes" xml:space="preserve">
          <source>I've used &lt;code&gt;Array.isArray&lt;/code&gt; here because it's the &lt;a href=&quot;http://web.mit.edu/jwalden/www/isArray.html&quot;&gt;most robust&lt;/a&gt; and also simplest.</source>
          <target state="translated">我在这里使用了 &lt;code&gt;Array.isArray&lt;/code&gt; ，因为它是&lt;a href=&quot;http://web.mit.edu/jwalden/www/isArray.html&quot;&gt;最健壮&lt;/a&gt;和最简单的。</target>
        </trans-unit>
        <trans-unit id="779ffbcbc7853d6f795caeb0e14377fb86654677" translate="yes" xml:space="preserve">
          <source>If the only two kinds of values that could be passed to this function are a string or an array of strings, keep it simple and use a &lt;code&gt;typeof&lt;/code&gt; check for the string possibility:</source>
          <target state="translated">如果可以传递给此函数的仅有两种值是字符串或字符串数​​组，请保持简单并使用 &lt;code&gt;typeof&lt;/code&gt; 检查字符串的可能性：</target>
        </trans-unit>
        <trans-unit id="ea5fbb37dccb7ed8f52025ebe32b5b6fb4300011" translate="yes" xml:space="preserve">
          <source>If you don't need to detect arrays created in different frames you can also just use &lt;code&gt;instanceof&lt;/code&gt;</source>
          <target state="translated">如果您不需要检测在不同框架中创建的数组，则也可以使用 &lt;code&gt;instanceof&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26271a5e7d4e9864263a4e3c9bd58c0308af2011" translate="yes" xml:space="preserve">
          <source>If you use jQuery you can use &lt;code&gt;jQuery.isArray(obj)&lt;/code&gt; or &lt;code&gt;$.isArray(obj)&lt;/code&gt;. If you use underscore you can use &lt;code&gt;_.isArray(obj)&lt;/code&gt;</source>
          <target state="translated">如果使用jQuery，则可以使用 &lt;code&gt;jQuery.isArray(obj)&lt;/code&gt; 或 &lt;code&gt;$.isArray(obj)&lt;/code&gt; 。 如果使用下划线，则可以使用 &lt;code&gt;_.isArray(obj)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f581ac945f210cd38ecc987deb34b690f79f529f" translate="yes" xml:space="preserve">
          <source>Imagine you have this &lt;strong&gt;array below&lt;/strong&gt;:</source>
          <target state="translated">假设您在&lt;strong&gt;下面&lt;/strong&gt;有这个&lt;strong&gt;数组&lt;/strong&gt; ：</target>
        </trans-unit>
        <trans-unit id="31d0ad019ebd86170b983eb38080c5a14d030028" translate="yes" xml:space="preserve">
          <source>In modern browsers you can do</source>
          <target state="translated">在现代浏览器中,你可以做到</target>
        </trans-unit>
        <trans-unit id="843db793a8c23cfc0c73ad9760082e1b52f8e09f" translate="yes" xml:space="preserve">
          <source>In search for shortest version here is what I got so far.</source>
          <target state="translated">在寻找最短的版本,这是我到目前为止所得到的。</target>
        </trans-unit>
        <trans-unit id="32442eebf28158b97278ed53d6aa3e9d235ae3e7" translate="yes" xml:space="preserve">
          <source>In your case you may use &lt;code&gt;concat&lt;/code&gt; method of &lt;a href=&quot;https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt;Array&lt;/a&gt; which can accept single objects as well as array (and even combined):</source>
          <target state="translated">在您的情况下，您可以使用&lt;a href=&quot;https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt;Array的&lt;/a&gt; &lt;code&gt;concat&lt;/code&gt; 方法，该方法可以接受单个对象以及数组（甚至可以合并）：</target>
        </trans-unit>
        <trans-unit id="32a4427311d2ed2fad4cf8b75978f9f98f58dfef" translate="yes" xml:space="preserve">
          <source>It gets rid of the if/else, and accounts for the possibility of the array being null or undefined</source>
          <target state="translated">它摆脱了ifelse,并考虑到数组可能为空或未定义的可能性。</target>
        </trans-unit>
        <trans-unit id="98d4763a49c632574873a9142b3d7d97b66b557f" translate="yes" xml:space="preserve">
          <source>It turns out that the method defining a constant value in the 'Object' and 'Array' prototypes is faster than any of the other methods.  It is a somewhat surprising result.</source>
          <target state="translated">事实证明,在 &quot;对象 &quot;和 &quot;阵列 &quot;原型中定义常量值的方法比其他任何一个方法都要快。这是一个有些令人惊讶的结果。</target>
        </trans-unit>
        <trans-unit id="be4e6bc3148f730a5a5baeffa0956aa8146bab05" translate="yes" xml:space="preserve">
          <source>It uses some newer browser features so you may want to polyfill this for maximum support.</source>
          <target state="translated">它使用了一些较新的浏览器功能,所以你可能会想用这个来实现最大的支持。</target>
        </trans-unit>
        <trans-unit id="fc6d07a887515c6a7f4c964b4bc544d293b9ba1c" translate="yes" xml:space="preserve">
          <source>Javascript (IE9+, Ch5+, FF4+, Saf5+, Opera10.5+)</source>
          <target state="translated">Javascript (IE9+,Ch5+,FF4+,Saf5+,Opera10.5+)</target>
        </trans-unit>
        <trans-unit id="7731a6561a3e1ee93f15d6fec744ff61630b2d52" translate="yes" xml:space="preserve">
          <source>Javascript (new and older browsers):</source>
          <target state="translated">Javascript(新的和旧的浏览器)。</target>
        </trans-unit>
        <trans-unit id="59b86486aed4edafd59a372a9da15c32460385f0" translate="yes" xml:space="preserve">
          <source>Like this:</source>
          <target state="translated">就像这样。</target>
        </trans-unit>
        <trans-unit id="e4acd0b86318d9745de38057033986a98bf84bd2" translate="yes" xml:space="preserve">
          <source>N.B. strings will be converted into an array with a single element instead of an array of chars. Delete the &lt;code&gt;isString&lt;/code&gt; check if you would prefer it the other way around.</source>
          <target state="translated">NB字符串将被转换为具有单个元素的数组，而不是字符数组。 删除 &lt;code&gt;isString&lt;/code&gt; 检查，是否反之亦然 。</target>
        </trans-unit>
        <trans-unit id="2b04c349975c9c384a3c97221a5aae72beb80278" translate="yes" xml:space="preserve">
          <source>Note, there is no perfect function that will always detect all possible combinations. &lt;strong&gt;It is better to know all abilities and limitations of your tools than expect a magic tool.&lt;/strong&gt;</source>
          <target state="translated">注意，没有完美的功能可以始终检测所有可能的组合。 &lt;strong&gt;最好了解工具的所有功能和局限性，而不是魔术工具。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7777e6add07dbd75cee9487321ab95700e6077cf" translate="yes" xml:space="preserve">
          <source>Or if you're not concerned about performance, you could just do a &lt;code&gt;concat&lt;/code&gt; to a new empty Array.</source>
          <target state="translated">或者，如果您不关心性能，则可以连接一个新的空数组。</target>
        </trans-unit>
        <trans-unit id="bf33af71d65dcc68ff5b84f8dc5e1f0d480b8367" translate="yes" xml:space="preserve">
          <source>Or you could use &lt;code&gt;typeof&lt;/code&gt; to test if it is a String:</source>
          <target state="translated">或者，您可以使用 &lt;code&gt;typeof&lt;/code&gt; 来测试它是否为字符串：</target>
        </trans-unit>
        <trans-unit id="13f700a42ae3262011983039198e7e8a3093cd3a" translate="yes" xml:space="preserve">
          <source>Returns true if object is an Array.</source>
          <target state="translated">如果对象是一个Array,则返回true。</target>
        </trans-unit>
        <trans-unit id="f7005cfaa921fc7f19863e6509c3003a93d9aca0" translate="yes" xml:space="preserve">
          <source>Simple function to check this:</source>
          <target state="translated">简单的功能来检查这个。</target>
        </trans-unit>
        <trans-unit id="c5785dddfceee7ab65b877a9dfb0c7bc0503e9ea" translate="yes" xml:space="preserve">
          <source>So here it is:</source>
          <target state="translated">所以就在这里了。</target>
        </trans-unit>
        <trans-unit id="529261947d333ab69958dab3b85fd179e725dc77" translate="yes" xml:space="preserve">
          <source>So how do I check if the variable is an array?</source>
          <target state="translated">那么,如何检查变量是否是数组呢?</target>
        </trans-unit>
        <trans-unit id="ad97c532bc6ce8a169ead054f1968baf3e6eb43f" translate="yes" xml:space="preserve">
          <source>The TL;DR version is below, but the article is a great discussion of the issue so you should read it if you have time.</source>
          <target state="translated">TL;DR的版本在下面,但这篇文章是对这个问题的一个很好的讨论,所以如果你有时间的话,你应该读一读。</target>
        </trans-unit>
        <trans-unit id="d8fba82586e08dd923a051b4a5eb0553d70f2eda" translate="yes" xml:space="preserve">
          <source>The best solution I've seen is a cross-browser replacement for typeof. Check Angus Croll's solution &lt;a href=&quot;https://javascriptweblog.wordpress.com/2011/08/08/fixing-the-javascript-typeof-operator/&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">我见过的最好的解决方案是跨浏览器替换typeof。 &lt;a href=&quot;https://javascriptweblog.wordpress.com/2011/08/08/fixing-the-javascript-typeof-operator/&quot;&gt;在此处&lt;/a&gt;检查Angus Croll的解决方案。</target>
        </trans-unit>
        <trans-unit id="2f0f07d2f8c5db1b18365cb43a6e5b2c7031990c" translate="yes" xml:space="preserve">
          <source>The following could be used if you know that your object doesn't have a concat method.</source>
          <target state="translated">如果你知道你的对象没有concat方法,可以使用下面的方法。</target>
        </trans-unit>
        <trans-unit id="ef45a5ed35282b6f09e4444299d8ad82b538f9a3" translate="yes" xml:space="preserve">
          <source>The method given in the ECMAScript standard to find the class of Object is to use the &lt;code&gt;toString&lt;/code&gt; method from &lt;code&gt;Object.prototype&lt;/code&gt;.</source>
          <target state="translated">ECMAScript标准中提供的用于找到Object类的方法是使用 &lt;code&gt;Object.prototype&lt;/code&gt; 中的 &lt;code&gt;toString&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="78b03f7165c8f7112bbabb54fdd006cf7ab56416" translate="yes" xml:space="preserve">
          <source>There is a nice example in Stoyan Stefanov's book &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0596806752&quot;&gt;JavaScript Patterns&lt;/a&gt; which suppose to handle all possible problems as well as utilize ECMAScript 5 method &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray&quot;&gt;Array.isArray()&lt;/a&gt;.</source>
          <target state="translated">Stoyan Stefanov的书《 &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0596806752&quot;&gt;JavaScript模式》中&lt;/a&gt;有一个很好的示例，该示例假定可以处理所有可能的问题并利用ECMAScript 5方法&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray&quot;&gt;Array.isArray（）&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="e28580df1559a5bfbee02ed9130b5cb1599b5672" translate="yes" xml:space="preserve">
          <source>There's also the constructor which you can query directly:</source>
          <target state="translated">还有就是构造器,可以直接查询。</target>
        </trans-unit>
        <trans-unit id="9a82878e272f61d0d6f8d6ee73b02b89d9a38aba" translate="yes" xml:space="preserve">
          <source>There's just one line solution for this question</source>
          <target state="translated">这道题只有一条线的解决方案</target>
        </trans-unit>
        <trans-unit id="27f4ae9a5966096fe7c2187de0498e4921badfa0" translate="yes" xml:space="preserve">
          <source>These two methods do not work if the variable takes the undefined value, but they do work if you are certain that they have a value.  With regards to checking with performance in mind if a value is an array or a single value, the second method looks like a valid fast method.  It is slightly faster than 'instanceof' on Chrome, twice as fast as the second best method in Internet Explorer, Opera and Safari (on my machine).</source>
          <target state="translated">如果变量取的是未定义的值,这两种方法就不起作用,但如果你确定变量有一个值,这两种方法就会起作用。关于在性能上检查值是数组还是单值的问题,第二种方法看起来是一个有效的快速方法。它比Chrome浏览器上的'instanceof'略快,比Internet Explorer、Opera和Safari(在我的机器上)的第二种方法快一倍。</target>
        </trans-unit>
        <trans-unit id="edb65843f329545c649a1a59f4eb7e5a28605838" translate="yes" xml:space="preserve">
          <source>This function will turn almost anything into an array:</source>
          <target state="translated">这个功能几乎可以把任何东西都变成一个数组。</target>
        </trans-unit>
        <trans-unit id="502974b7efbf0362f6c4f5871ea87f590ef6cf5e" translate="yes" xml:space="preserve">
          <source>This is my attempt to improve on &lt;a href=&quot;https://stackoverflow.com/a/12268916/34806&quot;&gt;this answer&lt;/a&gt; taking into account the comments:</source>
          <target state="translated">考虑到以下评论，这是我尝试改进&lt;a href=&quot;https://stackoverflow.com/a/12268916/34806&quot;&gt;此答案的&lt;/a&gt;尝试：</target>
        </trans-unit>
        <trans-unit id="03515c0f7ee3abe9125ba5ae5de1a343936ff4e5" translate="yes" xml:space="preserve">
          <source>This is the fastest among all methods (all browsers supported):</source>
          <target state="translated">这是所有方法中最快的(支持所有浏览器)。</target>
        </trans-unit>
        <trans-unit id="710ebd5297edefb8be64dba816ee8f3980f90af6" translate="yes" xml:space="preserve">
          <source>This works cross browser, and with older browsers. This is &lt;a href=&quot;http://blog.niftysnippets.org/2010/09/say-what.html&quot;&gt;pulled from T.J. Crowders' blog post&lt;/a&gt;</source>
          <target state="translated">这适用于跨浏览器，以及旧版浏览器。 这是&lt;a href=&quot;http://blog.niftysnippets.org/2010/09/say-what.html&quot;&gt;从TJ Crowders的博客文章中提取的&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87f315f3132015dbfe0221e0b10a1cbab2432d26" translate="yes" xml:space="preserve">
          <source>Underscore and Lodash:</source>
          <target state="translated">下划线和Lodash。</target>
        </trans-unit>
        <trans-unit id="66fcfd5da57e6e9e093e1f84e5ecc1f88415d8b2" translate="yes" xml:space="preserve">
          <source>You can check the type of your variable whether it is an array with;</source>
          <target state="translated">你可以检查你的变量的类型是否是一个数组。</target>
        </trans-unit>
        <trans-unit id="72649cffdcc308ddb6b31e8d8a9139d922571f87" translate="yes" xml:space="preserve">
          <source>You can try this:</source>
          <target state="translated">你可以试试这个。</target>
        </trans-unit>
        <trans-unit id="1d56be22acf4e17a3ed4496c0d0ef0f2dee459d4" translate="yes" xml:space="preserve">
          <source>You could also try using the &lt;code&gt;instanceof&lt;/code&gt; operator</source>
          <target state="translated">您也可以尝试使用 &lt;code&gt;instanceof&lt;/code&gt; 运算符</target>
        </trans-unit>
        <trans-unit id="574bf53c0fc237870b51f2b72d2946b3a1a92072" translate="yes" xml:space="preserve">
          <source>You could is isArray method but I would prefer to check with</source>
          <target state="translated">你可以用 isArray 方法,但我更喜欢用</target>
        </trans-unit>
        <trans-unit id="04c234f31611c7e0519946699def70b2de2fcc0b" translate="yes" xml:space="preserve">
          <source>easiest and fastest way to check if an Object is an Array or not.</source>
          <target state="translated">最简单快捷的方法来检查一个对象是否是一个阵列。</target>
        </trans-unit>
        <trans-unit id="288db4eb69f16e5b14db37c45b0fbd28112c727b" translate="yes" xml:space="preserve">
          <source>jQuery also offers an &lt;a href=&quot;http://api.jquery.com/jQuery.isArray/&quot;&gt;&lt;code&gt;$.isArray()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">jQuery还提供了&lt;a href=&quot;http://api.jquery.com/jQuery.isArray/&quot;&gt; &lt;code&gt;$.isArray()&lt;/code&gt; &lt;/a&gt;方法：</target>
        </trans-unit>
        <trans-unit id="1e4497b76af14c533136640b9364b80fd0f4cc34" translate="yes" xml:space="preserve">
          <source>jQuery:</source>
          <target state="translated">jQuery:</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="4015d744c03ee6475b184571d583ce2752b393e5" translate="yes" xml:space="preserve">
          <source>or you can make a utility function:</source>
          <target state="translated">或者你可以做一个效用函数。</target>
        </trans-unit>
        <trans-unit id="98a26ebae47518d2beb8b1afaf30341f89be6665" translate="yes" xml:space="preserve">
          <source>suppose:</source>
          <target state="translated">suppose:</target>
        </trans-unit>
        <trans-unit id="5d67e006a290a6ff3cce6b6902436b2ab99c894b" translate="yes" xml:space="preserve">
          <source>then call it like this:</source>
          <target state="translated">那就这样叫吧。</target>
        </trans-unit>
        <trans-unit id="a4ac4ef50ae68cf97853766d6302cda2d6fd6a2f" translate="yes" xml:space="preserve">
          <source>then you can write a simple if statement...</source>
          <target state="translated">那么你可以写一个简单的if语句......</target>
        </trans-unit>
        <trans-unit id="d99f66b852fef055214f1f6c4e0864afe932b13e" translate="yes" xml:space="preserve">
          <source>usage:</source>
          <target state="translated">usage:</target>
        </trans-unit>
        <trans-unit id="ba34f60560964493f760cd9aa305ec9b752688ca" translate="yes" xml:space="preserve">
          <source>use &lt;strong&gt;Array.isArray&lt;/strong&gt; or &lt;strong&gt;Object.prototype.toString.call&lt;/strong&gt; to differentiate
  regular objects from arrays</source>
          <target state="translated">使用&lt;strong&gt;Array.isArray&lt;/strong&gt;或&lt;strong&gt;Object.prototype.toString.call&lt;/strong&gt;区分常规对象和数组</target>
        </trans-unit>
        <trans-unit id="be361c6e87d01553c8e2f7b52f680186622898ae" translate="yes" xml:space="preserve">
          <source>where x is the variable it will return true if x is an array and false if it is not.</source>
          <target state="translated">其中x是变量,如果x是一个数组,则返回true,如果不是,则返回false。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
