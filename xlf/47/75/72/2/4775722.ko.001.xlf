<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/4775722">
    <body>
      <group id="4775722">
        <trans-unit id="07e018d5ccf16aed96a3d0ff94f9994435537644" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray&quot;&gt;Supported by&lt;/a&gt; Chrome 5, Firefox 4.0, IE 9, Opera 10.5 and Safari 5)</source>
          <target state="translated">(Chrome 5, Firefox 4.0, IE 9, Opera 10.5 및 Safari 5에서 지원)</target>
        </trans-unit>
        <trans-unit id="74e7790243f9e3e5d9e2041e450881ddc66265fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.prototype.toString.call(arr) === '[object Array]'&lt;/code&gt;, or</source>
          <target state="translated">&lt;code&gt;Object.prototype.toString.call(arr) === '[object Array]'&lt;/code&gt; 또는</target>
        </trans-unit>
        <trans-unit id="33295c9a31b3e9a12fb3adb6e0f6bf48ec7a1cba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;concat&lt;/code&gt; seems to be one of the oldest methods of Array (even IE 5.5 knows it well).</source>
          <target state="translated">&lt;code&gt;concat&lt;/code&gt; 은 Array의 가장 오래된 방법 중 하나 인 것 같습니다 (IE 5.5에서도 잘 알고 있음).</target>
        </trans-unit>
        <trans-unit id="e3f44af8638a0b21173aa87957c112c3ef49fad0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; A pitfall of this approach is that it &lt;a href=&quot;http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/&quot;&gt;wont work across &lt;code&gt;iframe&lt;/code&gt; boundaries&lt;/a&gt;, but for my use case this is not an issue.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 이 접근법의 함정은 &lt;a href=&quot;http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/&quot;&gt; &lt;code&gt;iframe&lt;/code&gt; 경계&lt;/a&gt; 에서 작동 하지 않는다는 것입니다.하지만 사용 사례에서는 문제가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a6c17a9f33a932e199f25620ce677891dd72e670" translate="yes" xml:space="preserve">
          <source>A simple function for testing if an input value is an array is the following:</source>
          <target state="translated">입력 값이 배열인지 테스트하는 간단한 기능은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3f74c681968dbb15b16f22b96ac1b58b9b61251c" translate="yes" xml:space="preserve">
          <source>Angular:</source>
          <target state="translated">Angular:</target>
        </trans-unit>
        <trans-unit id="f846ee5ba0d3e12640d3f52fd52926f6d3718a5d" translate="yes" xml:space="preserve">
          <source>Array.isArray works fast, but it isn't supported by all versions of browsers.
So you could make an exception for others and use universal method:</source>
          <target state="translated">Array.isArray는 빠르게 작동하지만 모든 버전의 브라우저에서 지원되는 것은 아닙니다. 따라서 다른 사람들을 제외하고 보편적 인 방법을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a051031adb7503a1b31ff71ed6658e09ae91f651" translate="yes" xml:space="preserve">
          <source>As MDN says &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/typeof#Normal_cases&quot;&gt;in here&lt;/a&gt;:</source>
          <target state="translated">MDN &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/typeof#Normal_cases&quot;&gt;이 여기에&lt;/a&gt; 말했듯 이 :</target>
        </trans-unit>
        <trans-unit id="b01846c8c7e4eefe6a12b73f21a6f5970c42a64f" translate="yes" xml:space="preserve">
          <source>By the way, if you are using jQuery, you can use it's method &lt;a href=&quot;http://api.jquery.com/jQuery.isArray/&quot;&gt;$.isArray()&lt;/a&gt;</source>
          <target state="translated">그런데 jQuery를 사용하는 경우 &lt;a href=&quot;http://api.jquery.com/jQuery.isArray/&quot;&gt;$ .isArray ()&lt;/a&gt; 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff3127d51e5831e1600de0b3afcc22b588c93e62" translate="yes" xml:space="preserve">
          <source>Check out a &lt;a href=&quot;http://blog.niftysnippets.org/2010/09/say-what.html&quot;&gt;thorough treatment&lt;/a&gt; from &lt;a href=&quot;https://stackoverflow.com/users/157247/t-j-crowder&quot;&gt;@T.J. Crowder's&lt;/a&gt; blog, as posted in his comment below.</source>
          <target state="translated">아래의 의견에 게시 된 &lt;a href=&quot;https://stackoverflow.com/users/157247/t-j-crowder&quot;&gt;@TJ Crowder의&lt;/a&gt; 블로그에서 &lt;a href=&quot;http://blog.niftysnippets.org/2010/09/say-what.html&quot;&gt;철저한 치료&lt;/a&gt; 를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c69b6714309a51e13511669b236cc55c3585bc7b" translate="yes" xml:space="preserve">
          <source>Check out this &lt;a href=&quot;http://jsben.ch/#/QgYAV&quot;&gt;benchmark&lt;/a&gt; to get an idea which method performs better: &lt;a href=&quot;http://jsben.ch/#/QgYAV&quot;&gt;http://jsben.ch/#/QgYAV&lt;/a&gt;</source>
          <target state="translated">어떤 &lt;a href=&quot;http://jsben.ch/#/QgYAV&quot;&gt;벤치 마크&lt;/a&gt; 가 더 나은지 알아 보려면이 벤치 마크 를 확인하십시오 : &lt;a href=&quot;http://jsben.ch/#/QgYAV&quot;&gt;http://jsben.ch/#/QgYAV&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">스 니펫 확장</target>
        </trans-unit>
        <trans-unit id="76e9a39031ab0a6aa5ff51fcffa8a200537bee40" translate="yes" xml:space="preserve">
          <source>For backward compatibility you can add the following</source>
          <target state="translated">이전 버전과의 호환성을 위해 다음을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="94f1e6e76abf2087be71816835fc6dfdf668ce13" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://stackoverflow.com/users/8432239/bharath?tab=profile&quot;&gt;@Bharath&lt;/a&gt; convert string to array using Es6 for the question asked:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/users/8432239/bharath?tab=profile&quot;&gt;@Bharath&lt;/a&gt; 에서 Es6 을 사용하여 문자열을 배열로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="48a9062fba5c5e38b2f6f5ed248e9fc364fb1ec1" translate="yes" xml:space="preserve">
          <source>Here's my lazy approach:</source>
          <target state="translated">게으른 접근 방식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6f9dd24ea6fa2970354580e5554b5592985ccde1" translate="yes" xml:space="preserve">
          <source>How to check if an object is an array</source>
          <target state="translated">객체가 배열인지 확인하는 방법</target>
        </trans-unit>
        <trans-unit id="94fdc208acf113ff0982c9da41182f258187b870" translate="yes" xml:space="preserve">
          <source>I do this in a very simple way. Works for me. Any drawbacks?</source>
          <target state="translated">나는 아주 간단한 방법으로 이것을한다. 나를 위해 작동합니다. 어떤 단점이 있습니까?</target>
        </trans-unit>
        <trans-unit id="9a0896f410b02f8d9a570599b9f1485672758eaf" translate="yes" xml:space="preserve">
          <source>I have updated the &lt;a href=&quot;http://jsperf.com/check-isarray/3&quot;&gt;jsperf fiddle&lt;/a&gt; with two alternative methods as well as error checking.</source>
          <target state="translated">오류 검사뿐만 아니라 두 가지 대체 방법으로 &lt;a href=&quot;http://jsperf.com/check-isarray/3&quot;&gt;jsperf 바이올린&lt;/a&gt; 을 업데이트했습니다.</target>
        </trans-unit>
        <trans-unit id="4c9ab3262037f6f97a8354eeedc053f7d74744c6" translate="yes" xml:space="preserve">
          <source>I know it's sacrilege to &quot;mess with&quot; the prototype, but &lt;a href=&quot;http://jsperf.com/isarray-approaches&quot;&gt;it appears to perform significantly better than the recommended &lt;code&gt;toString&lt;/code&gt; method&lt;/a&gt;.</source>
          <target state="translated">프로토 타입을 &quot;mess&quot; &lt;a href=&quot;http://jsperf.com/isarray-approaches&quot;&gt;하는 것이 좋지만 권장 &lt;code&gt;toString&lt;/code&gt; 메소드보다 성능이 훨씬 뛰어납니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aefd6bb95422a138a0e1c2f092f8541139f998dd" translate="yes" xml:space="preserve">
          <source>I know, that people are looking for some kind of raw javascript approach.
But if you want think less about, take a look here: &lt;a href=&quot;http://underscorejs.org/#isArray&quot;&gt;http://underscorejs.org/#isArray&lt;/a&gt;</source>
          <target state="translated">사람들이 일종의 원시 자바 스크립트 접근법을 찾고 있다는 것을 알고 있습니다. 그러나 덜 생각하고 싶다면 여기를보십시오 : &lt;a href=&quot;http://underscorejs.org/#isArray&quot;&gt;http://underscorejs.org/#isArray&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f3dbf22b95fa955fff05f6555afb263e428389d" translate="yes" xml:space="preserve">
          <source>I would first check if your implementation supports &lt;code&gt;isArray&lt;/code&gt;:</source>
          <target state="translated">먼저 구현에서 &lt;code&gt;isArray&lt;/code&gt; 를 지원하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="85209d5833715b56d9f178c9ad70aa7160aa4604" translate="yes" xml:space="preserve">
          <source>I would make a function to test the type of object you are dealing with...</source>
          <target state="translated">다루고있는 객체의 유형을 테스트하는 기능을 만들 것입니다 ...</target>
        </trans-unit>
        <trans-unit id="94ec18f71376de60ef52b1eca44d596f9ac8dfdf" translate="yes" xml:space="preserve">
          <source>I'm trying to write a function that either accepts a list of strings, or a single string. If it's a string, then I want to convert it to an array with just the one item, so I can loop over it without fear of an error.</source>
          <target state="translated">문자열 목록 또는 단일 문자열을 허용하는 함수를 작성하려고합니다. 문자열 인 경우 하나의 항목으로 배열로 변환하려고하므로 오류에 대한 두려움없이 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b705c5f49328ec635221750e842052db2e88770" translate="yes" xml:space="preserve">
          <source>I've rounded up the various solutions below and created a &lt;a href=&quot;https://jsperf.com/js-isarray-comparison/16&quot;&gt;jsperf test&lt;/a&gt;. They're all fast, so just use &lt;code&gt;Array.isArray&lt;/code&gt; -- it's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray#Browser_compatibility&quot;&gt;well-supported&lt;/a&gt; now and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray#instanceof_vs_isArray&quot;&gt;works across frames&lt;/a&gt;.</source>
          <target state="translated">아래에서 다양한 솔루션을 &lt;a href=&quot;https://jsperf.com/js-isarray-comparison/16&quot;&gt;모아 jsperf 테스트를&lt;/a&gt; 만들었습니다. 그것들은 모두 빠르므로 &lt;code&gt;Array.isArray&lt;/code&gt; 를 사용 하십시오 . 현재 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray#Browser_compatibility&quot;&gt;잘 지원&lt;/a&gt; 되고 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray#instanceof_vs_isArray&quot;&gt;여러 프레임에서 작동합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="752ae6571d4b1bf40a5a2d875e80374466bcec8b" translate="yes" xml:space="preserve">
          <source>I've used &lt;code&gt;Array.isArray&lt;/code&gt; here because it's the &lt;a href=&quot;http://web.mit.edu/jwalden/www/isArray.html&quot;&gt;most robust&lt;/a&gt; and also simplest.</source>
          <target state="translated">여기서는 &lt;code&gt;Array.isArray&lt;/code&gt; 를 사용했습니다. &lt;a href=&quot;http://web.mit.edu/jwalden/www/isArray.html&quot;&gt;가장 강력&lt;/a&gt; 하고 단순하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="779ffbcbc7853d6f795caeb0e14377fb86654677" translate="yes" xml:space="preserve">
          <source>If the only two kinds of values that could be passed to this function are a string or an array of strings, keep it simple and use a &lt;code&gt;typeof&lt;/code&gt; check for the string possibility:</source>
          <target state="translated">이 함수에 전달 될 수있는 두 종류의 값이 문자열 또는 문자열 배열 인 경우 단순하게 유지하고 문자열 가능성에 대한 유형 검사를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ea5fbb37dccb7ed8f52025ebe32b5b6fb4300011" translate="yes" xml:space="preserve">
          <source>If you don't need to detect arrays created in different frames you can also just use &lt;code&gt;instanceof&lt;/code&gt;</source>
          <target state="translated">다른 프레임에서 생성 된 배열을 감지 할 필요가 없다면 &lt;code&gt;instanceof&lt;/code&gt; 를 사용할 수도 있습니다</target>
        </trans-unit>
        <trans-unit id="26271a5e7d4e9864263a4e3c9bd58c0308af2011" translate="yes" xml:space="preserve">
          <source>If you use jQuery you can use &lt;code&gt;jQuery.isArray(obj)&lt;/code&gt; or &lt;code&gt;$.isArray(obj)&lt;/code&gt;. If you use underscore you can use &lt;code&gt;_.isArray(obj)&lt;/code&gt;</source>
          <target state="translated">jQuery를 사용하는 경우 &lt;code&gt;jQuery.isArray(obj)&lt;/code&gt; 또는 &lt;code&gt;$.isArray(obj)&lt;/code&gt; 사용할 수 있습니다. 밑줄을 사용하면 &lt;code&gt;_.isArray(obj)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f581ac945f210cd38ecc987deb34b690f79f529f" translate="yes" xml:space="preserve">
          <source>Imagine you have this &lt;strong&gt;array below&lt;/strong&gt;:</source>
          <target state="translated">이 &lt;strong&gt;배열이 아래에&lt;/strong&gt; 있다고 상상해보십시오.</target>
        </trans-unit>
        <trans-unit id="31d0ad019ebd86170b983eb38080c5a14d030028" translate="yes" xml:space="preserve">
          <source>In modern browsers you can do</source>
          <target state="translated">최신 브라우저에서 할 수있는 일</target>
        </trans-unit>
        <trans-unit id="843db793a8c23cfc0c73ad9760082e1b52f8e09f" translate="yes" xml:space="preserve">
          <source>In search for shortest version here is what I got so far.</source>
          <target state="translated">가장 짧은 버전을 검색하려면 여기까지 내가 얻은 것입니다.</target>
        </trans-unit>
        <trans-unit id="32442eebf28158b97278ed53d6aa3e9d235ae3e7" translate="yes" xml:space="preserve">
          <source>In your case you may use &lt;code&gt;concat&lt;/code&gt; method of &lt;a href=&quot;https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt;Array&lt;/a&gt; which can accept single objects as well as array (and even combined):</source>
          <target state="translated">귀하의 경우 &lt;a href=&quot;https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt;배열의&lt;/a&gt; &lt;code&gt;concat&lt;/code&gt; 메소드를 사용하여 단일 객체뿐만 아니라 배열 (및 결합)도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32a4427311d2ed2fad4cf8b75978f9f98f58dfef" translate="yes" xml:space="preserve">
          <source>It gets rid of the if/else, and accounts for the possibility of the array being null or undefined</source>
          <target state="translated">if / else를 제거하고 배열이 null이거나 정의되지 않았을 가능성을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="98d4763a49c632574873a9142b3d7d97b66b557f" translate="yes" xml:space="preserve">
          <source>It turns out that the method defining a constant value in the 'Object' and 'Array' prototypes is faster than any of the other methods.  It is a somewhat surprising result.</source>
          <target state="translated">'Object'및 'Array'프로토 타입에서 상수 값을 정의하는 방법이 다른 방법보다 빠르다는 것이 밝혀졌습니다. 다소 놀라운 결과입니다.</target>
        </trans-unit>
        <trans-unit id="be4e6bc3148f730a5a5baeffa0956aa8146bab05" translate="yes" xml:space="preserve">
          <source>It uses some newer browser features so you may want to polyfill this for maximum support.</source>
          <target state="translated">최신 브라우저 기능을 사용하므로 최대 지원을 위해이를 폴리 필 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc6d07a887515c6a7f4c964b4bc544d293b9ba1c" translate="yes" xml:space="preserve">
          <source>Javascript (IE9+, Ch5+, FF4+, Saf5+, Opera10.5+)</source>
          <target state="translated">자바 스크립트 (IE9 +, Ch5 +, FF4 +, Saf5 +, Opera10.5 +)</target>
        </trans-unit>
        <trans-unit id="7731a6561a3e1ee93f15d6fec744ff61630b2d52" translate="yes" xml:space="preserve">
          <source>Javascript (new and older browsers):</source>
          <target state="translated">자바 스크립트 (새로운 브라우저 및 이전 브라우저) :</target>
        </trans-unit>
        <trans-unit id="59b86486aed4edafd59a372a9da15c32460385f0" translate="yes" xml:space="preserve">
          <source>Like this:</source>
          <target state="translated">이처럼 :</target>
        </trans-unit>
        <trans-unit id="e4acd0b86318d9745de38057033986a98bf84bd2" translate="yes" xml:space="preserve">
          <source>N.B. strings will be converted into an array with a single element instead of an array of chars. Delete the &lt;code&gt;isString&lt;/code&gt; check if you would prefer it the other way around.</source>
          <target state="translated">NB 문자열은 문자 배열 대신 단일 요소가있는 배열로 변환됩니다. 다른 방법으로 선호하는 경우 &lt;code&gt;isString&lt;/code&gt; 검사를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="2b04c349975c9c384a3c97221a5aae72beb80278" translate="yes" xml:space="preserve">
          <source>Note, there is no perfect function that will always detect all possible combinations. &lt;strong&gt;It is better to know all abilities and limitations of your tools than expect a magic tool.&lt;/strong&gt;</source>
          <target state="translated">가능한 모든 조합을 항상 감지하는 완벽한 기능은 없습니다. &lt;strong&gt;마술 도구를 기대하는 것보다 도구의 모든 능력과 한계를 아는 것이 좋습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7777e6add07dbd75cee9487321ab95700e6077cf" translate="yes" xml:space="preserve">
          <source>Or if you're not concerned about performance, you could just do a &lt;code&gt;concat&lt;/code&gt; to a new empty Array.</source>
          <target state="translated">또는 성능이 걱정되지 않으면 비어있는 새 Array에 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf33af71d65dcc68ff5b84f8dc5e1f0d480b8367" translate="yes" xml:space="preserve">
          <source>Or you could use &lt;code&gt;typeof&lt;/code&gt; to test if it is a String:</source>
          <target state="translated">또는 &lt;code&gt;typeof&lt;/code&gt; 를 사용하여 문자열인지 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13f700a42ae3262011983039198e7e8a3093cd3a" translate="yes" xml:space="preserve">
          <source>Returns true if object is an Array.</source>
          <target state="translated">object가 Array 인 경우에 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="f7005cfaa921fc7f19863e6509c3003a93d9aca0" translate="yes" xml:space="preserve">
          <source>Simple function to check this:</source>
          <target state="translated">이것을 확인하는 간단한 기능 :</target>
        </trans-unit>
        <trans-unit id="c5785dddfceee7ab65b877a9dfb0c7bc0503e9ea" translate="yes" xml:space="preserve">
          <source>So here it is:</source>
          <target state="translated">그래서 여기 있습니다 :</target>
        </trans-unit>
        <trans-unit id="529261947d333ab69958dab3b85fd179e725dc77" translate="yes" xml:space="preserve">
          <source>So how do I check if the variable is an array?</source>
          <target state="translated">변수가 배열인지 어떻게 확인합니까?</target>
        </trans-unit>
        <trans-unit id="ad97c532bc6ce8a169ead054f1968baf3e6eb43f" translate="yes" xml:space="preserve">
          <source>The TL;DR version is below, but the article is a great discussion of the issue so you should read it if you have time.</source>
          <target state="translated">TL; DR 버전은 아래에 있지만이 기사는 문제에 대한 훌륭한 토론이므로 시간이 있으면 읽어보십시오.</target>
        </trans-unit>
        <trans-unit id="d8fba82586e08dd923a051b4a5eb0553d70f2eda" translate="yes" xml:space="preserve">
          <source>The best solution I've seen is a cross-browser replacement for typeof. Check Angus Croll's solution &lt;a href=&quot;https://javascriptweblog.wordpress.com/2011/08/08/fixing-the-javascript-typeof-operator/&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">내가 본 가장 좋은 솔루션은 typeof의 브라우저 간 교체입니다. Angus Croll의 솔루션을 &lt;a href=&quot;https://javascriptweblog.wordpress.com/2011/08/08/fixing-the-javascript-typeof-operator/&quot;&gt;여기&lt;/a&gt; 에서 확인 하십시오 .</target>
        </trans-unit>
        <trans-unit id="2f0f07d2f8c5db1b18365cb43a6e5b2c7031990c" translate="yes" xml:space="preserve">
          <source>The following could be used if you know that your object doesn't have a concat method.</source>
          <target state="translated">객체에 concat 메소드가없는 경우 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef45a5ed35282b6f09e4444299d8ad82b538f9a3" translate="yes" xml:space="preserve">
          <source>The method given in the ECMAScript standard to find the class of Object is to use the &lt;code&gt;toString&lt;/code&gt; method from &lt;code&gt;Object.prototype&lt;/code&gt;.</source>
          <target state="translated">ECMAScript 표준에 제공된 Object 클래스를 찾는 방법은 &lt;code&gt;Object.prototype&lt;/code&gt; 의 &lt;code&gt;toString&lt;/code&gt; 메소드를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="78b03f7165c8f7112bbabb54fdd006cf7ab56416" translate="yes" xml:space="preserve">
          <source>There is a nice example in Stoyan Stefanov's book &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0596806752&quot;&gt;JavaScript Patterns&lt;/a&gt; which suppose to handle all possible problems as well as utilize ECMAScript 5 method &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray&quot;&gt;Array.isArray()&lt;/a&gt;.</source>
          <target state="translated">Stoyan Stefanov의 저서 &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0596806752&quot;&gt;JavaScript Patterns&lt;/a&gt; 에는 ECMAScript 5 메소드 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray&quot;&gt;Array.isArray ()&lt;/a&gt; 를 사용하는 것뿐만 아니라 가능한 모든 문제를 처리한다고 가정하는 좋은 예가 있습니다.</target>
        </trans-unit>
        <trans-unit id="e28580df1559a5bfbee02ed9130b5cb1599b5672" translate="yes" xml:space="preserve">
          <source>There's also the constructor which you can query directly:</source>
          <target state="translated">직접 쿼리 할 수있는 생성자가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a82878e272f61d0d6f8d6ee73b02b89d9a38aba" translate="yes" xml:space="preserve">
          <source>There's just one line solution for this question</source>
          <target state="translated">이 질문에 대한 한 가지 해결책이 있습니다.</target>
        </trans-unit>
        <trans-unit id="27f4ae9a5966096fe7c2187de0498e4921badfa0" translate="yes" xml:space="preserve">
          <source>These two methods do not work if the variable takes the undefined value, but they do work if you are certain that they have a value.  With regards to checking with performance in mind if a value is an array or a single value, the second method looks like a valid fast method.  It is slightly faster than 'instanceof' on Chrome, twice as fast as the second best method in Internet Explorer, Opera and Safari (on my machine).</source>
          <target state="translated">변수가 정의되지 않은 값을 사용하는 경우이 두 가지 방법은 작동하지 않지만 값이 있는지 확실하면 작동합니다. 값이 배열 또는 단일 값인지 여부를 염두에두고 성능을 확인하는 것과 관련하여 두 번째 방법은 유효한 빠른 방법처럼 보입니다. Chrome의 'instanceof'보다 약간 빠르며 Internet Explorer, Opera 및 Safari (내 컴퓨터)의 두 번째 가장 좋은 방법보다 두 배 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="edb65843f329545c649a1a59f4eb7e5a28605838" translate="yes" xml:space="preserve">
          <source>This function will turn almost anything into an array:</source>
          <target state="translated">이 함수는 거의 모든 것을 배열로 변환합니다 :</target>
        </trans-unit>
        <trans-unit id="502974b7efbf0362f6c4f5871ea87f590ef6cf5e" translate="yes" xml:space="preserve">
          <source>This is my attempt to improve on &lt;a href=&quot;https://stackoverflow.com/a/12268916/34806&quot;&gt;this answer&lt;/a&gt; taking into account the comments:</source>
          <target state="translated">이것은 의견을 고려 &lt;a href=&quot;https://stackoverflow.com/a/12268916/34806&quot;&gt;하여이 답변&lt;/a&gt; 을 개선하려는 시도입니다.</target>
        </trans-unit>
        <trans-unit id="03515c0f7ee3abe9125ba5ae5de1a343936ff4e5" translate="yes" xml:space="preserve">
          <source>This is the fastest among all methods (all browsers supported):</source>
          <target state="translated">이것은 모든 방법 중에서 가장 빠릅니다 (모든 브라우저가 지원됨).</target>
        </trans-unit>
        <trans-unit id="710ebd5297edefb8be64dba816ee8f3980f90af6" translate="yes" xml:space="preserve">
          <source>This works cross browser, and with older browsers. This is &lt;a href=&quot;http://blog.niftysnippets.org/2010/09/say-what.html&quot;&gt;pulled from T.J. Crowders' blog post&lt;/a&gt;</source>
          <target state="translated">이것은 크로스 브라우저 및 구형 브라우저에서 작동합니다. 이것은 &lt;a href=&quot;http://blog.niftysnippets.org/2010/09/say-what.html&quot;&gt;TJ Crowders의 블로그 게시물에서 가져 왔습니다.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87f315f3132015dbfe0221e0b10a1cbab2432d26" translate="yes" xml:space="preserve">
          <source>Underscore and Lodash:</source>
          <target state="translated">밑줄과 Lodash :</target>
        </trans-unit>
        <trans-unit id="66fcfd5da57e6e9e093e1f84e5ecc1f88415d8b2" translate="yes" xml:space="preserve">
          <source>You can check the type of your variable whether it is an array with;</source>
          <target state="translated">변수의 유형이 배열인지 여부를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="72649cffdcc308ddb6b31e8d8a9139d922571f87" translate="yes" xml:space="preserve">
          <source>You can try this:</source>
          <target state="translated">당신은 이것을 시도 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="1d56be22acf4e17a3ed4496c0d0ef0f2dee459d4" translate="yes" xml:space="preserve">
          <source>You could also try using the &lt;code&gt;instanceof&lt;/code&gt; operator</source>
          <target state="translated">&lt;code&gt;instanceof&lt;/code&gt; 연산자를 사용해 볼 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="574bf53c0fc237870b51f2b72d2946b3a1a92072" translate="yes" xml:space="preserve">
          <source>You could is isArray method but I would prefer to check with</source>
          <target state="translated">isArray 메소드 일 수는 있지만 확인하고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="04c234f31611c7e0519946699def70b2de2fcc0b" translate="yes" xml:space="preserve">
          <source>easiest and fastest way to check if an Object is an Array or not.</source>
          <target state="translated">객체가 배열인지 여부를 확인하는 가장 쉽고 빠른 방법입니다.</target>
        </trans-unit>
        <trans-unit id="288db4eb69f16e5b14db37c45b0fbd28112c727b" translate="yes" xml:space="preserve">
          <source>jQuery also offers an &lt;a href=&quot;http://api.jquery.com/jQuery.isArray/&quot;&gt;&lt;code&gt;$.isArray()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">jQuery는 &lt;a href=&quot;http://api.jquery.com/jQuery.isArray/&quot;&gt; &lt;code&gt;$.isArray()&lt;/code&gt; &lt;/a&gt; 메소드도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1e4497b76af14c533136640b9364b80fd0f4cc34" translate="yes" xml:space="preserve">
          <source>jQuery:</source>
          <target state="translated">jQuery:</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="4015d744c03ee6475b184571d583ce2752b393e5" translate="yes" xml:space="preserve">
          <source>or you can make a utility function:</source>
          <target state="translated">또는 유틸리티 기능을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="98a26ebae47518d2beb8b1afaf30341f89be6665" translate="yes" xml:space="preserve">
          <source>suppose:</source>
          <target state="translated">suppose:</target>
        </trans-unit>
        <trans-unit id="5d67e006a290a6ff3cce6b6902436b2ab99c894b" translate="yes" xml:space="preserve">
          <source>then call it like this:</source>
          <target state="translated">다음과 같이 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="a4ac4ef50ae68cf97853766d6302cda2d6fd6a2f" translate="yes" xml:space="preserve">
          <source>then you can write a simple if statement...</source>
          <target state="translated">간단한 if 문을 작성할 수 있습니다 ...</target>
        </trans-unit>
        <trans-unit id="d99f66b852fef055214f1f6c4e0864afe932b13e" translate="yes" xml:space="preserve">
          <source>usage:</source>
          <target state="translated">usage:</target>
        </trans-unit>
        <trans-unit id="ba34f60560964493f760cd9aa305ec9b752688ca" translate="yes" xml:space="preserve">
          <source>use &lt;strong&gt;Array.isArray&lt;/strong&gt; or &lt;strong&gt;Object.prototype.toString.call&lt;/strong&gt; to differentiate
  regular objects from arrays</source>
          <target state="translated">&lt;strong&gt;Array.isArray&lt;/strong&gt; 또는 &lt;strong&gt;Object.prototype.toString.call&lt;/strong&gt; 을 사용하여 일반 객체와 배열을 구별하십시오.</target>
        </trans-unit>
        <trans-unit id="be361c6e87d01553c8e2f7b52f680186622898ae" translate="yes" xml:space="preserve">
          <source>where x is the variable it will return true if x is an array and false if it is not.</source>
          <target state="translated">여기서 x는 변수이며 x가 배열이면 true를 반환하고 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
