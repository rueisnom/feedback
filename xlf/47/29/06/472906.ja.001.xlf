<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/472906">
    <body>
      <group id="472906">
        <trans-unit id="12d92f20fd5e751242d08c35e9ec6ef2bc1ed3ed" translate="yes" xml:space="preserve">
          <source>(And, of course, to be able to re-construct the string from the bytes.)</source>
          <target state="translated">(もちろん、バイトから文字列を再構築できるようにすることも)</target>
        </trans-unit>
        <trans-unit id="1b083175a7952dbca89143ec8ab5b10ff3e5b645" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/a/20321003/369792&quot;&gt;Tom Blodget's answer&lt;/a&gt; is 20-30% faster than Mehrdad since it skips the intermediate step of allocating a char array and copying the bytes to it, but it requires you compile with the &lt;code&gt;/unsafe&lt;/code&gt; option.  If you absolutely do not want to use encoding, I think this is the way to go.  If you put your encryption login inside the &lt;code&gt;fixed&lt;/code&gt; block, you don't even need to allocate a separate byte array and copy the bytes to it.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/20321003/369792&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tom Blodgetの答え&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はMehrdadよりも20〜30％高速です。これは、char配列を割り当ててそこにバイトをコピーする中間ステップをスキップするためです。ただし、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;/unsafe&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オプションを指定&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;してコンパイルする必要があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どうしてもエンコーディングを使いたくないのなら、これがいい方法だと思います。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;暗号化ログインを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fixed&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ブロック&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内に配置する場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、別のバイト配列を割り当てて、そこにバイトをコピーする必要さえありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc41837abd0e977716c8c397fb8912ecd3dad4a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Everybody else answered this incorrect question incorrectly.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他の誰もがこの誤った質問に誤って答えた。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b6e34be17e25bca5212b6d3a4de133c044184b5e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note that working with &lt;code&gt;Span&amp;lt;T&amp;gt;&lt;/code&gt; requires installing the &lt;a href=&quot;https://www.nuget.org/packages/System.Memory&quot;&gt;System.Memory NuGet package&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Span&amp;lt;T&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用するには、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.nuget.org/packages/System.Memory&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Memory NuGetパッケージを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インストールする必要が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あることに注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0561660ea53366c3d45e5997c890a23d70363f33" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;That's it for most usages. If that's what you need, stop reading here.&lt;/em&gt; See the fun &lt;a href=&quot;http://www.joelonsoftware.com/articles/Unicode.html&quot;&gt;Joel Spolsky article&lt;/a&gt; if you don't understand what an encoding is.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ほとんどの用途でそれで終わりです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それが必要な場合は、ここを読むのをやめてください。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エンコーディングとは何かわからない場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、楽しい&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.joelonsoftware.com/articles/Unicode.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Joel Spolskyの記事を&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2c442146e3794ea28fbd8e2c26d8286d526de31" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This is based off of OP's comment on his own question, and is the correct question if I understand OP's hints at the use-case.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは彼自身の質問に対するOPのコメントに基づいており、ユースケースでのOPのヒントを理解している場合は正しい質問です。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d94e738be3d4d982dfcf523fa657196119f8016f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;EDIT&lt;/em&gt;&lt;/strong&gt;
as Makotosan commented this is now the best way:</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; マコトサンがコメントしたように&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;編集&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;することは、これが今や最善の方法です：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d72a3384d26ca8c8484068b64b00feb648fab1b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Fastest way&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最速の方法&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2dbce4e34dabf0c0683865f641afdcbbb63a8240" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In other words, you can't satisfy your requirement for &lt;em&gt;consistency&lt;/em&gt; without specifying an encoding.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エンコーディングを指定せず&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;整合性の&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要件を満たすことはできません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="65a2d2a3d5e39c98144e466619dc430e70beec66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mehrdad's Answer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mehrdadの回答&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="65c958e6dee00219a13d85ae2be8a1b4e028fd17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tom Blodget's Answer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;トム・ブロジェットの答え&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3b434a03504320706540f9b87e55a1ef2cf97770" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.string(v=vs.110).aspx&quot;&gt;string&lt;/a&gt; in .NET represents text as a sequence of UTF-16 code units, so the bytes are encoded in memory in UTF-16 already.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.NET &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.string(v=vs.110).aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、テキストを一連のUTF-16コード単位として表します。そのため、バイトはメモリ内ですでにUTF-16でエンコードされています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8289079a63027bc7e05ffb27f563cbf920241334" translate="yes" xml:space="preserve">
          <source>A small sample why encoding matters:</source>
          <target state="translated">エンコーディングが重要な理由は、小さなサンプルです。</target>
        </trans-unit>
        <trans-unit id="11e8fd694a3cbe8d859770b79eb647edd463766b" translate="yes" xml:space="preserve">
          <source>A string (or more generically, a text) is composed of characters: letters, digits, and other symbols. That's all. Computers, however, do not know anything about characters; they can only handle bytes. Therefore, if you want to store or transmit text by using a computer, you need to transform the characters to bytes. How do you do that? Here's where encodings come to the scene.</source>
          <target state="translated">文字列(より一般的にはテキスト)は、文字や数字、その他の記号などの文字で構成されています。それだけです。しかし、コンピュータは文字のことを何も知りません。したがって、コンピュータを使ってテキストを保存したり、送信したりするには、文字をバイトに変換する必要があります。どうやって変換するのでしょうか?ここでエンコーディングの登場です。</target>
        </trans-unit>
        <trans-unit id="2fcf684bd3c5c93b2ec38730ad5c4cd5645524d5" translate="yes" xml:space="preserve">
          <source>ASCII simply isn't equipped to deal with special characters.</source>
          <target state="translated">ASCIIは単に特殊文字を扱えるようになっていないだけです。</target>
        </trans-unit>
        <trans-unit id="e7f8396deba19ebd2f572fa25ad2f5b3de56be39" translate="yes" xml:space="preserve">
          <source>Additional benefit to this approach:</source>
          <target state="translated">このアプローチには追加のメリットがあります。</target>
        </trans-unit>
        <trans-unit id="b566b8a5021ad88e51d3e4b7d5d612f040ec6ef2" translate="yes" xml:space="preserve">
          <source>Also please explain why encoding should be taken into consideration. 
  Can't I simply get what bytes the string has been stored in?
  Why this dependency on encoding?!!!</source>
          <target state="translated">また、なぜエンコードを考慮しなければならないのかを説明してください。単純に文字列が何バイトに格納されているかを取得することはできないのでしょうか? なぜエンコーディングに依存するのか!</target>
        </trans-unit>
        <trans-unit id="6760299d10ce0a958a61d6a1e2965454ce0a8fe8" translate="yes" xml:space="preserve">
          <source>Also, .NET supports non-Unicode encodings, but they are not valid in general case (will be valid only if a limited sub-set of Unicode code point is used in an actual string, such as ASCII). Internally, .NET supports UTF-16, but for stream representation, UTF-8 is usually used. It is also a standard-de-facto for Internet.</source>
          <target state="translated">また、.NETは非Unicodeエンコーディングをサポートしていますが、一般的な場合には有効ではありません(ASCIIのような実際の文字列でUnicodeコードポイントの限定されたサブセットが使用されている場合にのみ有効です)。内部的には.NETはUTF-16をサポートしていますが、ストリーム表現では通常UTF-8が使用されます。これはインターネットの標準デファクトでもあります。</target>
        </trans-unit>
        <trans-unit id="cc5e9f1684f7a373c58a842445dc80d4e34ca6a5" translate="yes" xml:space="preserve">
          <source>Also, why should encoding be taken into consideration? Can't I simply get what bytes the string has been stored in? Why is there a dependency on character encodings?</source>
          <target state="translated">また、なぜエンコーディングを考慮しなければならないのでしょうか?単に文字列が何バイトに格納されているかを取得することはできないのでしょうか?なぜ文字エンコーディングに依存するのでしょうか?</target>
        </trans-unit>
        <trans-unit id="8d4da4f1fc049fae3a7cdccededfeee113ee8961" translate="yes" xml:space="preserve">
          <source>Also, why should encoding even be taken into consideration? Can't I simply get what bytes the string has been stored in? Why is there a dependency on character encodings?</source>
          <target state="translated">また、なぜエンコーディングを考慮に入れる必要があるのでしょうか?単に文字列が何バイトに格納されているかを取得することはできないのでしょうか?なぜ文字エンコーディングに依存するのでしょうか?</target>
        </trans-unit>
        <trans-unit id="7a7c26363aae04ff8b9358b236c2b8be81b4306c" translate="yes" xml:space="preserve">
          <source>An encoding is nothing but a convention to translate logical characters to physical bytes. The simplest and best known encoding is ASCII, and it is all you need if you write in English. For other languages you will need more complete encodings, being any of the Unicode flavours the safest choice nowadays.</source>
          <target state="translated">エンコーディングとは、論理的な文字を物理的なバイトに変換するための規則に他なりません。最も単純でよく知られているエンコーディングはASCIIで、英語で書く場合に必要なのはこれだけです。他の言語ではより完全なエンコーディングが必要になりますが、最近ではユニコードが最も安全です。</target>
        </trans-unit>
        <trans-unit id="b199b85ba17f5afaf2627e750d478f49c4a52d52" translate="yes" xml:space="preserve">
          <source>And,</source>
          <target state="translated">And,</target>
        </trans-unit>
        <trans-unit id="213c6ee30ec5ff4710dd1ea02173a295d5b16230" translate="yes" xml:space="preserve">
          <source>As @CodesInChaos pointed out, the result depends on the endianness of the machine. But the question author is not concerned with that.</source>
          <target state="translated">@CodesInChaosさんが指摘されているように、結果は機械のエンディアン性に依存します。しかし、質問者さんはそんなことは気にしていません。</target>
        </trans-unit>
        <trans-unit id="6b35f831e0e676d7d7012d1fef6810df7de7eb5e" translate="yes" xml:space="preserve">
          <source>As long as your program (or other programs) don't try to &lt;em&gt;interpret&lt;/em&gt; the bytes somehow, which you obviously didn't mention you intend to do, then there is &lt;strong&gt;nothing&lt;/strong&gt; wrong with this approach! Worrying about encodings just makes your life more complicated for no real reason.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたのプログラム（または他のプログラム）が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バイトを何らかの方法で&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;解釈&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しようとしない限り、あなた&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がそうするつもりであることは明らかに言及してい&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ませ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;んが、このアプローチ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;には&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;何の&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;問題&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もあり&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ません&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エンコーディングを心配すると、実際の理由もなく、生活がより複雑になります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e5453acc43479c51c2639631effba130305463cf" translate="yes" xml:space="preserve">
          <source>As you can see, it's also actually less code to just use the built in encoding objects than to implement your own reader/writer methods.</source>
          <target state="translated">ご覧のように、独自のリーダライタメソッドを実装するよりも、組み込みのエンコーディングオブジェクトを使用する方が実際にはコードが少なくて済みます。</target>
        </trans-unit>
        <trans-unit id="a2a9418ccf48ccffff57c0ec370bed125059d005" translate="yes" xml:space="preserve">
          <source>Assuming that you have binary data (rather than text) stored in a string</source>
          <target state="translated">バイナリデータ(テキストではなく)が文字列に格納されていると仮定すると</target>
        </trans-unit>
        <trans-unit id="e2888f72c3a469703d179f475e8ff340617f003a" translate="yes" xml:space="preserve">
          <source>Because that is the proper way to do it.  &lt;code&gt;string&lt;/code&gt; is an abstraction.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それが適切な方法だからです。 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;string&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は抽象化です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="76878448f83add9a0896a7c9661deaf0db7e1012" translate="yes" xml:space="preserve">
          <source>Because there is no such thing as &quot;the bytes of the string&quot;.</source>
          <target state="translated">文字列のバイト」などというものは存在しないからです。</target>
        </trans-unit>
        <trans-unit id="764bdc9aac628b1989ecedd0ebe6bd5fc9fd62d5" translate="yes" xml:space="preserve">
          <source>But a conversion was used -- each character was placed into a fixed size box (c#'s character type).  However what that representation is does not matter, which is technically the answer to the OP.  So -- if you are going to convert anyway...  Why not 'encode'?</source>
          <target state="translated">しかし、各文字は固定サイズのボックス(c#の文字型)に配置されています。しかし、その表現が何であるかは問題ではありません。だから --どうせ変換するなら...なぜ「エンコード」しないのでしょうか?</target>
        </trans-unit>
        <trans-unit id="371c1ce2a6b5b66ba3cd7c90aa8ba5f29768c55f" translate="yes" xml:space="preserve">
          <source>But to avoid the mention of encodings, we must do it another way. If an intermediate data type is acceptable, there is a conceptual shortcut for this:</source>
          <target state="translated">しかし、エンコーディングへの言及を避けるためには、別の方法で行わなければなりません。中間データ型が許容されるのであれば、そのための概念的な近道があります。</target>
        </trans-unit>
        <trans-unit id="a327eb37907ef9ea4fff97d2b6b447e5cd25a852" translate="yes" xml:space="preserve">
          <source>But why leave the 'encoding' up to magic?  Why not specify the encoding so that you know what bytes you are gonna get?</source>
          <target state="translated">しかし、なぜ「エンコーディング」を魔法に任せるのでしょうか?なぜエンコーディングを指定しないのでしょうか?</target>
        </trans-unit>
        <trans-unit id="cc32ca8b2565c116d2b88180835165c1407fb460" translate="yes" xml:space="preserve">
          <source>By the way, I strongly recommend you (and anyone, for that matter) to read this small piece of wisdom: &lt;a href=&quot;http://www.joelonsoftware.com/articles/Unicode.html&quot;&gt;The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets (No Excuses!)&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ちなみに、私はあなた（そして誰にとっても）のこの知恵の小片を読むことを強くお勧めします：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.joelonsoftware.com/articles/Unicode.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;絶対最小値すべてのソフトウェア開発者絶対に、積極的にUnicodeと文字セットについて知っておく必要があります（言い訳はありません！）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f1fc320f3254958f8d464eb376c3c1270c1e166c" translate="yes" xml:space="preserve">
          <source>C# to convert a &lt;code&gt;string&lt;/code&gt; to a &lt;code&gt;byte&lt;/code&gt; array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;string&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;byte&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に変換するC＃&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6e23fe8562b81064741b61938288b46879494182" translate="yes" xml:space="preserve">
          <source>Character and string processing in C# uses Unicode encoding. The char
  type represents a UTF-16 code unit, and the string type represents a
  sequence of UTF-16 code units.</source>
          <target state="translated">C#での文字・文字列処理は、Unicodeエンコーディングを使用しています。char型はUTF-16コード単位を表し、string型はUTF-16コード単位のシーケンスを表します。</target>
        </trans-unit>
        <trans-unit id="e0ef3a4505bcbc6160c552b1ae785584813523bf" translate="yes" xml:space="preserve">
          <source>Clearly, conversions are not necessarily lossless!</source>
          <target state="translated">明らかに、変換は必ずしもロスレスではありません</target>
        </trans-unit>
        <trans-unit id="9cdff2e5bb172553c918c78b7b587dce154716c8" translate="yes" xml:space="preserve">
          <source>Common Need</source>
          <target state="translated">共通のニーズ</target>
        </trans-unit>
        <trans-unit id="881db208cce3965e094f2bbcd67f87ac22ac59dd" translate="yes" xml:space="preserve">
          <source>Contrary to the answers here, you DON'T need to worry about encoding &lt;strong&gt;&lt;em&gt;if&lt;/em&gt;&lt;/strong&gt; the bytes don't need to be interpreted!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここでの答えとは逆に、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バイトを解釈する必要がない&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エンコードについて心配する必要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="acaaab22b5cc002ed8b04f6496989a4e4704ec21" translate="yes" xml:space="preserve">
          <source>Converting it back should be a non-starter because that means you are in fact interpreting the data somehow, but for the sake of completeness:</source>
          <target state="translated">それは、あなたが実際にデータを何らかの形で解釈していることを意味しますが、完全性のために、それを元に戻すことは、スターターではないはずです。</target>
        </trans-unit>
        <trans-unit id="f4d849313ccc4b84cee6efad70e46cb183c4e23c" translate="yes" xml:space="preserve">
          <source>Darn, Microsoft should have just used &lt;code&gt;System.Buffer.BlockCopy&lt;/code&gt; in its &lt;code&gt;BinaryFormatter&lt;/code&gt; ツ</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ダーン、Microsoftはちょうど使用している必要があります&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Buffer.BlockCopy&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その中&lt;/font&gt;&lt;/font&gt; &lt;code&gt;BinaryFormatter&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ツ&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b971e5d4bc6947d5c932095238f4bde4965ccf6f" translate="yes" xml:space="preserve">
          <source>Don't reinvent the wheel if you don't have to...</source>
          <target state="translated">必要がないなら、車輪を再発明するな...</target>
        </trans-unit>
        <trans-unit id="c973c91a278235b6dafdf98e8329894c72798190" translate="yes" xml:space="preserve">
          <source>Encoding (in this context) simply means the bytes that represent your string.  Not the bytes of the string object.  You wanted the bytes the string has been stored in -- this is where the question was asked naively.  You wanted the bytes of string in a contiguous array that represent the string, and not all of the other binary data that a string object may contain.</source>
          <target state="translated">エンコーディング (この文脈では)は、単に文字列を表すバイトを意味します。文字列オブジェクトのバイトではありません。あなたは文字列が格納されているバイトを欲しがっていました。文字列オブジェクトに格納されている他のすべてのバイナリデータではなく、文字列を表す連続した配列の中の文字列のバイトを求めていたのです。</target>
        </trans-unit>
        <trans-unit id="bec7c4514fe118c47315563dd5f6221c9508127e" translate="yes" xml:space="preserve">
          <source>Every string has a character set and encoding. When you convert a &lt;code&gt;System.String&lt;/code&gt; object to an array of &lt;code&gt;System.Byte&lt;/code&gt; you still have a character set and encoding. &lt;strong&gt;For most usages, you'd know which character set and encoding you need and .NET makes it simple to &quot;copy with conversion.&quot;&lt;/strong&gt; Just choose the appropriate &lt;code&gt;Encoding&lt;/code&gt; class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての文字列には、文字セットとエンコーディングがあります。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.String&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Byte&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変換し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ても、文字セットとエンコーディングが残っています。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ほとんどの用途では、必要な文字セットとエンコーディングがわかります。.NETを使用すると、「変換してコピー」するのが簡単になります。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;適切な&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;選択するだけ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ded830ec260ed22e3e81c4beb3d65d91f62df969" translate="yes" xml:space="preserve">
          <source>Every time there's a movement in this question, I'm still thinking of a serializer(be it from Microsoft or from 3rd party component) that can persist strings even it contains unpaired surrogate characters; I google this every now and then: &lt;strong&gt;serialization unpaired surrogate character .NET&lt;/strong&gt;. This doesn't make me lose any sleep, but it's kind of annoying when every  now and then there's somebody commenting on my answer that it's flawed, yet their answers are equally flawed when it comes to unpaired surrogate characters.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この質問に動きがあるたびに、ペアリングされていないサロゲート文字が含まれている場合でも文字列を永続化できるシリアライザ（Microsoftまたはサードパーティコンポーネントからのもの）をまだ考えています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は時々これをグーグルします：&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;直列化のペアになっていないサロゲート文字.NET&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これによって睡眠が失われることはありませんが、私の回答に欠陥があるとコメントする人が時々いるのは、ちょっと不愉快なことです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="2cdfd3bc6caf4ac53a8acb2c2eaccd76c9103d74" translate="yes" xml:space="preserve">
          <source>First of all, the bytes used internally by the string class &lt;em&gt;don't matter&lt;/em&gt;, and whenever you assume they do you're likely introducing a bug.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;まず第一に、文字列クラスによって内部的に使用されるバイト&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は重要&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ではあり&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ません&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、そして、あなたがそれらを仮定するときはいつでも、バグを導入している可能性があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="53209f5e88f2cc4248bddf0e08037f0f42a3d105" translate="yes" xml:space="preserve">
          <source>For communicating (either with a completely disparate process or with the same program in the future), you need to define your protocol &lt;strong&gt;strictly&lt;/strong&gt; to minimize the difficulty of working with it or accidentally creating bugs. Depending on .NET's internal representation is not a strict, clear, or even guaranteed to be consistent definition. A standard encoding &lt;em&gt;is&lt;/em&gt; a strict definition that will not fail you in the future.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通信（完全に異なるプロセスまたは将来同じプログラムと通信）を行うには、プロトコルを&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;厳密&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義して、プロトコル&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を操作したり、誤ってバグを作成したりする難しさを最小限に抑える&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.NETの内部表現によっては、厳密、明確、または一貫した定義であることが保証されていません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;標準エンコーディング&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、将来的に失敗することのない厳密な定義です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="2b90b113f177529b6709a0949dd9936fdea84ac2" translate="yes" xml:space="preserve">
          <source>For serialization to an array of bytes using &lt;code&gt;System.Text.Encoding.GetBytes&lt;/code&gt;. For the inverse operation use &lt;code&gt;System.Text.Encoding.GetChars&lt;/code&gt;. This function returns an array of characters, so to get a string, use a string constructor &lt;code&gt;System.String(char[])&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;System.Text.Encoding.GetBytes&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用してバイトの配列にシリアル化する場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;逆の操作には、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Text.Encoding.GetChars&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この関数は文字の配列を返すため、文字列を取得するには、文字列コンストラクター&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.String(char[])&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c720f9d5f4a088fed167ead31f5163d521731ff" translate="yes" xml:space="preserve">
          <source>For those goals, I honestly do &lt;em&gt;not&lt;/em&gt; understand why people keep telling you that you need the encodings. You certainly do NOT need to worry about encodings for this.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それらの目標のために、私は正直に言って、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なぜエンコーディングが必要であると人々があなた&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に言って&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いるのか理解し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;てい&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ません&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このためのエンコーディングについて心配する必要はありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a799f5d20469b87cb2c5e22e877f21e629fcf803" translate="yes" xml:space="preserve">
          <source>From the &lt;a href=&quot;http://www.microsoft.com/en-us/download/confirmation.aspx?id=7029&quot;&gt;C# spec&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://www.microsoft.com/en-us/download/confirmation.aspx?id=7029&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C＃の仕様&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="62e3e6ef5278c69c7f272b982a159c71a9219c05" translate="yes" xml:space="preserve">
          <source>He doesn't want any conversion.</source>
          <target state="translated">彼は変換を望んでいない</target>
        </trans-unit>
        <trans-unit id="74068d3f7ddc60086e084ec9ff97f9d04d593254" translate="yes" xml:space="preserve">
          <source>Here is my unsafe implementation of &lt;code&gt;String&lt;/code&gt; to &lt;code&gt;Byte[]&lt;/code&gt; conversion:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、安全でない&lt;/font&gt;&lt;/font&gt; &lt;code&gt;String&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Byte[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;への変換の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実装です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="79a31c95b719d1c0a03c21994345a7067dcbc970" translate="yes" xml:space="preserve">
          <source>How do I convert a &lt;code&gt;string&lt;/code&gt; to a &lt;code&gt;byte[]&lt;/code&gt; in .NET (C#) without manually specifying a specific encoding?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;特定のエンコーディングを手動で指定せずに、.NET（C＃）で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;string&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;byte[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に変換するにはどうすればよい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ですか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="250f9b487de8b4346798124d6f0272cb174fa03e" translate="yes" xml:space="preserve">
          <source>How do I convert a string to a byte[] in .NET (C#) without manually specifying a specific encoding?</source>
          <target state="translated">.NET(C#)で文字列をバイト[]に変換するには、特定のエンコーディングを手動で指定せずに、どのようにすればよいですか?</target>
        </trans-unit>
        <trans-unit id="8301aff1e0b7b5e543cf294e6d8e4a152d09b4e6" translate="yes" xml:space="preserve">
          <source>How do I get a consistent byte representation of strings in C# without manually specifying an encoding</source>
          <target state="translated">C#でエンコーディングを手動で指定せずに文字列の一貫したバイト表現を得るには</target>
        </trans-unit>
        <trans-unit id="308d05f72a533a6f046867579a0fd5bff9c1fc21" translate="yes" xml:space="preserve">
          <source>I like Tom Bloget's answer because he took you towards the 'bytes of the string object' direction.  It's implementation dependent though, and because he's peeking at internals it might be difficult to reconstitute a copy of the string.</source>
          <target state="translated">Tom Bloget の答えは、「文字列オブジェクトのバイト数」の方向にあなたを導いてくれたので、私は好きです。しかし、これは実装に依存しますし、彼は内部を覗き見しているので、文字列のコピーを再構成するのは難しいかもしれません。</target>
        </trans-unit>
        <trans-unit id="11e1812469f5e52b2b356ac02b49b92bf948ca15" translate="yes" xml:space="preserve">
          <source>I tend to use the bottom one more often than the top, haven't benchmarked them for speed.</source>
          <target state="translated">上よりも下の方を使うことが多いですが、スピードのベンチマークをしたことはありません。</target>
        </trans-unit>
        <trans-unit id="8b2de312e872be935e0a0767a85a7bcfb8861e8d" translate="yes" xml:space="preserve">
          <source>I think the question isn't why you want to worry about the encoding, but why you want to ignore it and use something else.  Encoding is meant to represent the abstraction of a string in a sequence of bytes.  &lt;code&gt;System.Text.Encoding.Unicode&lt;/code&gt; will give you a little endian byte order encoding and will perform the same on every system, now and in the future.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;問題は、なぜエンコーディングを心配したいのではなく、なぜそれを無視して別のものを使用したいのかだと思います。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エンコーディングは、文字列の抽象化を一連のバイトで表すことを目的としています。 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Text.Encoding.Unicode&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、リトルエンディアンのバイトオーダーエンコーディングを提供し、現在および将来、すべてのシステムで同じように実行されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5ba1f23cbb7de00b3499a5d3c1fa2891c35976c" translate="yes" xml:space="preserve">
          <source>I understand that in this case you might prefer to use the actual bytes stored by the string variable in memory where possible, with the idea that it might save some work creating your byte stream. However, I put it to you it's just not important compared to making sure that your output is understood at the other end, and to guarantee that you &lt;em&gt;must&lt;/em&gt; be explicit with your encoding. Additionally, if you really want to match your internal bytes, you can already just choose the &lt;code&gt;Unicode&lt;/code&gt; encoding, and get that performance savings.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この場合、文字列変数によってメモリに格納されている実際のバイトを可能な限り使用することをお勧めします。これにより、バイトストリームを作成する作業を節約できる可能性があります。ただし、出力が相手側で理解されていることを確認すること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と、エンコーディングを明示&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あることを保証することとを比較することは、それほど重要では&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ない&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことを説明します。さらに、内部バイトを本当に一致させたい場合は、すでに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Unicode&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エンコーディングを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;選択するだけで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、パフォーマンスを節約できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a68547f8105b8c321a012db5592c9dfa6f86747" translate="yes" xml:space="preserve">
          <source>I will address your follow-up question: why do you need to pick an encoding?  Why can't you get that from the string class itself?</source>
          <target state="translated">なぜエンコーディングを選択する必要があるのか?なぜ文字列クラス自体からエンコーディングを取得できないのか?</target>
        </trans-unit>
        <trans-unit id="7ada9517ee500634d2ed6a36e13993710ad8ab90" translate="yes" xml:space="preserve">
          <source>I'm going to encrypt it. I can encrypt it without converting but I'd still like to know why encoding comes to play here. Just give me the bytes is what I say.</source>
          <target state="translated">暗号化してみる 変換しなくても暗号化できるんだが、なぜここで暗号化が必要なのか知りたい。バイトをよこせと言ってるんだ</target>
        </trans-unit>
        <trans-unit id="23328b8b90fc8391e6977f267afdb4987dce99f3" translate="yes" xml:space="preserve">
          <source>I'm going to encrypt the string. I can encrypt it without converting, but I'd still like to know why encoding comes to play here.</source>
          <target state="translated">文字列を暗号化してみる。変換しなくても暗号化はできるのですが、それでもなぜここで暗号化が効くのか知りたいですね。</target>
        </trans-unit>
        <trans-unit id="73edba52ee6a28a24523945beee302c70085419a" translate="yes" xml:space="preserve">
          <source>I'm not sure, but I think the string stores its info as an array of Chars, which is inefficient with bytes.  Specifically, the definition of a Char is &quot;Represents a Unicode character&quot;.</source>
          <target state="translated">よくわかりませんが、文字列はその情報をCharsの配列として格納していると思いますが、これはバイトでは効率が悪いです。具体的には、Charsの定義は「Unicode文字を表す」となっています。</target>
        </trans-unit>
        <trans-unit id="c4312324dd22deb5211f29d42de3f21cb51b940c" translate="yes" xml:space="preserve">
          <source>I've changed my mind about this (Mehrdad's solution) -- this isn't getting the bytes of the string; rather it is getting the bytes of the character array that was created from the string.  Regardless of encoding, the char datatype in c# is a fixed size.  This allows a consistent length byte array to be produced, and it allows the character array to be reproduced based on the size of the byte array.  So if the encoding were UTF-8, but each char was 6 bytes to accommodate the largest utf8 value, it would still work.  So indeed -- encoding of the character does not matter.</source>
          <target state="translated">これは文字列のバイトを取得しているのではなく、文字列から作成された文字配列のバイトを取得しているのです。エンコーディングに関係なく、c#のcharデータ型は固定サイズです。これにより、一貫した長さのバイト配列を生成することができ、バイト配列のサイズに基づいて文字配列を再現することができます。ですから、エンコーディングがUTF-8であっても、最大のutf8値を収容するために各charが6バイトであれば、それはまだ動作するでしょう。ですから、確かに --文字のエンコーディングは問題ではありません。</target>
        </trans-unit>
        <trans-unit id="8f987a9391d67ecbc6f5e57e1eba7f6b2a903207" translate="yes" xml:space="preserve">
          <source>If the string looks good as-is, just pick an encoding (preferably one starting with UTF), use the corresponding &lt;code&gt;System.Text.Encoding.???.GetBytes()&lt;/code&gt; function, and tell whoever you give the bytes to which encoding you picked.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列がそのままのように見える場合は、エンコーディング（できればUTFで始まるもの）を選択し、対応する&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Text.Encoding.???.GetBytes()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数を使用して、どのエンコーディングにバイトを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;割り当てたかを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;誰にでも伝えます選んだ。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8014e7bced1ca056331e4021f470ccb6ec78153c" translate="yes" xml:space="preserve">
          <source>If you have a text string with an unknown encoding</source>
          <target state="translated">エンコーディングが不明なテキスト文字列がある場合</target>
        </trans-unit>
        <trans-unit id="cdf6921da828ca4a35976570bed2c1d0683ef413" translate="yes" xml:space="preserve">
          <source>If you really want a copy of the underlying bytes of a string, you can use a function like the one that follows. &lt;strong&gt;However, you shouldn't&lt;/strong&gt; please read on to find out why.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列の基礎となるバイトのコピーが本当に必要な場合は、次のような関数を使用できます。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、その&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;理由を理解するために読み進め&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ないで&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fe3e3532bc4f8d47ac6709111f975fd91357eeb0" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;System.Text.Encoding.Unicode&lt;/code&gt;, your code will be more resilient.  You don't have to worry about the &lt;a href=&quot;https://en.wikipedia.org/wiki/Endianness&quot;&gt;endianness&lt;/a&gt; of the system your code will be running on.  You don't need to worry if the next version of the CLR will use a different internal character encoding.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;System.Text.Encoding.Unicode&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と、コードの耐&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;障害&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;性が向上します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コードが実行されるシステム&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Endianness&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エンディアン&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;について心配する必要はありません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CLRの次のバージョンが別の内部文字エンコードを使用するかどうかを心配する必要はありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a7842bf159130826080a10125e8894356cfd6a7" translate="yes" xml:space="preserve">
          <source>If you used a specific encoding, though, it would've given you trouble with encoding/decoding invalid characters.</source>
          <target state="translated">しかし、特定のエンコードを使っていたら、無効な文字をエンコードするのに苦労したことでしょう。</target>
        </trans-unit>
        <trans-unit id="33b0321053b92b4fa0428632fbfc0415818cf893" translate="yes" xml:space="preserve">
          <source>If your program is entirely within the .Net world then you don't need to worry about getting byte arrays for strings at all, even if you're sending data across a network. Instead, use .Net Serialization to worry about transmitting the data.  You don't worry about the actual bytes any more: the Serialization formatter does it for you.</source>
          <target state="translated">プログラムが完全に .Net の世界内にある場合は、ネットワークを介してデータを送信する場合でも、文字列のバイト配列を取得することを心配する必要はありません。その代わりに、.Net Serialization を使用して、データの送信について心配する必要はありません。もう実際のバイトについて心配する必要はありません。</target>
        </trans-unit>
        <trans-unit id="b55572a251031f38f43e0ce27cb2550dfd157131" translate="yes" xml:space="preserve">
          <source>In all likelihood this will give the same result, is easier to type, and the bytes will always round-trip with a call to</source>
          <target state="translated">を呼び出すことで、バイトは常に往復します。</target>
        </trans-unit>
        <trans-unit id="54278cf74b906f55d3e2e4e2f5f2899e105de098" translate="yes" xml:space="preserve">
          <source>In order to use it, you have to tick &quot;Allow Unsafe Code&quot; in your project build properties.
As per .NET Framework 3.5, this method can also be used as String extension:</source>
          <target state="translated">これを使用するには、プロジェクトのビルドプロパティで「安全でないコードを許可する」にチェックを入れる必要があります。.NET Framework 3.5では、このメソッドはStringの拡張子としても使用できます。</target>
        </trans-unit>
        <trans-unit id="e315a35ab8b323b6f1b71f706b5abe5be3682bdb" translate="yes" xml:space="preserve">
          <source>Internally, the .NET framework uses &lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16&quot;&gt;UTF-16&lt;/a&gt; to represent strings, so if you simply want to get the exact bytes that .NET uses, use &lt;code&gt;System.Text.Encoding.Unicode.GetBytes (...)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内部的には、.NETフレームワークは&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;UTF-16&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列を表すため、.NETが使用する正確なバイト数を取得したいだけの場合は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Text.Encoding.Unicode.GetBytes (...)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="253d98cd0ff94b324089dd103360170318602987" translate="yes" xml:space="preserve">
          <source>It depends on the encoding of your string (&lt;a href=&quot;http://en.wikipedia.org/wiki/ASCII&quot;&gt;ASCII&lt;/a&gt;, &lt;a href=&quot;http://en.wikipedia.org/wiki/UTF-8&quot;&gt;UTF-8&lt;/a&gt;, ...).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列のエンコード（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/ASCII&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ASCII&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/UTF-8&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;UTF-8&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;など）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;によって異なります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cb8673fc3c3b53f57ce77c997e1a1de179fe1ace" translate="yes" xml:space="preserve">
          <source>It depends on what you want the bytes FOR</source>
          <target state="translated">これは、何のためにバイトを必要としているかに依存します。</target>
        </trans-unit>
        <trans-unit id="fafdca4a7238f02b1bcabb06d745312e84100bb3" translate="yes" xml:space="preserve">
          <source>It doesn't matter if the string contains invalid characters, because you can still get the data and reconstruct the original string anyway!</source>
          <target state="translated">文字列に無効な文字が含まれていても、データを取得して元の文字列を再構築することができるので問題ありません。</target>
        </trans-unit>
        <trans-unit id="3743f646e71bbbf4f2fa8d2a8a992c94db7d0419" translate="yes" xml:space="preserve">
          <source>It will be encoded and decoded just the same, because you are &lt;em&gt;just looking at the bytes&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バイトを表示して&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いる&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;だけな&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ので、エンコードとデコードはまったく同じです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="50ef6f8b46c2a72a4edd3727490c28fa9ad5b914" translate="yes" xml:space="preserve">
          <source>It would be &lt;strong&gt;safer, simpler and more reliable&lt;/strong&gt; to just call,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出すだけの&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;安全でシンプルで信頼性が高い&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="09a9d3269261d67410064802503de606e111f4eb" translate="yes" xml:space="preserve">
          <source>It's also important to understand your string has to be re-written to wire, and that involves at least some translation of the bit-pattern &lt;em&gt;even when you use a matching encoding&lt;/em&gt;. The computer needs to account for things like Big vs Little Endian, network byte order, packetization, session information, etc.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列をワイヤに書き直す必要があることを理解することも重要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これには、一致するエンコーディングを使用する場合でも&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、ビットパターンの少なくとも一部の変換が含まれ&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンピューターは、ビッグエンディアンとリトルエンディアン、ネットワークバイトオーダー、パケット化、セッション情報などを考慮する必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="18a23e217bf26b95123358b0c912f11ad4a34af7" translate="yes" xml:space="preserve">
          <source>It's bad when the string, for example, comes from &lt;a href=&quot;http://en.wikipedia.org/wiki/Microsoft_SQL_Server&quot;&gt;SQL Server&lt;/a&gt; where it was built from a byte array storing, for example, a password hash. If we drop anything from it, it'll store an invalid hash, and if we want to store it in XML, we want to leave it intact (because the XML writer drops an exception on any unpaired surrogate it finds).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、文字列が、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パスワードハッシュなどを格納するバイト配列から構築された&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Microsoft_SQL_Server&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL Server&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;からのものである場合は、問題です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そこから何かをドロップすると、無効なハッシュが格納されます。XMLに格納したい場合は、そのままにしておきます（XMLライターは、ペアになっていないサロゲートが検出すると例外をドロップするため）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0239ce0f340ef86dd3fc996e2af2070445e8cde7" translate="yes" xml:space="preserve">
          <source>It's way faster than the accepted anwser's one, even if not as elegant as it is.
Here are my Stopwatch benchmarks over 10000000 iterations:</source>
          <target state="translated">それは、それがエレガントではないとしても、それは受け入れられたアンサーのものよりもはるかに速いです。以下は10000000回以上の繰り返しでのストップウォッチのベンチマークです。</target>
        </trans-unit>
        <trans-unit id="b45885d736c4aeff1a446b8c7294826b2f0d7bd9" translate="yes" xml:space="preserve">
          <source>Joel has a posting on this:</source>
          <target state="translated">ジョエルが投稿しています。</target>
        </trans-unit>
        <trans-unit id="d8c62c907006f766a6556ba8b07bf4c5573e8c16" translate="yes" xml:space="preserve">
          <source>Just do this instead:</source>
          <target state="translated">代わりにこれをやればいい。</target>
        </trans-unit>
        <trans-unit id="be726ed35a3333ee7f9a2e2916e7384715f4e1e9" translate="yes" xml:space="preserve">
          <source>Just to demonstrate that Mehrdrad's sound &lt;a href=&quot;https://stackoverflow.com/a/10380166&quot;&gt;answer&lt;/a&gt; works, his approach can even persist the &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.runtime.serialization.formatters.binary.binaryformatter%28v=VS.100%29.aspx&quot;&gt;unpaired surrogate characters&lt;/a&gt;(of which many had leveled against my answer, but of which everyone are equally guilty of, e.g. &lt;code&gt;System.Text.Encoding.UTF8.GetBytes&lt;/code&gt;, &lt;code&gt;System.Text.Encoding.Unicode.GetBytes&lt;/code&gt;; those encoding methods can't persist the high surrogate characters &lt;code&gt;d800&lt;/code&gt; for example, and those just merely replace high surrogate characters with value &lt;code&gt;fffd&lt;/code&gt; ) :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mehrdradの健全な&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/10380166&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;回答が&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機能&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;することを示すためだけに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、彼のアプローチは、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.runtime.serialization.formatters.binary.binaryformatter%28v=VS.100%29.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ペア&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;になってい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ないサロゲート文字&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（多くの人が私の回答に対して平準化していたが、たとえば&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Text.Encoding.UTF8.GetBytes&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Text.Encoding.Unicode.GetBytes&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などのすべての人が同様に有罪である）を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;維持することもでき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。 Text.Encoding.Unicode.GetBytes&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ;これらのエンコーディングメソッドは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、たとえば&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;高サロゲート文字&lt;/font&gt;&lt;/font&gt; &lt;code&gt;d800&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;永続化できず、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;単に高サロゲート文字を値&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fffd&lt;/code&gt; で&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;置き換えるだけ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ef24e2af226a4311be29d5b5c4456ee7bfbcc3d" translate="yes" xml:space="preserve">
          <source>Like you mentioned, your goal is, simply, to &lt;em&gt;&quot;get what bytes the string has been stored in&quot;&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたが述べたように、あなたの目標は、単に、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「文字列が格納されているバイトを取得&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」こと&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="62dc42908d3fb01c4805c4e57a1a0b5db12b9b8c" translate="yes" xml:space="preserve">
          <source>Mehrdad's response is wrong because it is misleading at the conceptual level.  You still have a list of bytes, encoded.  His particular solution allows for unpaired surrogates to be preserved -- this is implementation dependent.  His particular solution would not produce the string's bytes accurately if &lt;code&gt;GetBytes&lt;/code&gt; returned the string in UTF-8 by default.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mehrdadの対応は概念レベルで誤解を招くため、間違っています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エンコードされたバイトのリストがまだあります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;彼の特定のソリューションでは、ペアになっていないサロゲートを保持できます。これは実装に依存します。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;GetBytes&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がデフォルトで文字列をUTF-8で返した&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合、彼の特定のソリューションは文字列のバイトを正確に生成しませんでした&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="47a99c1d5eff545ce3518be595bcbc8cb9d65801" translate="yes" xml:space="preserve">
          <source>Not surprisingly, serialization of string into an array of byte and deserialization is supported by the class &lt;code&gt;System.Text.Encoding&lt;/code&gt;, which is an abstract class; its derived classes support concrete encodings: &lt;code&gt;ASCIIEncoding&lt;/code&gt; and four UTFs (&lt;code&gt;System.Text.UnicodeEncoding&lt;/code&gt; supports UTF-16)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当然のことながら、文字列のバイト配列へのシリアライズとデシリアライズ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、抽象クラスである&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Text.Encoding&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスでサポートされてい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その派生クラスは具体的なエンコーディングをサポートします：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ASCIIEncoding&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と4つの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;UTF &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Text.UnicodeEncoding&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はUTF-16をサポートし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fb2eccf7017a0105eeeb7f202ea5e630dc101c72" translate="yes" xml:space="preserve">
          <source>Note: For &lt;code&gt;System.String&lt;/code&gt; the source character set is Unicode.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.String&lt;/code&gt; の場合&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、ソース文字セットはUnicodeです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d7effc002b8ac571412ec3d546c04ee79313d1c8" translate="yes" xml:space="preserve">
          <source>Now, the question author asks, &quot;Every string is stored as an array of bytes, right? Why can't I simply have those bytes?&quot;</source>
          <target state="translated">さて、質問者は「すべての文字列はバイトの配列として格納されていますよね?なぜ単純にそれらのバイトを持つことができないのでしょうか?&quot;</target>
        </trans-unit>
        <trans-unit id="255b8f55679083ebaad714d1ab2eec76c35e7fad" translate="yes" xml:space="preserve">
          <source>On the other hand, what if you are sending these bytes somewhere that you can't guarantee will pull in data from a .Net serialized stream? In this case you definitely do need to worry about encoding, because obviously this external system cares. So again, the internal bytes used by the string don't matter: you need to pick an encoding so you can be explicit about this encoding on the receiving end, even if it's the same encoding used internally by .Net.</source>
          <target state="translated">一方で、これらのバイトをどこかに送信している場合、.Net のシリアル化されたストリームからデータを取り込むことを保証できないとしたらどうでしょうか?この場合、エンコードについて心配する必要があるのは間違いありません。つまり、文字列で使用される内部バイトは重要ではありません。.Net で内部的に使用されているのと同じエンコーディングであっても、受信側ではエンコーディングを明示的に指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="02f510b0a4e3557ce2149e475e6e82014f8ef252" translate="yes" xml:space="preserve">
          <source>Ref &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.text.encoding.aspx&quot;&gt;this link.&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.text.encoding.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このリンクを&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照し&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;てください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="363506df10662d63102d4ce4295ee324d6a6c259" translate="yes" xml:space="preserve">
          <source>Ref this page.</source>
          <target state="translated">このページを参照してください。</target>
        </trans-unit>
        <trans-unit id="9b1479ef7d39111457b3930a7066c6d6b6370503" translate="yes" xml:space="preserve">
          <source>Regardless of whether you intend to send this encrypted data over the network, load it back into memory later, or steam it to another process, you are clearly intending to &lt;em&gt;decrypt&lt;/em&gt; it at some point. In that case, the answer is that you're defining a communication protocol. A communication protocol should not be &lt;strong&gt;defined&lt;/strong&gt; in terms of implementation details of your programming language and its associated runtime. There are several reasons for this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この暗号化されたデータをネットワーク経由で送信するのか、後でメモリにロードするのか、または別のプロセスにスチームするのかに関係なく、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ある時点でデータ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;解読する&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つもりであることは明らか&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その場合の答えは、通信プロトコルを定義しているということです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通信プロトコルは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、プログラミング言語とそれに関連するランタイムの実装の詳細に関して&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべきではありません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これにはいくつかの理由があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c036f48a13443ce781fbbab689cd7f571a952014" translate="yes" xml:space="preserve">
          <source>Regardless, the &lt;em&gt;actual&lt;/em&gt; original question and follow-up comments imply that the underlying memory is not being &quot;interpreted&quot; (which I assume means is not modified or read beyond the need to write it as-is), indicating that some implementation of the &lt;code&gt;Stream&lt;/code&gt; class should be used instead of reasoning about the data as strings at all.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かかわらず、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際の&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;元の質問およびフォローアップコメントは、基礎となるメモリを示し、（私は変更またはそのままそれを記述する必要を超えて読み出されていない手段を想定する）「解釈」されていないことを意味しているいくつかの実装&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列としてデータを推論する代わりに、クラスを使用する必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4546e7c2b857f3ab3a6eb87dffcf458ab7496382" translate="yes" xml:space="preserve">
          <source>See &lt;em&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms404377.aspx&quot;&gt;Character Encoding in the .NET Framework&lt;/a&gt;&lt;/em&gt; (MSDN) for more information.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細について&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms404377.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、.NET Framework&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（MSDN）での&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字エンコーディングを&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;してください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9dc63bb2af5cd1e369af72f5dacfe14b82975a3c" translate="yes" xml:space="preserve">
          <source>Simply use this:</source>
          <target state="translated">単純にこれを使ってください。</target>
        </trans-unit>
        <trans-unit id="6398f1a61d94c7b892f9d1ef44bbd28dcd1bc9e1" translate="yes" xml:space="preserve">
          <source>So I use &lt;a href=&quot;http://en.wikipedia.org/wiki/Base64&quot;&gt;Base64&lt;/a&gt; encoding of byte arrays in such cases, but hey, on the Internet there is only one solution to this in C#, and it has bug in it and is only one way, so I've fixed the bug and written back procedure. Here you are, future googlers:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;だから私&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はそのような場合にバイト配列の&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Base64&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Base64&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エンコーディング&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、ねえ、インターネットではこれに対する解決策はC＃に1つしかなく、それにはバグがあり、それは1つの方法に過ぎないため、バグを修正して書き戻しました手順。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;今後のGoogle社員：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="16fff7be164e3bccb0802acb8c0d4081298aa180" translate="yes" xml:space="preserve">
          <source>So choose an encoding and use it:</source>
          <target state="translated">なので、エンコードを選んで使いましょう。</target>
        </trans-unit>
        <trans-unit id="09ef2b0fdbe15cea061bf191e6b890a4d195162a" translate="yes" xml:space="preserve">
          <source>So if you just want the bytes used by the string, simply use &lt;code&gt;Encoding.Unicode&lt;/code&gt;, but it will be inefficient with storage space.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、文字列で使用されるバイトだけが必要な場合は、単に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Encoding.Unicode&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しますが、ストレージスペースが非効率的です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="11d1d1615bd28a9785dd7a854fb672407bfb0899" translate="yes" xml:space="preserve">
          <source>So, in short, trying to &quot;get the bytes of a string without using encodings&quot; is as impossible as &quot;writing a text without using any language&quot;.</source>
          <target state="translated">要するに、「エンコードを使わずに文字列のバイトを取得しようとする」というのは、「言語を一切使わずに文章を書く」のと同じくらい不可能なことなのです。</target>
        </trans-unit>
        <trans-unit id="0536e7418ee1a23db7d0d7a3f544577523ad1d88" translate="yes" xml:space="preserve">
          <source>So, we know that if we ask for the null conversion (i.e., from UTF-16 to UTF-16), we'll get the desired result:</source>
          <target state="translated">つまり、ヌル変換(つまりUTF-16からUTF-16への変換)を求めれば、望む結果が得られることがわかっています。</target>
        </trans-unit>
        <trans-unit id="baf3176971ea9ba7658a410ad325a9b5e5b59932" translate="yes" xml:space="preserve">
          <source>Specific Need</source>
          <target state="translated">具体的なニーズ</target>
        </trans-unit>
        <trans-unit id="d9851fedd08659ff8d8e4a81bd30b71762cdf523" translate="yes" xml:space="preserve">
          <source>Storing binary data in strings is probably the wrong approach because of the assumed encoding mentioned above! Whatever program or library stored that binary data in a &lt;code&gt;string&lt;/code&gt; (instead of a &lt;code&gt;byte[]&lt;/code&gt; array which would have been more appropriate) has already lost the battle before it has begun. If they are sending the bytes to you in a REST request/response or anything that &lt;em&gt;must&lt;/em&gt; transmit strings, &lt;a href=&quot;https://stackoverflow.com/q/201479/1739000&quot;&gt;Base64&lt;/a&gt; would be the right approach.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バイナリデータを文字列に格納することは、上記の想定エンコーディングのため、おそらく間違ったアプローチです！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プログラムまたはライブラリがそのバイナリデータを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;string&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;格納したもの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;byte[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列の方が適切だったのではなく）は、戦闘を開始する前にすでに負けています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;RESTリクエスト/レスポンス、または&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列を送信&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要のある&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ものでバイトを送信している場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/q/201479/1739000&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Base64&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が適切なアプローチです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f536b71e266ca742599e9e431ae560474b99326f" translate="yes" xml:space="preserve">
          <source>Sure, but that's where the fundamental error in the question arises.  The String is an object which could have an interesting data structure.  We already know it does, because it allows unpaired surrogates to be stored.  It might store the length.  It might keep a pointer to each of the 'paired' surrogates allowing quick counting.  Etc.  All of these extra bytes are not part of the character data.</source>
          <target state="translated">確かに、しかし、そこに問題の根本的な誤りが生じています。Stringは興味深いデータ構造を持つ可能性のあるオブジェクトです。私たちはすでにそれがあることを知っています。なぜなら、対になっていないサロゲートを格納することができるからです。文字列は長さを格納しているかもしれません。対になった」サロゲートへのポインタを保持しているかもしれない。などなど。これらの余分なバイトはすべて文字データの一部ではありません。</target>
        </trans-unit>
        <trans-unit id="5dbed11d9742fd76bd5a609ed5392a7eb7b65fac" translate="yes" xml:space="preserve">
          <source>Take note that the Unicode answer is 14 bytes in both instances, whereas the UTF-8 answer is only 9 bytes for the first, and only 7 for the second.</source>
          <target state="translated">Unicodeの答えは両方のインスタンスで14バイトであることに注意してください。一方、UTF-8の答えは最初のものは9バイト、2番目のものは7バイトです。</target>
        </trans-unit>
        <trans-unit id="b3d1691b90f3f3216a25d44b87d676d4186487c4" translate="yes" xml:space="preserve">
          <source>That doesn't get us the desired datatype but &lt;a href=&quot;https://stackoverflow.com/a/10380166/2226988&quot;&gt;Mehrdad's answer&lt;/a&gt; shows how to convert this Char array to a Byte array using &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.buffer.blockcopy%28v=vs.110%29.aspx&quot;&gt;BlockCopy&lt;/a&gt;. However, this copies the string twice! And, it too explicitly uses encoding-specific code: the datatype &lt;code&gt;System.Char&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これでは目的のデータ型は得られませんが、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/10380166/2226988&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mehrdadの答え&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.buffer.blockcopy%28v=vs.110%29.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;BlockCopy&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用してこのChar配列をByte配列に変換する方法を示しています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、これにより文字列が2回コピーされます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、エンコード固有のコードであるデータ型&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Char&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も明示的に使用しています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="54f180522aa90faa6b00e1d77c13baec981d8974" translate="yes" xml:space="preserve">
          <source>The .NET implementation might change the internal representation of strings. You may think this sounds farfetched, but this &lt;a href=&quot;https://www.vojtechruzicka.com/java-9-compact-strings/&quot;&gt;actually happened in Java 9&lt;/a&gt; to reduce memory usage. There's no reason .NET couldn't follow suit. &lt;a href=&quot;https://stackoverflow.com/a/14942142/1394393&quot;&gt;Skeet suggests&lt;/a&gt; that UTF-16 probably isn't optimal today give the rise of the emoji and other blocks of Unicode needing more than 2 bytes to represent as well, increasing the likelihood that the internal representation could change in the future.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.NET実装は、文字列の内部表現を変更する場合があります。これは遠く聞こえたように思えるかもしれませんが、これは&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.vojtechruzicka.com/java-9-compact-strings/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際には&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メモリ使用量を削減するため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;にJava 9で発生しました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。 .NETが追随できなかった理由はありません。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/14942142/1394393&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スキートは&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、UTF-16が今日最適ではない可能性が高い&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;こと&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;示唆し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ており、絵文字やUnicodeの他のブロックも出現するために2バイト以上必要であり、将来、内部表現が変更される可能性が高まります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac99e747a72258da36ac97be7a7d101d33946faf" translate="yes" xml:space="preserve">
          <source>The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets (No Excuses!)</source>
          <target state="translated">絶対に、絶対に、絶対に、すべてのソフトウェア開発者は、ユニコードと文字セットについて知っている必要があります(言い訳はありません!)。</target>
        </trans-unit>
        <trans-unit id="efd69fe7ce3c17569af8c335e4a585e33812e409" translate="yes" xml:space="preserve">
          <source>The accepted answer is very, very complicated. Use the included .NET classes for this:</source>
          <target state="translated">受け入れられた答えは、非常に、非常に複雑です。これには付属の.NETクラスを使用してください。</target>
        </trans-unit>
        <trans-unit id="e6447751f9c76dc2e9beb74a23a15045eb7a43a4" translate="yes" xml:space="preserve">
          <source>The answer is in two parts.</source>
          <target state="translated">答えは2つに分かれています。</target>
        </trans-unit>
        <trans-unit id="269e8cc0b61186d659e16fbf5f0486750f2105c8" translate="yes" xml:space="preserve">
          <source>The closest approach to the OP's question is Tom Blodget's, which actually goes into the object and extracts the bytes.  I say closest because it depends on implementation of the String Object.</source>
          <target state="translated">OPの質問に最も近いアプローチはTom Blodgetのもので、実際にオブジェクトの中に入ってバイトを抽出します。最も近いと言ったのは、Stringオブジェクトの実装に依存するからです。</target>
        </trans-unit>
        <trans-unit id="73514cd23fc4d868ca20e8a713f1a79185a82b12" translate="yes" xml:space="preserve">
          <source>The conversion may need to handle cases where the target character set or encoding doesn't support a character that's in the source. You have some choices: exception, substitution or skipping. The default policy is to substitute a '?'.</source>
          <target state="translated">変換は,ターゲットの文字セットやエンコーディングがソースにある文字をサポートしていない場合に処理する必要があるかもしれません。いくつかの選択肢があります:例外、置換、スキップです。デフォルトのポリシーは,'?</target>
        </trans-unit>
        <trans-unit id="3d56114e252ccdf8c1990a643ceb4bcb8856f666" translate="yes" xml:space="preserve">
          <source>The first part of your question (how to get the bytes) was already answered by others: look in the &lt;code&gt;System.Text.Encoding&lt;/code&gt; namespace.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;質問の最初の部分（バイトを取得する方法）はすでに他の人から回答されてい&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Text.Encoding&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名前空間を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;調べてください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="730a097f3e85ebdd613402d589b73704722141bb" translate="yes" xml:space="preserve">
          <source>The key issue is that a glyph in a string takes 32 bits (16 bits for a character code) but a byte only has 8 bits to spare.  A one-to-one mapping doesn't exist unless you restrict yourself to strings that only contain ASCII characters.  System.Text.Encoding has lots of ways to map a string to byte[], you need to pick one that avoids loss of information and that is easy to use by your client when she needs to map the byte[] back to a string.</source>
          <target state="translated">重要な問題は、文字列の中のグリフは32ビット(文字コードは16ビット)を必要としますが、バイトは8ビットしか余裕がないということです。ASCII文字のみを含む文字列に限定しない限り、1対1のマッピングは存在しません。System.Text.Encodingには文字列をbyte[]にマッピングする方法がたくさんありますが、情報の損失を避け、クライアントがbyte[]を文字列にマッピングする際に使いやすいものを選ぶ必要があります。</target>
        </trans-unit>
        <trans-unit id="a40a9ea14dae7563f50e320804e82a672b940687" translate="yes" xml:space="preserve">
          <source>The names &lt;code&gt;NonPortableCast&lt;/code&gt; and &lt;code&gt;DangerousGetPinnableReference&lt;/code&gt; should further the argument that you probably shouldn't be doing this.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;NonPortableCast&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;DangerousGetPinnableReference&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;という名前&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、おそらくこれを行うべきではないという議論を促進するはずです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dda539ce82b20525f557ab49a5c6264cab553f17" translate="yes" xml:space="preserve">
          <source>The only confusing thing is that .NET uses the name of a character set for the name of one particular encoding of that character set. &lt;code&gt;Encoding.Unicode&lt;/code&gt; should be called &lt;code&gt;Encoding.UTF16&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;唯一の混乱は、.NETが文字セットの名前を、その文字セットの1つの特定のエンコーディングの名前に使用していることです。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Encoding.Unicode&lt;/code&gt; は&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼ばれるべき&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Encoding.UTF16&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d87180cf4983e0ecdadae876f5161ab8b72c51c" translate="yes" xml:space="preserve">
          <source>The only way to get to the actual bytes the String is stored in is to use a pointer. The &lt;code&gt;fixed&lt;/code&gt; statement allows taking the address of values. From the C# spec:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列が格納されている実際のバイトを取得する唯一の方法は、ポインタを使用することです。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fixed&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の文は、値のアドレスを取ることができます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C＃仕様から：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="50c45a3db03e83c198d132a47dbec8da83013c3b" translate="yes" xml:space="preserve">
          <source>The program may be re-implemented in a different language or runtime in the future.</source>
          <target state="translated">このプログラムは将来、別の言語やランタイムで再実装される可能性があります。</target>
        </trans-unit>
        <trans-unit id="f9d8170d98950c22e6026933d7548298a3e52f98" translate="yes" xml:space="preserve">
          <source>The result is:</source>
          <target state="translated">結果が出ています。</target>
        </trans-unit>
        <trans-unit id="69f6a043be4a0ce901b3fde8264cd0887c3552fc" translate="yes" xml:space="preserve">
          <source>The string can be converted to byte array in few different ways, due to the following fact: .NET supports Unicode, and Unicode standardizes several difference encodings called UTFs. They have different lengths of byte representation but are equivalent in that sense that when a string is encoded, it can be coded back to the string, but if the string is encoded with one UTF and decoded in the assumption of different UTF if can be screwed up.</source>
          <target state="translated">文字列は次のような事実により、いくつかの異なる方法でバイト配列に変換することができます:.NETはUnicodeをサポートしており、UnicodeはUTFと呼ばれるいくつかの異なるエンコーディングを標準化しています。これらはバイト表現の長さが異なりますが、文字列がエンコードされたときに文字列に符号化されて戻ってくるという意味では同等ですが、1つのUTFでエンコードされた文字列を別のUTFを前提にデコードしてしまうと台無しになってしまうことがあります。</target>
        </trans-unit>
        <trans-unit id="8c74ce348a5dbb8a79201c3a0b78651da595424f" translate="yes" xml:space="preserve">
          <source>This function will get you a copy of the bytes underlying your string, pretty quickly. You'll get those bytes in whatever way they are encoding on your system. This encoding is almost certainly UTF-16LE but that is an implementation detail you shouldn't have to care about.</source>
          <target state="translated">この関数は、文字列の根底にあるバイトのコピーを素早く取得します。これらのバイトは、あなたのシステムでエンコーディングされている方法で取得します。このエンコーディングはほぼ確実に UTF-16LE ですが、これは実装の詳細を気にする必要はありません。</target>
        </trans-unit>
        <trans-unit id="5ea82f427c53e42188bc1a0b6b4f0e4e4450be8c" translate="yes" xml:space="preserve">
          <source>This is a popular question. It is important to understand what the question author is asking, and that it is different from what is likely the most common need. To discourage misuse of the code where it is not needed, I've answered the later first.</source>
          <target state="translated">これはよくある質問です。質問者が何を求めているのかを理解することが重要であり、それが最も一般的な必要性であろうものとは異なることを理解することが重要です。必要のないところでのコードの誤用を防ぐために、私は最初に後の方に答えました。</target>
        </trans-unit>
        <trans-unit id="4d255839cccd5531ecdc7b87cc97e8633d588bb1" translate="yes" xml:space="preserve">
          <source>This is because, as Tyler so aptly &lt;a href=&quot;https://chat.stackoverflow.com/transcript/message/39942929#39942929&quot;&gt;said&lt;/a&gt;, &quot;Strings aren't pure data. They also have &lt;a href=&quot;http://www.diffen.com/difference/Data_vs_Information&quot;&gt;information&lt;/a&gt;.&quot; In this case, the information is an encoding that was assumed when the string was created.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、タイラーがそう適切に&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://chat.stackoverflow.com/transcript/message/39942929#39942929&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;言ったように&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、「文字&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;列&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は純粋なデータではない。それらには&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.diffen.com/difference/Data_vs_Information&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;情報&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もある&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この場合、情報は、文字列が作成されたときに想定されたエンコーディングです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1337785d661cc653a07caf296384461bb676e002" translate="yes" xml:space="preserve">
          <source>To do so, the compiler writes code skip over the other parts of the string object with &lt;code&gt;RuntimeHelpers.OffsetToStringData&lt;/code&gt;. So, to get the raw bytes, just create a pointer to the string and copy the number of bytes needed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのために、コンパイラーは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;RuntimeHelpers.OffsetToStringData&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して文字列オブジェクトの他の部分をスキップするコードを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;記述し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、生のバイトを取得するには、文字列へのポインタを作成し、必要なバイト数をコピーするだけです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c07a189f95468b3a4f60c069a1ab01d5692eb38" translate="yes" xml:space="preserve">
          <source>Try that with &lt;strong&gt;System.Text.Encoding.UTF8.GetBytes&lt;/strong&gt; or &lt;strong&gt;System.Text.Encoding.Unicode.GetBytes&lt;/strong&gt;, they will merely replace high surrogate characters with value &lt;strong&gt;fffd&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Text.Encoding.UTF8.GetBytes&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Text.Encoding.Unicode.GetBytes&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でそれを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;試してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、それらは単に高サロゲート文字を値&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;fffdで&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;置き換えます&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="82808995e973592a5d7502f8e8a62ff736880d72" translate="yes" xml:space="preserve">
          <source>Try this, a lot less code:</source>
          <target state="translated">試してみてください、コードが少なくて済みます。</target>
        </trans-unit>
        <trans-unit id="2dbfa18abdc4b7e6d736fb2be782c7623df34609" translate="yes" xml:space="preserve">
          <source>Two ways:</source>
          <target state="translated">2つの方法があります。</target>
        </trans-unit>
        <trans-unit id="588b58a71870cebadf8938b04931b4163a3550c5" translate="yes" xml:space="preserve">
          <source>Upon being asked what you intend to do with the bytes, you &lt;a href=&quot;https://stackoverflow.com/questions/472906/how-do-i-get-a-consistent-byte-representation-of-strings-in-c-sharp-without-manu?rq=1#comment290510_472906&quot;&gt;responded&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バイトをどうするつもりなのか尋ねられたら、次のように&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/472906/how-do-i-get-a-consistent-byte-representation-of-strings-in-c-sharp-without-manu?rq=1#comment290510_472906&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;答えました&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bc0e34154d952ed72b15f5d9618112640d548177" translate="yes" xml:space="preserve">
          <source>Use:</source>
          <target state="translated">Use:</target>
        </trans-unit>
        <trans-unit id="8b07402f794ee7869e95ec64ac9ed4c8891a44d9" translate="yes" xml:space="preserve">
          <source>Using an encoding could give you trouble if you have 'strings' with invalid characters, but that shouldn't happen.  If you are getting data into your string with invalid characters you are doing it wrong.  You should probably be using a byte array or a Base64 encoding to start with.</source>
          <target state="translated">エンコーディングを使用すると、無効な文字を含む「文字列」がある場合に問題が発生する可能性がありますが、そのようなことは起こらないはずです。もし、文字列に無効な文字が含まれているのであれば、それは間違った方法で行われています。最初からバイト配列かBase64エンコーディングを使うべきでしょう。</target>
        </trans-unit>
        <trans-unit id="df3c7f56193a6836b84188f6c0a85cf34be8d7fa" translate="yes" xml:space="preserve">
          <source>Utf8 is a popular encoding, it is compact and not lossy.</source>
          <target state="translated">Utf8 は人気のあるエンコーディングで、コンパクトで損失が少ないです。</target>
        </trans-unit>
        <trans-unit id="64fb9099f037694f04e41f89d909bdd2f91661fe" translate="yes" xml:space="preserve">
          <source>Well, I've read all answers and they were about using encoding or one about serialization that drops unpaired surrogates.</source>
          <target state="translated">まあ、すべての回答を読んでみたが、エンコードを使うことについてのものや、アンペアされていないサロゲートを落とすシリアル化についてのものがあった。</target>
        </trans-unit>
        <trans-unit id="f5bcb3383297f0cc19ad735baf6986d6c50a4f49" translate="yes" xml:space="preserve">
          <source>What you want is each character's bytes in an array.  And that is where 'encoding' comes in.  By default you will get UTF-16LE.  If you don't care about the bytes themselves except for the round trip then you can choose any encoding including the 'default', and convert it back later (assuming the same parameters such as what the default encoding was, code points, bug fixes, things allowed such as unpaired surrogates, etc.</source>
          <target state="translated">あなたが欲しいのは、各文字のバイトを配列にしたものです。ここで「エンコーディング」の出番です。デフォルトでは UTF-16LE を取得します。もしあなたがラウンドトリップ以外のバイトそのものを気にしないのであれば、「デフォルト」を含む任意のエンコーディングを選択して、後で変換することができます (デフォルトのエンコーディングが何であったか、コードポイント、バグ修正、アンペアされていないサロゲートのような許可されたものなど、同じパラメータを想定しています)。</target>
        </trans-unit>
        <trans-unit id="e128d2a9a6c10ff324ef1df3d88b4a6e7fcaf4be" translate="yes" xml:space="preserve">
          <source>Which brings me to the second part... picking the &lt;code&gt;Unicode&lt;/code&gt; encoding &lt;em&gt;&lt;strong&gt;is&lt;/strong&gt;&lt;/em&gt; telling .Net to use the underlying bytes. You do need to pick this encoding, because when some new-fangled Unicode-Plus comes out the .Net runtime needs to be free to use this newer, better encoding model without breaking your program. But, for the moment (and forseeable future), just choosing the Unicode encoding gives you what you want.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これで2番目の部分に進みます... &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Unicode&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エンコーディングを選択する&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、.Netに基になるバイトを使用するように指示します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;新しいエンコーディングのUnicode-Plusが出てきたとき、.Netランタイムはプログラムを壊すことなく、この新しいより優れたエンコーディングモデルを自由に使用できる必要があるため、このエンコーディングを選択する必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、現時点では（そして近い将来）、Unicodeエンコーディングを選択するだけで、必要なものが得られます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e57c91c65751984e438caf6215b56c4aac63d4a2" translate="yes" xml:space="preserve">
          <source>Which means how a string is stored is irrelevant.  You want a string &quot;Encoded&quot; into bytes in a byte array.</source>
          <target state="translated">つまり、文字列がどのように格納されるかは関係ないということです。あなたは文字列を「エンコード」してバイト配列のバイトにしたいのです。</target>
        </trans-unit>
        <trans-unit id="5633e0314b2479ba38f1d9b3bdc10f132ecabdb7" translate="yes" xml:space="preserve">
          <source>With the advent of &lt;a href=&quot;https://github.com/dotnet/corefxlab/blob/master/docs/specs/span.md&quot;&gt;&lt;code&gt;Span&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; released with C# 7.2, the canonical technique to capture the underlying memory representation of a string into a managed byte array is:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C＃7.2でリリースされた&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/dotnet/corefxlab/blob/master/docs/specs/span.md&quot;&gt; &lt;code&gt;Span&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の出現により&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、文字列の基礎となるメモリ表現をマネージバイト配列にキャプチャする正規の手法は次のとおりです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dea489a74815f747f40610f8c1ea45fb4f1113f4" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://stackoverflow.com/a/10380166/369792&quot;&gt;Mehrdad's answer&lt;/a&gt;, but it does actually use an encoding because chars are UTF-16.  It calls ToCharArray which looking at &lt;a href=&quot;https://referencesource.microsoft.com/#mscorlib/system/string.cs,d78d4544220d96be&quot;&gt;the source&lt;/a&gt; creates a &lt;code&gt;char[]&lt;/code&gt; and copies the memory to it directly.  Then it copies the data to a byte array that is also allocated.  So under the hood it is copying the underlying bytes &lt;em&gt;twice&lt;/em&gt; and allocating a char array that is not used after the call.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/10380166/369792&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mehrdadの回答&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、文字はUTF-16であるため、実際にはエンコーディングを使用します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://referencesource.microsoft.com/#mscorlib/system/string.cs,d78d4544220d96be&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、ソース&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を確認して&lt;/font&gt;&lt;/font&gt; &lt;code&gt;char[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を作成し、メモリを直接コピーする&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ToCharArrayを呼び出します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、割り当てられているバイト配列にデータをコピーします。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、内部的には、基礎となるバイトを&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2回&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コピーし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、呼び出し後に使用されないchar配列を割り当てます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8bc23768b511b70873e76a6a0ac6639f7c5b9bfd" translate="yes" xml:space="preserve">
          <source>You can use following code to convert a &lt;code&gt;string&lt;/code&gt; to a &lt;code&gt;byte array&lt;/code&gt; in .NET</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次のコードを使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、.NETで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;string&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;byte array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変換でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ddb52534c12174eb56c30fd283e29b52e1f810e2" translate="yes" xml:space="preserve">
          <source>You can use the following code for conversion between string and byte array.</source>
          <target state="translated">文字列とバイト配列の変換には以下のコードを使用します。</target>
        </trans-unit>
        <trans-unit id="c0fb9dbcf124da24e60d780c2987c4af0aa8c923" translate="yes" xml:space="preserve">
          <source>You may &lt;em&gt;certainly&lt;/em&gt; choose to use UTF-16 directly if you find that your process performs significantly better since .NET uses it internally or for any other reason, but you need to choose that encoding explicitly and perform those conversions explicitly in your code rather than depending on .NET's internal implementation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたは可能&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;確かに&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .NETが内部またはその他の理由のためにそれを使用しますが、明示的にエンコードすることを選択して、あなたのコード内で明示的にそれらの変換を実行する必要がなく、依存するので、あなたが有意に良好あなたのプロセスを実行することを発見した場合、直接UTF-16を使用することを選択します.NETの内部実装。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="045aa4e470db14da85abf8b4becab0c68d6e6753" translate="yes" xml:space="preserve">
          <source>You may need to communicate with a process implemented in a different language or runtime. (This might include a server running on another machine or sending the string to a JavaScript browser client, for example.)</source>
          <target state="translated">別の言語やランタイムで実装されたプロセスと通信する必要があるかもしれません。(これには、別のマシン上で実行されているサーバや、JavaScriptブラウザクライアントなどに文字列を送信することが含まれるかもしれません)。</target>
        </trans-unit>
        <trans-unit id="4605a05b00cc5f119e23424e593675ac7ef459d2" translate="yes" xml:space="preserve">
          <source>You need to take the encoding into account, because 1 character could be represented by 1 &lt;strong&gt;or more&lt;/strong&gt; bytes (up to about 6), and different encodings will treat these bytes differently.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1文字は1 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バイト&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以上&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（最大約6）で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;表すことができ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、エンコードが異なるとこれらのバイトの扱いが異なる&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、エンコードを考慮する必要があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8080d01b7f4ec171f7f5a4fdb095a0253015283e" translate="yes" xml:space="preserve">
          <source>[For] an expression of type string, ... the initializer computes the
  address of the first character in the string.</source>
          <target state="translated">文字列型の式の場合、...イニシャライザは文字列の最初の文字のアドレスを計算します。</target>
        </trans-unit>
        <trans-unit id="5abad554f427cc892658b8d6a97b4d1dd5d837a3" translate="yes" xml:space="preserve">
          <source>take this example sample:</source>
          <target state="translated">この例のサンプルを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="a940fdbe080bf3b406fffafd133dc5497c184ece" translate="yes" xml:space="preserve">
          <source>谢谢！</source>
          <target state="translated">谢谢！</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
