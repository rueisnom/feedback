<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/415511">
    <body>
      <group id="415511">
        <trans-unit id="a4112a1189b4be953983fb860ee034aa6a0a3145" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.isoformat()&lt;/code&gt; is in the documentation, but not yet here
(this is mighty similar to @Ray Vega's answer):</source>
          <target state="translated">&lt;code&gt;.isoformat()&lt;/code&gt; 在文档中，但尚未在此处（这与@Ray Vega的答案非常相似）：</target>
        </trans-unit>
        <trans-unit id="ba0f105b17d5fba3424abfb2a4cfdbd0e09e6dfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datetime.now()&lt;/code&gt; returns the current time as a naive datetime object that represents time in the local timezone. That value may be ambiguous e.g., during DST transitions (&quot;fall back&quot;). To avoid ambiguity either UTC timezone should be used:</source>
          <target state="translated">&lt;code&gt;datetime.now()&lt;/code&gt; 返回当前时间作为朴素的datetime对象，该对象表示本地时区中的时间。 该值可能是不明确的，例如在DST转换期间（&amp;ldquo;回退&amp;rdquo;）。 为避免歧义，应使用UTC时区：</target>
        </trans-unit>
        <trans-unit id="37002bfdd230992b363675cfc3b4d78ba0fe5028" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datetime&lt;/code&gt; module</source>
          <target state="translated">&lt;code&gt;datetime&lt;/code&gt; 模块</target>
        </trans-unit>
        <trans-unit id="480f966ba05d90ecdd0225d6245ce393d120660e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t&lt;/code&gt; - float number, good for time interval measurement.</source>
          <target state="translated">&lt;code&gt;t&lt;/code&gt; -浮点数，适用于时间间隔测量。</target>
        </trans-unit>
        <trans-unit id="e958fb008200d129e73055418c00152f0ba2070a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Hour:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Hour:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f1e7600e92663b78b8712f8661a8939980d7e7ea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Millisecond:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Millisecond:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a5513b770ec651e1039e115fa7c9121aec5c4afb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Minute:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Minute:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8fafa7ae62d85651c85f621ff0fd36e1dd7dc3a7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Second:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Second:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4f28e0377073aec56bddf06e353af688afb6eafe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Current time of a timezone&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;时区的当前时间&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f72f9fbb351cd40f2704a6ec7caebce56068d214" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;date&lt;/strong&gt; will print date and &lt;strong&gt;time&lt;/strong&gt; will print time.</source>
          <target state="translated">&lt;strong&gt;日期&lt;/strong&gt;将打印日期， &lt;strong&gt;时间&lt;/strong&gt;将打印时间。</target>
        </trans-unit>
        <trans-unit id="7be91fe50882db0356a834bb9cd2e5e852f4de1e" translate="yes" xml:space="preserve">
          <source>Add or remove zeroes from the last multiplication to adjust number of decimal points, or just:</source>
          <target state="translated">在最后的乘法中加入或去除零,以调整小数点的数量,或者只是。</target>
        </trans-unit>
        <trans-unit id="4656348a9c9a5f3cb8b83f5d24ae0ac3338d2f56" translate="yes" xml:space="preserve">
          <source>Also, this table is a necessary reference for choosing the appropriate format codes to get the date formatted just the way you want it (from Python &quot;datetime&quot; documentation &lt;a href=&quot;https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior&quot;&gt;here&lt;/a&gt;).</source>
          <target state="translated">另外，此表对于选择适当的格式代码来获取所需格式的日期也是必要的参考（来自Python&amp;ldquo; datetime&amp;rdquo;文档）。</target>
        </trans-unit>
        <trans-unit id="70316daf683d8fa2ada87f7706f0981d6f1d94cd" translate="yes" xml:space="preserve">
          <source>An hour ago:</source>
          <target state="translated">一个小时前</target>
        </trans-unit>
        <trans-unit id="50f990405f85af0a4977164481e6ce1af6562a06" translate="yes" xml:space="preserve">
          <source>And just the time:</source>
          <target state="translated">而就在这个时候。</target>
        </trans-unit>
        <trans-unit id="e7a8d31a0b1be329302150467a7f2f5c401fb61c" translate="yes" xml:space="preserve">
          <source>And on it goes.  Long story short: Pendulum attempts to do for date and time what requests did for HTTP.  It's worth consideration, particularly for both its ease of use and extensive documentation.</source>
          <target state="translated">然后就开始了。长话短说:Pendulum试图做的是日期和时间,而HTTP请求做的是什么。它值得考虑,特别是它的易用性和丰富的文档。</target>
        </trans-unit>
        <trans-unit id="79e0690376b2a575a06633fd818caa5bc4763c22" translate="yes" xml:space="preserve">
          <source>And we see we can easily convert to timezones from the original utc object.</source>
          <target state="translated">而我们看到,我们可以很容易地从原来的utc对象转换为时区。</target>
        </trans-unit>
        <trans-unit id="aab152d24d53c4317ec6407e8606bf33bd03b1e4" translate="yes" xml:space="preserve">
          <source>Because no one has mentioned it yet, and this is something I ran into recently... a pytz timezone's fromutc() method combined with datetime's utcnow() is the best way I've found to get a useful current time (and date) in any timezone.</source>
          <target state="translated">因为还没有人提到过,而这是我最近遇到的事情......pytz时区的fromutc()方法与datetime的utcnow()方法结合起来,是我发现在任何时区获得有用的当前时间(和日期)的最好方法。</target>
        </trans-unit>
        <trans-unit id="ce169aa3a5d701f913d1d906db071bfc3ed8165c" translate="yes" xml:space="preserve">
          <source>But I want &lt;strong&gt;only milliseconds&lt;/strong&gt;, right? The shortest way to get them:</source>
          <target state="translated">但是我只想&lt;strong&gt;毫秒&lt;/strong&gt; ，对吗？ 获得它们的最短方法：</target>
        </trans-unit>
        <trans-unit id="88670f3e1ab678ed8307efce868e253554f8a4b6" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;now()&lt;/code&gt; function returns output in the &lt;code&gt;YYYY-MM-DD HH:MM:SS:MS&lt;/code&gt; format. Use the below sample script to get the current date and time in a Python script and print results on the screen. Create file &lt;code&gt;getDateTime1.py&lt;/code&gt; with the below content.</source>
          <target state="translated">默认情况下， &lt;code&gt;now()&lt;/code&gt; 函数以 &lt;code&gt;YYYY-MM-DD HH:MM:SS:MS&lt;/code&gt; 格式返回输出。 使用以下示例脚本在Python脚本中获取当前日期和时间，并在屏幕上打印结果。 使用以下内容创建文件 &lt;code&gt;getDateTime1.py&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22bdf47be3fd0a53ecdf5d6edbde0a2c6b97f0e0" translate="yes" xml:space="preserve">
          <source>Do</source>
          <target state="translated">Do</target>
        </trans-unit>
        <trans-unit id="8c4545eef0bbb1ebd9c03599f8e3336329a56933" translate="yes" xml:space="preserve">
          <source>Do &lt;code&gt;dir(date)&lt;/code&gt; or any variables including the package. You can get all the attributes and methods associated with the variable.</source>
          <target state="translated">执行 &lt;code&gt;dir(date)&lt;/code&gt; 或任何变量，包括软件包。 您可以获得与该变量关联的所有属性和方法。</target>
        </trans-unit>
        <trans-unit id="797b84b5fdc36ad6870fe916c87a5adc229a01c2" translate="yes" xml:space="preserve">
          <source>Equivalently, in Python 3 we have the &lt;code&gt;timezone&lt;/code&gt; class with a utc &lt;code&gt;timezone&lt;/code&gt; instance attached, which also makes the object timezone aware (but to convert to another timezone without the handy &lt;code&gt;pytz&lt;/code&gt; module is left as an exercise to the reader):</source>
          <target state="translated">等效地，在Python 3中，我们附加了带有utc &lt;code&gt;timezone&lt;/code&gt; 实例的 &lt;code&gt;timezone&lt;/code&gt; 类，这也使对象知道时区（但在没有方便的 &lt;code&gt;pytz&lt;/code&gt; 模块的情况下将其转换为另一个时区，留给读者练习）：</target>
        </trans-unit>
        <trans-unit id="13b88b85bb8a84ce6ff8d9c964ac94eae577f77c" translate="yes" xml:space="preserve">
          <source>For a specific timezone:</source>
          <target state="translated">对于特定的时区。</target>
        </trans-unit>
        <trans-unit id="7427c3c23b76654873617da699a1724887560c9f" translate="yes" xml:space="preserve">
          <source>For instance, the answer to the original question:</source>
          <target state="translated">例如,对原问题的回答。</target>
        </trans-unit>
        <trans-unit id="4b0b74869722425e1bdd7065238c671d574e0fb1" translate="yes" xml:space="preserve">
          <source>For this example, the output will be like this: &lt;code&gt;'2013-09-18 11:16:32'&lt;/code&gt;</source>
          <target state="translated">对于此示例，输出将如下所示： &lt;code&gt;'2013-09-18 11:16:32'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5fa7cfdce17750480776494fd7d9946728c28bc" translate="yes" xml:space="preserve">
          <source>Here is the list of &lt;a href=&quot;https://docs.python.org/library/datetime.html#strftime-and-strptime-format-codes&quot;&gt;&lt;code&gt;strftime&lt;/code&gt; directives&lt;/a&gt;.</source>
          <target state="translated">这是&lt;a href=&quot;https://docs.python.org/library/datetime.html#strftime-and-strptime-format-codes&quot;&gt; &lt;code&gt;strftime&lt;/code&gt; 指令&lt;/a&gt;的列表。</target>
        </trans-unit>
        <trans-unit id="86df8f688813f3fa56db7248d7594d73b3710ed7" translate="yes" xml:space="preserve">
          <source>How do I get the current time in Python?</source>
          <target state="translated">如何在Python中获取当前时间?</target>
        </trans-unit>
        <trans-unit id="cd9dd4f851c6a9265d567e8695f627e0170daf04" translate="yes" xml:space="preserve">
          <source>How to get the current time in Python</source>
          <target state="translated">如何用Python获取当前时间</target>
        </trans-unit>
        <trans-unit id="6e4c33efa5cdfbb0d8e942bf506ed2ea01e7a36a" translate="yes" xml:space="preserve">
          <source>However, none of the datetime objects we've created so far can be easily converted to various timezones. We can solve that problem with the &lt;code&gt;pytz&lt;/code&gt; module:</source>
          <target state="translated">但是，到目前为止，我们创建的datetime对象都无法轻松转换为各种时区。 我们可以使用 &lt;code&gt;pytz&lt;/code&gt; 模块解决该问题：</target>
        </trans-unit>
        <trans-unit id="47c085634ba8fbc391377e211e7071971300a3c6" translate="yes" xml:space="preserve">
          <source>I want to get the time with milliseconds. A simple way to get them:</source>
          <target state="translated">我想用毫秒来获取时间。一个简单的方法来获取。</target>
        </trans-unit>
        <trans-unit id="fa8a5094408659f2501339346fb46cb56b11a072" translate="yes" xml:space="preserve">
          <source>If all you want is the time, you can then get that with &lt;code&gt;local_time.time()&lt;/code&gt;.</source>
          <target state="translated">如果您只想要时间，则可以使用 &lt;code&gt;local_time.time()&lt;/code&gt; 获得时间。</target>
        </trans-unit>
        <trans-unit id="b80ded214b0b8f54c213c8b913cc952b2fca523c" translate="yes" xml:space="preserve">
          <source>If you just want the current timestamp in ms (for example, to measure execution time), you can also use the &quot;timeit&quot; module:</source>
          <target state="translated">如果你只是想得到当前的时间戳(例如,测量执行时间),也可以使用 &quot;timeit &quot;模块。</target>
        </trans-unit>
        <trans-unit id="d64b9c724b85834159fe1d3df9a72dbc00b2a9e9" translate="yes" xml:space="preserve">
          <source>If you live in the D.C. area (like me) the latency might not be too bad...</source>
          <target state="translated">如果你住在华盛顿地区(像我一样),延迟可能不会太差。</target>
        </trans-unit>
        <trans-unit id="7efa38d57840ee76848e2727798197e2b3d5e67b" translate="yes" xml:space="preserve">
          <source>If you need current time as a &lt;code&gt;time&lt;/code&gt; object:</source>
          <target state="translated">如果您需要当前时间作为 &lt;code&gt;time&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="3544754ec0caf449db16ce0e4ecf185844bd270a" translate="yes" xml:space="preserve">
          <source>If you're displaying the time with Python for the user, &lt;code&gt;ctime&lt;/code&gt; works nicely, not in a table (it doesn't typically sort well), but perhaps in a clock. However, I personally recommend, when dealing with time in Python, either using Unix time, or a timezone aware UTC &lt;code&gt;datetime&lt;/code&gt; object.</source>
          <target state="translated">如果您要使用Python为用户显示时间，则 &lt;code&gt;ctime&lt;/code&gt; 可以很好地工作，而不是在表中（通常排序不佳），而是在时钟中。 但是，我个人建议在Python中使用Unix时间或支持时区的UTC &lt;code&gt;datetime&lt;/code&gt; 对象处理时间时。</target>
        </trans-unit>
        <trans-unit id="ba57f94eae45684b208c88c1b416d1c5fe384b94" translate="yes" xml:space="preserve">
          <source>It will print in HH:MM:SS format.</source>
          <target state="translated">它将以HHH:MM:SS格式打印。</target>
        </trans-unit>
        <trans-unit id="f62a02af92108e89130a1e272de6beae556c6637" translate="yes" xml:space="preserve">
          <source>One could ostensibly serialize this object for UTC time and store &lt;em&gt;that&lt;/em&gt; in a database, but it would require far more memory and be more prone to error than simply storing the Unix Epoch time, which I demonstrated first.</source>
          <target state="translated">表面上可以将这个对象序列化为UTC时间并将其存储在数据库中，但是比起我首先演示的Unix Epoch时间，它需要更多的内存并且更容易出错。</target>
        </trans-unit>
        <trans-unit id="f385551838e1f973d52ac4bec8518e79f6cb84fe" translate="yes" xml:space="preserve">
          <source>Or a timezone-aware object that has the corresponding timezone info attached (Python 3.2+):</source>
          <target state="translated">或者是一个时区感知对象,它具有相应的时区信息(Python 3.2+)。</target>
        </trans-unit>
        <trans-unit id="b9027258697ef28764f395425a975422f0e81d96" translate="yes" xml:space="preserve">
          <source>Or if you want the gist.</source>
          <target state="translated">或者,如果你想知道要点。</target>
        </trans-unit>
        <trans-unit id="4b874a9f4b0dc1391c7979b9932e538a76f4ef41" translate="yes" xml:space="preserve">
          <source>Or the UTC version:</source>
          <target state="translated">或者说是UTC版本。</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="e35215ba144662f857f360b0218d098b98497893" translate="yes" xml:space="preserve">
          <source>Presumably most of the rest of you mean somewhere else.</source>
          <target state="translated">你们中的大多数人可能是指其他地方</target>
        </trans-unit>
        <trans-unit id="956e866069f6b4837df148cb381d772a11d6a253" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://docs.python.org/3/library/datetime.html&quot;&gt;&lt;strong&gt;the documentation&lt;/strong&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;https://docs.python.org/3/library/datetime.html&quot;&gt;&lt;strong&gt;文档&lt;/strong&gt;&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c63afcf012b8bd0149f4bc65d2b6ef6a7b0a6a4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;https://stackoverflow.com/questions/415511/how-to-get-current-time-in-python/415519#415519&quot;&gt;Harley's answer&lt;/a&gt;, but use the &lt;code&gt;str()&lt;/code&gt; function for a quick-n-dirty, slightly more human readable format:</source>
          <target state="translated">与&lt;a href=&quot;https://stackoverflow.com/questions/415511/how-to-get-current-time-in-python/415519#415519&quot;&gt;Harley的答案&lt;/a&gt;类似，但是将 &lt;code&gt;str()&lt;/code&gt; 函数用于快速n脏的，更易理解的格式：</target>
        </trans-unit>
        <trans-unit id="13a762917821bff8d83caf56baa57be783f5c610" translate="yes" xml:space="preserve">
          <source>That outputs the current GMT in the specified format. There is also a &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.localtime&quot;&gt;&lt;code&gt;localtime()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">以指定格式输出当前GMT。 还有一个&lt;a href=&quot;https://docs.python.org/3/library/time.html#time.localtime&quot;&gt; &lt;code&gt;localtime()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="3b34655e05bce6bcd5081c98f617e618089c2e38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;datetime.now&lt;/code&gt; is a class method that returns the current time. It uses the &lt;code&gt;time.localtime&lt;/code&gt; without the timezone info (if not given, otherwise see timezone aware below). It has a representation (which would allow you to recreate an equivalent object) echoed on the shell, but when printed (or coerced to a &lt;code&gt;str&lt;/code&gt;), it is in human readable (and nearly ISO) format, and the lexicographic sort is equivalent to the chronological sort:</source>
          <target state="translated">&lt;code&gt;datetime.now&lt;/code&gt; 是一个返回当前时间的类方法。 它使用 &lt;code&gt;time.localtime&lt;/code&gt; 而不包含时区信息（如果未提供，否则请参阅下面的了解时区）。 它具有在外壳上回显的表示形式（允许您重新创建等效的对象），但是在打印（或强制转换为 &lt;code&gt;str&lt;/code&gt; ）时，它具有人类可读（和几乎ISO）的格式，而词典编排相当于按时间顺序排序：</target>
        </trans-unit>
        <trans-unit id="d6916c8c4d93dbd00885805e0ebb18cfe4c7307f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;datetime&lt;/code&gt; module is also quite useful here:</source>
          <target state="translated">&lt;code&gt;datetime&lt;/code&gt; 模块在这里也非常有用：</target>
        </trans-unit>
        <trans-unit id="60f7f8f9a02e4773cf19a07fb006d23f0df52e12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pytz&lt;/code&gt; module allows us to make our &lt;code&gt;datetime&lt;/code&gt; objects timezone aware and convert the times to the hundreds of timezones available in the &lt;code&gt;pytz&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;pytz&lt;/code&gt; 模块允许我们使我们的 &lt;code&gt;datetime&lt;/code&gt; 对象知道时区，并将时间转换为 &lt;code&gt;pytz&lt;/code&gt; 模块中可用的数百个时区。</target>
        </trans-unit>
        <trans-unit id="d54d6473ee3c263e4533072a855c281c1891c33f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;time&lt;/code&gt; module</source>
          <target state="translated">&lt;code&gt;time&lt;/code&gt; 模块</target>
        </trans-unit>
        <trans-unit id="b3ca25b1ba2eac9002df795ab5da3c2fc0640be7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;time&lt;/code&gt; module provides functions that tells us the time in &quot;seconds since the epoch&quot; as well as other utilities.</source>
          <target state="translated">&lt;code&gt;time&lt;/code&gt; 模块提供了一些功能，可以告诉我们时间&amp;ldquo;自纪元以来的秒数&amp;rdquo;以及其他实用程序。</target>
        </trans-unit>
        <trans-unit id="8ba7ec8cea463c89fd59e18dd278ec94ce331cf8" translate="yes" xml:space="preserve">
          <source>The following is what I use to get the time without having to format. Some people don't like the split method, but it is useful here:</source>
          <target state="translated">下面是我用的方法,不需要格式化就能得到时间。有的人不喜欢分页法,但在这里很有用。</target>
        </trans-unit>
        <trans-unit id="849deade087fc32f2568cd7519b6a1d3dbd656db" translate="yes" xml:space="preserve">
          <source>The other ways of viewing times are much more error prone, especially when dealing with data that may come from different time zones. You want there to be no confusion as to which timezone a string or serialized datetime object was intended for.</source>
          <target state="translated">其他查看时间的方式更容易出错,尤其是在处理来自不同时区的数据时。你希望一个字符串或序列化的日期时间对象不至于在哪个时区被混淆。</target>
        </trans-unit>
        <trans-unit id="c339bc65dff58001215eaa73ff30df39230f5b07" translate="yes" xml:space="preserve">
          <source>The output looks like below:</source>
          <target state="translated">输出看起来像下面这个样子。</target>
        </trans-unit>
        <trans-unit id="0b7303e3ac7080d5a48cc9ac732ea055f5fa10a1" translate="yes" xml:space="preserve">
          <source>The previous answers are all good suggestions, but I find it easiest to use &lt;code&gt;ctime()&lt;/code&gt;:</source>
          <target state="translated">前面的答案都是好的建议，但是我发现使用 &lt;code&gt;ctime()&lt;/code&gt; 最简单：</target>
        </trans-unit>
        <trans-unit id="9605d63a45aa526b9f2ac25c6b4186cc7aa24ac5" translate="yes" xml:space="preserve">
          <source>The quickest way is:</source>
          <target state="translated">最快捷的方法是:</target>
        </trans-unit>
        <trans-unit id="a366d85a563f08e6cca64025a468148a595d0d15" translate="yes" xml:space="preserve">
          <source>The use of the capital &lt;code&gt;Y&lt;/code&gt; gives the full year, and using &lt;code&gt;y&lt;/code&gt; would give &lt;code&gt;06/02/15&lt;/code&gt;.</source>
          <target state="translated">使用大写 &lt;code&gt;06/02/15&lt;/code&gt; &lt;code&gt;Y&lt;/code&gt; 表示全年，使用 &lt;code&gt;y&lt;/code&gt; 表示2015年6月2日。</target>
        </trans-unit>
        <trans-unit id="c01919b3937cb052b14b9cdc732edee1acd1d112" translate="yes" xml:space="preserve">
          <source>Then remove the leading &lt;code&gt;datetime.&lt;/code&gt; from all of the above.</source>
          <target state="translated">然后删除前导 &lt;code&gt;datetime.&lt;/code&gt; 以上所有。</target>
        </trans-unit>
        <trans-unit id="fbca529cbdc9e8306471128bb3b81bd005918c75" translate="yes" xml:space="preserve">
          <source>There is some difference for Unix and Windows platforms.</source>
          <target state="translated">Unix和Windows平台有一定的区别。</target>
        </trans-unit>
        <trans-unit id="c3f22df435ed9a1f48b89524ab4339a619d4cca0" translate="yes" xml:space="preserve">
          <source>There's a lot of standards which need addressing, including multiple RFCs and ISOs, to worry about.  Ever get them mixed up; not to worry, take a little look into &lt;code&gt;dir(pendulum.constants)&lt;/code&gt; There's a bit more than RFC and ISO formats there, though.</source>
          <target state="translated">有很多需要解决的标准，包括多个RFC和ISO。 曾经把它们混在一起； 不用担心，请看一下 &lt;code&gt;dir(pendulum.constants)&lt;/code&gt; ，不过那里还有RFC和ISO格式。</target>
        </trans-unit>
        <trans-unit id="ebb225a37b097f9938cef9cd8c13016cd8fc53a5" translate="yes" xml:space="preserve">
          <source>These outputs are different because the timestamp returned by &lt;code&gt;ctime()&lt;/code&gt; depends on your geographical location.</source>
          <target state="translated">这些输出是不同的，因为 &lt;code&gt;ctime()&lt;/code&gt; 返回的时间戳取决于您的地理位置。</target>
        </trans-unit>
        <trans-unit id="07063584c1dfdd9d2cbb592f9226b93e79919fc5" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;http://docs.python.org/library/time.html#module-time&quot;&gt;page&lt;/a&gt; has more details.</source>
          <target state="translated">此&lt;a href=&quot;http://docs.python.org/library/time.html#module-time&quot;&gt;页面&lt;/a&gt;有更多详细信息。</target>
        </trans-unit>
        <trans-unit id="13a58d7d892fd5ec3d0e1556cc324df31627e54a" translate="yes" xml:space="preserve">
          <source>This conversion is also not good for record-keeping (except in text that will only be parsed by humans - and with improved Optical Character Recognition and Artificial Intelligence, I think the number of these cases will diminish).</source>
          <target state="translated">这样的转换也不利于记录保存(除非是只有人类才能解析的文本--随着光学字符识别和人工智能的改进,我想这种情况会越来越少)。</target>
        </trans-unit>
        <trans-unit id="b51e52f263321fd6b82fdf3c8d57666036c93251" translate="yes" xml:space="preserve">
          <source>This gives a nicely formatted string representation of the current local time.</source>
          <target state="translated">这就给了当前本地时间一个很好的格式化字符串表示。</target>
        </trans-unit>
        <trans-unit id="07975bf1a1da74e8897d27e336c7099dac54c272" translate="yes" xml:space="preserve">
          <source>This is not ideal for human scheduling, however. If you have a future event you wish to take place at a certain point in time, you'll want to store that time with a string that can be parsed into a datetime object or a serialized datetime object (these will be described later).</source>
          <target state="translated">但是,这并不是人类调度的理想选择。如果你有一个未来事件希望在某个时间点发生,你会希望用一个可以解析成日期时间对象或序列化的日期时间对象的字符串来存储这个时间(这些将在后面描述)。</target>
        </trans-unit>
        <trans-unit id="ead09e2c048e086d720bc35c442c6582826511bd" translate="yes" xml:space="preserve">
          <source>This is the format you should get timestamps in for saving in databases. It is a simple floating point number that can be converted to an integer. It is also good for arithmetic in seconds, as it represents the number of seconds since Jan 1, 1970 00:00:00, and it is memory light relative to the other representations of time we'll be looking at next:</source>
          <target state="translated">这是你在数据库中保存时间戳的格式。它是一个简单的浮点数,可以转换为整数。它也适用于以秒为单位的算术,因为它代表了从1970年1月1日00:00:00:00开始的秒数,相对于我们接下来要看的其他时间表示方式,它的内存较小。</target>
        </trans-unit>
        <trans-unit id="fbf7c8ba8bbfdf0c77b06223d67267f704661c4c" translate="yes" xml:space="preserve">
          <source>This is what I ended up going with:</source>
          <target state="translated">这就是我最后的选择。</target>
        </trans-unit>
        <trans-unit id="a7409b441e9c7d6987d90b75c18ea4f73c2795eb" translate="yes" xml:space="preserve">
          <source>This question doesn't need a new answer just for the sake of it ... a shiny new-ish toy/module, however, is enough justification.  That being the &lt;a href=&quot;https://pendulum.eustace.io/docs/&quot;&gt;Pendulum library&lt;/a&gt;, which appears to do the sort of things which arrow attempted, except without the inherent flaws and bugs which beset arrow.</source>
          <target state="translated">这个问题并不仅仅是为了这个问题而需要一个新的答案&amp;hellip;&amp;hellip;但是，一个闪亮的新玩具/模块已经足够了。 那就是&lt;a href=&quot;https://pendulum.eustace.io/docs/&quot;&gt;Pendulum库&lt;/a&gt; ，它似乎可以完成arrow尝试的各种工作，但没有固有的缺陷和bug困扰着arrow。</target>
        </trans-unit>
        <trans-unit id="5e3aee22df5cfff0893905b51fe3f7f338269aa1" translate="yes" xml:space="preserve">
          <source>This timestamp does not account for leap-seconds, so it's not linear - leap seconds are ignored. So while it is not equivalent to the international UTC standard, it is close, and therefore quite good for most cases of record-keeping.</source>
          <target state="translated">这个时间戳不考虑闰秒,所以它不是线性的--闰秒被忽略了。因此,虽然它不等同于国际UTC标准,但它很接近,因此对于大多数情况下的记录保存来说是相当不错的。</target>
        </trans-unit>
        <trans-unit id="abbabf48b4135e81ab47c4e95b1d86004af988df" translate="yes" xml:space="preserve">
          <source>To change its output, add .format():</source>
          <target state="translated">要改变其输出,请添加.format()。</target>
        </trans-unit>
        <trans-unit id="d2bed44d03fd32e33a985cba036d49b0158e03dc" translate="yes" xml:space="preserve">
          <source>To get the hours, minutes, seconds and milliseconds to merge later, you can use these functions:</source>
          <target state="translated">要获得时、分、秒和毫秒的合并时间,可以使用这些功能。</target>
        </trans-unit>
        <trans-unit id="950a2de07a06ca46d20ad02c4a0b44fb7a0c8382" translate="yes" xml:space="preserve">
          <source>To save typing, you can import the &lt;code&gt;datetime&lt;/code&gt; object from the &lt;code&gt;datetime&lt;/code&gt; module:</source>
          <target state="translated">要保存类型，可以从 &lt;code&gt;datetime&lt;/code&gt; 模块导入 &lt;code&gt;datetime&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="068ad4dfebfbc33595ba34b37ad086721f2f3834" translate="yes" xml:space="preserve">
          <source>Try the arrow module from &lt;a href=&quot;http://crsmithdev.com/arrow/&quot;&gt;http://crsmithdev.com/arrow/&lt;/a&gt;:</source>
          <target state="translated">试用&lt;a href=&quot;http://crsmithdev.com/arrow/&quot;&gt;http://crsmithdev.com/arrow/中&lt;/a&gt;的箭头模块：</target>
        </trans-unit>
        <trans-unit id="3d3b92987114edff7768ff61d7ad208b310153e7" translate="yes" xml:space="preserve">
          <source>UTC is a time standard that is nearly equivalent to the GMT timezone. (While GMT and UTC do not change for Daylight Savings Time, their users may switch to other timezones, like British Summer Time, during the Summer.)</source>
          <target state="translated">UTC是一个时间标准,几乎等同于格林尼治标准时间。(虽然GMT和UTC不因夏令时而改变,但其用户可以在夏季期间切换到其他时区,如英国夏季时间)。</target>
        </trans-unit>
        <trans-unit id="5035446324fdba83237f99876babaf3d625f8a25" translate="yes" xml:space="preserve">
          <source>Unix Epoch Time</source>
          <target state="translated">Unix Epoch Time</target>
        </trans-unit>
        <trans-unit id="bc0e34154d952ed72b15f5d9618112640d548177" translate="yes" xml:space="preserve">
          <source>Use:</source>
          <target state="translated">Use:</target>
        </trans-unit>
        <trans-unit id="983592010bffe52a2160fb4dbe1050730d376027" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;https://en.wikipedia.org/wiki/Pandas_%28software%29&quot;&gt;pandas&lt;/a&gt; to get the current time, kind of overkilling the problem at hand:</source>
          <target state="translated">使用&lt;a href=&quot;https://en.wikipedia.org/wiki/Pandas_%28software%29&quot;&gt;熊猫&lt;/a&gt;来获取当前时间，有点过头了：</target>
        </trans-unit>
        <trans-unit id="c33194a234dc4b7c431f4d5a50f6f93dd855d615" translate="yes" xml:space="preserve">
          <source>What is the module/method used to get the current time?</source>
          <target state="translated">模块方法用于获取当前时间的模块方法是什么?</target>
        </trans-unit>
        <trans-unit id="f0788dba4aa2a6e0ebb8bced0a669c2ca9e864a5" translate="yes" xml:space="preserve">
          <source>When we say local, though what do we mean?  Well I mean:</source>
          <target state="translated">当我们说本地的时候,我们是什么意思?嗯,我的意思是:</target>
        </trans-unit>
        <trans-unit id="8e4b98a251ccef5dfd46094813cbb2d29763e380" translate="yes" xml:space="preserve">
          <source>Why not ask the &lt;a href=&quot;http://tycho.usno.navy.mil/cgi-bin/timer.pl&quot;&gt;U.S. Naval Observatory&lt;/a&gt;, the official timekeeper of the United States Navy?</source>
          <target state="translated">为什么不问&lt;a href=&quot;http://tycho.usno.navy.mil/cgi-bin/timer.pl&quot;&gt;美国海军&lt;/a&gt;的官方计时器美国海军天文台呢？</target>
        </trans-unit>
        <trans-unit id="353afa85bac0872c49fe8ca62d96fae1bdfe94e8" translate="yes" xml:space="preserve">
          <source>You can also make a naive datetime object aware with the &lt;code&gt;pytz&lt;/code&gt; timezone &lt;code&gt;localize&lt;/code&gt; method, or by replacing the tzinfo attribute (with &lt;code&gt;replace&lt;/code&gt;, this is done blindly), but these are more last resorts than best practices:</source>
          <target state="translated">您还可以使用 &lt;code&gt;pytz&lt;/code&gt; timezone &lt;code&gt;localize&lt;/code&gt; 方法或通过替换tzinfo属性（使用 &lt;code&gt;replace&lt;/code&gt; ，这是盲目的完成）来使幼稚的datetime对象知道，但是这些方法比最佳实践更多地是不得已 ：</target>
        </trans-unit>
        <trans-unit id="3ee84c2011282be6d1e0bf7006807cc44ad009e4" translate="yes" xml:space="preserve">
          <source>You can also represent the current time in the way preferred by your operating system (which means it can change when you change your system preferences, so don't rely on this to be standard across all systems, as I've seen others expect). This is typically user friendly, but doesn't typically result in strings one can sort chronologically:</source>
          <target state="translated">你也可以用你的操作系统所喜欢的方式来表示当前的时间(这意味着当你改变系统偏好时,它可能会改变,所以不要像我看到的其他人所期望的那样,依赖这一点成为所有系统的标准配置)。这通常是对用户友好的,但通常不会产生可以按时间顺序排序的字符串。</target>
        </trans-unit>
        <trans-unit id="77a5a7816d7ae39a86fb052fd356a43fd89da989" translate="yes" xml:space="preserve">
          <source>You can do so using ctime():</source>
          <target state="translated">你可以用ctime()来做。</target>
        </trans-unit>
        <trans-unit id="8351c771679cc492b8d102d98d6b052f7ef74dab" translate="yes" xml:space="preserve">
          <source>You can get a datetime object in UTC time, a global standard, by doing this:</source>
          <target state="translated">你可以通过这样做得到一个全局标准UTC时间的日期时间对象。</target>
        </trans-unit>
        <trans-unit id="78e8bebaf265363c94de1e4ca754734d38df3712" translate="yes" xml:space="preserve">
          <source>You can hydrate timestamps into human readable form with &lt;code&gt;ctime&lt;/code&gt; as well:</source>
          <target state="translated">您也可以使用 &lt;code&gt;ctime&lt;/code&gt; 将时间戳混合为易于阅读的形式：</target>
        </trans-unit>
        <trans-unit id="39ae4951ba51a1cad7d48d5cd381b62c70bbda00" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;http://docs.python.org/3.3/library/time.html?highlight=time.strftime#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">您可以使用&lt;a href=&quot;http://docs.python.org/3.3/library/time.html?highlight=time.strftime#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; &lt;/a&gt; ：</target>
        </trans-unit>
        <trans-unit id="603e71cf7ced9dd5e5586392707b64bf7929ad78" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;time&lt;/code&gt; module:</source>
          <target state="translated">您可以使用 &lt;code&gt;time&lt;/code&gt; 模块：</target>
        </trans-unit>
        <trans-unit id="4fd65534994cbcd9580ed6771211d0b9bf412f2d" translate="yes" xml:space="preserve">
          <source>You can use this function to get the time (unfortunately it doesn't say AM or PM):</source>
          <target state="translated">你可以用这个功能来获取时间(可惜它没有写上AM或PM)。</target>
        </trans-unit>
        <trans-unit id="91c9d61ab407487652e2c5d474458f469aef4226" translate="yes" xml:space="preserve">
          <source>You could also use the following code to give a more lengthy time:</source>
          <target state="translated">你也可以用下面的代码来给出一个比较长的时间。</target>
        </trans-unit>
        <trans-unit id="b1e0ba940ff2906e6d1aec79bce90e834c75be7a" translate="yes" xml:space="preserve">
          <source>datetime timezone aware</source>
          <target state="translated">时区意识</target>
        </trans-unit>
        <trans-unit id="6fb316d75e55538656388d80ffa2f26eeca2da13" translate="yes" xml:space="preserve">
          <source>datetime's &lt;code&gt;utcnow&lt;/code&gt;</source>
          <target state="translated">日期时间的 &lt;code&gt;utcnow&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b30c3124731b8c70868fd9044c234bc29bc946b6" translate="yes" xml:space="preserve">
          <source>for only date:</source>
          <target state="translated">只为日期。</target>
        </trans-unit>
        <trans-unit id="34beb92be6c6e6c71dbfbbe9ef8a6b2db4db528f" translate="yes" xml:space="preserve">
          <source>if you are using numpy already then directly you can use numpy.datetime64() 
function.</source>
          <target state="translated">如果你已经在使用numpy,那么你可以直接使用numpy.datetime64()函数。</target>
        </trans-unit>
        <trans-unit id="6ae2dc2ac7dc5d47b8c060f0e22c38089a3bea86" translate="yes" xml:space="preserve">
          <source>or,</source>
          <target state="translated">or,</target>
        </trans-unit>
        <trans-unit id="038c718d4a52947f28a835b41b11414d8bd8f1c3" translate="yes" xml:space="preserve">
          <source>or, if you are using pandas already then you can use pandas.to_datetime() function</source>
          <target state="translated">或者,如果你已经在使用pandas,那么你可以使用pandas.to_datetime()函数</target>
        </trans-unit>
        <trans-unit id="27806062493e422e06f1adc0af3df9590689c118" translate="yes" xml:space="preserve">
          <source>output:</source>
          <target state="translated">output:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
