<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/415511">
    <body>
      <group id="415511">
        <trans-unit id="a4112a1189b4be953983fb860ee034aa6a0a3145" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.isoformat()&lt;/code&gt; is in the documentation, but not yet here
(this is mighty similar to @Ray Vega's answer):</source>
          <target state="translated">&lt;code&gt;.isoformat()&lt;/code&gt; はドキュメントにありますが、まだここにはありません（これは@Ray Vegaの答えに非常に似ています）：</target>
        </trans-unit>
        <trans-unit id="ba0f105b17d5fba3424abfb2a4cfdbd0e09e6dfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datetime.now()&lt;/code&gt; returns the current time as a naive datetime object that represents time in the local timezone. That value may be ambiguous e.g., during DST transitions (&quot;fall back&quot;). To avoid ambiguity either UTC timezone should be used:</source>
          <target state="translated">&lt;code&gt;datetime.now()&lt;/code&gt; は、ローカルタイムゾーンの時刻を表す単純なdatetimeオブジェクトとして現在の時刻を返します。 その値は、たとえばDST移行中（「フォールバック」）にはあいまいな場合があります。 あいまいさを回避するには、どちらかのUTCタイムゾーンを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="37002bfdd230992b363675cfc3b4d78ba0fe5028" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datetime&lt;/code&gt; module</source>
          <target state="translated">&lt;code&gt;datetime&lt;/code&gt; モジュール</target>
        </trans-unit>
        <trans-unit id="480f966ba05d90ecdd0225d6245ce393d120660e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t&lt;/code&gt; - float number, good for time interval measurement.</source>
          <target state="translated">&lt;code&gt;t&lt;/code&gt; -浮動小数点数。時間間隔の測定に適しています。</target>
        </trans-unit>
        <trans-unit id="e958fb008200d129e73055418c00152f0ba2070a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Hour:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Hour:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f1e7600e92663b78b8712f8661a8939980d7e7ea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Millisecond:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Millisecond:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a5513b770ec651e1039e115fa7c9121aec5c4afb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Minute:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Minute:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8fafa7ae62d85651c85f621ff0fd36e1dd7dc3a7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Second:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Second:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4f28e0377073aec56bddf06e353af688afb6eafe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Current time of a timezone&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;タイムゾーンの現在時刻&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f72f9fbb351cd40f2704a6ec7caebce56068d214" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;date&lt;/strong&gt; will print date and &lt;strong&gt;time&lt;/strong&gt; will print time.</source>
          <target state="translated">&lt;strong&gt;date&lt;/strong&gt;は&lt;strong&gt;日付&lt;/strong&gt;を印刷し、 &lt;strong&gt;time&lt;/strong&gt;は&lt;strong&gt;時刻&lt;/strong&gt;を印刷します。</target>
        </trans-unit>
        <trans-unit id="7be91fe50882db0356a834bb9cd2e5e852f4de1e" translate="yes" xml:space="preserve">
          <source>Add or remove zeroes from the last multiplication to adjust number of decimal points, or just:</source>
          <target state="translated">小数点以下の数を調整するために、最後の乗算からゼロを追加したり削除したりします。</target>
        </trans-unit>
        <trans-unit id="4656348a9c9a5f3cb8b83f5d24ae0ac3338d2f56" translate="yes" xml:space="preserve">
          <source>Also, this table is a necessary reference for choosing the appropriate format codes to get the date formatted just the way you want it (from Python &quot;datetime&quot; documentation &lt;a href=&quot;https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior&quot;&gt;here&lt;/a&gt;).</source>
          <target state="translated">また、この表は、適切なフォーマットコードを選択して、希望どおりにフォーマットされた日付を取得するために必要なリファレンスです（Pythonの「datetime」のドキュメントを&lt;a href=&quot;https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior&quot;&gt;参照&lt;/a&gt; ）。</target>
        </trans-unit>
        <trans-unit id="70316daf683d8fa2ada87f7706f0981d6f1d94cd" translate="yes" xml:space="preserve">
          <source>An hour ago:</source>
          <target state="translated">1時間前に</target>
        </trans-unit>
        <trans-unit id="50f990405f85af0a4977164481e6ce1af6562a06" translate="yes" xml:space="preserve">
          <source>And just the time:</source>
          <target state="translated">そして、ちょうどいいタイミングで。</target>
        </trans-unit>
        <trans-unit id="e7a8d31a0b1be329302150467a7f2f5c401fb61c" translate="yes" xml:space="preserve">
          <source>And on it goes.  Long story short: Pendulum attempts to do for date and time what requests did for HTTP.  It's worth consideration, particularly for both its ease of use and extensive documentation.</source>
          <target state="translated">そして、それは続いています。長い話をすると、Pendulum はリクエストが HTTP に対して行ったことと同じことを日付と時刻に対して行おうとしています。特にその使いやすさと豊富なドキュメントの両方を考慮すると、検討する価値があります。</target>
        </trans-unit>
        <trans-unit id="79e0690376b2a575a06633fd818caa5bc4763c22" translate="yes" xml:space="preserve">
          <source>And we see we can easily convert to timezones from the original utc object.</source>
          <target state="translated">そして、元の utc オブジェクトから簡単にタイムゾーンに変換できることがわかります。</target>
        </trans-unit>
        <trans-unit id="aab152d24d53c4317ec6407e8606bf33bd03b1e4" translate="yes" xml:space="preserve">
          <source>Because no one has mentioned it yet, and this is something I ran into recently... a pytz timezone's fromutc() method combined with datetime's utcnow() is the best way I've found to get a useful current time (and date) in any timezone.</source>
          <target state="translated">まだ誰も言及していませんが、これは私が最近遭遇したことです...pytzタイムゾーンのfromutc()メソッドとdatetimeのutcnow()を組み合わせると、どのタイムゾーンでも現在の時刻(と日付)を取得するための最良の方法です。</target>
        </trans-unit>
        <trans-unit id="ce169aa3a5d701f913d1d906db071bfc3ed8165c" translate="yes" xml:space="preserve">
          <source>But I want &lt;strong&gt;only milliseconds&lt;/strong&gt;, right? The shortest way to get them:</source>
          <target state="translated">でも&lt;strong&gt;ミリ秒しか&lt;/strong&gt;欲しく&lt;strong&gt;ない&lt;/strong&gt;よね？ それらを取得する最短の方法：</target>
        </trans-unit>
        <trans-unit id="88670f3e1ab678ed8307efce868e253554f8a4b6" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;now()&lt;/code&gt; function returns output in the &lt;code&gt;YYYY-MM-DD HH:MM:SS:MS&lt;/code&gt; format. Use the below sample script to get the current date and time in a Python script and print results on the screen. Create file &lt;code&gt;getDateTime1.py&lt;/code&gt; with the below content.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;now()&lt;/code&gt; 関数は出力を &lt;code&gt;YYYY-MM-DD HH:MM:SS:MS&lt;/code&gt; 形式で返します。 以下のサンプルスクリプトを使用して、Pythonスクリプトで現在の日時を取得し、結果を画面に出力します。 以下の内容でファイル &lt;code&gt;getDateTime1.py&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="22bdf47be3fd0a53ecdf5d6edbde0a2c6b97f0e0" translate="yes" xml:space="preserve">
          <source>Do</source>
          <target state="translated">Do</target>
        </trans-unit>
        <trans-unit id="8c4545eef0bbb1ebd9c03599f8e3336329a56933" translate="yes" xml:space="preserve">
          <source>Do &lt;code&gt;dir(date)&lt;/code&gt; or any variables including the package. You can get all the attributes and methods associated with the variable.</source>
          <target state="translated">&lt;code&gt;dir(date)&lt;/code&gt; またはパッケージを含むすべての変数を実行します。 変数に関連付けられているすべての属性とメソッドを取得できます。</target>
        </trans-unit>
        <trans-unit id="797b84b5fdc36ad6870fe916c87a5adc229a01c2" translate="yes" xml:space="preserve">
          <source>Equivalently, in Python 3 we have the &lt;code&gt;timezone&lt;/code&gt; class with a utc &lt;code&gt;timezone&lt;/code&gt; instance attached, which also makes the object timezone aware (but to convert to another timezone without the handy &lt;code&gt;pytz&lt;/code&gt; module is left as an exercise to the reader):</source>
          <target state="translated">同様に、Python 3には、utc &lt;code&gt;timezone&lt;/code&gt; インスタンスがアタッチされた &lt;code&gt;timezone&lt;/code&gt; クラスがあります。これにより、オブジェクトのタイムゾーンが認識されます（ただし、便利な &lt;code&gt;pytz&lt;/code&gt; モジュールを使用せずに別のタイムゾーンに変換することは、読者への課題として残されています）。</target>
        </trans-unit>
        <trans-unit id="13b88b85bb8a84ce6ff8d9c964ac94eae577f77c" translate="yes" xml:space="preserve">
          <source>For a specific timezone:</source>
          <target state="translated">特定のタイムゾーンの場合。</target>
        </trans-unit>
        <trans-unit id="7427c3c23b76654873617da699a1724887560c9f" translate="yes" xml:space="preserve">
          <source>For instance, the answer to the original question:</source>
          <target state="translated">例えば、元の質問の答え。</target>
        </trans-unit>
        <trans-unit id="4b0b74869722425e1bdd7065238c671d574e0fb1" translate="yes" xml:space="preserve">
          <source>For this example, the output will be like this: &lt;code&gt;'2013-09-18 11:16:32'&lt;/code&gt;</source>
          <target state="translated">この例の場合、出力は次のようになります： &lt;code&gt;'2013-09-18 11:16:32'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5fa7cfdce17750480776494fd7d9946728c28bc" translate="yes" xml:space="preserve">
          <source>Here is the list of &lt;a href=&quot;https://docs.python.org/library/datetime.html#strftime-and-strptime-format-codes&quot;&gt;&lt;code&gt;strftime&lt;/code&gt; directives&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;https://docs.python.org/library/datetime.html#strftime-and-strptime-format-codes&quot;&gt; &lt;code&gt;strftime&lt;/code&gt; ディレクティブ&lt;/a&gt;のリストです。</target>
        </trans-unit>
        <trans-unit id="86df8f688813f3fa56db7248d7594d73b3710ed7" translate="yes" xml:space="preserve">
          <source>How do I get the current time in Python?</source>
          <target state="translated">Pythonで現在時刻を取得するには?</target>
        </trans-unit>
        <trans-unit id="cd9dd4f851c6a9265d567e8695f627e0170daf04" translate="yes" xml:space="preserve">
          <source>How to get the current time in Python</source>
          <target state="translated">Pythonで現在時刻を取得する方法</target>
        </trans-unit>
        <trans-unit id="6e4c33efa5cdfbb0d8e942bf506ed2ea01e7a36a" translate="yes" xml:space="preserve">
          <source>However, none of the datetime objects we've created so far can be easily converted to various timezones. We can solve that problem with the &lt;code&gt;pytz&lt;/code&gt; module:</source>
          <target state="translated">ただし、これまでに作成したdatetimeオブジェクトは、さまざまなタイムゾーンに簡単に変換できません。 この問題は &lt;code&gt;pytz&lt;/code&gt; モジュールで解決できます。</target>
        </trans-unit>
        <trans-unit id="47c085634ba8fbc391377e211e7071971300a3c6" translate="yes" xml:space="preserve">
          <source>I want to get the time with milliseconds. A simple way to get them:</source>
          <target state="translated">ミリ秒で時間を取得したい 簡単に取得する方法です。</target>
        </trans-unit>
        <trans-unit id="fa8a5094408659f2501339346fb46cb56b11a072" translate="yes" xml:space="preserve">
          <source>If all you want is the time, you can then get that with &lt;code&gt;local_time.time()&lt;/code&gt;.</source>
          <target state="translated">時間が必要な場合は、 &lt;code&gt;local_time.time()&lt;/code&gt; を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="b80ded214b0b8f54c213c8b913cc952b2fca523c" translate="yes" xml:space="preserve">
          <source>If you just want the current timestamp in ms (for example, to measure execution time), you can also use the &quot;timeit&quot; module:</source>
          <target state="translated">現在のタイムスタンプをミリ秒単位で表示したいだけなら(例えば、実行時間を測定したい場合など)、&quot;timeit &quot;モジュールを使うこともできます。</target>
        </trans-unit>
        <trans-unit id="d64b9c724b85834159fe1d3df9a72dbc00b2a9e9" translate="yes" xml:space="preserve">
          <source>If you live in the D.C. area (like me) the latency might not be too bad...</source>
          <target state="translated">D.C.エリアに住んでいれば(私のように)遅延も悪くないかもしれませんが...。</target>
        </trans-unit>
        <trans-unit id="7efa38d57840ee76848e2727798197e2b3d5e67b" translate="yes" xml:space="preserve">
          <source>If you need current time as a &lt;code&gt;time&lt;/code&gt; object:</source>
          <target state="translated">&lt;code&gt;time&lt;/code&gt; オブジェクトとして現在の時間が必要な場合：</target>
        </trans-unit>
        <trans-unit id="3544754ec0caf449db16ce0e4ecf185844bd270a" translate="yes" xml:space="preserve">
          <source>If you're displaying the time with Python for the user, &lt;code&gt;ctime&lt;/code&gt; works nicely, not in a table (it doesn't typically sort well), but perhaps in a clock. However, I personally recommend, when dealing with time in Python, either using Unix time, or a timezone aware UTC &lt;code&gt;datetime&lt;/code&gt; object.</source>
          <target state="translated">ユーザーのPythonで時間を表示している場合、 &lt;code&gt;ctime&lt;/code&gt; はうまく機能します。テーブルではなく（通常はうまく並べ替えられません）、おそらく時計で機能します。 ただし、個人的には、Pythonで時間を処理する場合、Unix時間またはタイムゾーン対応のUTC &lt;code&gt;datetime&lt;/code&gt; オブジェクトを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="ba57f94eae45684b208c88c1b416d1c5fe384b94" translate="yes" xml:space="preserve">
          <source>It will print in HH:MM:SS format.</source>
          <target state="translated">HH:MM:SS形式で印刷されます。</target>
        </trans-unit>
        <trans-unit id="f62a02af92108e89130a1e272de6beae556c6637" translate="yes" xml:space="preserve">
          <source>One could ostensibly serialize this object for UTC time and store &lt;em&gt;that&lt;/em&gt; in a database, but it would require far more memory and be more prone to error than simply storing the Unix Epoch time, which I demonstrated first.</source>
          <target state="translated">見かけ上、このオブジェクトをUTC時間でシリアル化してデータベースに格納する&lt;em&gt;こと&lt;/em&gt;もできますが、最初に説明したUnixエポック時間を単に格納するよりもはるかに多くのメモリを必要とし、エラーが発生しやすくなります。</target>
        </trans-unit>
        <trans-unit id="f385551838e1f973d52ac4bec8518e79f6cb84fe" translate="yes" xml:space="preserve">
          <source>Or a timezone-aware object that has the corresponding timezone info attached (Python 3.2+):</source>
          <target state="translated">あるいは、対応するタイムゾーン情報が添付されたタイムゾーン対応オブジェクト(Python 3.2+)。</target>
        </trans-unit>
        <trans-unit id="b9027258697ef28764f395425a975422f0e81d96" translate="yes" xml:space="preserve">
          <source>Or if you want the gist.</source>
          <target state="translated">要点を知りたいなら</target>
        </trans-unit>
        <trans-unit id="4b874a9f4b0dc1391c7979b9932e538a76f4ef41" translate="yes" xml:space="preserve">
          <source>Or the UTC version:</source>
          <target state="translated">もしくはUTC版。</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="e35215ba144662f857f360b0218d098b98497893" translate="yes" xml:space="preserve">
          <source>Presumably most of the rest of you mean somewhere else.</source>
          <target state="translated">おそらく他のほとんどの人はどこか他の場所のことを言っているのでしょう。</target>
        </trans-unit>
        <trans-unit id="956e866069f6b4837df148cb381d772a11d6a253" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://docs.python.org/3/library/datetime.html&quot;&gt;&lt;strong&gt;the documentation&lt;/strong&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細について&lt;a href=&quot;https://docs.python.org/3/library/datetime.html&quot;&gt;&lt;strong&gt;は、ドキュメント&lt;/strong&gt;&lt;/a&gt;を参照し&lt;strong&gt;て&lt;/strong&gt;ください。</target>
        </trans-unit>
        <trans-unit id="2c63afcf012b8bd0149f4bc65d2b6ef6a7b0a6a4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;https://stackoverflow.com/questions/415511/how-to-get-current-time-in-python/415519#415519&quot;&gt;Harley's answer&lt;/a&gt;, but use the &lt;code&gt;str()&lt;/code&gt; function for a quick-n-dirty, slightly more human readable format:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/415511/how-to-get-current-time-in-python/415519#415519&quot;&gt;Harleyの回答に&lt;/a&gt;似ていますが、 &lt;code&gt;str()&lt;/code&gt; 関数を使用して、quick-n-dirty、やや人間が読める形式にします。</target>
        </trans-unit>
        <trans-unit id="13a762917821bff8d83caf56baa57be783f5c610" translate="yes" xml:space="preserve">
          <source>That outputs the current GMT in the specified format. There is also a &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.localtime&quot;&gt;&lt;code&gt;localtime()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">指定された形式で現在のGMTを出力します。 &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.localtime&quot;&gt; &lt;code&gt;localtime()&lt;/code&gt; &lt;/a&gt;メソッドもあります。</target>
        </trans-unit>
        <trans-unit id="3b34655e05bce6bcd5081c98f617e618089c2e38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;datetime.now&lt;/code&gt; is a class method that returns the current time. It uses the &lt;code&gt;time.localtime&lt;/code&gt; without the timezone info (if not given, otherwise see timezone aware below). It has a representation (which would allow you to recreate an equivalent object) echoed on the shell, but when printed (or coerced to a &lt;code&gt;str&lt;/code&gt;), it is in human readable (and nearly ISO) format, and the lexicographic sort is equivalent to the chronological sort:</source>
          <target state="translated">&lt;code&gt;datetime.now&lt;/code&gt; は、現在の時刻を返すクラスメソッドです。 タイムゾーン情報なしで &lt;code&gt;time.localtime&lt;/code&gt; を使用します（指定されていない場合は、以下のタイムゾーン対応を参照してください）。 シェルにエコーされた（同等のオブジェクトを再作成できるようにする）表現がありますが、印刷（または &lt;code&gt;str&lt;/code&gt; に強制）すると、人間が読める（ISOに近い）形式になり、辞書式ソートは次のようになります。年代順の並べ替え：</target>
        </trans-unit>
        <trans-unit id="d6916c8c4d93dbd00885805e0ebb18cfe4c7307f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;datetime&lt;/code&gt; module is also quite useful here:</source>
          <target state="translated">ここでも &lt;code&gt;datetime&lt;/code&gt; モジュールは非常に便利です。</target>
        </trans-unit>
        <trans-unit id="60f7f8f9a02e4773cf19a07fb006d23f0df52e12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pytz&lt;/code&gt; module allows us to make our &lt;code&gt;datetime&lt;/code&gt; objects timezone aware and convert the times to the hundreds of timezones available in the &lt;code&gt;pytz&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;pytz&lt;/code&gt; モジュールを使用すると、 &lt;code&gt;datetime&lt;/code&gt; オブジェクトにタイムゾーンを認識させ、時間を &lt;code&gt;pytz&lt;/code&gt; モジュールで使用可能な数百のタイムゾーンに変換できます。</target>
        </trans-unit>
        <trans-unit id="d54d6473ee3c263e4533072a855c281c1891c33f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;time&lt;/code&gt; module</source>
          <target state="translated">&lt;code&gt;time&lt;/code&gt; モジュール</target>
        </trans-unit>
        <trans-unit id="b3ca25b1ba2eac9002df795ab5da3c2fc0640be7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;time&lt;/code&gt; module provides functions that tells us the time in &quot;seconds since the epoch&quot; as well as other utilities.</source>
          <target state="translated">&lt;code&gt;time&lt;/code&gt; モジュールは、「エポックからの秒数」で時間を知らせる関数と、その他のユーティリティを提供します。</target>
        </trans-unit>
        <trans-unit id="8ba7ec8cea463c89fd59e18dd278ec94ce331cf8" translate="yes" xml:space="preserve">
          <source>The following is what I use to get the time without having to format. Some people don't like the split method, but it is useful here:</source>
          <target state="translated">私がフォーマットしなくても時間を取得するために使っているのは以下のようなものです。分割法を嫌がる人もいますが、ここでは重宝しています。</target>
        </trans-unit>
        <trans-unit id="849deade087fc32f2568cd7519b6a1d3dbd656db" translate="yes" xml:space="preserve">
          <source>The other ways of viewing times are much more error prone, especially when dealing with data that may come from different time zones. You want there to be no confusion as to which timezone a string or serialized datetime object was intended for.</source>
          <target state="translated">他の方法で時刻を表示すると、特に異なるタイムゾーンからのデータを扱う場合には、より多くのエラーが発生しやすくなります。文字列やシリアル化されたdatetimeオブジェクトがどのタイムゾーンを対象としているのか混乱しないようにしたいものです。</target>
        </trans-unit>
        <trans-unit id="c339bc65dff58001215eaa73ff30df39230f5b07" translate="yes" xml:space="preserve">
          <source>The output looks like below:</source>
          <target state="translated">出力は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="0b7303e3ac7080d5a48cc9ac732ea055f5fa10a1" translate="yes" xml:space="preserve">
          <source>The previous answers are all good suggestions, but I find it easiest to use &lt;code&gt;ctime()&lt;/code&gt;:</source>
          <target state="translated">上記の答えはすべて良い提案ですが、 &lt;code&gt;ctime()&lt;/code&gt; を使用するのが最も簡単です：</target>
        </trans-unit>
        <trans-unit id="9605d63a45aa526b9f2ac25c6b4186cc7aa24ac5" translate="yes" xml:space="preserve">
          <source>The quickest way is:</source>
          <target state="translated">一番手っ取り早いのは</target>
        </trans-unit>
        <trans-unit id="a366d85a563f08e6cca64025a468148a595d0d15" translate="yes" xml:space="preserve">
          <source>The use of the capital &lt;code&gt;Y&lt;/code&gt; gives the full year, and using &lt;code&gt;y&lt;/code&gt; would give &lt;code&gt;06/02/15&lt;/code&gt;.</source>
          <target state="translated">大文字の &lt;code&gt;Y&lt;/code&gt; を使用すると通年が得られ、 &lt;code&gt;y&lt;/code&gt; を使用すると &lt;code&gt;06/02/15&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="c01919b3937cb052b14b9cdc732edee1acd1d112" translate="yes" xml:space="preserve">
          <source>Then remove the leading &lt;code&gt;datetime.&lt;/code&gt; from all of the above.</source>
          <target state="translated">次に、先頭の &lt;code&gt;datetime.&lt;/code&gt; 削除します。 上記のすべてから。</target>
        </trans-unit>
        <trans-unit id="fbca529cbdc9e8306471128bb3b81bd005918c75" translate="yes" xml:space="preserve">
          <source>There is some difference for Unix and Windows platforms.</source>
          <target state="translated">UnixとWindowsのプラットフォームでは多少の違いがあります。</target>
        </trans-unit>
        <trans-unit id="c3f22df435ed9a1f48b89524ab4339a619d4cca0" translate="yes" xml:space="preserve">
          <source>There's a lot of standards which need addressing, including multiple RFCs and ISOs, to worry about.  Ever get them mixed up; not to worry, take a little look into &lt;code&gt;dir(pendulum.constants)&lt;/code&gt; There's a bit more than RFC and ISO formats there, though.</source>
          <target state="translated">心配するために、複数のRFCやISOを含む、アドレス指定を必要とする多くの標準があります。 それらを混同してください。 心配しないで、 &lt;code&gt;dir(pendulum.constants)&lt;/code&gt; を少し調べてください。ただし、そこにはRFCおよびISO形式以外にもいくつかあります。</target>
        </trans-unit>
        <trans-unit id="ebb225a37b097f9938cef9cd8c13016cd8fc53a5" translate="yes" xml:space="preserve">
          <source>These outputs are different because the timestamp returned by &lt;code&gt;ctime()&lt;/code&gt; depends on your geographical location.</source>
          <target state="translated">&lt;code&gt;ctime()&lt;/code&gt; によって返されるタイムスタンプは地理的な場所に依存するため、これらの出力は異なります。</target>
        </trans-unit>
        <trans-unit id="07063584c1dfdd9d2cbb592f9226b93e79919fc5" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;http://docs.python.org/library/time.html#module-time&quot;&gt;page&lt;/a&gt; has more details.</source>
          <target state="translated">この&lt;a href=&quot;http://docs.python.org/library/time.html#module-time&quot;&gt;ページに&lt;/a&gt;は詳細があります。</target>
        </trans-unit>
        <trans-unit id="13a58d7d892fd5ec3d0e1556cc324df31627e54a" translate="yes" xml:space="preserve">
          <source>This conversion is also not good for record-keeping (except in text that will only be parsed by humans - and with improved Optical Character Recognition and Artificial Intelligence, I think the number of these cases will diminish).</source>
          <target state="translated">この変換も記録保存にはよくありません(人間が解析するだけのテキストは別ですが--光学式文字認識や人工知能が向上すれば、このようなケースは少なくなると思います)。</target>
        </trans-unit>
        <trans-unit id="b51e52f263321fd6b82fdf3c8d57666036c93251" translate="yes" xml:space="preserve">
          <source>This gives a nicely formatted string representation of the current local time.</source>
          <target state="translated">これは、現在のローカルタイムをきれいにフォーマットされた文字列で表現します。</target>
        </trans-unit>
        <trans-unit id="07975bf1a1da74e8897d27e336c7099dac54c272" translate="yes" xml:space="preserve">
          <source>This is not ideal for human scheduling, however. If you have a future event you wish to take place at a certain point in time, you'll want to store that time with a string that can be parsed into a datetime object or a serialized datetime object (these will be described later).</source>
          <target state="translated">しかし、これは人間によるスケジューリングには向いていません。ある時点での将来のイベントがある場合、その時刻を datetime オブジェクトやシリアライズされた datetime オブジェクトにパースできる文字列で保存したいと思うでしょう (これらについては後述します)。</target>
        </trans-unit>
        <trans-unit id="ead09e2c048e086d720bc35c442c6582826511bd" translate="yes" xml:space="preserve">
          <source>This is the format you should get timestamps in for saving in databases. It is a simple floating point number that can be converted to an integer. It is also good for arithmetic in seconds, as it represents the number of seconds since Jan 1, 1970 00:00:00, and it is memory light relative to the other representations of time we'll be looking at next:</source>
          <target state="translated">これは、データベースに保存するためにタイムスタンプを取得するためのフォーマットです。単純な浮動小数点数で、整数に変換することができます。1970年1月1日 00:00:00:00からの秒数を表しているので、秒単位の算術にも適しています。</target>
        </trans-unit>
        <trans-unit id="fbf7c8ba8bbfdf0c77b06223d67267f704661c4c" translate="yes" xml:space="preserve">
          <source>This is what I ended up going with:</source>
          <target state="translated">結局これで行くことになりました。</target>
        </trans-unit>
        <trans-unit id="a7409b441e9c7d6987d90b75c18ea4f73c2795eb" translate="yes" xml:space="preserve">
          <source>This question doesn't need a new answer just for the sake of it ... a shiny new-ish toy/module, however, is enough justification.  That being the &lt;a href=&quot;https://pendulum.eustace.io/docs/&quot;&gt;Pendulum library&lt;/a&gt;, which appears to do the sort of things which arrow attempted, except without the inherent flaws and bugs which beset arrow.</source>
          <target state="translated">この質問はそれのためだけに新しい答えを必要としません...しかし、光沢のある新しい風のおもちゃ/モジュールは、十分な正当化です。 それは、矢印を妨げる固有の欠陥やバグがないことを除いて、矢印が試みたようなことを行うように見える&lt;a href=&quot;https://pendulum.eustace.io/docs/&quot;&gt;振り子ライブラリ&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="5e3aee22df5cfff0893905b51fe3f7f338269aa1" translate="yes" xml:space="preserve">
          <source>This timestamp does not account for leap-seconds, so it's not linear - leap seconds are ignored. So while it is not equivalent to the international UTC standard, it is close, and therefore quite good for most cases of record-keeping.</source>
          <target state="translated">このタイムスタンプはうるう秒を考慮していないので、直線的ではない-うるう秒は無視される。そのため、国際的なUTC標準とは同等ではありませんが、近いので、ほとんどの場合の記録保存には非常に適しています。</target>
        </trans-unit>
        <trans-unit id="abbabf48b4135e81ab47c4e95b1d86004af988df" translate="yes" xml:space="preserve">
          <source>To change its output, add .format():</source>
          <target state="translated">出力を変更するには、.format()を追加します。</target>
        </trans-unit>
        <trans-unit id="d2bed44d03fd32e33a985cba036d49b0158e03dc" translate="yes" xml:space="preserve">
          <source>To get the hours, minutes, seconds and milliseconds to merge later, you can use these functions:</source>
          <target state="translated">後でマージする時、分、秒、ミリ秒を取得するには、これらの関数を使用することができます。</target>
        </trans-unit>
        <trans-unit id="950a2de07a06ca46d20ad02c4a0b44fb7a0c8382" translate="yes" xml:space="preserve">
          <source>To save typing, you can import the &lt;code&gt;datetime&lt;/code&gt; object from the &lt;code&gt;datetime&lt;/code&gt; module:</source>
          <target state="translated">入力を節約するために、 &lt;code&gt;datetime&lt;/code&gt; モジュールから &lt;code&gt;datetime&lt;/code&gt; オブジェクトをインポートできます。</target>
        </trans-unit>
        <trans-unit id="068ad4dfebfbc33595ba34b37ad086721f2f3834" translate="yes" xml:space="preserve">
          <source>Try the arrow module from &lt;a href=&quot;http://crsmithdev.com/arrow/&quot;&gt;http://crsmithdev.com/arrow/&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://crsmithdev.com/arrow/&quot;&gt;http://crsmithdev.com/arrow/&lt;/a&gt;のarrowモジュールを試してください 。</target>
        </trans-unit>
        <trans-unit id="3d3b92987114edff7768ff61d7ad208b310153e7" translate="yes" xml:space="preserve">
          <source>UTC is a time standard that is nearly equivalent to the GMT timezone. (While GMT and UTC do not change for Daylight Savings Time, their users may switch to other timezones, like British Summer Time, during the Summer.)</source>
          <target state="translated">UTCは、GMTタイムゾーンとほぼ同等の時間基準です。(GMTとUTCは夏時間には変更されませんが、ユーザーは夏の間、イギリスの夏時間のような他のタイムゾーンに切り替えることができます)。</target>
        </trans-unit>
        <trans-unit id="5035446324fdba83237f99876babaf3d625f8a25" translate="yes" xml:space="preserve">
          <source>Unix Epoch Time</source>
          <target state="translated">ユニックスエポックじかん</target>
        </trans-unit>
        <trans-unit id="bc0e34154d952ed72b15f5d9618112640d548177" translate="yes" xml:space="preserve">
          <source>Use:</source>
          <target state="translated">Use:</target>
        </trans-unit>
        <trans-unit id="983592010bffe52a2160fb4dbe1050730d376027" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;https://en.wikipedia.org/wiki/Pandas_%28software%29&quot;&gt;pandas&lt;/a&gt; to get the current time, kind of overkilling the problem at hand:</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Pandas_%28software%29&quot;&gt;パンダ&lt;/a&gt;を使用して現在の時刻を取得し、目の前の問題を打ち倒します：</target>
        </trans-unit>
        <trans-unit id="c33194a234dc4b7c431f4d5a50f6f93dd855d615" translate="yes" xml:space="preserve">
          <source>What is the module/method used to get the current time?</source>
          <target state="translated">現在の時刻を取得するためのmodulemethodは何を使っているのでしょうか?</target>
        </trans-unit>
        <trans-unit id="f0788dba4aa2a6e0ebb8bced0a669c2ca9e864a5" translate="yes" xml:space="preserve">
          <source>When we say local, though what do we mean?  Well I mean:</source>
          <target state="translated">地元と言っても何を意味するの?それは......</target>
        </trans-unit>
        <trans-unit id="8e4b98a251ccef5dfd46094813cbb2d29763e380" translate="yes" xml:space="preserve">
          <source>Why not ask the &lt;a href=&quot;http://tycho.usno.navy.mil/cgi-bin/timer.pl&quot;&gt;U.S. Naval Observatory&lt;/a&gt;, the official timekeeper of the United States Navy?</source>
          <target state="translated">&lt;a href=&quot;http://tycho.usno.navy.mil/cgi-bin/timer.pl&quot;&gt;アメリカ海軍&lt;/a&gt;の公式計時係であるアメリカ海軍天文台に聞いてみませんか？</target>
        </trans-unit>
        <trans-unit id="353afa85bac0872c49fe8ca62d96fae1bdfe94e8" translate="yes" xml:space="preserve">
          <source>You can also make a naive datetime object aware with the &lt;code&gt;pytz&lt;/code&gt; timezone &lt;code&gt;localize&lt;/code&gt; method, or by replacing the tzinfo attribute (with &lt;code&gt;replace&lt;/code&gt;, this is done blindly), but these are more last resorts than best practices:</source>
          <target state="translated">また、 &lt;code&gt;pytz&lt;/code&gt; timezone &lt;code&gt;localize&lt;/code&gt; メソッドを使用するか、tzinfo属性を &lt;code&gt;replace&lt;/code&gt; ことにより、 単純なdatetimeオブジェクトを認識させることもできます（ replaceを使用すると 、これは盲目的に行われます）。しかし、これらはベストプラクティスよりも最後の手段です。</target>
        </trans-unit>
        <trans-unit id="3ee84c2011282be6d1e0bf7006807cc44ad009e4" translate="yes" xml:space="preserve">
          <source>You can also represent the current time in the way preferred by your operating system (which means it can change when you change your system preferences, so don't rely on this to be standard across all systems, as I've seen others expect). This is typically user friendly, but doesn't typically result in strings one can sort chronologically:</source>
          <target state="translated">また、現在の時刻をオペレーティングシステムが好む方法で表現することもできます(つまり、システムの環境設定を変更すると変更される可能性があるので、他の人が期待しているように、すべてのシステムで標準的であることに頼らないでください)。これは一般的にはユーザーフレンドリーですが、通常は時系列でソートできるような文字列にはなりません。</target>
        </trans-unit>
        <trans-unit id="77a5a7816d7ae39a86fb052fd356a43fd89da989" translate="yes" xml:space="preserve">
          <source>You can do so using ctime():</source>
          <target state="translated">これは ctime()を使用して行うことができます。</target>
        </trans-unit>
        <trans-unit id="8351c771679cc492b8d102d98d6b052f7ef74dab" translate="yes" xml:space="preserve">
          <source>You can get a datetime object in UTC time, a global standard, by doing this:</source>
          <target state="translated">このようにすることで、グローバルスタンダードであるUTC時間のdatetimeオブジェクトを取得することができます。</target>
        </trans-unit>
        <trans-unit id="78e8bebaf265363c94de1e4ca754734d38df3712" translate="yes" xml:space="preserve">
          <source>You can hydrate timestamps into human readable form with &lt;code&gt;ctime&lt;/code&gt; as well:</source>
          <target state="translated">&lt;code&gt;ctime&lt;/code&gt; を使用して、タイムスタンプを人間が読める形式にハイドレートすることもできます。</target>
        </trans-unit>
        <trans-unit id="39ae4951ba51a1cad7d48d5cd381b62c70bbda00" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;http://docs.python.org/3.3/library/time.html?highlight=time.strftime#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">あなたは&lt;a href=&quot;http://docs.python.org/3.3/library/time.html?highlight=time.strftime#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; &lt;/a&gt;を使うことができます：</target>
        </trans-unit>
        <trans-unit id="603e71cf7ced9dd5e5586392707b64bf7929ad78" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;time&lt;/code&gt; module:</source>
          <target state="translated">あなたは &lt;code&gt;time&lt;/code&gt; モジュールを使うことができます：</target>
        </trans-unit>
        <trans-unit id="4fd65534994cbcd9580ed6771211d0b9bf412f2d" translate="yes" xml:space="preserve">
          <source>You can use this function to get the time (unfortunately it doesn't say AM or PM):</source>
          <target state="translated">この機能を使って時間を取得することができます(残念ながらAMやPMとは書いていません)。</target>
        </trans-unit>
        <trans-unit id="91c9d61ab407487652e2c5d474458f469aef4226" translate="yes" xml:space="preserve">
          <source>You could also use the following code to give a more lengthy time:</source>
          <target state="translated">また、以下のコードを使用することで、より長い時間を与えることができます。</target>
        </trans-unit>
        <trans-unit id="b1e0ba940ff2906e6d1aec79bce90e834c75be7a" translate="yes" xml:space="preserve">
          <source>datetime timezone aware</source>
          <target state="translated">日付時間時間帯認識</target>
        </trans-unit>
        <trans-unit id="6fb316d75e55538656388d80ffa2f26eeca2da13" translate="yes" xml:space="preserve">
          <source>datetime's &lt;code&gt;utcnow&lt;/code&gt;</source>
          <target state="translated">日時の &lt;code&gt;utcnow&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b30c3124731b8c70868fd9044c234bc29bc946b6" translate="yes" xml:space="preserve">
          <source>for only date:</source>
          <target state="translated">日付だけのために。</target>
        </trans-unit>
        <trans-unit id="34beb92be6c6e6c71dbfbbe9ef8a6b2db4db528f" translate="yes" xml:space="preserve">
          <source>if you are using numpy already then directly you can use numpy.datetime64() 
function.</source>
          <target state="translated">もしすでにnumpyを使っているのであれば、直接numpy.datetime64()関数を使うことができます。</target>
        </trans-unit>
        <trans-unit id="6ae2dc2ac7dc5d47b8c060f0e22c38089a3bea86" translate="yes" xml:space="preserve">
          <source>or,</source>
          <target state="translated">or,</target>
        </trans-unit>
        <trans-unit id="038c718d4a52947f28a835b41b11414d8bd8f1c3" translate="yes" xml:space="preserve">
          <source>or, if you are using pandas already then you can use pandas.to_datetime() function</source>
          <target state="translated">あるいは、すでにパンダを使用している場合は、pandas.to_datetime()関数を使用することができます。</target>
        </trans-unit>
        <trans-unit id="27806062493e422e06f1adc0af3df9590689c118" translate="yes" xml:space="preserve">
          <source>output:</source>
          <target state="translated">output:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
