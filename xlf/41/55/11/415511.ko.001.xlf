<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/415511">
    <body>
      <group id="415511">
        <trans-unit id="a4112a1189b4be953983fb860ee034aa6a0a3145" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.isoformat()&lt;/code&gt; is in the documentation, but not yet here
(this is mighty similar to @Ray Vega's answer):</source>
          <target state="translated">&lt;code&gt;.isoformat()&lt;/code&gt; 은 문서에 있지만 아직 여기에 없습니다 (@Ray Vega의 답변과 비슷할 수 있음).</target>
        </trans-unit>
        <trans-unit id="ba0f105b17d5fba3424abfb2a4cfdbd0e09e6dfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datetime.now()&lt;/code&gt; returns the current time as a naive datetime object that represents time in the local timezone. That value may be ambiguous e.g., during DST transitions (&quot;fall back&quot;). To avoid ambiguity either UTC timezone should be used:</source>
          <target state="translated">&lt;code&gt;datetime.now()&lt;/code&gt; 는 현재 시간을 현지 시간대의 시간을 나타내는 순진 날짜 / 시간 객체로 반환합니다. 그 값은 예를 들어 DST 전환 중에 모호 할 수 있습니다 ( &quot;폴백&quot;). 모호성을 피하려면 UTC 시간대를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="37002bfdd230992b363675cfc3b4d78ba0fe5028" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datetime&lt;/code&gt; module</source>
          <target state="translated">&lt;code&gt;datetime&lt;/code&gt; 모듈</target>
        </trans-unit>
        <trans-unit id="480f966ba05d90ecdd0225d6245ce393d120660e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t&lt;/code&gt; - float number, good for time interval measurement.</source>
          <target state="translated">&lt;code&gt;t&lt;/code&gt; - 시간 간격 측정에 적합한 부동 수.</target>
        </trans-unit>
        <trans-unit id="e958fb008200d129e73055418c00152f0ba2070a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Hour:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Hour:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f1e7600e92663b78b8712f8661a8939980d7e7ea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Millisecond:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Millisecond:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a5513b770ec651e1039e115fa7c9121aec5c4afb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Minute:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Minute:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8fafa7ae62d85651c85f621ff0fd36e1dd7dc3a7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Second:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Second:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4f28e0377073aec56bddf06e353af688afb6eafe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Current time of a timezone&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;시간대의 현재 시간&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f72f9fbb351cd40f2704a6ec7caebce56068d214" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;date&lt;/strong&gt; will print date and &lt;strong&gt;time&lt;/strong&gt; will print time.</source>
          <target state="translated">&lt;strong&gt;날짜&lt;/strong&gt; 가 인쇄되고 &lt;strong&gt;날짜&lt;/strong&gt; 가 &lt;strong&gt;시간&lt;/strong&gt; 을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="7be91fe50882db0356a834bb9cd2e5e852f4de1e" translate="yes" xml:space="preserve">
          <source>Add or remove zeroes from the last multiplication to adjust number of decimal points, or just:</source>
          <target state="translated">마지막 곱셈에서 0을 추가하거나 제거하여 소수점 수를 조정하거나 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="4656348a9c9a5f3cb8b83f5d24ae0ac3338d2f56" translate="yes" xml:space="preserve">
          <source>Also, this table is a necessary reference for choosing the appropriate format codes to get the date formatted just the way you want it (from Python &quot;datetime&quot; documentation &lt;a href=&quot;https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior&quot;&gt;here&lt;/a&gt;).</source>
          <target state="translated">또한이 표는 원하는 형식으로 날짜를 가져 오기 위해 적절한 형식 코드를 선택하는 데 필요한 참조 자료입니다 (Python &quot;datetime&quot;documentation &lt;a href=&quot;https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior&quot;&gt;here&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="70316daf683d8fa2ada87f7706f0981d6f1d94cd" translate="yes" xml:space="preserve">
          <source>An hour ago:</source>
          <target state="translated">한 시간 전에:</target>
        </trans-unit>
        <trans-unit id="50f990405f85af0a4977164481e6ce1af6562a06" translate="yes" xml:space="preserve">
          <source>And just the time:</source>
          <target state="translated">그리고 단지 시간 :</target>
        </trans-unit>
        <trans-unit id="e7a8d31a0b1be329302150467a7f2f5c401fb61c" translate="yes" xml:space="preserve">
          <source>And on it goes.  Long story short: Pendulum attempts to do for date and time what requests did for HTTP.  It's worth consideration, particularly for both its ease of use and extensive documentation.</source>
          <target state="translated">그리고 그것에 간다. 간단히 말해 : 진자는 요청이 HTTP에 대해 한 날짜와 시간에 시도합니다. 특히 사용 편의성과 광범위한 문서화를 위해 고려할 가치가 있습니다.</target>
        </trans-unit>
        <trans-unit id="79e0690376b2a575a06633fd818caa5bc4763c22" translate="yes" xml:space="preserve">
          <source>And we see we can easily convert to timezones from the original utc object.</source>
          <target state="translated">그리고 원래 utc 객체에서 표준 시간대로 쉽게 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aab152d24d53c4317ec6407e8606bf33bd03b1e4" translate="yes" xml:space="preserve">
          <source>Because no one has mentioned it yet, and this is something I ran into recently... a pytz timezone's fromutc() method combined with datetime's utcnow() is the best way I've found to get a useful current time (and date) in any timezone.</source>
          <target state="translated">아무도 그것을 언급하지 않았기 때문에 이것이 최근에 발생한 것입니다 ... pytz 시간대의 fromutc () 메소드와 datetime의 utcnow () 메소드가 유용한 현재 시간 (및 날짜)을 얻는 가장 좋은 방법입니다 어떤 시간대에서도.</target>
        </trans-unit>
        <trans-unit id="ce169aa3a5d701f913d1d906db071bfc3ed8165c" translate="yes" xml:space="preserve">
          <source>But I want &lt;strong&gt;only milliseconds&lt;/strong&gt;, right? The shortest way to get them:</source>
          <target state="translated">하지만 &lt;strong&gt;밀리 초 만&lt;/strong&gt; 원합니다. 그들을 얻는 가장 짧은 방법 :</target>
        </trans-unit>
        <trans-unit id="88670f3e1ab678ed8307efce868e253554f8a4b6" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;now()&lt;/code&gt; function returns output in the &lt;code&gt;YYYY-MM-DD HH:MM:SS:MS&lt;/code&gt; format. Use the below sample script to get the current date and time in a Python script and print results on the screen. Create file &lt;code&gt;getDateTime1.py&lt;/code&gt; with the below content.</source>
          <target state="translated">기본적으로 &lt;code&gt;now()&lt;/code&gt; 함수는 &lt;code&gt;YYYY-MM-DD HH:MM:SS:MS&lt;/code&gt; 형식으로 출력을 반환합니다. 아래 샘플 스크립트를 사용하여 현재 날짜 및 시간을 Python 스크립트로 가져 와서 화면에 결과를 인쇄하십시오. 아래 내용으로 &lt;code&gt;getDateTime1.py&lt;/code&gt; 파일을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="22bdf47be3fd0a53ecdf5d6edbde0a2c6b97f0e0" translate="yes" xml:space="preserve">
          <source>Do</source>
          <target state="translated">Do</target>
        </trans-unit>
        <trans-unit id="8c4545eef0bbb1ebd9c03599f8e3336329a56933" translate="yes" xml:space="preserve">
          <source>Do &lt;code&gt;dir(date)&lt;/code&gt; or any variables including the package. You can get all the attributes and methods associated with the variable.</source>
          <target state="translated">&lt;code&gt;dir(date)&lt;/code&gt; 또는 패키지를 포함한 모든 변수를 수행하십시오. 변수와 관련된 모든 속성과 메소드를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="797b84b5fdc36ad6870fe916c87a5adc229a01c2" translate="yes" xml:space="preserve">
          <source>Equivalently, in Python 3 we have the &lt;code&gt;timezone&lt;/code&gt; class with a utc &lt;code&gt;timezone&lt;/code&gt; instance attached, which also makes the object timezone aware (but to convert to another timezone without the handy &lt;code&gt;pytz&lt;/code&gt; module is left as an exercise to the reader):</source>
          <target state="translated">마찬가지로 Python 3에는 utc &lt;code&gt;timezone&lt;/code&gt; 인스턴스가 첨부 된 &lt;code&gt;timezone&lt;/code&gt; 클래스가있어 객체 ​​시간대를 인식하게합니다 (그러나 편리한 &lt;code&gt;pytz&lt;/code&gt; 모듈없이 다른 시간대로 변환하는 것은 독자에게 연습으로 남습니다).</target>
        </trans-unit>
        <trans-unit id="13b88b85bb8a84ce6ff8d9c964ac94eae577f77c" translate="yes" xml:space="preserve">
          <source>For a specific timezone:</source>
          <target state="translated">특정 시간대의 경우 :</target>
        </trans-unit>
        <trans-unit id="7427c3c23b76654873617da699a1724887560c9f" translate="yes" xml:space="preserve">
          <source>For instance, the answer to the original question:</source>
          <target state="translated">예를 들어, 원래 질문에 대한 답변은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4b0b74869722425e1bdd7065238c671d574e0fb1" translate="yes" xml:space="preserve">
          <source>For this example, the output will be like this: &lt;code&gt;'2013-09-18 11:16:32'&lt;/code&gt;</source>
          <target state="translated">이 예의 경우 출력은 다음과 같습니다. &lt;code&gt;'2013-09-18 11:16:32'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5fa7cfdce17750480776494fd7d9946728c28bc" translate="yes" xml:space="preserve">
          <source>Here is the list of &lt;a href=&quot;https://docs.python.org/library/datetime.html#strftime-and-strptime-format-codes&quot;&gt;&lt;code&gt;strftime&lt;/code&gt; directives&lt;/a&gt;.</source>
          <target state="translated">다음은 &lt;a href=&quot;https://docs.python.org/library/datetime.html#strftime-and-strptime-format-codes&quot;&gt; &lt;code&gt;strftime&lt;/code&gt; 지시문&lt;/a&gt; 목록입니다.</target>
        </trans-unit>
        <trans-unit id="86df8f688813f3fa56db7248d7594d73b3710ed7" translate="yes" xml:space="preserve">
          <source>How do I get the current time in Python?</source>
          <target state="translated">파이썬에서 현재 시간을 어떻게 알 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="cd9dd4f851c6a9265d567e8695f627e0170daf04" translate="yes" xml:space="preserve">
          <source>How to get the current time in Python</source>
          <target state="translated">파이썬에서 현재 시간을 얻는 방법</target>
        </trans-unit>
        <trans-unit id="6e4c33efa5cdfbb0d8e942bf506ed2ea01e7a36a" translate="yes" xml:space="preserve">
          <source>However, none of the datetime objects we've created so far can be easily converted to various timezones. We can solve that problem with the &lt;code&gt;pytz&lt;/code&gt; module:</source>
          <target state="translated">그러나 지금까지 생성 한 datetime 객체는 다양한 시간대로 쉽게 변환 할 수 없습니다. 우리는 &lt;code&gt;pytz&lt;/code&gt; 모듈로 그 문제를 해결할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="47c085634ba8fbc391377e211e7071971300a3c6" translate="yes" xml:space="preserve">
          <source>I want to get the time with milliseconds. A simple way to get them:</source>
          <target state="translated">나는 밀리 초로 시간을 얻고 싶다. 그들을 얻는 간단한 방법 :</target>
        </trans-unit>
        <trans-unit id="fa8a5094408659f2501339346fb46cb56b11a072" translate="yes" xml:space="preserve">
          <source>If all you want is the time, you can then get that with &lt;code&gt;local_time.time()&lt;/code&gt;.</source>
          <target state="translated">원하는 모든 것이 시간 &lt;code&gt;local_time.time()&lt;/code&gt; 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b80ded214b0b8f54c213c8b913cc952b2fca523c" translate="yes" xml:space="preserve">
          <source>If you just want the current timestamp in ms (for example, to measure execution time), you can also use the &quot;timeit&quot; module:</source>
          <target state="translated">현재 타임 스탬프를 ms 단위로 (예 : 실행 시간 측정) 원하는 경우 &quot;timeit&quot;모듈을 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d64b9c724b85834159fe1d3df9a72dbc00b2a9e9" translate="yes" xml:space="preserve">
          <source>If you live in the D.C. area (like me) the latency might not be too bad...</source>
          <target state="translated">DC 지역에 살고 있다면 (나 같은) 지연 시간이 너무 나쁘지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7efa38d57840ee76848e2727798197e2b3d5e67b" translate="yes" xml:space="preserve">
          <source>If you need current time as a &lt;code&gt;time&lt;/code&gt; object:</source>
          <target state="translated">&lt;code&gt;time&lt;/code&gt; 객체로 현재 시간이 필요한 경우 :</target>
        </trans-unit>
        <trans-unit id="3544754ec0caf449db16ce0e4ecf185844bd270a" translate="yes" xml:space="preserve">
          <source>If you're displaying the time with Python for the user, &lt;code&gt;ctime&lt;/code&gt; works nicely, not in a table (it doesn't typically sort well), but perhaps in a clock. However, I personally recommend, when dealing with time in Python, either using Unix time, or a timezone aware UTC &lt;code&gt;datetime&lt;/code&gt; object.</source>
          <target state="translated">사용자를 위해 Python으로 시간을 표시하는 경우 &lt;code&gt;ctime&lt;/code&gt; 은 테이블 (일반적으로 잘 정렬되지 않음)이 아니라 시계에서 잘 작동합니다. 그러나 개인적으로 파이썬에서 시간을 다룰 때 Unix 시간 또는 UTC 인식 &lt;code&gt;datetime&lt;/code&gt; 객체를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="ba57f94eae45684b208c88c1b416d1c5fe384b94" translate="yes" xml:space="preserve">
          <source>It will print in HH:MM:SS format.</source>
          <target state="translated">HH : MM : SS 형식으로 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="f62a02af92108e89130a1e272de6beae556c6637" translate="yes" xml:space="preserve">
          <source>One could ostensibly serialize this object for UTC time and store &lt;em&gt;that&lt;/em&gt; in a database, but it would require far more memory and be more prone to error than simply storing the Unix Epoch time, which I demonstrated first.</source>
          <target state="translated">UTC 시간 동안이 객체를 표면에 직렬화하여 데이터베이스에 저장할 &lt;em&gt;수&lt;/em&gt; 는 있지만 Unix Epoch 시간을 저장하는 것보다 훨씬 많은 메모리가 필요하고 오류가 발생하기 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="f385551838e1f973d52ac4bec8518e79f6cb84fe" translate="yes" xml:space="preserve">
          <source>Or a timezone-aware object that has the corresponding timezone info attached (Python 3.2+):</source>
          <target state="translated">또는 해당 시간대 정보가 첨부 된 시간대 인식 객체 (Python 3.2 이상) :</target>
        </trans-unit>
        <trans-unit id="b9027258697ef28764f395425a975422f0e81d96" translate="yes" xml:space="preserve">
          <source>Or if you want the gist.</source>
          <target state="translated">또는 요점을 원한다면.</target>
        </trans-unit>
        <trans-unit id="4b874a9f4b0dc1391c7979b9932e538a76f4ef41" translate="yes" xml:space="preserve">
          <source>Or the UTC version:</source>
          <target state="translated">또는 UTC 버전 :</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="e35215ba144662f857f360b0218d098b98497893" translate="yes" xml:space="preserve">
          <source>Presumably most of the rest of you mean somewhere else.</source>
          <target state="translated">아마 당신의 나머지 대부분은 다른 곳을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="956e866069f6b4837df148cb381d772a11d6a253" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://docs.python.org/3/library/datetime.html&quot;&gt;&lt;strong&gt;the documentation&lt;/strong&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;https://docs.python.org/3/library/datetime.html&quot;&gt;&lt;strong&gt;은 설명서&lt;/strong&gt;&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2c63afcf012b8bd0149f4bc65d2b6ef6a7b0a6a4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;https://stackoverflow.com/questions/415511/how-to-get-current-time-in-python/415519#415519&quot;&gt;Harley's answer&lt;/a&gt;, but use the &lt;code&gt;str()&lt;/code&gt; function for a quick-n-dirty, slightly more human readable format:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/415511/how-to-get-current-time-in-python/415519#415519&quot;&gt;Harley의 답변&lt;/a&gt; 과 비슷하지만 &lt;code&gt;str()&lt;/code&gt; 함수를 사용하여 좀 더 읽기 쉽고 약간 더 읽기 쉬운 형식으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="13a762917821bff8d83caf56baa57be783f5c610" translate="yes" xml:space="preserve">
          <source>That outputs the current GMT in the specified format. There is also a &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.localtime&quot;&gt;&lt;code&gt;localtime()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">현재 GMT를 지정된 형식으로 출력합니다. &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.localtime&quot;&gt; &lt;code&gt;localtime()&lt;/code&gt; &lt;/a&gt; 메소드도 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b34655e05bce6bcd5081c98f617e618089c2e38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;datetime.now&lt;/code&gt; is a class method that returns the current time. It uses the &lt;code&gt;time.localtime&lt;/code&gt; without the timezone info (if not given, otherwise see timezone aware below). It has a representation (which would allow you to recreate an equivalent object) echoed on the shell, but when printed (or coerced to a &lt;code&gt;str&lt;/code&gt;), it is in human readable (and nearly ISO) format, and the lexicographic sort is equivalent to the chronological sort:</source>
          <target state="translated">&lt;code&gt;datetime.now&lt;/code&gt; 는 현재 시간을 반환하는 클래스 메서드입니다. 시간대 정보없이 &lt;code&gt;time.localtime&lt;/code&gt; 을 사용합니다 (제공되지 않은 경우 아래의 시간대 인식 참조). 쉘에 반영된 표현 (동등한 오브젝트를 재 작성할 수 있음)을 갖지만 인쇄 (또는 &lt;code&gt;str&lt;/code&gt; 으로 강제) 할 때 사람이 읽을 수있는 (그리고 거의 ISO) 형식이며 사전 사전 정렬은 다음과 같습니다. 연대순 정렬 :</target>
        </trans-unit>
        <trans-unit id="d6916c8c4d93dbd00885805e0ebb18cfe4c7307f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;datetime&lt;/code&gt; module is also quite useful here:</source>
          <target state="translated">&lt;code&gt;datetime&lt;/code&gt; 모듈은 다음과 같이 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="60f7f8f9a02e4773cf19a07fb006d23f0df52e12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pytz&lt;/code&gt; module allows us to make our &lt;code&gt;datetime&lt;/code&gt; objects timezone aware and convert the times to the hundreds of timezones available in the &lt;code&gt;pytz&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;pytz&lt;/code&gt; 모듈을 사용하면 &lt;code&gt;datetime&lt;/code&gt; 객체를 표준 시간대로 인식하고 시간을 &lt;code&gt;pytz&lt;/code&gt; 모듈에서 사용 가능한 수백 개의 시간대로 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d54d6473ee3c263e4533072a855c281c1891c33f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;time&lt;/code&gt; module</source>
          <target state="translated">&lt;code&gt;time&lt;/code&gt; 모듈</target>
        </trans-unit>
        <trans-unit id="b3ca25b1ba2eac9002df795ab5da3c2fc0640be7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;time&lt;/code&gt; module provides functions that tells us the time in &quot;seconds since the epoch&quot; as well as other utilities.</source>
          <target state="translated">&lt;code&gt;time&lt;/code&gt; 모듈은 다른 유틸리티뿐만 아니라 &quot;신기원 이후의 시간&quot;으로 시간을 알려주는 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8ba7ec8cea463c89fd59e18dd278ec94ce331cf8" translate="yes" xml:space="preserve">
          <source>The following is what I use to get the time without having to format. Some people don't like the split method, but it is useful here:</source>
          <target state="translated">다음은 형식을 지정하지 않고 시간을 얻는 데 사용하는 것입니다. 어떤 사람들은 split 방법을 좋아하지 않지만 여기서 유용합니다.</target>
        </trans-unit>
        <trans-unit id="849deade087fc32f2568cd7519b6a1d3dbd656db" translate="yes" xml:space="preserve">
          <source>The other ways of viewing times are much more error prone, especially when dealing with data that may come from different time zones. You want there to be no confusion as to which timezone a string or serialized datetime object was intended for.</source>
          <target state="translated">시간을 보는 다른 방법은 특히 다른 시간대에서 온 데이터를 처리 할 때 오류가 발생하기 쉽습니다. 문자열 또는 직렬화 된 날짜 / 시간 객체의 시간대에 대해 혼동하지 않기를 원합니다.</target>
        </trans-unit>
        <trans-unit id="c339bc65dff58001215eaa73ff30df39230f5b07" translate="yes" xml:space="preserve">
          <source>The output looks like below:</source>
          <target state="translated">출력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0b7303e3ac7080d5a48cc9ac732ea055f5fa10a1" translate="yes" xml:space="preserve">
          <source>The previous answers are all good suggestions, but I find it easiest to use &lt;code&gt;ctime()&lt;/code&gt;:</source>
          <target state="translated">이전 답변은 모두 좋은 제안이지만 &lt;code&gt;ctime()&lt;/code&gt; 을 사용하는 것이 가장 쉽다는 것을 알았습니다.</target>
        </trans-unit>
        <trans-unit id="9605d63a45aa526b9f2ac25c6b4186cc7aa24ac5" translate="yes" xml:space="preserve">
          <source>The quickest way is:</source>
          <target state="translated">가장 빠른 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a366d85a563f08e6cca64025a468148a595d0d15" translate="yes" xml:space="preserve">
          <source>The use of the capital &lt;code&gt;Y&lt;/code&gt; gives the full year, and using &lt;code&gt;y&lt;/code&gt; would give &lt;code&gt;06/02/15&lt;/code&gt;.</source>
          <target state="translated">대문자 &lt;code&gt;Y&lt;/code&gt; 를 사용하면 1 년 전체가 제공 &lt;code&gt;06/02/15&lt;/code&gt; &lt;code&gt;y&lt;/code&gt; 를 사용하면 06/02/15가 됩니다.</target>
        </trans-unit>
        <trans-unit id="c01919b3937cb052b14b9cdc732edee1acd1d112" translate="yes" xml:space="preserve">
          <source>Then remove the leading &lt;code&gt;datetime.&lt;/code&gt; from all of the above.</source>
          <target state="translated">그런 다음 선행 &lt;code&gt;datetime.&lt;/code&gt; 제거하십시오 . 위의 모든 것에서.</target>
        </trans-unit>
        <trans-unit id="fbca529cbdc9e8306471128bb3b81bd005918c75" translate="yes" xml:space="preserve">
          <source>There is some difference for Unix and Windows platforms.</source>
          <target state="translated">Unix와 Windows 플랫폼에는 약간의 차이가 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3f22df435ed9a1f48b89524ab4339a619d4cca0" translate="yes" xml:space="preserve">
          <source>There's a lot of standards which need addressing, including multiple RFCs and ISOs, to worry about.  Ever get them mixed up; not to worry, take a little look into &lt;code&gt;dir(pendulum.constants)&lt;/code&gt; There's a bit more than RFC and ISO formats there, though.</source>
          <target state="translated">여러 RFC 및 ISO를 포함하여 처리해야 할 표준이 많이 있습니다. 그들을 섞어 놓으십시오. 걱정하지 말고 &lt;code&gt;dir(pendulum.constants)&lt;/code&gt; 조금 살펴보십시오. RFC 및 ISO 형식보다 조금 더 있습니다.</target>
        </trans-unit>
        <trans-unit id="ebb225a37b097f9938cef9cd8c13016cd8fc53a5" translate="yes" xml:space="preserve">
          <source>These outputs are different because the timestamp returned by &lt;code&gt;ctime()&lt;/code&gt; depends on your geographical location.</source>
          <target state="translated">&lt;code&gt;ctime()&lt;/code&gt; 에 의해 반환 된 타임 스탬프는 지리적 위치에 따라 다르므로 이러한 출력은 다릅니다.</target>
        </trans-unit>
        <trans-unit id="07063584c1dfdd9d2cbb592f9226b93e79919fc5" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;http://docs.python.org/library/time.html#module-time&quot;&gt;page&lt;/a&gt; has more details.</source>
          <target state="translated">이 &lt;a href=&quot;http://docs.python.org/library/time.html#module-time&quot;&gt;페이지&lt;/a&gt; 에 자세한 내용이 있습니다.</target>
        </trans-unit>
        <trans-unit id="13a58d7d892fd5ec3d0e1556cc324df31627e54a" translate="yes" xml:space="preserve">
          <source>This conversion is also not good for record-keeping (except in text that will only be parsed by humans - and with improved Optical Character Recognition and Artificial Intelligence, I think the number of these cases will diminish).</source>
          <target state="translated">이 변환은 또한 기록을 유지하는 데 좋지 않습니다 (인간에 의해서만 구문 분석되는 텍스트는 제외하고 광학 문자 인식 및 인공 지능이 향상됨에 따라 이러한 사례의 수가 줄어들 것으로 생각합니다).</target>
        </trans-unit>
        <trans-unit id="b51e52f263321fd6b82fdf3c8d57666036c93251" translate="yes" xml:space="preserve">
          <source>This gives a nicely formatted string representation of the current local time.</source>
          <target state="translated">이것은 현재 현지 시간의 형식이 잘 지정된 문자열 표현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="07975bf1a1da74e8897d27e336c7099dac54c272" translate="yes" xml:space="preserve">
          <source>This is not ideal for human scheduling, however. If you have a future event you wish to take place at a certain point in time, you'll want to store that time with a string that can be parsed into a datetime object or a serialized datetime object (these will be described later).</source>
          <target state="translated">그러나 이것은 사람 스케줄링에는 이상적이지 않습니다. 특정 시점에서 진행하려는 미래의 이벤트가있는 경우 날짜 시간 오브젝트 또는 직렬화 된 날짜 시간 오브젝트로 구문 분석 할 수있는 문자열로 해당 시간을 저장하려고합니다 (이에 대해서는 나중에 설명 함).</target>
        </trans-unit>
        <trans-unit id="ead09e2c048e086d720bc35c442c6582826511bd" translate="yes" xml:space="preserve">
          <source>This is the format you should get timestamps in for saving in databases. It is a simple floating point number that can be converted to an integer. It is also good for arithmetic in seconds, as it represents the number of seconds since Jan 1, 1970 00:00:00, and it is memory light relative to the other representations of time we'll be looking at next:</source>
          <target state="translated">이것은 데이터베이스에 저장하기 위해 타임 스탬프를 가져와야하는 형식입니다. 정수로 변환 할 수있는 간단한 부동 소수점 숫자입니다. 1970 년 1 월 1 일 00:00:00 이후의 초 수를 나타내므로 초 단위로 산술에 유용하며, 다음에 살펴볼 다른 시간 표현에 비해 메모리가 적습니다.</target>
        </trans-unit>
        <trans-unit id="fbf7c8ba8bbfdf0c77b06223d67267f704661c4c" translate="yes" xml:space="preserve">
          <source>This is what I ended up going with:</source>
          <target state="translated">이것이 내가 끝내는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a7409b441e9c7d6987d90b75c18ea4f73c2795eb" translate="yes" xml:space="preserve">
          <source>This question doesn't need a new answer just for the sake of it ... a shiny new-ish toy/module, however, is enough justification.  That being the &lt;a href=&quot;https://pendulum.eustace.io/docs/&quot;&gt;Pendulum library&lt;/a&gt;, which appears to do the sort of things which arrow attempted, except without the inherent flaws and bugs which beset arrow.</source>
          <target state="translated">이 질문은 단지 그것을 위해 새로운 대답이 필요하지 않습니다. 그러나 반짝이는 새로운 장난감 / 모듈이지만 충분합니다. 그것은 &lt;a href=&quot;https://pendulum.eustace.io/docs/&quot;&gt;진자 라이브러리&lt;/a&gt; 인데, 화살표가있는 고유의 결함과 버그가 없다면 화살표가 시도한 것들을하는 것처럼 보입니다.</target>
        </trans-unit>
        <trans-unit id="5e3aee22df5cfff0893905b51fe3f7f338269aa1" translate="yes" xml:space="preserve">
          <source>This timestamp does not account for leap-seconds, so it's not linear - leap seconds are ignored. So while it is not equivalent to the international UTC standard, it is close, and therefore quite good for most cases of record-keeping.</source>
          <target state="translated">이 타임 스탬프는 윤초를 설명하지 않으므로 선형이 아닙니다. 윤초는 무시됩니다. 따라서 국제 UTC 표준과 동일하지는 않지만 표준에 가깝기 때문에 대부분의 레코드 관리에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="abbabf48b4135e81ab47c4e95b1d86004af988df" translate="yes" xml:space="preserve">
          <source>To change its output, add .format():</source>
          <target state="translated">출력을 변경하려면 .format ()을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="d2bed44d03fd32e33a985cba036d49b0158e03dc" translate="yes" xml:space="preserve">
          <source>To get the hours, minutes, seconds and milliseconds to merge later, you can use these functions:</source>
          <target state="translated">나중에 병합 할 시간, 분, 초 및 밀리 초를 얻으려면 다음 함수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="950a2de07a06ca46d20ad02c4a0b44fb7a0c8382" translate="yes" xml:space="preserve">
          <source>To save typing, you can import the &lt;code&gt;datetime&lt;/code&gt; object from the &lt;code&gt;datetime&lt;/code&gt; module:</source>
          <target state="translated">입력을 저장하기 위해 &lt;code&gt;datetime&lt;/code&gt; 모듈에서 &lt;code&gt;datetime&lt;/code&gt; 객체를 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="068ad4dfebfbc33595ba34b37ad086721f2f3834" translate="yes" xml:space="preserve">
          <source>Try the arrow module from &lt;a href=&quot;http://crsmithdev.com/arrow/&quot;&gt;http://crsmithdev.com/arrow/&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://crsmithdev.com/arrow/&quot;&gt;http://crsmithdev.com/arrow/&lt;/a&gt; 에서 화살표 모듈을 사용해보십시오.</target>
        </trans-unit>
        <trans-unit id="3d3b92987114edff7768ff61d7ad208b310153e7" translate="yes" xml:space="preserve">
          <source>UTC is a time standard that is nearly equivalent to the GMT timezone. (While GMT and UTC do not change for Daylight Savings Time, their users may switch to other timezones, like British Summer Time, during the Summer.)</source>
          <target state="translated">UTC는 GMT 시간대와 거의 동일한 시간 표준입니다. GMT 및 UTC는 일광 절약 시간 제로 변경되지 않지만 사용자는 여름 동안 영국 서머 타임과 같은 다른 시간대로 전환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5035446324fdba83237f99876babaf3d625f8a25" translate="yes" xml:space="preserve">
          <source>Unix Epoch Time</source>
          <target state="translated">유닉스 시대</target>
        </trans-unit>
        <trans-unit id="bc0e34154d952ed72b15f5d9618112640d548177" translate="yes" xml:space="preserve">
          <source>Use:</source>
          <target state="translated">Use:</target>
        </trans-unit>
        <trans-unit id="983592010bffe52a2160fb4dbe1050730d376027" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;https://en.wikipedia.org/wiki/Pandas_%28software%29&quot;&gt;pandas&lt;/a&gt; to get the current time, kind of overkilling the problem at hand:</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Pandas_%28software%29&quot;&gt;팬더&lt;/a&gt; 를 사용하여 현재 시간을 가져 와서 당면한 문제 를 극복하십시오.</target>
        </trans-unit>
        <trans-unit id="c33194a234dc4b7c431f4d5a50f6f93dd855d615" translate="yes" xml:space="preserve">
          <source>What is the module/method used to get the current time?</source>
          <target state="translated">현재 시간을 얻는 데 사용되는 모듈 / 방법은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="f0788dba4aa2a6e0ebb8bced0a669c2ca9e864a5" translate="yes" xml:space="preserve">
          <source>When we say local, though what do we mean?  Well I mean:</source>
          <target state="translated">우리가 현지인이라고 할 때, 우리는 무엇을 의미합니까? 글쎄, 내 말은 :</target>
        </trans-unit>
        <trans-unit id="8e4b98a251ccef5dfd46094813cbb2d29763e380" translate="yes" xml:space="preserve">
          <source>Why not ask the &lt;a href=&quot;http://tycho.usno.navy.mil/cgi-bin/timer.pl&quot;&gt;U.S. Naval Observatory&lt;/a&gt;, the official timekeeper of the United States Navy?</source>
          <target state="translated">&lt;a href=&quot;http://tycho.usno.navy.mil/cgi-bin/timer.pl&quot;&gt;미국 해군&lt;/a&gt; 의 공식 계시 원인 미 해군 천문대에 물어보십시오.</target>
        </trans-unit>
        <trans-unit id="353afa85bac0872c49fe8ca62d96fae1bdfe94e8" translate="yes" xml:space="preserve">
          <source>You can also make a naive datetime object aware with the &lt;code&gt;pytz&lt;/code&gt; timezone &lt;code&gt;localize&lt;/code&gt; method, or by replacing the tzinfo attribute (with &lt;code&gt;replace&lt;/code&gt;, this is done blindly), but these are more last resorts than best practices:</source>
          <target state="translated">또한 &lt;code&gt;pytz&lt;/code&gt; 시간대 &lt;code&gt;localize&lt;/code&gt; 메소드를 사용하거나 tzinfo 속성을 바꾸면 (맹목적으로 수행됨) 순진한 datetime 객체를 인식 할 수 있지만 다음은 모범 사례보다 최후의 수단입니다.</target>
        </trans-unit>
        <trans-unit id="3ee84c2011282be6d1e0bf7006807cc44ad009e4" translate="yes" xml:space="preserve">
          <source>You can also represent the current time in the way preferred by your operating system (which means it can change when you change your system preferences, so don't rely on this to be standard across all systems, as I've seen others expect). This is typically user friendly, but doesn't typically result in strings one can sort chronologically:</source>
          <target state="translated">운영 체제에서 선호하는 방식으로 현재 시간을 나타낼 수도 있습니다 (즉, 시스템 환경 설정을 변경할 때 시간이 변경 될 수 있으므로 다른 시스템에서 예상 한대로 모든 시스템에서 표준으로 사용하지 마십시오) . 이것은 일반적으로 사용자 친화적이지만 일반적으로 시간순으로 정렬 할 수있는 문자열을 생성하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="77a5a7816d7ae39a86fb052fd356a43fd89da989" translate="yes" xml:space="preserve">
          <source>You can do so using ctime():</source>
          <target state="translated">ctime ()을 사용하면됩니다 :</target>
        </trans-unit>
        <trans-unit id="8351c771679cc492b8d102d98d6b052f7ef74dab" translate="yes" xml:space="preserve">
          <source>You can get a datetime object in UTC time, a global standard, by doing this:</source>
          <target state="translated">다음을 수행하여 글로벌 표준 인 UTC 시간으로 datetime 객체를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78e8bebaf265363c94de1e4ca754734d38df3712" translate="yes" xml:space="preserve">
          <source>You can hydrate timestamps into human readable form with &lt;code&gt;ctime&lt;/code&gt; as well:</source>
          <target state="translated">&lt;code&gt;ctime&lt;/code&gt; 을 사용하여 타임 스탬프를 사람이 읽을 수있는 형태로 수화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39ae4951ba51a1cad7d48d5cd381b62c70bbda00" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;http://docs.python.org/3.3/library/time.html?highlight=time.strftime#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://docs.python.org/3.3/library/time.html?highlight=time.strftime#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; &lt;/a&gt; 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="603e71cf7ced9dd5e5586392707b64bf7929ad78" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;time&lt;/code&gt; module:</source>
          <target state="translated">&lt;code&gt;time&lt;/code&gt; 모듈을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4fd65534994cbcd9580ed6771211d0b9bf412f2d" translate="yes" xml:space="preserve">
          <source>You can use this function to get the time (unfortunately it doesn't say AM or PM):</source>
          <target state="translated">이 함수를 사용하여 시간을 얻을 수 있습니다 (불행히도 AM 또는 PM은 표시되지 않음).</target>
        </trans-unit>
        <trans-unit id="91c9d61ab407487652e2c5d474458f469aef4226" translate="yes" xml:space="preserve">
          <source>You could also use the following code to give a more lengthy time:</source>
          <target state="translated">다음 코드를 사용하여 더 긴 시간을 제공 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1e0ba940ff2906e6d1aec79bce90e834c75be7a" translate="yes" xml:space="preserve">
          <source>datetime timezone aware</source>
          <target state="translated">날짜 시간 시간대 인식</target>
        </trans-unit>
        <trans-unit id="6fb316d75e55538656388d80ffa2f26eeca2da13" translate="yes" xml:space="preserve">
          <source>datetime's &lt;code&gt;utcnow&lt;/code&gt;</source>
          <target state="translated">날짜 시간의 &lt;code&gt;utcnow&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b30c3124731b8c70868fd9044c234bc29bc946b6" translate="yes" xml:space="preserve">
          <source>for only date:</source>
          <target state="translated">날짜 만 :</target>
        </trans-unit>
        <trans-unit id="34beb92be6c6e6c71dbfbbe9ef8a6b2db4db528f" translate="yes" xml:space="preserve">
          <source>if you are using numpy already then directly you can use numpy.datetime64() 
function.</source>
          <target state="translated">numpy를 이미 사용하고 있다면 numpy.datetime64 () 함수를 직접 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ae2dc2ac7dc5d47b8c060f0e22c38089a3bea86" translate="yes" xml:space="preserve">
          <source>or,</source>
          <target state="translated">or,</target>
        </trans-unit>
        <trans-unit id="038c718d4a52947f28a835b41b11414d8bd8f1c3" translate="yes" xml:space="preserve">
          <source>or, if you are using pandas already then you can use pandas.to_datetime() function</source>
          <target state="translated">또는 이미 판다를 사용하고 있다면 pandas.to_datetime () 함수를 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="27806062493e422e06f1adc0af3df9590689c118" translate="yes" xml:space="preserve">
          <source>output:</source>
          <target state="translated">output:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
