<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/4112686">
    <body>
      <group id="4112686">
        <trans-unit id="2058f92b0de7e12c6782c1a4eda7cfebe29256ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ajax&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ajax&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fc151f7bb9f6c75ba5aa00ebfc79caba10f9a670" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Here is ajax Sample&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Aqu&amp;iacute; est&amp;aacute; la muestra ajax&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9b04aae0fcb1123c59e5b55206bb9fdae6f5829" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In Servlet&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;En servlet&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="983c95a5ee8d4366708a42d41fe5cd2558bc337e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LoginServlet Servlet Code :-&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;C&amp;oacute;digo de servlet de LoginServlet: -&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a5fb6e5fc13a01937ae02611fcad859574413d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;index.html&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;index.html&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="402400b00b019f3b35fb23e3a52105143431569d" translate="yes" xml:space="preserve">
          <source>Access Java / Servlet / JSP / JSTL / EL variables in JavaScript</source>
          <target state="translated">Acceda a las variables Java Servlet JSP JSTL EL en JavaScript</target>
        </trans-unit>
        <trans-unit id="c70e9a2dda5670ffe54888a0054ca4d0bdb6f986" translate="yes" xml:space="preserve">
          <source>Ajax (also AJAX) an acronym for Asynchronous JavaScript and XML) is a group of interrelated web development techniques used on the client-side to create asynchronous web applications. With Ajax, web applications can send data to, and retrieve data from, a server asynchronously 
Below is example code:</source>
          <target state="translated">Ajax (también AJAX,acrónimo de Asynchronous JavaScript and XML)es un grupo de técnicas de desarrollo web interrelacionadas que se utilizan en el lado del cliente para crear aplicaciones web asíncronas.Con Ajax,las aplicaciones web pueden enviar datos a,y recuperar datos de,un servidor asincrónico A continuación se muestra un código de ejemplo:</target>
        </trans-unit>
        <trans-unit id="2fad0a651e220aefadec27dc104de3e10b23be80" translate="yes" xml:space="preserve">
          <source>Ajaxifying an existing form</source>
          <target state="translated">Ajaxificar una forma existente</target>
        </trans-unit>
        <trans-unit id="113ae3d09a0c918d7c1bcb8f7f05166e16fe886e" translate="yes" xml:space="preserve">
          <source>And the JSP:</source>
          <target state="translated">Y el JSP:</target>
        </trans-unit>
        <trans-unit id="0c1a194459d4f382c580c25f68a3dead23f08e70" translate="yes" xml:space="preserve">
          <source>Call Servlet and invoke Java code from JavaScript along with parameters</source>
          <target state="translated">Llama a Servlet e invoca el código Java de JavaScript junto con los parámetros</target>
        </trans-unit>
        <trans-unit id="1be07164444118687e39c18c9d8a253ec4bd137a" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;/some.jsp&lt;/code&gt; like below (note: the code doesn't expect the JSP file being placed in a subfolder, if you do so, alter servlet URL accordingly):</source>
          <target state="translated">Cree un &lt;code&gt;/some.jsp&lt;/code&gt; como se muestra a continuaci&amp;oacute;n (nota: el c&amp;oacute;digo no espera que el archivo JSP se coloque en una subcarpeta; si lo hace, modifique la URL del servlet en consecuencia):</target>
        </trans-unit>
        <trans-unit id="218c81d29238c44d6989d05c6a863c654a6b371d" translate="yes" xml:space="preserve">
          <source>Create a servlet with a &lt;code&gt;doGet()&lt;/code&gt; method which look like this:</source>
          <target state="translated">Cree un servlet con un m&amp;eacute;todo &lt;code&gt;doGet()&lt;/code&gt; que se vea as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="74fa38aab4bf8664c9779452f07c09fe8194e1af" translate="yes" xml:space="preserve">
          <source>Do note that a lot of starters mix &lt;code&gt;contentType&lt;/code&gt; with &lt;code&gt;dataType&lt;/code&gt;. The &lt;code&gt;contentType&lt;/code&gt; represents the type of the &lt;strong&gt;request&lt;/strong&gt; body. The &lt;code&gt;dataType&lt;/code&gt; represents the (expected) type of the &lt;strong&gt;response&lt;/strong&gt; body, which is usually unnecessary as jQuery already autodetects it based on response's &lt;code&gt;Content-Type&lt;/code&gt; header.</source>
          <target state="translated">Tenga en cuenta que muchos principiantes mezclan &lt;code&gt;contentType&lt;/code&gt; con &lt;code&gt;dataType&lt;/code&gt; . &lt;code&gt;contentType&lt;/code&gt; representa el tipo del cuerpo de la &lt;strong&gt;solicitud&lt;/strong&gt; . &lt;code&gt;dataType&lt;/code&gt; representa el tipo (esperado) del cuerpo de la &lt;strong&gt;respuesta&lt;/strong&gt; , que generalmente es innecesario ya que jQuery ya lo detecta autom&amp;aacute;ticamente en funci&amp;oacute;n del encabezado &lt;code&gt;Content-Type&lt;/code&gt; de la respuesta.</target>
        </trans-unit>
        <trans-unit id="e7ca8fc2fbc7580c6e74e346b13bf93f92eaf53b" translate="yes" xml:space="preserve">
          <source>Do note that jQuery automatically parses the response as JSON and gives you directly a JSON object (&lt;code&gt;responseJson&lt;/code&gt;) as function argument when you set the response content type to &lt;code&gt;application/json&lt;/code&gt;. If you forget to set it or rely on a default of &lt;code&gt;text/plain&lt;/code&gt; or &lt;code&gt;text/html&lt;/code&gt;, then the &lt;code&gt;responseJson&lt;/code&gt; argument wouldn't give you a JSON object, but a plain vanilla string and you'd need to manually fiddle around with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse&quot;&gt;&lt;code&gt;JSON.parse()&lt;/code&gt;&lt;/a&gt; afterwards, which is thus totally unnecessary if you set the content type right in first place.</source>
          <target state="translated">Tenga en cuenta que jQuery analiza autom&amp;aacute;ticamente la respuesta como JSON y le proporciona directamente un objeto JSON ( &lt;code&gt;responseJson&lt;/code&gt; ) como argumento de funci&amp;oacute;n cuando establece el tipo de contenido de respuesta en &lt;code&gt;application/json&lt;/code&gt; . Si olvida configurarlo o se basa en un valor predeterminado de &lt;code&gt;text/plain&lt;/code&gt; o &lt;code&gt;text/html&lt;/code&gt; , entonces el argumento &lt;code&gt;responseJson&lt;/code&gt; no le dar&amp;iacute;a un objeto JSON, sino una cadena de vainilla simple y necesitar&amp;iacute;a jugar manualmente con &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse&quot;&gt; &lt;code&gt;JSON.parse()&lt;/code&gt; &lt;/a&gt; despu&amp;eacute;s, lo que es totalmente innecesario si configura el tipo de contenido en primer lugar.</target>
        </trans-unit>
        <trans-unit id="7716e53e6264d789d93f62b54b389ddc31f8c9d3" translate="yes" xml:space="preserve">
          <source>Do note that this all is more clumsy than just using &lt;code&gt;$.param()&lt;/code&gt;. Normally, you want to use &lt;code&gt;JSON.stringify()&lt;/code&gt; only if the target service is e.g. a JAX-RS (RESTful) service which is for some reason only capable of consuming JSON strings and not regular request parameters.</source>
          <target state="translated">Tenga en cuenta que todo esto es m&amp;aacute;s torpe que simplemente usar &lt;code&gt;$.param()&lt;/code&gt; . Normalmente, desea usar &lt;code&gt;JSON.stringify()&lt;/code&gt; solo si el servicio de destino es, por ejemplo, un servicio JAX-RS (RESTful) que, por alguna raz&amp;oacute;n, solo puede consumir cadenas JSON y no par&amp;aacute;metros de solicitud regulares.</target>
        </trans-unit>
        <trans-unit id="076a5bb453b0c056da4abb1b6bd46e404396643a" translate="yes" xml:space="preserve">
          <source>Here's an example which displays &lt;code&gt;List&amp;lt;Product&amp;gt;&lt;/code&gt; in a &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; where the &lt;code&gt;Product&lt;/code&gt; class has the properties &lt;code&gt;Long id&lt;/code&gt;, &lt;code&gt;String name&lt;/code&gt; and &lt;code&gt;BigDecimal price&lt;/code&gt;. The servlet:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo que muestra &lt;code&gt;List&amp;lt;Product&amp;gt;&lt;/code&gt; en una &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; donde la clase &lt;code&gt;Product&lt;/code&gt; tiene las propiedades &lt;code&gt;Long id&lt;/code&gt; , &lt;code&gt;String name&lt;/code&gt; y &lt;code&gt;BigDecimal price&lt;/code&gt; . El servlet:</target>
        </trans-unit>
        <trans-unit id="76606af17829a9c914ce8f7ffdba8e558646d376" translate="yes" xml:space="preserve">
          <source>Here's an example which displays &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; as &lt;code&gt;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&lt;/code&gt;. The servlet:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo que muestra &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; como &lt;code&gt;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&lt;/code&gt; . El servlet:</target>
        </trans-unit>
        <trans-unit id="1fedc26505ef0a45590a9011066063c7e892fe65" translate="yes" xml:space="preserve">
          <source>Here's an example which does effectively the same as previous example, but then with XML instead of JSON. When using JSP as XML output generator you'll see that it's less tedious to code the table and all. JSTL is this way much more helpful as you can actually use it to iterate over the results and perform server side data formatting. The servlet:</source>
          <target state="translated">Aquí hay un ejemplo que hace efectivamente lo mismo que el ejemplo anterior,pero con XML en lugar de JSON.Cuando se utiliza JSP como generador de salida de XML verás que es menos tedioso codificar la tabla y todo eso.JSTL es de esta manera mucho más útil ya que puedes usarlo para iterar sobre los resultados y realizar el formateo de datos del lado del servidor.El servlet:</target>
        </trans-unit>
        <trans-unit id="19358dfb5297679ce0acc76090ad0fed08d881b2" translate="yes" xml:space="preserve">
          <source>Here's another example which displays &lt;code&gt;Map&amp;lt;String, String&amp;gt;&lt;/code&gt; as &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">Aqu&amp;iacute; hay otro ejemplo que muestra &lt;code&gt;Map&amp;lt;String, String&amp;gt;&lt;/code&gt; como &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8b0e1d9c633234ea0495dd581b0582c7449952fa" translate="yes" xml:space="preserve">
          <source>Here, we are going to create the simple example to create the login form using servlet.</source>
          <target state="translated">Aquí,vamos a crear el sencillo ejemplo para crear el formulario de inicio de sesión usando servlet.</target>
        </trans-unit>
        <trans-unit id="6b5e95c3c081372fa9b03d1ed20f55fe66a66b84" translate="yes" xml:space="preserve">
          <source>How to switch easily between ajax-based website and basic HTML website?</source>
          <target state="translated">¿Cómo se puede cambiar fácilmente entre un sitio web basado en ajax y un sitio web HTML básico?</target>
        </trans-unit>
        <trans-unit id="70cbe90eaa16a4700707cad552786a51fb645ab2" translate="yes" xml:space="preserve">
          <source>How to upload files to server using JSP/Servlet and Ajax?</source>
          <target state="translated">¿Cómo subir archivos al servidor usando JSPServlet y Ajax?</target>
        </trans-unit>
        <trans-unit id="940f0507c952fdbc369b877849a17245348e5801" translate="yes" xml:space="preserve">
          <source>How to use Servlets and Ajax</source>
          <target state="translated">Cómo usar Servlets y Ajax</target>
        </trans-unit>
        <trans-unit id="72b18b38822f945c39d076ebbaf2df215a2f0ced" translate="yes" xml:space="preserve">
          <source>I will show you a whole example of servlet &amp;amp; how do ajax call.</source>
          <target state="translated">Te mostrar&amp;eacute; un ejemplo completo de servlet y c&amp;oacute;mo llamar a ajax.</target>
        </trans-unit>
        <trans-unit id="742dbe1ab1d99c7c39225c1cb57c44b7fe21aa08" translate="yes" xml:space="preserve">
          <source>I'm very new to web apps and Servlets and I have the following question:</source>
          <target state="translated">Soy muy nuevo en las aplicaciones web y Servlets y tengo la siguiente pregunta:</target>
        </trans-unit>
        <trans-unit id="b7040a94ad17c3b5189f80147817e1670383c612" translate="yes" xml:space="preserve">
          <source>If you don't have a form at all, but just wanted to interact with the servlet &quot;in the background&quot; whereby you'd like to POST some data, then you can use jQuery &lt;a href=&quot;http://api.jquery.com/jquery.param/&quot;&gt;&lt;code&gt;$.param()&lt;/code&gt;&lt;/a&gt; to easily convert a JSON object to an URL-encoded query string.</source>
          <target state="translated">Si no tiene un formulario, pero solo desea interactuar con el servlet &quot;en segundo plano&quot; mediante el cual desea &lt;a href=&quot;http://api.jquery.com/jquery.param/&quot;&gt; &lt;code&gt;$.param()&lt;/code&gt; &lt;/a&gt; algunos datos, puede usar jQuery $ .param () para convertir f&amp;aacute;cilmente un objeto JSON a una cadena de consulta codificada en URL.</target>
        </trans-unit>
        <trans-unit id="b4579b1eac22795f9aa92a821890b3fe553d42f7" translate="yes" xml:space="preserve">
          <source>If you however intend to send the JSON object as a whole instead of as individual request parameters for some reason, then you'd need to serialize it to a string using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/a&gt; (not part of jQuery) and instruct jQuery to set request content type to &lt;code&gt;application/json&lt;/code&gt; instead of (default) &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;. This can't be done via &lt;code&gt;$.post()&lt;/code&gt; convenience function, but needs to be done via &lt;code&gt;$.ajax()&lt;/code&gt; as below.</source>
          <target state="translated">Sin embargo, si tiene la intenci&amp;oacute;n de enviar el objeto JSON como un todo en lugar de como par&amp;aacute;metros de solicitud individuales por alguna raz&amp;oacute;n, entonces necesitar&amp;aacute; serializarlo en una cadena usando &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt; &lt;code&gt;JSON.stringify()&lt;/code&gt; &lt;/a&gt; (no es parte de jQuery) e instruir a jQuery para establecer solicite el tipo de contenido a &lt;code&gt;application/json&lt;/code&gt; en lugar de (default) &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; . Esto no puede hacerse a trav&amp;eacute;s de la funci&amp;oacute;n de conveniencia &lt;code&gt;$.post()&lt;/code&gt; , pero debe hacerse a trav&amp;eacute;s de &lt;code&gt;$.ajax()&lt;/code&gt; como se muestra a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3486e9159c31f3a00b22d150b18bfbf25ccec1d3" translate="yes" xml:space="preserve">
          <source>Important to realize and understand is that any &lt;code&gt;sendRedirect()&lt;/code&gt; and &lt;code&gt;forward()&lt;/code&gt; call by the servlet on an ajax request would only forward or redirect &lt;em&gt;the ajax request itself&lt;/em&gt; and not the main document/window where the ajax request originated. JavaScript/jQuery would in such case only retrieve the redirected/forwarded response as &lt;code&gt;responseText&lt;/code&gt; variable in the callback function. If it represents a whole HTML page and not an ajax-specific XML or JSON response, then all you could do is to replace the current document with it.</source>
          <target state="translated">Es importante darse cuenta y comprender que cualquier &lt;code&gt;sendRedirect()&lt;/code&gt; y &lt;code&gt;forward()&lt;/code&gt; del servlet en una solicitud ajax solo reenviar&amp;aacute; o redirigir&amp;aacute; &lt;em&gt;la solicitud ajax en s&amp;iacute;&lt;/em&gt; y no el documento / ventana principal donde se origin&amp;oacute; la solicitud ajax. JavaScript / jQuery en este caso solo recuperar&amp;iacute;a la respuesta redirigida / reenviada como variable &lt;code&gt;responseText&lt;/code&gt; en la funci&amp;oacute;n de devoluci&amp;oacute;n de llamada. Si representa una p&amp;aacute;gina HTML completa y no una respuesta XML o JSON espec&amp;iacute;fica de ajax, entonces todo lo que puede hacer es reemplazar el documento actual con ella.</target>
        </trans-unit>
        <trans-unit id="62023385138308b68158d933935bc448896ed4bb" translate="yes" xml:space="preserve">
          <source>Indeed, the keyword is &quot;ajax&quot;: &lt;em&gt;Asynchronous JavaScript and XML&lt;/em&gt;. However, last years it's more than often &lt;em&gt;Asynchronous JavaScript and JSON&lt;/em&gt;. Basically, you let JS execute an asynchronous HTTP request and update the HTML DOM tree based on the response data.</source>
          <target state="translated">De hecho, la palabra clave es &quot;ajax&quot;: &lt;em&gt;JavaScript as&amp;iacute;ncrono y XML&lt;/em&gt; . Sin embargo, en los &amp;uacute;ltimos a&amp;ntilde;os es m&amp;aacute;s frecuente que &lt;em&gt;JavaScript as&amp;iacute;ncrono y JSON&lt;/em&gt; . B&amp;aacute;sicamente, permite que JS ejecute una solicitud HTTP asincr&amp;oacute;nica y actualice el &amp;aacute;rbol DOM de HTML en funci&amp;oacute;n de los datos de respuesta.</target>
        </trans-unit>
        <trans-unit id="7dcdb57f219d93549fb03015051304d8abb8679d" translate="yes" xml:space="preserve">
          <source>It is also possible to implement this kind of thing using some browser plugin or add-on, though it may be tricky for a plugin to reach into the browser's data structures to update the DOM.  (Native code plugins normally write to some graphics frame that is embedded in the page.)</source>
          <target state="translated">También es posible implementar este tipo de cosas utilizando algún plugin o complemento del navegador,aunque puede ser difícil que un plugin llegue a las estructuras de datos del navegador para actualizar el DOM.(Los plugins de código nativo normalmente escriben en algún marco de gráficos que está incrustado en la página).</target>
        </trans-unit>
        <trans-unit id="fdf95eca9f8b1d2244f7b2cd723ef976ae32c350" translate="yes" xml:space="preserve">
          <source>Jsp page java script function to submit data to servlet with two variable firstName and lastName:</source>
          <target state="translated">Jsp page java script función para enviar datos al servlet con dos variables nombre y apellido:</target>
        </trans-unit>
        <trans-unit id="b4b9557d228a01bca5554f1ab7acdcd854b66199" translate="yes" xml:space="preserve">
          <source>Kickoff example returning &lt;code&gt;String&lt;/code&gt; as plain text</source>
          <target state="translated">Ejemplo de inicio que devuelve &lt;code&gt;String&lt;/code&gt; como texto sin formato</target>
        </trans-unit>
        <trans-unit id="5179696436ccb32906957d8a57c587c03f4caab2" translate="yes" xml:space="preserve">
          <source>Manually sending JSON object to servlet</source>
          <target state="translated">Enviando manualmente el objeto JSON al servlet</target>
        </trans-unit>
        <trans-unit id="01e4e4e67b46ca3b3e78d00525ca2700a9c99b3a" translate="yes" xml:space="preserve">
          <source>Manually sending request parameters to servlet</source>
          <target state="translated">Enviando manualmente los parámetros de la solicitud al servlet</target>
        </trans-unit>
        <trans-unit id="dde61058e584e3bdf27674e7b20f4195924c8af5" translate="yes" xml:space="preserve">
          <source>Map this servlet on an URL pattern of &lt;code&gt;/someservlet&lt;/code&gt; or &lt;code&gt;/someservlet/*&lt;/code&gt; as below (obviously, the URL pattern is free to your choice, but you'd need to alter the &lt;code&gt;someservlet&lt;/code&gt; URL in JS code examples over all place accordingly):</source>
          <target state="translated">Asigne este servlet en un patr&amp;oacute;n de URL de &lt;code&gt;/someservlet&lt;/code&gt; o &lt;code&gt;/someservlet/*&lt;/code&gt; como se muestra a continuaci&amp;oacute;n (obviamente, el patr&amp;oacute;n de URL es libre de su elecci&amp;oacute;n, pero deber&amp;aacute; modificar la URL de &lt;code&gt;someservlet&lt;/code&gt; en ejemplos de c&amp;oacute;digo JS en todos los lugares en consecuencia):</target>
        </trans-unit>
        <trans-unit id="c56e5df70c3ac3a6c3973476fdf82139c44069da" translate="yes" xml:space="preserve">
          <source>Normally you cant update a page from a servlet. Client (browser) has to request an update. Eiter client loads a whole new page or it requests an update to a part of an existing page. This technique is called Ajax.</source>
          <target state="translated">Normalmente no se puede actualizar una página de un servlet.El cliente (navegador)tiene que solicitar una actualización.El cliente Eiter carga una página completamente nueva o solicita una actualización de una parte de una página existente.Esta técnica se llama Ajax.</target>
        </trans-unit>
        <trans-unit id="bd39a665cfc0865af33aa13bcfa362533cc6e53c" translate="yes" xml:space="preserve">
          <source>Note that this doesn't change the URL as enduser sees in browser's address bar. So there are issues with bookmarkability. Therefore, it's much better to just return an &quot;instruction&quot; for JavaScript/jQuery to perform a redirect instead of returning the whole content of the redirected page. E.g. by returning a boolean, or an URL.</source>
          <target state="translated">Ten en cuenta que esto no cambia la URL que el usuario final ve en la barra de direcciones del navegador.Por lo tanto,hay problemas con la capacidad de marcar.Por lo tanto,es mucho mejor devolver una &quot;instrucción&quot; para que JavaScriptjQuery realice una redirección en lugar de devolver todo el contenido de la página redirigida.Por ejemplo,devolviendo un booleano,o una URL.</target>
        </trans-unit>
        <trans-unit id="22feb91f5c22ed94258e3f081aa26bfc5c037905" translate="yes" xml:space="preserve">
          <source>Now open the &lt;a href=&quot;http://localhost:8080/context/test.jsp&quot;&gt;http://localhost:8080/context/test.jsp&lt;/a&gt; in the browser and press the button. You'll see that the content of the div get updated with the servlet response.</source>
          <target state="translated">Ahora abra el &lt;a href=&quot;http://localhost:8080/context/test.jsp&quot;&gt;http: // localhost: 8080 / context / test.jsp&lt;/a&gt; en el navegador y presione el bot&amp;oacute;n. Ver&amp;aacute; que el contenido del div se actualiza con la respuesta del servlet.</target>
        </trans-unit>
        <trans-unit id="cfd2f0fb386862ba0d1aa2adf79265c37a9d89c7" translate="yes" xml:space="preserve">
          <source>Or, when you're not on a Servlet 3.0 compatible container yet (Tomcat 7, Glassfish 3, JBoss AS 6, etc or newer), then map it in &lt;code&gt;web.xml&lt;/code&gt; the old fashioned way (see also &lt;a href=&quot;https://stackoverflow.com/tags/servlets/info&quot;&gt;our Servlets wiki page&lt;/a&gt;):</source>
          <target state="translated">O bien, cuando a&amp;uacute;n no se encuentra en un contenedor compatible con Servlet 3.0 (Tomcat 7, Glassfish 3, JBoss AS 6, etc. o m&amp;aacute;s reciente), luego &lt;code&gt;web.xml&lt;/code&gt; en web.xml a la antigua usanza (consulte tambi&amp;eacute;n &lt;a href=&quot;https://stackoverflow.com/tags/servlets/info&quot;&gt;nuestra p&amp;aacute;gina wiki de Servlets&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="26171874502aeafcb87d300f5bedd28651eb82f6" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;List&amp;lt;Entity&amp;gt;&lt;/code&gt; as JSON</source>
          <target state="translated">&lt;code&gt;List&amp;lt;Entity&amp;gt;&lt;/code&gt; como JSON</target>
        </trans-unit>
        <trans-unit id="5f03764f3bd2c86ee26d6b433ce4069420e16f5b" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;List&amp;lt;Entity&amp;gt;&lt;/code&gt; as XML</source>
          <target state="translated">&lt;code&gt;List&amp;lt;Entity&amp;gt;&lt;/code&gt; como XML</target>
        </trans-unit>
        <trans-unit id="3688b821c329699e6f9a80ff22369c56a5beac00" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; as JSON</source>
          <target state="translated">&lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; retorno &amp;lt;String&amp;gt; como JSON</target>
        </trans-unit>
        <trans-unit id="679fcf8af507bcac5a23e4ab406f76e65e4b3b8d" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;Map&amp;lt;String, String&amp;gt;&lt;/code&gt; as JSON</source>
          <target state="translated">Regresando &lt;code&gt;Map&amp;lt;String, String&amp;gt;&lt;/code&gt; como JSON</target>
        </trans-unit>
        <trans-unit id="371a87eafb4de078ff674d69a5a89c186532eb49" translate="yes" xml:space="preserve">
          <source>See also:</source>
          <target state="translated">Ver también:</target>
        </trans-unit>
        <trans-unit id="1a93f0fc4e88ee9727bc2cea774ad68b33c0e53b" translate="yes" xml:space="preserve">
          <source>Sending a redirect from servlet</source>
          <target state="translated">Enviando una redirección desde el servlet</target>
        </trans-unit>
        <trans-unit id="acb0ba47f04915e496a795c1972528f72461d66f" translate="yes" xml:space="preserve">
          <source>Servlet to read data send back to jsp in xml format ( You could use text as well. Just you need to change response content to text and render data on javascript function.)</source>
          <target state="translated">Servilleta para leer los datos enviados a jsp en formato xml(Podrías usar texto también.Sólo tienes que cambiar el contenido de la respuesta a texto y renderizar los datos en la función javascript).</target>
        </trans-unit>
        <trans-unit id="826f726c00ea26b16c7091f335fee7e5d8de8abb" translate="yes" xml:space="preserve">
          <source>Since it's pretty a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/AJAX/Getting_Started&quot;&gt;tedious&lt;/a&gt; work to make it to work across all browsers (especially Internet Explorer versus others), there are plenty of JavaScript libraries out which simplifies this in single functions and covers as many as possible browser-specific bugs/quirks under the hoods, such as &lt;a href=&quot;http://jquery.com&quot;&gt;jQuery&lt;/a&gt;, &lt;a href=&quot;http://www.prototypejs.org/&quot;&gt;Prototype&lt;/a&gt;, &lt;a href=&quot;http://mootools.net/&quot;&gt;Mootools&lt;/a&gt;. Since jQuery is most popular these days, I'll use it in the below examples.</source>
          <target state="translated">Dado que es un trabajo bastante &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/AJAX/Getting_Started&quot;&gt;tedioso&lt;/a&gt; hacer que funcione en todos los navegadores (especialmente Internet Explorer versus otros), hay muchas bibliotecas de JavaScript que simplifican esto en funciones individuales y cubre la mayor cantidad posible de errores / peculiaridades espec&amp;iacute;ficas del navegador. , como &lt;a href=&quot;http://jquery.com&quot;&gt;jQuery&lt;/a&gt; , &lt;a href=&quot;http://www.prototypejs.org/&quot;&gt;Prototype&lt;/a&gt; , &lt;a href=&quot;http://mootools.net/&quot;&gt;Mootools&lt;/a&gt; . Como jQuery es m&amp;aacute;s popular en estos d&amp;iacute;as, lo usar&amp;eacute; en los ejemplos a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="82ec09f975dd38e549357b84053114b13839f782" translate="yes" xml:space="preserve">
          <source>That code is typically javascript that is embedded in or linked from the HTML page, hence the AJAX suggestion.  (In fact, if we assume that the updated text comes from the server via an HTTP request, this is classic AJAX.)</source>
          <target state="translated">Ese código es típicamente javascript que está incrustado o enlazado en la página HTML,de ahí la sugerencia de AJAX.(De hecho,si asumimos que el texto actualizado viene del servidor a través de una petición HTTP,esto es AJAX clásico).</target>
        </trans-unit>
        <trans-unit id="c28f33370f7556ae09d69388971724ff1b8b65c1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://malsup.com/jquery/form/&quot;&gt;jQuery Form plugin&lt;/a&gt; does less or more the same as above jQuery example, but it has additional transparent support for &lt;code&gt;multipart/form-data&lt;/code&gt; forms as required by file uploads.</source>
          <target state="translated">El &lt;a href=&quot;http://malsup.com/jquery/form/&quot;&gt;complemento jQuery Form&lt;/a&gt; hace menos o m&amp;aacute;s lo mismo que el ejemplo anterior de jQuery, pero tiene soporte transparente adicional para &lt;code&gt;multipart/form-data&lt;/code&gt; formulario seg&amp;uacute;n lo requieren las cargas de archivos.</target>
        </trans-unit>
        <trans-unit id="13111950dc911470d158617cc00323a3fb10b09b" translate="yes" xml:space="preserve">
          <source>The JS code:</source>
          <target state="translated">El código JS:</target>
        </trans-unit>
        <trans-unit id="60f85f5144e41851339584a99a25400fd02624ab" translate="yes" xml:space="preserve">
          <source>The JSP code (note: if you put the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; in a &lt;code&gt;&amp;lt;jsp:include&amp;gt;&lt;/code&gt;, it may be reusable elsewhere in a non-ajax response):</source>
          <target state="translated">El c&amp;oacute;digo JSP (nota: si coloca &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; en un &lt;code&gt;&amp;lt;jsp:include&amp;gt;&lt;/code&gt; , puede ser reutilizable en otro lugar en una respuesta que no sea ajax):</target>
        </trans-unit>
        <trans-unit id="82bcb8bc50271a9fe41b3d0c7f74b3983ec746ae" translate="yes" xml:space="preserve">
          <source>The right way to update the page currently displayed in the user's browser (without reloading it) is to have some code executing in the browser update the page's DOM.</source>
          <target state="translated">La forma correcta de actualizar la página que se muestra actualmente en el navegador del usuario (sin recargarla)es hacer que algún código que se ejecute en el navegador actualice el DOM de la página.</target>
        </trans-unit>
        <trans-unit id="81f36ba7704aff0b7ff66243392e07ee62fa4339" translate="yes" xml:space="preserve">
          <source>The same &lt;code&gt;doPost()&lt;/code&gt; method as shown here above can be reused. Do note that above syntax also works with &lt;code&gt;$.get()&lt;/code&gt; in jQuery and &lt;code&gt;doGet()&lt;/code&gt; in servlet.</source>
          <target state="translated">Se puede reutilizar el mismo m&amp;eacute;todo &lt;code&gt;doPost()&lt;/code&gt; que se muestra aqu&amp;iacute; arriba. Tenga en cuenta que la sintaxis anterior tambi&amp;eacute;n funciona con &lt;code&gt;$.get()&lt;/code&gt; en jQuery y &lt;code&gt;doGet()&lt;/code&gt; en servlet.</target>
        </trans-unit>
        <trans-unit id="ec4192092629e132db0176d50836c910fcf6d4f8" translate="yes" xml:space="preserve">
          <source>Then, in order to process the JSON object in the servlet which isn't being sent as individual request parameters but as a whole JSON string the above way, you only need to manually parse the request body using a JSON tool instead of using &lt;code&gt;getParameter()&lt;/code&gt; the usual way. Namely, servlets don't support &lt;code&gt;application/json&lt;/code&gt; formatted requests, but only &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; or &lt;code&gt;multipart/form-data&lt;/code&gt; formatted requests. Gson also supports parsing a JSON string into a JSON object.</source>
          <target state="translated">Luego, para procesar el objeto JSON en el servlet que no se env&amp;iacute;a como par&amp;aacute;metros de solicitud individuales, sino como una cadena JSON completa de la manera anterior, solo necesita analizar manualmente el cuerpo de la solicitud usando una herramienta JSON en lugar de usar &lt;code&gt;getParameter()&lt;/code&gt; de la forma habitual. Es decir, los servlets no admiten &lt;code&gt;application/json&lt;/code&gt; formato de aplicaci&amp;oacute;n / json , sino solo solicitudes con formato &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; o &lt;code&gt;multipart/form-data&lt;/code&gt; . Gson tambi&amp;eacute;n admite el an&amp;aacute;lisis de una cadena JSON en un objeto JSON.</target>
        </trans-unit>
        <trans-unit id="89fd0d601f377a83a71d1cdde17c69e5d81a1961" translate="yes" xml:space="preserve">
          <source>Using bootstrap multi select</source>
          <target state="translated">Usando el bootstrap multi-selección</target>
        </trans-unit>
        <trans-unit id="2a9a8c670858d784d66a1602187d7c2c90e1a17b" translate="yes" xml:space="preserve">
          <source>Whenever I print something inside the servlet and call it by the webbrowser, it returns a new page containing that text. Is there a way to print the text in the current page using Ajax?</source>
          <target state="translated">Cada vez que imprimo algo dentro del servlet y lo llamo por el navegador,devuelve una nueva página que contiene ese texto.¿Hay alguna manera de imprimir el texto en la página actual usando Ajax?</target>
        </trans-unit>
        <trans-unit id="b2688f5607d6b932d92c51a110809c5f7b5681ba" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;http://www.hunlock.com/blogs/Mastering_JSON_%28_JavaScript_Object_Notation_%29&quot;&gt;JSON&lt;/a&gt; instead of plaintext as response format you can even get some steps further. It allows for more dynamics. First, you'd like to have a tool to convert between Java objects and JSON strings. There are plenty of them as well (see the bottom of &lt;a href=&quot;http://json.org/&quot;&gt;this page&lt;/a&gt; for an overview). My personal favourite is &lt;a href=&quot;http://code.google.com/p/google-gson/&quot;&gt;Google Gson&lt;/a&gt;. Download and put its JAR file in &lt;code&gt;/WEB-INF/lib&lt;/code&gt; folder of your webapplication.</source>
          <target state="translated">Con &lt;a href=&quot;http://www.hunlock.com/blogs/Mastering_JSON_%28_JavaScript_Object_Notation_%29&quot;&gt;JSON en&lt;/a&gt; lugar de texto sin formato como formato de respuesta, incluso puede avanzar algunos pasos m&amp;aacute;s. Permite m&amp;aacute;s din&amp;aacute;mica. Primero, le gustar&amp;iacute;a tener una herramienta para convertir entre objetos Java y cadenas JSON. Tambi&amp;eacute;n hay muchos de ellos (consulte la parte inferior de &lt;a href=&quot;http://json.org/&quot;&gt;esta p&amp;aacute;gina&lt;/a&gt; para obtener una descripci&amp;oacute;n general). Mi favorito personal es &lt;a href=&quot;http://code.google.com/p/google-gson/&quot;&gt;Google Gson&lt;/a&gt; . Descargue y coloque su archivo JAR en la carpeta &lt;code&gt;/WEB-INF/lib&lt;/code&gt; de su aplicaci&amp;oacute;n web.</target>
        </trans-unit>
        <trans-unit id="d09487967ad994c6f9ec09684e86a745ebd6f9e7" translate="yes" xml:space="preserve">
          <source>You can in the servlet distinguish between normal requests and ajax requests as below:</source>
          <target state="translated">En el servlet puedes distinguir entre peticiones normales y peticiones ajax como se indica a continuación:</target>
        </trans-unit>
        <trans-unit id="6488cbad5e8c23f7a9f7b7b89ab6dd45d6c58009" translate="yes" xml:space="preserve">
          <source>You can progressively enhance it with ajax as below:</source>
          <target state="translated">Puedes mejorarlo progresivamente con el ajax como se indica a continuación:</target>
        </trans-unit>
        <trans-unit id="b976f30c066f9d428daf94d5a76c8335226ccf0a" translate="yes" xml:space="preserve">
          <source>You can use jQuery &lt;a href=&quot;https://api.jquery.com/serialize/&quot;&gt;&lt;code&gt;$.serialize()&lt;/code&gt;&lt;/a&gt; to easily ajaxify existing POST forms without fiddling around with collecting and passing the individual form input parameters. Assuming an existing form which works perfectly fine without JavaScript/jQuery (and thus degrades gracefully when enduser has JavaScript disabled):</source>
          <target state="translated">Puede usar jQuery &lt;a href=&quot;https://api.jquery.com/serialize/&quot;&gt; &lt;code&gt;$.serialize()&lt;/code&gt; &lt;/a&gt; para ajaxificar f&amp;aacute;cilmente los formularios POST existentes sin perder el tiempo recogiendo y pasando los par&amp;aacute;metros de entrada del formulario individual. Asumiendo un formulario existente que funciona perfectamente bien sin JavaScript / jQuery (y as&amp;iacute; se degrada con gracia cuando el usuario final tiene JavaScript deshabilitado):</target>
        </trans-unit>
        <trans-unit id="ca21397eada293cac22191e78e91633a316e1244" translate="yes" xml:space="preserve">
          <source>You'll by now probably realize why XML is so much more powerful than JSON for the particular purpose of updating a HTML document using Ajax. JSON is funny, but after all generally only useful for so-called &quot;public web services&quot;. MVC frameworks like &lt;a href=&quot;https://stackoverflow.com/tags/jsf/info&quot;&gt;JSF&lt;/a&gt; use XML under the covers for their ajax magic.</source>
          <target state="translated">Probablemente ya se dar&amp;aacute; cuenta de por qu&amp;eacute; XML es mucho m&amp;aacute;s poderoso que JSON para el prop&amp;oacute;sito particular de actualizar un documento HTML usando Ajax. JSON es divertido, pero despu&amp;eacute;s de todo, generalmente solo es &amp;uacute;til para los llamados &quot;servicios web p&amp;uacute;blicos&quot;. Los marcos MVC como &lt;a href=&quot;https://stackoverflow.com/tags/jsf/info&quot;&gt;JSF&lt;/a&gt; usan XML bajo las cubiertas para su magia ajax.</target>
        </trans-unit>
        <trans-unit id="8fcd25a39d2037183044a8897e9a5333d727fded" translate="yes" xml:space="preserve">
          <source>with</source>
          <target state="translated">with</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
