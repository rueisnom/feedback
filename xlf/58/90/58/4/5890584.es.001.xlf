<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/5890584">
    <body>
      <group id="5890584">
        <trans-unit id="f2b66a421a0655a184b6c33aee83557ebbe684e9" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;https://cran.r-project.org/web/packages/data.table/vignettes/datatable-reshape.html&quot;&gt;Reference: Efficient reshaping using data.tables&lt;/a&gt;)</source>
          <target state="translated">( &lt;a href=&quot;https://cran.r-project.org/web/packages/data.table/vignettes/datatable-reshape.html&quot;&gt;Referencia: remodelaci&amp;oacute;n eficiente usando data.tables&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="b423d301648942b4bc78aa000ffd20a2cb941079" translate="yes" xml:space="preserve">
          <source>-&amp;gt; created another column for showing the functionality</source>
          <target state="translated">-&amp;gt; cre&amp;oacute; otra columna para mostrar la funcionalidad</target>
        </trans-unit>
        <trans-unit id="8c93e36a63740a396b58f1cd3bd7092e779a3c01" translate="yes" xml:space="preserve">
          <source>-single column long -&amp;gt; wide</source>
          <target state="translated">-una columna larga -&amp;gt; ancha</target>
        </trans-unit>
        <trans-unit id="3e02b6a3faf5bc2e9319e23e96e7bf00c9aec131" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;direction&lt;/code&gt; specifies wide or long format</source>
          <target state="translated">&lt;code&gt;direction&lt;/code&gt; especifica formato ancho o largo</target>
        </trans-unit>
        <trans-unit id="5d209b595770146d619b3879e4cefed470a176dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;idvar&lt;/code&gt; is the column of classes that separates rows</source>
          <target state="translated">&lt;code&gt;idvar&lt;/code&gt; es la columna de clases que separa filas</target>
        </trans-unit>
        <trans-unit id="dbf2606d2abb216ebd3bf8194a72b13e5427c552" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sqldf&lt;/code&gt; package:</source>
          <target state="translated">paquete &lt;code&gt;sqldf&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b732c0054669b0f3697aff02c007f66aac2d1419" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tidyr&lt;/code&gt; is a reframing of &lt;code&gt;reshape2&lt;/code&gt; designed to accompany the tidy data framework, and to work hand-in-hand with &lt;code&gt;magrittr&lt;/code&gt; and &lt;code&gt;dplyr&lt;/code&gt; to build a solid pipeline for data analysis.</source>
          <target state="translated">&lt;code&gt;tidyr&lt;/code&gt; es un nuevo &lt;code&gt;reshape2&lt;/code&gt; de reshape2 dise&amp;ntilde;ado para acompa&amp;ntilde;ar el marco de datos ordenado, y para trabajar de la mano con &lt;code&gt;magrittr&lt;/code&gt; y &lt;code&gt;dplyr&lt;/code&gt; para construir una tuber&amp;iacute;a s&amp;oacute;lida para el an&amp;aacute;lisis de datos.</target>
        </trans-unit>
        <trans-unit id="59f92604e7a9721fb8b4f780700116cc104a8d00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timevar&lt;/code&gt; is the column of classes to cast wide</source>
          <target state="translated">&lt;code&gt;timevar&lt;/code&gt; es la columna de clases para emitir</target>
        </trans-unit>
        <trans-unit id="363785327e5d76185fca735eb93a3c3a46c80eca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v.names&lt;/code&gt; is the column containing numeric values</source>
          <target state="translated">&lt;code&gt;v.names&lt;/code&gt; es la columna que contiene valores num&amp;eacute;ricos</target>
        </trans-unit>
        <trans-unit id="8b48c85794bfb5c7ca45d586626d1f8ce4e83548" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit:&lt;/strong&gt; Now, in 2019, tidyr v 1.0 has launched and set &lt;code&gt;spread&lt;/code&gt; and &lt;code&gt;gather&lt;/code&gt; on a deprecation path, preferring instead &lt;code&gt;pivot_wider&lt;/code&gt; and &lt;code&gt;pivot_longer&lt;/code&gt;, which you can find described &lt;a href=&quot;https://stackoverflow.com/a/57013551/903061&quot;&gt;in this answer&lt;/a&gt;. Read on if you want a brief glimpse into the brief life of &lt;code&gt;spread/gather&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Editar:&lt;/strong&gt; ahora, en 2019, tidyr v 1.0 se lanz&amp;oacute; y estableci&amp;oacute; la &lt;code&gt;spread&lt;/code&gt; y la &lt;code&gt;gather&lt;/code&gt; en una ruta de &lt;code&gt;pivot_wider&lt;/code&gt; , prefiriendo en su lugar pivot_wider y &lt;code&gt;pivot_longer&lt;/code&gt; , que puede encontrar descrito &lt;a href=&quot;https://stackoverflow.com/a/57013551/903061&quot;&gt;en esta respuesta&lt;/a&gt; . Siga leyendo si desea un breve vistazo a la breve vida de &lt;code&gt;spread/gather&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55cc92d6fbd3bc4d924c769f7115a4e5bd8a7f7c" translate="yes" xml:space="preserve">
          <source>And, as of data.table v1.9.6 we can cast on multiple columns</source>
          <target state="translated">Y,a partir de la data.table v1.9.6 podemos proyectar en múltiples columnas</target>
        </trans-unit>
        <trans-unit id="c8f052b9cda47e8ce74251c074f38bcfe2a7a09f" translate="yes" xml:space="preserve">
          <source>Another option if performance is a concern is to use &lt;code&gt;data.table&lt;/code&gt;'s extension of &lt;code&gt;reshape2&lt;/code&gt;'s melt &amp;amp; dcast functions</source>
          <target state="translated">Otra opci&amp;oacute;n si el rendimiento es una preocupaci&amp;oacute;n es usar la extensi&amp;oacute;n de &lt;code&gt;reshape2&lt;/code&gt; de las funciones melt &amp;amp; dcast de reshape2</target>
        </trans-unit>
        <trans-unit id="32adc54da7e1dd098f05014024de61a9f88fbe05" translate="yes" xml:space="preserve">
          <source>Base package:</source>
          <target state="translated">Paquete base:</target>
        </trans-unit>
        <trans-unit id="1f8d5da96d5ee502ef384d47dcdae51782a2e3c8" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://github.com/hadley/tidyr&quot;&gt;github&lt;/a&gt;,</source>
          <target state="translated">De &lt;a href=&quot;https://github.com/hadley/tidyr&quot;&gt;github&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="77c7c7ba946bfbd9be7a9ee608e586028b25bf2f" translate="yes" xml:space="preserve">
          <source>How to reshape data from long to wide format</source>
          <target state="translated">Cómo dar nueva forma a los datos de formato largo a formato ancho</target>
        </trans-unit>
        <trans-unit id="95feb5be7cb2c1d8edbf0be2fd2f15bb3e5c1c78" translate="yes" xml:space="preserve">
          <source>I want to reshape it so that each unique &quot;name&quot; variable is a rowname, with the &quot;values&quot; as observations along that row and the &quot;numbers&quot; as colnames. Sort of like this:</source>
          <target state="translated">Quiero remodelarla de manera que cada variable de &quot;nombre&quot; única sea un nombre de fila,con los &quot;valores&quot; como observaciones a lo largo de esa fila y los &quot;números&quot; como nombres de coloquios.Algo así:</target>
        </trans-unit>
        <trans-unit id="d9a3ccd40ef3877efe8a1b2cb4d6f770e62e7c0e" translate="yes" xml:space="preserve">
          <source>I'm having trouble rearranging the following data frame:</source>
          <target state="translated">Tengo problemas para reorganizar el siguiente cuadro de datos:</target>
        </trans-unit>
        <trans-unit id="1fd30b3bce62814bd717849f08ded001356603d4" translate="yes" xml:space="preserve">
          <source>I've looked at &lt;code&gt;melt&lt;/code&gt; and &lt;code&gt;cast&lt;/code&gt; and a few other things, but none seem to do the job.</source>
          <target state="translated">He analizado &lt;code&gt;melt&lt;/code&gt; y &lt;code&gt;cast&lt;/code&gt; y algunas otras cosas, pero ninguna parece hacer el trabajo.</target>
        </trans-unit>
        <trans-unit id="67d8bbe85b74ca1fe2c44834d30774330a464d0b" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;idvar&lt;/code&gt; exists, create one before using the &lt;code&gt;reshape()&lt;/code&gt; function:</source>
          <target state="translated">Si no existe &lt;code&gt;idvar&lt;/code&gt; , cree uno antes de usar la funci&amp;oacute;n &lt;code&gt;reshape()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="22f98d9b19a256e05bc0cd6a1bb6e03c69bca481" translate="yes" xml:space="preserve">
          <source>It is easy to write many different operations in terms of the
  cdata primitives. These operators can work-in memory or at big data
  scale (with databases and Apache Spark; for big data use the
  cdata::moveValuesToRowsN() and cdata::moveValuesToColumnsN()
  variants). The transforms are controlled by a control table that
  itself is a diagram of (or picture of) the transform.</source>
          <target state="translated">Es fácil escribir muchas operaciones diferentes en términos de los primitivos cdatos.Estos operadores pueden trabajar en memoria o a gran escala de datos (con bases de datos y Apache Spark;para grandes datos utilice las variantes cdata::moveValuesToRowsN()y cdata::moveValuesToColumnsN()).Las transformaciones son controladas por una tabla de control que a su vez es un diagrama de (o imagen de)la transformación.</target>
        </trans-unit>
        <trans-unit id="144e741b4c39fd81ed7915072c22a68ebeaf8e92" translate="yes" xml:space="preserve">
          <source>Just as &lt;code&gt;reshape2&lt;/code&gt; did less than reshape, &lt;code&gt;tidyr&lt;/code&gt; does less than &lt;code&gt;reshape2&lt;/code&gt;. It's designed specifically for tidying data, not the general reshaping that &lt;code&gt;reshape2&lt;/code&gt; does, or the general aggregation that reshape did. In particular, built-in methods only work for data frames, and &lt;code&gt;tidyr&lt;/code&gt; provides no margins or aggregation.</source>
          <target state="translated">As&amp;iacute; como &lt;code&gt;reshape2&lt;/code&gt; hizo menos que &lt;code&gt;tidyr&lt;/code&gt; , tidyr hace menos que &lt;code&gt;reshape2&lt;/code&gt; . Est&amp;aacute; dise&amp;ntilde;ado espec&amp;iacute;ficamente para ordenar los datos, no la remodelaci&amp;oacute;n general que &lt;code&gt;reshape2&lt;/code&gt; hace, o la agregaci&amp;oacute;n general que hizo la remodelaci&amp;oacute;n. En particular, los m&amp;eacute;todos integrados solo funcionan para marcos de datos, y &lt;code&gt;tidyr&lt;/code&gt; no proporciona m&amp;aacute;rgenes ni agregaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3c330efc8ae2749590fbcb23486dd883c59d7bc4" translate="yes" xml:space="preserve">
          <source>Just remember that &lt;code&gt;idvar&lt;/code&gt; is required! The &lt;code&gt;timevar&lt;/code&gt; and &lt;code&gt;v.names&lt;/code&gt; part is easy. The output of this function is more predictable than some of the others, as everything is explicitly defined.</source>
          <target state="translated">&amp;iexcl;Solo recuerda que se requiere &lt;code&gt;idvar&lt;/code&gt; ! La parte de &lt;code&gt;timevar&lt;/code&gt; y &lt;code&gt;v.names&lt;/code&gt; es f&amp;aacute;cil. La salida de esta funci&amp;oacute;n es m&amp;aacute;s predecible que algunas de las otras, ya que todo est&amp;aacute; expl&amp;iacute;citamente definido.</target>
        </trans-unit>
        <trans-unit id="7b370008864784686060818eff43542ed6216d81" translate="yes" xml:space="preserve">
          <source>Or using &lt;code&gt;reshape2&lt;/code&gt;</source>
          <target state="translated">O usando &lt;code&gt;reshape2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef57e5ac4f5671078f6faf0de903013d96b5fb3f" translate="yes" xml:space="preserve">
          <source>Other two options:</source>
          <target state="translated">Otras dos opciones:</target>
        </trans-unit>
        <trans-unit id="7c776aa89da2f0d5f86aeab3955679d17f1de770" translate="yes" xml:space="preserve">
          <source>The base &lt;code&gt;reshape&lt;/code&gt; function works perfectly fine:</source>
          <target state="translated">La funci&amp;oacute;n de &lt;code&gt;reshape&lt;/code&gt; base funciona perfectamente bien:</target>
        </trans-unit>
        <trans-unit id="0ed9a8ad112ec9c8e0b3a0bfa9fd2e6a613cf44a" translate="yes" xml:space="preserve">
          <source>The new (in 2014) &lt;code&gt;tidyr&lt;/code&gt; package also does this simply, with &lt;code&gt;gather()&lt;/code&gt;/&lt;code&gt;spread()&lt;/code&gt; being the terms for &lt;code&gt;melt&lt;/code&gt;/&lt;code&gt;cast&lt;/code&gt;.</source>
          <target state="translated">El nuevo paquete &lt;code&gt;tidyr&lt;/code&gt; (en 2014) tambi&amp;eacute;n lo hace de manera simple, y los t&amp;eacute;rminos de &lt;code&gt;melt&lt;/code&gt; / &lt;code&gt;cast&lt;/code&gt; &lt;code&gt;gather()&lt;/code&gt; / &lt;code&gt;spread()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d83d3182426e986c1d29038fb322bbd38cd8bfb2" translate="yes" xml:space="preserve">
          <source>The whole system is based on two primitives or operators
  cdata::moveValuesToRowsD() and cdata::moveValuesToColumnsD(). These
  operators have pivot, un-pivot, one-hot encode, transpose, moving
  multiple rows and columns, and many other transforms as simple special
  cases.</source>
          <target state="translated">Todo el sistema se basa en dos primitivas u operadores cdata::moveValuesToRowsD()y cdata::moveValuesToColumnsD().Estos operadores tienen pivotar,despivotar,codificar en un solo punto,transponer,mover múltiples filas y columnas,y muchas otras transformaciones como simples casos especiales.</target>
        </trans-unit>
        <trans-unit id="8bf9bf881f1ad32b3180f6ade4bfb0d25ba9e77b" translate="yes" xml:space="preserve">
          <source>There's very powerful new package from genius data scientists at Win-Vector (folks that made &lt;code&gt;vtreat&lt;/code&gt;, &lt;code&gt;seplyr&lt;/code&gt; and &lt;code&gt;replyr&lt;/code&gt;) called &lt;code&gt;cdata&lt;/code&gt;. It implements &quot;coordinated data&quot; principles described in &lt;a href=&quot;https://github.com/WinVector/cdata/blob/master/extras/RowsAndColumns.md&quot;&gt;this document&lt;/a&gt; and also in this &lt;a href=&quot;http://www.win-vector.com/blog/2017/03/coordinatized-data-a-fluid-data-specification/&quot;&gt;blog post&lt;/a&gt;. The idea is that regardless how you organize your data, it should be possible to identify individual data points using a system of &quot;data coordinates&quot;. Here's a excerpt from the recent blog post by John Mount:</source>
          <target state="translated">Hay un nuevo paquete muy poderoso de genios cient&amp;iacute;ficos de datos en Win-Vector (personas que hicieron &lt;code&gt;vtreat&lt;/code&gt; , &lt;code&gt;seplyr&lt;/code&gt; y &lt;code&gt;replyr&lt;/code&gt; ) llamado &lt;code&gt;cdata&lt;/code&gt; . Implementa los principios de &quot;datos coordinados&quot; descritos en &lt;a href=&quot;https://github.com/WinVector/cdata/blob/master/extras/RowsAndColumns.md&quot;&gt;este documento&lt;/a&gt; y tambi&amp;eacute;n en esta &lt;a href=&quot;http://www.win-vector.com/blog/2017/03/coordinatized-data-a-fluid-data-specification/&quot;&gt;publicaci&amp;oacute;n de blog&lt;/a&gt; . La idea es que, independientemente de c&amp;oacute;mo organice sus datos, deber&amp;iacute;a ser posible identificar puntos de datos individuales utilizando un sistema de &quot;coordenadas de datos&quot;. Aqu&amp;iacute; hay un extracto de la reciente publicaci&amp;oacute;n de blog de John Mount:</target>
        </trans-unit>
        <trans-unit id="15ae6a8db4ce297ef06455be3cfe1f8dfaaeef58" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;reshape&lt;/code&gt; function:</source>
          <target state="translated">Usando la funci&amp;oacute;n de &lt;code&gt;reshape&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="716e5f0424b51cc0958fe5b0a70776fe077e97d1" translate="yes" xml:space="preserve">
          <source>Using base R &lt;code&gt;aggregate&lt;/code&gt; function:</source>
          <target state="translated">Usando &lt;code&gt;aggregate&lt;/code&gt; funci&amp;oacute;n agregada base R:</target>
        </trans-unit>
        <trans-unit id="db2d34eff67a4da9f9fedec623a7b05fafe765ba" translate="yes" xml:space="preserve">
          <source>Using your example dataframe, we could:</source>
          <target state="translated">Usando tu marco de datos de ejemplo,podríamos:</target>
        </trans-unit>
        <trans-unit id="a164e0f73cee51e074bfd5170f1b3ad81650de93" translate="yes" xml:space="preserve">
          <source>We will first build the control table (see &lt;a href=&quot;http://www.win-vector.com/blog/2017/03/coordinatized-data-a-fluid-data-specification/&quot;&gt;blog post&lt;/a&gt; for details) and then perform the move of data from rows to columns.</source>
          <target state="translated">Primero construiremos la tabla de control (vea la &lt;a href=&quot;http://www.win-vector.com/blog/2017/03/coordinatized-data-a-fluid-data-specification/&quot;&gt;publicaci&amp;oacute;n del blog&lt;/a&gt; para m&amp;aacute;s detalles) y luego realizaremos el movimiento de datos de filas a columnas.</target>
        </trans-unit>
        <trans-unit id="525f61b6729229b1a8854a9e50bcaa52ea96b131" translate="yes" xml:space="preserve">
          <source>Where</source>
          <target state="translated">Where</target>
        </trans-unit>
        <trans-unit id="efb2d954501863c2a58fba735f23397d425284ec" translate="yes" xml:space="preserve">
          <source>With the devel version of &lt;code&gt;tidyr&lt;/code&gt;&lt;code&gt;&amp;lsquo;0.8.3.9000&amp;rsquo;&lt;/code&gt;, there is &lt;code&gt;pivot_wider&lt;/code&gt; and &lt;code&gt;pivot_longer&lt;/code&gt; which is generalized to do the reshaping (long -&amp;gt; wide, wide -&amp;gt; long, respectively) from 1 to multiple columns.  Using the OP's data</source>
          <target state="translated">Con la versi&amp;oacute;n de desarrollo de &lt;code&gt;tidyr&lt;/code&gt; &lt;code&gt;&amp;lsquo;0.8.3.9000&amp;rsquo;&lt;/code&gt; , hay &lt;code&gt;pivot_wider&lt;/code&gt; y &lt;code&gt;pivot_longer&lt;/code&gt; que se generaliza para hacer la remodelaci&amp;oacute;n (largo -&amp;gt; ancho, ancho -&amp;gt; largo, respectivamente) de 1 a varias columnas. Usando los datos del OP</target>
        </trans-unit>
        <trans-unit id="2a1d1e5bd82d0fd7df26169b22ad20aff853baeb" translate="yes" xml:space="preserve">
          <source>You can do this with the &lt;code&gt;reshape()&lt;/code&gt; function, or with the &lt;code&gt;melt()&lt;/code&gt; / &lt;code&gt;cast()&lt;/code&gt; functions in the reshape package. For the second option, example code is</source>
          <target state="translated">Puede hacer esto con la funci&amp;oacute;n &lt;code&gt;reshape()&lt;/code&gt; , o con las funciones &lt;code&gt;melt()&lt;/code&gt; / &lt;code&gt;cast()&lt;/code&gt; en el paquete reshape. Para la segunda opci&amp;oacute;n, el c&amp;oacute;digo de ejemplo es</target>
        </trans-unit>
        <trans-unit id="446e1da4bffc55b3260320c1b4dbeec48a8a7ccc" translate="yes" xml:space="preserve">
          <source>if you want to go back from wide to long, only change Wide to Long, and no changes in objects.</source>
          <target state="translated">si quieres volver de ancho a largo,sólo cambia de ancho a largo,y no hay cambios en los objetos.</target>
        </trans-unit>
        <trans-unit id="5f5de958335b3f6a5d3ec3e7658e6a483d9d104f" translate="yes" xml:space="preserve">
          <source>much easier way!</source>
          <target state="translated">mucho más fácil!</target>
        </trans-unit>
        <trans-unit id="8c29c224a25b16cff35e5ec4cbce49639805ad8c" translate="yes" xml:space="preserve">
          <source>the optional &lt;code&gt;sep&lt;/code&gt; argument is the separator used in between &lt;code&gt;timevar&lt;/code&gt; class names and &lt;code&gt;v.names&lt;/code&gt; in the output &lt;code&gt;data.frame&lt;/code&gt;.</source>
          <target state="translated">el argumento opcional &lt;code&gt;sep&lt;/code&gt; es el separador utilizado entre los nombres de clase &lt;code&gt;v.names&lt;/code&gt; y v.names en el &lt;code&gt;data.frame&lt;/code&gt; de salida.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
