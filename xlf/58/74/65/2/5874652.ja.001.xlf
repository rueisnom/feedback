<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/5874652">
    <body>
      <group id="5874652">
        <trans-unit id="27529faa78292723e12b78be76fee503817055c8" translate="yes" xml:space="preserve">
          <source>(Those values are as per most browsers; there's some variation.)</source>
          <target state="translated">(これらの値はほとんどのブラウザの値です。)</target>
        </trans-unit>
        <trans-unit id="d8c77869324090892a374b5da6ebc646584c7b54" translate="yes" xml:space="preserve">
          <source>(see also this fiddle: &lt;a href=&quot;http://jsfiddle.net/maniator/JpUF2/&quot;&gt;http://jsfiddle.net/maniator/JpUF2/&lt;/a&gt;)</source>
          <target state="translated">（このフィドルも参照してください： &lt;a href=&quot;http://jsfiddle.net/maniator/JpUF2/&quot;&gt;http&lt;/a&gt; : //jsfiddle.net/maniator/JpUF2/ ）</target>
        </trans-unit>
        <trans-unit id="f3a041313dd0074c8b22542364412d49ef5c1f63" translate="yes" xml:space="preserve">
          <source>* Note: jQuery for this reason has a &lt;code&gt;.val()&lt;/code&gt; method, which internally is equivalent to &lt;code&gt;.prop('value')&lt;/code&gt;</source>
          <target state="translated">*注：このため、jQueryには &lt;code&gt;.val()&lt;/code&gt; メソッドがあり、内部的には &lt;code&gt;.prop('value')&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="5978c1f4d78b134b3860ed16caa00ee14043471b" translate="yes" xml:space="preserve">
          <source>-Matt</source>
          <target state="translated">-Matt</target>
        </trans-unit>
        <trans-unit id="639b0350d8fe68352621beffe0f71f20d92bd890" translate="yes" xml:space="preserve">
          <source>.prop() vs .attr()</source>
          <target state="translated">.prop()対 .attr()</target>
        </trans-unit>
        <trans-unit id="a6c26f812988b63a3b56823a4833ba71182fd7bc" translate="yes" xml:space="preserve">
          <source>1) A property is in the DOM; an attribute is in the HTML that is
  parsed into the DOM.</source>
          <target state="translated">1)プロパティは DOM にあり、属性は DOM に解析された HTML にあります。</target>
        </trans-unit>
        <trans-unit id="d642c4ff8fc5f9f2f75efc4e660f382ca01208e8" translate="yes" xml:space="preserve">
          <source>2) $( elem ).attr( &quot;checked&quot; ) (1.6.1+)   &quot;checked&quot; (String) Will
  change with checkbox state</source>
          <target state="translated">2)$(elem ).attr(&quot;checked&quot;)(1.6.1+)&quot;checked&quot; (文字列)チェックボックスの状態で変化します。</target>
        </trans-unit>
        <trans-unit id="e032753c186fbf9039b1425b47ce6ea91f82c55f" translate="yes" xml:space="preserve">
          <source>3) $( elem ).attr( &quot;checked&quot; ) (pre-1.6)    true (Boolean) Changed
  with checkbox state</source>
          <target state="translated">3)$(elem ).attr(&quot;checked&quot;)(pre-1.6)true (Boolean)チェックボックスの状態で変更しました。</target>
        </trans-unit>
        <trans-unit id="b5ee780d8b6ad6df92f5bfbf694f36bd3c458ad0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-Core/&quot;&gt;DOM2 Core&lt;/a&gt;&lt;em&gt;(obsolete)&lt;/em&gt;</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-Core/&quot;&gt;DOM2 Core&lt;/a&gt; &lt;em&gt;（廃止）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="18fed9354f21dfd209eceae38ae2fa91b88fa74f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-HTML/&quot;&gt;DOM2 HTML&lt;/a&gt;&lt;em&gt;(largely obsolete, see the &lt;a href=&quot;https://www.w3.org/TR/html5/&quot;&gt;HTML spec&lt;/a&gt; instead)&lt;/em&gt;</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-HTML/&quot;&gt;DOM2 HTML&lt;/a&gt; &lt;em&gt;（廃止されました。代わりに&lt;a href=&quot;https://www.w3.org/TR/html5/&quot;&gt;HTML仕様を&lt;/a&gt;参照してください）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b1ece7bdc9fb31335c49770dfb599570f0fd6959" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-3-Core/&quot;&gt;DOM3 Core&lt;/a&gt;&lt;em&gt;(obsolete)&lt;/em&gt;</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-3-Core/&quot;&gt;DOM3 Core&lt;/a&gt; &lt;em&gt;（廃止）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="00820f5311809bd60ce86dcf4bb9dac7057f9bc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://jsfiddle.net/51xosq29/&quot;&gt;&lt;code&gt;input[name]&lt;/code&gt;&lt;/a&gt;  (thanks &lt;a href=&quot;https://stackoverflow.com/questions/5874652/prop-vs-attr/5876747?noredirect=1#comment99696762_5876747&quot;&gt;@TimDown&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;https://jsfiddle.net/51xosq29/&quot;&gt; &lt;code&gt;input[name]&lt;/code&gt; &lt;/a&gt; （ &lt;a href=&quot;https://stackoverflow.com/questions/5874652/prop-vs-attr/5876747?noredirect=1#comment99696762_5876747&quot;&gt;@TimDownに&lt;/a&gt;感謝）</target>
        </trans-unit>
        <trans-unit id="be0e369f7e5632ce24e1fd64eb0f93083a0b7410" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://jsfiddle.net/BobStein/szto3d06/3/&quot;&gt;&lt;code&gt;input[data-custom-attribute]&lt;/code&gt;&lt;/a&gt; (neither will &lt;code&gt;.data('custom-attribute')&lt;/code&gt; affect this selector)</source>
          <target state="translated">&lt;a href=&quot;https://jsfiddle.net/BobStein/szto3d06/3/&quot;&gt; &lt;code&gt;input[data-custom-attribute]&lt;/code&gt; &lt;/a&gt; （. &lt;code&gt;.data('custom-attribute')&lt;/code&gt; はこのセレクターには影響しません）</target>
        </trans-unit>
        <trans-unit id="566dc6d5baa9764f8ec40fd76b9c411ebd6ce7cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.attr('style')&lt;/code&gt; -- returns inline styles for the matched element i.e. &lt;code&gt;&quot;font:arial;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.attr('style')&lt;/code&gt; -一致した要素のインラインスタイルを返します &lt;code&gt;&quot;font:arial;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb68c819c2024b91e163c39f3eca6f33c6ac3b18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.attr('value')&lt;/code&gt; -- returns &lt;code&gt;'hello'&lt;/code&gt; *</source>
          <target state="translated">&lt;code&gt;.attr('value')&lt;/code&gt; - &lt;code&gt;'hello'&lt;/code&gt; を返します*</target>
        </trans-unit>
        <trans-unit id="21c74ba2e7289909bc7ae9f640096b7e01c8cd0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.attr()&lt;/code&gt; affects all attribute-selectors</source>
          <target state="translated">&lt;code&gt;.attr()&lt;/code&gt; はすべての属性セレクターに影響します</target>
        </trans-unit>
        <trans-unit id="6b501c142b28d0f0b379b31357901efa1e026f44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.attr()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;.attr()&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="812390339d9c88829c4101c0d04803455dd7969e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.attr&lt;/code&gt; vs &lt;code&gt;.prop&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;.attr&lt;/code&gt; 対 &lt;code&gt;.prop&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e7613c8ed965d1b3a0f024b3b3c9c4883ac57738" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prop('style')&lt;/code&gt; -- returns an style declaration object i.e. &lt;code&gt;CSSStyleDeclaration&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.prop('style')&lt;/code&gt; -スタイル宣言オブジェクト、つまり &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="6933d8ccbef2a04e404a48ffafb3a2eb2f1a7aa2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prop('value')&lt;/code&gt; -- returns &lt;code&gt;'i changed the value'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.prop('value')&lt;/code&gt; - &lt;code&gt;'i changed the value'&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="b3059bf2fd9de7005d02214c5a609065c268d947" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prop()&lt;/code&gt; affects only a few attribute-selectors</source>
          <target state="translated">&lt;code&gt;.prop()&lt;/code&gt; は少数の属性セレクターにのみ影響します</target>
        </trans-unit>
        <trans-unit id="0cafd5be850ea5d2e6750ad07ea27305788174dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prop()&lt;/code&gt; can return any type - string, integer, boolean; while &lt;code&gt;.attr()&lt;/code&gt; always returns a string.</source>
          <target state="translated">&lt;code&gt;.prop()&lt;/code&gt; は、任意のタイプ（文字列、整数、ブール値）を返すことができます。 一方、 &lt;code&gt;.attr()&lt;/code&gt; は常に文字列を返します。</target>
        </trans-unit>
        <trans-unit id="738d5937696ac0bf4162d421fba6bb14cbebe284" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prop()&lt;/code&gt; is said to be about 2.5 times faster than &lt;code&gt;.attr()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.prop()&lt;/code&gt; は.attr（）よりも約2.5倍高速であると言われています。</target>
        </trans-unit>
        <trans-unit id="16c16404280b5f665f8a7b0455b6611a4362a6cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prop()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;.prop()&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="800496ebe0f03999ca65dee2a5884890c87b687e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attributes&lt;/code&gt; -&amp;gt; HTML</source>
          <target state="translated">&lt;code&gt;attributes&lt;/code&gt; -&amp;gt; HTML</target>
        </trans-unit>
        <trans-unit id="ab6c8f2b8cc052a878aa26e760c7ab6cd1c8ddbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jQuery.attr()&lt;/code&gt;
Get the value of an attribute for the first element in the set of matched elements.</source>
          <target state="translated">&lt;code&gt;jQuery.attr()&lt;/code&gt; 一致する要素のセットの最初の要素の属性の値を取得します。</target>
        </trans-unit>
        <trans-unit id="b15244b3e4fcfe6828da96a4971f9005b9201354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jQuery.prop()&lt;/code&gt;
Get the value of a property for the first element in the set of matched elements.</source>
          <target state="translated">&lt;code&gt;jQuery.prop()&lt;/code&gt; 一致する要素のセットの最初の要素のプロパティの値を取得します。</target>
        </trans-unit>
        <trans-unit id="0853e015e8d5b628ebdb2ba0cf40229aae20b46c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;properties&lt;/code&gt; -&amp;gt; DOM</source>
          <target state="translated">&lt;code&gt;properties&lt;/code&gt; -&amp;gt; DOM</target>
        </trans-unit>
        <trans-unit id="f95f321be5b63fb819b3df5cbafde5b9229c97ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;$('input').attr('blah')&lt;/code&gt;&lt;/strong&gt;: returns &lt;code&gt;'apple'&lt;/code&gt; eh? Why not &quot;pear&quot; as this was set last on that element. Because the property was changed on the input attribute, not the DOM input element itself -- they basically almost work independently of each other.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;$('input').attr('blah')&lt;/code&gt; &lt;/strong&gt; ： &lt;code&gt;'apple'&lt;/code&gt; を返します これがその要素に最後に設定されたので、なぜ「梨」ではありませんか。 プロパティは、DOM入力要素自体ではなく、入力属性で変更されたため、基本的に互いに独立して動作します。</target>
        </trans-unit>
        <trans-unit id="8ab9ec80782e4a60196917197d70a614bc39ce68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;$('input').attr('blah')&lt;/code&gt;&lt;/strong&gt;: returns &lt;code&gt;'hello'&lt;/code&gt; as expected. No suprises here.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;$('input').attr('blah')&lt;/code&gt; &lt;/strong&gt; ：期待どおり &lt;code&gt;'hello'&lt;/code&gt; を返します。 ここには驚きはありません。</target>
        </trans-unit>
        <trans-unit id="574269348a3552e05b5eeae1c4434783c9d94a28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;$('input').prop('blah')&lt;/code&gt;&lt;/strong&gt;: returns &lt;code&gt;'pear'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;$('input').prop('blah')&lt;/code&gt; &lt;/strong&gt; ： &lt;code&gt;'pear'&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="0e836d07931f373a649197b208d31fd2d78aaba9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;$('input').prop('blah')&lt;/code&gt;&lt;/strong&gt;: returns &lt;code&gt;undefined&lt;/code&gt; -- because it's trying to do &lt;code&gt;[HTMLInputElement].blah&lt;/code&gt; -- and no such property on that DOM object exists. It only exists in the scope as an attribute of that element i.e. &lt;code&gt;[HTMLInputElement].getAttribute('blah')&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;$('input').prop('blah')&lt;/code&gt; &lt;/strong&gt; ： &lt;code&gt;[HTMLInputElement].blah&lt;/code&gt; を実行しようとしているため、 &lt;code&gt;undefined&lt;/code&gt; を返しますが、そのDOMオブジェクトにそのようなプロパティは存在しません。 それはその要素の属性としてスコープにのみ存在します。つまり、 &lt;code&gt;[HTMLInputElement].getAttribute('blah')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d433fb2fcdb5f942cd245ff423f01d43c9283185" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Dirty checkedness&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;汚れたチェック&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8c1b2599a09f6f049ab73cb5993a0a53350859e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Don't mess up.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;失敗しないでください。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9bcef67850cc1ae25bb206c4581ec00fa383a09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Original answer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;元の答え&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="10b56c006d51020faaa60998e564b97a491898eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Purpose:&lt;/strong&gt;
Allows markup to have data associated with it for events, rendering, and other purposes.</source>
          <target state="translated">&lt;strong&gt;目的：&lt;/strong&gt;イベント、レンダリング、その他の目的で、マークアップにデータを関連付けることができます。</target>
        </trans-unit>
        <trans-unit id="bc5c519817a7114a9fe213be36e6e05e67010dce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Purpose:&lt;/strong&gt;
Gives access to properties that belong to element nodes. These properties are similar to attributes, but are only accessible through JavaScript. This is an important difference that helps clarify the role of DOM properties. &lt;strong&gt;Please note that attributes are completely different from properties&lt;/strong&gt;, as this event handler assignment is useless and won't receive the event (body doesn't have an onload event, only an onload attribute).</source>
          <target state="translated">&lt;strong&gt;目的：&lt;/strong&gt;要素ノードに属するプロパティへのアクセスを提供します。 これらのプロパティは属性に似ていますが、JavaScriptを介してのみアクセスできます。 これは、DOMプロパティの役割を明確にするのに役立つ重要な違いです。 このイベントハンドラーの割り当ては役に立たず、イベントを受信しないため、 &lt;strong&gt;属性はプロパティ&lt;/strong&gt;と&lt;strong&gt;は完全に異なることに注意してください&lt;/strong&gt; （ボディにはonloadイベントがなく、onload属性しかない）。</target>
        </trans-unit>
        <trans-unit id="70f5c76a3b222c7cb94ada1a8f4c7ecc94710921" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Rule of thumb is&lt;/strong&gt;: &lt;code&gt;.prop()&lt;/code&gt; method should be used for boolean attributes/properties and for properties which do not exist in html
  (such as window.location). All other attributes (ones you can see in
  the html) can and should continue to be manipulated with the &lt;code&gt;.attr()&lt;/code&gt;
  method. (&lt;a href=&quot;http://blog.jquery.com/2011/05/10/jquery-1-6-1-rc-1-released/&quot;&gt;http://blog.jquery.com/2011/05/10/jquery-1-6-1-rc-1-released/&lt;/a&gt;)</source>
          <target state="translated">&lt;strong&gt;経験則は&lt;/strong&gt;次の &lt;code&gt;.prop()&lt;/code&gt; です。.prop（）メソッドは、ブール型の属性/プロパティと、htmlに存在しないプロパティ（window.locationなど）に使用する必要があります。 他のすべての属性（htmlで確認できるもの）は、 &lt;code&gt;.attr()&lt;/code&gt; メソッドで引き続き操作できます。 （ &lt;a href=&quot;http://blog.jquery.com/2011/05/10/jquery-1-6-1-rc-1-released/&quot;&gt;http://blog.jquery.com/2011/05/10/jquery-1-6-1-rc-1-released/&lt;/a&gt; ）</target>
        </trans-unit>
        <trans-unit id="7d993eba3ceb090d6d6942b6a5ab74bb8dbc2fc7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See a fiddle demonstrating the difference:&lt;/strong&gt;&lt;a href=&quot;http://jsfiddle.net/garreh/uLQXc/&quot;&gt;http://jsfiddle.net/garreh/uLQXc/&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;違いを示すフィドルを参照してください：&lt;/strong&gt; &lt;a href=&quot;http://jsfiddle.net/garreh/uLQXc/&quot;&gt;http&lt;/a&gt; &lt;strong&gt;:&lt;/strong&gt; //jsfiddle.net/garreh/uLQXc/</target>
        </trans-unit>
        <trans-unit id="284c0cc1c16634ee278d62d9da4d70563394d278" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TL;DR&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;TL;DR&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a648cd0606cca5d79438d4f156e8c36af2fbb7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;UPDATE&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="73100dbc2d73aa3af91508e0cef8994abcc733ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update 1 November 2012&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;2012年11月1日更新&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f507894dd7bd93edc0b29a670c396862522c2487" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Visualization:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Visualization:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b3a0713561aad9f0c3d1af0a4b05363c9be1e08b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;attributes&lt;/strong&gt; are in your HTML &lt;em&gt;text document/file&lt;/em&gt; (== imagine this is the result of your html markup parsed), whereas</source>
          <target state="translated">&lt;strong&gt;属性&lt;/strong&gt;はHTML &lt;em&gt;テキストドキュメント/ファイルにあります&lt;/em&gt; （==これが解析されたhtmlマークアップの結果であると想像してください）。</target>
        </trans-unit>
        <trans-unit id="94a8362984a2085d00aaeb567b4f9fcbb8bff3cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;edit&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;edit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b172629d00ea5432a115d52722c5ec33f3334809" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;properties&lt;/strong&gt; are in HTML &lt;em&gt;DOM tree&lt;/em&gt; (== basically an actual property of some object in JS sense).</source>
          <target state="translated">&lt;strong&gt;プロパティ&lt;/strong&gt;はHTML &lt;em&gt;DOMツリーにあります&lt;/em&gt; （==基本的には、JSの意味でのいくつかのオブジェクトの実際のプロパティ）。</target>
        </trans-unit>
        <trans-unit id="e76d9ec4cc057c47cdaf896af3b06208e58b66b7" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;property&lt;/em&gt; is the current state of the input element. An &lt;em&gt;attribute&lt;/em&gt; is the default value.</source>
          <target state="translated">&lt;em&gt;プロパティ&lt;/em&gt;は、入力要素の現在の状態です。 &lt;em&gt;属性&lt;/em&gt;がデフォルト値です。</target>
        </trans-unit>
        <trans-unit id="2da03762e7d09e4991bcadc866dc8dba4dfaf6fe" translate="yes" xml:space="preserve">
          <source>A DOM element is an object, a thing in memory. Like most objects in OOP, it has &lt;em&gt;properties&lt;/em&gt;. It also, separately, has a map of the attributes defined on the element (usually coming from the markup that the browser read to create the element). Some of the element's &lt;em&gt;properties&lt;/em&gt; get their &lt;em&gt;initial&lt;/em&gt; values from &lt;em&gt;attributes&lt;/em&gt; with the same or similar names (&lt;code&gt;value&lt;/code&gt; gets its initial value from the &quot;value&quot; attribute; &lt;code&gt;href&lt;/code&gt; gets its initial value from the &quot;href&quot; attribute, but it's not exactly the same value; &lt;code&gt;className&lt;/code&gt; from the &quot;class&quot; attribute). Other properties get their initial values in other ways: For instance, the &lt;code&gt;parentNode&lt;/code&gt; property gets its value based on what its parent element is; an element always has a &lt;code&gt;style&lt;/code&gt; property, whether it has a &quot;style&quot; attribute or not.</source>
          <target state="translated">DOM要素はオブジェクトであり、メモリにあるものです。 OOPのほとんどのオブジェクトと同様に、オブジェクトには&lt;em&gt;プロパティ&lt;/em&gt;があり&lt;em&gt;ます&lt;/em&gt; 。 また、個別に、要素で定義された属性のマップを持っています（通常、ブラウザーが要素を作成するために読み取ったマークアップから取得されます）。 要素の&lt;em&gt;プロパティの&lt;/em&gt;一部は、同じまたは類似した名前の&lt;em&gt;属性&lt;/em&gt;から&lt;em&gt;初期&lt;/em&gt;値&lt;em&gt;を&lt;/em&gt;取得します（ &lt;code&gt;value&lt;/code&gt; は「value」属性から初期値を取得します &lt;code&gt;href&lt;/code&gt; は「href」属性から初期値を取得しますが、 完全に同じ値ではありません。 「class」属性の &lt;code&gt;className&lt;/code&gt; ）。 その他のプロパティは、他の方法で初期値を取得します。たとえば、 &lt;code&gt;parentNode&lt;/code&gt; プロパティは、親要素が何であるかに基づいてその値を取得します。 要素には、「style」属性の有無にかかわらず、常に &lt;code&gt;style&lt;/code&gt; プロパティがあります。</target>
        </trans-unit>
        <trans-unit id="5f5d32344daee4e4e25e443866211feb265f1f80" translate="yes" xml:space="preserve">
          <source>A property can contain things of different types. An attribute can only contain strings</source>
          <target state="translated">プロパティには、さまざまなタイプのものを含めることができます。属性は文字列のみを含むことができます。</target>
        </trans-unit>
        <trans-unit id="cf45643aa7d4e0df0d09f581ba6e1247119735f0" translate="yes" xml:space="preserve">
          <source>A property is in the DOM; an attribute is in the HTML that is parsed into the DOM.</source>
          <target state="translated">プロパティは DOM の中にあり、属性は DOM に解析される HTML の中にあります。</target>
        </trans-unit>
        <trans-unit id="c25569031ce570c9745dc93d4fabf1870a455026" translate="yes" xml:space="preserve">
          <source>All is in &lt;a href=&quot;https://api.jquery.com/prop/&quot;&gt;the doc&lt;/a&gt;:</source>
          <target state="translated">すべては&lt;a href=&quot;https://api.jquery.com/prop/&quot;&gt;ドキュメントにあり&lt;/a&gt;ます：</target>
        </trans-unit>
        <trans-unit id="09a5cd01145345650843d767f10361ae5437df2e" translate="yes" xml:space="preserve">
          <source>Also some of difference when accessing &lt;code&gt;checkbox&lt;/code&gt; value and &lt;code&gt;href&lt;/code&gt;
with &lt;code&gt;attr()&lt;/code&gt; and &lt;code&gt;prop()&lt;/code&gt; as thing change with DOM output with
&lt;code&gt;prop()&lt;/code&gt; as full link from &lt;code&gt;origin&lt;/code&gt; and &lt;code&gt;Boolean&lt;/code&gt; value for checkbox
&lt;code&gt;(pre-1.6)&lt;/code&gt;</source>
          <target state="translated">また、 &lt;code&gt;origin&lt;/code&gt; からの完全なリンクとしての &lt;code&gt;prop()&lt;/code&gt; による DOM出力とチェックボックスの &lt;code&gt;Boolean&lt;/code&gt; 値 &lt;code&gt;(pre-1.6)&lt;/code&gt; ）でのDOM出力の変更として、 &lt;code&gt;attr()&lt;/code&gt; と &lt;code&gt;prop()&lt;/code&gt; を使用して &lt;code&gt;checkbox&lt;/code&gt; 値と &lt;code&gt;href&lt;/code&gt; にアクセスするときの違いの一部</target>
        </trans-unit>
        <trans-unit id="bd97f97ddf8b59935214e336be58383c2177cbf1" translate="yes" xml:space="preserve">
          <source>And here is a table that shows where &lt;code&gt;.prop()&lt;/code&gt; is preferred (even though &lt;code&gt;.attr()&lt;/code&gt; can still be used).</source>
          <target state="translated">そして、ここに &lt;code&gt;.prop()&lt;/code&gt; が好ましい場所を示す表があります（ただし、 &lt;code&gt;.attr()&lt;/code&gt; は引き続き使用できます）。</target>
        </trans-unit>
        <trans-unit id="6445c56b5b17e9c7bfa24988eb6aee150e4fc92c" translate="yes" xml:space="preserve">
          <source>And if I &lt;em&gt;do&lt;/em&gt; have to switch to using &lt;code&gt;prop()&lt;/code&gt;, all the old &lt;code&gt;attr()&lt;/code&gt; calls will break if i switch to 1.6?</source>
          <target state="translated">そして、私&lt;em&gt;が&lt;/em&gt; &lt;code&gt;prop()&lt;/code&gt; の使用に切り替える&lt;em&gt;必要&lt;/em&gt;がある場合、1.6に切り替えると、すべての古い &lt;code&gt;attr()&lt;/code&gt; 呼び出しが壊れますか？</target>
        </trans-unit>
        <trans-unit id="a6a42570111c5d4aff3c6fcf4e73f990a9735bb1" translate="yes" xml:space="preserve">
          <source>As Tim said, the &lt;strong&gt;vast majority&lt;/strong&gt; of the time, we want to be working with properties. Partially that's because their values (even their names) tend to be more consistent across browsers. We mostly only want to work with attributes when there is no property related to it (custom attributes), or when we know that for that particular attribute, the attribute and the property are not 1:1 (as with &lt;code&gt;href&lt;/code&gt; and &quot;href&quot; above).</source>
          <target state="translated">Timが言ったように、 &lt;strong&gt;ほとんど&lt;/strong&gt;の場合、プロパティを操作したいと考えています。 部分的には、それらの値（名前も含む）がブラウザー間でより一貫している傾向があるためです。 関連するプロパティがない場合（カスタム属性）、またはその特定の属性の属性とプロパティが1：1ではないことがわかっている場合（上記の &lt;code&gt;href&lt;/code&gt; と &quot;href&quot;と同様）、ほとんどの場合、属性を操作します。 ）。</target>
        </trans-unit>
        <trans-unit id="4e060d177f7f8f83b9e02ce1f3471fc751288f37" translate="yes" xml:space="preserve">
          <source>As an example of how properties are simpler to deal with than attributes, consider a checkbox that is initially checked. Here are two possible pieces of valid HTML to do this:</source>
          <target state="translated">属性よりもプロパティの扱いが簡単な例として、最初にチェックが入っているチェックボックスを考えてみましょう。これを行うための有効なHTMLの2つの可能性があります。</target>
        </trans-unit>
        <trans-unit id="f4a05fba98dd2bad96c67f09e72bd858c36334c0" translate="yes" xml:space="preserve">
          <source>Attributes are returned in string form and can be inconsistent from browser to browser. However, they can be vital in some situations. As exemplified above, IE 8 Quirks Mode (and below) expects the name of a DOM property in get/set/removeAttribute instead of the attribute name. This is one of many reasons why it's important to know the difference.</source>
          <target state="translated">属性は文字列形式で返され、ブラウザによっては一貫性がありません。しかし、状況によっては重要になることもあります。上で例示したように、IE 8 Quirks Mode (以下)は getsetremoveAttribute で属性名ではなく DOM プロパティの名前を期待しています。これは、違いを知ることが重要な理由の一つです。</target>
        </trans-unit>
        <trans-unit id="6fce263de5a0bfede52d6d9329411cb1cf0bdede" translate="yes" xml:space="preserve">
          <source>Before jQuery 1.6 , the &lt;code&gt;attr()&lt;/code&gt; method &lt;strong&gt;&lt;em&gt;sometimes&lt;/em&gt;&lt;/strong&gt; took property values into account when retrieving attributes, this caused rather inconsistent behavior.</source>
          <target state="translated">jQuery 1.6より前のバージョンでは、 &lt;code&gt;attr()&lt;/code&gt; メソッドは属性を取得するときにプロパティ値を考慮に入れる&lt;strong&gt;&lt;em&gt;こと&lt;/em&gt;&lt;/strong&gt;があり、これにより、動作に一貫性がなくなりました。</target>
        </trans-unit>
        <trans-unit id="1429903df65b0d2b7f1c09b0f88004faec915cdf" translate="yes" xml:space="preserve">
          <source>CSS selector &lt;code&gt;[name=value]&lt;/code&gt;</source>
          <target state="translated">CSSセレクター &lt;code&gt;[name=value]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a4623e286783700c82976ca61e6f2d80d6f97e22" translate="yes" xml:space="preserve">
          <source>Custom attributes would include, for instance, any &lt;code&gt;data-xyz&lt;/code&gt; attributes you might put on elements to provide meta-data to your code (now that that's valid as of HTML5, as long as you stick to the &lt;code&gt;data-&lt;/code&gt; prefix). (Recent versions of jQuery give you access to &lt;code&gt;data-xyz&lt;/code&gt; elements via the &lt;code&gt;data&lt;/code&gt; function, but that function is &lt;strong&gt;not&lt;/strong&gt; just an accessor for &lt;code&gt;data-xyz&lt;/code&gt; attributes [it does both more and less than that]; unless you actually need its features, I'd use the &lt;code&gt;attr&lt;/code&gt; function to interact with &lt;code&gt;data-xyz&lt;/code&gt; attribute.)</source>
          <target state="translated">カスタム属性には、たとえば、コードにメタデータを提供するために要素に配置する可能性のある &lt;code&gt;data-xyz&lt;/code&gt; 属性が含まれます（ &lt;code&gt;data-&lt;/code&gt; プレフィックスを使用している限り、HTML5の時点で有効です）。 （jQueryの最近のバージョンでは、 &lt;code&gt;data&lt;/code&gt; 関数を介して &lt;code&gt;data-xyz&lt;/code&gt; 要素にアクセスできますが、その関数は &lt;code&gt;data-xyz&lt;/code&gt; 属性の単なるアクセサーではあり&lt;strong&gt;ません&lt;/strong&gt; [それ以上と以下の両方を行います]。実際にその機能が必要でない限り、私は' &lt;code&gt;attr&lt;/code&gt; 関数を使用して &lt;code&gt;data-xyz&lt;/code&gt; 属性を操作します。）</target>
        </trans-unit>
        <trans-unit id="20a3cf47f337d147487348ae45f88036b647b101" translate="yes" xml:space="preserve">
          <source>DOM Element Properties, Mozilla Dev Center</source>
          <target state="translated">DOM 要素のプロパティ、Mozilla Dev Center</target>
        </trans-unit>
        <trans-unit id="540c4a856184492e52c38c3dd3255fe73fece8f6" translate="yes" xml:space="preserve">
          <source>DOM Properties</source>
          <target state="translated">DOM プロパティ</target>
        </trans-unit>
        <trans-unit id="12d94716355fb3748af185f5bd1d4f4c331ea0b5" translate="yes" xml:space="preserve">
          <source>DOM4</source>
          <target state="translated">DOM4</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="54a7bbc65e003d91e53398eed689f5037b38195e" translate="yes" xml:space="preserve">
          <source>Example: Changing the &lt;code&gt;class&lt;/code&gt; attribute of a tag will change the &lt;code&gt;className&lt;/code&gt; property of that tag in the DOM.
If you have no attribute on a tag, you still have the corresponding DOM property with an empty or a default value.</source>
          <target state="translated">例：タグの &lt;code&gt;class&lt;/code&gt; 属性を変更すると、DOM内のそのタグの &lt;code&gt;className&lt;/code&gt; プロパティが変更されます。 タグに属性がない場合でも、対応するDOMプロパティは空またはデフォルト値のままです。</target>
        </trans-unit>
        <trans-unit id="8689d5cce98d1d5e74d8c755bbc46ad5f337575f" translate="yes" xml:space="preserve">
          <source>Example: While your tag has no &lt;code&gt;class&lt;/code&gt; attribute, the DOM property &lt;code&gt;className&lt;/code&gt; does exist with a empty string value.</source>
          <target state="translated">例：タグに &lt;code&gt;class&lt;/code&gt; 属性はありませんが、DOMプロパティ &lt;code&gt;className&lt;/code&gt; には空の文字列値が存在します。</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">スニペットを展開</target>
        </trans-unit>
        <trans-unit id="019d672f066237686e3bb2aa99d82366bb648cd1" translate="yes" xml:space="preserve">
          <source>For other attributes like &lt;code&gt;checked=&quot;checked&quot;&lt;/code&gt; on &lt;code&gt;input type=&quot;checkbox&quot;&lt;/code&gt;, things break, because once you click on it, it becomes dirty, and then adding or removing the &lt;code&gt;checked=&quot;checked&quot;&lt;/code&gt; content attribute &lt;strong&gt;does not toggle checkedness anymore&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;input type=&quot;checkbox&quot;&lt;/code&gt; の &lt;code&gt;checked=&quot;checked&quot;&lt;/code&gt; のような他の属性の場合、一度クリックするとダーティになり、 &lt;code&gt;checked=&quot;checked&quot;&lt;/code&gt; コンテンツ属性を追加または削除&lt;strong&gt;してもchecknessが切り替えられなくなるため、問題が発生します&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="321c30a1e552571a7b88ac0afbbf564dfac04d6c" translate="yes" xml:space="preserve">
          <source>For some attributes  like &lt;code&gt;disabled&lt;/code&gt; on &lt;code&gt;button&lt;/code&gt;, adding or removing the content attribute &lt;code&gt;disabled=&quot;disabled&quot;&lt;/code&gt; always toggles the property (called IDL attribute in HTML5) because &lt;a href=&quot;http://www.w3.org/TR/html5/forms.html#attr-fe-disabled&quot;&gt;http://www.w3.org/TR/html5/forms.html#attr-fe-disabled&lt;/a&gt; says:</source>
          <target state="translated">&lt;code&gt;button&lt;/code&gt; &lt;code&gt;disabled&lt;/code&gt; などの一部の属性では、コンテンツ属性 &lt;code&gt;disabled=&quot;disabled&quot;&lt;/code&gt; を追加または削除すると、常にプロパティ（HTML5ではIDL属性と呼ばれます）が切り替わり&lt;a href=&quot;http://www.w3.org/TR/html5/forms.html#attr-fe-disabled&quot;&gt;ます。http：//www.w3.org/TR/html5/forms.html#attr -fe-disabledさんのコメント&lt;/a&gt; ：</target>
        </trans-unit>
        <trans-unit id="ae43a9ec11eec2526a860a66aa9f96c06dbde4a2" translate="yes" xml:space="preserve">
          <source>Further detail</source>
          <target state="translated">詳細はこちら</target>
        </trans-unit>
        <trans-unit id="99f8b7321ea9542a8c8fb617b4ecd7ce9217af59" translate="yes" xml:space="preserve">
          <source>Gary Hole answer is very relevant to solve the problem if the code is written in such way</source>
          <target state="translated">ゲイリーホールの答えは非常にコードがそのような方法で書かれている場合、問題を解決するために関連しています</target>
        </trans-unit>
        <trans-unit id="acfeca83f757b07fb0be4f21e58de802f6a16840" translate="yes" xml:space="preserve">
          <source>Gently reminder about using &lt;code&gt;prop()&lt;/code&gt;, example:</source>
          <target state="translated">&lt;code&gt;prop()&lt;/code&gt; の使用に関する注意喚起、例：</target>
        </trans-unit>
        <trans-unit id="40574c2d227df28b2cea9836bdad6eea3a247fdb" translate="yes" xml:space="preserve">
          <source>Get the value of a &lt;strong&gt;property&lt;/strong&gt; for the first element in the set of matched elements.</source>
          <target state="translated">一致する要素のセットの最初の要素の&lt;strong&gt;プロパティ&lt;/strong&gt;の値を取得します。</target>
        </trans-unit>
        <trans-unit id="ddc85aca5b88f9ae99fbaa02e9207c6473fcc9ac" translate="yes" xml:space="preserve">
          <source>Get the value of an &lt;strong&gt;attribute&lt;/strong&gt; for the first element in the set of matched elements.</source>
          <target state="translated">一致する要素のセットの最初の要素の&lt;strong&gt;属性&lt;/strong&gt;の値を取得します。</target>
        </trans-unit>
        <trans-unit id="53f8409e81e8e14952f180db86f564b494978cae" translate="yes" xml:space="preserve">
          <source>Getting a HTML attribute that doesn't sync with a DOM property, e.g. get the &quot;original value&quot; of a standard HTML attribute, like &lt;code&gt;&amp;lt;input value=&quot;abc&quot;&amp;gt;.&lt;/code&gt;</source>
          <target state="translated">DOMプロパティと同期しないHTML属性を取得します。たとえば、 &lt;code&gt;&amp;lt;input value=&quot;abc&quot;&amp;gt;.&lt;/code&gt; などの標準HTML属性の「元の値」を取得します。</target>
        </trans-unit>
        <trans-unit id="234ee2f777ce32d1dbbcb79cda2e3e1d8f9c2992" translate="yes" xml:space="preserve">
          <source>Getting a custom HTML attribute (since it's not synced with a DOM property).</source>
          <target state="translated">カスタムHTML属性を取得する(DOMプロパティと同期していないので)。</target>
        </trans-unit>
        <trans-unit id="c3b589d0b978663a06c8b18130a6c7a11c3253e0" translate="yes" xml:space="preserve">
          <source>Gives the updated values of elements which is modified via javascript/jquery</source>
          <target state="translated">javascriptjqueryで変更された要素の更新された値を与える</target>
        </trans-unit>
        <trans-unit id="dc5e77301be5b0dc26b66f85672c13318ad75bc2" translate="yes" xml:space="preserve">
          <source>Gives you the value of element as it was defined in the html on page load</source>
          <target state="translated">ページロード時にhtmlで定義されている通りの要素の値を取得します。</target>
        </trans-unit>
        <trans-unit id="c83fb96d107f191cb169da811d2b409263026eb9" translate="yes" xml:space="preserve">
          <source>HTML Attributes</source>
          <target state="translated">HTML属性</target>
        </trans-unit>
        <trans-unit id="a8f2abfc12c0034cce7a586f0553589a8fa15be2" translate="yes" xml:space="preserve">
          <source>HTML Attributes,
Mozilla Dev Center</source>
          <target state="translated">HTML 属性、Mozilla Dev Center</target>
        </trans-unit>
        <trans-unit id="faefd9c84be9b5391376db67824b3adfc8adfb5b" translate="yes" xml:space="preserve">
          <source>HTML: &lt;code&gt;&amp;lt;textarea id=&quot;test&quot; value=&quot;foo&quot;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/code&gt;</source>
          <target state="translated">HTML： &lt;code&gt;&amp;lt;textarea id=&quot;test&quot; value=&quot;foo&quot;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40eb91649b65a0f72ca0f423af7c83377d4b81c4" translate="yes" xml:space="preserve">
          <source>Here's an issue I didn't see in the other answers.</source>
          <target state="translated">他の回答にはなかった問題がここにあります。</target>
        </trans-unit>
        <trans-unit id="9d10a3f1f61230d22097f06116feecbf2db7dce0" translate="yes" xml:space="preserve">
          <source>Here, you'll notice a list of properties under the &quot;DOM&quot; tab in Firebug. These are DOM properties. You'll immediately notice quite a few of them, as you'll have used them before without knowing it. Their values are what you'll be receiving through JavaScript.</source>
          <target state="translated">ここで、Firebugの「DOM」タブの下にプロパティの一覧が表示されていることに気づくでしょう。これが DOM のプロパティです。知らずに使ったことがあると思うので、すぐにかなりの数のプロパティがあることに気づくでしょう。これらのプロパティの値は、JavaScript を通して受け取ることになります。</target>
        </trans-unit>
        <trans-unit id="69f641a37da6c4415bd790789bb766184eba1756" translate="yes" xml:space="preserve">
          <source>I think &lt;a href=&quot;https://stackoverflow.com/questions/5874652/prop-vs-attr/5876747#5876747&quot;&gt;Tim said it quite well&lt;/a&gt;, but let's step back:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/5874652/prop-vs-attr/5876747#5876747&quot;&gt;ティムはかなりうまく言ったと&lt;/a&gt;思いますが、一歩戻りましょう。</target>
        </trans-unit>
        <trans-unit id="fed0c03c46172573702e64a56ca6394261bb1d23" translate="yes" xml:space="preserve">
          <source>I'll summarize the main issues:</source>
          <target state="translated">主な論点をまとめてみます。</target>
        </trans-unit>
        <trans-unit id="e365ffe1c8810b64d991b3f8224495768ce18106" translate="yes" xml:space="preserve">
          <source>If you change an attribute, the change will be reflected in the DOM (sometimes with a different name).</source>
          <target state="translated">属性を変更すると、その変更はDOMに反映されます(異なる名前の場合もあります)。</target>
        </trans-unit>
        <trans-unit id="7c58b193b79163df01da5be9e079a6e160871211" translate="yes" xml:space="preserve">
          <source>If you change the one, the other will be changed by a controller, and vice versa.
This controller is not in jQuery, but in the browser's native code.</source>
          <target state="translated">片方を変更すると、もう片方はコントローラで変更され、その逆も同様です。このコントローラーはjQueryではなく、ブラウザのネイティブコードの中にあります。</target>
        </trans-unit>
        <trans-unit id="fb2649600de350b8e935cfc0ce3dd919260347eb" translate="yes" xml:space="preserve">
          <source>If you're a jQuery developer and are confused by this whole business about properties and attributes, you need to take a step back and learn a little about it, since jQuery is no longer trying so hard to shield you from this stuff. For the authoritative but somewhat dry word on the subject, there's the specs: &lt;a href=&quot;http://www.w3.org/TR/dom/&quot;&gt;DOM4&lt;/a&gt;, &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-HTML/&quot;&gt;HTML DOM&lt;/a&gt;, &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-Core&quot;&gt;DOM Level 2&lt;/a&gt;, &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-3-Core/&quot;&gt;DOM Level 3&lt;/a&gt;. Mozilla's DOM documentation is valid for most modern browsers and is easier to read than the specs, so you may find their &lt;a href=&quot;https://developer.mozilla.org/en/gecko_dom_reference&quot;&gt;DOM reference&lt;/a&gt; helpful. There's a &lt;a href=&quot;https://developer.mozilla.org/en/DOM/element#Properties&quot;&gt;section on element properties&lt;/a&gt;.</source>
          <target state="translated">jQuery開発者であり、このビジネス全体でプロパティと属性について混乱している場合は、一歩下がって、それについて少し学ぶ必要があります。jQueryは、このようなことから身を守るためにそれほど懸命に取り組んでいないからです。 権威はあるが少々辛口の言葉については、 &lt;a href=&quot;http://www.w3.org/TR/dom/&quot;&gt;DOM4&lt;/a&gt; 、 &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-HTML/&quot;&gt;HTML DOM&lt;/a&gt; 、 &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-Core&quot;&gt;DOM Level 2&lt;/a&gt; 、 &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-3-Core/&quot;&gt;DOM Level 3&lt;/a&gt;の仕様があります 。 MozillaのDOMドキュメントは、最新のほとんどのブラウザに有効であり、仕様よりも読みやすいため、 &lt;a href=&quot;https://developer.mozilla.org/en/gecko_dom_reference&quot;&gt;DOMリファレンスが&lt;/a&gt;役立つ場合があります。 &lt;a href=&quot;https://developer.mozilla.org/en/DOM/element#Properties&quot;&gt;要素のプロパティに関するセクション&lt;/a&gt;があります 。</target>
        </trans-unit>
        <trans-unit id="1187e97a31a5a880515a8c66d3eb267da92fff49" translate="yes" xml:space="preserve">
          <source>If you've only ever used jQuery and not the DOM directly, this could be a confusing change, although it is definitely an improvement conceptually. Not so good for the bazillions of sites using jQuery that will break as a result of this change though.</source>
          <target state="translated">もしあなたがこれまでjQueryしか使ったことがなく、DOMを直接使ったことがないのであれば、概念的には間違いなく改善されていますが、この変更は混乱を招く可能性があります。しかし、jQueryを使用している数十億ものサイトがこの変更の結果として壊れることになるのは、あまり良いことではありません。</target>
        </trans-unit>
        <trans-unit id="c06d2461f9b3e13fae850da05b3a7abc18dfd83a" translate="yes" xml:space="preserve">
          <source>Importantly, many of them are synced (if you update &lt;code&gt;class&lt;/code&gt; property, &lt;code&gt;class&lt;/code&gt; attribute in html will also be updated; and otherwise). &lt;strong&gt;But&lt;/strong&gt; some attributes may be synced to unexpected properties - eg, &lt;strong&gt;attribute&lt;/strong&gt;&lt;code&gt;checked&lt;/code&gt; corresponds to &lt;strong&gt;property&lt;/strong&gt;&lt;code&gt;defaultChecked&lt;/code&gt;, so that</source>
          <target state="translated">重要なことに、それらの多くは同期されます（ &lt;code&gt;class&lt;/code&gt; プロパティを更新すると、htmlの &lt;code&gt;class&lt;/code&gt; 属性も更新されます;そうでなければ）。 &lt;strong&gt;ただし、&lt;/strong&gt;一部の属性は予期しないプロパティに同期される可能性があります。たとえば、 &lt;code&gt;checked&lt;/code&gt; &lt;strong&gt;属性&lt;/strong&gt;は&lt;strong&gt;プロパティ&lt;/strong&gt; &lt;code&gt;defaultChecked&lt;/code&gt; に対応するため、</target>
        </trans-unit>
        <trans-unit id="7e1f21829f0ba43c086e6a30665974eca8d453f8" translate="yes" xml:space="preserve">
          <source>In earlier versions of jQuery, this returns an empty string. In 1.6, it returns the proper value, &lt;code&gt;foo&lt;/code&gt;.</source>
          <target state="translated">以前のバージョンのjQueryでは、これは空の文字列を返します。 1.6では、適切な値 &lt;code&gt;foo&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="50ae1a031b220ae92290c7e7ff3de059ded39d84" translate="yes" xml:space="preserve">
          <source>In jQuery 1.6, this unambiguously becomes</source>
          <target state="translated">jQuery 1.6では、これは紛れもなく</target>
        </trans-unit>
        <trans-unit id="419cb6f1b0420b9fdf3f154d869f672f2740a4a0" translate="yes" xml:space="preserve">
          <source>In the majority of cases, &lt;code&gt;prop()&lt;/code&gt; does what &lt;code&gt;attr()&lt;/code&gt; used to do. Replacing calls to &lt;code&gt;attr()&lt;/code&gt; with &lt;code&gt;prop()&lt;/code&gt; in your code will generally work.</source>
          <target state="translated">ほとんどの場合、 &lt;code&gt;prop()&lt;/code&gt; は、 &lt;code&gt;attr()&lt;/code&gt; が実行していたことを実行します。 コードで &lt;code&gt;attr()&lt;/code&gt; の呼び出しを &lt;code&gt;prop()&lt;/code&gt; に置き換えると、通常は機能します。</target>
        </trans-unit>
        <trans-unit id="6635c8bd4a2761655e3102eafb65d93077b5ffd7" translate="yes" xml:space="preserve">
          <source>It's just the distinction between HTML attributes and DOM objects that causes a confusion. For those that are comfortable acting on the DOM elements native properties such a &lt;code&gt;this.src&lt;/code&gt;&lt;code&gt;this.value&lt;/code&gt;&lt;code&gt;this.checked&lt;/code&gt; etc, &lt;code&gt;.prop&lt;/code&gt; is a very warm welcome to the family. For others, it's just an added layer of confusion. Let's clear that up.</source>
          <target state="translated">混乱を招くのは、HTML属性とDOMオブジェクトの違いだけです。 &lt;code&gt;this.src&lt;/code&gt; &lt;code&gt;this.value&lt;/code&gt; &lt;code&gt;this.checked&lt;/code&gt; などのDOM要素のネイティブプロパティを快適に操作できる人にとって、 &lt;code&gt;.prop&lt;/code&gt; は家族にとって非常に温かい歓迎です。 他の人にとっては、それは単なる混乱の追加層です。 それを明らかにしましょう。</target>
        </trans-unit>
        <trans-unit id="3877f5277b402e4125f4bb8aa688a3baeafba828" translate="yes" xml:space="preserve">
          <source>It's not obvious what the correct way to check or uncheck the checkbox is using the &lt;code&gt;checked&lt;/code&gt; attribute</source>
          <target state="translated">チェックボックスをオンまたはオフにする正しい方法が、 &lt;code&gt;checked&lt;/code&gt; 属性を使用していることが明らかではない</target>
        </trans-unit>
        <trans-unit id="04ffc11d79285baea96ffc399e2c192b92159824" translate="yes" xml:space="preserve">
          <source>JavaScript: &lt;code&gt;alert($('#test').attr('value'));&lt;/code&gt;</source>
          <target state="translated">JavaScript： &lt;code&gt;alert($('#test').attr('value'));&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e22631d2e6fae01b5e44844b05f980ceaea5207" translate="yes" xml:space="preserve">
          <source>JavaScript: The Definitive Guide by
David Flanagan</source>
          <target state="translated">JavaScript.決定版ガイド by David Flanagan</target>
        </trans-unit>
        <trans-unit id="1380368c31187eb52f58920d8d5acad4e5a0ad22" translate="yes" xml:space="preserve">
          <source>Let's consider this anchor in a page at &lt;code&gt;http://example.com/testing.html&lt;/code&gt;:</source>
          <target state="translated">このアンカーを &lt;code&gt;http://example.com/testing.html&lt;/code&gt; のページで考えてみましょう：</target>
        </trans-unit>
        <trans-unit id="85719bad9a2c4734c18c7d17ad1611d735103187" translate="yes" xml:space="preserve">
          <source>Mostly we want to use for DOM object rather then custom attribute
like &lt;code&gt;data-img, data-xyz&lt;/code&gt;.</source>
          <target state="translated">ほとんどの場合 &lt;code&gt;data-img, data-xyz&lt;/code&gt; などのカスタム属性ではなく、DOMオブジェクトに使用します。</target>
        </trans-unit>
        <trans-unit id="1724c4b4d2271c6924c46bc17bbb8314118dae97" translate="yes" xml:space="preserve">
          <source>My original answer applies specifically to jQuery 1.6. My advice remains the same but jQuery 1.6.1 changed things slightly: in the face of the predicted pile of broken websites, the jQuery team &lt;a href=&quot;http://blog.jquery.com/2011/05/12/jquery-1-6-1-released/&quot;&gt;reverted &lt;code&gt;attr()&lt;/code&gt; to something close to (but not exactly the same as) its old behaviour for Boolean attributes&lt;/a&gt;. John Resig also &lt;a href=&quot;http://ejohn.org/blog/jquery-16-and-attr/&quot;&gt;blogged about it&lt;/a&gt;. I can see the difficulty they were in but still disagree with his recommendation to prefer &lt;code&gt;attr()&lt;/code&gt;.</source>
          <target state="translated">私の元の答えは特にjQuery 1.6に適用されます。 私のアドバイスは同じですが、jQuery 1.6.1は少し変更されました：壊れたWebサイトの予測された山に直面して、jQueryチーム&lt;a href=&quot;http://blog.jquery.com/2011/05/12/jquery-1-6-1-released/&quot;&gt;は、ブール属性の古い動作に近い（ただしまったく同じではない &lt;code&gt;attr()&lt;/code&gt; に戻しました&lt;/a&gt; 。 John Resigも&lt;a href=&quot;http://ejohn.org/blog/jquery-16-and-attr/&quot;&gt;ブログを書いている&lt;/a&gt; 。 彼らの難しさはわかりますが、 &lt;code&gt;attr()&lt;/code&gt; を優先するという彼の推奨にはまだ同意しません。</target>
        </trans-unit>
        <trans-unit id="8e38e678c66dd55ecd0686f2329e9f742e2d78c5" translate="yes" xml:space="preserve">
          <source>Note that the properties and attributes are distinct.</source>
          <target state="translated">プロパティと属性が区別されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="289e0a9f8648145124d90d94f9e10dbe6399aaa7" translate="yes" xml:space="preserve">
          <source>Now we change a few things like so:</source>
          <target state="translated">さて、こんな感じでいくつか変更していきます。</target>
        </trans-unit>
        <trans-unit id="94867e4802e9035ca9aad264ab7f98b9b8faf8e6" translate="yes" xml:space="preserve">
          <source>Now, although they are distinct, because all of this evolved rather than being designed from the ground up, a number of properties write back to the attribute they derived from if you set them. But not all do, and as you can see from &lt;code&gt;href&lt;/code&gt; above, the mapping is not always a straight &quot;pass the value on&quot;, sometimes there's interpretation involved.</source>
          <target state="translated">これらは明確ですが、これらはすべてゼロから設計されたのではなく進化したため、多くのプロパティは、設定した場合、それらが派生した属性に書き戻します。 しかし、すべてがそうであるとは限らず、上記の &lt;code&gt;href&lt;/code&gt; からわかるように、マッピングは常に「値を渡す」ことではないため、解釈が伴う場合があります。</target>
        </trans-unit>
        <trans-unit id="b437be314cf0af285633f54789e33857dbdedd78" translate="yes" xml:space="preserve">
          <source>One thing &lt;code&gt;.attr()&lt;/code&gt; can do that &lt;code&gt;.prop()&lt;/code&gt; can't:  affect CSS selectors</source>
          <target state="translated">&lt;code&gt;.attr()&lt;/code&gt; が.prop（）ができないことの1つ：CSSセレクターへの影響</target>
        </trans-unit>
        <trans-unit id="2865c48558148f37fa6ff9bb59cde97ea9ac7fc9" translate="yes" xml:space="preserve">
          <source>P/S: When I'm checking Image &lt;strong&gt;&lt;em&gt;src&lt;/em&gt;&lt;/strong&gt; property. If the &lt;strong&gt;&lt;em&gt;src&lt;/em&gt;&lt;/strong&gt; is empty, &lt;strong&gt;prop&lt;/strong&gt; return the current URL of the page (wrong), and &lt;strong&gt;attr&lt;/strong&gt; return empty string (right).</source>
          <target state="translated">P / S：Image &lt;strong&gt;&lt;em&gt;src&lt;/em&gt;&lt;/strong&gt;プロパティをチェックしているとき。 &lt;strong&gt;&lt;em&gt;src&lt;/em&gt;&lt;/strong&gt;が空の場合、 &lt;strong&gt;prop&lt;/strong&gt;はページの現在のURL（間違った）を返し、 &lt;strong&gt;attrは&lt;/strong&gt;空の文字列（右）を返します。</target>
        </trans-unit>
        <trans-unit id="66af78c1b7f1f37be404a2acb27e2b542f9f49a9" translate="yes" xml:space="preserve">
          <source>Properties are generally simpler to deal with than attributes. An attribute value may only be a string whereas a property can be of any type. For example, the &lt;code&gt;checked&lt;/code&gt; property is a Boolean, the &lt;code&gt;style&lt;/code&gt; property is an object with individual properties for each style, the &lt;code&gt;size&lt;/code&gt; property is a number.</source>
          <target state="translated">プロパティは通常、属性よりも扱いが簡単です。 属性値は文字列のみにすることができますが、プロパティは任意のタイプにすることができます。 たとえば、 &lt;code&gt;checked&lt;/code&gt; プロパティはブール値、 &lt;code&gt;style&lt;/code&gt; プロパティは各スタイルの個別のプロパティを持つオブジェクト、 &lt;code&gt;size&lt;/code&gt; プロパティは数値です。</target>
        </trans-unit>
        <trans-unit id="ccdbd0e4ee4d748197077731bac58d8f220e10ee" translate="yes" xml:space="preserve">
          <source>Round 1: style</source>
          <target state="translated">ラウンド1:スタイル</target>
        </trans-unit>
        <trans-unit id="60d624aff5d20a10672f1fa2bb06a48fc35cb2ff" translate="yes" xml:space="preserve">
          <source>Round 2: value</source>
          <target state="translated">第2ラウンド:値</target>
        </trans-unit>
        <trans-unit id="4bcb4e163bf193fe874c35e7a1a754e4ed2bd51c" translate="yes" xml:space="preserve">
          <source>Show code snippet</source>
          <target state="translated">コードスニペットを表示</target>
        </trans-unit>
        <trans-unit id="3609b7bc415b42245642bd9b48d2adfbddcb70fa" translate="yes" xml:space="preserve">
          <source>Since the prop function return &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; object, above code will not working properly in some browser(tested with &lt;code&gt;IE8 with Chrome Frame Plugin&lt;/code&gt; in my case).</source>
          <target state="translated">prop関数は &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; オブジェクトを返すため、一部のブラウザーでは上記のコードが正しく機能しません（私の場合 &lt;code&gt;IE8 with Chrome Frame Plugin&lt;/code&gt; したIE8でテストされています）。</target>
        </trans-unit>
        <trans-unit id="12577ab2e647385f98e5dcfb2630c23fb794c107" translate="yes" xml:space="preserve">
          <source>So &lt;a href=&quot;http://api.jquery.com/category/version/1.6/&quot;&gt;jQuery 1.6&lt;/a&gt; has the new function &lt;a href=&quot;http://api.jquery.com/prop/&quot;&gt;&lt;code&gt;prop()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">したがって、 &lt;a href=&quot;http://api.jquery.com/category/version/1.6/&quot;&gt;jQuery 1.6&lt;/a&gt;には新しい関数&lt;a href=&quot;http://api.jquery.com/prop/&quot;&gt; &lt;code&gt;prop()&lt;/code&gt; があり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="1c47d08c78383b55b25c00ee35c2311c4955dc43" translate="yes" xml:space="preserve">
          <source>So use prop!</source>
          <target state="translated">だからプロップを使え!</target>
        </trans-unit>
        <trans-unit id="95eb928367e90028eeb24f35d3136dcf2dc99528" translate="yes" xml:space="preserve">
          <source>So, how do you find out if the checkbox is checked with jQuery? Look on Stack Overflow and you'll commonly find the following suggestions:</source>
          <target state="translated">では、jQueryでチェックボックスがチェックされているかどうかを調べるにはどうすればいいのでしょうか?Stack Overflowを見てみると、以下のような提案がよく出てきます。</target>
        </trans-unit>
        <trans-unit id="0e964b79b47cef26b19046dcea7190f83bc893c7" translate="yes" xml:space="preserve">
          <source>Some gratuitous ASCII art (and leaving out a lot of stuff):</source>
          <target state="translated">いくつかのありがたいアスキーアート(しかも大量に残している)。</target>
        </trans-unit>
        <trans-unit id="1de8dba368e7754dc199c99b017f5c51265ee8dc" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Syntax:</target>
        </trans-unit>
        <trans-unit id="ef60cad211d4de61e1a48513297acc715f5067c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attr&lt;/code&gt; function used to have some convoluted logic around getting what they thought you wanted, rather than literally getting the attribute. It conflated the concepts. Moving to &lt;code&gt;prop&lt;/code&gt; and &lt;code&gt;attr&lt;/code&gt; was meant to de-conflate them. Briefly in v1.6.0 jQuery went too far in that regard, but functionality &lt;a href=&quot;http://blog.jquery.com/2011/05/10/jquery-1-6-1-rc-1-released/&quot;&gt;was quickly added back&lt;/a&gt; to &lt;code&gt;attr&lt;/code&gt; to handle the common situations where people use &lt;code&gt;attr&lt;/code&gt; when technically they should use &lt;code&gt;prop&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;attr&lt;/code&gt; 関数は、文字どおりに属性を取得するのではなく、ユーザーが望んでいるものを取得するための複雑なロジックを使用していました。 それは概念を融合させました。 &lt;code&gt;prop&lt;/code&gt; と &lt;code&gt;attr&lt;/code&gt; に移動することは、それらをde-conflateすることを意味しました。 簡単に言うと、v1.6.0でjQueryはその点で行き過ぎ&lt;a href=&quot;http://blog.jquery.com/2011/05/10/jquery-1-6-1-rc-1-released/&quot;&gt;でしたが&lt;/a&gt; 、技術的に &lt;code&gt;prop&lt;/code&gt; を使用する必要があるときに &lt;code&gt;attr&lt;/code&gt; を使用する一般的な状況を処理するために 、機能がすばやく &lt;code&gt;attr&lt;/code&gt; に追加されました 。</target>
        </trans-unit>
        <trans-unit id="80989911ed46c6de8a83bf3ca6e47fd3b4b66d61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;link&lt;/code&gt; object is a real thing, and you can see there's a real distinction between accessing a &lt;em&gt;property&lt;/em&gt; on it, and accessing an &lt;em&gt;attribute&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;link&lt;/code&gt; オブジェクトは実在のものであり、 リンクオブジェクトの&lt;em&gt;プロパティ&lt;/em&gt;へのアクセスと&lt;em&gt;属性&lt;/em&gt;へのアクセスの間には実際の違いがあることがわかり&lt;em&gt;ます&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="729a01a6a69c8ea19b48d11fde2603d2254d9086" translate="yes" xml:space="preserve">
          <source>The Docs:</source>
          <target state="translated">ドクだ</target>
        </trans-unit>
        <trans-unit id="b57ac22217c7c4c1ffed0ea45fefc50e9b636e48" translate="yes" xml:space="preserve">
          <source>The attribute value reflects the default rather than the current visible state (except in some older versions of IE, thus making things still harder). The attribute tells you nothing about the whether the checkbox on the page is checked. See &lt;a href=&quot;http://jsfiddle.net/VktA6/49/&quot;&gt;http://jsfiddle.net/VktA6/49/&lt;/a&gt;.</source>
          <target state="translated">属性値は、現在の可視状態ではなくデフォルトを反映します（IEの一部の古いバージョンを除き、状況がさらに難しくなります）。 この属性は、ページのチェックボックスがチェックされているかどうかについては何も伝えません。 &lt;a href=&quot;http://jsfiddle.net/VktA6/49/&quot;&gt;http://jsfiddle.net/VktA6/49/を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9cfb0b86bee1b739c29ad71056625e859a225fad" translate="yes" xml:space="preserve">
          <source>The class attribute is shown here on the body. It's accessible through the following code:</source>
          <target state="translated">class属性は、ここではボディに表示されています。以下のコードからアクセスできます。</target>
        </trans-unit>
        <trans-unit id="c53f0ab45f6a1937de5cd703c09d48cd0f34bb66" translate="yes" xml:space="preserve">
          <source>The console logs the &lt;code&gt;getAttribute&lt;/code&gt; as a string, and the &lt;code&gt;attr&lt;/code&gt; as a string, but the &lt;code&gt;prop&lt;/code&gt; as a &lt;code&gt;CSSStyleDeclaration&lt;/code&gt;, Why? And how does that affect my coding in the future?</source>
          <target state="translated">コンソールは &lt;code&gt;getAttribute&lt;/code&gt; を文字列として、 &lt;code&gt;attr&lt;/code&gt; を文字列として記録しますが、 &lt;code&gt;prop&lt;/code&gt; は &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; として記録します 。なぜですか？ そして、それは将来の私のコーディングにどのように影響しますか？</target>
        </trans-unit>
        <trans-unit id="dd5c103d97ae0a2d027fef688b953665a16aa4a7" translate="yes" xml:space="preserve">
          <source>The difference between attributes and properties can be important in specific situations. Before jQuery 1.6, the .attr() method sometimes took property values into account when retrieving some attributes, which could cause inconsistent behavior. As of jQuery 1.6, the .prop() method provides a way to explicitly retrieve property values, while .attr() retrieves attributes.</source>
          <target state="translated">アトリビュートとプロパティの違いは、特定の状況で重要になることがあります。jQuery 1.6 以前の .attr()メソッドでは、一部のアトリビュートを取得する際にプロパティ値を考慮に入れてしまうことがあり、一貫性のない動作を引き起こす可能性がありました。jQuery 1.6 では、.prop()メソッドは明示的にプロパティ値を取得する方法を提供し、.attr()は属性を取得します。</target>
        </trans-unit>
        <trans-unit id="c5c1057c51736c2f74489c55f4e7ad812e908197" translate="yes" xml:space="preserve">
          <source>The disabled IDL attribute must reflect the disabled content attribute.</source>
          <target state="translated">無効化されたIDL属性は、無効化されたコンテンツ属性を反映しなければならない。</target>
        </trans-unit>
        <trans-unit id="c16411f5496ad4b8401ad3ef076b679ac6542571" translate="yes" xml:space="preserve">
          <source>The easiest way to see the difference between &lt;code&gt;.attr&lt;/code&gt; and &lt;code&gt;.prop&lt;/code&gt; is the following example:</source>
          <target state="translated">&lt;code&gt;.attr&lt;/code&gt; と &lt;code&gt;.prop&lt;/code&gt; の違いを確認する最も簡単な方法は、次の例です。</target>
        </trans-unit>
        <trans-unit id="32534caab896fd17123339601f0c1efaaec7a0e6" translate="yes" xml:space="preserve">
          <source>The function above is used to check if checkbox1 is checked or not, if checked: return 1; if not: return 0. Function prop() used here as a GET function.</source>
          <target state="translated">上の関数はcheckbox1にチェックが入っているかどうかをチェックするために使われており、チェックが入っていれば1を返し、入っていなければ0を返します。ここではGET関数としてprop()関数を使用しています。</target>
        </trans-unit>
        <trans-unit id="29f7425ec4ef49d7bfced320d7119b2c15669d2b" translate="yes" xml:space="preserve">
          <source>The function above is used to set checkbox1 to be checked and ALWAYS return 1. Now function prop() used as a SET function.</source>
          <target state="translated">上の関数は、チェックボックス1にチェックを入れるように設定し、常に1を返すようにしています。ここで、関数prop()をSET関数として使用します。</target>
        </trans-unit>
        <trans-unit id="6eeccb6dca8d0bac5d83a0757ed4d6ff88801425" translate="yes" xml:space="preserve">
          <source>The idea of using the &lt;code&gt;checked&lt;/code&gt; attribute for scripting a checkbox is unhelpful and unnecessary. The property is what you need.</source>
          <target state="translated">チェックボックスをスクリプト化するために &lt;code&gt;checked&lt;/code&gt; 属性を使用するという考えは役に立たず、不要です。 プロパティは、必要なものです。</target>
        </trans-unit>
        <trans-unit id="a346404460ed25f7e105c7bf11fa30a362a24111" translate="yes" xml:space="preserve">
          <source>The introduction of the &lt;code&gt;prop()&lt;/code&gt; method provides a way to explicitly retrieve property values, while &lt;code&gt;.attr()&lt;/code&gt; retrieves attributes.</source>
          <target state="translated">&lt;code&gt;prop()&lt;/code&gt; メソッドの導入により、 &lt;code&gt;.attr()&lt;/code&gt; が属性を取得する一方で、プロパティ値を明示的に取得する方法が提供されます。</target>
        </trans-unit>
        <trans-unit id="d85182833c12c0535e66bfe183d9c175168470d7" translate="yes" xml:space="preserve">
          <source>The property also makes checking or unchecking the checkbox trivial:</source>
          <target state="translated">また、このプロパティは、チェックボックスのチェックを外すかどうかを簡単にしてくれます。</target>
        </trans-unit>
        <trans-unit id="9de3b95677403ce83a6cd540e3554fe681740186" translate="yes" xml:space="preserve">
          <source>The standard properties are laid out in the various DOM specs:</source>
          <target state="translated">標準的なプロパティは、様々なDOMの仕様にレイアウトされています。</target>
        </trans-unit>
        <trans-unit id="7e1d1062df530e62441bd9367801c6395aa93525" translate="yes" xml:space="preserve">
          <source>The thing you really need to be careful with is just &lt;strong&gt;do not mix the usage of these for the same property throughout your application&lt;/strong&gt; for the above reason.</source>
          <target state="translated">上記の理由により&lt;strong&gt;、アプリケーション全体で同じプロパティに対してこれらの使用法を混ぜないでください&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="540d2472341cccba8be027fc2236bd8b8c530474" translate="yes" xml:space="preserve">
          <source>These specs have excellent indexes and I recommend keeping links to them handy; I use them all the time.</source>
          <target state="translated">これらのスペックは優れたインデックスを持っているので、リンク先は便利なものにしておくことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="8d96ed5ed96a66531cb64de7520b4f59479a974b" translate="yes" xml:space="preserve">
          <source>This change has been a long time coming for jQuery. For years, they've been content with a function named &lt;code&gt;attr()&lt;/code&gt; that mostly retrieved DOM properties, not the result you'd expect from the name. The segregation of &lt;a href=&quot;http://api.jquery.com/attr&quot;&gt;&lt;code&gt;attr()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://api.jquery.com/prop&quot;&gt;&lt;code&gt;prop()&lt;/code&gt;&lt;/a&gt; should help alleviate some of the confusion between HTML attributes and DOM properties. &lt;code&gt;$.fn.prop()&lt;/code&gt; grabs the specified DOM property, while &lt;code&gt;$.fn.attr()&lt;/code&gt; grabs the specified HTML attribute.</source>
          <target state="translated">この変更はjQueryにとって長い間続いてきました。 何年もの間、それらは &lt;code&gt;attr()&lt;/code&gt; という名前の関数に満足しており、その名前から期待する結果ではなく、ほとんどがDOMプロパティを取得していました。 &lt;a href=&quot;http://api.jquery.com/attr&quot;&gt; &lt;code&gt;attr()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;http://api.jquery.com/prop&quot;&gt; &lt;code&gt;prop()&lt;/code&gt; &lt;/a&gt;の分離は、HTML属性とDOMプロパティの間の混乱のいくつかを緩和するのに役立つはずです。 &lt;code&gt;$.fn.prop()&lt;/code&gt; は指定されたDOMプロパティを取得し、 &lt;code&gt;$.fn.attr()&lt;/code&gt; は指定されたHTML属性を取得します。</target>
        </trans-unit>
        <trans-unit id="bdc69234098316369890d3a27c1d12018faea5b3" translate="yes" xml:space="preserve">
          <source>This change removes some of the layer of magic jQuery stuck in front of attributes and properties, meaning jQuery developers will have to learn a bit about the difference between properties and attributes. This is a good thing.</source>
          <target state="translated">この変更により、アトリビュートとプロパティの前に詰まっていた魔法のjQueryのレイヤーがいくつか削除されたため、jQuery開発者はプロパティとアトリビュートの違いについて少し学ばなければならないことになります。これは良いことです。</target>
        </trans-unit>
        <trans-unit id="fa5f4dac63ceba8499c8ebda7b7ee0e9b32ac97e" translate="yes" xml:space="preserve">
          <source>This concept provides an example where the difference is observable: &lt;a href=&quot;http://www.w3.org/TR/html5/forms.html#concept-input-checked-dirty&quot;&gt;http://www.w3.org/TR/html5/forms.html#concept-input-checked-dirty&lt;/a&gt;</source>
          <target state="translated">この概念は、違いが観察できる例を提供します： &lt;a href=&quot;http://www.w3.org/TR/html5/forms.html#concept-input-checked-dirty&quot;&gt;http&lt;/a&gt; : //www.w3.org/TR/html5/forms.html#concept-input-checked-dirty</target>
        </trans-unit>
        <trans-unit id="3cfe87b7616b33bdbe916512a8f5f3ef83a286ae" translate="yes" xml:space="preserve">
          <source>This is actually the simplest thing in the world to do with the &lt;code&gt;checked&lt;/code&gt; Boolean property, which has existed and worked flawlessly in every major scriptable browser since 1995:</source>
          <target state="translated">これは実際には、1995年以降存在するすべての主要なスクリプト対応ブラウザーで問題なく動作する、 &lt;code&gt;checked&lt;/code&gt; ブールプロパティを使用する世界で最も簡単なことです。</target>
        </trans-unit>
        <trans-unit id="145f8a318f2e616c0d3bd73938df79647833c350" translate="yes" xml:space="preserve">
          <source>This is why you should use mostly &lt;code&gt;.prop&lt;/code&gt;, as it affects the effective property directly, instead of relying on complex side-effects of modifying the HTML.</source>
          <target state="translated">HTMLを変更することによる複雑な副作用に依存するのではなく、効果的なプロパティに直接影響するため、これが主に &lt;code&gt;.prop&lt;/code&gt; を使用する理由です。</target>
        </trans-unit>
        <trans-unit id="753d8f0547857b0427bdde785c620b776eeac959" translate="yes" xml:space="preserve">
          <source>Thus changing it into following code</source>
          <target state="translated">このようにして、以下のコードに変更します。</target>
        </trans-unit>
        <trans-unit id="c88652b2409595eccf1604ebe6770348f7e77851" translate="yes" xml:space="preserve">
          <source>To fully understand how they work, here's an extended explanation on the difference between HTML attributes and DOM properties.:</source>
          <target state="translated">これらがどのように動作するかを十分に理解するために、HTML 属性と DOM プロパティの違いについての説明を以下に示します。</target>
        </trans-unit>
        <trans-unit id="0969eb5b711519c18e0b6f0a6871c28056b8ba40" translate="yes" xml:space="preserve">
          <source>Try it out:</source>
          <target state="translated">試してみてください。</target>
        </trans-unit>
        <trans-unit id="edb598ba0ed08660d3d93c172c02163186ed1250" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;prop()&lt;/code&gt; over &lt;code&gt;attr()&lt;/code&gt; in the majority of cases.</source>
          <target state="translated">ほとんどの場合、 &lt;code&gt;attr()&lt;/code&gt; ではなく &lt;code&gt;prop()&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="3dd581291ee6311e0bd015bcd39c264abdcb9aa5" translate="yes" xml:space="preserve">
          <source>Usually you'll want to use properties.
Use attributes only for:</source>
          <target state="translated">通常はプロパティを使用します。にのみ属性を使用します。</target>
        </trans-unit>
        <trans-unit id="d85ab4a57d88528795beae5179b53eae7cbf70a4" translate="yes" xml:space="preserve">
          <source>We can only access DOM elements with &lt;code&gt;prop&lt;/code&gt; other then it gives &lt;strong&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">DOM要素にアクセスできるのは &lt;code&gt;prop&lt;/code&gt; otherだけです。</target>
        </trans-unit>
        <trans-unit id="c1f1b40046d8a364453cc07294630df202e93b59" translate="yes" xml:space="preserve">
          <source>When I talk about properties being properties of an object, I'm not speaking in the abstract. Here's some non-jQuery code:</source>
          <target state="translated">プロパティがオブジェクトのプロパティであるという話をするとき、抽象的な話をしているわけではありません。ここではjQueryではないコードをいくつか紹介します。</target>
        </trans-unit>
        <trans-unit id="a77e169f69f0792646894a3ddeffee9ae467e20c" translate="yes" xml:space="preserve">
          <source>Where both a property and an attribute with the same name exists, usually updating one will update the other, but this is not the case for certain attributes of inputs, such as &lt;code&gt;value&lt;/code&gt; and &lt;code&gt;checked&lt;/code&gt;: for these attributes, the property always represents the current state while the attribute (except in old versions of IE) corresponds to the default value/checkedness of the input (reflected in the &lt;code&gt;defaultValue&lt;/code&gt; / &lt;code&gt;defaultChecked&lt;/code&gt; property).</source>
          <target state="translated">同じ名前のプロパティと属性の両方が存在する場合、通常は一方を更新すると他方が更新され &lt;code&gt;value&lt;/code&gt; 、 値や &lt;code&gt;checked&lt;/code&gt; などの入力の特定の属性には当てはまりません。これらの属性の場合、プロパティは常に現在の状態を表します一方、属性（IEの古いバージョンを除く）は、入力のデフォルト値/チェック済みに対応しています（ &lt;code&gt;defaultValue&lt;/code&gt; / &lt;code&gt;defaultChecked&lt;/code&gt; プロパティに反映されます）。</target>
        </trans-unit>
        <trans-unit id="71c9490438ad9546ea443bc3c483c7c464ca3daa" translate="yes" xml:space="preserve">
          <source>Why would you sometimes want to use .prop() instead of .attr() where latter is officially adviced?</source>
          <target state="translated">attr()の代わりに .prop()を使うことが公式に推奨されているのに、なぜ時々 .prop()を使いたくなるのでしょうか?</target>
        </trans-unit>
        <trans-unit id="e37b0fad94ebed3dde64b46684fc05b96c9137b6" translate="yes" xml:space="preserve">
          <source>Without having glanced at the new code for either function, I can say with confidence that the confusion has more to do with the difference between HTML attributes and DOM properties, than with the code itself. Hopefully, this cleared some things up for you.</source>
          <target state="translated">どちらの関数の新しいコードも見たことがありませんが、私が自信を持って言えるのは、混乱はコード自体よりも HTML 属性と DOM プロパティの違いに関係しているということです。うまくいけば、これがあなたのためにいくつかのことをクリアにしてくれることを願っています。</target>
        </trans-unit>
        <trans-unit id="152c075b1676a5ac27ea04b056955291d454e755" translate="yes" xml:space="preserve">
          <source>You usually want &lt;code&gt;prop()&lt;/code&gt; rather than &lt;code&gt;attr()&lt;/code&gt;.</source>
          <target state="translated">通常、 &lt;code&gt;attr()&lt;/code&gt; ではなく &lt;code&gt;prop()&lt;/code&gt; が必要です。</target>
        </trans-unit>
        <trans-unit id="e34fdbb1f17c7df690caf1f535da4c4fb1218b42" translate="yes" xml:space="preserve">
          <source>but not always to &lt;code&gt;.prop('name', 'value')&lt;/code&gt;</source>
          <target state="translated">常に &lt;code&gt;.prop('name', 'value')&lt;/code&gt; とは限りません</target>
        </trans-unit>
        <trans-unit id="86dd9b3b3615d935d005fe273e62e37f72affe0a" translate="yes" xml:space="preserve">
          <source>click the button again. Only the &lt;code&gt;prop&lt;/code&gt; checkbox got checked. BANG!</source>
          <target state="translated">もう一度ボタンをクリックします。 &lt;code&gt;prop&lt;/code&gt; チェックボックスだけがチェックされました。 バン！</target>
        </trans-unit>
        <trans-unit id="acfb658e79e289c6c288a97b93c2da918d4cf5cd" translate="yes" xml:space="preserve">
          <source>click the button. Both checkboxes got checked.</source>
          <target state="translated">ボタンをクリックします。両方のチェックボックスにチェックが入りました。</target>
        </trans-unit>
        <trans-unit id="15af69669559f1ff425b62f54484038658836aa8" translate="yes" xml:space="preserve">
          <source>manually checking a checkbox will change &lt;code&gt;.prop('checked')&lt;/code&gt; value, but will not change &lt;code&gt;.attr('checked')&lt;/code&gt; and &lt;code&gt;.prop('defaultChecked')&lt;/code&gt; values</source>
          <target state="translated">チェックボックスを手動でチェックすると、 &lt;code&gt;.prop('checked')&lt;/code&gt; 値は変更されますが、 &lt;code&gt;.attr('checked')&lt;/code&gt; および &lt;code&gt;.prop('defaultChecked')&lt;/code&gt; 値は変更されません</target>
        </trans-unit>
        <trans-unit id="c42bac4e03089f1c935237ae83bea6013eb78106" translate="yes" xml:space="preserve">
          <source>or in this case do they do the same thing?</source>
          <target state="translated">それともこの場合は同じことをしているのでしょうか?</target>
        </trans-unit>
        <trans-unit id="868525fee2e2d32c161d58720c98c3eb0ad0b8d6" translate="yes" xml:space="preserve">
          <source>setting &lt;code&gt;$('#input').prop('defaultChecked', true)&lt;/code&gt; will also change &lt;code&gt;.attr('checked')&lt;/code&gt;, but this will not be visible on an element.</source>
          <target state="translated">&lt;code&gt;$('#input').prop('defaultChecked', true)&lt;/code&gt; &lt;code&gt;.attr('checked')&lt;/code&gt; '）。prop（ ' defaultChecked '、true）を設定すると、 .attr（ 'checked'）も変更されますが、これは要素には表示されません。</target>
        </trans-unit>
        <trans-unit id="03f07b37386fcfa44873be8ffb7b2ac821bdf161" translate="yes" xml:space="preserve">
          <source>so you might get away with it, although it is ugly since it modifies HTML without need.</source>
          <target state="translated">必要なくてもHTMLを修正してしまうので醜いですが、なんとかなるかもしれません。</target>
        </trans-unit>
        <trans-unit id="c8f06fac1cf8956475c3bdee10f6602ddfd0133a" translate="yes" xml:space="preserve">
          <source>solved the problem.</source>
          <target state="translated">問題を解決しました。</target>
        </trans-unit>
        <trans-unit id="a7e958ec3ee21cba1890193ce44733f28069dae9" translate="yes" xml:space="preserve">
          <source>uncheck both checkboxes.</source>
          <target state="translated">両方のチェックボックスのチェックを外します。</target>
        </trans-unit>
        <trans-unit id="e51e055e2293481cbfeb2f8371cd34f1a883ca3d" translate="yes" xml:space="preserve">
          <source>will respond to &lt;code&gt;.attr('name', 'value')&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.attr('name', 'value')&lt;/code&gt; 応答します</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
