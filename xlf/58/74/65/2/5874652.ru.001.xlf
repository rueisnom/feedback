<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/5874652">
    <body>
      <group id="5874652">
        <trans-unit id="27529faa78292723e12b78be76fee503817055c8" translate="yes" xml:space="preserve">
          <source>(Those values are as per most browsers; there's some variation.)</source>
          <target state="translated">(Эти значения соответствуют большинству браузеров;есть некоторая вариация).</target>
        </trans-unit>
        <trans-unit id="d8c77869324090892a374b5da6ebc646584c7b54" translate="yes" xml:space="preserve">
          <source>(see also this fiddle: &lt;a href=&quot;http://jsfiddle.net/maniator/JpUF2/&quot;&gt;http://jsfiddle.net/maniator/JpUF2/&lt;/a&gt;)</source>
          <target state="translated">(см. также эту скрипку: &lt;a href=&quot;http://jsfiddle.net/maniator/JpUF2/&quot;&gt;http://jsfiddle.net/maniator/JpUF2/&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="f3a041313dd0074c8b22542364412d49ef5c1f63" translate="yes" xml:space="preserve">
          <source>* Note: jQuery for this reason has a &lt;code&gt;.val()&lt;/code&gt; method, which internally is equivalent to &lt;code&gt;.prop('value')&lt;/code&gt;</source>
          <target state="translated">* Примечание: по этой причине jQuery имеет метод &lt;code&gt;.val()&lt;/code&gt; , который внутренне эквивалентен &lt;code&gt;.prop('value')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5978c1f4d78b134b3860ed16caa00ee14043471b" translate="yes" xml:space="preserve">
          <source>-Matt</source>
          <target state="translated">-Matt</target>
        </trans-unit>
        <trans-unit id="639b0350d8fe68352621beffe0f71f20d92bd890" translate="yes" xml:space="preserve">
          <source>.prop() vs .attr()</source>
          <target state="translated">.prop()vs .attr()</target>
        </trans-unit>
        <trans-unit id="a6c26f812988b63a3b56823a4833ba71182fd7bc" translate="yes" xml:space="preserve">
          <source>1) A property is in the DOM; an attribute is in the HTML that is
  parsed into the DOM.</source>
          <target state="translated">1)Свойство находится в DOM;атрибут-в HTML,который разбирается в DOM.</target>
        </trans-unit>
        <trans-unit id="d642c4ff8fc5f9f2f75efc4e660f382ca01208e8" translate="yes" xml:space="preserve">
          <source>2) $( elem ).attr( &quot;checked&quot; ) (1.6.1+)   &quot;checked&quot; (String) Will
  change with checkbox state</source>
          <target state="translated">2)$(elem ).attr(&quot;checked&quot;)(1.6.1+)&quot;check&quot; (строка)Будет изменяться при состоянии флажка</target>
        </trans-unit>
        <trans-unit id="e032753c186fbf9039b1425b47ce6ea91f82c55f" translate="yes" xml:space="preserve">
          <source>3) $( elem ).attr( &quot;checked&quot; ) (pre-1.6)    true (Boolean) Changed
  with checkbox state</source>
          <target state="translated">3)$(elem ).attr(&quot;checked&quot;)(до 1.6)true (Boolean)Изменено с помощью состояния флажка</target>
        </trans-unit>
        <trans-unit id="b5ee780d8b6ad6df92f5bfbf694f36bd3c458ad0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-Core/&quot;&gt;DOM2 Core&lt;/a&gt;&lt;em&gt;(obsolete)&lt;/em&gt;</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-Core/&quot;&gt;DOM2 Core&lt;/a&gt; &lt;em&gt;(устарел)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="18fed9354f21dfd209eceae38ae2fa91b88fa74f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-HTML/&quot;&gt;DOM2 HTML&lt;/a&gt;&lt;em&gt;(largely obsolete, see the &lt;a href=&quot;https://www.w3.org/TR/html5/&quot;&gt;HTML spec&lt;/a&gt; instead)&lt;/em&gt;</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-HTML/&quot;&gt;HTML DOM2&lt;/a&gt; &lt;em&gt;(в основном устарел, вместо этого смотрите &lt;a href=&quot;https://www.w3.org/TR/html5/&quot;&gt;спецификацию HTML&lt;/a&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b1ece7bdc9fb31335c49770dfb599570f0fd6959" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-3-Core/&quot;&gt;DOM3 Core&lt;/a&gt;&lt;em&gt;(obsolete)&lt;/em&gt;</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-3-Core/&quot;&gt;DOM3 Core&lt;/a&gt; &lt;em&gt;(устарел)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="00820f5311809bd60ce86dcf4bb9dac7057f9bc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://jsfiddle.net/51xosq29/&quot;&gt;&lt;code&gt;input[name]&lt;/code&gt;&lt;/a&gt;  (thanks &lt;a href=&quot;https://stackoverflow.com/questions/5874652/prop-vs-attr/5876747?noredirect=1#comment99696762_5876747&quot;&gt;@TimDown&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;https://jsfiddle.net/51xosq29/&quot;&gt; &lt;code&gt;input[name]&lt;/code&gt; &lt;/a&gt; (спасибо &lt;a href=&quot;https://stackoverflow.com/questions/5874652/prop-vs-attr/5876747?noredirect=1#comment99696762_5876747&quot;&gt;@TimDown&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="be0e369f7e5632ce24e1fd64eb0f93083a0b7410" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://jsfiddle.net/BobStein/szto3d06/3/&quot;&gt;&lt;code&gt;input[data-custom-attribute]&lt;/code&gt;&lt;/a&gt; (neither will &lt;code&gt;.data('custom-attribute')&lt;/code&gt; affect this selector)</source>
          <target state="translated">&lt;a href=&quot;https://jsfiddle.net/BobStein/szto3d06/3/&quot;&gt; &lt;code&gt;input[data-custom-attribute]&lt;/code&gt; &lt;/a&gt; (ни один &lt;code&gt;.data('custom-attribute')&lt;/code&gt; повлияет на этот селектор)</target>
        </trans-unit>
        <trans-unit id="566dc6d5baa9764f8ec40fd76b9c411ebd6ce7cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.attr('style')&lt;/code&gt; -- returns inline styles for the matched element i.e. &lt;code&gt;&quot;font:arial;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.attr('style')&lt;/code&gt; - возвращает встроенные стили для сопоставленного элемента, т.е. &lt;code&gt;&quot;font:arial;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb68c819c2024b91e163c39f3eca6f33c6ac3b18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.attr('value')&lt;/code&gt; -- returns &lt;code&gt;'hello'&lt;/code&gt; *</source>
          <target state="translated">&lt;code&gt;.attr('value')&lt;/code&gt; - возвращает &lt;code&gt;'hello'&lt;/code&gt; *</target>
        </trans-unit>
        <trans-unit id="21c74ba2e7289909bc7ae9f640096b7e01c8cd0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.attr()&lt;/code&gt; affects all attribute-selectors</source>
          <target state="translated">&lt;code&gt;.attr()&lt;/code&gt; влияет на все атрибуты-селекторы</target>
        </trans-unit>
        <trans-unit id="6b501c142b28d0f0b379b31357901efa1e026f44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.attr()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;.attr()&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="812390339d9c88829c4101c0d04803455dd7969e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.attr&lt;/code&gt; vs &lt;code&gt;.prop&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;.attr&lt;/code&gt; против &lt;code&gt;.prop&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e7613c8ed965d1b3a0f024b3b3c9c4883ac57738" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prop('style')&lt;/code&gt; -- returns an style declaration object i.e. &lt;code&gt;CSSStyleDeclaration&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.prop('style')&lt;/code&gt; - возвращает объект объявления стиля, т.е. &lt;code&gt;CSSStyleDeclaration&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6933d8ccbef2a04e404a48ffafb3a2eb2f1a7aa2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prop('value')&lt;/code&gt; -- returns &lt;code&gt;'i changed the value'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.prop('value')&lt;/code&gt; - возвращает &lt;code&gt;'i changed the value'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3059bf2fd9de7005d02214c5a609065c268d947" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prop()&lt;/code&gt; affects only a few attribute-selectors</source>
          <target state="translated">&lt;code&gt;.prop()&lt;/code&gt; влияет только на несколько селекторов атрибутов</target>
        </trans-unit>
        <trans-unit id="0cafd5be850ea5d2e6750ad07ea27305788174dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prop()&lt;/code&gt; can return any type - string, integer, boolean; while &lt;code&gt;.attr()&lt;/code&gt; always returns a string.</source>
          <target state="translated">&lt;code&gt;.prop()&lt;/code&gt; может возвращать любой тип - string, integer, boolean; в то время как &lt;code&gt;.attr()&lt;/code&gt; всегда возвращает строку.</target>
        </trans-unit>
        <trans-unit id="738d5937696ac0bf4162d421fba6bb14cbebe284" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prop()&lt;/code&gt; is said to be about 2.5 times faster than &lt;code&gt;.attr()&lt;/code&gt;.</source>
          <target state="translated">Говорят, что &lt;code&gt;.prop()&lt;/code&gt; примерно в 2,5 раза быстрее, чем &lt;code&gt;.attr()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16c16404280b5f665f8a7b0455b6611a4362a6cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prop()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;.prop()&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="800496ebe0f03999ca65dee2a5884890c87b687e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attributes&lt;/code&gt; -&amp;gt; HTML</source>
          <target state="translated">&lt;code&gt;attributes&lt;/code&gt; -&amp;gt; HTML</target>
        </trans-unit>
        <trans-unit id="ab6c8f2b8cc052a878aa26e760c7ab6cd1c8ddbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jQuery.attr()&lt;/code&gt;
Get the value of an attribute for the first element in the set of matched elements.</source>
          <target state="translated">&lt;code&gt;jQuery.attr()&lt;/code&gt; Получите значение атрибута для первого элемента в наборе соответствующих элементов.</target>
        </trans-unit>
        <trans-unit id="b15244b3e4fcfe6828da96a4971f9005b9201354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jQuery.prop()&lt;/code&gt;
Get the value of a property for the first element in the set of matched elements.</source>
          <target state="translated">&lt;code&gt;jQuery.prop()&lt;/code&gt; Получите значение свойства для первого элемента в наборе соответствующих элементов.</target>
        </trans-unit>
        <trans-unit id="0853e015e8d5b628ebdb2ba0cf40229aae20b46c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;properties&lt;/code&gt; -&amp;gt; DOM</source>
          <target state="translated">&lt;code&gt;properties&lt;/code&gt; -&amp;gt; DOM</target>
        </trans-unit>
        <trans-unit id="f95f321be5b63fb819b3df5cbafde5b9229c97ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;$('input').attr('blah')&lt;/code&gt;&lt;/strong&gt;: returns &lt;code&gt;'apple'&lt;/code&gt; eh? Why not &quot;pear&quot; as this was set last on that element. Because the property was changed on the input attribute, not the DOM input element itself -- they basically almost work independently of each other.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;$('input').attr('blah')&lt;/code&gt; &lt;/strong&gt; : возвращает &lt;code&gt;'apple'&lt;/code&gt; , а? Почему бы не &quot;груша&quot;, как это было установлено последним на этом элементе. Поскольку свойство было изменено для входного атрибута, а не для самого входного элемента DOM - они практически работают независимо друг от друга.</target>
        </trans-unit>
        <trans-unit id="8ab9ec80782e4a60196917197d70a614bc39ce68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;$('input').attr('blah')&lt;/code&gt;&lt;/strong&gt;: returns &lt;code&gt;'hello'&lt;/code&gt; as expected. No suprises here.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;$('input').attr('blah')&lt;/code&gt; &lt;/strong&gt; : возвращает &lt;code&gt;'hello'&lt;/code&gt; как и ожидалось. Здесь нет сюрпризов.</target>
        </trans-unit>
        <trans-unit id="574269348a3552e05b5eeae1c4434783c9d94a28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;$('input').prop('blah')&lt;/code&gt;&lt;/strong&gt;: returns &lt;code&gt;'pear'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;$('input').prop('blah')&lt;/code&gt; &lt;/strong&gt; : возвращает &lt;code&gt;'pear'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e836d07931f373a649197b208d31fd2d78aaba9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;$('input').prop('blah')&lt;/code&gt;&lt;/strong&gt;: returns &lt;code&gt;undefined&lt;/code&gt; -- because it's trying to do &lt;code&gt;[HTMLInputElement].blah&lt;/code&gt; -- and no such property on that DOM object exists. It only exists in the scope as an attribute of that element i.e. &lt;code&gt;[HTMLInputElement].getAttribute('blah')&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;$('input').prop('blah')&lt;/code&gt; &lt;/strong&gt; : возвращает &lt;code&gt;undefined&lt;/code&gt; - потому что он пытается сделать &lt;code&gt;[HTMLInputElement].blah&lt;/code&gt; - и такого свойства для этого объекта DOM не существует. Он существует только в области видимости как атрибут этого элемента, т.е. &lt;code&gt;[HTMLInputElement].getAttribute('blah')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d433fb2fcdb5f942cd245ff423f01d43c9283185" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Dirty checkedness&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Грязная проверка&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8c1b2599a09f6f049ab73cb5993a0a53350859e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Don't mess up.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Не путайся&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9bcef67850cc1ae25bb206c4581ec00fa383a09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Original answer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Оригинальный ответ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="10b56c006d51020faaa60998e564b97a491898eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Purpose:&lt;/strong&gt;
Allows markup to have data associated with it for events, rendering, and other purposes.</source>
          <target state="translated">&lt;strong&gt;Цель:&lt;/strong&gt; Позволяет разметке иметь связанные с ней данные для событий, рендеринга и других целей.</target>
        </trans-unit>
        <trans-unit id="bc5c519817a7114a9fe213be36e6e05e67010dce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Purpose:&lt;/strong&gt;
Gives access to properties that belong to element nodes. These properties are similar to attributes, but are only accessible through JavaScript. This is an important difference that helps clarify the role of DOM properties. &lt;strong&gt;Please note that attributes are completely different from properties&lt;/strong&gt;, as this event handler assignment is useless and won't receive the event (body doesn't have an onload event, only an onload attribute).</source>
          <target state="translated">&lt;strong&gt;Назначение:&lt;/strong&gt; Предоставляет доступ к свойствам, принадлежащим узлам элемента. Эти свойства похожи на атрибуты, но доступны только через JavaScript. Это важное различие, которое помогает прояснить роль свойств DOM. &lt;strong&gt;Обратите внимание, что атрибуты полностью отличаются от свойств&lt;/strong&gt; , так как это назначение обработчика событий бесполезно и не получит событие (тело не имеет события onload, только атрибут onload).</target>
        </trans-unit>
        <trans-unit id="70f5c76a3b222c7cb94ada1a8f4c7ecc94710921" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Rule of thumb is&lt;/strong&gt;: &lt;code&gt;.prop()&lt;/code&gt; method should be used for boolean attributes/properties and for properties which do not exist in html
  (such as window.location). All other attributes (ones you can see in
  the html) can and should continue to be manipulated with the &lt;code&gt;.attr()&lt;/code&gt;
  method. (&lt;a href=&quot;http://blog.jquery.com/2011/05/10/jquery-1-6-1-rc-1-released/&quot;&gt;http://blog.jquery.com/2011/05/10/jquery-1-6-1-rc-1-released/&lt;/a&gt;)</source>
          <target state="translated">&lt;strong&gt;Практическое правило&lt;/strong&gt; : метод &lt;code&gt;.prop()&lt;/code&gt; должен использоваться для логических атрибутов / свойств и для свойств, которые не существуют в html (например, window.location). Все остальные атрибуты (те, которые вы можете увидеть в html) можно и нужно продолжать обрабатывать &lt;code&gt;.attr()&lt;/code&gt; . ( &lt;a href=&quot;http://blog.jquery.com/2011/05/10/jquery-1-6-1-rc-1-released/&quot;&gt;http://blog.jquery.com/2011/05/10/jquery-1-6-1-rc-1-released/&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="7d993eba3ceb090d6d6942b6a5ab74bb8dbc2fc7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See a fiddle demonstrating the difference:&lt;/strong&gt;&lt;a href=&quot;http://jsfiddle.net/garreh/uLQXc/&quot;&gt;http://jsfiddle.net/garreh/uLQXc/&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Смотрите скрипку, демонстрирующую разницу:&lt;/strong&gt; &lt;a href=&quot;http://jsfiddle.net/garreh/uLQXc/&quot;&gt;http://jsfiddle.net/garreh/uLQXc/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="284c0cc1c16634ee278d62d9da4d70563394d278" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TL;DR&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;TL;DR&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a648cd0606cca5d79438d4f156e8c36af2fbb7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;UPDATE&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="73100dbc2d73aa3af91508e0cef8994abcc733ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update 1 November 2012&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Обновление 1 ноября 2012&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f507894dd7bd93edc0b29a670c396862522c2487" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Visualization:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Visualization:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b3a0713561aad9f0c3d1af0a4b05363c9be1e08b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;attributes&lt;/strong&gt; are in your HTML &lt;em&gt;text document/file&lt;/em&gt; (== imagine this is the result of your html markup parsed), whereas</source>
          <target state="translated">&lt;strong&gt;атрибуты&lt;/strong&gt; находятся в вашем &lt;em&gt;текстовом документе / файле&lt;/em&gt; HTML (== представьте, что это результат анализа вашей разметки html), тогда как</target>
        </trans-unit>
        <trans-unit id="94a8362984a2085d00aaeb567b4f9fcbb8bff3cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;edit&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;edit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b172629d00ea5432a115d52722c5ec33f3334809" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;properties&lt;/strong&gt; are in HTML &lt;em&gt;DOM tree&lt;/em&gt; (== basically an actual property of some object in JS sense).</source>
          <target state="translated">&lt;strong&gt;свойства&lt;/strong&gt; находятся в &lt;em&gt;дереве DOM&lt;/em&gt; HTML (== в основном фактическое свойство некоторого объекта в смысле JS).</target>
        </trans-unit>
        <trans-unit id="e76d9ec4cc057c47cdaf896af3b06208e58b66b7" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;property&lt;/em&gt; is the current state of the input element. An &lt;em&gt;attribute&lt;/em&gt; is the default value.</source>
          <target state="translated">&lt;em&gt;Свойство&lt;/em&gt; - это текущее состояние элемента ввода. &lt;em&gt;Атрибут&lt;/em&gt; является значением по умолчанию.</target>
        </trans-unit>
        <trans-unit id="2da03762e7d09e4991bcadc866dc8dba4dfaf6fe" translate="yes" xml:space="preserve">
          <source>A DOM element is an object, a thing in memory. Like most objects in OOP, it has &lt;em&gt;properties&lt;/em&gt;. It also, separately, has a map of the attributes defined on the element (usually coming from the markup that the browser read to create the element). Some of the element's &lt;em&gt;properties&lt;/em&gt; get their &lt;em&gt;initial&lt;/em&gt; values from &lt;em&gt;attributes&lt;/em&gt; with the same or similar names (&lt;code&gt;value&lt;/code&gt; gets its initial value from the &quot;value&quot; attribute; &lt;code&gt;href&lt;/code&gt; gets its initial value from the &quot;href&quot; attribute, but it's not exactly the same value; &lt;code&gt;className&lt;/code&gt; from the &quot;class&quot; attribute). Other properties get their initial values in other ways: For instance, the &lt;code&gt;parentNode&lt;/code&gt; property gets its value based on what its parent element is; an element always has a &lt;code&gt;style&lt;/code&gt; property, whether it has a &quot;style&quot; attribute or not.</source>
          <target state="translated">Элемент DOM - это объект, вещь в памяти. Как и большинство объектов в ООП, у него есть &lt;em&gt;свойства&lt;/em&gt; . Он также отдельно имеет карту атрибутов, определенных для элемента (обычно исходящих из разметки, которую браузер считал для создания элемента). Некоторые &lt;em&gt;свойства&lt;/em&gt; элемента получают свои &lt;em&gt;начальные&lt;/em&gt; значения из &lt;em&gt;атрибутов&lt;/em&gt; с одинаковыми или похожими именами ( &lt;code&gt;value&lt;/code&gt; получает свое начальное значение из атрибута &amp;laquo;значение&amp;raquo;; &lt;code&gt;href&lt;/code&gt; получает свое начальное значение из атрибута &amp;laquo;href&amp;raquo;, но это не совсем то же самое значение; &lt;code&gt;className&lt;/code&gt; из атрибута &quot;class&quot;). Другие свойства получают свои начальные значения другими способами: например, свойство &lt;code&gt;parentNode&lt;/code&gt; получает свое значение на основе того, что является его родительским элементом; элемент всегда имеет свойство &lt;code&gt;style&lt;/code&gt; , независимо от того, имеет ли он атрибут &amp;laquo;стиль&amp;raquo; или нет.</target>
        </trans-unit>
        <trans-unit id="5f5d32344daee4e4e25e443866211feb265f1f80" translate="yes" xml:space="preserve">
          <source>A property can contain things of different types. An attribute can only contain strings</source>
          <target state="translated">Собственность может содержать вещи разных типов.Атрибут может содержать только строки</target>
        </trans-unit>
        <trans-unit id="cf45643aa7d4e0df0d09f581ba6e1247119735f0" translate="yes" xml:space="preserve">
          <source>A property is in the DOM; an attribute is in the HTML that is parsed into the DOM.</source>
          <target state="translated">Свойство находится в DOM;атрибут-в HTML,который разбирается в DOM.</target>
        </trans-unit>
        <trans-unit id="c25569031ce570c9745dc93d4fabf1870a455026" translate="yes" xml:space="preserve">
          <source>All is in &lt;a href=&quot;https://api.jquery.com/prop/&quot;&gt;the doc&lt;/a&gt;:</source>
          <target state="translated">Все есть в &lt;a href=&quot;https://api.jquery.com/prop/&quot;&gt;док&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="09a5cd01145345650843d767f10361ae5437df2e" translate="yes" xml:space="preserve">
          <source>Also some of difference when accessing &lt;code&gt;checkbox&lt;/code&gt; value and &lt;code&gt;href&lt;/code&gt;
with &lt;code&gt;attr()&lt;/code&gt; and &lt;code&gt;prop()&lt;/code&gt; as thing change with DOM output with
&lt;code&gt;prop()&lt;/code&gt; as full link from &lt;code&gt;origin&lt;/code&gt; and &lt;code&gt;Boolean&lt;/code&gt; value for checkbox
&lt;code&gt;(pre-1.6)&lt;/code&gt;</source>
          <target state="translated">Также есть некоторые различия при доступе к значению &lt;code&gt;checkbox&lt;/code&gt; и &lt;code&gt;href&lt;/code&gt; с помощью &lt;code&gt;attr()&lt;/code&gt; и &lt;code&gt;prop()&lt;/code&gt; при изменении объекта с выходом DOM при помощи &lt;code&gt;prop()&lt;/code&gt; качестве полной ссылки из &lt;code&gt;origin&lt;/code&gt; и &lt;code&gt;Boolean&lt;/code&gt; значения для чекбокса &lt;code&gt;(pre-1.6)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd97f97ddf8b59935214e336be58383c2177cbf1" translate="yes" xml:space="preserve">
          <source>And here is a table that shows where &lt;code&gt;.prop()&lt;/code&gt; is preferred (even though &lt;code&gt;.attr()&lt;/code&gt; can still be used).</source>
          <target state="translated">И вот таблица, которая показывает, где &lt;code&gt;.prop()&lt;/code&gt; является предпочтительным (хотя &lt;code&gt;.attr()&lt;/code&gt; все еще может использоваться).</target>
        </trans-unit>
        <trans-unit id="6445c56b5b17e9c7bfa24988eb6aee150e4fc92c" translate="yes" xml:space="preserve">
          <source>And if I &lt;em&gt;do&lt;/em&gt; have to switch to using &lt;code&gt;prop()&lt;/code&gt;, all the old &lt;code&gt;attr()&lt;/code&gt; calls will break if i switch to 1.6?</source>
          <target state="translated">И если мне придется переключиться на использование &lt;code&gt;prop()&lt;/code&gt; , все старые вызовы &lt;code&gt;attr()&lt;/code&gt; прервутся, если я переключусь на 1.6?</target>
        </trans-unit>
        <trans-unit id="a6a42570111c5d4aff3c6fcf4e73f990a9735bb1" translate="yes" xml:space="preserve">
          <source>As Tim said, the &lt;strong&gt;vast majority&lt;/strong&gt; of the time, we want to be working with properties. Partially that's because their values (even their names) tend to be more consistent across browsers. We mostly only want to work with attributes when there is no property related to it (custom attributes), or when we know that for that particular attribute, the attribute and the property are not 1:1 (as with &lt;code&gt;href&lt;/code&gt; and &quot;href&quot; above).</source>
          <target state="translated">Как сказал Тим, в &lt;strong&gt;подавляющем большинстве&lt;/strong&gt; случаев мы хотим работать со свойствами. Частично это потому, что их значения (даже их имена) имеют тенденцию быть более согласованными в разных браузерах. В основном мы хотим работать с атрибутами только в том случае, если с ним нет связанных свойств (пользовательских атрибутов) или когда мы знаем, что для этого конкретного атрибута атрибут и свойство не равны 1: 1 (как в случае с &lt;code&gt;href&lt;/code&gt; и &quot;href&quot; выше) ).</target>
        </trans-unit>
        <trans-unit id="4e060d177f7f8f83b9e02ce1f3471fc751288f37" translate="yes" xml:space="preserve">
          <source>As an example of how properties are simpler to deal with than attributes, consider a checkbox that is initially checked. Here are two possible pieces of valid HTML to do this:</source>
          <target state="translated">В качестве примера того,с какими свойствами проще работать,чем с атрибутами,рассмотрим флажок,который изначально установлен.Вот два возможных фрагмента правильного HTML для этого:</target>
        </trans-unit>
        <trans-unit id="f4a05fba98dd2bad96c67f09e72bd858c36334c0" translate="yes" xml:space="preserve">
          <source>Attributes are returned in string form and can be inconsistent from browser to browser. However, they can be vital in some situations. As exemplified above, IE 8 Quirks Mode (and below) expects the name of a DOM property in get/set/removeAttribute instead of the attribute name. This is one of many reasons why it's important to know the difference.</source>
          <target state="translated">Атрибуты возвращаются в строковой форме и могут быть несовместимы в разных браузерах.Однако в некоторых ситуациях они могут быть жизненно важными.Как показано выше,IE 8 Quirks Mode (и ниже)ожидает имя свойства DOM в getetremoveAttribute вместо имени атрибута.Это одна из многих причин,по которой важно знать разницу.</target>
        </trans-unit>
        <trans-unit id="6fce263de5a0bfede52d6d9329411cb1cf0bdede" translate="yes" xml:space="preserve">
          <source>Before jQuery 1.6 , the &lt;code&gt;attr()&lt;/code&gt; method &lt;strong&gt;&lt;em&gt;sometimes&lt;/em&gt;&lt;/strong&gt; took property values into account when retrieving attributes, this caused rather inconsistent behavior.</source>
          <target state="translated">До jQuery 1.6 метод &lt;code&gt;attr()&lt;/code&gt; &lt;strong&gt;&lt;em&gt;иногда&lt;/em&gt;&lt;/strong&gt; учитывал значения свойств при получении атрибутов, что вызывало довольно противоречивое поведение.</target>
        </trans-unit>
        <trans-unit id="1429903df65b0d2b7f1c09b0f88004faec915cdf" translate="yes" xml:space="preserve">
          <source>CSS selector &lt;code&gt;[name=value]&lt;/code&gt;</source>
          <target state="translated">CSS селектор &lt;code&gt;[name=value]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a4623e286783700c82976ca61e6f2d80d6f97e22" translate="yes" xml:space="preserve">
          <source>Custom attributes would include, for instance, any &lt;code&gt;data-xyz&lt;/code&gt; attributes you might put on elements to provide meta-data to your code (now that that's valid as of HTML5, as long as you stick to the &lt;code&gt;data-&lt;/code&gt; prefix). (Recent versions of jQuery give you access to &lt;code&gt;data-xyz&lt;/code&gt; elements via the &lt;code&gt;data&lt;/code&gt; function, but that function is &lt;strong&gt;not&lt;/strong&gt; just an accessor for &lt;code&gt;data-xyz&lt;/code&gt; attributes [it does both more and less than that]; unless you actually need its features, I'd use the &lt;code&gt;attr&lt;/code&gt; function to interact with &lt;code&gt;data-xyz&lt;/code&gt; attribute.)</source>
          <target state="translated">Настраиваемые атрибуты будут включать, например, любые атрибуты &lt;code&gt;data-xyz&lt;/code&gt; , которые вы можете добавить к элементам для предоставления метаданных в свой код (теперь это действительно с HTML5, если вы придерживаетесь префикса &lt;code&gt;data-&lt;/code&gt; ). (Последние версии jQuery предоставляют вам доступ к элементам &lt;code&gt;data-xyz&lt;/code&gt; через функцию &lt;code&gt;data&lt;/code&gt; , но эта функция является &lt;strong&gt;не&lt;/strong&gt; просто средством доступа к атрибутам &lt;code&gt;data-xyz&lt;/code&gt; [она делает больше и меньше этого]; если вам не нужны ее возможности, я использовать функцию &lt;code&gt;attr&lt;/code&gt; для взаимодействия с атрибутом &lt;code&gt;data-xyz&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="20a3cf47f337d147487348ae45f88036b647b101" translate="yes" xml:space="preserve">
          <source>DOM Element Properties, Mozilla Dev Center</source>
          <target state="translated">Свойства элемента DOM,Mozilla Dev Center</target>
        </trans-unit>
        <trans-unit id="540c4a856184492e52c38c3dd3255fe73fece8f6" translate="yes" xml:space="preserve">
          <source>DOM Properties</source>
          <target state="translated">Свойства ДОМ</target>
        </trans-unit>
        <trans-unit id="12d94716355fb3748af185f5bd1d4f4c331ea0b5" translate="yes" xml:space="preserve">
          <source>DOM4</source>
          <target state="translated">DOM4</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="54a7bbc65e003d91e53398eed689f5037b38195e" translate="yes" xml:space="preserve">
          <source>Example: Changing the &lt;code&gt;class&lt;/code&gt; attribute of a tag will change the &lt;code&gt;className&lt;/code&gt; property of that tag in the DOM.
If you have no attribute on a tag, you still have the corresponding DOM property with an empty or a default value.</source>
          <target state="translated">Пример: изменение атрибута &lt;code&gt;class&lt;/code&gt; тега изменит свойство &lt;code&gt;className&lt;/code&gt; этого тега в DOM. Если у вас нет атрибута для тега, у вас все еще есть соответствующее свойство DOM с пустым значением или значением по умолчанию.</target>
        </trans-unit>
        <trans-unit id="8689d5cce98d1d5e74d8c755bbc46ad5f337575f" translate="yes" xml:space="preserve">
          <source>Example: While your tag has no &lt;code&gt;class&lt;/code&gt; attribute, the DOM property &lt;code&gt;className&lt;/code&gt; does exist with a empty string value.</source>
          <target state="translated">Пример: хотя у вашего тега нет атрибута &lt;code&gt;class&lt;/code&gt; , свойство DOM &lt;code&gt;className&lt;/code&gt; существует с пустым строковым значением.</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Расширить фрагмент</target>
        </trans-unit>
        <trans-unit id="019d672f066237686e3bb2aa99d82366bb648cd1" translate="yes" xml:space="preserve">
          <source>For other attributes like &lt;code&gt;checked=&quot;checked&quot;&lt;/code&gt; on &lt;code&gt;input type=&quot;checkbox&quot;&lt;/code&gt;, things break, because once you click on it, it becomes dirty, and then adding or removing the &lt;code&gt;checked=&quot;checked&quot;&lt;/code&gt; content attribute &lt;strong&gt;does not toggle checkedness anymore&lt;/strong&gt;.</source>
          <target state="translated">Что касается других атрибутов, таких как &lt;code&gt;checked=&quot;checked&quot;&lt;/code&gt; на &lt;code&gt;input type=&quot;checkbox&quot;&lt;/code&gt; , то все разрушается, потому что если вы щелкнете по нему, он станет грязным, а затем добавление или удаление атрибута содержимого &lt;code&gt;checked=&quot;checked&quot;&lt;/code&gt; &lt;strong&gt;больше не переключает checkness&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="321c30a1e552571a7b88ac0afbbf564dfac04d6c" translate="yes" xml:space="preserve">
          <source>For some attributes  like &lt;code&gt;disabled&lt;/code&gt; on &lt;code&gt;button&lt;/code&gt;, adding or removing the content attribute &lt;code&gt;disabled=&quot;disabled&quot;&lt;/code&gt; always toggles the property (called IDL attribute in HTML5) because &lt;a href=&quot;http://www.w3.org/TR/html5/forms.html#attr-fe-disabled&quot;&gt;http://www.w3.org/TR/html5/forms.html#attr-fe-disabled&lt;/a&gt; says:</source>
          <target state="translated">Для некоторых атрибутов, таких как &lt;code&gt;disabled&lt;/code&gt; для &lt;code&gt;button&lt;/code&gt; , добавление или удаление атрибута содержимого &lt;code&gt;disabled=&quot;disabled&quot;&lt;/code&gt; всегда переключает свойство (называемое атрибутом IDL в HTML5), поскольку &lt;a href=&quot;http://www.w3.org/TR/html5/forms.html#attr-fe-disabled&quot;&gt;http://www.w3.org/TR/html5/forms.html#attr -fe-инвалид&lt;/a&gt; говорит:</target>
        </trans-unit>
        <trans-unit id="ae43a9ec11eec2526a860a66aa9f96c06dbde4a2" translate="yes" xml:space="preserve">
          <source>Further detail</source>
          <target state="translated">Дополнительная информация</target>
        </trans-unit>
        <trans-unit id="99f8b7321ea9542a8c8fb617b4ecd7ce9217af59" translate="yes" xml:space="preserve">
          <source>Gary Hole answer is very relevant to solve the problem if the code is written in such way</source>
          <target state="translated">Ответ Гэри Хоула очень важен для решения проблемы,если код написан таким образом.</target>
        </trans-unit>
        <trans-unit id="acfeca83f757b07fb0be4f21e58de802f6a16840" translate="yes" xml:space="preserve">
          <source>Gently reminder about using &lt;code&gt;prop()&lt;/code&gt;, example:</source>
          <target state="translated">Осторожно напоминание об использовании &lt;code&gt;prop()&lt;/code&gt; , пример:</target>
        </trans-unit>
        <trans-unit id="40574c2d227df28b2cea9836bdad6eea3a247fdb" translate="yes" xml:space="preserve">
          <source>Get the value of a &lt;strong&gt;property&lt;/strong&gt; for the first element in the set of matched elements.</source>
          <target state="translated">Получить значение &lt;strong&gt;свойства&lt;/strong&gt; для первого элемента в наборе соответствующих элементов.</target>
        </trans-unit>
        <trans-unit id="ddc85aca5b88f9ae99fbaa02e9207c6473fcc9ac" translate="yes" xml:space="preserve">
          <source>Get the value of an &lt;strong&gt;attribute&lt;/strong&gt; for the first element in the set of matched elements.</source>
          <target state="translated">Получить значение &lt;strong&gt;атрибута&lt;/strong&gt; для первого элемента в наборе соответствующих элементов.</target>
        </trans-unit>
        <trans-unit id="53f8409e81e8e14952f180db86f564b494978cae" translate="yes" xml:space="preserve">
          <source>Getting a HTML attribute that doesn't sync with a DOM property, e.g. get the &quot;original value&quot; of a standard HTML attribute, like &lt;code&gt;&amp;lt;input value=&quot;abc&quot;&amp;gt;.&lt;/code&gt;</source>
          <target state="translated">Получение атрибута HTML, который не синхронизируется со свойством DOM, например, получение &amp;laquo;исходного значения&amp;raquo; стандартного атрибута HTML, например &lt;code&gt;&amp;lt;input value=&quot;abc&quot;&amp;gt;.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="234ee2f777ce32d1dbbcb79cda2e3e1d8f9c2992" translate="yes" xml:space="preserve">
          <source>Getting a custom HTML attribute (since it's not synced with a DOM property).</source>
          <target state="translated">Получение пользовательского HTML атрибута (так как он не синхронизирован со свойством DOM).</target>
        </trans-unit>
        <trans-unit id="c3b589d0b978663a06c8b18130a6c7a11c3253e0" translate="yes" xml:space="preserve">
          <source>Gives the updated values of elements which is modified via javascript/jquery</source>
          <target state="translated">Дает обновленные значения элементов,которые модифицируются с помощью javascriptjquery</target>
        </trans-unit>
        <trans-unit id="dc5e77301be5b0dc26b66f85672c13318ad75bc2" translate="yes" xml:space="preserve">
          <source>Gives you the value of element as it was defined in the html on page load</source>
          <target state="translated">Дает значение элемента,как оно было определено в html при загрузке страницы</target>
        </trans-unit>
        <trans-unit id="c83fb96d107f191cb169da811d2b409263026eb9" translate="yes" xml:space="preserve">
          <source>HTML Attributes</source>
          <target state="translated">атрибуты HTML</target>
        </trans-unit>
        <trans-unit id="a8f2abfc12c0034cce7a586f0553589a8fa15be2" translate="yes" xml:space="preserve">
          <source>HTML Attributes,
Mozilla Dev Center</source>
          <target state="translated">HTML атрибуты,Mozilla Dev Center</target>
        </trans-unit>
        <trans-unit id="faefd9c84be9b5391376db67824b3adfc8adfb5b" translate="yes" xml:space="preserve">
          <source>HTML: &lt;code&gt;&amp;lt;textarea id=&quot;test&quot; value=&quot;foo&quot;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/code&gt;</source>
          <target state="translated">HTML: &lt;code&gt;&amp;lt;textarea id=&quot;test&quot; value=&quot;foo&quot;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40eb91649b65a0f72ca0f423af7c83377d4b81c4" translate="yes" xml:space="preserve">
          <source>Here's an issue I didn't see in the other answers.</source>
          <target state="translated">Вот вопрос,которого я не видел в других ответах.</target>
        </trans-unit>
        <trans-unit id="9d10a3f1f61230d22097f06116feecbf2db7dce0" translate="yes" xml:space="preserve">
          <source>Here, you'll notice a list of properties under the &quot;DOM&quot; tab in Firebug. These are DOM properties. You'll immediately notice quite a few of them, as you'll have used them before without knowing it. Their values are what you'll be receiving through JavaScript.</source>
          <target state="translated">Здесь вы заметите список свойств во вкладке &quot;DOM&quot; в Firebug.Это свойства DOM.Вы сразу же заметите довольно много из них,так как вы использовали их раньше,не зная об этом.Их значения-это то,что вы получите через JavaScript.</target>
        </trans-unit>
        <trans-unit id="69f641a37da6c4415bd790789bb766184eba1756" translate="yes" xml:space="preserve">
          <source>I think &lt;a href=&quot;https://stackoverflow.com/questions/5874652/prop-vs-attr/5876747#5876747&quot;&gt;Tim said it quite well&lt;/a&gt;, but let's step back:</source>
          <target state="translated">Я думаю, что &lt;a href=&quot;https://stackoverflow.com/questions/5874652/prop-vs-attr/5876747#5876747&quot;&gt;Тим сказал это хорошо&lt;/a&gt; , но давайте сделаем шаг назад:</target>
        </trans-unit>
        <trans-unit id="fed0c03c46172573702e64a56ca6394261bb1d23" translate="yes" xml:space="preserve">
          <source>I'll summarize the main issues:</source>
          <target state="translated">Я подведу итог основным вопросам:</target>
        </trans-unit>
        <trans-unit id="e365ffe1c8810b64d991b3f8224495768ce18106" translate="yes" xml:space="preserve">
          <source>If you change an attribute, the change will be reflected in the DOM (sometimes with a different name).</source>
          <target state="translated">Если вы измените атрибут,изменение будет отражено в DOM (иногда с другим именем).</target>
        </trans-unit>
        <trans-unit id="7c58b193b79163df01da5be9e079a6e160871211" translate="yes" xml:space="preserve">
          <source>If you change the one, the other will be changed by a controller, and vice versa.
This controller is not in jQuery, but in the browser's native code.</source>
          <target state="translated">Если вы измените одно,то другое будет изменено контроллером,и наоборот.Этот контроллер находится не в jQuery,а в родном коде браузера.</target>
        </trans-unit>
        <trans-unit id="fb2649600de350b8e935cfc0ce3dd919260347eb" translate="yes" xml:space="preserve">
          <source>If you're a jQuery developer and are confused by this whole business about properties and attributes, you need to take a step back and learn a little about it, since jQuery is no longer trying so hard to shield you from this stuff. For the authoritative but somewhat dry word on the subject, there's the specs: &lt;a href=&quot;http://www.w3.org/TR/dom/&quot;&gt;DOM4&lt;/a&gt;, &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-HTML/&quot;&gt;HTML DOM&lt;/a&gt;, &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-Core&quot;&gt;DOM Level 2&lt;/a&gt;, &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-3-Core/&quot;&gt;DOM Level 3&lt;/a&gt;. Mozilla's DOM documentation is valid for most modern browsers and is easier to read than the specs, so you may find their &lt;a href=&quot;https://developer.mozilla.org/en/gecko_dom_reference&quot;&gt;DOM reference&lt;/a&gt; helpful. There's a &lt;a href=&quot;https://developer.mozilla.org/en/DOM/element#Properties&quot;&gt;section on element properties&lt;/a&gt;.</source>
          <target state="translated">Если вы являетесь разработчиком jQuery и все это дело смущает свойства и атрибуты, вам нужно сделать шаг назад и немного узнать об этом, поскольку jQuery больше не пытается так сильно оградить вас от этого. Для авторитетного, но несколько сухого слова по теме, есть спецификации: &lt;a href=&quot;http://www.w3.org/TR/dom/&quot;&gt;DOM4&lt;/a&gt; , &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-HTML/&quot;&gt;HTML DOM&lt;/a&gt; , &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-Core&quot;&gt;DOM Level 2&lt;/a&gt; , &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-3-Core/&quot;&gt;DOM Level 3&lt;/a&gt; . Документация Mozilla по DOM действительна для большинства современных браузеров и ее легче читать, чем спецификации, поэтому вы можете найти их &lt;a href=&quot;https://developer.mozilla.org/en/gecko_dom_reference&quot;&gt;справку по DOM&lt;/a&gt; полезной. Там есть &lt;a href=&quot;https://developer.mozilla.org/en/DOM/element#Properties&quot;&gt;раздел о свойствах элемента&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1187e97a31a5a880515a8c66d3eb267da92fff49" translate="yes" xml:space="preserve">
          <source>If you've only ever used jQuery and not the DOM directly, this could be a confusing change, although it is definitely an improvement conceptually. Not so good for the bazillions of sites using jQuery that will break as a result of this change though.</source>
          <target state="translated">Если вы когда-либо использовали только jQuery,а не DOM напрямую,это может быть запутанным изменением,хотя это определенно улучшение концептуально.Не очень хорошо для миллиардов сайтов,использующих jQuery,которые сломаются в результате этого изменения.</target>
        </trans-unit>
        <trans-unit id="c06d2461f9b3e13fae850da05b3a7abc18dfd83a" translate="yes" xml:space="preserve">
          <source>Importantly, many of them are synced (if you update &lt;code&gt;class&lt;/code&gt; property, &lt;code&gt;class&lt;/code&gt; attribute in html will also be updated; and otherwise). &lt;strong&gt;But&lt;/strong&gt; some attributes may be synced to unexpected properties - eg, &lt;strong&gt;attribute&lt;/strong&gt;&lt;code&gt;checked&lt;/code&gt; corresponds to &lt;strong&gt;property&lt;/strong&gt;&lt;code&gt;defaultChecked&lt;/code&gt;, so that</source>
          <target state="translated">Важно отметить, что многие из них синхронизируются (если вы обновите свойство &lt;code&gt;class&lt;/code&gt; атрибут класса в html также будет обновлен; и в противном случае). &lt;strong&gt;Но&lt;/strong&gt; некоторые атрибуты могут быть синхронизированы с неожиданными свойствами - например, &lt;code&gt;checked&lt;/code&gt; &lt;strong&gt;атрибут&lt;/strong&gt; соответствует &lt;strong&gt;свойству&lt;/strong&gt; &lt;code&gt;defaultChecked&lt;/code&gt; , так что</target>
        </trans-unit>
        <trans-unit id="7e1f21829f0ba43c086e6a30665974eca8d453f8" translate="yes" xml:space="preserve">
          <source>In earlier versions of jQuery, this returns an empty string. In 1.6, it returns the proper value, &lt;code&gt;foo&lt;/code&gt;.</source>
          <target state="translated">В более ранних версиях jQuery это возвращает пустую строку. В 1.6 он возвращает правильное значение, &lt;code&gt;foo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="50ae1a031b220ae92290c7e7ff3de059ded39d84" translate="yes" xml:space="preserve">
          <source>In jQuery 1.6, this unambiguously becomes</source>
          <target state="translated">В jQuery 1.6,это однозначно становится</target>
        </trans-unit>
        <trans-unit id="419cb6f1b0420b9fdf3f154d869f672f2740a4a0" translate="yes" xml:space="preserve">
          <source>In the majority of cases, &lt;code&gt;prop()&lt;/code&gt; does what &lt;code&gt;attr()&lt;/code&gt; used to do. Replacing calls to &lt;code&gt;attr()&lt;/code&gt; with &lt;code&gt;prop()&lt;/code&gt; in your code will generally work.</source>
          <target state="translated">В большинстве случаев, &lt;code&gt;prop()&lt;/code&gt; делает то, что раньше делал &lt;code&gt;attr()&lt;/code&gt; . Замена вызовов &lt;code&gt;attr()&lt;/code&gt; на &lt;code&gt;prop()&lt;/code&gt; в вашем коде, как правило, будет работать.</target>
        </trans-unit>
        <trans-unit id="6635c8bd4a2761655e3102eafb65d93077b5ffd7" translate="yes" xml:space="preserve">
          <source>It's just the distinction between HTML attributes and DOM objects that causes a confusion. For those that are comfortable acting on the DOM elements native properties such a &lt;code&gt;this.src&lt;/code&gt;&lt;code&gt;this.value&lt;/code&gt;&lt;code&gt;this.checked&lt;/code&gt; etc, &lt;code&gt;.prop&lt;/code&gt; is a very warm welcome to the family. For others, it's just an added layer of confusion. Let's clear that up.</source>
          <target state="translated">Это просто различие между атрибутами HTML и объектами DOM, которое вызывает путаницу. Для тех, &lt;code&gt;this.src&lt;/code&gt; &lt;code&gt;this.value&lt;/code&gt; &lt;code&gt;this.checked&lt;/code&gt; нативными свойствами элементов DOM, такими как this.src this.value this.checked и т. Д., &lt;code&gt;.prop&lt;/code&gt; - очень теплый прием в семье. Для других это просто дополнительный слой путаницы. Давайте проясним это.</target>
        </trans-unit>
        <trans-unit id="3877f5277b402e4125f4bb8aa688a3baeafba828" translate="yes" xml:space="preserve">
          <source>It's not obvious what the correct way to check or uncheck the checkbox is using the &lt;code&gt;checked&lt;/code&gt; attribute</source>
          <target state="translated">Не очевидно, что правильный способ установить или снять флажок с помощью атрибута &lt;code&gt;checked&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="04ffc11d79285baea96ffc399e2c192b92159824" translate="yes" xml:space="preserve">
          <source>JavaScript: &lt;code&gt;alert($('#test').attr('value'));&lt;/code&gt;</source>
          <target state="translated">JavaScript: &lt;code&gt;alert($('#test').attr('value'));&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e22631d2e6fae01b5e44844b05f980ceaea5207" translate="yes" xml:space="preserve">
          <source>JavaScript: The Definitive Guide by
David Flanagan</source>
          <target state="translated">JavaScript:Определяющий путеводитель Дэвида Флэнагана</target>
        </trans-unit>
        <trans-unit id="1380368c31187eb52f58920d8d5acad4e5a0ad22" translate="yes" xml:space="preserve">
          <source>Let's consider this anchor in a page at &lt;code&gt;http://example.com/testing.html&lt;/code&gt;:</source>
          <target state="translated">Давайте рассмотрим этот якорь на странице &lt;code&gt;http://example.com/testing.html&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="85719bad9a2c4734c18c7d17ad1611d735103187" translate="yes" xml:space="preserve">
          <source>Mostly we want to use for DOM object rather then custom attribute
like &lt;code&gt;data-img, data-xyz&lt;/code&gt;.</source>
          <target state="translated">В основном мы хотим использовать объект DOM, а не пользовательский атрибут, такой как &lt;code&gt;data-img, data-xyz&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1724c4b4d2271c6924c46bc17bbb8314118dae97" translate="yes" xml:space="preserve">
          <source>My original answer applies specifically to jQuery 1.6. My advice remains the same but jQuery 1.6.1 changed things slightly: in the face of the predicted pile of broken websites, the jQuery team &lt;a href=&quot;http://blog.jquery.com/2011/05/12/jquery-1-6-1-released/&quot;&gt;reverted &lt;code&gt;attr()&lt;/code&gt; to something close to (but not exactly the same as) its old behaviour for Boolean attributes&lt;/a&gt;. John Resig also &lt;a href=&quot;http://ejohn.org/blog/jquery-16-and-attr/&quot;&gt;blogged about it&lt;/a&gt;. I can see the difficulty they were in but still disagree with his recommendation to prefer &lt;code&gt;attr()&lt;/code&gt;.</source>
          <target state="translated">Мой оригинальный ответ относится конкретно к jQuery 1.6. Мой совет остался прежним, но jQuery 1.6.1 немного изменил ситуацию: перед лицом предсказанной кучи сломанных веб-сайтов команда jQuery &lt;a href=&quot;http://blog.jquery.com/2011/05/12/jquery-1-6-1-released/&quot;&gt;вернула &lt;code&gt;attr()&lt;/code&gt; к чему-то близкому (но не совсем такому) к его старому поведению для логических атрибутов.&lt;/a&gt; , Джон Ресиг также &lt;a href=&quot;http://ejohn.org/blog/jquery-16-and-attr/&quot;&gt;написал об этом в блоге&lt;/a&gt; . Я вижу трудности, с которыми они столкнулись, но все еще не согласен с его рекомендацией предпочесть &lt;code&gt;attr()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e38e678c66dd55ecd0686f2329e9f742e2d78c5" translate="yes" xml:space="preserve">
          <source>Note that the properties and attributes are distinct.</source>
          <target state="translated">Обратите внимание,что свойства и атрибуты различаются.</target>
        </trans-unit>
        <trans-unit id="289e0a9f8648145124d90d94f9e10dbe6399aaa7" translate="yes" xml:space="preserve">
          <source>Now we change a few things like so:</source>
          <target state="translated">Теперь мы меняем несколько вещей:</target>
        </trans-unit>
        <trans-unit id="94867e4802e9035ca9aad264ab7f98b9b8faf8e6" translate="yes" xml:space="preserve">
          <source>Now, although they are distinct, because all of this evolved rather than being designed from the ground up, a number of properties write back to the attribute they derived from if you set them. But not all do, and as you can see from &lt;code&gt;href&lt;/code&gt; above, the mapping is not always a straight &quot;pass the value on&quot;, sometimes there's interpretation involved.</source>
          <target state="translated">Теперь, хотя они отличаются друг от друга, потому что все это эволюционировало, а не разрабатывалось с нуля, ряд свойств записывают обратно в атрибут, который они получили, если вы их установите. Но не все это делают, и, как вы можете видеть из &lt;code&gt;href&lt;/code&gt; выше, отображение не всегда является прямым &amp;laquo;передачей значения&amp;raquo;, иногда требуется интерпретация.</target>
        </trans-unit>
        <trans-unit id="b437be314cf0af285633f54789e33857dbdedd78" translate="yes" xml:space="preserve">
          <source>One thing &lt;code&gt;.attr()&lt;/code&gt; can do that &lt;code&gt;.prop()&lt;/code&gt; can't:  affect CSS selectors</source>
          <target state="translated">Одна вещь &lt;code&gt;.attr()&lt;/code&gt; может сделать то, что не может &lt;code&gt;.prop()&lt;/code&gt; : повлиять на селекторы CSS</target>
        </trans-unit>
        <trans-unit id="2865c48558148f37fa6ff9bb59cde97ea9ac7fc9" translate="yes" xml:space="preserve">
          <source>P/S: When I'm checking Image &lt;strong&gt;&lt;em&gt;src&lt;/em&gt;&lt;/strong&gt; property. If the &lt;strong&gt;&lt;em&gt;src&lt;/em&gt;&lt;/strong&gt; is empty, &lt;strong&gt;prop&lt;/strong&gt; return the current URL of the page (wrong), and &lt;strong&gt;attr&lt;/strong&gt; return empty string (right).</source>
          <target state="translated">P / S: когда я проверяю свойство Image &lt;strong&gt;&lt;em&gt;src&lt;/em&gt;&lt;/strong&gt; . Если &lt;strong&gt;&lt;em&gt;src&lt;/em&gt;&lt;/strong&gt; пуст, &lt;strong&gt;prop&lt;/strong&gt; возвращает текущий URL страницы (неверно), а &lt;strong&gt;attr&lt;/strong&gt; возвращает пустую строку (справа).</target>
        </trans-unit>
        <trans-unit id="66af78c1b7f1f37be404a2acb27e2b542f9f49a9" translate="yes" xml:space="preserve">
          <source>Properties are generally simpler to deal with than attributes. An attribute value may only be a string whereas a property can be of any type. For example, the &lt;code&gt;checked&lt;/code&gt; property is a Boolean, the &lt;code&gt;style&lt;/code&gt; property is an object with individual properties for each style, the &lt;code&gt;size&lt;/code&gt; property is a number.</source>
          <target state="translated">Свойства, как правило, проще, чем атрибуты. Значением атрибута может быть только строка, тогда как свойство может быть любого типа. Например, свойство selected - логическое значение, свойство &lt;code&gt;style&lt;/code&gt; - объект с индивидуальными свойствами для каждого стиля, свойство &lt;code&gt;size&lt;/code&gt; - число.</target>
        </trans-unit>
        <trans-unit id="ccdbd0e4ee4d748197077731bac58d8f220e10ee" translate="yes" xml:space="preserve">
          <source>Round 1: style</source>
          <target state="translated">Раунд 1:стиль</target>
        </trans-unit>
        <trans-unit id="60d624aff5d20a10672f1fa2bb06a48fc35cb2ff" translate="yes" xml:space="preserve">
          <source>Round 2: value</source>
          <target state="translated">Раунд 2:значение</target>
        </trans-unit>
        <trans-unit id="4bcb4e163bf193fe874c35e7a1a754e4ed2bd51c" translate="yes" xml:space="preserve">
          <source>Show code snippet</source>
          <target state="translated">Показать фрагмент кода</target>
        </trans-unit>
        <trans-unit id="3609b7bc415b42245642bd9b48d2adfbddcb70fa" translate="yes" xml:space="preserve">
          <source>Since the prop function return &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; object, above code will not working properly in some browser(tested with &lt;code&gt;IE8 with Chrome Frame Plugin&lt;/code&gt; in my case).</source>
          <target state="translated">Поскольку функция prop возвращает объект &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; , приведенный выше код не будет работать должным образом в некоторых браузерах (в моем случае это было протестировано с &lt;code&gt;IE8 with Chrome Frame Plugin&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="12577ab2e647385f98e5dcfb2630c23fb794c107" translate="yes" xml:space="preserve">
          <source>So &lt;a href=&quot;http://api.jquery.com/category/version/1.6/&quot;&gt;jQuery 1.6&lt;/a&gt; has the new function &lt;a href=&quot;http://api.jquery.com/prop/&quot;&gt;&lt;code&gt;prop()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Так что в &lt;a href=&quot;http://api.jquery.com/category/version/1.6/&quot;&gt;jQuery 1.6&lt;/a&gt; появилась новая функция &lt;a href=&quot;http://api.jquery.com/prop/&quot;&gt; &lt;code&gt;prop()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1c47d08c78383b55b25c00ee35c2311c4955dc43" translate="yes" xml:space="preserve">
          <source>So use prop!</source>
          <target state="translated">Так что используй реквизит!</target>
        </trans-unit>
        <trans-unit id="95eb928367e90028eeb24f35d3136dcf2dc99528" translate="yes" xml:space="preserve">
          <source>So, how do you find out if the checkbox is checked with jQuery? Look on Stack Overflow and you'll commonly find the following suggestions:</source>
          <target state="translated">Итак,как узнать,отмечен ли флажок с помощью jQuery? Посмотрите на Stack Overflow (Переполнение стека)и вы обычно найдете следующие предложения:</target>
        </trans-unit>
        <trans-unit id="0e964b79b47cef26b19046dcea7190f83bc893c7" translate="yes" xml:space="preserve">
          <source>Some gratuitous ASCII art (and leaving out a lot of stuff):</source>
          <target state="translated">Некоторое безвозмездное искусство ASCII (и многое пропустившее):</target>
        </trans-unit>
        <trans-unit id="1de8dba368e7754dc199c99b017f5c51265ee8dc" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Syntax:</target>
        </trans-unit>
        <trans-unit id="ef60cad211d4de61e1a48513297acc715f5067c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attr&lt;/code&gt; function used to have some convoluted logic around getting what they thought you wanted, rather than literally getting the attribute. It conflated the concepts. Moving to &lt;code&gt;prop&lt;/code&gt; and &lt;code&gt;attr&lt;/code&gt; was meant to de-conflate them. Briefly in v1.6.0 jQuery went too far in that regard, but functionality &lt;a href=&quot;http://blog.jquery.com/2011/05/10/jquery-1-6-1-rc-1-released/&quot;&gt;was quickly added back&lt;/a&gt; to &lt;code&gt;attr&lt;/code&gt; to handle the common situations where people use &lt;code&gt;attr&lt;/code&gt; when technically they should use &lt;code&gt;prop&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;attr&lt;/code&gt; использовала некоторую запутанную логику для получения того, что, как они думали, вы хотели, вместо буквального получения атрибута. Это смешало понятия. Перемещение в &lt;code&gt;prop&lt;/code&gt; и &lt;code&gt;attr&lt;/code&gt; должно было де-сплитировать их. Вкратце, в v1.6.0 jQuery зашел слишком далеко в этом отношении, но функциональность &lt;a href=&quot;http://blog.jquery.com/2011/05/10/jquery-1-6-1-rc-1-released/&quot;&gt;была быстро добавлена ​​обратно&lt;/a&gt; в &lt;code&gt;attr&lt;/code&gt; для обработки типичных ситуаций, когда люди используют &lt;code&gt;attr&lt;/code&gt; , когда технически они должны использовать &lt;code&gt;prop&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="80989911ed46c6de8a83bf3ca6e47fd3b4b66d61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;link&lt;/code&gt; object is a real thing, and you can see there's a real distinction between accessing a &lt;em&gt;property&lt;/em&gt; on it, and accessing an &lt;em&gt;attribute&lt;/em&gt;.</source>
          <target state="translated">Объект &lt;code&gt;link&lt;/code&gt; - это реальная вещь, и вы можете увидеть реальное различие между доступом к &lt;em&gt;свойству&lt;/em&gt; и доступом к &lt;em&gt;атрибуту&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="729a01a6a69c8ea19b48d11fde2603d2254d9086" translate="yes" xml:space="preserve">
          <source>The Docs:</source>
          <target state="translated">Доки:</target>
        </trans-unit>
        <trans-unit id="b57ac22217c7c4c1ffed0ea45fefc50e9b636e48" translate="yes" xml:space="preserve">
          <source>The attribute value reflects the default rather than the current visible state (except in some older versions of IE, thus making things still harder). The attribute tells you nothing about the whether the checkbox on the page is checked. See &lt;a href=&quot;http://jsfiddle.net/VktA6/49/&quot;&gt;http://jsfiddle.net/VktA6/49/&lt;/a&gt;.</source>
          <target state="translated">Значение атрибута отражает значение по умолчанию, а не текущее видимое состояние (за исключением некоторых более старых версий IE, что усложняет задачу). Атрибут ничего не говорит о том, установлен ли флажок на странице. См. &lt;a href=&quot;http://jsfiddle.net/VktA6/49/&quot;&gt;Http://jsfiddle.net/VktA6/49/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9cfb0b86bee1b739c29ad71056625e859a225fad" translate="yes" xml:space="preserve">
          <source>The class attribute is shown here on the body. It's accessible through the following code:</source>
          <target state="translated">Атрибут класса отображается здесь на теле.Он доступен через следующий код:</target>
        </trans-unit>
        <trans-unit id="c53f0ab45f6a1937de5cd703c09d48cd0f34bb66" translate="yes" xml:space="preserve">
          <source>The console logs the &lt;code&gt;getAttribute&lt;/code&gt; as a string, and the &lt;code&gt;attr&lt;/code&gt; as a string, but the &lt;code&gt;prop&lt;/code&gt; as a &lt;code&gt;CSSStyleDeclaration&lt;/code&gt;, Why? And how does that affect my coding in the future?</source>
          <target state="translated">Консоль регистрирует &lt;code&gt;getAttribute&lt;/code&gt; как строку, а &lt;code&gt;attr&lt;/code&gt; как строку, а &lt;code&gt;prop&lt;/code&gt; как &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; . Почему? И как это повлияет на мое кодирование в будущем?</target>
        </trans-unit>
        <trans-unit id="dd5c103d97ae0a2d027fef688b953665a16aa4a7" translate="yes" xml:space="preserve">
          <source>The difference between attributes and properties can be important in specific situations. Before jQuery 1.6, the .attr() method sometimes took property values into account when retrieving some attributes, which could cause inconsistent behavior. As of jQuery 1.6, the .prop() method provides a way to explicitly retrieve property values, while .attr() retrieves attributes.</source>
          <target state="translated">Различие между атрибутами и свойствами может быть важным в конкретных ситуациях.До версии jQuery 1.6 метод .attr()иногда учитывал значения свойств при получении некоторых атрибутов,что могло привести к непоследовательному поведению.Начиная с jQuery 1.6,метод .prop()обеспечивает способ явного получения значений свойств,в то время как .attr()извлекает атрибуты.</target>
        </trans-unit>
        <trans-unit id="c5c1057c51736c2f74489c55f4e7ad812e908197" translate="yes" xml:space="preserve">
          <source>The disabled IDL attribute must reflect the disabled content attribute.</source>
          <target state="translated">Атрибут disabled IDL должен отражать атрибут disabled content.</target>
        </trans-unit>
        <trans-unit id="c16411f5496ad4b8401ad3ef076b679ac6542571" translate="yes" xml:space="preserve">
          <source>The easiest way to see the difference between &lt;code&gt;.attr&lt;/code&gt; and &lt;code&gt;.prop&lt;/code&gt; is the following example:</source>
          <target state="translated">Самый простой способ увидеть разницу между &lt;code&gt;.attr&lt;/code&gt; и &lt;code&gt;.prop&lt;/code&gt; - следующий пример:</target>
        </trans-unit>
        <trans-unit id="32534caab896fd17123339601f0c1efaaec7a0e6" translate="yes" xml:space="preserve">
          <source>The function above is used to check if checkbox1 is checked or not, if checked: return 1; if not: return 0. Function prop() used here as a GET function.</source>
          <target state="translated">Функция,описанная выше,используется для проверки,установлен флажок1 или нет,если установлен:return 1;если нет:return 0.Функция prop()используется здесь в качестве функции GET.</target>
        </trans-unit>
        <trans-unit id="29f7425ec4ef49d7bfced320d7119b2c15669d2b" translate="yes" xml:space="preserve">
          <source>The function above is used to set checkbox1 to be checked and ALWAYS return 1. Now function prop() used as a SET function.</source>
          <target state="translated">Функция,описанная выше,используется для установки флажка1,который должен быть установлен,и ВСЕГДА возвращает 1.Теперь функция prop()используется как функция SET.</target>
        </trans-unit>
        <trans-unit id="6eeccb6dca8d0bac5d83a0757ed4d6ff88801425" translate="yes" xml:space="preserve">
          <source>The idea of using the &lt;code&gt;checked&lt;/code&gt; attribute for scripting a checkbox is unhelpful and unnecessary. The property is what you need.</source>
          <target state="translated">Идея использования &lt;code&gt;checked&lt;/code&gt; атрибута для создания сценария флажка бесполезна и не нужна. Собственность - это то, что вам нужно.</target>
        </trans-unit>
        <trans-unit id="a346404460ed25f7e105c7bf11fa30a362a24111" translate="yes" xml:space="preserve">
          <source>The introduction of the &lt;code&gt;prop()&lt;/code&gt; method provides a way to explicitly retrieve property values, while &lt;code&gt;.attr()&lt;/code&gt; retrieves attributes.</source>
          <target state="translated">Введение метода &lt;code&gt;prop()&lt;/code&gt; обеспечивает способ явного получения значений свойств, в то время как &lt;code&gt;.attr()&lt;/code&gt; возвращает атрибуты.</target>
        </trans-unit>
        <trans-unit id="d85182833c12c0535e66bfe183d9c175168470d7" translate="yes" xml:space="preserve">
          <source>The property also makes checking or unchecking the checkbox trivial:</source>
          <target state="translated">Свойство также делает проверку или снятие флажка тривиальным:</target>
        </trans-unit>
        <trans-unit id="9de3b95677403ce83a6cd540e3554fe681740186" translate="yes" xml:space="preserve">
          <source>The standard properties are laid out in the various DOM specs:</source>
          <target state="translated">Стандартные свойства изложены в различных спецификациях DOM:</target>
        </trans-unit>
        <trans-unit id="7e1d1062df530e62441bd9367801c6395aa93525" translate="yes" xml:space="preserve">
          <source>The thing you really need to be careful with is just &lt;strong&gt;do not mix the usage of these for the same property throughout your application&lt;/strong&gt; for the above reason.</source>
          <target state="translated">То, с чем вам действительно нужно быть осторожным, это просто &lt;strong&gt;не смешивать их использование для одного и того же свойства в вашем приложении&lt;/strong&gt; по вышеуказанной причине.</target>
        </trans-unit>
        <trans-unit id="540d2472341cccba8be027fc2236bd8b8c530474" translate="yes" xml:space="preserve">
          <source>These specs have excellent indexes and I recommend keeping links to them handy; I use them all the time.</source>
          <target state="translated">У этих спецификаций отличные индексы,и я рекомендую держать ссылки на них под рукой;я использую их постоянно.</target>
        </trans-unit>
        <trans-unit id="8d96ed5ed96a66531cb64de7520b4f59479a974b" translate="yes" xml:space="preserve">
          <source>This change has been a long time coming for jQuery. For years, they've been content with a function named &lt;code&gt;attr()&lt;/code&gt; that mostly retrieved DOM properties, not the result you'd expect from the name. The segregation of &lt;a href=&quot;http://api.jquery.com/attr&quot;&gt;&lt;code&gt;attr()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://api.jquery.com/prop&quot;&gt;&lt;code&gt;prop()&lt;/code&gt;&lt;/a&gt; should help alleviate some of the confusion between HTML attributes and DOM properties. &lt;code&gt;$.fn.prop()&lt;/code&gt; grabs the specified DOM property, while &lt;code&gt;$.fn.attr()&lt;/code&gt; grabs the specified HTML attribute.</source>
          <target state="translated">Это изменение было долгое время для jQuery. В течение многих лет они довольствовались функцией &lt;code&gt;attr()&lt;/code&gt; которая в основном извлекала свойства DOM, а не результат, который вы ожидаете от имени. Разделение &lt;a href=&quot;http://api.jquery.com/attr&quot;&gt; &lt;code&gt;attr()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;http://api.jquery.com/prop&quot;&gt; &lt;code&gt;prop()&lt;/code&gt; &lt;/a&gt; должно помочь устранить некоторую путаницу между атрибутами HTML и свойствами DOM. &lt;code&gt;$.fn.prop()&lt;/code&gt; указанное свойство DOM, а &lt;code&gt;$.fn.attr()&lt;/code&gt; указанный атрибут HTML.</target>
        </trans-unit>
        <trans-unit id="bdc69234098316369890d3a27c1d12018faea5b3" translate="yes" xml:space="preserve">
          <source>This change removes some of the layer of magic jQuery stuck in front of attributes and properties, meaning jQuery developers will have to learn a bit about the difference between properties and attributes. This is a good thing.</source>
          <target state="translated">Это изменение удаляет часть волшебного слоя jQuery,застрявшего перед атрибутами и свойствами,что означает,что разработчикам jQuery придется немного узнать о различии между свойствами и атрибутами.Это хорошо.</target>
        </trans-unit>
        <trans-unit id="fa5f4dac63ceba8499c8ebda7b7ee0e9b32ac97e" translate="yes" xml:space="preserve">
          <source>This concept provides an example where the difference is observable: &lt;a href=&quot;http://www.w3.org/TR/html5/forms.html#concept-input-checked-dirty&quot;&gt;http://www.w3.org/TR/html5/forms.html#concept-input-checked-dirty&lt;/a&gt;</source>
          <target state="translated">Эта концепция обеспечивает пример, где разница заметна: &lt;a href=&quot;http://www.w3.org/TR/html5/forms.html#concept-input-checked-dirty&quot;&gt;http://www.w3.org/TR/html5/forms.html#concept-input-checked-dirty&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3cfe87b7616b33bdbe916512a8f5f3ef83a286ae" translate="yes" xml:space="preserve">
          <source>This is actually the simplest thing in the world to do with the &lt;code&gt;checked&lt;/code&gt; Boolean property, which has existed and worked flawlessly in every major scriptable browser since 1995:</source>
          <target state="translated">На самом деле это самая простая вещь в мире, которую можно сделать с &lt;code&gt;checked&lt;/code&gt; логическим свойством, которое существует и работает безупречно во всех основных скриптовых браузерах с 1995 года:</target>
        </trans-unit>
        <trans-unit id="145f8a318f2e616c0d3bd73938df79647833c350" translate="yes" xml:space="preserve">
          <source>This is why you should use mostly &lt;code&gt;.prop&lt;/code&gt;, as it affects the effective property directly, instead of relying on complex side-effects of modifying the HTML.</source>
          <target state="translated">Вот почему вы должны использовать в основном &lt;code&gt;.prop&lt;/code&gt; , так как он напрямую влияет на эффективное свойство, а не полагаться на сложные побочные эффекты изменения HTML.</target>
        </trans-unit>
        <trans-unit id="753d8f0547857b0427bdde785c620b776eeac959" translate="yes" xml:space="preserve">
          <source>Thus changing it into following code</source>
          <target state="translated">Таким образом,изменив его на следующий код</target>
        </trans-unit>
        <trans-unit id="c88652b2409595eccf1604ebe6770348f7e77851" translate="yes" xml:space="preserve">
          <source>To fully understand how they work, here's an extended explanation on the difference between HTML attributes and DOM properties.:</source>
          <target state="translated">Чтобы полностью понять,как они работают,вот расширенное объяснение разницы между атрибутами HTML и свойствами DOM..:</target>
        </trans-unit>
        <trans-unit id="0969eb5b711519c18e0b6f0a6871c28056b8ba40" translate="yes" xml:space="preserve">
          <source>Try it out:</source>
          <target state="translated">Попробуй:</target>
        </trans-unit>
        <trans-unit id="edb598ba0ed08660d3d93c172c02163186ed1250" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;prop()&lt;/code&gt; over &lt;code&gt;attr()&lt;/code&gt; in the majority of cases.</source>
          <target state="translated">Используйте &lt;code&gt;prop()&lt;/code&gt; &lt;code&gt;attr()&lt;/code&gt; в большинстве случаев.</target>
        </trans-unit>
        <trans-unit id="3dd581291ee6311e0bd015bcd39c264abdcb9aa5" translate="yes" xml:space="preserve">
          <source>Usually you'll want to use properties.
Use attributes only for:</source>
          <target state="translated">Обычно вы захотите использовать свойства.Используйте атрибуты только для:</target>
        </trans-unit>
        <trans-unit id="d85ab4a57d88528795beae5179b53eae7cbf70a4" translate="yes" xml:space="preserve">
          <source>We can only access DOM elements with &lt;code&gt;prop&lt;/code&gt; other then it gives &lt;strong&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">Мы можем получить доступ к элементам DOM только с помощью &lt;code&gt;prop&lt;/code&gt; , тогда как это дает &lt;strong&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c1f1b40046d8a364453cc07294630df202e93b59" translate="yes" xml:space="preserve">
          <source>When I talk about properties being properties of an object, I'm not speaking in the abstract. Here's some non-jQuery code:</source>
          <target state="translated">Когда я говорю о том,что свойства-это свойства объекта,я не говорю абстрактно.Вот не-jQuery код:</target>
        </trans-unit>
        <trans-unit id="a77e169f69f0792646894a3ddeffee9ae467e20c" translate="yes" xml:space="preserve">
          <source>Where both a property and an attribute with the same name exists, usually updating one will update the other, but this is not the case for certain attributes of inputs, such as &lt;code&gt;value&lt;/code&gt; and &lt;code&gt;checked&lt;/code&gt;: for these attributes, the property always represents the current state while the attribute (except in old versions of IE) corresponds to the default value/checkedness of the input (reflected in the &lt;code&gt;defaultValue&lt;/code&gt; / &lt;code&gt;defaultChecked&lt;/code&gt; property).</source>
          <target state="translated">Если существует свойство и атрибут с одним и тем же именем, обычно при обновлении одного обновляется другое, но это не относится к определенным атрибутам входных данных, таким как &lt;code&gt;value&lt;/code&gt; и &lt;code&gt;checked&lt;/code&gt; : для этих атрибутов свойство всегда представляет текущее состояние в то время как атрибут (кроме старых версий IE) соответствует значению по умолчанию / проверяемости ввода (отражается в &lt;code&gt;defaultValue&lt;/code&gt; / &lt;code&gt;defaultChecked&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="71c9490438ad9546ea443bc3c483c7c464ca3daa" translate="yes" xml:space="preserve">
          <source>Why would you sometimes want to use .prop() instead of .attr() where latter is officially adviced?</source>
          <target state="translated">Почему вы иногда хотите использовать .prop()вместо .attr(),где последняя официально рекомендуется?</target>
        </trans-unit>
        <trans-unit id="e37b0fad94ebed3dde64b46684fc05b96c9137b6" translate="yes" xml:space="preserve">
          <source>Without having glanced at the new code for either function, I can say with confidence that the confusion has more to do with the difference between HTML attributes and DOM properties, than with the code itself. Hopefully, this cleared some things up for you.</source>
          <target state="translated">Не взглянув на новый код ни для одной из функций,могу с уверенностью сказать,что путаница больше связана с разницей между атрибутами HTML и свойствами DOM,чем с самим кодом.Надеюсь,это прояснило некоторые вещи для вас.</target>
        </trans-unit>
        <trans-unit id="152c075b1676a5ac27ea04b056955291d454e755" translate="yes" xml:space="preserve">
          <source>You usually want &lt;code&gt;prop()&lt;/code&gt; rather than &lt;code&gt;attr()&lt;/code&gt;.</source>
          <target state="translated">Вы обычно хотите &lt;code&gt;prop()&lt;/code&gt; а не &lt;code&gt;attr()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e34fdbb1f17c7df690caf1f535da4c4fb1218b42" translate="yes" xml:space="preserve">
          <source>but not always to &lt;code&gt;.prop('name', 'value')&lt;/code&gt;</source>
          <target state="translated">но не всегда в &lt;code&gt;.prop('name', 'value')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="86dd9b3b3615d935d005fe273e62e37f72affe0a" translate="yes" xml:space="preserve">
          <source>click the button again. Only the &lt;code&gt;prop&lt;/code&gt; checkbox got checked. BANG!</source>
          <target state="translated">нажмите кнопку еще раз. Только флажок &lt;code&gt;prop&lt;/code&gt; был проверен. BANG!</target>
        </trans-unit>
        <trans-unit id="acfb658e79e289c6c288a97b93c2da918d4cf5cd" translate="yes" xml:space="preserve">
          <source>click the button. Both checkboxes got checked.</source>
          <target state="translated">нажать на кнопку.Оба флажка отмечены.</target>
        </trans-unit>
        <trans-unit id="15af69669559f1ff425b62f54484038658836aa8" translate="yes" xml:space="preserve">
          <source>manually checking a checkbox will change &lt;code&gt;.prop('checked')&lt;/code&gt; value, but will not change &lt;code&gt;.attr('checked')&lt;/code&gt; and &lt;code&gt;.prop('defaultChecked')&lt;/code&gt; values</source>
          <target state="translated">установка флажка вручную изменит значение &lt;code&gt;.prop('checked')&lt;/code&gt; , но не изменит значения &lt;code&gt;.attr('checked')&lt;/code&gt; и &lt;code&gt;.prop('defaultChecked')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c42bac4e03089f1c935237ae83bea6013eb78106" translate="yes" xml:space="preserve">
          <source>or in this case do they do the same thing?</source>
          <target state="translated">или в данном случае они делают то же самое?</target>
        </trans-unit>
        <trans-unit id="868525fee2e2d32c161d58720c98c3eb0ad0b8d6" translate="yes" xml:space="preserve">
          <source>setting &lt;code&gt;$('#input').prop('defaultChecked', true)&lt;/code&gt; will also change &lt;code&gt;.attr('checked')&lt;/code&gt;, but this will not be visible on an element.</source>
          <target state="translated">установка &lt;code&gt;$('#input').prop('defaultChecked', true)&lt;/code&gt; также изменит &lt;code&gt;.attr('checked')&lt;/code&gt; , но это не будет видно на элементе.</target>
        </trans-unit>
        <trans-unit id="03f07b37386fcfa44873be8ffb7b2ac821bdf161" translate="yes" xml:space="preserve">
          <source>so you might get away with it, although it is ugly since it modifies HTML without need.</source>
          <target state="translated">так что вам это может сойти с рук,хотя это и некрасиво,так как он модифицирует HTML без необходимости.</target>
        </trans-unit>
        <trans-unit id="c8f06fac1cf8956475c3bdee10f6602ddfd0133a" translate="yes" xml:space="preserve">
          <source>solved the problem.</source>
          <target state="translated">решил проблему.</target>
        </trans-unit>
        <trans-unit id="a7e958ec3ee21cba1890193ce44733f28069dae9" translate="yes" xml:space="preserve">
          <source>uncheck both checkboxes.</source>
          <target state="translated">снимите оба флажка.</target>
        </trans-unit>
        <trans-unit id="e51e055e2293481cbfeb2f8371cd34f1a883ca3d" translate="yes" xml:space="preserve">
          <source>will respond to &lt;code&gt;.attr('name', 'value')&lt;/code&gt;</source>
          <target state="translated">ответит на &lt;code&gt;.attr('name', 'value')&lt;/code&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
