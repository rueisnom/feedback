<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/5874652">
    <body>
      <group id="5874652">
        <trans-unit id="27529faa78292723e12b78be76fee503817055c8" translate="yes" xml:space="preserve">
          <source>(Those values are as per most browsers; there's some variation.)</source>
          <target state="translated">(이 값은 대부분의 브라우저에 따라 다르며 약간의 차이가 있습니다.)</target>
        </trans-unit>
        <trans-unit id="d8c77869324090892a374b5da6ebc646584c7b54" translate="yes" xml:space="preserve">
          <source>(see also this fiddle: &lt;a href=&quot;http://jsfiddle.net/maniator/JpUF2/&quot;&gt;http://jsfiddle.net/maniator/JpUF2/&lt;/a&gt;)</source>
          <target state="translated">(이 바이올린 참조 : &lt;a href=&quot;http://jsfiddle.net/maniator/JpUF2/&quot;&gt;http://jsfiddle.net/maniator/JpUF2/&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="f3a041313dd0074c8b22542364412d49ef5c1f63" translate="yes" xml:space="preserve">
          <source>* Note: jQuery for this reason has a &lt;code&gt;.val()&lt;/code&gt; method, which internally is equivalent to &lt;code&gt;.prop('value')&lt;/code&gt;</source>
          <target state="translated">* 참고 : 이러한 이유로 jQuery에는 &lt;code&gt;.val()&lt;/code&gt; 메소드가 있으며 내부적으로 &lt;code&gt;.prop('value')&lt;/code&gt; 와 같습니다.</target>
        </trans-unit>
        <trans-unit id="5978c1f4d78b134b3860ed16caa00ee14043471b" translate="yes" xml:space="preserve">
          <source>-Matt</source>
          <target state="translated">-Matt</target>
        </trans-unit>
        <trans-unit id="639b0350d8fe68352621beffe0f71f20d92bd890" translate="yes" xml:space="preserve">
          <source>.prop() vs .attr()</source>
          <target state="translated">.prop () 대 .attr ()</target>
        </trans-unit>
        <trans-unit id="a6c26f812988b63a3b56823a4833ba71182fd7bc" translate="yes" xml:space="preserve">
          <source>1) A property is in the DOM; an attribute is in the HTML that is
  parsed into the DOM.</source>
          <target state="translated">1) 속성은 DOM에 있습니다. 속성은 DOM으로 구문 분석되는 HTML에 있습니다.</target>
        </trans-unit>
        <trans-unit id="d642c4ff8fc5f9f2f75efc4e660f382ca01208e8" translate="yes" xml:space="preserve">
          <source>2) $( elem ).attr( &quot;checked&quot; ) (1.6.1+)   &quot;checked&quot; (String) Will
  change with checkbox state</source>
          <target state="translated">2) $ (elem) .attr ( &quot;checked&quot;) (1.6.1+) &quot;checked&quot;(String) 확인란 상태에 따라 변경됩니다</target>
        </trans-unit>
        <trans-unit id="e032753c186fbf9039b1425b47ce6ea91f82c55f" translate="yes" xml:space="preserve">
          <source>3) $( elem ).attr( &quot;checked&quot; ) (pre-1.6)    true (Boolean) Changed
  with checkbox state</source>
          <target state="translated">3) $ (elem) .attr ( &quot;checked&quot;) (1.6 이전) true (Boolean) 확인란 상태로 변경됨</target>
        </trans-unit>
        <trans-unit id="b5ee780d8b6ad6df92f5bfbf694f36bd3c458ad0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-Core/&quot;&gt;DOM2 Core&lt;/a&gt;&lt;em&gt;(obsolete)&lt;/em&gt;</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-Core/&quot;&gt;DOM2 코어&lt;/a&gt; &lt;em&gt;(더 이상 사용되지 않음)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="18fed9354f21dfd209eceae38ae2fa91b88fa74f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-HTML/&quot;&gt;DOM2 HTML&lt;/a&gt;&lt;em&gt;(largely obsolete, see the &lt;a href=&quot;https://www.w3.org/TR/html5/&quot;&gt;HTML spec&lt;/a&gt; instead)&lt;/em&gt;</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-HTML/&quot;&gt;DOM2 HTML&lt;/a&gt; &lt;em&gt;(대부분 더 이상 사용되지 않으며 대신 &lt;a href=&quot;https://www.w3.org/TR/html5/&quot;&gt;HTML 사양&lt;/a&gt; 참조)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b1ece7bdc9fb31335c49770dfb599570f0fd6959" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-3-Core/&quot;&gt;DOM3 Core&lt;/a&gt;&lt;em&gt;(obsolete)&lt;/em&gt;</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-3-Core/&quot;&gt;DOM3 코어&lt;/a&gt; &lt;em&gt;(폐기 됨)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="00820f5311809bd60ce86dcf4bb9dac7057f9bc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://jsfiddle.net/51xosq29/&quot;&gt;&lt;code&gt;input[name]&lt;/code&gt;&lt;/a&gt;  (thanks &lt;a href=&quot;https://stackoverflow.com/questions/5874652/prop-vs-attr/5876747?noredirect=1#comment99696762_5876747&quot;&gt;@TimDown&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;https://jsfiddle.net/51xosq29/&quot;&gt; &lt;code&gt;input[name]&lt;/code&gt; &lt;/a&gt; (감사 &lt;a href=&quot;https://stackoverflow.com/questions/5874652/prop-vs-attr/5876747?noredirect=1#comment99696762_5876747&quot;&gt;@TimDown&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="be0e369f7e5632ce24e1fd64eb0f93083a0b7410" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://jsfiddle.net/BobStein/szto3d06/3/&quot;&gt;&lt;code&gt;input[data-custom-attribute]&lt;/code&gt;&lt;/a&gt; (neither will &lt;code&gt;.data('custom-attribute')&lt;/code&gt; affect this selector)</source>
          <target state="translated">&lt;a href=&quot;https://jsfiddle.net/BobStein/szto3d06/3/&quot;&gt; &lt;code&gt;input[data-custom-attribute]&lt;/code&gt; &lt;/a&gt; (. data &lt;code&gt;.data('custom-attribute')&lt;/code&gt; 이 선택기에 영향을 미치지 않습니다)</target>
        </trans-unit>
        <trans-unit id="566dc6d5baa9764f8ec40fd76b9c411ebd6ce7cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.attr('style')&lt;/code&gt; -- returns inline styles for the matched element i.e. &lt;code&gt;&quot;font:arial;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.attr('style')&lt;/code&gt; -일치하는 요소에 대한 인라인 스타일을 반환합니다 (예 : &lt;code&gt;&quot;font:arial;&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="cb68c819c2024b91e163c39f3eca6f33c6ac3b18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.attr('value')&lt;/code&gt; -- returns &lt;code&gt;'hello'&lt;/code&gt; *</source>
          <target state="translated">&lt;code&gt;.attr('value')&lt;/code&gt; - &lt;code&gt;'hello'&lt;/code&gt; 를 반환합니다. *</target>
        </trans-unit>
        <trans-unit id="21c74ba2e7289909bc7ae9f640096b7e01c8cd0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.attr()&lt;/code&gt; affects all attribute-selectors</source>
          <target state="translated">&lt;code&gt;.attr()&lt;/code&gt; 은 모든 속성 선택기에 영향을줍니다</target>
        </trans-unit>
        <trans-unit id="6b501c142b28d0f0b379b31357901efa1e026f44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.attr()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;.attr()&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="812390339d9c88829c4101c0d04803455dd7969e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.attr&lt;/code&gt; vs &lt;code&gt;.prop&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;.attr&lt;/code&gt; 대 &lt;code&gt;.prop&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e7613c8ed965d1b3a0f024b3b3c9c4883ac57738" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prop('style')&lt;/code&gt; -- returns an style declaration object i.e. &lt;code&gt;CSSStyleDeclaration&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.prop('style')&lt;/code&gt; -스타일 선언 객체, 즉 &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6933d8ccbef2a04e404a48ffafb3a2eb2f1a7aa2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prop('value')&lt;/code&gt; -- returns &lt;code&gt;'i changed the value'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.prop('value')&lt;/code&gt; - &lt;code&gt;'i changed the value'&lt;/code&gt; 를 반환합니다</target>
        </trans-unit>
        <trans-unit id="b3059bf2fd9de7005d02214c5a609065c268d947" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prop()&lt;/code&gt; affects only a few attribute-selectors</source>
          <target state="translated">&lt;code&gt;.prop()&lt;/code&gt; 는 소수의 속성 선택자에만 영향을 미칩니다.</target>
        </trans-unit>
        <trans-unit id="0cafd5be850ea5d2e6750ad07ea27305788174dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prop()&lt;/code&gt; can return any type - string, integer, boolean; while &lt;code&gt;.attr()&lt;/code&gt; always returns a string.</source>
          <target state="translated">&lt;code&gt;.prop()&lt;/code&gt; 는 모든 유형을 반환 할 수 있습니다-문자열, 정수, 부울; &lt;code&gt;.attr()&lt;/code&gt; 항상 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="738d5937696ac0bf4162d421fba6bb14cbebe284" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prop()&lt;/code&gt; is said to be about 2.5 times faster than &lt;code&gt;.attr()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.prop()&lt;/code&gt; 는 &lt;code&gt;.attr()&lt;/code&gt; 보다 약 2.5 배 빠르다고합니다.</target>
        </trans-unit>
        <trans-unit id="16c16404280b5f665f8a7b0455b6611a4362a6cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prop()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;.prop()&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="800496ebe0f03999ca65dee2a5884890c87b687e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attributes&lt;/code&gt; -&amp;gt; HTML</source>
          <target state="translated">&lt;code&gt;attributes&lt;/code&gt; -&amp;gt; HTML</target>
        </trans-unit>
        <trans-unit id="ab6c8f2b8cc052a878aa26e760c7ab6cd1c8ddbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jQuery.attr()&lt;/code&gt;
Get the value of an attribute for the first element in the set of matched elements.</source>
          <target state="translated">&lt;code&gt;jQuery.attr()&lt;/code&gt; 일치하는 요소 세트에서 첫 번째 요소의 속성 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="b15244b3e4fcfe6828da96a4971f9005b9201354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jQuery.prop()&lt;/code&gt;
Get the value of a property for the first element in the set of matched elements.</source>
          <target state="translated">&lt;code&gt;jQuery.prop()&lt;/code&gt; 일치하는 요소 세트에서 첫 번째 요소의 특성 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="0853e015e8d5b628ebdb2ba0cf40229aae20b46c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;properties&lt;/code&gt; -&amp;gt; DOM</source>
          <target state="translated">&lt;code&gt;properties&lt;/code&gt; -&amp;gt; DOM</target>
        </trans-unit>
        <trans-unit id="f95f321be5b63fb819b3df5cbafde5b9229c97ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;$('input').attr('blah')&lt;/code&gt;&lt;/strong&gt;: returns &lt;code&gt;'apple'&lt;/code&gt; eh? Why not &quot;pear&quot; as this was set last on that element. Because the property was changed on the input attribute, not the DOM input element itself -- they basically almost work independently of each other.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;$('input').attr('blah')&lt;/code&gt; &lt;/strong&gt; : &lt;code&gt;'apple'&lt;/code&gt; 을 반환합니다. 이 요소에 마지막으로 설정된 &quot;배&quot;가 아닌 이유는 무엇입니까? 이 속성은 DOM 입력 요소 자체가 아닌 입력 속성에서 변경 되었기 때문에 기본적으로 거의 독립적으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="8ab9ec80782e4a60196917197d70a614bc39ce68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;$('input').attr('blah')&lt;/code&gt;&lt;/strong&gt;: returns &lt;code&gt;'hello'&lt;/code&gt; as expected. No suprises here.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;$('input').attr('blah')&lt;/code&gt; &lt;/strong&gt; : 예상대로 &lt;code&gt;'hello'&lt;/code&gt; 를 반환합니다. 여기에는 놀라운 일이 없습니다.</target>
        </trans-unit>
        <trans-unit id="574269348a3552e05b5eeae1c4434783c9d94a28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;$('input').prop('blah')&lt;/code&gt;&lt;/strong&gt;: returns &lt;code&gt;'pear'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;$('input').prop('blah')&lt;/code&gt; &lt;/strong&gt; : &lt;code&gt;'pear'&lt;/code&gt; 반환</target>
        </trans-unit>
        <trans-unit id="0e836d07931f373a649197b208d31fd2d78aaba9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;$('input').prop('blah')&lt;/code&gt;&lt;/strong&gt;: returns &lt;code&gt;undefined&lt;/code&gt; -- because it's trying to do &lt;code&gt;[HTMLInputElement].blah&lt;/code&gt; -- and no such property on that DOM object exists. It only exists in the scope as an attribute of that element i.e. &lt;code&gt;[HTMLInputElement].getAttribute('blah')&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;$('input').prop('blah')&lt;/code&gt; &lt;/strong&gt; : &lt;code&gt;[HTMLInputElement].blah&lt;/code&gt; 를 수행하려고하기 때문에 &lt;code&gt;undefined&lt;/code&gt; 반환하며 해당 DOM 객체에 해당 속성이 존재하지 않습니다. &lt;code&gt;[HTMLInputElement].getAttribute('blah')&lt;/code&gt; 즉 해당 요소의 속성으로 만 범위에 존재합니다.</target>
        </trans-unit>
        <trans-unit id="d433fb2fcdb5f942cd245ff423f01d43c9283185" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Dirty checkedness&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;더러운 점검&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8c1b2599a09f6f049ab73cb5993a0a53350859e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Don't mess up.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;엉망하지 마십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9bcef67850cc1ae25bb206c4581ec00fa383a09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Original answer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;원래 답변&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="10b56c006d51020faaa60998e564b97a491898eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Purpose:&lt;/strong&gt;
Allows markup to have data associated with it for events, rendering, and other purposes.</source>
          <target state="translated">&lt;strong&gt;목적 :&lt;/strong&gt; 이벤트, 렌더링 및 기타 목적으로 마크 업과 관련된 데이터를 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc5c519817a7114a9fe213be36e6e05e67010dce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Purpose:&lt;/strong&gt;
Gives access to properties that belong to element nodes. These properties are similar to attributes, but are only accessible through JavaScript. This is an important difference that helps clarify the role of DOM properties. &lt;strong&gt;Please note that attributes are completely different from properties&lt;/strong&gt;, as this event handler assignment is useless and won't receive the event (body doesn't have an onload event, only an onload attribute).</source>
          <target state="translated">&lt;strong&gt;목적 :&lt;/strong&gt; 요소 노드에 속하는 속성에 액세스 할 수 있습니다. 이러한 속성은 속성과 비슷하지만 JavaScript를 통해서만 액세스 할 수 있습니다. 이는 DOM 속성의 역할을 명확히하는 데 도움이되는 중요한 차이점입니다. 이 이벤트 핸들러 할당은 쓸모없고 이벤트를 수신하지 않으므로 (본문에는 onload 이벤트가없고 onload 속성 만 &lt;strong&gt;있으므로) 속성은 properties&lt;/strong&gt; 와 &lt;strong&gt;완전히 다릅니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="70f5c76a3b222c7cb94ada1a8f4c7ecc94710921" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Rule of thumb is&lt;/strong&gt;: &lt;code&gt;.prop()&lt;/code&gt; method should be used for boolean attributes/properties and for properties which do not exist in html
  (such as window.location). All other attributes (ones you can see in
  the html) can and should continue to be manipulated with the &lt;code&gt;.attr()&lt;/code&gt;
  method. (&lt;a href=&quot;http://blog.jquery.com/2011/05/10/jquery-1-6-1-rc-1-released/&quot;&gt;http://blog.jquery.com/2011/05/10/jquery-1-6-1-rc-1-released/&lt;/a&gt;)</source>
          <target state="translated">&lt;strong&gt;일반적으로&lt;/strong&gt; &lt;code&gt;.prop()&lt;/code&gt; 메소드는 부울 속성 / 속성 및 html에없는 속성 (예 : window.location)에 사용해야합니다. 다른 모든 속성 (html에서 볼 수있는 속성)은 &lt;code&gt;.attr()&lt;/code&gt; 메서드를 사용하여 계속 조작 할 수 있으며 계속해야합니다. ( &lt;a href=&quot;http://blog.jquery.com/2011/05/10/jquery-1-6-1-rc-1-released/&quot;&gt;http://blog.jquery.com/2011/05/10/jquery-1-6-1-rc-1-released/&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="7d993eba3ceb090d6d6942b6a5ab74bb8dbc2fc7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See a fiddle demonstrating the difference:&lt;/strong&gt;&lt;a href=&quot;http://jsfiddle.net/garreh/uLQXc/&quot;&gt;http://jsfiddle.net/garreh/uLQXc/&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;차이점을 보여주는 바이올린을보십시오 :&lt;/strong&gt; &lt;a href=&quot;http://jsfiddle.net/garreh/uLQXc/&quot;&gt;http://jsfiddle.net/garreh/uLQXc/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="284c0cc1c16634ee278d62d9da4d70563394d278" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TL;DR&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;TL;DR&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a648cd0606cca5d79438d4f156e8c36af2fbb7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;UPDATE&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="73100dbc2d73aa3af91508e0cef8994abcc733ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update 1 November 2012&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;2012 년 11 월 1 일 업데이트&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f507894dd7bd93edc0b29a670c396862522c2487" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Visualization:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Visualization:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b3a0713561aad9f0c3d1af0a4b05363c9be1e08b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;attributes&lt;/strong&gt; are in your HTML &lt;em&gt;text document/file&lt;/em&gt; (== imagine this is the result of your html markup parsed), whereas</source>
          <target state="translated">&lt;strong&gt;속성&lt;/strong&gt; 은 HTML &lt;em&gt;텍스트 문서 / 파일에 있습니다&lt;/em&gt; (== 이것이 html 마크 업의 결과라고 상상해보십시오).</target>
        </trans-unit>
        <trans-unit id="94a8362984a2085d00aaeb567b4f9fcbb8bff3cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;edit&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;edit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b172629d00ea5432a115d52722c5ec33f3334809" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;properties&lt;/strong&gt; are in HTML &lt;em&gt;DOM tree&lt;/em&gt; (== basically an actual property of some object in JS sense).</source>
          <target state="translated">&lt;strong&gt;속성&lt;/strong&gt; 은 HTML &lt;em&gt;DOM 트리에 있습니다&lt;/em&gt; (== 기본적으로 JS 의미에서 일부 객체의 실제 속성).</target>
        </trans-unit>
        <trans-unit id="e76d9ec4cc057c47cdaf896af3b06208e58b66b7" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;property&lt;/em&gt; is the current state of the input element. An &lt;em&gt;attribute&lt;/em&gt; is the default value.</source>
          <target state="translated">&lt;em&gt;속성&lt;/em&gt; 은 입력 요소의 현재 상태입니다. &lt;em&gt;속성&lt;/em&gt; 이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="2da03762e7d09e4991bcadc866dc8dba4dfaf6fe" translate="yes" xml:space="preserve">
          <source>A DOM element is an object, a thing in memory. Like most objects in OOP, it has &lt;em&gt;properties&lt;/em&gt;. It also, separately, has a map of the attributes defined on the element (usually coming from the markup that the browser read to create the element). Some of the element's &lt;em&gt;properties&lt;/em&gt; get their &lt;em&gt;initial&lt;/em&gt; values from &lt;em&gt;attributes&lt;/em&gt; with the same or similar names (&lt;code&gt;value&lt;/code&gt; gets its initial value from the &quot;value&quot; attribute; &lt;code&gt;href&lt;/code&gt; gets its initial value from the &quot;href&quot; attribute, but it's not exactly the same value; &lt;code&gt;className&lt;/code&gt; from the &quot;class&quot; attribute). Other properties get their initial values in other ways: For instance, the &lt;code&gt;parentNode&lt;/code&gt; property gets its value based on what its parent element is; an element always has a &lt;code&gt;style&lt;/code&gt; property, whether it has a &quot;style&quot; attribute or not.</source>
          <target state="translated">DOM 요소는 메모리에있는 객체입니다. OOP의 대부분의 객체와 마찬가지로 &lt;em&gt;속성&lt;/em&gt; 이 &lt;em&gt;있습니다&lt;/em&gt; . 또한 개별적으로 요소에 정의 된 속성 맵이 있습니다 (일반적으로 브라우저가 요소를 작성하기 위해 읽는 마크 업에서 가져옴). 요소의 &lt;em&gt;속성&lt;/em&gt; 중 일부는 이름이 같거나 유사한 &lt;em&gt;속성&lt;/em&gt; 에서 &lt;em&gt;초기&lt;/em&gt; 값을 가져옵니다 ( &lt;code&gt;value&lt;/code&gt; 은 &quot;value&quot;속성에서 초기 값을 가져오고 &lt;code&gt;href&lt;/code&gt; 는 &quot;href&quot;속성에서 초기 값을 가져 오지만 정확히 동일한 값은 아닙니다). &quot;class&quot;속성의 &lt;code&gt;className&lt;/code&gt; ). 다른 속성은 다른 방법으로 초기 값을 가져옵니다. 예를 들어 &lt;code&gt;parentNode&lt;/code&gt; 속성은 부모 요소가 무엇인지에 따라 값을 가져옵니다. 요소에는 &quot;style&quot;속성이 있는지 여부에 관계없이 항상 &lt;code&gt;style&lt;/code&gt; 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f5d32344daee4e4e25e443866211feb265f1f80" translate="yes" xml:space="preserve">
          <source>A property can contain things of different types. An attribute can only contain strings</source>
          <target state="translated">속성은 다른 유형의 것들을 포함 할 수 있습니다. 속성은 문자열 만 포함 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="cf45643aa7d4e0df0d09f581ba6e1247119735f0" translate="yes" xml:space="preserve">
          <source>A property is in the DOM; an attribute is in the HTML that is parsed into the DOM.</source>
          <target state="translated">속성은 DOM에 있습니다. 속성은 DOM으로 구문 분석되는 HTML에 있습니다.</target>
        </trans-unit>
        <trans-unit id="c25569031ce570c9745dc93d4fabf1870a455026" translate="yes" xml:space="preserve">
          <source>All is in &lt;a href=&quot;https://api.jquery.com/prop/&quot;&gt;the doc&lt;/a&gt;:</source>
          <target state="translated">모두 &lt;a href=&quot;https://api.jquery.com/prop/&quot;&gt;문서에 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="09a5cd01145345650843d767f10361ae5437df2e" translate="yes" xml:space="preserve">
          <source>Also some of difference when accessing &lt;code&gt;checkbox&lt;/code&gt; value and &lt;code&gt;href&lt;/code&gt;
with &lt;code&gt;attr()&lt;/code&gt; and &lt;code&gt;prop()&lt;/code&gt; as thing change with DOM output with
&lt;code&gt;prop()&lt;/code&gt; as full link from &lt;code&gt;origin&lt;/code&gt; and &lt;code&gt;Boolean&lt;/code&gt; value for checkbox
&lt;code&gt;(pre-1.6)&lt;/code&gt;</source>
          <target state="translated">또한 &lt;code&gt;attr()&lt;/code&gt; 및 &lt;code&gt;prop()&lt;/code&gt; 을 사용하여 &lt;code&gt;checkbox&lt;/code&gt; 액세스 할 때의 차이점 은 prop () 을 사용하여 DOM 출력을 사용하여 DOM 출력을 사용하여 &lt;code&gt;origin&lt;/code&gt; 에서 전체 링크로 연결하고 확인란의 &lt;code&gt;Boolean&lt;/code&gt; 값 &lt;code&gt;(pre-1.6)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd97f97ddf8b59935214e336be58383c2177cbf1" translate="yes" xml:space="preserve">
          <source>And here is a table that shows where &lt;code&gt;.prop()&lt;/code&gt; is preferred (even though &lt;code&gt;.attr()&lt;/code&gt; can still be used).</source>
          <target state="translated">다음은 &lt;code&gt;.prop()&lt;/code&gt; 가 선호되는 위치를 보여주는 표입니다 ( &lt;code&gt;.attr()&lt;/code&gt; 을 계속 사용할 수 있음에도 불구하고).</target>
        </trans-unit>
        <trans-unit id="6445c56b5b17e9c7bfa24988eb6aee150e4fc92c" translate="yes" xml:space="preserve">
          <source>And if I &lt;em&gt;do&lt;/em&gt; have to switch to using &lt;code&gt;prop()&lt;/code&gt;, all the old &lt;code&gt;attr()&lt;/code&gt; calls will break if i switch to 1.6?</source>
          <target state="translated">&lt;code&gt;prop()&lt;/code&gt; 사용으로 전환 해야하는 경우 1.6으로 전환하면 모든 이전 &lt;code&gt;attr()&lt;/code&gt; 호출이 중단됩니까?</target>
        </trans-unit>
        <trans-unit id="a6a42570111c5d4aff3c6fcf4e73f990a9735bb1" translate="yes" xml:space="preserve">
          <source>As Tim said, the &lt;strong&gt;vast majority&lt;/strong&gt; of the time, we want to be working with properties. Partially that's because their values (even their names) tend to be more consistent across browsers. We mostly only want to work with attributes when there is no property related to it (custom attributes), or when we know that for that particular attribute, the attribute and the property are not 1:1 (as with &lt;code&gt;href&lt;/code&gt; and &quot;href&quot; above).</source>
          <target state="translated">팀이 말했듯이 &lt;strong&gt;대부분&lt;/strong&gt; 의 시간에 우리는 속성으로 작업하고 싶습니다. 부분적으로는 값 (이름조차도)이 브라우저에서 더 일관된 경향이 있기 때문입니다. 대부분 속성과 관련된 속성이없는 경우 (사용자 정의 속성) 또는 해당 특정 속성에 대해 속성과 속성이 1 : 1이 아님을 아는 경우에만 위의 &lt;code&gt;href&lt;/code&gt; 및 &quot;href&quot;와 같이 속성을 사용하려고합니다. ).</target>
        </trans-unit>
        <trans-unit id="4e060d177f7f8f83b9e02ce1f3471fc751288f37" translate="yes" xml:space="preserve">
          <source>As an example of how properties are simpler to deal with than attributes, consider a checkbox that is initially checked. Here are two possible pieces of valid HTML to do this:</source>
          <target state="translated">속성보다 속성을 처리하는 것이 더 간단한 방법의 예로 처음에 선택된 확인란을 고려하십시오. 이 작업을 수행 할 수있는 유효한 HTML은 다음 두 가지입니다.</target>
        </trans-unit>
        <trans-unit id="f4a05fba98dd2bad96c67f09e72bd858c36334c0" translate="yes" xml:space="preserve">
          <source>Attributes are returned in string form and can be inconsistent from browser to browser. However, they can be vital in some situations. As exemplified above, IE 8 Quirks Mode (and below) expects the name of a DOM property in get/set/removeAttribute instead of the attribute name. This is one of many reasons why it's important to know the difference.</source>
          <target state="translated">속성은 문자열 형식으로 반환되며 브라우저마다 일치하지 않을 수 있습니다. 그러나 상황에 따라 중요 할 수 있습니다. 위에서 예시 한 바와 같이, IE 8 Quirks Mode (및 이하)는 속성 이름 대신 get / set / removeAttribute에서 DOM 속성의 이름을 예상합니다. 이것이 차이점을 아는 것이 중요한 이유 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="6fce263de5a0bfede52d6d9329411cb1cf0bdede" translate="yes" xml:space="preserve">
          <source>Before jQuery 1.6 , the &lt;code&gt;attr()&lt;/code&gt; method &lt;strong&gt;&lt;em&gt;sometimes&lt;/em&gt;&lt;/strong&gt; took property values into account when retrieving attributes, this caused rather inconsistent behavior.</source>
          <target state="translated">jQuery 1.6 이전에는 속성을 검색 할 때 &lt;code&gt;attr()&lt;/code&gt; 메소드가 &lt;strong&gt;&lt;em&gt;때때로&lt;/em&gt;&lt;/strong&gt; 속성 값을 고려했기 때문에 다소 일관성이없는 동작이 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="1429903df65b0d2b7f1c09b0f88004faec915cdf" translate="yes" xml:space="preserve">
          <source>CSS selector &lt;code&gt;[name=value]&lt;/code&gt;</source>
          <target state="translated">CSS 선택기 &lt;code&gt;[name=value]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a4623e286783700c82976ca61e6f2d80d6f97e22" translate="yes" xml:space="preserve">
          <source>Custom attributes would include, for instance, any &lt;code&gt;data-xyz&lt;/code&gt; attributes you might put on elements to provide meta-data to your code (now that that's valid as of HTML5, as long as you stick to the &lt;code&gt;data-&lt;/code&gt; prefix). (Recent versions of jQuery give you access to &lt;code&gt;data-xyz&lt;/code&gt; elements via the &lt;code&gt;data&lt;/code&gt; function, but that function is &lt;strong&gt;not&lt;/strong&gt; just an accessor for &lt;code&gt;data-xyz&lt;/code&gt; attributes [it does both more and less than that]; unless you actually need its features, I'd use the &lt;code&gt;attr&lt;/code&gt; function to interact with &lt;code&gt;data-xyz&lt;/code&gt; attribute.)</source>
          <target state="translated">예를 들어, 사용자 정의 속성에는 코드에 메타 데이터를 제공하기 위해 요소에 넣을 수있는 &lt;code&gt;data-xyz&lt;/code&gt; 속성이 포함됩니다 (현재 &lt;code&gt;data-&lt;/code&gt; 접두사를 고수하는 한 HTML5부터 유효합니다). (최신 버전의 jQuery는 &lt;code&gt;data&lt;/code&gt; 함수를 통해 &lt;code&gt;data-xyz&lt;/code&gt; 요소에 대한 액세스를 제공하지만 해당 함수는 단순히 &lt;code&gt;data-xyz&lt;/code&gt; 속성에 대한 접근자가 &lt;strong&gt;아닙니다&lt;/strong&gt; . 실제로 그 기능이 필요한 경우가 아니라면 &lt;code&gt;attr&lt;/code&gt; 함수를 사용하여 &lt;code&gt;data-xyz&lt;/code&gt; 속성과 상호 작용하십시오.)</target>
        </trans-unit>
        <trans-unit id="20a3cf47f337d147487348ae45f88036b647b101" translate="yes" xml:space="preserve">
          <source>DOM Element Properties, Mozilla Dev Center</source>
          <target state="translated">DOM 요소 속성, Mozilla 개발자 센터</target>
        </trans-unit>
        <trans-unit id="540c4a856184492e52c38c3dd3255fe73fece8f6" translate="yes" xml:space="preserve">
          <source>DOM Properties</source>
          <target state="translated">DOM 속성</target>
        </trans-unit>
        <trans-unit id="12d94716355fb3748af185f5bd1d4f4c331ea0b5" translate="yes" xml:space="preserve">
          <source>DOM4</source>
          <target state="translated">DOM4</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="54a7bbc65e003d91e53398eed689f5037b38195e" translate="yes" xml:space="preserve">
          <source>Example: Changing the &lt;code&gt;class&lt;/code&gt; attribute of a tag will change the &lt;code&gt;className&lt;/code&gt; property of that tag in the DOM.
If you have no attribute on a tag, you still have the corresponding DOM property with an empty or a default value.</source>
          <target state="translated">예 : 태그의 &lt;code&gt;class&lt;/code&gt; 속성을 변경하면 DOM에서 해당 태그의 &lt;code&gt;className&lt;/code&gt; 속성이 변경됩니다. 태그에 속성이없는 경우에도 비어 있거나 기본값이있는 해당 DOM 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8689d5cce98d1d5e74d8c755bbc46ad5f337575f" translate="yes" xml:space="preserve">
          <source>Example: While your tag has no &lt;code&gt;class&lt;/code&gt; attribute, the DOM property &lt;code&gt;className&lt;/code&gt; does exist with a empty string value.</source>
          <target state="translated">예 : 태그에 &lt;code&gt;class&lt;/code&gt; 속성이 없지만 DOM 속성 &lt;code&gt;className&lt;/code&gt; 은 빈 문자열 값으로 존재합니다.</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">스 니펫 확장</target>
        </trans-unit>
        <trans-unit id="019d672f066237686e3bb2aa99d82366bb648cd1" translate="yes" xml:space="preserve">
          <source>For other attributes like &lt;code&gt;checked=&quot;checked&quot;&lt;/code&gt; on &lt;code&gt;input type=&quot;checkbox&quot;&lt;/code&gt;, things break, because once you click on it, it becomes dirty, and then adding or removing the &lt;code&gt;checked=&quot;checked&quot;&lt;/code&gt; content attribute &lt;strong&gt;does not toggle checkedness anymore&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;input type=&quot;checkbox&quot;&lt;/code&gt; 의 &lt;code&gt;checked=&quot;checked&quot;&lt;/code&gt; 와 같은 다른 속성의 경우, 클릭하면 더러워지고 &lt;code&gt;checked=&quot;checked&quot;&lt;/code&gt; 컨텐츠 속성을 추가하거나 제거해도 &lt;strong&gt;더 이상&lt;/strong&gt; 확인 &lt;strong&gt;이 전환되지 않기 때문에 문제가 발생&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="321c30a1e552571a7b88ac0afbbf564dfac04d6c" translate="yes" xml:space="preserve">
          <source>For some attributes  like &lt;code&gt;disabled&lt;/code&gt; on &lt;code&gt;button&lt;/code&gt;, adding or removing the content attribute &lt;code&gt;disabled=&quot;disabled&quot;&lt;/code&gt; always toggles the property (called IDL attribute in HTML5) because &lt;a href=&quot;http://www.w3.org/TR/html5/forms.html#attr-fe-disabled&quot;&gt;http://www.w3.org/TR/html5/forms.html#attr-fe-disabled&lt;/a&gt; says:</source>
          <target state="translated">&lt;code&gt;button&lt;/code&gt; &lt;code&gt;disabled&lt;/code&gt; 과 같은 일부 속성의 경우 컨텐츠 속성 &lt;code&gt;disabled=&quot;disabled&quot;&lt;/code&gt; 를 추가하거나 제거하면 &lt;a href=&quot;http://www.w3.org/TR/html5/forms.html#attr-fe-disabled&quot;&gt;http://www.w3.org/TR/html5/forms.html#attr&lt;/a&gt; 이므로 항상 속성 (HTML5에서 IDL 속성이라고 함)을 토글합니다 . -fe-disabled 는 다음과 같이 말합니다.</target>
        </trans-unit>
        <trans-unit id="ae43a9ec11eec2526a860a66aa9f96c06dbde4a2" translate="yes" xml:space="preserve">
          <source>Further detail</source>
          <target state="translated">더 자세히</target>
        </trans-unit>
        <trans-unit id="99f8b7321ea9542a8c8fb617b4ecd7ce9217af59" translate="yes" xml:space="preserve">
          <source>Gary Hole answer is very relevant to solve the problem if the code is written in such way</source>
          <target state="translated">Gary Hole 답변은 코드가 그런 식으로 작성된 경우 문제를 해결하는 데 매우 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="acfeca83f757b07fb0be4f21e58de802f6a16840" translate="yes" xml:space="preserve">
          <source>Gently reminder about using &lt;code&gt;prop()&lt;/code&gt;, example:</source>
          <target state="translated">&lt;code&gt;prop()&lt;/code&gt; 사용에 대해 부드럽게 상기시켜줍니다. 예 :</target>
        </trans-unit>
        <trans-unit id="40574c2d227df28b2cea9836bdad6eea3a247fdb" translate="yes" xml:space="preserve">
          <source>Get the value of a &lt;strong&gt;property&lt;/strong&gt; for the first element in the set of matched elements.</source>
          <target state="translated">일치하는 요소 집합에서 첫 번째 요소의 &lt;strong&gt;속성&lt;/strong&gt; 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="ddc85aca5b88f9ae99fbaa02e9207c6473fcc9ac" translate="yes" xml:space="preserve">
          <source>Get the value of an &lt;strong&gt;attribute&lt;/strong&gt; for the first element in the set of matched elements.</source>
          <target state="translated">일치하는 요소 세트에서 첫 번째 요소의 &lt;strong&gt;속성&lt;/strong&gt; 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="53f8409e81e8e14952f180db86f564b494978cae" translate="yes" xml:space="preserve">
          <source>Getting a HTML attribute that doesn't sync with a DOM property, e.g. get the &quot;original value&quot; of a standard HTML attribute, like &lt;code&gt;&amp;lt;input value=&quot;abc&quot;&amp;gt;.&lt;/code&gt;</source>
          <target state="translated">DOM 속성과 동기화되지 않는 HTML 속성 가져 오기 (예 : &lt;code&gt;&amp;lt;input value=&quot;abc&quot;&amp;gt;.&lt;/code&gt; 와 같은 표준 HTML 속성의 &quot;원래 값&quot;)를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="234ee2f777ce32d1dbbcb79cda2e3e1d8f9c2992" translate="yes" xml:space="preserve">
          <source>Getting a custom HTML attribute (since it's not synced with a DOM property).</source>
          <target state="translated">DOM 속성과 동기화되지 않았으므로 맞춤 HTML 속성을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="c3b589d0b978663a06c8b18130a6c7a11c3253e0" translate="yes" xml:space="preserve">
          <source>Gives the updated values of elements which is modified via javascript/jquery</source>
          <target state="translated">javascript / jquery를 통해 수정 된 요소의 업데이트 된 값을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="dc5e77301be5b0dc26b66f85672c13318ad75bc2" translate="yes" xml:space="preserve">
          <source>Gives you the value of element as it was defined in the html on page load</source>
          <target state="translated">페이지로드시 html에 정의 된대로 element 값을 제공합니다</target>
        </trans-unit>
        <trans-unit id="c83fb96d107f191cb169da811d2b409263026eb9" translate="yes" xml:space="preserve">
          <source>HTML Attributes</source>
          <target state="translated">HTML 속성</target>
        </trans-unit>
        <trans-unit id="a8f2abfc12c0034cce7a586f0553589a8fa15be2" translate="yes" xml:space="preserve">
          <source>HTML Attributes,
Mozilla Dev Center</source>
          <target state="translated">HTML 속성, Mozilla 개발자 센터</target>
        </trans-unit>
        <trans-unit id="faefd9c84be9b5391376db67824b3adfc8adfb5b" translate="yes" xml:space="preserve">
          <source>HTML: &lt;code&gt;&amp;lt;textarea id=&quot;test&quot; value=&quot;foo&quot;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/code&gt;</source>
          <target state="translated">HTML : &lt;code&gt;&amp;lt;textarea id=&quot;test&quot; value=&quot;foo&quot;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40eb91649b65a0f72ca0f423af7c83377d4b81c4" translate="yes" xml:space="preserve">
          <source>Here's an issue I didn't see in the other answers.</source>
          <target state="translated">다른 답변에서 보지 못한 문제가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d10a3f1f61230d22097f06116feecbf2db7dce0" translate="yes" xml:space="preserve">
          <source>Here, you'll notice a list of properties under the &quot;DOM&quot; tab in Firebug. These are DOM properties. You'll immediately notice quite a few of them, as you'll have used them before without knowing it. Their values are what you'll be receiving through JavaScript.</source>
          <target state="translated">여기에 Firebug의 &quot;DOM&quot;탭 아래에 속성 목록이 있습니다. 이것들은 DOM 속성입니다. 당신은 그것을 알지 못하고 이전에 사용 했으므로 즉시 그들 중 상당수를 알 수 있습니다. 그들의 가치는 JavaScript를 통해 받게 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="69f641a37da6c4415bd790789bb766184eba1756" translate="yes" xml:space="preserve">
          <source>I think &lt;a href=&quot;https://stackoverflow.com/questions/5874652/prop-vs-attr/5876747#5876747&quot;&gt;Tim said it quite well&lt;/a&gt;, but let's step back:</source>
          <target state="translated">나는 &lt;a href=&quot;https://stackoverflow.com/questions/5874652/prop-vs-attr/5876747#5876747&quot;&gt;Tim이 꽤 잘 말했다고&lt;/a&gt; 생각하지만 뒤로 물러서 봅시다.</target>
        </trans-unit>
        <trans-unit id="fed0c03c46172573702e64a56ca6394261bb1d23" translate="yes" xml:space="preserve">
          <source>I'll summarize the main issues:</source>
          <target state="translated">주요 문제를 요약하겠습니다.</target>
        </trans-unit>
        <trans-unit id="e365ffe1c8810b64d991b3f8224495768ce18106" translate="yes" xml:space="preserve">
          <source>If you change an attribute, the change will be reflected in the DOM (sometimes with a different name).</source>
          <target state="translated">속성을 변경하면 변경 사항이 DOM에 반영됩니다 (때로는 다른 이름으로).</target>
        </trans-unit>
        <trans-unit id="7c58b193b79163df01da5be9e079a6e160871211" translate="yes" xml:space="preserve">
          <source>If you change the one, the other will be changed by a controller, and vice versa.
This controller is not in jQuery, but in the browser's native code.</source>
          <target state="translated">하나를 변경하면 다른 하나는 컨트롤러에 의해 변경되며 그 반대도 마찬가지입니다. 이 컨트롤러는 jQuery가 아니라 브라우저의 기본 코드에 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb2649600de350b8e935cfc0ce3dd919260347eb" translate="yes" xml:space="preserve">
          <source>If you're a jQuery developer and are confused by this whole business about properties and attributes, you need to take a step back and learn a little about it, since jQuery is no longer trying so hard to shield you from this stuff. For the authoritative but somewhat dry word on the subject, there's the specs: &lt;a href=&quot;http://www.w3.org/TR/dom/&quot;&gt;DOM4&lt;/a&gt;, &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-HTML/&quot;&gt;HTML DOM&lt;/a&gt;, &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-Core&quot;&gt;DOM Level 2&lt;/a&gt;, &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-3-Core/&quot;&gt;DOM Level 3&lt;/a&gt;. Mozilla's DOM documentation is valid for most modern browsers and is easier to read than the specs, so you may find their &lt;a href=&quot;https://developer.mozilla.org/en/gecko_dom_reference&quot;&gt;DOM reference&lt;/a&gt; helpful. There's a &lt;a href=&quot;https://developer.mozilla.org/en/DOM/element#Properties&quot;&gt;section on element properties&lt;/a&gt;.</source>
          <target state="translated">jQuery 개발자이고 속성 및 속성에 대해이 전체 비즈니스에 혼란을 겪고 있다면 jQuery는 더 이상이 항목으로부터 사용자를 보호하기 위해 더 이상 노력하지 않기 때문에 한 걸음 물러서서 약간 배워야합니다. 주제에 대한 권위 있지만 다소 &lt;a href=&quot;http://www.w3.org/TR/dom/&quot;&gt;건전한&lt;/a&gt; 단어에는 DOM4 , &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-HTML/&quot;&gt;HTML DOM&lt;/a&gt; , &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-Core&quot;&gt;DOM Level 2&lt;/a&gt; , &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-3-Core/&quot;&gt;DOM Level 3 사양이&lt;/a&gt; 있습니다. Mozilla의 DOM 문서는 대부분의 최신 브라우저에 유효하며 사양보다 읽기 쉽습니다. 따라서 &lt;a href=&quot;https://developer.mozilla.org/en/gecko_dom_reference&quot;&gt;DOM 참조가&lt;/a&gt; 도움이 될 수 있습니다. &lt;a href=&quot;https://developer.mozilla.org/en/DOM/element#Properties&quot;&gt;요소 속성에&lt;/a&gt; 대한 섹션이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1187e97a31a5a880515a8c66d3eb267da92fff49" translate="yes" xml:space="preserve">
          <source>If you've only ever used jQuery and not the DOM directly, this could be a confusing change, although it is definitely an improvement conceptually. Not so good for the bazillions of sites using jQuery that will break as a result of this change though.</source>
          <target state="translated">DOM을 직접 사용하지 않고 jQuery 만 사용한 적이 있다면 이는 개념적으로 개선 된 것이지만 혼란스러운 변경 일 수 있습니다. 이 변경의 결과로 중단되는 jQuery를 사용하는 사이트의 독창적 인 사이트에는 그렇게 좋지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c06d2461f9b3e13fae850da05b3a7abc18dfd83a" translate="yes" xml:space="preserve">
          <source>Importantly, many of them are synced (if you update &lt;code&gt;class&lt;/code&gt; property, &lt;code&gt;class&lt;/code&gt; attribute in html will also be updated; and otherwise). &lt;strong&gt;But&lt;/strong&gt; some attributes may be synced to unexpected properties - eg, &lt;strong&gt;attribute&lt;/strong&gt;&lt;code&gt;checked&lt;/code&gt; corresponds to &lt;strong&gt;property&lt;/strong&gt;&lt;code&gt;defaultChecked&lt;/code&gt;, so that</source>
          <target state="translated">중요하게도 많은 것들이 동기화됩니다 ( &lt;code&gt;class&lt;/code&gt; 속성을 업데이트하면 html의 &lt;code&gt;class&lt;/code&gt; 속성도 업데이트됩니다). &lt;strong&gt;그러나&lt;/strong&gt; 일부 속성은 예기치 않은 속성과 동기화 될 수 있습니다. 예를 들어 &lt;strong&gt;속성&lt;/strong&gt; &lt;code&gt;checked&lt;/code&gt; 은 &lt;strong&gt;속성&lt;/strong&gt; &lt;code&gt;defaultChecked&lt;/code&gt; 에 해당하므로</target>
        </trans-unit>
        <trans-unit id="7e1f21829f0ba43c086e6a30665974eca8d453f8" translate="yes" xml:space="preserve">
          <source>In earlier versions of jQuery, this returns an empty string. In 1.6, it returns the proper value, &lt;code&gt;foo&lt;/code&gt;.</source>
          <target state="translated">이전 버전의 jQuery에서는 빈 문자열을 반환합니다. 1.6에서는 적절한 값인 &lt;code&gt;foo&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="50ae1a031b220ae92290c7e7ff3de059ded39d84" translate="yes" xml:space="preserve">
          <source>In jQuery 1.6, this unambiguously becomes</source>
          <target state="translated">jQuery 1.6에서 이것은 명백하게</target>
        </trans-unit>
        <trans-unit id="419cb6f1b0420b9fdf3f154d869f672f2740a4a0" translate="yes" xml:space="preserve">
          <source>In the majority of cases, &lt;code&gt;prop()&lt;/code&gt; does what &lt;code&gt;attr()&lt;/code&gt; used to do. Replacing calls to &lt;code&gt;attr()&lt;/code&gt; with &lt;code&gt;prop()&lt;/code&gt; in your code will generally work.</source>
          <target state="translated">대부분의 경우 &lt;code&gt;prop()&lt;/code&gt; 은 &lt;code&gt;attr()&lt;/code&gt; 이 수행 한 작업을 수행합니다. 코드에서 &lt;code&gt;attr()&lt;/code&gt; 호출을 &lt;code&gt;prop()&lt;/code&gt; 로 대체하면 일반적으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="6635c8bd4a2761655e3102eafb65d93077b5ffd7" translate="yes" xml:space="preserve">
          <source>It's just the distinction between HTML attributes and DOM objects that causes a confusion. For those that are comfortable acting on the DOM elements native properties such a &lt;code&gt;this.src&lt;/code&gt;&lt;code&gt;this.value&lt;/code&gt;&lt;code&gt;this.checked&lt;/code&gt; etc, &lt;code&gt;.prop&lt;/code&gt; is a very warm welcome to the family. For others, it's just an added layer of confusion. Let's clear that up.</source>
          <target state="translated">혼란을 일으키는 HTML 속성과 DOM 객체의 차이점 일뿐입니다. &lt;code&gt;this.src&lt;/code&gt; &lt;code&gt;this.value&lt;/code&gt; &lt;code&gt;this.checked&lt;/code&gt; 등과 같은 DOM 요소 고유 속성에 대해 편안하게 행동하는 사람들에게 &lt;code&gt;.prop&lt;/code&gt; 는 가족을 매우 환영합니다. 다른 사람들에게는 혼란의 추가 계층 일뿐입니다. 그것을 정리합시다.</target>
        </trans-unit>
        <trans-unit id="3877f5277b402e4125f4bb8aa688a3baeafba828" translate="yes" xml:space="preserve">
          <source>It's not obvious what the correct way to check or uncheck the checkbox is using the &lt;code&gt;checked&lt;/code&gt; attribute</source>
          <target state="translated">확인란을 선택하거나 선택 해제하는 올바른 방법이 &lt;code&gt;checked&lt;/code&gt; 속성을 사용하고 있는지 확실하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="04ffc11d79285baea96ffc399e2c192b92159824" translate="yes" xml:space="preserve">
          <source>JavaScript: &lt;code&gt;alert($('#test').attr('value'));&lt;/code&gt;</source>
          <target state="translated">자바 스크립트 : &lt;code&gt;alert($('#test').attr('value'));&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e22631d2e6fae01b5e44844b05f980ceaea5207" translate="yes" xml:space="preserve">
          <source>JavaScript: The Definitive Guide by
David Flanagan</source>
          <target state="translated">JavaScript : David Flanagan의 확실한 안내서</target>
        </trans-unit>
        <trans-unit id="1380368c31187eb52f58920d8d5acad4e5a0ad22" translate="yes" xml:space="preserve">
          <source>Let's consider this anchor in a page at &lt;code&gt;http://example.com/testing.html&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;http://example.com/testing.html&lt;/code&gt; 의 페이지에서이 앵커를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="85719bad9a2c4734c18c7d17ad1611d735103187" translate="yes" xml:space="preserve">
          <source>Mostly we want to use for DOM object rather then custom attribute
like &lt;code&gt;data-img, data-xyz&lt;/code&gt;.</source>
          <target state="translated">대부분 &lt;code&gt;data-img, data-xyz&lt;/code&gt; 와 같은 사용자 정의 속성 대신 DOM 객체에 사용하려고합니다.</target>
        </trans-unit>
        <trans-unit id="1724c4b4d2271c6924c46bc17bbb8314118dae97" translate="yes" xml:space="preserve">
          <source>My original answer applies specifically to jQuery 1.6. My advice remains the same but jQuery 1.6.1 changed things slightly: in the face of the predicted pile of broken websites, the jQuery team &lt;a href=&quot;http://blog.jquery.com/2011/05/12/jquery-1-6-1-released/&quot;&gt;reverted &lt;code&gt;attr()&lt;/code&gt; to something close to (but not exactly the same as) its old behaviour for Boolean attributes&lt;/a&gt;. John Resig also &lt;a href=&quot;http://ejohn.org/blog/jquery-16-and-attr/&quot;&gt;blogged about it&lt;/a&gt;. I can see the difficulty they were in but still disagree with his recommendation to prefer &lt;code&gt;attr()&lt;/code&gt;.</source>
          <target state="translated">내 원래 답변은 특히 jQuery 1.6에 적용됩니다. 내 충고는 동일하지만 jQuery 1.6.1은 약간 변경되었습니다. 예측 된 깨진 웹 사이트 더미에서 jQuery 팀 &lt;a href=&quot;http://blog.jquery.com/2011/05/12/jquery-1-6-1-released/&quot;&gt;은 &lt;code&gt;attr()&lt;/code&gt; 을 부울 속성에 대한 이전 동작과 비슷하지만 정확히 같지는 않은 것으로 되돌 렸습니다.&lt;/a&gt; . 존 레시 그 (John Resig)도 &lt;a href=&quot;http://ejohn.org/blog/jquery-16-and-attr/&quot;&gt;블로그에 올렸다&lt;/a&gt; . 나는 그들이 어려웠지만 &lt;code&gt;attr()&lt;/code&gt; 을 선호하는 그의 권고에 여전히 동의하지 않는다.</target>
        </trans-unit>
        <trans-unit id="8e38e678c66dd55ecd0686f2329e9f742e2d78c5" translate="yes" xml:space="preserve">
          <source>Note that the properties and attributes are distinct.</source>
          <target state="translated">속성과 속성은 서로 다릅니다.</target>
        </trans-unit>
        <trans-unit id="289e0a9f8648145124d90d94f9e10dbe6399aaa7" translate="yes" xml:space="preserve">
          <source>Now we change a few things like so:</source>
          <target state="translated">이제 다음과 같이 몇 가지 사항을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="94867e4802e9035ca9aad264ab7f98b9b8faf8e6" translate="yes" xml:space="preserve">
          <source>Now, although they are distinct, because all of this evolved rather than being designed from the ground up, a number of properties write back to the attribute they derived from if you set them. But not all do, and as you can see from &lt;code&gt;href&lt;/code&gt; above, the mapping is not always a straight &quot;pass the value on&quot;, sometimes there's interpretation involved.</source>
          <target state="translated">이제 그것들은 별개이지만,이 모든 것들이 처음부터 설계되기보다는 진화 되었기 때문에, 많은 속성들이 당신이 그것들을 설정하면 그들이 파생 한 속성에 다시 쓰여집니다. 그러나 모두가 아니라 위의 &lt;code&gt;href&lt;/code&gt; 에서 볼 수 있듯이 매핑이 항상 &quot;값을 전달&quot;하는 것은 아니며 때로는 해석이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b437be314cf0af285633f54789e33857dbdedd78" translate="yes" xml:space="preserve">
          <source>One thing &lt;code&gt;.attr()&lt;/code&gt; can do that &lt;code&gt;.prop()&lt;/code&gt; can't:  affect CSS selectors</source>
          <target state="translated">&lt;code&gt;.attr()&lt;/code&gt; 할 수있는 한 가지 &lt;code&gt;.prop()&lt;/code&gt; 는 할 수 없습니다 : CSS 선택기에 영향을 미칩니다</target>
        </trans-unit>
        <trans-unit id="2865c48558148f37fa6ff9bb59cde97ea9ac7fc9" translate="yes" xml:space="preserve">
          <source>P/S: When I'm checking Image &lt;strong&gt;&lt;em&gt;src&lt;/em&gt;&lt;/strong&gt; property. If the &lt;strong&gt;&lt;em&gt;src&lt;/em&gt;&lt;/strong&gt; is empty, &lt;strong&gt;prop&lt;/strong&gt; return the current URL of the page (wrong), and &lt;strong&gt;attr&lt;/strong&gt; return empty string (right).</source>
          <target state="translated">추신 : 이미지 &lt;strong&gt;&lt;em&gt;src&lt;/em&gt;&lt;/strong&gt; 속성을 확인할 때. &lt;strong&gt;&lt;em&gt;src&lt;/em&gt;&lt;/strong&gt; 가 비어 있으면 &lt;strong&gt;prop&lt;/strong&gt; 은 페이지의 현재 URL을 반환하고 (잘못된) &lt;strong&gt;attr은&lt;/strong&gt; 빈 문자열을 반환합니다 (오른쪽).</target>
        </trans-unit>
        <trans-unit id="66af78c1b7f1f37be404a2acb27e2b542f9f49a9" translate="yes" xml:space="preserve">
          <source>Properties are generally simpler to deal with than attributes. An attribute value may only be a string whereas a property can be of any type. For example, the &lt;code&gt;checked&lt;/code&gt; property is a Boolean, the &lt;code&gt;style&lt;/code&gt; property is an object with individual properties for each style, the &lt;code&gt;size&lt;/code&gt; property is a number.</source>
          <target state="translated">속성은 일반적으로 속성보다 다루기가 더 간단합니다. 속성 값은 문자열 일 수 있지만 속성은 모든 유형이 될 수 있습니다. 예를 들어, &lt;code&gt;checked&lt;/code&gt; 속성은 Boolean이고, &lt;code&gt;style&lt;/code&gt; 속성은 각 스타일에 대한 개별 속성이있는 객체이며 &lt;code&gt;size&lt;/code&gt; 속성은 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="ccdbd0e4ee4d748197077731bac58d8f220e10ee" translate="yes" xml:space="preserve">
          <source>Round 1: style</source>
          <target state="translated">라운드 1 : 스타일</target>
        </trans-unit>
        <trans-unit id="60d624aff5d20a10672f1fa2bb06a48fc35cb2ff" translate="yes" xml:space="preserve">
          <source>Round 2: value</source>
          <target state="translated">라운드 2 : 가치</target>
        </trans-unit>
        <trans-unit id="4bcb4e163bf193fe874c35e7a1a754e4ed2bd51c" translate="yes" xml:space="preserve">
          <source>Show code snippet</source>
          <target state="translated">코드 스 니펫 표시</target>
        </trans-unit>
        <trans-unit id="3609b7bc415b42245642bd9b48d2adfbddcb70fa" translate="yes" xml:space="preserve">
          <source>Since the prop function return &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; object, above code will not working properly in some browser(tested with &lt;code&gt;IE8 with Chrome Frame Plugin&lt;/code&gt; in my case).</source>
          <target state="translated">prop 함수가 &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; 객체를 반환하기 때문에 위의 코드는 일부 브라우저에서 제대로 작동하지 않습니다 (필자의 경우 &lt;code&gt;IE8 with Chrome Frame Plugin&lt;/code&gt; 으로 IE8로 테스트 됨).</target>
        </trans-unit>
        <trans-unit id="12577ab2e647385f98e5dcfb2630c23fb794c107" translate="yes" xml:space="preserve">
          <source>So &lt;a href=&quot;http://api.jquery.com/category/version/1.6/&quot;&gt;jQuery 1.6&lt;/a&gt; has the new function &lt;a href=&quot;http://api.jquery.com/prop/&quot;&gt;&lt;code&gt;prop()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">따라서 &lt;a href=&quot;http://api.jquery.com/category/version/1.6/&quot;&gt;jQuery 1.6&lt;/a&gt; 에는 새로운 함수 &lt;a href=&quot;http://api.jquery.com/prop/&quot;&gt; &lt;code&gt;prop()&lt;/code&gt; &lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c47d08c78383b55b25c00ee35c2311c4955dc43" translate="yes" xml:space="preserve">
          <source>So use prop!</source>
          <target state="translated">소품을 사용하십시오!</target>
        </trans-unit>
        <trans-unit id="95eb928367e90028eeb24f35d3136dcf2dc99528" translate="yes" xml:space="preserve">
          <source>So, how do you find out if the checkbox is checked with jQuery? Look on Stack Overflow and you'll commonly find the following suggestions:</source>
          <target state="translated">그렇다면 jQuery로 확인란이 선택되어 있는지 어떻게 알 수 있습니까? 스택 오버플로를 살펴보면 일반적으로 다음 제안 사항을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e964b79b47cef26b19046dcea7190f83bc893c7" translate="yes" xml:space="preserve">
          <source>Some gratuitous ASCII art (and leaving out a lot of stuff):</source>
          <target state="translated">약간의 무료 ASCII 아트 (그리고 많은 것들을 제외하고) :</target>
        </trans-unit>
        <trans-unit id="1de8dba368e7754dc199c99b017f5c51265ee8dc" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Syntax:</target>
        </trans-unit>
        <trans-unit id="ef60cad211d4de61e1a48513297acc715f5067c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attr&lt;/code&gt; function used to have some convoluted logic around getting what they thought you wanted, rather than literally getting the attribute. It conflated the concepts. Moving to &lt;code&gt;prop&lt;/code&gt; and &lt;code&gt;attr&lt;/code&gt; was meant to de-conflate them. Briefly in v1.6.0 jQuery went too far in that regard, but functionality &lt;a href=&quot;http://blog.jquery.com/2011/05/10/jquery-1-6-1-rc-1-released/&quot;&gt;was quickly added back&lt;/a&gt; to &lt;code&gt;attr&lt;/code&gt; to handle the common situations where people use &lt;code&gt;attr&lt;/code&gt; when technically they should use &lt;code&gt;prop&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;attr&lt;/code&gt; 함수는 문자 그대로 속성을 얻는 것이 아니라 원하는 것을 얻는 것에 대한 복잡한 논리를 가졌습니다. 그것은 개념을 혼란시켰다. &lt;code&gt;prop&lt;/code&gt; 와 &lt;code&gt;attr&lt;/code&gt; 로 옮기는 것은 그들을 분리시키기위한 것이었다. v1.6.0에서 jQuery는 그 점에서 너무 멀리 나갔지 만 기술적으로 사람들이 &lt;code&gt;attr&lt;/code&gt; 을 사용해야 할 때 &lt;code&gt;attr&lt;/code&gt; 을 사용하는 일반적인 상황을 처리하기 위해 기능 &lt;a href=&quot;http://blog.jquery.com/2011/05/10/jquery-1-6-1-rc-1-released/&quot;&gt;이&lt;/a&gt; attr 에 빠르게 다시 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="80989911ed46c6de8a83bf3ca6e47fd3b4b66d61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;link&lt;/code&gt; object is a real thing, and you can see there's a real distinction between accessing a &lt;em&gt;property&lt;/em&gt; on it, and accessing an &lt;em&gt;attribute&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;link&lt;/code&gt; 객체는 실재적이며, &lt;em&gt;속성&lt;/em&gt; 에 액세스하는 것과 &lt;em&gt;속성&lt;/em&gt; 에 액세스하는 것 사이에는 실제 차이점이 있음을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="729a01a6a69c8ea19b48d11fde2603d2254d9086" translate="yes" xml:space="preserve">
          <source>The Docs:</source>
          <target state="translated">문서 :</target>
        </trans-unit>
        <trans-unit id="b57ac22217c7c4c1ffed0ea45fefc50e9b636e48" translate="yes" xml:space="preserve">
          <source>The attribute value reflects the default rather than the current visible state (except in some older versions of IE, thus making things still harder). The attribute tells you nothing about the whether the checkbox on the page is checked. See &lt;a href=&quot;http://jsfiddle.net/VktA6/49/&quot;&gt;http://jsfiddle.net/VktA6/49/&lt;/a&gt;.</source>
          <target state="translated">속성 값은 현재 보이는 상태가 아닌 기본값을 반영합니다 (이전 버전의 IE에서는 예외로 인해 여전히 어려워집니다). 이 속성은 페이지의 확인란이 선택되어 있는지 여부에 대해 아무 것도 알려주지 않습니다. &lt;a href=&quot;http://jsfiddle.net/VktA6/49/&quot;&gt;http://jsfiddle.net/VktA6/49/를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9cfb0b86bee1b739c29ad71056625e859a225fad" translate="yes" xml:space="preserve">
          <source>The class attribute is shown here on the body. It's accessible through the following code:</source>
          <target state="translated">클래스 속성은 본문에 표시되어 있습니다. 다음 코드를 통해 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c53f0ab45f6a1937de5cd703c09d48cd0f34bb66" translate="yes" xml:space="preserve">
          <source>The console logs the &lt;code&gt;getAttribute&lt;/code&gt; as a string, and the &lt;code&gt;attr&lt;/code&gt; as a string, but the &lt;code&gt;prop&lt;/code&gt; as a &lt;code&gt;CSSStyleDeclaration&lt;/code&gt;, Why? And how does that affect my coding in the future?</source>
          <target state="translated">콘솔은 &lt;code&gt;getAttribute&lt;/code&gt; 를 문자열로 기록하고 &lt;code&gt;attr&lt;/code&gt; 을 문자열로 기록하지만 &lt;code&gt;prop&lt;/code&gt; 를 &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; 으로 기록합니다 . 왜? 그리고 이것이 미래의 코딩에 어떤 영향을 미칩니 까?</target>
        </trans-unit>
        <trans-unit id="dd5c103d97ae0a2d027fef688b953665a16aa4a7" translate="yes" xml:space="preserve">
          <source>The difference between attributes and properties can be important in specific situations. Before jQuery 1.6, the .attr() method sometimes took property values into account when retrieving some attributes, which could cause inconsistent behavior. As of jQuery 1.6, the .prop() method provides a way to explicitly retrieve property values, while .attr() retrieves attributes.</source>
          <target state="translated">특성과 속성의 차이는 특정 상황에서 중요 할 수 있습니다. jQuery 1.6 이전에는 일부 속성을 검색 할 때 .attr () 메소드가 속성 값을 고려하여 일관성이없는 동작을 유발할 수 있습니다. jQuery 1.6부터 .prop () 메소드는 속성 값을 명시 적으로 검색하는 방법을 제공하는 반면 .attr ()은 속성을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="c5c1057c51736c2f74489c55f4e7ad812e908197" translate="yes" xml:space="preserve">
          <source>The disabled IDL attribute must reflect the disabled content attribute.</source>
          <target state="translated">비활성화 된 IDL 속성은 비활성화 된 콘텐츠 속성을 반영해야합니다.</target>
        </trans-unit>
        <trans-unit id="c16411f5496ad4b8401ad3ef076b679ac6542571" translate="yes" xml:space="preserve">
          <source>The easiest way to see the difference between &lt;code&gt;.attr&lt;/code&gt; and &lt;code&gt;.prop&lt;/code&gt; is the following example:</source>
          <target state="translated">&lt;code&gt;.attr&lt;/code&gt; 과 &lt;code&gt;.prop&lt;/code&gt; 의 차이점을 확인하는 가장 쉬운 방법은 다음 예제입니다.</target>
        </trans-unit>
        <trans-unit id="32534caab896fd17123339601f0c1efaaec7a0e6" translate="yes" xml:space="preserve">
          <source>The function above is used to check if checkbox1 is checked or not, if checked: return 1; if not: return 0. Function prop() used here as a GET function.</source>
          <target state="translated">위의 함수는 확인란 1이 선택되어 있는지 확인하는 데 사용됩니다 (확인 된 경우). return 1; 그렇지 않은 경우 : 0을 반환합니다. 여기서 prop () 함수는 GET 함수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="29f7425ec4ef49d7bfced320d7119b2c15669d2b" translate="yes" xml:space="preserve">
          <source>The function above is used to set checkbox1 to be checked and ALWAYS return 1. Now function prop() used as a SET function.</source>
          <target state="translated">위의 함수는 checkbox1을 체크하고 항상 1을 반환하는 데 사용됩니다. 이제 prop () 함수는 SET 함수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6eeccb6dca8d0bac5d83a0757ed4d6ff88801425" translate="yes" xml:space="preserve">
          <source>The idea of using the &lt;code&gt;checked&lt;/code&gt; attribute for scripting a checkbox is unhelpful and unnecessary. The property is what you need.</source>
          <target state="translated">확인란을 스크립팅하기 위해 &lt;code&gt;checked&lt;/code&gt; 속성을 사용한다는 아이디어는 도움이되지 않으며 불필요합니다. 속성이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="a346404460ed25f7e105c7bf11fa30a362a24111" translate="yes" xml:space="preserve">
          <source>The introduction of the &lt;code&gt;prop()&lt;/code&gt; method provides a way to explicitly retrieve property values, while &lt;code&gt;.attr()&lt;/code&gt; retrieves attributes.</source>
          <target state="translated">&lt;code&gt;prop()&lt;/code&gt; 메서드를 도입하면 속성 값을 명시 적으로 검색하는 방법을 제공하는 반면 &lt;code&gt;.attr()&lt;/code&gt; 은 속성을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="d85182833c12c0535e66bfe183d9c175168470d7" translate="yes" xml:space="preserve">
          <source>The property also makes checking or unchecking the checkbox trivial:</source>
          <target state="translated">이 속성은 또한 확인란을 간단하게 확인 또는 선택 해제합니다.</target>
        </trans-unit>
        <trans-unit id="9de3b95677403ce83a6cd540e3554fe681740186" translate="yes" xml:space="preserve">
          <source>The standard properties are laid out in the various DOM specs:</source>
          <target state="translated">표준 속성은 다양한 DOM 사양에 나와 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e1d1062df530e62441bd9367801c6395aa93525" translate="yes" xml:space="preserve">
          <source>The thing you really need to be careful with is just &lt;strong&gt;do not mix the usage of these for the same property throughout your application&lt;/strong&gt; for the above reason.</source>
          <target state="translated">실제로주의해야 할 것은 위의 이유로 &lt;strong&gt;응용 프로그램 전체에서 동일한 속성에 대해 이들을 사용하지 않는 것&lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="540d2472341cccba8be027fc2236bd8b8c530474" translate="yes" xml:space="preserve">
          <source>These specs have excellent indexes and I recommend keeping links to them handy; I use them all the time.</source>
          <target state="translated">이 스펙은 훌륭한 색인을 가지고 있으며 그에 대한 링크를 편리하게 유지하는 것이 좋습니다. 나는 항상 그들을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="8d96ed5ed96a66531cb64de7520b4f59479a974b" translate="yes" xml:space="preserve">
          <source>This change has been a long time coming for jQuery. For years, they've been content with a function named &lt;code&gt;attr()&lt;/code&gt; that mostly retrieved DOM properties, not the result you'd expect from the name. The segregation of &lt;a href=&quot;http://api.jquery.com/attr&quot;&gt;&lt;code&gt;attr()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://api.jquery.com/prop&quot;&gt;&lt;code&gt;prop()&lt;/code&gt;&lt;/a&gt; should help alleviate some of the confusion between HTML attributes and DOM properties. &lt;code&gt;$.fn.prop()&lt;/code&gt; grabs the specified DOM property, while &lt;code&gt;$.fn.attr()&lt;/code&gt; grabs the specified HTML attribute.</source>
          <target state="translated">이 변경 사항은 jQuery에서 오랫동안 왔습니다. 몇 년 동안, 그들은 이름에서 기대하는 결과가 아니라 DOM 속성을 주로 검색하는 &lt;code&gt;attr()&lt;/code&gt; 이라는 함수로 만족해 왔습니다. &lt;a href=&quot;http://api.jquery.com/attr&quot;&gt; &lt;code&gt;attr()&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;http://api.jquery.com/prop&quot;&gt; &lt;code&gt;prop()&lt;/code&gt; &lt;/a&gt; 의 분리는 HTML 속성과 DOM 속성 사이의 혼동을 완화하는 데 도움이됩니다. &lt;code&gt;$.fn.prop()&lt;/code&gt; 는 지정된 DOM 속성을 &lt;code&gt;$.fn.attr()&lt;/code&gt; 반면 $ .fn.attr () 은 지정된 HTML 특성을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="bdc69234098316369890d3a27c1d12018faea5b3" translate="yes" xml:space="preserve">
          <source>This change removes some of the layer of magic jQuery stuck in front of attributes and properties, meaning jQuery developers will have to learn a bit about the difference between properties and attributes. This is a good thing.</source>
          <target state="translated">이 변경으로 인해 속성 및 속성 앞에 붙어있는 일부 매직 jQuery 레이어가 제거되었습니다. 즉, jQuery 개발자는 속성과 속성의 차이점에 대해 약간 배워야합니다. 이것은 좋은 일입니다.</target>
        </trans-unit>
        <trans-unit id="fa5f4dac63ceba8499c8ebda7b7ee0e9b32ac97e" translate="yes" xml:space="preserve">
          <source>This concept provides an example where the difference is observable: &lt;a href=&quot;http://www.w3.org/TR/html5/forms.html#concept-input-checked-dirty&quot;&gt;http://www.w3.org/TR/html5/forms.html#concept-input-checked-dirty&lt;/a&gt;</source>
          <target state="translated">이 개념은 차이점을 관찰 할 수있는 예를 제공합니다. &lt;a href=&quot;http://www.w3.org/TR/html5/forms.html#concept-input-checked-dirty&quot;&gt;http://www.w3.org/TR/html5/forms.html#concept-input-checked-dirty&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3cfe87b7616b33bdbe916512a8f5f3ef83a286ae" translate="yes" xml:space="preserve">
          <source>This is actually the simplest thing in the world to do with the &lt;code&gt;checked&lt;/code&gt; Boolean property, which has existed and worked flawlessly in every major scriptable browser since 1995:</source>
          <target state="translated">이것은 실제로 세계에서 1995 년 이후 모든 주요 스크립팅 가능한 브라우저에서 존재하고 작동하는 &lt;code&gt;checked&lt;/code&gt; 부울 속성과 관련하여 가장 간단한 작업입니다.</target>
        </trans-unit>
        <trans-unit id="145f8a318f2e616c0d3bd73938df79647833c350" translate="yes" xml:space="preserve">
          <source>This is why you should use mostly &lt;code&gt;.prop&lt;/code&gt;, as it affects the effective property directly, instead of relying on complex side-effects of modifying the HTML.</source>
          <target state="translated">그렇기 때문에 HTML을 수정하는 복잡한 부작용에 의존하는 대신 효과적인 속성에 직접 영향을 미치기 때문에 주로 &lt;code&gt;.prop&lt;/code&gt; 를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="753d8f0547857b0427bdde785c620b776eeac959" translate="yes" xml:space="preserve">
          <source>Thus changing it into following code</source>
          <target state="translated">따라서 다음 코드로 변경</target>
        </trans-unit>
        <trans-unit id="c88652b2409595eccf1604ebe6770348f7e77851" translate="yes" xml:space="preserve">
          <source>To fully understand how they work, here's an extended explanation on the difference between HTML attributes and DOM properties.:</source>
          <target state="translated">작동 방식을 완전히 이해하기 위해 HTML 속성과 DOM 속성의 차이점에 대한 확장 설명이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0969eb5b711519c18e0b6f0a6871c28056b8ba40" translate="yes" xml:space="preserve">
          <source>Try it out:</source>
          <target state="translated">사용해보십시오 :</target>
        </trans-unit>
        <trans-unit id="edb598ba0ed08660d3d93c172c02163186ed1250" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;prop()&lt;/code&gt; over &lt;code&gt;attr()&lt;/code&gt; in the majority of cases.</source>
          <target state="translated">대부분의 경우 &lt;code&gt;attr()&lt;/code&gt; 대신 &lt;code&gt;prop()&lt;/code&gt; 을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3dd581291ee6311e0bd015bcd39c264abdcb9aa5" translate="yes" xml:space="preserve">
          <source>Usually you'll want to use properties.
Use attributes only for:</source>
          <target state="translated">일반적으로 속성을 사용하고 싶을 것입니다. 다음에 대해서만 속성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d85ab4a57d88528795beae5179b53eae7cbf70a4" translate="yes" xml:space="preserve">
          <source>We can only access DOM elements with &lt;code&gt;prop&lt;/code&gt; other then it gives &lt;strong&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;prop&lt;/code&gt; 가 아닌 DOM 요소에만 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1f1b40046d8a364453cc07294630df202e93b59" translate="yes" xml:space="preserve">
          <source>When I talk about properties being properties of an object, I'm not speaking in the abstract. Here's some non-jQuery code:</source>
          <target state="translated">객체의 속성 인 속성에 대해 이야기 할 때, 나는 초록으로 말하지 않습니다. 비 jQuery 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a77e169f69f0792646894a3ddeffee9ae467e20c" translate="yes" xml:space="preserve">
          <source>Where both a property and an attribute with the same name exists, usually updating one will update the other, but this is not the case for certain attributes of inputs, such as &lt;code&gt;value&lt;/code&gt; and &lt;code&gt;checked&lt;/code&gt;: for these attributes, the property always represents the current state while the attribute (except in old versions of IE) corresponds to the default value/checkedness of the input (reflected in the &lt;code&gt;defaultValue&lt;/code&gt; / &lt;code&gt;defaultChecked&lt;/code&gt; property).</source>
          <target state="translated">속성과 이름이 같은 속성이 모두 존재하는 경우 일반적으로 하나를 업데이트하면 다른 속성이 업데이트되지만 &lt;code&gt;value&lt;/code&gt; 및 &lt;code&gt;checked&lt;/code&gt; 와 같은 입력의 특정 속성의 경우에는 해당되지 않습니다. 이러한 속성의 경우 속성은 항상 현재 상태를 나타냅니다 속성은 (이전 버전의 IE 제외) 입력의 기본값 / 확인에 해당합니다 ( &lt;code&gt;defaultValue&lt;/code&gt; / &lt;code&gt;defaultChecked&lt;/code&gt; 속성에 반영됨).</target>
        </trans-unit>
        <trans-unit id="71c9490438ad9546ea443bc3c483c7c464ca3daa" translate="yes" xml:space="preserve">
          <source>Why would you sometimes want to use .prop() instead of .attr() where latter is officially adviced?</source>
          <target state="translated">왜 공식적으로 조언을받는 .attr () 대신 .prop ()를 사용하고 싶습니까?</target>
        </trans-unit>
        <trans-unit id="e37b0fad94ebed3dde64b46684fc05b96c9137b6" translate="yes" xml:space="preserve">
          <source>Without having glanced at the new code for either function, I can say with confidence that the confusion has more to do with the difference between HTML attributes and DOM properties, than with the code itself. Hopefully, this cleared some things up for you.</source>
          <target state="translated">두 함수 중 하나에 대한 새로운 코드를 보지 않고도 혼란은 코드 자체보다는 HTML 속성과 DOM 속성의 차이점과 더 관련이 있다고 확신 할 수 있습니다. 바라건대, 이것은 당신을 위해 몇 가지를 정리했습니다.</target>
        </trans-unit>
        <trans-unit id="152c075b1676a5ac27ea04b056955291d454e755" translate="yes" xml:space="preserve">
          <source>You usually want &lt;code&gt;prop()&lt;/code&gt; rather than &lt;code&gt;attr()&lt;/code&gt;.</source>
          <target state="translated">일반적으로 &lt;code&gt;attr()&lt;/code&gt; 대신 &lt;code&gt;prop()&lt;/code&gt; 이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="e34fdbb1f17c7df690caf1f535da4c4fb1218b42" translate="yes" xml:space="preserve">
          <source>but not always to &lt;code&gt;.prop('name', 'value')&lt;/code&gt;</source>
          <target state="translated">항상 &lt;code&gt;.prop('name', 'value')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="86dd9b3b3615d935d005fe273e62e37f72affe0a" translate="yes" xml:space="preserve">
          <source>click the button again. Only the &lt;code&gt;prop&lt;/code&gt; checkbox got checked. BANG!</source>
          <target state="translated">버튼을 다시 클릭하십시오. &lt;code&gt;prop&lt;/code&gt; 확인란 만 선택되었습니다. 쾅!</target>
        </trans-unit>
        <trans-unit id="acfb658e79e289c6c288a97b93c2da918d4cf5cd" translate="yes" xml:space="preserve">
          <source>click the button. Both checkboxes got checked.</source>
          <target state="translated">버튼을 클릭하십시오. 두 확인란이 모두 선택되었습니다.</target>
        </trans-unit>
        <trans-unit id="15af69669559f1ff425b62f54484038658836aa8" translate="yes" xml:space="preserve">
          <source>manually checking a checkbox will change &lt;code&gt;.prop('checked')&lt;/code&gt; value, but will not change &lt;code&gt;.attr('checked')&lt;/code&gt; and &lt;code&gt;.prop('defaultChecked')&lt;/code&gt; values</source>
          <target state="translated">확인란을 수동으로 확인하면 &lt;code&gt;.prop('checked')&lt;/code&gt; 값이 변경되지만 &lt;code&gt;.attr('checked')&lt;/code&gt; 및 &lt;code&gt;.prop('defaultChecked')&lt;/code&gt; 값은 변경되지 않습니다</target>
        </trans-unit>
        <trans-unit id="c42bac4e03089f1c935237ae83bea6013eb78106" translate="yes" xml:space="preserve">
          <source>or in this case do they do the same thing?</source>
          <target state="translated">아니면이 경우에도 같은 일을합니까?</target>
        </trans-unit>
        <trans-unit id="868525fee2e2d32c161d58720c98c3eb0ad0b8d6" translate="yes" xml:space="preserve">
          <source>setting &lt;code&gt;$('#input').prop('defaultChecked', true)&lt;/code&gt; will also change &lt;code&gt;.attr('checked')&lt;/code&gt;, but this will not be visible on an element.</source>
          <target state="translated">&lt;code&gt;$('#input').prop('defaultChecked', true)&lt;/code&gt; 하면 &lt;code&gt;.attr('checked')&lt;/code&gt; 도 변경되지만 요소에는 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="03f07b37386fcfa44873be8ffb7b2ac821bdf161" translate="yes" xml:space="preserve">
          <source>so you might get away with it, although it is ugly since it modifies HTML without need.</source>
          <target state="translated">HTML이 필요없이 수정되기 때문에 추악하지만, 그것을 피할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8f06fac1cf8956475c3bdee10f6602ddfd0133a" translate="yes" xml:space="preserve">
          <source>solved the problem.</source>
          <target state="translated">문제를 해결했다.</target>
        </trans-unit>
        <trans-unit id="a7e958ec3ee21cba1890193ce44733f28069dae9" translate="yes" xml:space="preserve">
          <source>uncheck both checkboxes.</source>
          <target state="translated">두 확인란의 선택을 모두 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="e51e055e2293481cbfeb2f8371cd34f1a883ca3d" translate="yes" xml:space="preserve">
          <source>will respond to &lt;code&gt;.attr('name', 'value')&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.attr('name', 'value')&lt;/code&gt; 응답합니다</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
