<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/22662488">
    <body>
      <group id="22662488">
        <trans-unit id="451e2fc3a9af364279ab3891df87f1eed1129275" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;display_errors&lt;/code&gt; should be set to 0</source>
          <target state="translated">&lt;code&gt;display_errors&lt;/code&gt; 应该设置为0</target>
        </trans-unit>
        <trans-unit id="5f0900b6a0fa58b6a7a57d79d580c9b6b8695fa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;display_errors&lt;/code&gt; should be set to 1</source>
          <target state="translated">&lt;code&gt;display_errors&lt;/code&gt; 应该设置为1</target>
        </trans-unit>
        <trans-unit id="b47e7056ac72f6514ce80bd38d6202b745a35fc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error_reporting&lt;/code&gt; should be set to &lt;code&gt;E_ALL&lt;/code&gt; value;</source>
          <target state="translated">&lt;code&gt;error_reporting&lt;/code&gt; 应该设置为 &lt;code&gt;E_ALL&lt;/code&gt; 值；</target>
        </trans-unit>
        <trans-unit id="6de8cf3406ce420424c5ac8d908864a1d7267c5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log_errors&lt;/code&gt; should be set to 1</source>
          <target state="translated">&lt;code&gt;log_errors&lt;/code&gt; 应该设置为1</target>
        </trans-unit>
        <trans-unit id="fa14ba7bf0325a7941a63a35341a92f37629f9e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log_errors&lt;/code&gt; should be set to 1 (it is convenient to have logs on a dev PC too)</source>
          <target state="translated">&lt;code&gt;log_errors&lt;/code&gt; 应该设置为1（在开发PC上也有日志很方便）</target>
        </trans-unit>
        <trans-unit id="19270a60275c4ed695009344f2d96d2e089a8145" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Just remove any code that checks for the error manually&lt;/strong&gt;, all those &lt;code&gt;or die()&lt;/code&gt;, &lt;code&gt;if ($result)&lt;/code&gt; and such. Simply write your database interaction code right away:</source>
          <target state="translated">&lt;strong&gt;只需删除所有手动检查错误的代码，所有代码&lt;/strong&gt; &lt;code&gt;or die()&lt;/code&gt; ， &lt;code&gt;if ($result)&lt;/code&gt; 等。 只需立即编写数据库交互代码：</target>
        </trans-unit>
        <trans-unit id="9a73f4641c5fec6450f5068a07dc4a5ad8129e95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;P.S.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;P.S.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6357855934356d9ea4af77276e3d9c21947ff0f8" translate="yes" xml:space="preserve">
          <source>A list of things you should never ever do in regard of error reporting</source>
          <target state="translated">关于错误报告,你永远不应该做的事情清单</target>
        </trans-unit>
        <trans-unit id="a8b81fb27ed5e1e3de63e4e2e3ef9c8d353c0554" translate="yes" xml:space="preserve">
          <source>After getting the error message, you have to read and comprehend it. It sounds too obvious if not condescending, but learners often overlook the extreme helpfulness of the error message. Yet most of time it explains the problem pretty straightforward. Say, if it says that particular table doesn't exist, you have to check spelling, typos, letter case, database credentials and such. Or, if it says there is an error in SQL syntax, then you have to examine your SQL. And the problem spot is right before the query part cited in the error message.</source>
          <target state="translated">拿到错误信息后,一定要读懂并理解它。这听起来太明显了,如果不是居高临下,学习者往往会忽略了错误信息的极端帮助。然而,大多数时候,它能很直接地解释问题。比如说,如果它说那个特定的表不存在,你必须检查拼写、错别字、字母大小写、数据库凭证之类的问题。或者说,如果它说SQL语法有错误,那么你就得检查你的SQL。而问题点就在错误信息中引用的查询部分之前。</target>
        </trans-unit>
        <trans-unit id="8c9dc9d09b528d0f0f110292ab9b23104b18dc91" translate="yes" xml:space="preserve">
          <source>After that all MySQL errors will be transferred into PHP exceptions. Uncaught exception, in turn, makes a PHP fatal error. Thus, in case of a MySQL error, you'll get a conventional PHP error. That will instantly make you aware of the error cause. And a stack trace will lead you to the exact spot where the error occurred.</source>
          <target state="translated">之后,所有的MySQL错误都会被转为PHP异常。未被捕获的异常,反过来又会产生一个PHP致命错误。因此,如果出现MySQL错误,你会得到一个常规的PHP错误。这将使你立即意识到错误原因。而堆栈跟踪会让你知道错误发生的确切位置。</target>
        </trans-unit>
        <trans-unit id="a1d9a79191d1d1e015f7f02f6fef5756a3abcbcb" translate="yes" xml:space="preserve">
          <source>Do not add a condition to test  the query result manually (like &lt;code&gt;if($result)&lt;/code&gt;). With error exceptions enabled such condition will just be useless.</source>
          <target state="translated">不要添加条件来手动测试查询结果（例如 &lt;code&gt;if($result)&lt;/code&gt; ）。 启用错误异常后，这种情况将毫无用处。</target>
        </trans-unit>
        <trans-unit id="a668ad1221f54fe7654c4ce3d132821260bc64e8" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;die()&lt;/code&gt; or &lt;code&gt;echo&lt;/code&gt; or any other function to print the error message on the screen unconditionally. PHP can report errors by itself and do it the right way depends on the environment - so just leave it for PHP.</source>
          <target state="translated">不要使用 &lt;code&gt;die()&lt;/code&gt; 或 &lt;code&gt;echo&lt;/code&gt; 或任何其他函数来无条件地在屏幕上打印错误消息。 PHP可以自行报告错误，并根据环境正确地执行操作-因此，请留给PHP使用。</target>
        </trans-unit>
        <trans-unit id="e8f9e3c6ef8c0a171f67911a08ec5745e60d3948" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;try..catch&lt;/code&gt; operator for echoing the error message. This operator should be used to perform some error handling, like a transaction rollback. But never use it just to report errors - as we learned above, PHP can already do it, the right way.</source>
          <target state="translated">不要使用 &lt;code&gt;try..catch&lt;/code&gt; 运算符来回显错误消息。 应该使用该运算符执行一些错误处理，例如事务回滚。 但是，切勿仅将其用于报告错误-正如我们上文所述，PHP已经可以正确的方式做到这一点。</target>
        </trans-unit>
        <trans-unit id="d335be8fa03f595385fa709d3ed4d486e533a125" translate="yes" xml:space="preserve">
          <source>Every time a query fails, MySQL has &lt;strong&gt;an error message that explains the reason&lt;/strong&gt;. Unfortunately, by default such errors are not transferred to PHP, and all you've got is a cryptic error message mentioned above.  Hence it is very important to configure PHP and mysqli to report MySQL errors to you. And once you get the error message, fixing it will be a piece of cake.</source>
          <target state="translated">每次查询失败，MySQL都会显示&lt;strong&gt;一条错误消息，说明原因&lt;/strong&gt; 。 不幸的是，默认情况下，此类错误不会转移到PHP，而您所得到的只是上面提到的一个神秘的错误消息。 因此，配置PHP和mysqli向您报告MySQL错误非常重要。 一旦收到错误消息，对其进行修复将是小菜一碟。</target>
        </trans-unit>
        <trans-unit id="b59a03f18ec714e5f9e15fbcd2c937513a67fa90" translate="yes" xml:space="preserve">
          <source>Fatal error: Call to a member function bind_param() on a non-object in...</source>
          <target state="translated">致命的错误,在非对象上调用成员函数bind_param(....:在非对象上调用成员函数bind_param().....</target>
        </trans-unit>
        <trans-unit id="f857fef2c52a7d077d372a3d3dc6652b9196fc03" translate="yes" xml:space="preserve">
          <source>First of all, always have this line before mysqli connect in &lt;strong&gt;all&lt;/strong&gt; your environments:</source>
          <target state="translated">首先，在&lt;strong&gt;所有&lt;/strong&gt;环境中mysqli连接之前，请始终使用以下行：</target>
        </trans-unit>
        <trans-unit id="594f1fb89d132425c060918a57e8a674002761af" translate="yes" xml:space="preserve">
          <source>Here is a gist of my article on &lt;a href=&quot;https://phpdelusions.net/articles/error_reporting&quot;&gt;PHP error reporting&lt;/a&gt;:</source>
          <target state="translated">这是我有关&lt;a href=&quot;https://phpdelusions.net/articles/error_reporting&quot;&gt;PHP错误报告的&lt;/a&gt;文章的要旨：</target>
        </trans-unit>
        <trans-unit id="132cfe1a34b417e82b4e1d7222039410f4ea67b5" translate="yes" xml:space="preserve">
          <source>Here is the code:</source>
          <target state="translated">这里是代码。</target>
        </trans-unit>
        <trans-unit id="7c787c35bd573fffbfe33d330be8df5129105b13" translate="yes" xml:space="preserve">
          <source>How to actually use it?</source>
          <target state="translated">如何实际使用?</target>
        </trans-unit>
        <trans-unit id="936330330bab4f09e435e407dbea37ff22f00a05" translate="yes" xml:space="preserve">
          <source>How to configure PHP in different environments</source>
          <target state="translated">不同环境下如何配置PHP</target>
        </trans-unit>
        <trans-unit id="42aeabb2a3230b5ff377da517dcb378ed9f79254" translate="yes" xml:space="preserve">
          <source>How to get the error message in mysqli</source>
          <target state="translated">如何获取mysqli中的错误信息?</target>
        </trans-unit>
        <trans-unit id="a8ee4992add99b1839679671bdfb348041b5029f" translate="yes" xml:space="preserve">
          <source>If you don't understand the error message, try to Google it. And when browsing the results, stick to answers that &lt;em&gt;explain&lt;/em&gt; the error rather than bluntly give the solution. A solution may not work in your particular case but the explanation will help you to understand the problem and make you able to fix the issue by yourself.</source>
          <target state="translated">如果您不明白该错误信息，请尝试使用Google进行搜索。 在浏览结果时，请坚持使用能够&lt;em&gt;解释&lt;/em&gt;错误的答案，而不是直截了当地给出解决方案。 解决方案可能不适用于您的特定情况，但说明将帮助您理解问题并能够自己解决问题。</target>
        </trans-unit>
        <trans-unit id="eb8fa45b41dc961e2eeefdf8f2f0cd4834be1eb8" translate="yes" xml:space="preserve">
          <source>In my local/development environment, the MySQLi query is performing OK. However, when I upload it on my web host environment, I get this error:</source>
          <target state="translated">在我的本地开发环境中,MySQLi查询执行得很好。然而,当我在我的网络主机环境中上传时,我得到这个错误。</target>
        </trans-unit>
        <trans-unit id="70c2cd528d71823a7806831132701937bd87fc73" translate="yes" xml:space="preserve">
          <source>Never use an error suppression operator (&lt;code&gt;@&lt;/code&gt;)! It makes a programmer  unable read the error message and therefore unable to fix the error</source>
          <target state="translated">切勿使用错误抑制运算符（ &lt;code&gt;@&lt;/code&gt; ）！ 这使程序员无法读取错误消息，因此无法修复错误</target>
        </trans-unit>
        <trans-unit id="8e560c08bcff55caf8534713ed2600a57ab746f9" translate="yes" xml:space="preserve">
          <source>On a development server</source>
          <target state="translated">在开发服务器上</target>
        </trans-unit>
        <trans-unit id="9cd2660fa0306841d1fb458c6b3a054515c42a3a" translate="yes" xml:space="preserve">
          <source>On a production server</source>
          <target state="translated">在生产型服务器上</target>
        </trans-unit>
        <trans-unit id="7df57bc25530dca0e08a87c4bbd678e563ae9709" translate="yes" xml:space="preserve">
          <source>Reporting errors on a development and live servers must be different. On a dev server it is convenient to have errors shown on-screen, but on a live server error messages must be logged instead, so you could find them in the error log later.</source>
          <target state="translated">在开发服务器和实时服务器上报告错误必须是不同的。在开发服务器上,错误显示在屏幕上很方便,但在实时服务器上必须记录错误信息,这样你可以在错误日志中找到它们。</target>
        </trans-unit>
        <trans-unit id="0854b2ba5dd55f5441b11538dafd52589e35645d" translate="yes" xml:space="preserve">
          <source>Sometimes there is no error but no results either. Then it means, &lt;em&gt;there is no data in the database to match your criteria&lt;/em&gt;. In this case you have to admit this fact, even if you can swear the data and the criteria are all right. They are not. You have to check them again. I've got an article that can help in this matter, &lt;a href=&quot;https://phpdelusions.net/pdo/mcve&quot;&gt;How to debug database interactions&lt;/a&gt;. Although it is written for PDO, but the principle is the same. Just follow this instruction step by step and either have your problem solved or have an answerable question for Stack Overflow.</source>
          <target state="translated">有时没有错误，但也没有结果。 这意味着&lt;em&gt;数据库中没有符合您条件的数据&lt;/em&gt; 。 在这种情况下，即使您可以保证数据和标准都可以，也必须承认这一事实。 他们不是。 您必须再次检查它们。 我有一篇关于&lt;a href=&quot;https://phpdelusions.net/pdo/mcve&quot;&gt;如何调试数据库交互&lt;/a&gt;的文章可以为您提供帮助。 尽管它是为PDO编写的，但原理是相同的。 只需按照此说明逐步进行操作，即可解决您的问题或对堆栈溢出有一个可解答的问题。</target>
        </trans-unit>
        <trans-unit id="6e33763a7411b66b1f2e296ac76cad69bd3297e3" translate="yes" xml:space="preserve">
          <source>Sometimes your mysqli code produces an error like &lt;code&gt;mysqli_fetch_assoc() expects parameter...&lt;/code&gt;, &lt;code&gt;Call to a member function bind_param()...&lt;/code&gt; or similar. Or even without any error, but the query doesn't work all the same. It means that your query failed to execute.</source>
          <target state="translated">有时，您的mysqli代码会产生错误，例如 &lt;code&gt;mysqli_fetch_assoc() expects parameter...&lt;/code&gt; ， &lt;code&gt;Call to a member function bind_param()...&lt;/code&gt; 或类似错误。 甚至没有任何错误，但是查询不能完全一样。 这意味着您的查询无法执行。</target>
        </trans-unit>
        <trans-unit id="6e5925c38f4fb998d1911cd06f23c8451d7fba48" translate="yes" xml:space="preserve">
          <source>Therefore, you must set corresponding configuration options to the following values</source>
          <target state="translated">因此,您必须将相应的配置选项设置为以下值</target>
        </trans-unit>
        <trans-unit id="2ed7bd7bfa9f45bca23dfbdfabab1f2c82c67f08" translate="yes" xml:space="preserve">
          <source>To check my query, I tried to execute the query via control panel phpMyAdmin and the result is OK.</source>
          <target state="translated">为了检查我的查询,我试着通过控制面板phpMyAdmin执行查询,结果没有问题。</target>
        </trans-unit>
        <trans-unit id="93a254c560585346e5d09fa89890ee708396a4b5" translate="yes" xml:space="preserve">
          <source>What to do with the error message you get</source>
          <target state="translated">如何处理你收到的错误信息</target>
        </trans-unit>
        <trans-unit id="3f149f14b455141013ea974fb60b2da659b87f0a" translate="yes" xml:space="preserve">
          <source>You have to also &lt;em&gt;trust&lt;/em&gt; the error message. If it says that number of tokens doesn't match the number of bound variables then it &lt;em&gt;is&lt;/em&gt; so. The same goes for the absent tables or columns. Given the choice, whether it's your own mistake or the error message is wrong, always stick to the former. Again it sounds condescending, but hundreds of questions on this very site prove this advise extremely useful.</source>
          <target state="translated">您还必须&lt;em&gt;信任&lt;/em&gt;错误消息。 如果说令牌的数量与绑定变量的数量不匹配，那&lt;em&gt;就是&lt;/em&gt; 。 缺少的表或列也是如此。 如果有选择，无论是您自己的错误还是错误消息是错误的，请始终坚持前者。 再次听起来是屈尊的，但是这个站点上的数百个问题证明了此建议非常有用。</target>
        </trans-unit>
        <trans-unit id="69ddecee5804b73ff704c73cbe9db4755e6c8197" translate="yes" xml:space="preserve">
          <source>again, &lt;strong&gt;without any conditions around&lt;/strong&gt;. If an error occurs, it will be treated as any other error in your code. For example, on a development PC it will just appear on-screen, while on a live site it will be logged for a programmer, whereas for the user's convenience you could use an error handler (but that's a different story which is off topic for mysqli, but you may read about it in the article linked above).</source>
          <target state="translated">再次， &lt;strong&gt;周围没有任何条件&lt;/strong&gt; 。 如果发生错误，它将被视为代码中的任何其他错误。 例如，在开发PC上，它只会显示在屏幕上，而在实时站点上，它将记录给程序员，而为了用户的方便，您可以使用错误处理程序（但这是一个不同的故事，对于mysqli，但您可以在上面链接的文章中了解它。</target>
        </trans-unit>
        <trans-unit id="43b392c34795a8e4cf8a02a964da50ecb59749fb" translate="yes" xml:space="preserve">
          <source>mysqli_fetch_assoc() expects parameter / Call to a member function bind_param() errors. How to get the actual mysql error and fix it</source>
          <target state="translated">mysqli_fetch_assoc()期望参数调用成员函数bind_param()错误。如何获取实际的mysql错误并修复它?</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
