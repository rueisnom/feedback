<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/22662488">
    <body>
      <group id="22662488">
        <trans-unit id="451e2fc3a9af364279ab3891df87f1eed1129275" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;display_errors&lt;/code&gt; should be set to 0</source>
          <target state="translated">&lt;code&gt;display_errors&lt;/code&gt; は0に設定する必要があります</target>
        </trans-unit>
        <trans-unit id="5f0900b6a0fa58b6a7a57d79d580c9b6b8695fa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;display_errors&lt;/code&gt; should be set to 1</source>
          <target state="translated">&lt;code&gt;display_errors&lt;/code&gt; は1に設定する必要があります</target>
        </trans-unit>
        <trans-unit id="b47e7056ac72f6514ce80bd38d6202b745a35fc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error_reporting&lt;/code&gt; should be set to &lt;code&gt;E_ALL&lt;/code&gt; value;</source>
          <target state="translated">&lt;code&gt;error_reporting&lt;/code&gt; は &lt;code&gt;E_ALL&lt;/code&gt; 値に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="6de8cf3406ce420424c5ac8d908864a1d7267c5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log_errors&lt;/code&gt; should be set to 1</source>
          <target state="translated">&lt;code&gt;log_errors&lt;/code&gt; は1に設定する必要があります</target>
        </trans-unit>
        <trans-unit id="fa14ba7bf0325a7941a63a35341a92f37629f9e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log_errors&lt;/code&gt; should be set to 1 (it is convenient to have logs on a dev PC too)</source>
          <target state="translated">&lt;code&gt;log_errors&lt;/code&gt; を1に設定する必要があります（開発用PCにもログがあると便利です）</target>
        </trans-unit>
        <trans-unit id="19270a60275c4ed695009344f2d96d2e089a8145" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Just remove any code that checks for the error manually&lt;/strong&gt;, all those &lt;code&gt;or die()&lt;/code&gt;, &lt;code&gt;if ($result)&lt;/code&gt; and such. Simply write your database interaction code right away:</source>
          <target state="translated">&lt;code&gt;if ($result)&lt;/code&gt; などの場合 &lt;strong&gt;、エラーを手動でチェックするすべてのコード&lt;/strong&gt; &lt;code&gt;or die()&lt;/code&gt; すべてのdie（）を &lt;strong&gt;削除するだけ&lt;/strong&gt;です。 すぐにデータベース相互作用コードを書くだけです：</target>
        </trans-unit>
        <trans-unit id="9a73f4641c5fec6450f5068a07dc4a5ad8129e95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;P.S.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;P.S.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6357855934356d9ea4af77276e3d9c21947ff0f8" translate="yes" xml:space="preserve">
          <source>A list of things you should never ever do in regard of error reporting</source>
          <target state="translated">エラー報告に関して絶対にやってはいけないことリスト</target>
        </trans-unit>
        <trans-unit id="a8b81fb27ed5e1e3de63e4e2e3ef9c8d353c0554" translate="yes" xml:space="preserve">
          <source>After getting the error message, you have to read and comprehend it. It sounds too obvious if not condescending, but learners often overlook the extreme helpfulness of the error message. Yet most of time it explains the problem pretty straightforward. Say, if it says that particular table doesn't exist, you have to check spelling, typos, letter case, database credentials and such. Or, if it says there is an error in SQL syntax, then you have to examine your SQL. And the problem spot is right before the query part cited in the error message.</source>
          <target state="translated">エラーメッセージを受け取った後は、それを読んで理解しなければなりません。見下していなければあまりにも明白に聞こえますが、学習者はしばしばエラーメッセージの極端な有用性を見落としてしまいます。しかし、ほとんどの場合、それはかなり簡単に問題を説明しています。例えば、特定のテーブルが存在しないと書かれていたら、スペル、タイプミス、大文字小文字、データベースの認証情報などをチェックしなければなりません。あるいは、SQLの構文にエラーがあると言われたら、SQLを調べなければなりません。そして、問題箇所はエラーメッセージに引用されているクエリ部分の直前にあります。</target>
        </trans-unit>
        <trans-unit id="8c9dc9d09b528d0f0f110292ab9b23104b18dc91" translate="yes" xml:space="preserve">
          <source>After that all MySQL errors will be transferred into PHP exceptions. Uncaught exception, in turn, makes a PHP fatal error. Thus, in case of a MySQL error, you'll get a conventional PHP error. That will instantly make you aware of the error cause. And a stack trace will lead you to the exact spot where the error occurred.</source>
          <target state="translated">その後、すべてのMySQLのエラーはPHPの例外に転送されます。捕まえられなかった例外は、順番にPHPの致命的なエラーになります。このように、MySQLのエラーが発生した場合、従来のPHPのエラーが発生します。これですぐにエラーの原因に気づくことができます。そして、スタックトレースを見れば、エラーが発生した場所を正確に知ることができます。</target>
        </trans-unit>
        <trans-unit id="a1d9a79191d1d1e015f7f02f6fef5756a3abcbcb" translate="yes" xml:space="preserve">
          <source>Do not add a condition to test  the query result manually (like &lt;code&gt;if($result)&lt;/code&gt;). With error exceptions enabled such condition will just be useless.</source>
          <target state="translated">手動でクエリ結果をテストする条件を追加しないでください（ &lt;code&gt;if($result)&lt;/code&gt; ）。 エラー例外が有効になっていると、このような状態は役に立たなくなります。</target>
        </trans-unit>
        <trans-unit id="a668ad1221f54fe7654c4ce3d132821260bc64e8" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;die()&lt;/code&gt; or &lt;code&gt;echo&lt;/code&gt; or any other function to print the error message on the screen unconditionally. PHP can report errors by itself and do it the right way depends on the environment - so just leave it for PHP.</source>
          <target state="translated">エラーメッセージを無条件に画面に出力するために、 &lt;code&gt;die()&lt;/code&gt; や &lt;code&gt;echo&lt;/code&gt; などの関数を使用しないでください。 PHPはそれ自体でエラーを報告でき、正しい方法は環境に依存するため、PHPに任せてください。</target>
        </trans-unit>
        <trans-unit id="e8f9e3c6ef8c0a171f67911a08ec5745e60d3948" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;try..catch&lt;/code&gt; operator for echoing the error message. This operator should be used to perform some error handling, like a transaction rollback. But never use it just to report errors - as we learned above, PHP can already do it, the right way.</source>
          <target state="translated">エラーメッセージをエコーするために &lt;code&gt;try..catch&lt;/code&gt; 演算子を使用しないでください。 この演算子は、トランザクションのロールバックなどのエラー処理を実行するために使用する必要があります。 しかし、エラーを報告するためだけに使用しないでください-上で学んだように、PHPはすでに正しい方法でそれを行うことができます。</target>
        </trans-unit>
        <trans-unit id="d335be8fa03f595385fa709d3ed4d486e533a125" translate="yes" xml:space="preserve">
          <source>Every time a query fails, MySQL has &lt;strong&gt;an error message that explains the reason&lt;/strong&gt;. Unfortunately, by default such errors are not transferred to PHP, and all you've got is a cryptic error message mentioned above.  Hence it is very important to configure PHP and mysqli to report MySQL errors to you. And once you get the error message, fixing it will be a piece of cake.</source>
          <target state="translated">クエリが失敗するたびに、MySQLには&lt;strong&gt;理由を説明するエラーメッセージが表示されます&lt;/strong&gt; 。 残念ながら、デフォルトではこのようなエラーはPHPに転送されず、上記の不可解なエラーメッセージしか表示されません。 したがって、MySQLエラーを報告するようにPHPとmysqliを構成することが非常に重要です。 エラーメッセージが表示されたら、それを修正するのは簡単です。</target>
        </trans-unit>
        <trans-unit id="b59a03f18ec714e5f9e15fbcd2c937513a67fa90" translate="yes" xml:space="preserve">
          <source>Fatal error: Call to a member function bind_param() on a non-object in...</source>
          <target state="translated">致命的なエラーです。のオブジェクトではないメンバ関数 bind_param()の呼び出し。</target>
        </trans-unit>
        <trans-unit id="f857fef2c52a7d077d372a3d3dc6652b9196fc03" translate="yes" xml:space="preserve">
          <source>First of all, always have this line before mysqli connect in &lt;strong&gt;all&lt;/strong&gt; your environments:</source>
          <target state="translated">まず、すべての環境でmysqliが接続する前に、常に次の行を用意し&lt;strong&gt;て&lt;/strong&gt;ください。</target>
        </trans-unit>
        <trans-unit id="594f1fb89d132425c060918a57e8a674002761af" translate="yes" xml:space="preserve">
          <source>Here is a gist of my article on &lt;a href=&quot;https://phpdelusions.net/articles/error_reporting&quot;&gt;PHP error reporting&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://phpdelusions.net/articles/error_reporting&quot;&gt;PHPエラー報告&lt;/a&gt;に関する私の記事の要点は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="132cfe1a34b417e82b4e1d7222039410f4ea67b5" translate="yes" xml:space="preserve">
          <source>Here is the code:</source>
          <target state="translated">ここにコードがあります。</target>
        </trans-unit>
        <trans-unit id="7c787c35bd573fffbfe33d330be8df5129105b13" translate="yes" xml:space="preserve">
          <source>How to actually use it?</source>
          <target state="translated">実際にどうやって使うのか?</target>
        </trans-unit>
        <trans-unit id="936330330bab4f09e435e407dbea37ff22f00a05" translate="yes" xml:space="preserve">
          <source>How to configure PHP in different environments</source>
          <target state="translated">さまざまな環境でのPHPの設定方法</target>
        </trans-unit>
        <trans-unit id="42aeabb2a3230b5ff377da517dcb378ed9f79254" translate="yes" xml:space="preserve">
          <source>How to get the error message in mysqli</source>
          <target state="translated">mysqli でエラーメッセージを取得する方法</target>
        </trans-unit>
        <trans-unit id="a8ee4992add99b1839679671bdfb348041b5029f" translate="yes" xml:space="preserve">
          <source>If you don't understand the error message, try to Google it. And when browsing the results, stick to answers that &lt;em&gt;explain&lt;/em&gt; the error rather than bluntly give the solution. A solution may not work in your particular case but the explanation will help you to understand the problem and make you able to fix the issue by yourself.</source>
          <target state="translated">エラーメッセージがわからない場合は、Googleで検索してみてください。 結果を参照するときは、率直に解決策を提供するのではなく、エラーを&lt;em&gt;説明する&lt;/em&gt;回答に固執してください。 特定のケースでは解決策が機能しない場合がありますが、説明は問題を理解し、自分で問題を修正できるようにするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="eb8fa45b41dc961e2eeefdf8f2f0cd4834be1eb8" translate="yes" xml:space="preserve">
          <source>In my local/development environment, the MySQLi query is performing OK. However, when I upload it on my web host environment, I get this error:</source>
          <target state="translated">私のローカル開発環境では、MySQLi クエリは正常に動作しています。しかし、ウェブホスト環境でアップロードすると、このようなエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="70c2cd528d71823a7806831132701937bd87fc73" translate="yes" xml:space="preserve">
          <source>Never use an error suppression operator (&lt;code&gt;@&lt;/code&gt;)! It makes a programmer  unable read the error message and therefore unable to fix the error</source>
          <target state="translated">エラー抑制演算子（ &lt;code&gt;@&lt;/code&gt; ）は使用しないでください。 プログラマーがエラーメッセージを読み取れなくなり、エラーを修正できなくなります。</target>
        </trans-unit>
        <trans-unit id="8e560c08bcff55caf8534713ed2600a57ab746f9" translate="yes" xml:space="preserve">
          <source>On a development server</source>
          <target state="translated">開発サーバーで</target>
        </trans-unit>
        <trans-unit id="9cd2660fa0306841d1fb458c6b3a054515c42a3a" translate="yes" xml:space="preserve">
          <source>On a production server</source>
          <target state="translated">本番サーバでは</target>
        </trans-unit>
        <trans-unit id="7df57bc25530dca0e08a87c4bbd678e563ae9709" translate="yes" xml:space="preserve">
          <source>Reporting errors on a development and live servers must be different. On a dev server it is convenient to have errors shown on-screen, but on a live server error messages must be logged instead, so you could find them in the error log later.</source>
          <target state="translated">開発サーバーとライブサーバーでは、エラーの報告方法が異なる必要があります。開発サーバーでは、エラーが画面に表示されるのは便利ですが、ライブサーバーでは、エラーメッセージは代わりにログに記録されなければならないので、後でエラーログで見つけることができます。</target>
        </trans-unit>
        <trans-unit id="0854b2ba5dd55f5441b11538dafd52589e35645d" translate="yes" xml:space="preserve">
          <source>Sometimes there is no error but no results either. Then it means, &lt;em&gt;there is no data in the database to match your criteria&lt;/em&gt;. In this case you have to admit this fact, even if you can swear the data and the criteria are all right. They are not. You have to check them again. I've got an article that can help in this matter, &lt;a href=&quot;https://phpdelusions.net/pdo/mcve&quot;&gt;How to debug database interactions&lt;/a&gt;. Although it is written for PDO, but the principle is the same. Just follow this instruction step by step and either have your problem solved or have an answerable question for Stack Overflow.</source>
          <target state="translated">時々エラーはないが結果もない。 つまり、 &lt;em&gt;条件に一致するデータがデータベースに存在しません&lt;/em&gt; 。 この場合、たとえあなたがデータを誓うことができ、基準が大丈夫であっても、あなたはこの事実を認めなければなりません。 ではない。 もう一度確認する必要があります。 この問題に役立つ記事「 &lt;a href=&quot;https://phpdelusions.net/pdo/mcve&quot;&gt;データベースの相互作用をデバッグする方法」があります&lt;/a&gt; 。 PDO用に書かれていますが、原理は同じです。 この手順を1ステップずつ実行して、問題を解決するか、Stack Overflowについて回答可能な質問をしてください。</target>
        </trans-unit>
        <trans-unit id="6e33763a7411b66b1f2e296ac76cad69bd3297e3" translate="yes" xml:space="preserve">
          <source>Sometimes your mysqli code produces an error like &lt;code&gt;mysqli_fetch_assoc() expects parameter...&lt;/code&gt;, &lt;code&gt;Call to a member function bind_param()...&lt;/code&gt; or similar. Or even without any error, but the query doesn't work all the same. It means that your query failed to execute.</source>
          <target state="translated">mysqliコードが &lt;code&gt;mysqli_fetch_assoc() expects parameter...&lt;/code&gt; ようなエラーを生成することがあります... 、 &lt;code&gt;Call to a member function bind_param()...&lt;/code&gt; などの呼び出し 。 または、エラーがなくても、クエリがまったく機能しません。 これは、クエリの実行に失敗したことを意味します。</target>
        </trans-unit>
        <trans-unit id="6e5925c38f4fb998d1911cd06f23c8451d7fba48" translate="yes" xml:space="preserve">
          <source>Therefore, you must set corresponding configuration options to the following values</source>
          <target state="translated">したがって、対応する構成オプションを以下の値に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="2ed7bd7bfa9f45bca23dfbdfabab1f2c82c67f08" translate="yes" xml:space="preserve">
          <source>To check my query, I tried to execute the query via control panel phpMyAdmin and the result is OK.</source>
          <target state="translated">クエリを確認するために、コントロールパネルのphpMyAdminからクエリを実行してみたところ、結果はOKでした。</target>
        </trans-unit>
        <trans-unit id="93a254c560585346e5d09fa89890ee708396a4b5" translate="yes" xml:space="preserve">
          <source>What to do with the error message you get</source>
          <target state="translated">エラーメッセージが出たときの対処法</target>
        </trans-unit>
        <trans-unit id="3f149f14b455141013ea974fb60b2da659b87f0a" translate="yes" xml:space="preserve">
          <source>You have to also &lt;em&gt;trust&lt;/em&gt; the error message. If it says that number of tokens doesn't match the number of bound variables then it &lt;em&gt;is&lt;/em&gt; so. The same goes for the absent tables or columns. Given the choice, whether it's your own mistake or the error message is wrong, always stick to the former. Again it sounds condescending, but hundreds of questions on this very site prove this advise extremely useful.</source>
          <target state="translated">エラーメッセージも&lt;em&gt;信頼&lt;/em&gt;する必要があります。 トークンの数がバインドされた変数の数と一致しないと表示されている場合は、一致しています。 欠落しているテーブルまたは列についても同様です。 選択が与えられた場合、それがあなた自身の間違いであるか、エラーメッセージが間違っているかにかかわらず、常に前者に固執してください。 繰り返しになりますが、このサイトに関する何百もの質問から、このアドバイスが非常に役立つことがわかります。</target>
        </trans-unit>
        <trans-unit id="69ddecee5804b73ff704c73cbe9db4755e6c8197" translate="yes" xml:space="preserve">
          <source>again, &lt;strong&gt;without any conditions around&lt;/strong&gt;. If an error occurs, it will be treated as any other error in your code. For example, on a development PC it will just appear on-screen, while on a live site it will be logged for a programmer, whereas for the user's convenience you could use an error handler (but that's a different story which is off topic for mysqli, but you may read about it in the article linked above).</source>
          <target state="translated">再び、 &lt;strong&gt;周りの条件なしで&lt;/strong&gt; 。 エラーが発生した場合、コード内の他のエラーとして処理されます。 たとえば、開発用PCでは画面に表示されるだけですが、ライブサイトではプログラマーのためにログに記録されますが、ユーザーの便宜のためにエラーハンドラーを使用することもできます（ただし、これは別の話です。 mysqli、ただし上記のリンク先の記事でそれについて読むことができます）。</target>
        </trans-unit>
        <trans-unit id="43b392c34795a8e4cf8a02a964da50ecb59749fb" translate="yes" xml:space="preserve">
          <source>mysqli_fetch_assoc() expects parameter / Call to a member function bind_param() errors. How to get the actual mysql error and fix it</source>
          <target state="translated">mysqli_fetch_assoc()が期待するパラメータ メンバ関数 bind_param()への呼び出しでエラーが発生します。実際のmysqliのエラーを取得して修正する方法</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
