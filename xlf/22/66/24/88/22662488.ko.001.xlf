<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/22662488">
    <body>
      <group id="22662488">
        <trans-unit id="451e2fc3a9af364279ab3891df87f1eed1129275" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;display_errors&lt;/code&gt; should be set to 0</source>
          <target state="translated">&lt;code&gt;display_errors&lt;/code&gt; 는 0으로 설정되어야합니다</target>
        </trans-unit>
        <trans-unit id="5f0900b6a0fa58b6a7a57d79d580c9b6b8695fa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;display_errors&lt;/code&gt; should be set to 1</source>
          <target state="translated">&lt;code&gt;display_errors&lt;/code&gt; 는 1로 설정해야합니다</target>
        </trans-unit>
        <trans-unit id="b47e7056ac72f6514ce80bd38d6202b745a35fc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error_reporting&lt;/code&gt; should be set to &lt;code&gt;E_ALL&lt;/code&gt; value;</source>
          <target state="translated">&lt;code&gt;error_reporting&lt;/code&gt; 은 &lt;code&gt;E_ALL&lt;/code&gt; 값으로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="6de8cf3406ce420424c5ac8d908864a1d7267c5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log_errors&lt;/code&gt; should be set to 1</source>
          <target state="translated">&lt;code&gt;log_errors&lt;/code&gt; 는 1로 설정해야합니다</target>
        </trans-unit>
        <trans-unit id="fa14ba7bf0325a7941a63a35341a92f37629f9e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log_errors&lt;/code&gt; should be set to 1 (it is convenient to have logs on a dev PC too)</source>
          <target state="translated">&lt;code&gt;log_errors&lt;/code&gt; 는 1로 설정되어야합니다 (개발 PC에서도 로그를 갖는 것이 편리합니다)</target>
        </trans-unit>
        <trans-unit id="19270a60275c4ed695009344f2d96d2e089a8145" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Just remove any code that checks for the error manually&lt;/strong&gt;, all those &lt;code&gt;or die()&lt;/code&gt;, &lt;code&gt;if ($result)&lt;/code&gt; and such. Simply write your database interaction code right away:</source>
          <target state="translated">&lt;strong&gt;오류를 수동으로 검사하는 코드, 모든 코드&lt;/strong&gt; &lt;code&gt;or die()&lt;/code&gt; , &lt;code&gt;if ($result)&lt;/code&gt; 등을 제거하십시오. 데이터베이스 상호 작용 코드를 바로 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="9a73f4641c5fec6450f5068a07dc4a5ad8129e95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;P.S.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;P.S.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6357855934356d9ea4af77276e3d9c21947ff0f8" translate="yes" xml:space="preserve">
          <source>A list of things you should never ever do in regard of error reporting</source>
          <target state="translated">오류보고와 관련하여 절대로하지 말아야 할 일의 목록</target>
        </trans-unit>
        <trans-unit id="a8b81fb27ed5e1e3de63e4e2e3ef9c8d353c0554" translate="yes" xml:space="preserve">
          <source>After getting the error message, you have to read and comprehend it. It sounds too obvious if not condescending, but learners often overlook the extreme helpfulness of the error message. Yet most of time it explains the problem pretty straightforward. Say, if it says that particular table doesn't exist, you have to check spelling, typos, letter case, database credentials and such. Or, if it says there is an error in SQL syntax, then you have to examine your SQL. And the problem spot is right before the query part cited in the error message.</source>
          <target state="translated">오류 메시지가 나타난 후에는이를 읽고 이해해야합니다. 과감하지 않으면 너무 분명하게 들리지만 학습자들은 종종 오류 메시지의 극단적 인 도움을 간과합니다. 그러나 대부분의 경우 문제를 매우 간단하게 설명합니다. 특정 테이블이 존재하지 않는다고되어 있으면 철자, 오타, 대소 문자, 데이터베이스 자격 증명 등을 확인해야합니다. 또는 SQL 구문에 오류가 있다고 표시되면 SQL을 검사해야합니다. 그리고 문제 지점은 오류 메시지에 인용 된 쿼리 부분 바로 앞에 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c9dc9d09b528d0f0f110292ab9b23104b18dc91" translate="yes" xml:space="preserve">
          <source>After that all MySQL errors will be transferred into PHP exceptions. Uncaught exception, in turn, makes a PHP fatal error. Thus, in case of a MySQL error, you'll get a conventional PHP error. That will instantly make you aware of the error cause. And a stack trace will lead you to the exact spot where the error occurred.</source>
          <target state="translated">그 후 모든 MySQL 오류는 PHP 예외로 전송됩니다. 잡히지 않은 예외는 PHP 치명적인 오류를 일으 킵니다. 따라서 MySQL 오류가 발생하면 일반적인 PHP 오류가 발생합니다. 그러면 오류 원인을 즉시 알 수 있습니다. 그리고 스택 추적은 오류가 발생한 정확한 지점으로 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="a1d9a79191d1d1e015f7f02f6fef5756a3abcbcb" translate="yes" xml:space="preserve">
          <source>Do not add a condition to test  the query result manually (like &lt;code&gt;if($result)&lt;/code&gt;). With error exceptions enabled such condition will just be useless.</source>
          <target state="translated">쿼리 결과를 수동으로 테스트하는 조건을 추가하지 마십시오 (예 : &lt;code&gt;if($result)&lt;/code&gt; ). 오류 예외가 활성화되면 이러한 조건은 쓸모가 없습니다.</target>
        </trans-unit>
        <trans-unit id="a668ad1221f54fe7654c4ce3d132821260bc64e8" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;die()&lt;/code&gt; or &lt;code&gt;echo&lt;/code&gt; or any other function to print the error message on the screen unconditionally. PHP can report errors by itself and do it the right way depends on the environment - so just leave it for PHP.</source>
          <target state="translated">&lt;code&gt;die()&lt;/code&gt; 또는 &lt;code&gt;echo&lt;/code&gt; 또는 다른 함수를 사용하여 오류 메시지를 무조건 화면에 인쇄하지 마십시오. PHP는 자체적으로 오류를보고하고 환경에 따라 올바른 방법으로 작업을 수행 할 수 있으므로 PHP에 그대로 두십시오.</target>
        </trans-unit>
        <trans-unit id="e8f9e3c6ef8c0a171f67911a08ec5745e60d3948" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;try..catch&lt;/code&gt; operator for echoing the error message. This operator should be used to perform some error handling, like a transaction rollback. But never use it just to report errors - as we learned above, PHP can already do it, the right way.</source>
          <target state="translated">오류 메시지를 반영하기 위해 &lt;code&gt;try..catch&lt;/code&gt; 연산자를 사용하지 마십시오. 이 연산자는 트랜잭션 롤백과 같은 일부 오류 처리를 수행하는 데 사용해야합니다. 그러나 오류를보고하는 데 절대 사용하지 마십시오. 위에서 알았 듯이 PHP는 이미 올바른 방법으로 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d335be8fa03f595385fa709d3ed4d486e533a125" translate="yes" xml:space="preserve">
          <source>Every time a query fails, MySQL has &lt;strong&gt;an error message that explains the reason&lt;/strong&gt;. Unfortunately, by default such errors are not transferred to PHP, and all you've got is a cryptic error message mentioned above.  Hence it is very important to configure PHP and mysqli to report MySQL errors to you. And once you get the error message, fixing it will be a piece of cake.</source>
          <target state="translated">쿼리가 실패 할 때마다 MySQL &lt;strong&gt;에 이유를 설명하는 오류 메시지가 표시&lt;/strong&gt; 됩니다. 불행히도, 기본적으로 이러한 오류는 PHP로 전송되지 않으며, 위에서 언급 한 암호 오류 메시지 만 있으면됩니다. 따라서 MySQL 오류를보고하도록 PHP와 mysqli를 구성하는 것이 매우 중요합니다. 오류 메시지가 표시되면 수정하면 케이크 조각이됩니다.</target>
        </trans-unit>
        <trans-unit id="b59a03f18ec714e5f9e15fbcd2c937513a67fa90" translate="yes" xml:space="preserve">
          <source>Fatal error: Call to a member function bind_param() on a non-object in...</source>
          <target state="translated">치명적 오류 : 객체가 아닌 객체에서 멤버 함수 bind_param ()을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="f857fef2c52a7d077d372a3d3dc6652b9196fc03" translate="yes" xml:space="preserve">
          <source>First of all, always have this line before mysqli connect in &lt;strong&gt;all&lt;/strong&gt; your environments:</source>
          <target state="translated">우선, mysqli가 &lt;strong&gt;모든&lt;/strong&gt; 환경에서 연결되기 전에 항상이 라인을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="594f1fb89d132425c060918a57e8a674002761af" translate="yes" xml:space="preserve">
          <source>Here is a gist of my article on &lt;a href=&quot;https://phpdelusions.net/articles/error_reporting&quot;&gt;PHP error reporting&lt;/a&gt;:</source>
          <target state="translated">다음은 &lt;a href=&quot;https://phpdelusions.net/articles/error_reporting&quot;&gt;PHP 오류보고에 대한&lt;/a&gt; 기사의 요점입니다.</target>
        </trans-unit>
        <trans-unit id="132cfe1a34b417e82b4e1d7222039410f4ea67b5" translate="yes" xml:space="preserve">
          <source>Here is the code:</source>
          <target state="translated">코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7c787c35bd573fffbfe33d330be8df5129105b13" translate="yes" xml:space="preserve">
          <source>How to actually use it?</source>
          <target state="translated">실제로 사용하는 방법?</target>
        </trans-unit>
        <trans-unit id="936330330bab4f09e435e407dbea37ff22f00a05" translate="yes" xml:space="preserve">
          <source>How to configure PHP in different environments</source>
          <target state="translated">다른 환경에서 PHP를 구성하는 방법</target>
        </trans-unit>
        <trans-unit id="42aeabb2a3230b5ff377da517dcb378ed9f79254" translate="yes" xml:space="preserve">
          <source>How to get the error message in mysqli</source>
          <target state="translated">mysqli에서 오류 메시지를 얻는 방법</target>
        </trans-unit>
        <trans-unit id="a8ee4992add99b1839679671bdfb348041b5029f" translate="yes" xml:space="preserve">
          <source>If you don't understand the error message, try to Google it. And when browsing the results, stick to answers that &lt;em&gt;explain&lt;/em&gt; the error rather than bluntly give the solution. A solution may not work in your particular case but the explanation will help you to understand the problem and make you able to fix the issue by yourself.</source>
          <target state="translated">오류 메시지를 이해하지 못하면 Google에 문의하십시오. 결과를 탐색 할 때 솔직하게 해결책을 제시하기보다는 오류를 &lt;em&gt;설명&lt;/em&gt; 하는 답변을 고수하십시오. 특정 경우에는 해결책이 작동하지 않을 수 있지만 설명을 통해 문제를 이해하고 문제를 직접 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb8fa45b41dc961e2eeefdf8f2f0cd4834be1eb8" translate="yes" xml:space="preserve">
          <source>In my local/development environment, the MySQLi query is performing OK. However, when I upload it on my web host environment, I get this error:</source>
          <target state="translated">내 로컬 / 개발 환경에서 MySQLi 쿼리가 제대로 수행되고 있습니다. 그러나 웹 호스트 환경에 업로드하면 다음 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="70c2cd528d71823a7806831132701937bd87fc73" translate="yes" xml:space="preserve">
          <source>Never use an error suppression operator (&lt;code&gt;@&lt;/code&gt;)! It makes a programmer  unable read the error message and therefore unable to fix the error</source>
          <target state="translated">오류 억제 연산자 ( &lt;code&gt;@&lt;/code&gt; )를 사용하지 마십시오! 프로그래머가 오류 메시지를 읽을 수 없으므로 오류를 수정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="8e560c08bcff55caf8534713ed2600a57ab746f9" translate="yes" xml:space="preserve">
          <source>On a development server</source>
          <target state="translated">개발 서버에서</target>
        </trans-unit>
        <trans-unit id="9cd2660fa0306841d1fb458c6b3a054515c42a3a" translate="yes" xml:space="preserve">
          <source>On a production server</source>
          <target state="translated">프로덕션 서버에서</target>
        </trans-unit>
        <trans-unit id="7df57bc25530dca0e08a87c4bbd678e563ae9709" translate="yes" xml:space="preserve">
          <source>Reporting errors on a development and live servers must be different. On a dev server it is convenient to have errors shown on-screen, but on a live server error messages must be logged instead, so you could find them in the error log later.</source>
          <target state="translated">개발 및 라이브 서버의 오류보고는 달라야합니다. 개발자 서버에서는 화면에 오류가 표시되는 것이 편리하지만 실시간 서버에서는 대신 오류 메시지를 기록해야 나중에 오류 로그에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0854b2ba5dd55f5441b11538dafd52589e35645d" translate="yes" xml:space="preserve">
          <source>Sometimes there is no error but no results either. Then it means, &lt;em&gt;there is no data in the database to match your criteria&lt;/em&gt;. In this case you have to admit this fact, even if you can swear the data and the criteria are all right. They are not. You have to check them again. I've got an article that can help in this matter, &lt;a href=&quot;https://phpdelusions.net/pdo/mcve&quot;&gt;How to debug database interactions&lt;/a&gt;. Although it is written for PDO, but the principle is the same. Just follow this instruction step by step and either have your problem solved or have an answerable question for Stack Overflow.</source>
          <target state="translated">때로는 오류는 없지만 결과는 없습니다. 그런 다음 &lt;em&gt;기준에 맞는 데이터가 데이터베이스에 없음을&lt;/em&gt; 의미 &lt;em&gt;합니다&lt;/em&gt; . 이 경우 데이터를 맹세하고 기준이 괜찮 더라도이 사실을 인정해야합니다. 그들은 아닙니다. 다시 확인해야합니다. 이 문제에 도움이되는 기사 인 &lt;a href=&quot;https://phpdelusions.net/pdo/mcve&quot;&gt;데이터베이스 상호 작용을 디버깅하는 방법&lt;/a&gt; 이 있습니다. PDO 용으로 작성되었지만 원칙은 동일합니다. 이 지침을 단계별로 따르고 문제를 해결하거나 스택 오버플로에 대한 대답이 궁금합니다.</target>
        </trans-unit>
        <trans-unit id="6e33763a7411b66b1f2e296ac76cad69bd3297e3" translate="yes" xml:space="preserve">
          <source>Sometimes your mysqli code produces an error like &lt;code&gt;mysqli_fetch_assoc() expects parameter...&lt;/code&gt;, &lt;code&gt;Call to a member function bind_param()...&lt;/code&gt; or similar. Or even without any error, but the query doesn't work all the same. It means that your query failed to execute.</source>
          <target state="translated">때로는 mysqli 코드가 &lt;code&gt;mysqli_fetch_assoc() expects parameter...&lt;/code&gt; &lt;code&gt;Call to a member function bind_param()...&lt;/code&gt; 매개 변수 ... , 멤버 함수를 호출하는 bind_param () ... 또는 이와 유사한 오류와 같은 오류를 생성합니다. 또는 오류가 없어도 쿼리가 모두 동일하게 작동하지 않습니다. 이는 쿼리 실행에 실패했음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="6e5925c38f4fb998d1911cd06f23c8451d7fba48" translate="yes" xml:space="preserve">
          <source>Therefore, you must set corresponding configuration options to the following values</source>
          <target state="translated">따라서 해당 구성 옵션을 다음 값으로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="2ed7bd7bfa9f45bca23dfbdfabab1f2c82c67f08" translate="yes" xml:space="preserve">
          <source>To check my query, I tried to execute the query via control panel phpMyAdmin and the result is OK.</source>
          <target state="translated">쿼리를 확인하기 위해 제어판 phpMyAdmin을 통해 쿼리를 실행하려고했는데 결과가 정상입니다.</target>
        </trans-unit>
        <trans-unit id="93a254c560585346e5d09fa89890ee708396a4b5" translate="yes" xml:space="preserve">
          <source>What to do with the error message you get</source>
          <target state="translated">오류 메시지와 관련하여 수행 할 작업</target>
        </trans-unit>
        <trans-unit id="3f149f14b455141013ea974fb60b2da659b87f0a" translate="yes" xml:space="preserve">
          <source>You have to also &lt;em&gt;trust&lt;/em&gt; the error message. If it says that number of tokens doesn't match the number of bound variables then it &lt;em&gt;is&lt;/em&gt; so. The same goes for the absent tables or columns. Given the choice, whether it's your own mistake or the error message is wrong, always stick to the former. Again it sounds condescending, but hundreds of questions on this very site prove this advise extremely useful.</source>
          <target state="translated">또한 오류 메시지를 &lt;em&gt;신뢰&lt;/em&gt; 해야합니다. 토큰의 수가 바인딩 된 변수의 수와 일치하지 않으면 그렇게됩니다. 없는 테이블이나 열에 대해서도 마찬가지입니다. 선택의 여지가 있다면, 자신의 실수이든 오류 메시지 든 잘못된 것이 든 항상 전자를 고수하십시오. 다시 말하지만,이 사이트에 대한 수백 가지 질문이이 조언이 매우 유용하다는 것을 증명합니다.</target>
        </trans-unit>
        <trans-unit id="69ddecee5804b73ff704c73cbe9db4755e6c8197" translate="yes" xml:space="preserve">
          <source>again, &lt;strong&gt;without any conditions around&lt;/strong&gt;. If an error occurs, it will be treated as any other error in your code. For example, on a development PC it will just appear on-screen, while on a live site it will be logged for a programmer, whereas for the user's convenience you could use an error handler (but that's a different story which is off topic for mysqli, but you may read about it in the article linked above).</source>
          <target state="translated">&lt;strong&gt;조건없이&lt;/strong&gt; 다시. 오류가 발생하면 코드에서 다른 오류로 처리됩니다. 예를 들어 개발 PC에서는 화면에 표시되는 반면 라이브 사이트에서는 프로그래머 용으로 기록되는 반면 사용자 편의를 위해 오류 처리기를 사용할 수 있습니다 (그러나 다른 주제는 다른 주제입니다). mysqli,하지만 위에 링크 된 기사에서 그것에 대해 읽을 수 있습니다).</target>
        </trans-unit>
        <trans-unit id="43b392c34795a8e4cf8a02a964da50ecb59749fb" translate="yes" xml:space="preserve">
          <source>mysqli_fetch_assoc() expects parameter / Call to a member function bind_param() errors. How to get the actual mysql error and fix it</source>
          <target state="translated">mysqli_fetch_assoc ()는 매개 변수 / 멤버 함수 bind_param () 오류 호출을 예상합니다. 실제 MySQL 오류를 얻고 수정하는 방법</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
