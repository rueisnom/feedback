<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/228783">
    <body>
      <group id="228783">
        <trans-unit id="41d61cdb9c9d1e49d9f1bf4dc317e040c0c1bc35" translate="yes" xml:space="preserve">
          <source>&amp;mdash; Each name that begins with an underscore is reserved to the implementation for use as a name in the global namespace.</source>
          <target state="translated">- Каждое имя, которое начинается со знака подчеркивания, зарезервировано для реализации для использования в качестве имени в глобальном пространстве имен.</target>
        </trans-unit>
        <trans-unit id="eec70b10182a3ee0325a4055d4443aa4c7d68d9a" translate="yes" xml:space="preserve">
          <source>&amp;mdash; Each name that contains a double underscore _ _ or begins with an underscore followed by an uppercase letter (2.12) is reserved to the implementation for any use.</source>
          <target state="translated">- Каждое имя, которое содержит двойное подчеркивание _ _ или начинается с подчеркивания, за которым следует заглавная буква (2.12), зарезервировано для реализации для любого использования.</target>
        </trans-unit>
        <trans-unit id="72761832b57d839918312f2cc43d27dcf8f4ca2f" translate="yes" xml:space="preserve">
          <source>(I use macros because they are the more code-polluting of C/C++ symbols, but it could be anything from variable name to class name)</source>
          <target state="translated">(Я использую макросы,потому что они больше загрязняют код символов CC++,но это может быть что угодно от имени переменной до имени класса).</target>
        </trans-unit>
        <trans-unit id="1a1b118aa980272ec9387d9dc726a9ba2f02831f" translate="yes" xml:space="preserve">
          <source>17.4.3.1.2 Global names [lib.global.names]</source>
          <target state="translated">17.4.3.1.2 Глобальные наименования [либ.глобальные наименования]</target>
        </trans-unit>
        <trans-unit id="430567a063d1ce32e693fce199132ea7e7cff053" translate="yes" xml:space="preserve">
          <source>7.1.3 Reserved identifiers</source>
          <target state="translated">7.1.3 Зарезервированные идентификаторы</target>
        </trans-unit>
        <trans-unit id="8de052ab20b9419c96afdf62ff914a376e0c210e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;
&lt;li&gt;never start a symbol with an underscore&lt;/li&gt;
&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8113dfc669d55a1b53dcb2560964b7b05fe9ccbf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;
When naming a symbol, you will avoid collision with compiler/OS/standard libraries if you:&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;При именовании символа вы избежите столкновения с компилятором / ОС / стандартными библиотеками, если вы:&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="1dbf37d738c961e41925d96f6105682a1b33ecb4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;17.6.3.3.2 Global names [global.names]&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;17.6.3.3.2 Глобальные имена [global.names]&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="7ed5b0f26da84e7ddaaf8a99ac425cd2fc9e37b6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;17.6.3.3.5 User-defined literal suffixes [usrlit.suffix]&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;17.6.3.3.5 Пользовательские литеральные суффиксы [usrlit.suffix]&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="dd1640bfec1fda2c51f13b0cac38b87763e8a088" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;never name a symbol with two consecutive underscores inside.
&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;никогда не называйте символ с двумя последовательными подчеркиваниями внутри.&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="ac256d28ba3a8a5ec5ad2b9aa3b3d25a3343705c" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;154)&lt;/sup&gt; The list of reserved identifiers with external linkage includes &lt;code&gt;errno&lt;/code&gt;, &lt;code&gt;math_errhandling&lt;/code&gt;, &lt;code&gt;setjmp&lt;/code&gt;, and &lt;code&gt;va_end&lt;/code&gt;.</source>
          <target state="translated">&lt;sup&gt;154)&lt;/sup&gt; Список зарезервированных идентификаторов с внешней связью включает в себя &lt;code&gt;errno&lt;/code&gt; , &lt;code&gt;math_errhandling&lt;/code&gt; , &lt;code&gt;setjmp&lt;/code&gt; и &lt;code&gt;va_end&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44b321dd20eb7be3e29503f13596198d7607e3c7" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;165)&lt;/sup&gt; Such names are also reserved in namespace &lt;code&gt;::std&lt;/code&gt; (17.4.3.1).</source>
          <target state="translated">&lt;sup&gt;165)&lt;/sup&gt; Такие имена также зарезервированы в пространстве имен &lt;code&gt;::std&lt;/code&gt; (17.4.3.1).</target>
        </trans-unit>
        <trans-unit id="a2c6e4e7bc5af94b177c67a843dc7885d2ab713e" translate="yes" xml:space="preserve">
          <source>After doing research on this article I no longer end my identifiers with &lt;code&gt;_t&lt;/code&gt;
as this is reserved by the POSIX standard.</source>
          <target state="translated">После исследования этой статьи я больше не заканчиваю свои идентификаторы &lt;code&gt;_t&lt;/code&gt; поскольку это зарезервировано стандартом POSIX.</target>
        </trans-unit>
        <trans-unit id="0cfffc2d2cbce99350fe15ff038d744c0063911d" translate="yes" xml:space="preserve">
          <source>All identifiers that begin with an underscore and either an uppercase letter or another
  underscore are always reserved for any use.</source>
          <target state="translated">Все идентификаторы,начинающиеся с символа подчеркивания и либо с прописной буквы,либо с другого символа подчеркивания,всегда зарезервированы для любого использования.</target>
        </trans-unit>
        <trans-unit id="d4eb3ca899ad98e32df1c992d9a34dee9a45c090" translate="yes" xml:space="preserve">
          <source>All identifiers that begin with an underscore are always reserved for use as identifiers
  with file scope in both the ordinary and tag name spaces.</source>
          <target state="translated">Все идентификаторы,начинающиеся с символа подчеркивания,всегда зарезервированы для использования в качестве идентификаторов с областью действия файла как в обычном пространстве имён,так и в пространстве имён тегов.</target>
        </trans-unit>
        <trans-unit id="f760fa262fccd567fd8b370c801ad3a62acc6e2a" translate="yes" xml:space="preserve">
          <source>All identifiers with external linkage in any of the following subclauses (including the
  future library directions) are always reserved for use as identifiers with external
  linkage.&lt;sup&gt;154&lt;/sup&gt;</source>
          <target state="translated">Все идентификаторы с внешней связью в любом из следующих подпунктов (включая будущие направления библиотеки) всегда зарезервированы для использования в качестве идентификаторов с внешней связью. &lt;sup&gt;154&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0777b058fbe578c3a9f273e95ddb7d0f8edf1887" translate="yes" xml:space="preserve">
          <source>Also, everything in the &lt;code&gt;std&lt;/code&gt; namespace is reserved. (You are allowed to add template specializations, though.)</source>
          <target state="translated">Кроме того, все в пространстве имен &lt;code&gt;std&lt;/code&gt; зарезервировано. (Вы можете добавить шаблонные специализации, хотя.)</target>
        </trans-unit>
        <trans-unit id="a90f3fd49183247ac5bd19ef7c65157b5cd737a7" translate="yes" xml:space="preserve">
          <source>As for the other part of the question, it's common to put the underscore at the &lt;em&gt;end&lt;/em&gt; of the variable name to not clash with anything internal.</source>
          <target state="translated">Что касается другой части вопроса, обычно ставят подчеркивание в &lt;em&gt;конце&lt;/em&gt; имени переменной, чтобы не конфликтовать с чем-то внутренним.</target>
        </trans-unit>
        <trans-unit id="ce3df41f37249eda7ba798a33efe462dce8a8d25" translate="yes" xml:space="preserve">
          <source>Because C++ is based on the C standard (1.1/2, C++03) and C99 is a normative reference (1.2/1, C++03) these also apply, from the 1999 C Standard:</source>
          <target state="translated">Поскольку С++основан на стандарте С (1.12,С++03),а С99 является нормативной ссылкой (1.21,С++03),они также применяются,начиная со стандарта С 1999 года:</target>
        </trans-unit>
        <trans-unit id="1bd6e4b10225da14c712ab0db802339c5a5681b1" translate="yes" xml:space="preserve">
          <source>Because I did not want to deal with cases, and wanted a simple rule, I have designed a &lt;strong&gt;personal&lt;/strong&gt; one that is both simple and correct:</source>
          <target state="translated">Поскольку я не хотел иметь дело с делами и хотел простое правило, я разработал &lt;strong&gt;личное&lt;/strong&gt; , простое и правильное:</target>
        </trans-unit>
        <trans-unit id="b7db5228b5551fc3bcc509295600e8473f9bedcd" translate="yes" xml:space="preserve">
          <source>But also:</source>
          <target state="translated">Но также:</target>
        </trans-unit>
        <trans-unit id="44b8b90a73a264dd17818bbd20e868d857e5e0ff" translate="yes" xml:space="preserve">
          <source>C# (or possibly just .NET) seems to recommend using just an underscore, as in &lt;code&gt;_foo&lt;/code&gt;. Is this allowed by the C++ standard?</source>
          <target state="translated">C # (или, возможно, просто .NET) рекомендует использовать только подчеркивание, как в &lt;code&gt;_foo&lt;/code&gt; . Это разрешено стандартом C ++?</target>
        </trans-unit>
        <trans-unit id="ae6b14e6f3fa5c5a0e89a9707a22461ae803d41b" translate="yes" xml:space="preserve">
          <source>Certain sets of names and function signatures are always reserved to the implementation:</source>
          <target state="translated">Определенные наборы имен и сигнатур функций всегда зарезервированы для реализации:</target>
        </trans-unit>
        <trans-unit id="ee2ffa09e4a16b4f725ffa799c8f0da25eb0b391" translate="yes" xml:space="preserve">
          <source>CesarB provided the following link to the &lt;a href=&quot;http://www.opengroup.org/onlinepubs/009695399/functions/xsh_chap02_02.html&quot;&gt;POSIX 2004&lt;/a&gt; reserved symbols and notes 'that many other reserved prefixes and suffixes ... can be found there'.  The
&lt;a href=&quot;http://www.opengroup.org/onlinepubs/9699919799/functions/V2_chap02.html&quot;&gt;POSIX 2008&lt;/a&gt; reserved symbols are defined here.  The restrictions are somewhat more nuanced than those above.</source>
          <target state="translated">CesarB предоставил следующую ссылку на зарезервированные символы &lt;a href=&quot;http://www.opengroup.org/onlinepubs/009695399/functions/xsh_chap02_02.html&quot;&gt;POSIX 2004&lt;/a&gt; и отмечает, что &amp;laquo;там можно найти много других зарезервированных префиксов и суффиксов ...&amp;raquo;. Зарезервированные символы &lt;a href=&quot;http://www.opengroup.org/onlinepubs/9699919799/functions/V2_chap02.html&quot;&gt;POSIX 2008&lt;/a&gt; определены здесь. Ограничения несколько более нюансированы, чем указанные выше.</target>
        </trans-unit>
        <trans-unit id="3923bccb875191f26bb58e24ca4ac2c69b2a104d" translate="yes" xml:space="preserve">
          <source>Each header declares or defines all identifiers listed in its associated subclause, and
  optionally declares or defines identifiers listed in its associated future library directions subclause and identifiers which are always reserved either for any use or for use as file scope identifiers.</source>
          <target state="translated">Каждый заголовок объявляет или определяет все идентификаторы,перечисленные в его ассоциированном подразделе,и опционально объявляет или определяет идентификаторы,перечисленные в его ассоциированных будущих направлениях библиотеки подразделе и идентификаторы,которые всегда зарезервированы либо для любого использования,либо для использования в качестве идентификаторов файловых диапазонов.</target>
        </trans-unit>
        <trans-unit id="32cc50dd8168882a2f32f9dae904b27630be414d" translate="yes" xml:space="preserve">
          <source>Each identifier with file scope listed in any of the following subclauses (including the
  future library directions) is reserved for use as a macro name and as an identifier with
  file scope in the same name space if any of its associated headers is included.</source>
          <target state="translated">Каждый идентификатор с файловым диапазоном,перечисленным в любом из следующих подразделов (включая будущие направления библиотеки),зарезервирован для использования в качестве имени макроса и в качестве идентификатора с файловым диапазоном в том же пространстве имён,если в него включён какой-либо из ассоциированных заголовков.</target>
        </trans-unit>
        <trans-unit id="901f8b7c9dba5bacb86bcba61fc4d4438ae005a6" translate="yes" xml:space="preserve">
          <source>Each macro name in any of the following subclauses (including the future library
  directions) is reserved for use as specified if any of its associated headers is included;
  unless explicitly stated otherwise (see 7.1.4).</source>
          <target state="translated">Каждое имя макроса в одном из следующих подразделов (включая будущие направления библиотеки)зарезервировано для использования в соответствии с указаниями,если не указано иное (см.пункт 7.1.4).</target>
        </trans-unit>
        <trans-unit id="5e28b1cf21e0f4ab90d7899db4bfb417554d78e6" translate="yes" xml:space="preserve">
          <source>Each name that begins with an underscore is reserved to the implementation for use as a name in the global namespace.&lt;sup&gt;165&lt;/sup&gt;</source>
          <target state="translated">Каждое имя, которое начинается со знака подчеркивания, зарезервировано для реализации для использования в качестве имени в глобальном пространстве имен. &lt;sup&gt;165&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c54165923968aa1d4d000f735a45d1548f013998" translate="yes" xml:space="preserve">
          <source>Each name that contains a double underscore (&lt;code&gt;__&lt;/code&gt;) or begins with an underscore followed by an uppercase letter (2.11) is reserved to the implementation for any use.</source>
          <target state="translated">Каждое имя, которое содержит двойное подчеркивание ( &lt;code&gt;__&lt;/code&gt; ) или начинается с подчеркивания, за которым следует заглавная буква (2.11), зарезервировано для реализации для любого использования.</target>
        </trans-unit>
        <trans-unit id="15db9f28c2ba4e968bc63a40692535fbeac68334" translate="yes" xml:space="preserve">
          <source>Extracts from C++0x draft</source>
          <target state="translated">Выдержки из черновика C++0x</target>
        </trans-unit>
        <trans-unit id="8c87f81e583e2fe6e538544663334a72a903d362" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/565w213d.aspx&quot;&gt;MSDN&lt;/a&gt;:</source>
          <target state="translated">Из &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/565w213d.aspx&quot;&gt;MSDN&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="937b036ce701434e6914f371a780b8f5a84dbf84" translate="yes" xml:space="preserve">
          <source>From the 2003 C++ Standard:</source>
          <target state="translated">Начиная со стандарта 2003 года C++:</target>
        </trans-unit>
        <trans-unit id="ff44ac2555b7f2fffd8b5d2b8e42bdd5c8d5522d" translate="yes" xml:space="preserve">
          <source>From the &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3242.pdf&quot;&gt;n3242.pdf&lt;/a&gt; file (I expect the final standard text to be similar):</source>
          <target state="translated">Из файла &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3242.pdf&quot;&gt;n3242.pdf&lt;/a&gt; (я ожидаю, что окончательный стандартный текст будет похож):</target>
        </trans-unit>
        <trans-unit id="de9a905703d4049bf0a7102ef6e1dddb7daa8395" translate="yes" xml:space="preserve">
          <source>I do this even inside classes and namespaces because I then only have to remember one rule (compared to &quot;at the end of the name in global scope, and the beginning of the name everywhere else&quot;).</source>
          <target state="translated">Я делаю это даже внутри классов и пространств имен,потому что тогда мне нужно запомнить только одно правило (по сравнению с &quot;в конце имени в глобальном масштабе,а в начале имени везде&quot;).</target>
        </trans-unit>
        <trans-unit id="8f446e24cf801f1b1ed4e8f8947ff09b7d06e4ea" translate="yes" xml:space="preserve">
          <source>If the program removes (with &lt;code&gt;#undef&lt;/code&gt;) any macro definition of an identifier in the first
  group listed above, the behavior is undefined.</source>
          <target state="translated">Если программа удаляет (с помощью &lt;code&gt;#undef&lt;/code&gt; ) любое макроопределение идентификатора в первой группе, указанной выше, поведение не определено.</target>
        </trans-unit>
        <trans-unit id="564b4470885aa0c8412a9f0bebef1e57667cf48d" translate="yes" xml:space="preserve">
          <source>It's common in C++ to name member variables with some kind of prefix to denote the fact that they're member variables, rather than local variables or parameters. If you've come from an MFC background, you'll probably use &lt;code&gt;m_foo&lt;/code&gt;. I've also seen &lt;code&gt;myFoo&lt;/code&gt; occasionally.</source>
          <target state="translated">В C ++ принято называть переменные-члены с каким-то префиксом, обозначающим тот факт, что они являются переменными-членами, а не локальными переменными или параметрами. Если вы пришли из MFC, вы, вероятно, будете использовать &lt;code&gt;m_foo&lt;/code&gt; . Я также иногда видел &lt;code&gt;myFoo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c495821ff0a7896702e146a03177c71926761e4" translate="yes" xml:space="preserve">
          <source>Literal suffix identifiers that do not start with an underscore are reserved for future standardization.</source>
          <target state="translated">Буквальные идентификаторы суффиксов,которые не начинаются с символа подчеркивания,зарезервированы для будущей стандартизации.</target>
        </trans-unit>
        <trans-unit id="c5f79f225dc531a2cb68d0a6f8442fdea0acb9e0" translate="yes" xml:space="preserve">
          <source>Names beginning with &lt;code&gt;PRI&lt;/code&gt; or &lt;code&gt;SCN&lt;/code&gt; followed by any lowercase letter or &lt;code&gt;X&lt;/code&gt; are reserved</source>
          <target state="translated">Имена, начинающиеся с &lt;code&gt;PRI&lt;/code&gt; или &lt;code&gt;SCN&lt;/code&gt; , за которыми следует любая строчная буква или &lt;code&gt;X&lt;/code&gt; , зарезервированы</target>
        </trans-unit>
        <trans-unit id="f1f9b2d843cc79f0b346fb9fa79aa08e6d854a9c" translate="yes" xml:space="preserve">
          <source>Names beginning with &lt;code&gt;str&lt;/code&gt;, &lt;code&gt;mem&lt;/code&gt;, or &lt;code&gt;wcs&lt;/code&gt; followed by a lowercase letter are reserved</source>
          <target state="translated">Имена, начинающиеся с &lt;code&gt;str&lt;/code&gt; , &lt;code&gt;mem&lt;/code&gt; или &lt;code&gt;wcs&lt;/code&gt; , за которыми следует строчная буква, зарезервированы</target>
        </trans-unit>
        <trans-unit id="8a9ca1c20f63ab6f7459560b2507aa9a213008b9" translate="yes" xml:space="preserve">
          <source>Names beginning with a capital &lt;code&gt;E&lt;/code&gt; followed a digit or uppercase letter:</source>
          <target state="translated">Имена, начинающиеся с заглавной буквы &lt;code&gt;E&lt;/code&gt; и цифры или заглавной буквы:</target>
        </trans-unit>
        <trans-unit id="67cc9b8e180311279b63d11aa4ba78ec5d8059ea" translate="yes" xml:space="preserve">
          <source>Names of all existing mathematics functions suffixed with &lt;code&gt;f&lt;/code&gt; or &lt;code&gt;l&lt;/code&gt; are reserved</source>
          <target state="translated">Имена всех существующих математических функций с суффиксом &lt;code&gt;f&lt;/code&gt; или &lt;code&gt;l&lt;/code&gt; зарезервированы</target>
        </trans-unit>
        <trans-unit id="53be8d3b3fb3bd83bcb0e235d46282a241c04386" translate="yes" xml:space="preserve">
          <source>Names that begin with &lt;code&gt;LC_&lt;/code&gt; followed by an uppercase letter</source>
          <target state="translated">Имена, которые начинаются с &lt;code&gt;LC_&lt;/code&gt; , за которым следует заглавная буква</target>
        </trans-unit>
        <trans-unit id="876647522430b0cdcc0bfc139c24beb2d59373a9" translate="yes" xml:space="preserve">
          <source>Names that begin with &lt;code&gt;SIG&lt;/code&gt; followed by an uppercase letter are reserved</source>
          <target state="translated">Имена, которые начинаются с &lt;code&gt;SIG&lt;/code&gt; , за которым следует заглавная буква, зарезервированы</target>
        </trans-unit>
        <trans-unit id="756e441a441946f9be0c785f7b3eddb2a7f4ad75" translate="yes" xml:space="preserve">
          <source>Names that begin with &lt;code&gt;SIG_&lt;/code&gt; followed by an uppercase letter are reserved</source>
          <target state="translated">Имена, которые начинаются с &lt;code&gt;SIG_&lt;/code&gt; , за которым следует заглавная буква, зарезервированы</target>
        </trans-unit>
        <trans-unit id="398c3910df0fb7d1b60318851d964bd268e9f94b" translate="yes" xml:space="preserve">
          <source>Names that begin with either &lt;code&gt;is&lt;/code&gt; or &lt;code&gt;to&lt;/code&gt; followed by a lowercase letter</source>
          <target state="translated">Имена, начинающиеся с &lt;code&gt;is&lt;/code&gt; или &lt;code&gt;to&lt;/code&gt; , за которыми следует строчная буква</target>
        </trans-unit>
        <trans-unit id="d3cc124567eedbd8c51c895f973b1647f118248d" translate="yes" xml:space="preserve">
          <source>Names that end with &lt;code&gt;_t&lt;/code&gt; are reserved</source>
          <target state="translated">Имена, заканчивающиеся на &lt;code&gt;_t&lt;/code&gt; , зарезервированы</target>
        </trans-unit>
        <trans-unit id="c5fafa8c4713eb477e70f2efb716810cdf54bd87" translate="yes" xml:space="preserve">
          <source>No other identifiers are reserved. If the program declares or defines an identifier in a
  context in which it is reserved (other than as allowed by 7.1.4), or defines a reserved
  identifier as a macro name, the behavior is undefined.</source>
          <target state="translated">Никакие другие идентификаторы не резервируются.Если программа объявляет или определяет идентификатор в контексте,в котором он зарезервирован (кроме разрешенного в п.7.1.4),или определяет зарезервированный идентификатор как имя макроса,поведение является неопределенным.</target>
        </trans-unit>
        <trans-unit id="9f78bca7225e2187fb323aa2cf9d575380d8502a" translate="yes" xml:space="preserve">
          <source>Of course, putting your code in an unique namespace helps to avoid collision, too (but won't protect against evil macros)</source>
          <target state="translated">Конечно,размещение вашего кода в уникальном пространстве имён тоже помогает избежать столкновения (но не защищает от злых макросов).</target>
        </trans-unit>
        <trans-unit id="1ad068bc9971ca20864c2eb0fc465ad0c7584644" translate="yes" xml:space="preserve">
          <source>Other restrictions might apply. For example, the POSIX standard reserves a lot of identifiers that are likely to show up in normal code:</source>
          <target state="translated">Могут применяться и другие ограничения.Например,стандарт POSIX резервирует большое количество идентификаторов,которые,скорее всего,будут отображаться в обычном коде:</target>
        </trans-unit>
        <trans-unit id="01d0fd33cdbcb609d8be36e9a56d08842dcf18ad" translate="yes" xml:space="preserve">
          <source>Personal rule</source>
          <target state="translated">Персональное правило</target>
        </trans-unit>
        <trans-unit id="7cf698f8e2cedd53c4a11faeac4083eb8f5a3559" translate="yes" xml:space="preserve">
          <source>Personally I just don't start identifiers with underscores. New addition to my rule: Don't use double underscores anywhere, which is easy as I rarely use underscore.</source>
          <target state="translated">Лично я просто не запускаю идентификаторы с подчеркиванием.Новое дополнение к моему правилу:Не используйте двойное подчеркивание нигде,что очень просто,так как я редко использую подчеркивание.</target>
        </trans-unit>
        <trans-unit id="74b6a50ceb23949ea544fe1f1a0cbca5ff569377" translate="yes" xml:space="preserve">
          <source>Reserved in any scope, including for use as &lt;a href=&quot;https://stackoverflow.com/questions/4297933/c-implementation#4297974&quot;&gt;implementation&lt;/a&gt; macros:</source>
          <target state="translated">Зарезервировано в любой области, в том числе для использования в качестве макросов &lt;a href=&quot;https://stackoverflow.com/questions/4297933/c-implementation#4297974&quot;&gt;реализации&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="3839d25c0b5de1eabb18cbbd529d20611c5b2ab4" translate="yes" xml:space="preserve">
          <source>Reserved in the global namespace:</source>
          <target state="translated">Зарезервировано в глобальном пространстве имён:</target>
        </trans-unit>
        <trans-unit id="aefa38a747cacc68f54b53c33078d9a6ae8997ad" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://stackoverflow.com/questions/224397/why-do-people-use-double-underscore-so-much-in-c&quot;&gt;this question&lt;/a&gt;.</source>
          <target state="translated">Смотрите также &lt;a href=&quot;https://stackoverflow.com/questions/224397/why-do-people-use-double-underscore-so-much-in-c&quot;&gt;этот вопрос&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="76b15ddd9bbae2a42a5c96bc2b644d8162ba90e8" translate="yes" xml:space="preserve">
          <source>Some examples</source>
          <target state="translated">Некоторые примеры</target>
        </trans-unit>
        <trans-unit id="6ccc40c82e00e0fbca158a964f9e0dd261465fc5" translate="yes" xml:space="preserve">
          <source>The rule about any identifier ending with &lt;code&gt;_t&lt;/code&gt; surprised me a lot. I think that is a POSIX standard (not sure yet) looking for clarification and official chapter and verse. This is from the &lt;a href=&quot;http://www.gnu.org/software/libtool/manual/libc/Reserved-Names.html&quot;&gt;GNU libtool manual&lt;/a&gt;, listing reserved names.</source>
          <target state="translated">Правило о любом идентификаторе, оканчивающемся на &lt;code&gt;_t&lt;/code&gt; , меня очень удивило. Я думаю, что это стандарт POSIX (пока не уверен), требующий разъяснений, а также официальных главы и стиха. Это из руководства по &lt;a href=&quot;http://www.gnu.org/software/libtool/manual/libc/Reserved-Names.html&quot;&gt;GNU libtool&lt;/a&gt; , в котором перечислены зарезервированные имена.</target>
        </trans-unit>
        <trans-unit id="1f03c8a67f91ce23f733acc2ed3436d64f92d530" translate="yes" xml:space="preserve">
          <source>The rules (which did not change in C++11):</source>
          <target state="translated">Правила (которые не изменились в C++11):</target>
        </trans-unit>
        <trans-unit id="5d74020c7943c3abc5d91256210f30804c1b1061" translate="yes" xml:space="preserve">
          <source>The rules to avoid collision of names are both in the C++ standard (see Stroustrup book) and mentioned by C++ gurus (Sutter, etc.).</source>
          <target state="translated">Правила предотвращения коллизии имен приведены как в стандарте C++(см.книгу Stroustrup),так и упомянуты гуру C++(Sutter,и т.д.).</target>
        </trans-unit>
        <trans-unit id="abb2a1596df891975f9bd6cc72ee242045f322cc" translate="yes" xml:space="preserve">
          <source>This is apparently taken from section 17.4.3.1.2 of the C++ standard, but I can't find an original source for the full standard online.</source>
          <target state="translated">Очевидно,это взято из раздела 17.4.3.1.2 стандарта C++,но я не могу найти оригинальный источник для полного стандарта онлайн.</target>
        </trans-unit>
        <trans-unit id="bff46e1b5aff90bcf6586238acea50ba47e9003a" translate="yes" xml:space="preserve">
          <source>This last clause is confusing, unless you consider that a name starting with one underscore and followed by a lowercase letter would be Ok if</source>
          <target state="translated">Этот последний пункт вводит в заблуждение,если только вы не считаете,что имя,начинающееся с одного знака подчеркивания и следующее за ним строчной буквой,будет ОК,если</target>
        </trans-unit>
        <trans-unit id="f67d15f83ed68e83b650f17c3e46b6e2eaa2342b" translate="yes" xml:space="preserve">
          <source>This means that you can use a single underscore as a member variable prefix, as long as it's followed by a lower-case letter.</source>
          <target state="translated">Это означает,что в качестве префикса переменной членства можно использовать один символ подчеркивания,если за ним следует строчная буква.</target>
        </trans-unit>
        <trans-unit id="8c3ec51488fd4e3881b52fa5198d5df5b460f288" translate="yes" xml:space="preserve">
          <source>Underscore prefixes are common in C code -- a single underscore means &quot;private&quot;, and double underscores are usually reserved for use by the compiler.</source>
          <target state="translated">В коде Си распространены префиксы Underscore-одинарное подчеркивание означает &quot;private&quot;,а двойное подчеркивание обычно зарезервировано для использования компилятором.</target>
        </trans-unit>
        <trans-unit id="00ba615e433b04a49b715f686f3c7ecb756868b4" translate="yes" xml:space="preserve">
          <source>Use of two sequential underscore characters ( __ ) at the beginning of an identifier, or a single leading underscore followed by a capital letter, is reserved for C++ implementations in all scopes. You should avoid using one leading underscore followed by a lowercase letter for names with file scope because of possible conflicts with current or future reserved identifiers.</source>
          <target state="translated">Использование двух последовательных символов подчеркивания(__)в начале идентификатора или одного ведущего символа подчеркивания,за которым следует заглавная буква,зарезервировано для реализаций C++во всех областях применения.Следует избегать использования одного ведущего символа подчеркивания с последующей строчной буквой для имен с файловым диапазоном из-за возможных конфликтов с текущими или будущими зарезервированными идентификаторами.</target>
        </trans-unit>
        <trans-unit id="cafb52d2427ef3e764d75cc4a0d02a6f2ce6c5f8" translate="yes" xml:space="preserve">
          <source>What are the rules about using an underscore in a C++ identifier</source>
          <target state="translated">Каковы правила использования подчёркивания в идентификаторе C++</target>
        </trans-unit>
        <trans-unit id="bc82e7705ecacd940f0284f78094a1f488e9240c" translate="yes" xml:space="preserve">
          <source>While using these names for your own purposes right now might not cause a problem, they do raise the possibility of conflict with future versions of that standard.</source>
          <target state="translated">Хотя использование этих имен в ваших собственных целях прямо сейчас может не вызвать проблем,они все же поднимают возможность конфликта с будущими версиями этого стандарта.</target>
        </trans-unit>
        <trans-unit id="c5e2b579738459b3a534e9eee49e63e71398d927" translate="yes" xml:space="preserve">
          <source>Yes, underscores may be used anywhere in an identifier. I believe the rules are: any of a-z, A-Z, _ in the first character and those + 0-9 for following characters.</source>
          <target state="translated">Да,подчеркивания могут использоваться в любом месте идентификатора.Думаю,правила таковы:любой из a-z,A-Z,_в первом символе и те+0-9 для следующих символов.</target>
        </trans-unit>
        <trans-unit id="3524fe68bd665b18037ec2b91f39ea233bcddeff" translate="yes" xml:space="preserve">
          <source>defined in the global namespace...</source>
          <target state="translated">определенных в глобальном пространстве имён...</target>
        </trans-unit>
        <trans-unit id="cbe4f1bf930270da1013a574639c378f46ea7eb6" translate="yes" xml:space="preserve">
          <source>for additional format specifier macros</source>
          <target state="translated">макросы спецификатора дополнительного формата</target>
        </trans-unit>
        <trans-unit id="d1ffd005913b272aecef7eca405ba38d204c1423" translate="yes" xml:space="preserve">
          <source>for additional signal actions.</source>
          <target state="translated">для дополнительных сигнальных действий.</target>
        </trans-unit>
        <trans-unit id="e7eb8088643a246afd5e5877b28f76f2d9fae71a" translate="yes" xml:space="preserve">
          <source>for additional signal names.</source>
          <target state="translated">для дополнительных сигнальных имён.</target>
        </trans-unit>
        <trans-unit id="1f35767e6fd5f2f484bf3bc52bea5f6394638397" translate="yes" xml:space="preserve">
          <source>for additional string and array functions.</source>
          <target state="translated">для дополнительных строковых и массивных функций.</target>
        </trans-unit>
        <trans-unit id="a970c94fa50c842c066c4cf6a3e2e8cd49bea2b2" translate="yes" xml:space="preserve">
          <source>for additional type names.</source>
          <target state="translated">для дополнительных названий типов.</target>
        </trans-unit>
        <trans-unit id="7c6b6625ea4ed3c1296a08e5dcdb42d06c15bbd4" translate="yes" xml:space="preserve">
          <source>for corresponding functions that operate on float and long double arguments, respectively.</source>
          <target state="translated">для соответствующих функций,работающих на float и long double аргументах соответственно.</target>
        </trans-unit>
        <trans-unit id="418f44dd61b84b583bf21de5375c9e60e260acfa" translate="yes" xml:space="preserve">
          <source>identifiers beginning with an underscore</source>
          <target state="translated">идентификаторы,начинающиеся с символа подчеркивания</target>
        </trans-unit>
        <trans-unit id="d4ab2ef9be0eef371126d2a11d047dbb6f5b2681" translate="yes" xml:space="preserve">
          <source>identifiers beginning with an underscore followed immediately by an uppercase letter</source>
          <target state="translated">идентификаторы,начинающиеся с символа подчеркивания,за которым сразу же следует заглавная буква</target>
        </trans-unit>
        <trans-unit id="ba7418871c901ba8e6a177f348bf0f753c0e4364" translate="yes" xml:space="preserve">
          <source>identifiers containing adjacent underscores (or &quot;double underscore&quot;)</source>
          <target state="translated">идентификаторы,содержащие соседние подчеркивания (или &quot;двойное подчеркивание&quot;).</target>
        </trans-unit>
        <trans-unit id="f7beaeda3ce73aef06674e6d116cd9c5641d680e" translate="yes" xml:space="preserve">
          <source>may be used for additional character testing and conversion functions.</source>
          <target state="translated">может использоваться для дополнительных функций тестирования и преобразования символов.</target>
        </trans-unit>
        <trans-unit id="d2722be763842585a40ed07b059ad9701cea8ea4" translate="yes" xml:space="preserve">
          <source>may be used for additional error code names.</source>
          <target state="translated">может использоваться для дополнительных кодов ошибок.</target>
        </trans-unit>
        <trans-unit id="1a2bae39937a1970dc9cd1bccd55355c8998319b" translate="yes" xml:space="preserve">
          <source>may be used for additional macros specifying locale attributes.</source>
          <target state="translated">может использоваться для дополнительных макросов,указывающих атрибуты локали.</target>
        </trans-unit>
        <trans-unit id="557f255516719ea16f8f4a0aae1166054e2c9b43" translate="yes" xml:space="preserve">
          <source>not</source>
          <target state="translated">not</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
