<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/22343224">
    <body>
      <group id="22343224">
        <trans-unit id="16dd1a5b6d6525cf8fc24b84b085af382ebbc440" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;=version&lt;/code&gt; etc</source>
          <target state="translated">&lt;code&gt;&amp;gt;=version&lt;/code&gt; 등</target>
        </trans-unit>
        <trans-unit id="4e6a324f266e647e6f03e5621dca78ec348c5c15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;version&lt;/code&gt; Must be greater than version</source>
          <target state="translated">&lt;code&gt;&amp;gt;version&lt;/code&gt; 버전 보다 커야합니다.</target>
        </trans-unit>
        <trans-unit id="0d20b540b3e17342c492c8bb79214b7676eb5cd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; Matches any version</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; 모든 버전과 일치</target>
        </trans-unit>
        <trans-unit id="18a2f644fca5800119bf040167862b1c0d20051d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1.2.x&lt;/code&gt; 1.2.0, 1.2.1, etc., but not 1.3.0</source>
          <target state="translated">&lt;code&gt;1.2.x&lt;/code&gt; 1.2.0, 1.2.1 등 1.3.0이 아님</target>
        </trans-unit>
        <trans-unit id="01cab88c2e758c5dd575d62b5eeea07bebdd78b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^3.0.0&lt;/code&gt; means it will check for 3.x.x where x is anything</source>
          <target state="translated">&lt;code&gt;^3.0.0&lt;/code&gt; 은 x가 무엇이든 3.xx를 확인한다는 의미입니다.</target>
        </trans-unit>
        <trans-unit id="d83a18ab8dcc4a7439b3125e4463e4493b885087" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^&lt;/code&gt; fixes the major number only. It is used when you're closely watching your dependencies and are ready to quickly change your code if minor release will be incompatible.</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; 는 주 번호 만 수정합니다. 의존성을 면밀히 관찰 할 때 사용되며 마이너 릴리스가 호환되지 않는 경우 코드를 빠르게 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d9dab89d6c79962941e77cb4d257a272f011a62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^&lt;/code&gt; freezes the major number only.</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; 주요 숫자 만 고정합니다.</target>
        </trans-unit>
        <trans-unit id="c0d3acb29d4f8cdbe4b4569822448e8816dee32e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^&lt;/code&gt; is 1.[any].[any] (latest minor version)</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; 는 1. [any]. [any] (최신 부 버전)입니다.</target>
        </trans-unit>
        <trans-unit id="46304f9dc4df9e1ec228962704406c3a9d6a665e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^&lt;/code&gt;: &lt;strong&gt;Compatible&lt;/strong&gt; with</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; : &lt;strong&gt;호환&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="953b55aa752da7b0b89e8d41a9e0b5aab6bb80e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^version&lt;/code&gt; &quot;Compatible with version&quot; See &lt;a href=&quot;https://docs.npmjs.com/misc/semver#caret-ranges-123-025-004&quot;&gt;npm semver - Caret Ranges&lt;/a&gt; &amp;amp; &lt;a href=&quot;http://semver.org/&quot;&gt;semver (7)&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;^version&lt;/code&gt; &quot; 버전 과 호환&quot; &lt;a href=&quot;https://docs.npmjs.com/misc/semver#caret-ranges-123-025-004&quot;&gt;npm semver&lt;/a&gt; 참조 -캐럿 범위 및 &lt;a href=&quot;http://semver.org/&quot;&gt;semver (7)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da4adfb7cf945aa2cec7c7086dec4a0624f36229" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http://sometarballurl&lt;/code&gt; (this may be the URL of a tarball which will be downloaded and installed locally</source>
          <target state="translated">&lt;code&gt;http://sometarballurl&lt;/code&gt; (타르볼의 URL 일 수 있음)</target>
        </trans-unit>
        <trans-unit id="6c0f220497b2af2d911ba8de715258ee28fab7de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;latest&lt;/code&gt; Obtains latest release</source>
          <target state="translated">&lt;code&gt;latest&lt;/code&gt; 최신 릴리스를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="e9417480866c5f96d5c7bda221709f843d182768" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;version&lt;/code&gt; Must match version exactly</source>
          <target state="translated">&lt;code&gt;version&lt;/code&gt; 버전 과 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="1092f74292e1287404764d27efd09cbb5352ecba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~1.2.4&lt;/code&gt; means &lt;code&gt;1.2.4 &amp;lt;= v &amp;lt; 1.3.0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;~1.2.4&lt;/code&gt; 는 &lt;code&gt;1.2.4 &amp;lt;= v &amp;lt; 1.3.0&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="d314884fc5dce8c821f0033ae41a47831a2d78b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~1.2&lt;/code&gt; means &lt;code&gt;1.2.0 &amp;lt;= v &amp;lt; 1.3.0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;~1.2&lt;/code&gt; 는 &lt;code&gt;1.2.0 &amp;lt;= v &amp;lt; 1.3.0&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="74b89710d39817af5f0434a890e122a5b0839ffa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~1&lt;/code&gt; means &lt;code&gt;1.0.0 &amp;lt;= v &amp;lt; 2.0.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;~1&lt;/code&gt; 은 &lt;code&gt;1.0.0 &amp;lt;= v &amp;lt; 2.0.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f49763cda9ed39cf59c4144d52f538827a2fe68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~4.13.3&lt;/code&gt; means it will check for 4.13.x where x is anything and 4.14.0</source>
          <target state="translated">&lt;code&gt;~4.13.3&lt;/code&gt; 4.13.3은 x가 임의이고 4.14.0 인 경우 4.13.x를 검사 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="33158461c7fdd89d4e336dacb9587769d2d2cee1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~&lt;/code&gt; : Reasonably &lt;strong&gt;close&lt;/strong&gt; to</source>
          <target state="translated">&lt;code&gt;~&lt;/code&gt; : 합리적으로 &lt;strong&gt;가까운&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1b229e5a366c66d9c51737c7f6a3c00df855af8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~&lt;/code&gt; fixes major and minor numbers. It is used when you're ready to accept bug-fixes in your dependency, but don't want any potentially incompatible changes.</source>
          <target state="translated">&lt;code&gt;~&lt;/code&gt; 주요 및 부수를 수정합니다. 종속성에서 버그 수정을 수락 할 준비가되었지만 호환되지 않는 변경을 원하지 않는 경우에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="65704eaa033e66a8ba135270f32a39ef1b874bb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~&lt;/code&gt; freezes &lt;strong&gt;major and minor numbers.&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;~&lt;/code&gt; &lt;strong&gt;주요 및 부 숫자를&lt;/strong&gt; 고정 &lt;strong&gt;합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba765d32be6ef389c7552c18538bdaf627fd365e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~&lt;/code&gt; is 1.2.[any] (latest patch)</source>
          <target state="translated">&lt;code&gt;~&lt;/code&gt; 는 1.2입니다. [모든] (최신 패치)</target>
        </trans-unit>
        <trans-unit id="977f5c97322f69c8d91cbb47022419a8ae949cd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~version&lt;/code&gt; &quot;Approximately equivalent to version&quot; See &lt;a href=&quot;https://docs.npmjs.com/misc/semver#tilde-ranges-123-12-1&quot;&gt;npm semver - Tilde Ranges&lt;/a&gt; &amp;amp; &lt;a href=&quot;http://semver.org/&quot;&gt;semver (7)&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;~version&lt;/code&gt; &quot; 버전 과 대략 동일&quot; &lt;a href=&quot;https://docs.npmjs.com/misc/semver#tilde-ranges-123-12-1&quot;&gt;npm semver&lt;/a&gt; 참조 -Tilde Ranges &amp;amp; &lt;a href=&quot;http://semver.org/&quot;&gt;semver (7)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6904ee31b8634ad86322ff53997bd3ab085812d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;e.g. : ^2.4.1 means it will check for 2.x.x where x is anything&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;예 : ^ 2.4.1은 x가 무엇이든 2.xx를 확인한다는 의미입니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5b2c3577b7f86388e192fee69edfa9a044b1cd07" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;e.g. : ~2.4.1 means it will check for 2.4.x where x is anything&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;예 : ~ 2.4.1은 x가 무엇이든 2.4.x를 검사 함을 의미합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="838f60239406a0beca630f8a5e981cb99ff305d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caret (^)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;캐럿 (^)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c1684b13316d7502207393300ca9945b9aff907" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caret ^&lt;/strong&gt; matches major version, if 1.4.2 package is installed in your project and after your installation 1.5.0 is released then ^ will install major version. It will not allow to install 2.1.0 if you have &lt;strong&gt;^1.4.2&lt;/strong&gt;.</source>
          <target state="translated">1.4.2 패키지가 프로젝트에 설치되어 있고 설치 1.5.0이 릴리스 된 후 ^는 주 버전을 설치합니다. &lt;strong&gt;^ 1.4.2 인&lt;/strong&gt; 경우 2.1.0을 설치할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fc573f14e6b266ec34ec46fe71b6d7e7e5964ee5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Disallow updates&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;업데이트 금지&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3b4f83ae8800b48fe672c11248302463ee2fdb84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Fixed version&lt;/strong&gt; if you don't want to change version of package on each installation then used fixed version with out any special character e.g &lt;strong&gt;&quot;1.4.2&quot;&lt;/strong&gt;</source>
          <target state="translated">각 설치에서 패키지 버전을 변경하지 않으려면 &lt;strong&gt;&quot;1.4.2&quot;와&lt;/strong&gt; 같은 특수 문자없이 고정 버전을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="95071d8582ace77b9ed78fa47844f30271604183" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Freeze major-level&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;메이저 레벨 동결&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="529886531c55ee8a3737cf8f73173c439cf7c7d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Freeze minor-level&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;마이너 레벨 동결&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0bbe1d19f192547ea2e4588240a31f9c30df50dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Freeze patch-level&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;패치 레벨 동결&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5f49ecc838693df7ac600515bbf6010852320ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Latest Version *&lt;/strong&gt; If you want to install latest version then only use * in front of package name.</source>
          <target state="translated">&lt;strong&gt;최신 버전 *&lt;/strong&gt; 최신 버전을 설치하려면 패키지 이름 앞에 * 만 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a4593ec0f385b0325942192e7aa70831d8db2e42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; that the rules apply to versions above 1.0.0 and not every project follows semantic versioning. For versions 0.x.x the caret allows only &lt;em&gt;patch&lt;/em&gt; updates, i.e., it behaves the same as the tilde. See &lt;a href=&quot;https://docs.npmjs.com/misc/semver#caret-ranges-123-025-004&quot;&gt;&quot;Caret Ranges&quot;&lt;/a&gt;</source>
          <target state="translated">규칙이 1.0.0 이상의 버전에 적용되며 모든 프로젝트가 시맨틱 버전 관리를 따르는 것은 아닙니다. 버전 0.xx의 경우 캐럿은 &lt;em&gt;패치&lt;/em&gt; 업데이트 만 허용합니다. 즉, 물결표와 동일하게 동작합니다. &lt;a href=&quot;https://docs.npmjs.com/misc/semver#caret-ranges-123-025-004&quot;&gt;&quot;캐럿 범위&quot;&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="b97b21f660437d019383962abe2564428f77470c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notice&lt;/strong&gt;: Missing major, minor, patch or specifying &lt;code&gt;beta&lt;/code&gt; without number, is the same as &lt;code&gt;any&lt;/code&gt; for the missing level.</source>
          <target state="translated">&lt;strong&gt;공지&lt;/strong&gt; : 메이저, 마이너, 패치 누락 또는 숫자가없는 &lt;code&gt;beta&lt;/code&gt; 지정은 누락 된 레벨과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="d4f0679cf946013b6cdca80ab6666c4503d0fe87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notice&lt;/strong&gt;: When you install a package which has &lt;code&gt;0&lt;/code&gt; as major level, the update will only install new beta/pr level version! That's because &lt;code&gt;npm&lt;/code&gt; sets &lt;code&gt;^&lt;/code&gt; as default in &lt;code&gt;package.json&lt;/code&gt; and when installed version is like &lt;code&gt;0.1.3&lt;/code&gt;, it freezes all major/minor/patch levels.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 주요 수준이 &lt;code&gt;0&lt;/code&gt; 인 패키지를 설치하면 업데이트는 새로운 베타 / pr 수준 버전 만 설치합니다! 이는 &lt;code&gt;npm&lt;/code&gt; 이 &lt;code&gt;package.json&lt;/code&gt; 에서 &lt;code&gt;^&lt;/code&gt; 을 기본값으로 설정하고 설치된 버전이 &lt;code&gt;0.1.3&lt;/code&gt; 인 경우 모든 주요 / 부 / 패치 수준을 고정시키기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="3df64512497a864f7462b49164d64587f32fec1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;One liner explanation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;한 라이너 설명&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eadafe93a72dc041a5625b8d63da34d7803fc7a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Set starting major-level and allow updates upward&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;시작 주요 수준을 설정하고 업데이트를 위로 허용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1d102055e25e85d24ad31e313d44fa824a2dbee6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tilde (~)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;물결표 (~)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa6451a500ae2cace166b9a621b8092b452c6b96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tilde ~&lt;/strong&gt; matches minor version, if you have installed a package that has 1.4.2 and after your installation, versions 1.4.3 and 1.4.4 are also available if in your package.json it is used as ~1.4.2 then npm install in your project after upgrade will install 1.4.4 in your project. But there is 1.5.0 available for that package then it will not be installed by ~. It is called minor version.</source>
          <target state="translated">&lt;strong&gt;Tilde ~&lt;/strong&gt; 는 부 버전과 일치합니다. 1.4.2가 포함 된 패키지를 설치하고 설치 후 package.json에 버전 1.4.3 및 1.4.4를 사용할 경우 ~ 1.4.2로 사용 된 다음 npm 설치 업그레이드 후 프로젝트에서 프로젝트에 1.4.4를 설치합니다. 그러나 해당 패키지에 사용 가능한 1.5.0이 있으면 ~로 설치되지 않습니다. 부 버전이라고합니다.</target>
        </trans-unit>
        <trans-unit id="9374e812d3682d88a2c7bb8b2059bb11c7fd7892" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;^ Caret:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;^ 캐럿 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="429756936bcee30d51cc65acc7855052e8853799" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;^&lt;/strong&gt; : major version is fixed, matches any minor version, matches any build number</source>
          <target state="translated">&lt;strong&gt;^&lt;/strong&gt; : 메이저 버전은 고정되어 있으며 마이너 버전과 일치하며 빌드 번호와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="9a52248c2efb6e09bf55bcbff7cf220a3fac7d27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;carat&lt;/strong&gt;&lt;code&gt;^&lt;/code&gt; include everything greater than a particular version in the same major range.</source>
          <target state="translated">&lt;strong&gt;캐럿&lt;/strong&gt; &lt;code&gt;^&lt;/code&gt; 같은 주요 범위에서 특정 버전보다 큰 모든 것을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="61c0e3977707a4e37b2b49586899874e534fa0d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tilde&lt;/strong&gt;&lt;code&gt;~&lt;/code&gt; include everything greater than a particular version in the same minor range.</source>
          <target state="translated">&lt;strong&gt;물결표&lt;/strong&gt; &lt;code&gt;~&lt;/code&gt; 같은 작은 범위에서 특정 버전보다 큰 모든 것을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="bb7b0e05f7e2b633ccfd569a48944d56dac86c1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;~ Tilde:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;~ 물결표 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="acdc061bc2ad07b5e42005698bda6a960a959519" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;~&lt;/strong&gt; : major version is fixed, minor version is fixed, matches any build number</source>
          <target state="translated">&lt;strong&gt;~&lt;/strong&gt; : 메이저 버전은 고정, 마이너 버전은 고정, 모든 빌드 번호와 일치</target>
        </trans-unit>
        <trans-unit id="57ffa72da5603531a270068516d63e279c4089f5" translate="yes" xml:space="preserve">
          <source>A great read is &lt;a href=&quot;http://blog.npmjs.org/post/98131109725/npm-2-0-0&quot;&gt;this blog post&lt;/a&gt; on how semver applies to npm</source>
          <target state="translated">semver가 npm에 어떻게 적용되는지에 대한 &lt;a href=&quot;http://blog.npmjs.org/post/98131109725/npm-2-0-0&quot;&gt;이 블로그 게시물&lt;/a&gt; 을 읽어보십시오.</target>
        </trans-unit>
        <trans-unit id="ea29c2fb3f12f6a6ea69fca0c860d4a27204e495" translate="yes" xml:space="preserve">
          <source>According to: &lt;a href=&quot;http://bytearcher.com/articles/semver-explained-why-theres-a-caret-in-my-package-json/&quot;&gt;&quot;Semver explained - why there's a caret (^) in my package.json?&quot;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://bytearcher.com/articles/semver-explained-why-theres-a-caret-in-my-package-json/&quot;&gt;&quot;Semver가 설명했습니다-왜 package.json에 캐럿 (^)이 있습니까?&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2f0f7b3bfb5b5d53ffc4f2f9f71292d247be9995" translate="yes" xml:space="preserve">
          <source>After I upgraded to latest stable &lt;code&gt;node&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt;, I tried &lt;code&gt;npm install moment --save&lt;/code&gt;. It saves the entry in the &lt;code&gt;package.json&lt;/code&gt; with the caret &lt;code&gt;^&lt;/code&gt; prefix. Previously, it was a tilde &lt;code&gt;~&lt;/code&gt; prefix.</source>
          <target state="translated">최신 안정 &lt;code&gt;node&lt;/code&gt; 와 &lt;code&gt;npm&lt;/code&gt; 으로 업그레이드 한 후 &lt;code&gt;npm install moment --save&lt;/code&gt; 를 시도 했습니다 . caret &lt;code&gt;^&lt;/code&gt; 접두사를 사용하여 &lt;code&gt;package.json&lt;/code&gt; 에 항목을 저장합니다. 이전에는 물결표 &lt;code&gt;~&lt;/code&gt; 접두사였습니다.</target>
        </trans-unit>
        <trans-unit id="22fc087370e2195fd1424ebf92d3d692161b8ab6" translate="yes" xml:space="preserve">
          <source>All (hopefully) possibilities</source>
          <target state="translated">모든 (희망적으로) 가능성</target>
        </trans-unit>
        <trans-unit id="83d6c06f0546acf9b67b0149594323bcc24846f7" translate="yes" xml:space="preserve">
          <source>Allow or disallow changes</source>
          <target state="translated">변경 허용 또는 금지</target>
        </trans-unit>
        <trans-unit id="3b44a4d19686eba52297929ef428f4adc3c67e4f" translate="yes" xml:space="preserve">
          <source>Allows changes that do not modify the left-most non-zero digit in the
  [major, minor, patch] tuple.</source>
          <target state="translated">[major, minor, patch] 튜플에서 0이 아닌 왼쪽 숫자를 수정하지 않는 변경을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="b74e5daec6247dd81c7c51b169f5eec6cb01b0e2" translate="yes" xml:space="preserve">
          <source>Alternatively, use &lt;a href=&quot;http://jubianchi.github.io/semver-check/&quot;&gt;SemVer Check&lt;/a&gt; instead, which doesn't require you to pick a package and also offers explanations.</source>
          <target state="translated">또는 &lt;a href=&quot;http://jubianchi.github.io/semver-check/&quot;&gt;SemVer Check를&lt;/a&gt; 대신 사용하면 패키지를 선택할 필요가없고 설명도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="96fa7f85073e0d8d78b90fe2cc902624e37283af" translate="yes" xml:space="preserve">
          <source>Caret (^) gives you backwards-compatible new functionality as well.</source>
          <target state="translated">캐럿 (^)은 이전 버전과 호환되는 새로운 기능도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a92664aa028dc958b744ed9161461dd1ddb1921c" translate="yes" xml:space="preserve">
          <source>Caret Version Range (&lt;strong&gt;^&lt;/strong&gt;) - ~1.2.3 is equivalent to &amp;gt;=1.2.3 &amp;lt;&lt;strong&gt;2.0.0&lt;/strong&gt;</source>
          <target state="translated">캐럿 버전 범위 ( &lt;strong&gt;^&lt;/strong&gt; )-~ 1.2.3은&amp;gt; = 1.2.3 &amp;lt; &lt;strong&gt;2.0.0과 같습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8d8920e4b40165146d333497f46c3c025e4acb6" translate="yes" xml:space="preserve">
          <source>For example if package version is 4.5.2 ,on Update
~4.5.2 will install latest 4.5.x version (MINOR VERSION)
^4.5.2 will install latest 4.x.x version (MAJOR VERSION)</source>
          <target state="translated">예를 들어 패키지 버전이 4.5.2 인 경우 ~ 4.5.2 업데이트에서 최신 4.5.x 버전을 설치합니다 (MINOR VERSION) ^ 4.5.2는 최신 4.xx 버전을 설치합니다 (MAJOR VERSION)</target>
        </trans-unit>
        <trans-unit id="507969a04577225ee3c7267086161a299fd3dd64" translate="yes" xml:space="preserve">
          <source>For example, to specify acceptable version ranges up to 1.0.4, use the following syntax:</source>
          <target state="translated">예를 들어, 허용 가능한 버전 범위를 최대 1.0.4로 지정하려면 다음 구문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6dae394a05b1d24e2055a7ef0d1aa97842c15bbe" translate="yes" xml:space="preserve">
          <source>For more information on semantic versioning syntax, see the &lt;a href=&quot;https://semver.npmjs.com/&quot;&gt;npm semver calculator&lt;/a&gt;.</source>
          <target state="translated">의미 체계 버전 지정 구문에 대한 자세한 내용은 &lt;a href=&quot;https://semver.npmjs.com/&quot;&gt;npm semver calculator를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ff7e718d2e8590cc1d7d3ace951a5ef802cbc0f0" translate="yes" xml:space="preserve">
          <source>Hat matching may be considered &quot;broken&quot; because it wont update &lt;code&gt;^0.1.2&lt;/code&gt; to &lt;code&gt;0.2.0&lt;/code&gt;. When the software is emerging use &lt;code&gt;0.x.y&lt;/code&gt; versions and hat matching will only match the last varying digit (&lt;code&gt;y&lt;/code&gt;). This is done on purpose. The reason is that while the software is evolving the API changes rapidly: one day you have these methods and the other day you have those methods and the old ones are gone. If you don't want to break the code for people who already are using your library you go and increment the major version: e.g. &lt;code&gt;1.0.0&lt;/code&gt; -&amp;gt; &lt;code&gt;2.0.0&lt;/code&gt; -&amp;gt; &lt;code&gt;3.0.0&lt;/code&gt;. So, by the time your software is finally 100% done and full-featured it will be like version &lt;code&gt;11.0.0&lt;/code&gt; and that doesn't look very meaningful, and actually looks confusing. If you were, on the other hand, using &lt;code&gt;0.1.x&lt;/code&gt; -&amp;gt; &lt;code&gt;0.2.x&lt;/code&gt; -&amp;gt; &lt;code&gt;0.3.x&lt;/code&gt; versions then by the time the software is finally 100% done and full-featured it is released as version &lt;code&gt;1.0.0&lt;/code&gt; and it means &quot;This release is a long-term service one, you can proceed and use this version of the library in your production code, and the author won't change everything tomorrow, or next month, and he won't abandon the package&quot;.</source>
          <target state="translated">&lt;code&gt;^0.1.2&lt;/code&gt; 를 &lt;code&gt;0.2.0&lt;/code&gt; 으로 업데이트하지 않기 때문에 모자 일치는 &quot;깨진&quot;것으로 간주 될 수 있습니다. 소프트웨어가 등장 할 때 &lt;code&gt;0.x.y&lt;/code&gt; 버전을 사용하고 모자 일치는 마지막으로 변하는 숫자 ( &lt;code&gt;y&lt;/code&gt; ) 와만 일치합니다. 이것은 의도적으로 이루어집니다. 그 이유는 소프트웨어가 진화하는 동안 API 변경이 빠르게 진행되기 때문입니다. 언젠가 이러한 메소드가 있고 다른 날에는 해당 메소드가 있으며 이전 메소드는 사라졌습니다. 이미 라이브러리를 사용하는 사람들을 위해 코드를 나누지 않으려면 주요 버전을 늘리십시오 (예 : &lt;code&gt;1.0.0&lt;/code&gt; - &amp;gt; &lt;code&gt;2.0.0&lt;/code&gt; - &amp;gt; &lt;code&gt;3.0.0&lt;/code&gt; ) . 따라서 소프트웨어가 마침내 100 % 완성되고 모든 기능을 갖춘 시점에 버전 &lt;code&gt;11.0.0&lt;/code&gt; 과 같을 것입니다. 이는 그다지 의미가 없으며 실제로는 혼란스러워 보입니다. 반면에 &lt;code&gt;0.1.x&lt;/code&gt; - &amp;gt; &lt;code&gt;0.2.x&lt;/code&gt; - &amp;gt; &lt;code&gt;0.3.x&lt;/code&gt; 버전을 사용 했다면 소프트웨어가 100 % 완성되고 모든 기능을 갖춘 시점에 버전 &lt;code&gt;1.0.0&lt;/code&gt; 으로 출시됩니다. &quot;이 릴리즈는 장기 서비스 버전으로, 프로덕션 코드에서이 버전의 라이브러리를 진행하여 사용할 수 있으며, 저자는 내일 또는 다음 달에 모든 것을 변경하지 않으며 패키지를 포기하지 않을 것입니다.&quot;</target>
        </trans-unit>
        <trans-unit id="fffcd480957de2441f034008ffe28744c667fd8c" translate="yes" xml:space="preserve">
          <source>Here's a visual explanation of the concepts:</source>
          <target state="translated">다음은 개념에 대한 시각적 설명입니다.</target>
        </trans-unit>
        <trans-unit id="03ac06b0a61927dbab823ab032aefd7c24af496f" translate="yes" xml:space="preserve">
          <source>I don't think that's what they meant. Pulling in versions 11.x.x through 19.x.x will break your code.</source>
          <target state="translated">나는 그것이 그들이 의미하는 바라고 생각하지 않습니다. 버전 11.xx에서 19.xx를 가져 오면 코드가 손상됩니다.</target>
        </trans-unit>
        <trans-unit id="50c69e35c1d0175f37534a620047e0f844ebe25f" translate="yes" xml:space="preserve">
          <source>I think they meant &lt;code&gt;left most non-zero number field&lt;/code&gt;.  There is nothing in SemVer that requires number-fields to be single-digit.</source>
          <target state="translated">나는 그들이 &lt;code&gt;left most non-zero number field&lt;/code&gt; 것을 의미한다고 생각 합니다 . SemVer에는 숫자 필드가 한 자리 숫자 여야하는 것이 없습니다.</target>
        </trans-unit>
        <trans-unit id="28c30fda421507f07a08ad983208f97b11210546" translate="yes" xml:space="preserve">
          <source>I would like to add the official npmjs documentation as well which describes all methods for version specificity including the ones referred to in the question -</source>
          <target state="translated">질문에 언급 된 방법을 포함하여 버전 특이성에 대한 모든 방법을 설명하는 공식 npmjs 설명서를 추가하고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="6afc004be9f5966f9f552382f61767013dfe782c" translate="yes" xml:space="preserve">
          <source>In addition to that, &lt;code&gt;^&lt;/code&gt; is &lt;a href=&quot;https://stackoverflow.com/questions/22270244/install-grunt-phonegap-error-no-compatible-version-found-urijs1-12-0#comment33861904_22270244&quot;&gt;not supported&lt;/a&gt; by old npm versions, and should be used with caution.</source>
          <target state="translated">또한 &lt;code&gt;^&lt;/code&gt; 는 이전 npm 버전에서 &lt;a href=&quot;https://stackoverflow.com/questions/22270244/install-grunt-phonegap-error-no-compatible-version-found-urijs1-12-0#comment33861904_22270244&quot;&gt;지원되지 않으므로&lt;/a&gt; 주의해서 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="243c7f56c466a2e86525d3230ff3a19156c2b3b1" translate="yes" xml:space="preserve">
          <source>In the simplest terms, the tilde (~) matches the most recent minor version (the middle number). ~1.2.3 will match all 1.2.x versions but will miss 1.3.0.</source>
          <target state="translated">가장 간단한 용어로, 물결표 (~)는 가장 최근의 부 버전 (중간 숫자)과 일치합니다. ~ 1.2.3은 모든 1.2.x 버전과 일치하지만 1.3.0이 누락됩니다.</target>
        </trans-unit>
        <trans-unit id="ef4232ecae31e934d7fc585a0601d0826a8d1fa8" translate="yes" xml:space="preserve">
          <source>It is used when you're closely watching your dependencies and are ready to quickly change your code if minor release will be incompatible.</source>
          <target state="translated">의존성을 면밀히 관찰 할 때 사용되며 마이너 릴리스가 호환되지 않는 경우 코드를 빠르게 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f2e5d8e067c2283ac8a17ad127f2590ec1c1689" translate="yes" xml:space="preserve">
          <source>It is used when you're ready to accept bug-fixes in your dependency,
but don't want any potentially incompatible changes.</source>
          <target state="translated">종속성에서 버그 수정을 수락 할 준비가되었지만 호환되지 않는 변경을 원하지 않는 경우에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="941acb7ff946646c5e98ddee31160ce4a956e98f" translate="yes" xml:space="preserve">
          <source>It will update you to the &lt;strong&gt;most recent major version&lt;/strong&gt; (the first number).</source>
          <target state="translated">&lt;strong&gt;최신 메이저 버전&lt;/strong&gt; (첫 번째 숫자)으로 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="a46e4cd1329f2c02a6842d1d541cfd6cefd2cf30" translate="yes" xml:space="preserve">
          <source>Major releases: * or x</source>
          <target state="translated">주요 릴리스 : * 또는 x</target>
        </trans-unit>
        <trans-unit id="1b0f0367b9de90b51bc95c3ef388fed976f315d8" translate="yes" xml:space="preserve">
          <source>Major, minor and patch represent the different releases of a package.</source>
          <target state="translated">메이저, 마이너 및 패치는 패키지의 다른 릴리스를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="989d2dc3b4ccd9274cb6f41fe44adc6ea417bc3c" translate="yes" xml:space="preserve">
          <source>Means that &lt;code&gt;^10.2.3&lt;/code&gt; matches &lt;code&gt;10.2.3 &amp;lt;= v &amp;lt; 20.0.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;^10.2.3&lt;/code&gt; &lt;code&gt;10.2.3 &amp;lt;= v &amp;lt; 20.0.0&lt;/code&gt; 과 일치 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="52a957aee563b2d2afc992ac8554546bfb2fd38b" translate="yes" xml:space="preserve">
          <source>Minor releases: 1 or 1.x or ^1.0.4</source>
          <target state="translated">부 버전 : 1 또는 1.x 또는 ^ 1.0.4</target>
        </trans-unit>
        <trans-unit id="02c1102e50259e77513967a6510376973654b615" translate="yes" xml:space="preserve">
          <source>More from npm documentation &lt;a href=&quot;https://docs.npmjs.com/about-semantic-versioning&quot;&gt;About semantic versioning&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://docs.npmjs.com/about-semantic-versioning&quot;&gt;의미있는 버전 관리 정보&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="22bc0215f86ce517cded692d99508dbbcd830a71" translate="yes" xml:space="preserve">
          <source>Not an answer, per se, but an observation that seems to have been overlooked.</source>
          <target state="translated">그 자체로는 답이 아니라 간과 된 것으로 보인다.</target>
        </trans-unit>
        <trans-unit id="10500f01f80a9569de129ec089f7f947ef272c65" translate="yes" xml:space="preserve">
          <source>Ommit right-most level: &lt;code&gt;0.2&lt;/code&gt; means &lt;code&gt;0.2 &amp;lt;= v &amp;lt; 1&lt;/code&gt;. Differs from &lt;code&gt;~&lt;/code&gt; because:</source>
          <target state="translated">가장 오른쪽 레벨 생략 : &lt;code&gt;0.2&lt;/code&gt; 는 &lt;code&gt;0.2 &amp;lt;= v &amp;lt; 1&lt;/code&gt; 합니다. &lt;code&gt;~&lt;/code&gt; 와 다른 점 :</target>
        </trans-unit>
        <trans-unit id="3ed802ff1cc26f0ebcd3e1531243db40b1020ebe" translate="yes" xml:space="preserve">
          <source>Patch releases: 1.0 or 1.0.x or ~1.0.4</source>
          <target state="translated">패치 릴리스 : 1.0 또는 1.0.x 또는 ~ 1.0.4</target>
        </trans-unit>
        <trans-unit id="e8030118c6d8e048db5a6381c2cb2b9e6072fe37" translate="yes" xml:space="preserve">
          <source>Pin version: &lt;code&gt;1.2.3&lt;/code&gt;.</source>
          <target state="translated">핀 버전 : &lt;code&gt;1.2.3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cbb7feb667f9dc3790ac6d78be698c3251fbe477" translate="yes" xml:space="preserve">
          <source>Reference: &lt;a href=&quot;https://medium.com/@Hardy2151/caret-and-tilde-in-package-json-57f1cbbe347b&quot;&gt;https://medium.com/@Hardy2151/caret-and-tilde-in-package-json-57f1cbbe347b&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;https://medium.com/@Hardy2151/caret-and-tilde-in-package-json-57f1cbbe347b&quot;&gt;https://medium.com/@Hardy2151/caret-and-tilde-in-package-json-57f1cbbe347b&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="872ad29a50a90ad8dee8eea423b5038a1c054e67" translate="yes" xml:space="preserve">
          <source>Related to this question you can review &lt;a href=&quot;https://getcomposer.org/doc/articles/versions.md&quot;&gt;Composer documentation on versions&lt;/a&gt;, but here in short:</source>
          <target state="translated">이 질문과 관련하여 &lt;a href=&quot;https://getcomposer.org/doc/articles/versions.md&quot;&gt;버전에&lt;/a&gt; 대한 Composer 설명서를 검토 할 수 있지만 여기서 간단히 설명하면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="35777ee14c6983241649e0e9ab3465e11d0e20c0" translate="yes" xml:space="preserve">
          <source>See Comments below.</source>
          <target state="translated">아래의 주석을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4ccb0f1e15d35f4b4da65407cbf22dcde07d9271" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt;NPM docs&lt;/a&gt; and &lt;a href=&quot;https://docs.npmjs.com/misc/semver&quot;&gt;semver docs&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt;NPM 문서&lt;/a&gt; 및 &lt;a href=&quot;https://docs.npmjs.com/misc/semver&quot;&gt;semver 문서 참조&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="688b8b2f5a9178992acf71e77392585859700e81" translate="yes" xml:space="preserve">
          <source>Semver</source>
          <target state="translated">Semver</target>
        </trans-unit>
        <trans-unit id="78183a131eb267cbe3b2c1cf536fee0299d35b12" translate="yes" xml:space="preserve">
          <source>So if you see ~1.0.2 it means to install version 1.0.2 or the latest patch version such as 1.0.4. If you see ^1.0.2 it means to install version 1.0.2 or the latest minor or patch version such as 1.1.0.</source>
          <target state="translated">따라서 ~ 1.0.2가 표시되면 버전 1.0.2 또는 최신 패치 버전 (예 : 1.0.4)을 설치한다는 의미입니다. ^ 1.0.2가 표시되면 버전 1.0.2 또는 최신 부 버전 또는 1.1.0과 같은 패치 버전을 설치한다는 의미입니다.</target>
        </trans-unit>
        <trans-unit id="823adbcfa80e5a020f2be64ca41aa4f1b4cb225b" translate="yes" xml:space="preserve">
          <source>So, &lt;code&gt;^&lt;/code&gt; is a good default, but it's not perfect. I suggest to carefully pick and configure the semver operator that is most useful to you.</source>
          <target state="translated">따라서 &lt;code&gt;^&lt;/code&gt; 는 좋은 기본값이지만 완벽하지는 않습니다. 가장 유용한 semver 연산자를 신중하게 선택하고 구성하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="a2c2606caacb53e36c518ac27fa2d8a1a5ebcb7b" translate="yes" xml:space="preserve">
          <source>So, with &lt;strong&gt;Tilde&lt;/strong&gt; you will get automatic updates of patches but minor and major versions will not be updated. However, if you use &lt;strong&gt;Caret&lt;/strong&gt; you will get patches and minor versions, but you will not get major (breaking changes) versions.</source>
          <target state="translated">따라서 &lt;strong&gt;Tilde&lt;/strong&gt; 를 사용하면 자동으로 패치를 업데이트하지만 부 버전과 주 버전은 업데이트되지 않습니다. 그러나 &lt;strong&gt;Caret&lt;/strong&gt; 를 사용하면 패치 및 부 버전이 제공되지만 주요 (중단 변경) 버전은 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c31d03174f85f8d12112ae6a88f6d57a276b3288" translate="yes" xml:space="preserve">
          <source>Source: &lt;a href=&quot;http://bytearcher.com/goodies/semantic-versioning-cheatsheet/&quot;&gt;&quot;Semantic Versioning Cheatsheet&quot;&lt;/a&gt;.</source>
          <target state="translated">출처 : &lt;a href=&quot;http://bytearcher.com/goodies/semantic-versioning-cheatsheet/&quot;&gt;&quot;Semantic Versioning Cheatsheet&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2202307e1024a5d31eeeeefc5925c3cff13e910a" translate="yes" xml:space="preserve">
          <source>Starting omitted level version is always &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">생략 된 레벨 버전 시작은 항상 &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="46423fd90b5d96c81776f3da8b23ffec22e8ef9b" translate="yes" xml:space="preserve">
          <source>The above list is not exhaustive. Other version specifiers include GitHub urls and GitHub user repo's, local paths and packages with specific npm tags</source>
          <target state="translated">위의 목록은 완전한 것이 아닙니다. 다른 버전 지정자에는 GitHub URL 및 GitHub 사용자 저장소, 특정 npm 태그가있는 로컬 경로 및 패키지가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="c763eab95fbdf67dc99898da7ee4ee5a283ad062" translate="yes" xml:space="preserve">
          <source>The caret (^)</source>
          <target state="translated">캐럿 (^)</target>
        </trans-unit>
        <trans-unit id="962f0b5d1fc8f531cd0da9e02bb75bd68a5c1623" translate="yes" xml:space="preserve">
          <source>The caret (^), on the other hand, is more relaxed. It will update you to the most recent major version (the first number). ^1.2.3 will match any 1.x.x release including 1.3.0, but will hold off on 2.0.0.</source>
          <target state="translated">반면에 캐럿 (^)은 더 편안합니다. 최신 메이저 버전 (첫 번째 숫자)으로 업데이트됩니다. ^ 1.2.3은 1.3.0을 포함한 모든 1.xx 릴리스와 일치하지만 2.0.0에서는 보류됩니다.</target>
        </trans-unit>
        <trans-unit id="440e7839e9bb662fa537f3eba5692e59ab9e53a9" translate="yes" xml:space="preserve">
          <source>The description for carat ranges:</source>
          <target state="translated">캐럿 범위에 대한 설명 :</target>
        </trans-unit>
        <trans-unit id="c86b27d0fc808b399dbe1dc6c1db142e8983dab2" translate="yes" xml:space="preserve">
          <source>The problem is old versions usually don't receive bug fixes that much, so npm uses caret (&lt;code&gt;^&lt;/code&gt;) as the default for &lt;code&gt;--save&lt;/code&gt;.</source>
          <target state="translated">문제는 일반적으로 이전 버전은 버그 수정을 많이받지 않으므로 npm은 caret ( &lt;code&gt;^&lt;/code&gt; )를 &lt;code&gt;--save&lt;/code&gt; 의 기본값으로 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="f69f5c8141311cd24cb8441876bfcf9dd977e5d1" translate="yes" xml:space="preserve">
          <source>The rule is: use &lt;code&gt;0.x.y&lt;/code&gt; versioning when your software hasn't yet matured and release it with incrementing the middle digit when your public API changes (therefore people having &lt;code&gt;^0.1.0&lt;/code&gt; won't get &lt;code&gt;0.2.0&lt;/code&gt; update and it won't break their code). Then, when the software matures, release it under &lt;code&gt;1.0.0&lt;/code&gt; and increment the leftmost digit each time your public API changes (therefore people having &lt;code&gt;^1.0.0&lt;/code&gt; won't get &lt;code&gt;2.0.0&lt;/code&gt; update and it won't break their code).</source>
          <target state="translated">규칙은 다음과 같습니다. 소프트웨어가 아직 성숙하지 않은 경우 &lt;code&gt;0.x.y&lt;/code&gt; 버전 관리를 사용하고 공개 API가 변경 될 때 중간 자릿수를 증가시켜 소프트웨어를 해제하십시오 (따라서 &lt;code&gt;^0.1.0&lt;/code&gt; 을 가진 사용자는 &lt;code&gt;0.2.0&lt;/code&gt; 업데이트를 얻지 못합니다) 그들의 코드를 깨뜨리지 마라). 그런 다음 소프트웨어가 성숙되면 &lt;code&gt;1.0.0&lt;/code&gt; 이하로 릴리스하고 공개 API가 변경 될 때마다 가장 왼쪽 숫자를 늘리십시오 (따라서 &lt;code&gt;^1.0.0&lt;/code&gt; 을 가진 사람들은 &lt;code&gt;2.0.0&lt;/code&gt; 업데이트를 얻지 못하고 코드가 깨지지 않습니다).</target>
        </trans-unit>
        <trans-unit id="a971d970e1b9bd0b49357c1a2e2f8bf0b19d6938" translate="yes" xml:space="preserve">
          <source>The standard versioning system is major.minor.build (e.g. 2.4.1)</source>
          <target state="translated">표준 버전 관리 시스템은 major.minor.build입니다 (예 : 2.4.1).</target>
        </trans-unit>
        <trans-unit id="06aae1c630c8ef248c91fa50a2d7beff46a0da8d" translate="yes" xml:space="preserve">
          <source>The tilde (~)</source>
          <target state="translated">물결표 (~)</target>
        </trans-unit>
        <trans-unit id="f4f53f4ec08bcf8041f6757d3ec0022993f2c387" translate="yes" xml:space="preserve">
          <source>The tilde matches the &lt;strong&gt;most recent minor version&lt;/strong&gt; (the middle number).</source>
          <target state="translated">물결표는 &lt;strong&gt;가장 최근의 부 버전&lt;/strong&gt; (중간 숫자)과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="570fc46f15795510cd97e2814670aeb43047e11c" translate="yes" xml:space="preserve">
          <source>The version number is in syntax which designates each section with different meaning. syntax is broken into three sections separated by a dot.</source>
          <target state="translated">버전 번호는 각 섹션을 다른 의미로 지정하는 구문입니다. 구문은 점으로 구분 된 세 개의 섹션으로 나뉩니다.</target>
        </trans-unit>
        <trans-unit id="4eaa6dff22954ff6d9bec11fc15d782f9ded8fbf" translate="yes" xml:space="preserve">
          <source>These different major, minor and patch are using to identify different releases.
tide (~) and caret (^) are using to identify which minor and patch version to be used in package versioning.</source>
          <target state="translated">이러한 서로 다른 주, 부 및 패치는 다른 릴리스를 식별하는 데 사용됩니다. 조수 (~) 및 캐럿 (^)은 패키지 버전 관리에 사용할 부 버전 및 패치 버전을 식별하는 데 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d69efeb5f8c519befd37fb2a7d04a3ef03255c96" translate="yes" xml:space="preserve">
          <source>Tilde (~) gives you bug fix releases</source>
          <target state="translated">물결표 (~)는 버그 수정 릴리스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5d1c35e25f6edf29b28cd4bcb6d6c54201cbd45b" translate="yes" xml:space="preserve">
          <source>Tilde Version Range (&lt;strong&gt;~&lt;/strong&gt;) - ~1.2.3 is equivalent to &amp;gt;=1.2.3 &amp;lt;&lt;strong&gt;1.3.0&lt;/strong&gt;</source>
          <target state="translated">틸드 버전 범위 ( &lt;strong&gt;~&lt;/strong&gt; )-~ 1.2.3은&amp;gt; = 1.2.3 &amp;lt; &lt;strong&gt;1.3.0과 같습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee83a1af5eb330c1e13bb98b64471cba2d008a88" translate="yes" xml:space="preserve">
          <source>Tilde Version is considered &quot;safer&quot; approach, but if you are using reliable dependencies (well-maintained libraries) you should not have any problems with Caret Version (because minor changes should not be breaking changes.</source>
          <target state="translated">Tilde Version은 &quot;safer&quot;접근 방식으로 간주되지만 신뢰할 수있는 의존성 (잘 관리 된 라이브러리)을 사용하는 경우 사소한 변경으로 인해 변경 내용이 중단되지 않으므로 Caret Version에 아무런 문제가 없습니다.</target>
        </trans-unit>
        <trans-unit id="bfa1e684c760aa3b1eda20a131e7889dd9ff7f2c" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://semver.npmjs.com/&quot;&gt;npm semver calculator&lt;/a&gt; for testing. (Although the explanations for ^ (include everything greater than a particular version in the same major range) and ~ (include everything greater than a particular version in the same minor range) aren't a 100% correct, the calculator seems to work fine)</source>
          <target state="translated">테스트를 위해 &lt;a href=&quot;https://semver.npmjs.com/&quot;&gt;npm semver 계산기&lt;/a&gt; 를 사용하십시오. (^ (같은 주요 범위의 특정 버전보다 큰 모든 것을 포함) 및 ~ (동일한 작은 범위의 특정 버전보다 큰 모든 것을 포함)에 대한 설명은 100 % 정확하지 않지만 계산기는 제대로 작동하는 것 같습니다 )</target>
        </trans-unit>
        <trans-unit id="1d881a664ea6b8c66c27185d8b28a148df0dc9b3" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;^&lt;/code&gt; (like head). Allows updates at the second non-zero level from the left: &lt;code&gt;^0.2.3&lt;/code&gt; means &lt;code&gt;0.2.3 &amp;lt;= v &amp;lt; 0.3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; (머리처럼)를 사용하십시오. 왼쪽에서 0이 아닌 두 번째 레벨에서 업데이트를 허용합니다. &lt;code&gt;^0.2.3&lt;/code&gt; 은 &lt;code&gt;0.2.3 &amp;lt;= v &amp;lt; 0.3&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="2a78565dd008e89313951f2a092ef5c66f50c455" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;~&lt;/code&gt; (like tail). Generally freeze right-most level or set zero if omitted:</source>
          <target state="translated">&lt;code&gt;~&lt;/code&gt; (꼬리처럼)를 사용하십시오. 일반적으로 가장 오른쪽 레벨을 고정하거나 생략하면 0을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="843adc92f182e88a8f906673aeafd2fdb67db90a" translate="yes" xml:space="preserve">
          <source>What is the advantages over others?</source>
          <target state="translated">다른 사람에 비해 장점은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="3a30289be4ed700947be68c0f53c39c4feefe1db" translate="yes" xml:space="preserve">
          <source>What is the difference between tilde &lt;code&gt;~&lt;/code&gt; and caret &lt;code&gt;^&lt;/code&gt;?</source>
          <target state="translated">물결표 &lt;code&gt;~&lt;/code&gt; 와 캐럿 &lt;code&gt;^&lt;/code&gt; 의 차이점은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="6e57ec5a72e904f2d39ab76ae7294455ee7f6b97" translate="yes" xml:space="preserve">
          <source>What's the difference between tilde(~) and caret(^) in package.json</source>
          <target state="translated">package.json에서 물결표 (~)와 캐럿 (^)의 차이점은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="9a30a67e2cee340bdc04ff217bcfcdf643d071c2" translate="yes" xml:space="preserve">
          <source>When you do npm install moment --save, It saves the entry in the package.json with the caret (^) prefix.</source>
          <target state="translated">npm install moment --save를 수행하면 caret (^) 접두사와 함께 package.json에 항목이 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="0b907a8a8bcfa872d9b8ad61d996af6d168c1824" translate="yes" xml:space="preserve">
          <source>Why are these changes made in &lt;code&gt;npm&lt;/code&gt;?</source>
          <target state="translated">왜 이러한 변경이 &lt;code&gt;npm&lt;/code&gt; 에서 이루어 집니까?</target>
        </trans-unit>
        <trans-unit id="0f8b8408631e2fa90e509ee5501599b98ea1321a" translate="yes" xml:space="preserve">
          <source>You can set starting major version without specifying sublevels.</source>
          <target state="translated">하위 수준을 지정하지 않고 시작 주요 버전을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8915f14a78f7bd8e16f4b9598d9b80580100e7a0" translate="yes" xml:space="preserve">
          <source>You probably have seen the tilde (~) and caret (^) in the package.json. What is the difference between them?</source>
          <target state="translated">package.json에서 물결표 (~)와 캐럿 (^)을 보셨을 것입니다. 그들 사이의 차이점은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="11421aa20093ad6e458fccbaabfc26d3527a3840" translate="yes" xml:space="preserve">
          <source>You should probably review &lt;a href=&quot;https://stackoverflow.com/questions/33052195/what-are-the-differences-between-composer-update-and-composer-install&quot;&gt;this stackoverflow post about differences between composer install and composer update&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/33052195/what-are-the-differences-between-composer-update-and-composer-install&quot;&gt;composer 설치와 composer 업데이트의 차이점에 대해서는이 stackoverflow 게시물을&lt;/a&gt; 검토해야합니다.</target>
        </trans-unit>
        <trans-unit id="5b3d94e3149f7f05804c674600e77fe2b175175c" translate="yes" xml:space="preserve">
          <source>^1.2.3 will match any 1.x.x release including 1.3.0, but it will hold off on 2.0.0.</source>
          <target state="translated">^ 1.2.3은 1.3.0을 포함한 모든 1.xx 릴리스와 일치하지만 2.0.0에서는 보류됩니다.</target>
        </trans-unit>
        <trans-unit id="827913463e40a70887c5046f18d10abcfe9f5348" translate="yes" xml:space="preserve">
          <source>^version &amp;ldquo;Compatible with version&amp;rdquo;, will update you to all future minor/patch versions, without incrementing the major version. &lt;code&gt;^2.3.4&lt;/code&gt; will use releases from 2.3.4 to &amp;lt;3.0.0.</source>
          <target state="translated">^ 버전&amp;ldquo;호환 가능&amp;rdquo;은 주 버전을 증가시키지 않고 향후 모든 부 / 패치 버전으로 업데이트합니다. &lt;code&gt;^2.3.4&lt;/code&gt; 는 2.3.4에서 &amp;lt;3.0.0의 릴리스를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="a4b6414f14a814931aafecf0f074aefcfe397e75" translate="yes" xml:space="preserve">
          <source>and what they're doing to make it match &lt;a href=&quot;http://semver.org/spec/v2.0.0.html&quot;&gt;the semver standard&lt;/a&gt;</source>
          <target state="translated">그들이 &lt;a href=&quot;http://semver.org/spec/v2.0.0.html&quot;&gt;semver 표준에&lt;/a&gt; 맞추기 위해 무엇을하고 있는지</target>
        </trans-unit>
        <trans-unit id="0ca41f519bbc5cbd326ce976fd5b6e22c439024f" translate="yes" xml:space="preserve">
          <source>major version is fixed, matches any minor version, matches any build
  number</source>
          <target state="translated">메이저 버전은 고정되어 있으며 마이너 버전과 일치하며 빌드 번호와 일치</target>
        </trans-unit>
        <trans-unit id="98cf50632761a3026529d822268417f3bc7559d2" translate="yes" xml:space="preserve">
          <source>major version is fixed, minor version is fixed, matches any build
  number</source>
          <target state="translated">메이저 버전은 고정, 마이너 버전은 고정, 모든 빌드 번호와 일치</target>
        </trans-unit>
        <trans-unit id="038b80fc42ed70a81a089a602663775cbecddbdc" translate="yes" xml:space="preserve">
          <source>major.minor.patch
1.0.2</source>
          <target state="translated">major.minor.patch
1.0.2</target>
        </trans-unit>
        <trans-unit id="6ac01713828b5a94eb5315be15541ba482e396c3" translate="yes" xml:space="preserve">
          <source>npm allows installing newer version of a package than the one specified. Using tilde (&lt;code&gt;~&lt;/code&gt;) gives you bug fix releases and caret (&lt;code&gt;^&lt;/code&gt;) gives you backwards-compatible new functionality as well.</source>
          <target state="translated">npm을 사용하면 지정된 것보다 최신 버전의 패키지를 설치할 수 있습니다. 물결표 ( &lt;code&gt;~&lt;/code&gt; )를 사용하면 버그 수정 릴리스가 제공되고 캐럿 ( &lt;code&gt;^&lt;/code&gt; )은 이전 버전과 호환되는 새로운 기능도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ccf05ab155b0e5fcd10a3320f74d75080fa99f67" translate="yes" xml:space="preserve">
          <source>npm checks and fixes the version of a particular package based on these characters</source>
          <target state="translated">npm은 이러한 문자를 기반으로 특정 패키지의 버전을 확인하고 수정합니다.</target>
        </trans-unit>
        <trans-unit id="eea1168c4a4149f780ec26f3ed1cc62d19a0ee8a" translate="yes" xml:space="preserve">
          <source>npm uses the tilde (~) and caret (^) to designate which patch and minor versions to use respectively.</source>
          <target state="translated">npm은 물결표 (~) 및 캐럿 (^)을 사용하여 각각 사용할 패치 및 부 버전을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="8140be12be8c4f838678e4aebec2e72fcf1aaf17" translate="yes" xml:space="preserve">
          <source>see: &lt;a href=&quot;https://github.com/npm/node-semver#caret-ranges-123-025-004&quot;&gt;https://github.com/npm/node-semver#caret-ranges-123-025-004&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;https://github.com/npm/node-semver#caret-ranges-123-025-004&quot;&gt;https://github.com/npm/node-semver#caret-ranges-123-025-004&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f9945b3ffb60a0fd2b30cab8e8e57290aeceb8c" translate="yes" xml:space="preserve">
          <source>semver is separate in to 3 major sections which is broken by dots.</source>
          <target state="translated">semver는 3 개의 주요 섹션으로 구분되며 점으로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="97f5b505c9bbbec689ff9cf9ac1e6fdfb0150151" translate="yes" xml:space="preserve">
          <source>~ specfices to minor version releases
^ specifies to major version releases</source>
          <target state="translated">~ 부 버전 릴리스에 해당 ^ ^ 주 버전 릴리스에 지정</target>
        </trans-unit>
        <trans-unit id="5b6164b2f2c4f05f04f8cd72f6f007a0f221c941" translate="yes" xml:space="preserve">
          <source>~1.2.3 will match all 1.2.x versions, but it will miss 1.3.0.</source>
          <target state="translated">~ 1.2.3은 모든 1.2.x 버전과 일치하지만 1.3.0이 누락됩니다.</target>
        </trans-unit>
        <trans-unit id="53ef5b7fa1e3658976c28475d978e6dbcb9805d3" translate="yes" xml:space="preserve">
          <source>~version &amp;ldquo;Approximately equivalent to version&amp;rdquo;, will update you to all future patch versions, without incrementing the minor version. &lt;code&gt;~1.2.3&lt;/code&gt; will use releases from 1.2.3 to &amp;lt;1.3.0.</source>
          <target state="translated">~ version&amp;ldquo;대략 버전과 동일&amp;rdquo;, 부 버전을 늘리지 않고 향후 모든 패치 버전으로 업데이트합니다. &lt;code&gt;~1.2.3&lt;/code&gt; 은 1.2.3에서 &amp;lt;1.3.0까지의 릴리스를 사용합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
