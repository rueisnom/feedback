<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/22444">
    <body>
      <group id="22444">
        <trans-unit id="dec62beea796b93e961fd26843e4f12545dcd801" translate="yes" xml:space="preserve">
          <source>(Project name:\s+[A-Z]:(?:\\w+)+.[a-zA-Z]+\s+J[0-9]{7})(?=:)</source>
          <target state="translated">(プロジェクト名:\s+[A-Z]:(?:\w+)+...[a-zA-Z]+\s+J[0-9]{7})(?=:)</target>
        </trans-unit>
        <trans-unit id="d74358649090f184688e9436caba0929745dfa76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\S&lt;/code&gt; means &amp;ldquo;everything except a whitespace and this is exactly what you want.</source>
          <target state="translated">&lt;code&gt;\S&lt;/code&gt; は、「空白以外のすべてのものであり、これがまさにあなたが望むものです。</target>
        </trans-unit>
        <trans-unit id="1a22048ad80c3f36c944b4c6969e1305292d5ede" translate="yes" xml:space="preserve">
          <source>Adding (?:\\w+)+.[a-zA-Z]+ will be more restrictive instead of .*</source>
          <target state="translated">(?:\w+)+.a-zA-Z]+を追加すると、.*.の代わりに、より制限的になります。</target>
        </trans-unit>
        <trans-unit id="f96cb3981f13999823660dd7e13db3854f62fd42" translate="yes" xml:space="preserve">
          <source>Available for download at their site:
&lt;a href=&quot;http://www.ultrapico.com/Expresso.htm&quot;&gt;http://www.ultrapico.com/Expresso.htm&lt;/a&gt;</source>
          <target state="translated">彼らのサイトでダウンロード可能： &lt;a href=&quot;http://www.ultrapico.com/Expresso.htm&quot;&gt;http&lt;/a&gt; : //www.ultrapico.com/Expresso.htm</target>
        </trans-unit>
        <trans-unit id="0819a57fa2ce95f4f7ef948ace1c68f4119a4053" translate="yes" xml:space="preserve">
          <source>Express download:
&lt;a href=&quot;http://www.ultrapico.com/ExpressoDownload.htm&quot;&gt;http://www.ultrapico.com/ExpressoDownload.htm&lt;/a&gt;</source>
          <target state="translated">エクスプレスダウンロード： &lt;a href=&quot;http://www.ultrapico.com/ExpressoDownload.htm&quot;&gt;http&lt;/a&gt; : //www.ultrapico.com/ExpressoDownload.htm</target>
        </trans-unit>
        <trans-unit id="b4d4474f901ea72bb6048b19bc68daf660d2062c" translate="yes" xml:space="preserve">
          <source>For example, when building your regex using the UI, and choosing &quot;*&quot;, you have the ability to check the checkbox &quot;As few as possible&quot; and see the resulting regex, as well as test its behavior, even if you were unfamiliar with non-greedy expressions before.</source>
          <target state="translated">例えば、UIを使って正規表現を構築する際に「*」を選択すると、「できるだけ少ない」というチェックボックスにチェックを入れて結果の正規表現を見ることができるだけでなく、それまで非greedy表現に慣れていなかった人でも、その動作をテストすることができます。</target>
        </trans-unit>
        <trans-unit id="c6dc17ec3338126b029bb4467dc4a5b0c733e160" translate="yes" xml:space="preserve">
          <source>Here's the regex I've been playing with</source>
          <target state="translated">私が遊んでいた正規表現は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="25b7ae5bda2bb5646615f024476878fbc1e11ba9" translate="yes" xml:space="preserve">
          <source>Here's what I used. &lt;code&gt;s&lt;/code&gt; contains your original string. This code is .NET specific, but most flavors of regex will have something similar.</source>
          <target state="translated">これが私が使ったものです。 &lt;code&gt;s&lt;/code&gt; には元の文字列が含まれます。 このコードは.NET固有ですが、正規表現のほとんどのフレーバーは似たようなものになります。</target>
        </trans-unit>
        <trans-unit id="fa0d0e5f0dcd95cd2394c04d0dd750558e07c207" translate="yes" xml:space="preserve">
          <source>How do I make the regex stop at the first occurrence of &lt;code&gt;J[0-9]{7}&lt;/code&gt;?</source>
          <target state="translated">&lt;code&gt;J[0-9]{7}&lt;/code&gt; の最初の出現時に正規表現を停止するにはどうすればよいですか？</target>
        </trans-unit>
        <trans-unit id="2476709c17310e52137aa1cc47d9521a8ec9af1f" translate="yes" xml:space="preserve">
          <source>However, consider using a negative character class instead:</source>
          <target state="translated">ただし、代わりに負の文字クラスを使用することを検討してください。</target>
        </trans-unit>
        <trans-unit id="e8182e7a74ca90848e396968128840af8ff50330" translate="yes" xml:space="preserve">
          <source>I have this gigantic ugly string and I'm trying to extract pieces from it using regex. In this case, I want to grab everything after &quot;Project Name&quot; up to the part where it says &quot;J0000011:&quot; (the 11 is going to be a different number every time).</source>
          <target state="translated">この巨大で醜い文字列を持っていて、そこから正規表現を使って部分的に抽出しようとしています。この場合、&quot;Project Name &quot;の後から &quot;J0000011:&quot;と書かれている部分までのすべての文字列を取得したいと思います(11は毎回異なる数字になります)。</target>
        </trans-unit>
        <trans-unit id="3ffdb82847dbfa2d59c1f0a1cbce7cec5863bca1" translate="yes" xml:space="preserve">
          <source>I would also recommend you experiment with regular expressions using &quot;Expresso&quot; - it's a utility a great (and free) utility for regex editing and testing.</source>
          <target state="translated">また、&quot;Expresso &quot;を使って正規表現を試してみることをお勧めします-正規表現の編集やテストに最適な(無料の)ユーティリティです。</target>
        </trans-unit>
        <trans-unit id="6846de25786ac85bdcf55d989f13d12d704b9c5e" translate="yes" xml:space="preserve">
          <source>Make &lt;code&gt;.*&lt;/code&gt; non-greedy by adding '&lt;code&gt;?&lt;/code&gt;' after it:</source>
          <target state="translated">' &lt;code&gt;?&lt;/code&gt; を追加して &lt;code&gt;.*&lt;/code&gt; を貪欲にしない ' その後：</target>
        </trans-unit>
        <trans-unit id="4614b7d813b6577e56143c1d13fdce32e59ecd47" translate="yes" xml:space="preserve">
          <source>My regex is matching too much. How do I make it stop</source>
          <target state="translated">正規表現が一致しすぎています。どうすれば止められるでしょうか?</target>
        </trans-unit>
        <trans-unit id="a37930a0a0dbd048cb64cfd2f01bee038a3c4efb" translate="yes" xml:space="preserve">
          <source>One of its upsides is that its UI exposes a lot of regex functionality that people unexprienced with regex might not be familiar with, in a way that it would be easy for them to learn these new concepts.</source>
          <target state="translated">その利点の1つは、そのUIが、正規表現に慣れていない人が新しい概念を学ぶのを容易にするような形で、正規表現に慣れていない人にもなじみのない多くの正規表現の機能を公開していることです。</target>
        </trans-unit>
        <trans-unit id="8b1564b92aeae9365fa6d7b721259bac515f612a" translate="yes" xml:space="preserve">
          <source>The problem is that it doesn't stop until it hits the &lt;strong&gt;J0000020:&lt;/strong&gt; at the end.</source>
          <target state="translated">問題は、最後に&lt;strong&gt;J0000020：&lt;/strong&gt;に&lt;strong&gt;到達&lt;/strong&gt;するまで停止しないことです。</target>
        </trans-unit>
        <trans-unit id="7ee02ddff9a21ceb84aa0fdbdf0b08ea2d88858d" translate="yes" xml:space="preserve">
          <source>This will work for you.</source>
          <target state="translated">これは、あなたのために働くでしょう。</target>
        </trans-unit>
        <trans-unit id="b50caa0655c0017769d1e76767cc9307fa184451" translate="yes" xml:space="preserve">
          <source>Using non-greedy quantifiers here is probably the best solution, also because it is more efficient than the greedy alternative: Greedy matches generally go as far as they can (here, until the end of the text!) and then trace back character after character to try and match the part coming afterwards.</source>
          <target state="translated">ここでは非強引な量詞を使用するのがおそらく最良の解決策であり、強引な代替手段よりも効率的であるからです。貪欲なマッチは、一般的に可能な限り(ここでは、テキストの最後まで!)行って、文字の後に続く文字をトレースして、後から来る部分にマッチさせようとします。</target>
        </trans-unit>
        <trans-unit id="b26ab1ae34128cc80aad47f0821d813cf120cb31" translate="yes" xml:space="preserve">
          <source>Well, &lt;code&gt;&quot;.*&quot;&lt;/code&gt; is a greedy selector. You make it non-greedy by using &lt;code&gt;&quot;.*?&quot;&lt;/code&gt; When using the latter construct, the regex engine will, at every step it matches text into the &lt;code&gt;&quot;.&quot;&lt;/code&gt; attempt to match whatever make come after the &lt;code&gt;&quot;.*?&quot;&lt;/code&gt;. This means that if for instance nothing comes after the &lt;code&gt;&quot;.*?&quot;&lt;/code&gt;, then it matches nothing.</source>
          <target state="translated">まあ、 &lt;code&gt;&quot;.*&quot;&lt;/code&gt; は貪欲なセレクタです。 &lt;code&gt;&quot;.*?&quot;&lt;/code&gt; を使用して貪欲にしない 後者の構成を使用する場合、正規表現エンジンは、各ステップでテキストを &lt;code&gt;&quot;.&quot;&lt;/code&gt; 一致させます。 &lt;code&gt;&quot;.*?&quot;&lt;/code&gt; 後ろにあるものは何でも一致させようとします 。 これは、たとえば &lt;code&gt;&quot;.*?&quot;&lt;/code&gt; 後に何もない場合 、それから何にもマッチしません。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
