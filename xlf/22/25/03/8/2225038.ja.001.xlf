<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/2225038">
    <body>
      <group id="2225038">
        <trans-unit id="67d4788f96eb7407b4334a5daf1a28d0212f9175" translate="yes" xml:space="preserve">
          <source>...fails.</source>
          <target state="translated">...fails.</target>
        </trans-unit>
        <trans-unit id="c53d367d54660076298546d923e8323508deb21c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; and &lt;code&gt;False&lt;/code&gt; are just keywords that mean &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; in python. Thus,</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;False&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、Pythonでは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を意味する単なるキーワードです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc56a421fcb0855ac2882106201eba272ada55a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isinstance()&lt;/code&gt; is usually the preferred way to ensure the type of an object because it will also accept derived types. So unless you actually need the type object (for whatever reason), using &lt;code&gt;isinstance()&lt;/code&gt; is preferred over &lt;code&gt;type()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;isinstance()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、派生型も受け入れるため、通常はオブジェクトの型を保証するための推奨される方法です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ですから、実際に使用して、（何らかの理由で）型オブジェクトを必要としない限り、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;好まれる&lt;/font&gt;&lt;/font&gt; &lt;code&gt;type()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="07e4350bbab17bc13330a6c2a291bfe7849e826d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type()&lt;/code&gt; is a better solution than &lt;code&gt;isinstance()&lt;/code&gt;, particularly for &lt;code&gt;booleans&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;type()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;よりも良好な溶液である&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;特にため、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;booleans&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="47d2240422b66c9d7a756e2046f6837b4e5b34a8" translate="yes" xml:space="preserve">
          <source>Above we see that &lt;code&gt;dict&lt;/code&gt; gets reassigned to a string, therefore the test:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記では、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;dict&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が文字列に再割り当てされるため、テストは次のようになります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9839782682a82233200e67ef57fe2b9188b7b686" translate="yes" xml:space="preserve">
          <source>Additionaly we can use &lt;a href=&quot;https://docs.python.org/library/collections.abc.html&quot;&gt;abstract classes&lt;/a&gt; to cover several types at once:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さらに、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/library/collections.abc.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;抽象クラス&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して、一度に複数のタイプをカバー&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="62bb9a0357eec84dd4c2a879192b695c294b4d87" translate="yes" xml:space="preserve">
          <source>Although it works, avoid double underscore attributes like &lt;code&gt;__class__&lt;/code&gt; - they're not semantically public, and, while perhaps not in this case, the builtin functions usually have better behavior.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは機能しますが、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__class__&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ような二重のアンダースコア属性は避け&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;てください。これらは意味的にパブリックではなく、おそらくこの場合ではないかもしれませんが、組み込み関数は通常、より良い動作をします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a1d9ec321a863f55f5e17e13e046e3c3e8e96454" translate="yes" xml:space="preserve">
          <source>And just avoid type-checking where it makes sense.</source>
          <target state="translated">そして、それが意味のあるところではタイプチェックを避けるようにしてください。</target>
        </trans-unit>
        <trans-unit id="87b3f324d0bd92384523ad0bd4c24d13bc9cf018" translate="yes" xml:space="preserve">
          <source>As an aside to the previous answers, it's worth mentioning the existence of &lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html&quot;&gt;&lt;code&gt;collections.abc&lt;/code&gt;&lt;/a&gt; which contains several abstract base classes (ABCs) that complement duck-typing.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;前の回答とは別に、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ダックタイピングを補完するいくつかの抽象基本クラス（ABC）を含む&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html&quot;&gt; &lt;code&gt;collections.abc&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の存在について言及する価値があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1b1e90eed4747552a24402c2ebbab8d46b45ad84" translate="yes" xml:space="preserve">
          <source>Be warned that you can clobber &lt;code&gt;list&lt;/code&gt; or any other type by assigning a variable in the current scope of the same name.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同じ名前の現在のスコープで変数を割り当てることにより、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;やその他のタイプを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上書きできることに注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f86073a82abdacebf0f720d74b4533890451049e" translate="yes" xml:space="preserve">
          <source>Beware that in python 3.x and in New-Style classes (aviable optionally from Python 2.6) class and type have been merged and this can sometime lead to unexpected results. Mainly for this reason my favorite way of testing types/classes is to the &lt;a href=&quot;http://docs.python.org/3.3/library/functions.html#isinstance&quot;&gt;isinstance&lt;/a&gt; built in function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;python 3.xとNew-Styleクラス（Python 2.6からオプションで利用可能）では、クラスとタイプがマージされているため、予期しない結果になる可能性があることに注意してください。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;主にこの理由から、タイプ/クラスをテストする私のお気に入りの方法は、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/3.3/library/functions.html#isinstance&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;組み込み&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;isinstance&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e39262defe80a83fac1b793497417432c8b1a879" translate="yes" xml:space="preserve">
          <source>Conclusion</source>
          <target state="translated">Conclusion</target>
        </trans-unit>
        <trans-unit id="6ca03fd9e3561e4e2633b913936b90371744bd90" translate="yes" xml:space="preserve">
          <source>Determine the type of a Python object</source>
          <target state="translated">Python オブジェクトの型を決定する</target>
        </trans-unit>
        <trans-unit id="50883d283bd6baec62633f0050fd5d0ddca95f36" translate="yes" xml:space="preserve">
          <source>Determine the type of an object</source>
          <target state="translated">オブジェクトのタイプを決定する</target>
        </trans-unit>
        <trans-unit id="c6d00461327245931dcf1eefc77470e84bac3465" translate="yes" xml:space="preserve">
          <source>Determine the type of an object with &lt;code&gt;type&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;持つオブジェクトの種類を判別&lt;/font&gt;&lt;/font&gt; &lt;code&gt;type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ced96a470cbaf016109ed72d47595026fa384c98" translate="yes" xml:space="preserve">
          <source>Even better, you might look for a specific Abstract Base Class from &lt;code&gt;collections&lt;/code&gt; or &lt;code&gt;numbers&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さらに良いのは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;collections&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;numbers&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から特定の抽象基本クラスを探すことです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f637cf08ee18cab84827710927093acf5029d311" translate="yes" xml:space="preserve">
          <source>Executing this snippet would yield:</source>
          <target state="translated">このスニペットを実行すると、次のような結果が得られます。</target>
        </trans-unit>
        <trans-unit id="8bfeb539f9136bb8f9cd0ad749cd6858a60574de" translate="yes" xml:space="preserve">
          <source>For example, instead of explicitly checking if something is a list with:</source>
          <target state="translated">例えば、何かがリストであるかどうかを明示的にチェックする代わりに、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="624e6009185860ccc39ce9164d746730b8705833" translate="yes" xml:space="preserve">
          <source>Here I'm trying to answer the title's question: &lt;strong&gt;how can I determine the type of an arbitrary object&lt;/strong&gt;? Other suggestions about using or not using isinstance are fine in many comments and answers, but I'm not addressing those concerns.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで私はタイトルの質問に答えようとしています：&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;任意のオブジェクトのタイプをどのように判断できます&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;か？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;isinstanceの使用または使用しない他の提案は、多くのコメントと回答で問題ありませんが、私はそれらの懸念に対処していません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6be05264bd00c7c4a30b627448593e7db93d92ef" translate="yes" xml:space="preserve">
          <source>Here is a small example of how it works:</source>
          <target state="translated">ここでは、その仕組みの一例を紹介します。</target>
        </trans-unit>
        <trans-unit id="0b9fa4b0b61fa752ccfdc87d5092d007934b6132" translate="yes" xml:space="preserve">
          <source>In general you can extract a string from object with the class name,</source>
          <target state="translated">一般的には、クラス名を持つオブジェクトから文字列を抽出することができます。</target>
        </trans-unit>
        <trans-unit id="4f00239a522fa07fb5e3e5471fd67de19963b902" translate="yes" xml:space="preserve">
          <source>In many practical cases instead of using &lt;code&gt;type&lt;/code&gt; or &lt;code&gt;isinstance&lt;/code&gt; you can also use &lt;a href=&quot;https://docs.python.org/library/functools.html#functools.singledispatch&quot;&gt;&lt;code&gt;@functools.singledispatch&lt;/code&gt;&lt;/a&gt;, which is used to define &lt;a href=&quot;https://docs.python.org/glossary.html#term-generic-function&quot;&gt;generic functions&lt;/a&gt; (&lt;em&gt;function composed of multiple functions implementing the same operation for different types&lt;/em&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;type&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isinstance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用する代わりに、多くの実際的なケース&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;では、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/library/functools.html#functools.singledispatch&quot;&gt; &lt;code&gt;@functools.singledispatch&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用することもできます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。これは、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/glossary.html#term-generic-function&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ジェネリック関数&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;異なるタイプの同じ操作を実装する複数の関数で構成される&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を定義するために使用されます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8ba28dc19213053589b4d8c76c574589f266490b" translate="yes" xml:space="preserve">
          <source>In other words, you would want to use it when you have a code like the following:</source>
          <target state="translated">つまり、以下のようなコードがある場合に使いたくなります。</target>
        </trans-unit>
        <trans-unit id="145439453e6cf362fc9d307e9b877219453bca2b" translate="yes" xml:space="preserve">
          <source>Is there a simple way to determine if a variable is a list, dictionary, or something else? I am getting an object back that may be either type and I need to be able to tell the difference.</source>
          <target state="translated">変数がリストなのか、辞書なのか、何か他のものなのかを判断する簡単な方法はありますか?私はどちらかの型であるかもしれないオブジェクトを返してもらっているのですが、その違いを見分けることができるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="6daeb75e4dbac4fae4d2daed51ae7ef7ef3b22d4" translate="yes" xml:space="preserve">
          <source>It might be more Pythonic to use a &lt;code&gt;try&lt;/code&gt;...&lt;code&gt;except&lt;/code&gt; block. That way, if you have a class which quacks like a list, or quacks like a dict, it will behave properly regardless of what its type &lt;em&gt;really&lt;/em&gt; is.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ブロック&lt;/font&gt; &lt;code&gt;except&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;て&lt;/font&gt;&lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ... &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用する方がPythonicかもしれません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。そうすれば、リストのようにいじくるクラスや、dictのようにいじくるクラスがある場合、そのタイプが&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に何であるかに関係なく、正しく動作します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d2d97941e34d9df98c697679e1de526e50b8057c" translate="yes" xml:space="preserve">
          <source>Many other ABCs are defined there, &lt;code&gt;Mapping&lt;/code&gt; for objects that can be used as maps, &lt;code&gt;Iterable&lt;/code&gt;, &lt;code&gt;Callable&lt;/code&gt;, et cetera. A full list of all these can be seen in &lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections-abstract-base-classes&quot;&gt;the documentation for &lt;code&gt;collections.abc&lt;/code&gt;.&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他の多くのいろはは、そこに定義されている&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Mapping&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;マップとして使用することができるオブジェクトのための&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Iterable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Callable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エトセトラ。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらすべての完全なリストは&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections-abstract-base-classes&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/a&gt; &lt;code&gt;collections.abc&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;のドキュメントで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;確認できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e08a98e1c024a197c7ef372c95442a40cddc528" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;type()&lt;/code&gt; will only return the immediate type of the object, but won&amp;rsquo;t be able to tell you about type inheritance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それに注意してください&lt;/font&gt;&lt;/font&gt; &lt;code&gt;type()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のみオブジェクトの即時型を返しますが、タイプの継承をご紹介することはできません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="be3c05e6efb5260c557b1208dfb993040e113c19" translate="yes" xml:space="preserve">
          <source>On instances of object you also have the:</source>
          <target state="translated">オブジェクトのインスタンスにも</target>
        </trans-unit>
        <trans-unit id="8df44ee7f528ec0832f99bdcb087e6f24587092d" translate="yes" xml:space="preserve">
          <source>Or Just Don't explicitly Type-check</source>
          <target state="translated">または明示的にタイプチェックをしない</target>
        </trans-unit>
        <trans-unit id="0c5d1549b38af536eaa0fa42a87f338df1704033" translate="yes" xml:space="preserve">
          <source>Or, perhaps best of all, use duck-typing, and don't explicitly type-check your code. Duck-typing supports Liskov Substitution with more elegance and less verbosity.</source>
          <target state="translated">あるいは、おそらく最も良いのはダックタイピングを使用して、コードを明示的にタイプチェックしないことです。ダックタイピングは、よりエレガントで冗長性の少ないLiskov Substitutionをサポートしています。</target>
        </trans-unit>
        <trans-unit id="e39e0515e3aa18a16a1984dcda968b0e883d3a29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__class__&lt;/code&gt; approach is the most close to correctness, but it won't work in one crucial case: when the passed-in object is an old-style &lt;em&gt;class&lt;/em&gt; (not an instance!), since those objects lack such attribute.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;__class__&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アプローチは正確に最も近いですが、それは1重要なケースでは動作しません：とき渡されたオブジェクトである古いスタイルの&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（インスタンスではなく！）、これらのオブジェクトは、そのような属性が欠けているからです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71521a9011f506362375459364bc67735dd42191" translate="yes" xml:space="preserve">
          <source>The main issue with the &lt;code&gt;type()&lt;/code&gt; approach is that &lt;strong&gt;it doesn't work properly with old-style instances&lt;/strong&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;type()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アプローチ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の主な問題は、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;古いスタイルのインスタンスでは適切に機能しないこと&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87780ee2cd54f044ff0dc3d21182e2480c5b0d4c" translate="yes" xml:space="preserve">
          <source>The other problem with the &lt;code&gt;type(A) is type(B)&lt;/code&gt; checking is that if &lt;code&gt;A&lt;/code&gt; is a subclass of &lt;code&gt;B&lt;/code&gt;, it evaluates to &lt;code&gt;false&lt;/code&gt; when, programmatically, you would hope it would be &lt;code&gt;true&lt;/code&gt;. If an object is a subclass of a list, it should work like a list: checking the type as presented in the other answer will prevent this. (&lt;code&gt;isinstance&lt;/code&gt; will work, however).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;type(A) is type(B)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のもう1つの問題は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;type（B）の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チェックです&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;B&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;サブクラスである&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合、プログラムで&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;になることを期待すると&lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と評価され&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトがリストのサブクラスである場合、それはリストのように機能するはずです。他の回答で提示されているようにタイプをチェックすると、これを防ぐことができます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isinstance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は機能します）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e72317d05300276a18a32cf9e56a1d328f1b6085" translate="yes" xml:space="preserve">
          <source>The second parameter of &lt;code&gt;isinstance()&lt;/code&gt; also accepts a tuple of types, so it&amp;rsquo;s possible to check for multiple types at once. &lt;code&gt;isinstance&lt;/code&gt; will then return true, if the object is of any of those types:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の2番目のパラメーター&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も型のタプルを受け入れるため、一度に複数の型をチェックすることができます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトがこれらのタイプのいずれかである場合、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isinstance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はtrueを返します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="831baf5980325485132a0ffbf74c0b24c9c7be39" translate="yes" xml:space="preserve">
          <source>There are two built-in functions that help you identify the type of an object. You can use &lt;a href=&quot;http://docs.python.org/3/library/functions.html#type&quot;&gt;&lt;code&gt;type()&lt;/code&gt;&lt;/a&gt;  if you need the exact type of an object, and &lt;a href=&quot;http://docs.python.org/3/library/functions.html#isinstance&quot;&gt;&lt;code&gt;isinstance()&lt;/code&gt;&lt;/a&gt; to &lt;em&gt;check&lt;/em&gt; an object&amp;rsquo;s type against something. Usually, you want to use &lt;code&gt;isistance()&lt;/code&gt; most of the times since it is very robust and also supports type inheritance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトのタイプの識別に役立つ2つの組み込み関数があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたは使用することができます&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/3/library/functions.html#type&quot;&gt; &lt;code&gt;type()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 使用すると、正確なオブジェクトの種類、および必要な場合&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/3/library/functions.html#isinstance&quot;&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するために&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チェックし&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、何かに対して、オブジェクトの型を。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isistance()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は非常に堅牢であり、型の継承もサポートし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ているため、通常は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;isistance（）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="674df0a4437c57c29164784d980ef03d5544beb7" translate="yes" xml:space="preserve">
          <source>This covers the case where your user might be doing something clever or sensible by subclassing &lt;code&gt;str&lt;/code&gt; - according to the principle of Liskov Substitution, you want to be able to use subclass instances without breaking your code - and &lt;code&gt;isinstance&lt;/code&gt; supports this.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、ユーザーが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をサブクラス化することによって賢明または賢明な何かをしている場合をカバーします&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-Liskov Substitutionの原則に従って、コードを壊すことなくサブクラスインスタンスを使用できるようにしたい-そして&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isinstance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はこれをサポートします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f7bae0994943e4e77d13121fb155b9345e85630" translate="yes" xml:space="preserve">
          <source>This is the smallest snippet of code I could think of that satisfies such legitimate question in a consistent fashion:</source>
          <target state="translated">これは、そのような正当な疑問を一貫した方法で満たす、私が考えられる最小のコードのスニペットです。</target>
        </trans-unit>
        <trans-unit id="ea3c4909ce583e84916c0ef1a4ef609c71d1a0f7" translate="yes" xml:space="preserve">
          <source>This of course also works for custom types:</source>
          <target state="translated">もちろん、これはカスタムタイプにも有効です。</target>
        </trans-unit>
        <trans-unit id="f504db2e5eebcc9bb536e2ba6962a31a35efe5d3" translate="yes" xml:space="preserve">
          <source>To clarify, the preferred method of &quot;telling the difference&quot; between variable types is with something called &lt;a href=&quot;http://en.wikipedia.org/wiki/Duck_typing&quot;&gt;duck typing&lt;/a&gt;: as long as the methods (and return types) that a variable responds to are what your subroutine expects, treat it like what you expect it to be. For example, if you have a class that overloads the bracket operators with &lt;code&gt;getattr&lt;/code&gt; and &lt;code&gt;setattr&lt;/code&gt;, but uses some funny internal scheme, it would be appropriate for it to behave as a dictionary if that's what it's trying to emulate.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;明確にするために、変数タイプ間の「違いを伝える」ための推奨される方法は、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Duck_typing&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ダックタイピング&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれるもの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用することです。変数が応答するメソッド（および戻り値のタイプ）がサブルーチンが期待するものである限り、それを期待どおりに扱いますすることが。たとえば、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;getattr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;setattr&lt;/code&gt; で角&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;括弧演算子をオーバーロードするクラスがあり、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;面白い内部スキームを使用している場合、それがエミュレートしようとしているものである場合、辞書として動作することが適切です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92cc9d4a3f5b628526daf6ac5609af46ddacc695" translate="yes" xml:space="preserve">
          <source>To cover that, you should use the &lt;a href=&quot;http://docs.python.org/3/library/functions.html#isinstance&quot;&gt;&lt;code&gt;isinstance&lt;/code&gt;&lt;/a&gt; function. This of course also works for built-in types:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これをカバーするには、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/3/library/functions.html#isinstance&quot;&gt; &lt;code&gt;isinstance&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もちろん、これは組み込み型でも機能します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="289ed269499d2bb8d481031560fbe78cfe2aec85" translate="yes" xml:space="preserve">
          <source>To get around this and use &lt;code&gt;type()&lt;/code&gt; more cautiously:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを回避して&lt;/font&gt;&lt;/font&gt; &lt;code&gt;type()&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;より慎重に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用するには&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3cfab689cd817cdcf880170f4ec269a3389913c3" translate="yes" xml:space="preserve">
          <source>To get the actual type of an object, you use the built-in &lt;a href=&quot;http://docs.python.org/3/library/functions.html#type&quot;&gt;&lt;code&gt;type()&lt;/code&gt;&lt;/a&gt; function. Passing an object as the only parameter will return the type object of that object:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトの実際のタイプを取得するには、組み込みの&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/3/library/functions.html#type&quot;&gt; &lt;code&gt;type()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトを唯一のパラメーターとして渡すと、そのオブジェクトのタイプオブジェクトが返されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d261846deff5a00b330dc3973418d9026d25ade" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;isinstance&lt;/code&gt; to explicitly check for actual subclasses or registered abstractions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;isinstance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、実際のサブクラスまたは登録された抽象化を明示的にチェックします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d0e28f3570b79be3d9e573f6c6d6bd1b61043522" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;type&lt;/code&gt; to actually get an instance's class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;type&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して、実際にインスタンスのクラスを取得します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="104bf6e1dba49ccca7fb1e658907b7496eab986a" translate="yes" xml:space="preserve">
          <source>Use Abstractions</source>
          <target state="translated">抽象形を使う</target>
        </trans-unit>
        <trans-unit id="b7e543091ca249cbc65232b0e80d27a2f0e1f485" translate="yes" xml:space="preserve">
          <source>Well that's a different question, don't use type - use &lt;code&gt;isinstance&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それは別の質問です&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isinstance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は使用しないでください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-isinstanceを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d3f7abaeab626e06eb7395745f233815fbb5bc3c" translate="yes" xml:space="preserve">
          <source>Which, I argue, is not what most people would expect.</source>
          <target state="translated">ほとんどの人が期待していることではないと私は主張しています。</target>
        </trans-unit>
        <trans-unit id="eae2fd53983cba61dff80fb3112fc93a20144907" translate="yes" xml:space="preserve">
          <source>While the questions is pretty old, I stumbled across this while finding out a proper way myself, and I think it still needs clarifying, &lt;strong&gt;at least for Python 2.x&lt;/strong&gt; (did not check on Python 3, but since the issue arises with classic classes which are gone on such version, it probably doesn't matter).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;質問はかなり古いですが、自分自身で適切な方法を見つけている間私はこれに偶然出会い&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ました。少なくともPython 2.xについては&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、まだ明確にする必要があると思います&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（Python 3ではチェックしませんでしたが、問題はクラシッククラスで発生するためです）そのようなバージョンではなくなっていますが、それはおそらく問題ではありません）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7e5a84e91bf6c6a042a37e8498c1874bf11beced" translate="yes" xml:space="preserve">
          <source>You can do that using &lt;code&gt;type()&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;type()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用してそれを行うことができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ae370ce9702f04f697bbdf2509d2c7e772e137c7" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;type()&lt;/code&gt; or &lt;code&gt;isinstance()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;type()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isinstance()&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="a04e92b1136640dd92f620605c450f1da7cfd314" translate="yes" xml:space="preserve">
          <source>and using it for comparison,</source>
          <target state="translated">と比較するために使用しています。</target>
        </trans-unit>
        <trans-unit id="7c46dbc0da243d7c5bf1496222f4895f757feff4" translate="yes" xml:space="preserve">
          <source>attribute. Here is a sample taken from Python 3.3 console</source>
          <target state="translated">属性を使用しています。以下は、Python 3.3 のコンソールから取得したサンプルです。</target>
        </trans-unit>
        <trans-unit id="2c17c6d48d08734791bdf45f45d3cf03678515a9" translate="yes" xml:space="preserve">
          <source>be careful using isinstance</source>
          <target state="translated">アイインスタンスの使用には注意が必要</target>
        </trans-unit>
        <trans-unit id="ffe09d7dc25fe96ae95f34517e51f4a28b1464d1" translate="yes" xml:space="preserve">
          <source>both return &lt;code&gt;True&lt;/code&gt;. Both booleans are an instance of an integer. &lt;code&gt;type()&lt;/code&gt;, however, is more clever:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どちらも&lt;/font&gt;&lt;/font&gt; &lt;code&gt;True&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;両方のブール値は整数のインスタンスです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;type()&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方が賢いです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="caeae5a53ccc343de1abff64a9f963cc8a88b675" translate="yes" xml:space="preserve">
          <source>but type</source>
          <target state="translated">が、タイプ</target>
        </trans-unit>
        <trans-unit id="49ecfb36d14f802e87c08b35b18cda1d7a8b502a" translate="yes" xml:space="preserve">
          <source>if you're strictly interested in objects that allow getting, setting &lt;em&gt;and&lt;/em&gt; deleting items (i.e &lt;em&gt;mutable&lt;/em&gt; sequences), you'd opt for &lt;code&gt;collections.abc.MutableSequence&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アイテムの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;取得、設定&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;削除&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を許可するオブジェクト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（つまり、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可変&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;シーケンス）に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;厳密に関心がある&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;collections.abc.MutableSequence&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;選択し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0168728f2c871171335a62b4b97b115fe1f3c777" translate="yes" xml:space="preserve">
          <source>returns &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;False&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="96d4a1de8fb1d33352d77e488577266fa66dd8f5" translate="yes" xml:space="preserve">
          <source>type checking</source>
          <target state="translated">型検査</target>
        </trans-unit>
        <trans-unit id="2c535757e882913c48616efc33868ac033b84614" translate="yes" xml:space="preserve">
          <source>you could, if you're only interested in seeing if the object you have allows getting items, use &lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections.abc.Sequence&quot;&gt;&lt;code&gt;collections.abc.Sequence&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有しているオブジェクトがアイテムの取得を許可しているかどうかを確認するだけの場合は、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections.abc.Sequence&quot;&gt; &lt;code&gt;collections.abc.Sequence&lt;/code&gt; を&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
