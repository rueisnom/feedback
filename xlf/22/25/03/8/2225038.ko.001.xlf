<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/2225038">
    <body>
      <group id="2225038">
        <trans-unit id="67d4788f96eb7407b4334a5daf1a28d0212f9175" translate="yes" xml:space="preserve">
          <source>...fails.</source>
          <target state="translated">...fails.</target>
        </trans-unit>
        <trans-unit id="c53d367d54660076298546d923e8323508deb21c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; and &lt;code&gt;False&lt;/code&gt; are just keywords that mean &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; in python. Thus,</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;False&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 의미하는 키워드입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러므로,&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc56a421fcb0855ac2882106201eba272ada55a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isinstance()&lt;/code&gt; is usually the preferred way to ensure the type of an object because it will also accept derived types. So unless you actually need the type object (for whatever reason), using &lt;code&gt;isinstance()&lt;/code&gt; is preferred over &lt;code&gt;type()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;isinstance()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 일반적으로 파생 된 유형을 허용하므로 객체의 유형을 확인하는 데 선호되는 방법입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 실제로 어떤 이유로 든 유형 객체가 필요하지 않으면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용하는 것이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;type()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 보다 선호 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="07e4350bbab17bc13330a6c2a291bfe7849e826d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type()&lt;/code&gt; is a better solution than &lt;code&gt;isinstance()&lt;/code&gt;, particularly for &lt;code&gt;booleans&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;type()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;특히 &lt;/font&gt; &lt;code&gt;booleans&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 보다 나은 솔루션입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="47d2240422b66c9d7a756e2046f6837b4e5b34a8" translate="yes" xml:space="preserve">
          <source>Above we see that &lt;code&gt;dict&lt;/code&gt; gets reassigned to a string, therefore the test:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위에서 우리는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;dict&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 문자열에 다시 할당되는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것을 보았습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9839782682a82233200e67ef57fe2b9188b7b686" translate="yes" xml:space="preserve">
          <source>Additionaly we can use &lt;a href=&quot;https://docs.python.org/library/collections.abc.html&quot;&gt;abstract classes&lt;/a&gt; to cover several types at once:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/library/collections.abc.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추상 클래스&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 여러 유형을 한 번에 다룰 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="62bb9a0357eec84dd4c2a879192b695c294b4d87" translate="yes" xml:space="preserve">
          <source>Although it works, avoid double underscore attributes like &lt;code&gt;__class__&lt;/code&gt; - they're not semantically public, and, while perhaps not in this case, the builtin functions usually have better behavior.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작동하지만 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__class__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 같은 이중 밑줄 속성은 피하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의미 적으로 공개적이지 않으며,이 경우에는 내장 함수가 일반적으로 더 나은 동작을합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a1d9ec321a863f55f5e17e13e046e3c3e8e96454" translate="yes" xml:space="preserve">
          <source>And just avoid type-checking where it makes sense.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 적절한 곳에서 유형 검사를 피하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87b3f324d0bd92384523ad0bd4c24d13bc9cf018" translate="yes" xml:space="preserve">
          <source>As an aside to the previous answers, it's worth mentioning the existence of &lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html&quot;&gt;&lt;code&gt;collections.abc&lt;/code&gt;&lt;/a&gt; which contains several abstract base classes (ABCs) that complement duck-typing.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이전 답변 외에, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오리 타이핑을 보완하는 몇 가지 추상 기본 클래스 (ABC)를 포함 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html&quot;&gt; &lt;code&gt;collections.abc&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 존재를 언급 할 가치가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1b1e90eed4747552a24402c2ebbab8d46b45ad84" translate="yes" xml:space="preserve">
          <source>Be warned that you can clobber &lt;code&gt;list&lt;/code&gt; or any other type by assigning a variable in the current scope of the same name.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동일한 이름의 현재 범위에서 변수를 지정하여 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 다른 유형을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클로버 할 수 있음에주의하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f86073a82abdacebf0f720d74b4533890451049e" translate="yes" xml:space="preserve">
          <source>Beware that in python 3.x and in New-Style classes (aviable optionally from Python 2.6) class and type have been merged and this can sometime lead to unexpected results. Mainly for this reason my favorite way of testing types/classes is to the &lt;a href=&quot;http://docs.python.org/3.3/library/functions.html#isinstance&quot;&gt;isinstance&lt;/a&gt; built in function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;python 3.x 및 New-Style 클래스 (Python 2.6에서 선택적으로 사용 가능)에서 클래스와 유형이 병합되었으므로 예기치 않은 결과가 발생할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주로 이런 이유로 종류 / 클래스를 테스트 나의 마음에 드는 방법은이다 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/3.3/library/functions.html#isinstance&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;isinstance&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 기능이 내장되어 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e39262defe80a83fac1b793497417432c8b1a879" translate="yes" xml:space="preserve">
          <source>Conclusion</source>
          <target state="translated">Conclusion</target>
        </trans-unit>
        <trans-unit id="6ca03fd9e3561e4e2633b913936b90371744bd90" translate="yes" xml:space="preserve">
          <source>Determine the type of a Python object</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬 객체의 타입 결정&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="50883d283bd6baec62633f0050fd5d0ddca95f36" translate="yes" xml:space="preserve">
          <source>Determine the type of an object</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체의 유형 결정&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c6d00461327245931dcf1eefc77470e84bac3465" translate="yes" xml:space="preserve">
          <source>Determine the type of an object with &lt;code&gt;type&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;와 객체의 유형 결정 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ced96a470cbaf016109ed72d47595026fa384c98" translate="yes" xml:space="preserve">
          <source>Even better, you might look for a specific Abstract Base Class from &lt;code&gt;collections&lt;/code&gt; or &lt;code&gt;numbers&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 좋은 점은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;collections&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이나 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;numbers&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 특정 추상 기본 클래스를 찾을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수 있습니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f637cf08ee18cab84827710927093acf5029d311" translate="yes" xml:space="preserve">
          <source>Executing this snippet would yield:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 스 니펫을 실행하면 다음이 생성됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8bfeb539f9136bb8f9cd0ad749cd6858a60574de" translate="yes" xml:space="preserve">
          <source>For example, instead of explicitly checking if something is a list with:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어, 다음과 같은 목록이 있는지 명시 적으로 확인하는 대신 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="624e6009185860ccc39ce9164d746730b8705833" translate="yes" xml:space="preserve">
          <source>Here I'm trying to answer the title's question: &lt;strong&gt;how can I determine the type of an arbitrary object&lt;/strong&gt;? Other suggestions about using or not using isinstance are fine in many comments and answers, but I'm not addressing those concerns.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 제목의 질문에 대답하려고합니다 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 임의의 객체 유형을 어떻게 결정할 수&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있습니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;isinstance를 사용하거나 사용하지 않는 것에 대한 다른 제안은 많은 의견과 답변에서 훌륭하지만 이러한 문제는 다루지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6be05264bd00c7c4a30b627448593e7db93d92ef" translate="yes" xml:space="preserve">
          <source>Here is a small example of how it works:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작동 방식의 작은 예는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0b9fa4b0b61fa752ccfdc87d5092d007934b6132" translate="yes" xml:space="preserve">
          <source>In general you can extract a string from object with the class name,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적으로 클래스 이름을 가진 객체에서 문자열을 추출 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4f00239a522fa07fb5e3e5471fd67de19963b902" translate="yes" xml:space="preserve">
          <source>In many practical cases instead of using &lt;code&gt;type&lt;/code&gt; or &lt;code&gt;isinstance&lt;/code&gt; you can also use &lt;a href=&quot;https://docs.python.org/library/functools.html#functools.singledispatch&quot;&gt;&lt;code&gt;@functools.singledispatch&lt;/code&gt;&lt;/a&gt;, which is used to define &lt;a href=&quot;https://docs.python.org/glossary.html#term-generic-function&quot;&gt;generic functions&lt;/a&gt; (&lt;em&gt;function composed of multiple functions implementing the same operation for different types&lt;/em&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;많은 실제 경우에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;type&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isinstance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하는 대신 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/library/functools.html#functools.singledispatch&quot;&gt; &lt;code&gt;@functools.singledispatch&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용하여 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/glossary.html#term-generic-function&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반 함수&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여러 유형에 대해 동일한 작업을 구현하는 여러 함수로 구성된 &lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수)&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 정의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8ba28dc19213053589b4d8c76c574589f266490b" translate="yes" xml:space="preserve">
          <source>In other words, you would want to use it when you have a code like the following:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, 다음과 같은 코드가있을 때이를 사용하려고합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="145439453e6cf362fc9d307e9b877219453bca2b" translate="yes" xml:space="preserve">
          <source>Is there a simple way to determine if a variable is a list, dictionary, or something else? I am getting an object back that may be either type and I need to be able to tell the difference.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수가 목록, 사전 또는 다른 항목인지 확인하는 간단한 방법이 있습니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유형이 될 수있는 객체를 다시 가져오고 차이를 말할 수 있어야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6daeb75e4dbac4fae4d2daed51ae7ef7ef3b22d4" translate="yes" xml:space="preserve">
          <source>It might be more Pythonic to use a &lt;code&gt;try&lt;/code&gt;...&lt;code&gt;except&lt;/code&gt; block. That way, if you have a class which quacks like a list, or quacks like a dict, it will behave properly regardless of what its type &lt;em&gt;really&lt;/em&gt; is.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ... &lt;/font&gt;&lt;/font&gt; &lt;code&gt;except&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 블록 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 사용하는 것이 더 Pythonic 일 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이렇게하면 목록과 같은 쿼크 클래스 또는 dict와 같은 쿼크 클래스가 있으면 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유형 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 무엇이든 관계없이 올바르게 작동합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d2d97941e34d9df98c697679e1de526e50b8057c" translate="yes" xml:space="preserve">
          <source>Many other ABCs are defined there, &lt;code&gt;Mapping&lt;/code&gt; for objects that can be used as maps, &lt;code&gt;Iterable&lt;/code&gt;, &lt;code&gt;Callable&lt;/code&gt;, et cetera. A full list of all these can be seen in &lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections-abstract-base-classes&quot;&gt;the documentation for &lt;code&gt;collections.abc&lt;/code&gt;.&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 많은 상식이있다 정의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Mapping&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 맵으로 사용할 수 있습니다 객체 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Iterable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Callable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 등등. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이들의 전체 목록은 &lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections-abstract-base-classes&quot;&gt; &lt;code&gt;collections.abc&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 문서&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 확인할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e08a98e1c024a197c7ef372c95442a40cddc528" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;type()&lt;/code&gt; will only return the immediate type of the object, but won&amp;rsquo;t be able to tell you about type inheritance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그 주 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;type()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에만 개체의 즉각적인 유형을 반환하지만 형의 상속에 대해 얘기 할 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="be3c05e6efb5260c557b1208dfb993040e113c19" translate="yes" xml:space="preserve">
          <source>On instances of object you also have the:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체의 인스턴스에는 다음이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8df44ee7f528ec0832f99bdcb087e6f24587092d" translate="yes" xml:space="preserve">
          <source>Or Just Don't explicitly Type-check</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 명시 적으로 유형 검사하지 마십시오&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0c5d1549b38af536eaa0fa42a87f338df1704033" translate="yes" xml:space="preserve">
          <source>Or, perhaps best of all, use duck-typing, and don't explicitly type-check your code. Duck-typing supports Liskov Substitution with more elegance and less verbosity.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 아마도 무엇보다도 오리 타이핑을 사용하고 코드를 명시 적으로 유형 검사하지 마십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오리 타이핑은 Liskov 대체를 더 우아하고 덜 장황하게 지원합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e39e0515e3aa18a16a1984dcda968b0e883d3a29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__class__&lt;/code&gt; approach is the most close to correctness, but it won't work in one crucial case: when the passed-in object is an old-style &lt;em&gt;class&lt;/em&gt; (not an instance!), since those objects lack such attribute.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;__class__&lt;/code&gt; 의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 접근 방식은 정확성에 가장 가까운,하지만 하나의 중요한 경우에는 작동하지 않습니다 때 전달 된 오브젝트이다 옛날 스타일의 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (안 인스턴스!), 그 객체는 속성이 부족하기 때문이다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71521a9011f506362375459364bc67735dd42191" translate="yes" xml:space="preserve">
          <source>The main issue with the &lt;code&gt;type()&lt;/code&gt; approach is that &lt;strong&gt;it doesn't work properly with old-style instances&lt;/strong&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;type()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 접근 방식 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 주요 문제 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이전 스타일 인스턴스에서 제대로 작동하지 않는다는 것입니다&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87780ee2cd54f044ff0dc3d21182e2480c5b0d4c" translate="yes" xml:space="preserve">
          <source>The other problem with the &lt;code&gt;type(A) is type(B)&lt;/code&gt; checking is that if &lt;code&gt;A&lt;/code&gt; is a subclass of &lt;code&gt;B&lt;/code&gt;, it evaluates to &lt;code&gt;false&lt;/code&gt; when, programmatically, you would hope it would be &lt;code&gt;true&lt;/code&gt;. If an object is a subclass of a list, it should work like a list: checking the type as presented in the other answer will prevent this. (&lt;code&gt;isinstance&lt;/code&gt; will work, however).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;type(A) is type(B)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 또 다른 문제점 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 type (B)&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 점검입니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;B&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 서브 클래스 인 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우 프로그래밍 방식으로 &lt;/font&gt; &lt;code&gt;true&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 기대하면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; 로&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 평가됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체가리스트의 서브 클래스 인 경우,리스트처럼 작동해야합니다. 다른 답변에 제시된 유형을 확인하면이를 방지 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;( &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &lt;/font&gt; &lt;code&gt;isinstance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 작동합니다).&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e72317d05300276a18a32cf9e56a1d328f1b6085" translate="yes" xml:space="preserve">
          <source>The second parameter of &lt;code&gt;isinstance()&lt;/code&gt; also accepts a tuple of types, so it&amp;rsquo;s possible to check for multiple types at once. &lt;code&gt;isinstance&lt;/code&gt; will then return true, if the object is of any of those types:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 두 번째 매개 변수는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유형의 튜플도 허용하므로 여러 유형을 한 번에 확인할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체가 다음 유형 중 하나 인 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isinstance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 true를 반환합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="831baf5980325485132a0ffbf74c0b24c9c7be39" translate="yes" xml:space="preserve">
          <source>There are two built-in functions that help you identify the type of an object. You can use &lt;a href=&quot;http://docs.python.org/3/library/functions.html#type&quot;&gt;&lt;code&gt;type()&lt;/code&gt;&lt;/a&gt;  if you need the exact type of an object, and &lt;a href=&quot;http://docs.python.org/3/library/functions.html#isinstance&quot;&gt;&lt;code&gt;isinstance()&lt;/code&gt;&lt;/a&gt; to &lt;em&gt;check&lt;/em&gt; an object&amp;rsquo;s type against something. Usually, you want to use &lt;code&gt;isistance()&lt;/code&gt; most of the times since it is very robust and also supports type inheritance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체 유형을 식별하는 데 도움이되는 내장 함수가 두 개 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체의 정확한 유형이 필요한 경우 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/3/library/functions.html#type&quot;&gt; &lt;code&gt;type()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고 객체의 유형과 객체의 유형 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;확인&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하기 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위해 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/3/library/functions.html#isinstance&quot;&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적으로 &lt;/font&gt; &lt;code&gt;isistance()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 매우 강력하며 형식 상속도 지원하므로 대부분의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;isistance ()&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하려고&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 합니다.&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="674df0a4437c57c29164784d980ef03d5544beb7" translate="yes" xml:space="preserve">
          <source>This covers the case where your user might be doing something clever or sensible by subclassing &lt;code&gt;str&lt;/code&gt; - according to the principle of Liskov Substitution, you want to be able to use subclass instances without breaking your code - and &lt;code&gt;isinstance&lt;/code&gt; supports this.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 커버 사용자가 서브 클래스에 의해 영리 또는 재치있는 무언가 일을 할 수있는 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - Liskov 대체의 원칙에 따라, 당신은 당신의 코드를 한방울 흘리지 않고 사용 서브 클래스 인스턴스 수 있어야합니다 - 그리고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isinstance&lt;/code&gt; 은&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이를 지원합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f7bae0994943e4e77d13121fb155b9345e85630" translate="yes" xml:space="preserve">
          <source>This is the smallest snippet of code I could think of that satisfies such legitimate question in a consistent fashion:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 내가 생각할 수있는 가장 작은 코드 스 니펫으로 일관성있는 질문을 일관된 방식으로 충족시킵니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea3c4909ce583e84916c0ef1a4ef609c71d1a0f7" translate="yes" xml:space="preserve">
          <source>This of course also works for custom types:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 물론 사용자 정의 유형에도 적용됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f504db2e5eebcc9bb536e2ba6962a31a35efe5d3" translate="yes" xml:space="preserve">
          <source>To clarify, the preferred method of &quot;telling the difference&quot; between variable types is with something called &lt;a href=&quot;http://en.wikipedia.org/wiki/Duck_typing&quot;&gt;duck typing&lt;/a&gt;: as long as the methods (and return types) that a variable responds to are what your subroutine expects, treat it like what you expect it to be. For example, if you have a class that overloads the bracket operators with &lt;code&gt;getattr&lt;/code&gt; and &lt;code&gt;setattr&lt;/code&gt;, but uses some funny internal scheme, it would be appropriate for it to behave as a dictionary if that's what it's trying to emulate.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;명확히하기 위해, 변수 유형 사이의 &quot;차이점을 구별하는&quot;선호되는 방법은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Duck_typing&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;덕 타이핑&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이라는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것입니다. 되려고. 예를 들어, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;getattr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;setattr&lt;/code&gt; 으로&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대괄호 연산자를 오버로드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지만 재미있는 내부 구성표를 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 클래스가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있으면 에뮬레이션하려는 경우 사전으로 작동하는 것이 적절합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92cc9d4a3f5b628526daf6ac5609af46ddacc695" translate="yes" xml:space="preserve">
          <source>To cover that, you should use the &lt;a href=&quot;http://docs.python.org/3/library/functions.html#isinstance&quot;&gt;&lt;code&gt;isinstance&lt;/code&gt;&lt;/a&gt; function. This of course also works for built-in types:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이를 다루려면 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/3/library/functions.html#isinstance&quot;&gt; &lt;code&gt;isinstance&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 물론 내장 유형에도 적용됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="289ed269499d2bb8d481031560fbe78cfe2aec85" translate="yes" xml:space="preserve">
          <source>To get around this and use &lt;code&gt;type()&lt;/code&gt; more cautiously:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 문제를 해결하고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 신중하게 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;type()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하려면&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3cfab689cd817cdcf880170f4ec269a3389913c3" translate="yes" xml:space="preserve">
          <source>To get the actual type of an object, you use the built-in &lt;a href=&quot;http://docs.python.org/3/library/functions.html#type&quot;&gt;&lt;code&gt;type()&lt;/code&gt;&lt;/a&gt; function. Passing an object as the only parameter will return the type object of that object:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체의 실제 유형을 얻으려면 내장 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/3/library/functions.html#type&quot;&gt; &lt;code&gt;type()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수를 사용하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체를 유일한 매개 변수로 전달하면 해당 객체의 유형 객체가 반환됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d261846deff5a00b330dc3973418d9026d25ade" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;isinstance&lt;/code&gt; to explicitly check for actual subclasses or registered abstractions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;isinstance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 실제 서브 클래스 또는 등록 된 추상화를 명시 적으로 확인하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d0e28f3570b79be3d9e573f6c6d6bd1b61043522" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;type&lt;/code&gt; to actually get an instance's class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로 인스턴스의 클래스를 얻으려면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;type&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="104bf6e1dba49ccca7fb1e658907b7496eab986a" translate="yes" xml:space="preserve">
          <source>Use Abstractions</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추상화 사용&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b7e543091ca249cbc65232b0e80d27a2f0e1f485" translate="yes" xml:space="preserve">
          <source>Well that's a different question, don't use type - use &lt;code&gt;isinstance&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;글쎄, 그것은 다른 질문입니다, type을 사용하지 마십시오 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isinstance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d3f7abaeab626e06eb7395745f233815fbb5bc3c" translate="yes" xml:space="preserve">
          <source>Which, I argue, is not what most people would expect.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 대부분의 사람들이 기대하는 것이 아니라고 주장한다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eae2fd53983cba61dff80fb3112fc93a20144907" translate="yes" xml:space="preserve">
          <source>While the questions is pretty old, I stumbled across this while finding out a proper way myself, and I think it still needs clarifying, &lt;strong&gt;at least for Python 2.x&lt;/strong&gt; (did not check on Python 3, but since the issue arises with classic classes which are gone on such version, it probably doesn't matter).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;질문이 꽤 오래되었지만 적절한 방법을 찾아 내면서이 문제를 우연히 발견 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;했으며 적어도 Python 2.x&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (Python 3에서는 확인하지 않았지만 고전적인 클래스에서 문제가 발생했기 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;때문에 여전히 명확해야 함) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 버전에서 사라지면 아마 중요하지 않을 것입니다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7e5a84e91bf6c6a042a37e8498c1874bf11beced" translate="yes" xml:space="preserve">
          <source>You can do that using &lt;code&gt;type()&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;type()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 사용하여 수행 할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ae370ce9702f04f697bbdf2509d2c7e772e137c7" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;type()&lt;/code&gt; or &lt;code&gt;isinstance()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;type()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="a04e92b1136640dd92f620605c450f1da7cfd314" translate="yes" xml:space="preserve">
          <source>and using it for comparison,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비교를 위해 사용합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c46dbc0da243d7c5bf1496222f4895f757feff4" translate="yes" xml:space="preserve">
          <source>attribute. Here is a sample taken from Python 3.3 console</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;속성. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 Python 3.3 콘솔에서 가져온 샘플입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c17c6d48d08734791bdf45f45d3cf03678515a9" translate="yes" xml:space="preserve">
          <source>be careful using isinstance</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;isinstance 사용에주의&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ffe09d7dc25fe96ae95f34517e51f4a28b1464d1" translate="yes" xml:space="preserve">
          <source>both return &lt;code&gt;True&lt;/code&gt;. Both booleans are an instance of an integer. &lt;code&gt;type()&lt;/code&gt;, however, is more clever:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;둘 다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;True&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 반환 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 부울은 정수의 인스턴스입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;type()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 더 영리합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="caeae5a53ccc343de1abff64a9f963cc8a88b675" translate="yes" xml:space="preserve">
          <source>but type</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 유형&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49ecfb36d14f802e87c08b35b18cda1d7a8b502a" translate="yes" xml:space="preserve">
          <source>if you're strictly interested in objects that allow getting, setting &lt;em&gt;and&lt;/em&gt; deleting items (i.e &lt;em&gt;mutable&lt;/em&gt; sequences), you'd opt for &lt;code&gt;collections.abc.MutableSequence&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;항목을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가져오고 설정 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 삭제할 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수있는 객체 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(예 : &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가변&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 시퀀스)에 관심이있는 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;collections.abc.MutableSequence&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 선택합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0168728f2c871171335a62b4b97b115fe1f3c777" translate="yes" xml:space="preserve">
          <source>returns &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;False&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 돌려줍니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="96d4a1de8fb1d33352d77e488577266fa66dd8f5" translate="yes" xml:space="preserve">
          <source>type checking</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;타입 검사&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c535757e882913c48616efc33868ac033b84614" translate="yes" xml:space="preserve">
          <source>you could, if you're only interested in seeing if the object you have allows getting items, use &lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections.abc.Sequence&quot;&gt;&lt;code&gt;collections.abc.Sequence&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이 가지고있는 객체가 아이템을 얻는 것을 허용하는 것에 만 관심이 있다면 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections.abc.Sequence&quot;&gt; &lt;code&gt;collections.abc.Sequence&lt;/code&gt; 를&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용할 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
