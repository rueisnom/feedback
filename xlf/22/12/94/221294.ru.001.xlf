<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/221294">
    <body>
      <group id="221294">
        <trans-unit id="6aa007bdb22bb5e94b74694fdc58f0fb9fa1749b" translate="yes" xml:space="preserve">
          <source>&quot;2019-05-18T20:02:36.694Z&quot;</source>
          <target state="translated">&quot;2019-05-18T20:02:36.694Z&quot;</target>
        </trans-unit>
        <trans-unit id="f19b8fab11034d589c111c457e5d8aba9530a789" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://momentjs.com&quot;&gt;Moment.js&lt;/a&gt; can abstract away a lot of the pain in dealing with Javascript Dates.</source>
          <target state="translated">&lt;a href=&quot;http://momentjs.com&quot;&gt;Moment.js&lt;/a&gt; может абстрагироваться от боли при работе с датами Javascript.</target>
        </trans-unit>
        <trans-unit id="e88e64bd9bcd82799dc353f090975b50a7bd0430" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;jQuery&lt;/em&gt; provides &lt;a href=&quot;http://api.jquery.com/jQuery.now/&quot;&gt;its own method&lt;/a&gt; to get the timestamp:</source>
          <target state="translated">&lt;em&gt;jQuery&lt;/em&gt; предоставляет &lt;a href=&quot;http://api.jquery.com/jQuery.now/&quot;&gt;свой собственный метод&lt;/a&gt; для получения метки времени:</target>
        </trans-unit>
        <trans-unit id="e5333d5497d8615fd842512f502b1eeeddbbd3b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;Math.floor()&lt;/code&gt; solution:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Решение &lt;code&gt;Math.floor()&lt;/code&gt; :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c2d6e7f90c7e91a4a695f7ab018789683a70a073" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;I provide multiple solutions with descriptions in this answer. Feel free to ask questions if anything is unclear&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Я предоставляю несколько решений с описаниями в этом ответе.&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;Не стесняйтесь задавать вопросы, если что-то неясно&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc89b5a4f7a12071264966c205bfe1c2ecc8539c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Warning&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;: it &lt;strong&gt;might&lt;/strong&gt; break in 2038 and return negative numbers if you do the &lt;code&gt;|0&lt;/code&gt; magic. Use &lt;code&gt;Math.floor()&lt;/code&gt; instead by that time&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Предупреждение&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;: он &lt;strong&gt;может&lt;/strong&gt; сломаться в 2038 году и вернуть отрицательные числа, если вы используете магию &lt;code&gt;|0&lt;/code&gt; .&lt;/em&gt; &lt;em&gt;Вместо этого используйте &lt;code&gt;Math.floor()&lt;/code&gt; &lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6a0b0abb8b437a790d952d4eef8395b25abe3063" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Be warned though:&lt;/strong&gt; it will convert a 64 bit double to a 32 bit integer. This will result in information loss when dealing with huge numbers. Timestamps will break after 2038 due to 32 bit integer overflow.</source>
          <target state="translated">&lt;strong&gt;Однако будьте осторожны:&lt;/strong&gt; он преобразует 64-битное двойное в 32-битное целое число. Это приведет к потере информации при работе с огромными числами. Метки времени будут прерываться после 2038 года из-за переполнения 32-битного целого числа.</target>
        </trans-unit>
        <trans-unit id="9b873de36e161a325a8be286c3a11de5503b1396" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Date&lt;/strong&gt;, a &lt;strong&gt;native object&lt;/strong&gt; in JavaScript is the way we get all data about time.</source>
          <target state="translated">&lt;strong&gt;Date&lt;/strong&gt; , &lt;strong&gt;нативный объект&lt;/strong&gt; в JavaScript - это способ получения всех данных о времени.</target>
        </trans-unit>
        <trans-unit id="670a30ba85c2b7ec88690585d92bd52152734367" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Details:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Details:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5afb61808e2bddea3731e397261d486078f491d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For further information about &lt;code&gt;Date.now&lt;/code&gt; follow this link: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now&quot;&gt;&lt;code&gt;Date.now()&lt;/code&gt; @ MDN&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Для получения дополнительной информации о &lt;code&gt;Date.now&lt;/code&gt; перейдите по этой ссылке: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now&quot;&gt; &lt;code&gt;Date.now()&lt;/code&gt; @ MDN&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="518ceca8fa344f82fe0334000dfc4bc2756ae38a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If you do not care about the year / day of week / daylight saving time you could strip it away and use this after 2038:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Если вас не интересует год / день недели / летнее время, вы можете убрать его и использовать после 2038 года:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="605c26338eb6f4690f080c66829a8bf552cb69a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In case you are using jQuery you could use &lt;code&gt;$.now()&lt;/code&gt; as described in &lt;a href=&quot;http://api.jquery.com/jquery.now/&quot;&gt;jQuery's Docs&lt;/a&gt; which makes the polyfill obsolete since &lt;code&gt;$.now()&lt;/code&gt; internally does the same thing: &lt;code&gt;(new Date).getTime()&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;В случае, если вы используете jQuery, вы можете использовать &lt;code&gt;$.now()&lt;/code&gt; как описано в &lt;a href=&quot;http://api.jquery.com/jquery.now/&quot;&gt;Документах jQuery,&lt;/a&gt; что делает полифилл устаревшим, так &lt;code&gt;$.now()&lt;/code&gt; внутренне $ .now () делает то же самое: &lt;code&gt;(new Date).getTime()&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c9f0944a9dbda3e14e77125f2988da523bbe503" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Now a tiny explaination of what &lt;code&gt;|0&lt;/code&gt; does:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Теперь небольшое объяснение того, что делает &lt;code&gt;|0&lt;/code&gt; :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="66c23993fd78a3cd5ae09f4b1945feea05a55bec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Polyfill to get &lt;code&gt;Date.now()&lt;/code&gt; working:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Polyfill, чтобы заставить &lt;code&gt;Date.now()&lt;/code&gt; работать:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="26b7d52b8e3617b1a07c07e900127ae868aae1ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Quick and dirty solution:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Быстрое и грязное решение:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="20984d466225b7b2ae664ef83b5639e336233209" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;REF:&lt;/strong&gt;&lt;a href=&quot;http://api.jquery.com/jQuery.now/&quot;&gt;http://api.jquery.com/jQuery.now/&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;REF:&lt;/strong&gt;&lt;a href=&quot;http://api.jquery.com/jQuery.now/&quot;&gt;http://api.jquery.com/jQuery.now/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e62616db3d56c78c89d6919e48af3e10f9477c02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;So the winner JS code is &lt;code&gt;Date.now()&lt;/code&gt; and fastest browser is Safari (2x faster that chrome! ).&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Таким образом, JS-код победителя - &lt;code&gt;Date.now()&lt;/code&gt; а самый быстрый браузер - Safari (в 2 раза быстрее, чем Chrome!).&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a57dbd7991038ae80d2baeac454e9eca2841769c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Some nerdy alternative by &lt;a href=&quot;//stackoverflow.com/users/283863&quot;&gt;Derek 朕會功夫&lt;/a&gt; taken from the comments below this answer:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Некоторая занудная альтернатива &lt;a href=&quot;//stackoverflow.com/users/283863&quot;&gt;Дерека 功夫 會 功夫&lt;/a&gt; взята из комментариев ниже этого ответа:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba78f23c539600982dddbf73f7a97823f9436d3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Timestamp in Milliseconds&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Отметка времени в миллисекундах&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="609156fd1e70dee661537cb63b4e8fdbf6801da7" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;(besides it just implements &lt;code&gt;(new Date).getTime()&lt;/code&gt; expression)&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;(кроме того, он просто реализует &lt;code&gt;(new Date).getTime()&lt;/code&gt; выражение)&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1fc09bdaf91373d1bdc888e305ab082ab419b58c" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;The &lt;code&gt;Date.valueOf()&lt;/code&gt; method is functionally equivalent to &lt;code&gt;Date.getTime()&lt;/code&gt;, which makes it possible to use arithmetic operators on date object to achieve identical results. In my opinion, this approach affects readability.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;Метод &lt;code&gt;Date.valueOf()&lt;/code&gt; функционально эквивалентен &lt;code&gt;Date.getTime()&lt;/code&gt; , что позволяет использовать арифметические операторы на объекте date для достижения идентичных результатов.&lt;/sup&gt; &lt;sup&gt;На мой взгляд, такой подход влияет на читабельность.&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0ea028e92dde4444c4d8546da28876e730a304e4" translate="yes" xml:space="preserve">
          <source>A unary operator like &lt;code&gt;plus&lt;/code&gt; triggers the &lt;code&gt;valueOf&lt;/code&gt; method in the &lt;code&gt;Date&lt;/code&gt; object and it returns the timestamp (without any alteration).</source>
          <target state="translated">Унарный оператор, такой как &lt;code&gt;plus&lt;/code&gt; вызывает метод &lt;code&gt;valueOf&lt;/code&gt; в объекте &lt;code&gt;Date&lt;/code&gt; и возвращает метку времени (без каких-либо изменений).</target>
        </trans-unit>
        <trans-unit id="a4d8a2c9c91a916abdb5d9cea7ce46a446ceee48" translate="yes" xml:space="preserve">
          <source>And you can also use the &lt;code&gt;valueOf&lt;/code&gt; method which we showed above:</source>
          <target state="translated">И вы также можете использовать метод &lt;code&gt;valueOf&lt;/code&gt; , который мы показали выше:</target>
        </trans-unit>
        <trans-unit id="921984842fc62995a05af4e38d54c76636ad22f9" translate="yes" xml:space="preserve">
          <source>Another one I haven't seen yet is</source>
          <target state="translated">Еще один,который я еще не видел.</target>
        </trans-unit>
        <trans-unit id="a581be9026e27373327bd91afd56c7fd2a5ff0d8" translate="yes" xml:space="preserve">
          <source>Any browsers not supported Date.now, you can use this for get current date time:</source>
          <target state="translated">Любые браузеры,не поддерживающие Date.now,можно использовать для получения текущего времени даты:</target>
        </trans-unit>
        <trans-unit id="6b8c9774eafd190d448d8043fc3568881649a835" translate="yes" xml:space="preserve">
          <source>Anyway, my preferred way is using vanilla. This is a common way of doing it in JavaScript:</source>
          <target state="translated">В любом случае,я предпочитаю использовать ваниль.Это распространенный способ сделать это на JavaScript:</target>
        </trans-unit>
        <trans-unit id="984d386ae7e91a20c7794d72b755edba7bcf2c0d" translate="yes" xml:space="preserve">
          <source>As I observe the &lt;code&gt;Date.now()&lt;/code&gt; was fastest method to get timestamp for all three browsers. Safari has 19.2M operations per second, Firefox 16.1M, Chrome 7.8M.</source>
          <target state="translated">Как я &lt;code&gt;Date.now()&lt;/code&gt; был самым быстрым способом получения метки времени для всех трех браузеров. Safari выполняет 19,2 млн операций в секунду, Firefox 16,1 млн, Chrome 7,8 млн.</target>
        </trans-unit>
        <trans-unit id="89c87d438fe34fca30b7d42f23c2620c3e25df0c" translate="yes" xml:space="preserve">
          <source>As a result you get the following:</source>
          <target state="translated">В результате вы получаете следующее:</target>
        </trans-unit>
        <trans-unit id="4a55814bc17c0d6d454d16dc83d2e99926e4e2b1" translate="yes" xml:space="preserve">
          <source>As of writing this, the top answer is 9 years old, and a lot has changed since then - not least, we have near universal support for a non-hacky solution:</source>
          <target state="translated">На момент написания статьи максимальному ответу исполнилось 9 лет,и с тех пор многое изменилось-не в последнюю очередь,мы имеем почти универсальную поддержку не хакистского решения:</target>
        </trans-unit>
        <trans-unit id="9b2307355c3edb09bd59543377aa60b6ccf846ae" translate="yes" xml:space="preserve">
          <source>Because now() is a static method of Date, you always use it as Date.now().</source>
          <target state="translated">Поскольку now()является статическим методом Date,вы всегда используете его как Date.now().</target>
        </trans-unit>
        <trans-unit id="249546037f989d6495ad460fa50bbd527a9daede" translate="yes" xml:space="preserve">
          <source>By providing &lt;code&gt;|&lt;/code&gt;, you tell the interpreter to do a binary OR operation. Bit operations require absolute numbers which turns the decimal result from &lt;code&gt;Date.now() / 1000&lt;/code&gt; into an integer.</source>
          <target state="translated">Предоставляя &lt;code&gt;|&lt;/code&gt; Вы говорите интерпретатору сделать двоичную операцию ИЛИ. Битовые операции требуют абсолютных чисел, которые превращают десятичный результат из &lt;code&gt;Date.now() / 1000&lt;/code&gt; в целое число.</target>
        </trans-unit>
        <trans-unit id="fcec4664c311ae63b4c9f237aa6920372c1fef76" translate="yes" xml:space="preserve">
          <source>Consider to skip direct &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime&quot;&gt;&lt;code&gt;getTime()&lt;/code&gt;&lt;/a&gt; invocation and use &lt;code&gt;| 0&lt;/code&gt; as a replacement for &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/floor&quot;&gt;&lt;code&gt;Math.floor()&lt;/code&gt;&lt;/a&gt; function.
It's also good to remember &lt;code&gt;1E3&lt;/code&gt; is a shorter equivalent for &lt;code&gt;1000&lt;/code&gt; (uppercase E is preferred than lowercase to indicate &lt;code&gt;1E3&lt;/code&gt; as a constant).</source>
          <target state="translated">Попробуйте пропустить прямой &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime&quot;&gt; &lt;code&gt;getTime()&lt;/code&gt; &lt;/a&gt; и использовать &lt;code&gt;| 0&lt;/code&gt; 0 в качестве замены для функции &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math/floor&quot;&gt; &lt;code&gt;Math.floor()&lt;/code&gt; &lt;/a&gt; . Также хорошо помнить, что &lt;code&gt;1E3&lt;/code&gt; является более коротким эквивалентом для &lt;code&gt;1000&lt;/code&gt; (прописная буква E предпочтительнее, чем строчная, чтобы указать &lt;code&gt;1E3&lt;/code&gt; в качестве константы).</target>
        </trans-unit>
        <trans-unit id="fc6930de72f508a8cd338a19cdb518ffe42f16f8" translate="yes" xml:space="preserve">
          <source>Divide the result by 1000 to get the Unix timestamp, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/floor&quot;&gt;&lt;code&gt;floor&lt;/code&gt;&lt;/a&gt; if necessary:</source>
          <target state="translated">Разделите результат на 1000, чтобы получить метку времени Unix, при необходимости укажите &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/floor&quot;&gt; &lt;code&gt;floor&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="e7762d534ea33c31194e74f8a5bd3cb36d0bb6c9" translate="yes" xml:space="preserve">
          <source>During that conversion, decimals are removed, resulting in the same result as using &lt;code&gt;Math.floor()&lt;/code&gt; but using less code.</source>
          <target state="translated">Во время этого преобразования удаляются десятичные дроби, что приводит к тому же результату, что и использование &lt;code&gt;Math.floor()&lt;/code&gt; но с использованием меньшего количества кода.</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Расширить фрагмент</target>
        </trans-unit>
        <trans-unit id="5c69c78de28b184029e7e46f69edfbff933ed279" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;https://lodash.com/docs#now&quot;&gt;lodash&lt;/a&gt; and &lt;a href=&quot;http://underscorejs.org/#now&quot;&gt;underscore&lt;/a&gt; users, use &lt;code&gt;_.now&lt;/code&gt;.</source>
          <target state="translated">Для пользователей &lt;a href=&quot;https://lodash.com/docs#now&quot;&gt;lodash&lt;/a&gt; и &lt;a href=&quot;http://underscorejs.org/#now&quot;&gt;подчеркивания&lt;/a&gt; используйте &lt;code&gt;_.now&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65b5009c345d873088e63fe3ecd396ef5de54311" translate="yes" xml:space="preserve">
          <source>For a timestamp with microsecond resolution, there's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Performance/now&quot;&gt;&lt;code&gt;performance.now&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Для метки времени с разрешением в микросекунды есть &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Performance/now&quot;&gt; &lt;code&gt;performance.now&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="7f321ad7dc39abb5bc518d18680a3fb881273764" translate="yes" xml:space="preserve">
          <source>For more details, including other ways of installing and using MomentJS, see their &lt;a href=&quot;http://momentjs.com/docs/&quot;&gt;docs&lt;/a&gt;</source>
          <target state="translated">Для получения более подробной информации, включая другие способы установки и использования MomentJS, см. Их &lt;a href=&quot;http://momentjs.com/docs/&quot;&gt;документы&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="021e4809e5a502a1d0548ee4e41d41b5bf69b99d" translate="yes" xml:space="preserve">
          <source>Here is a simple function to generate timestamp in the format: mm/dd/yy hh:mi:ss</source>
          <target state="translated">Вот простая функция для генерации метки времени в формате:mmddy hh:mi:ss</target>
        </trans-unit>
        <trans-unit id="51e85e4e8113fb3e1f07e1727e78d73f5f0043e6" translate="yes" xml:space="preserve">
          <source>Here's an example:</source>
          <target state="translated">Вот пример:</target>
        </trans-unit>
        <trans-unit id="1645f444bdb311fd006c69c55304cdab9f73b237" translate="yes" xml:space="preserve">
          <source>Hopefully this helps, the methods above can work as well but I found this to be the simplest approach for our needs in Node.js.</source>
          <target state="translated">Надеюсь,это поможет,вышеприведенные методы тоже могут сработать,но я нашел это самым простым подходом для наших нужд в Node.js.</target>
        </trans-unit>
        <trans-unit id="b02aca60f68ca3245c5c0519e5e94a16d12750fc" translate="yes" xml:space="preserve">
          <source>How can I get a timestamp in JavaScript?</source>
          <target state="translated">Как получить временную метку в JavaScript?</target>
        </trans-unit>
        <trans-unit id="c2498d47f7406f2edbdf35b2fefebbc6274430a4" translate="yes" xml:space="preserve">
          <source>How do you get a timestamp in JavaScript</source>
          <target state="translated">Как получить временную метку в JavaScript</target>
        </trans-unit>
        <trans-unit id="30c103bd61079a2b3173e15bb4af80e03fa60fd1" translate="yes" xml:space="preserve">
          <source>I also like this, because it is just as short and is compatible with modern browsers, and over 500 people voted that it is better:</source>
          <target state="translated">Мне это нравится еще и потому,что она такая же короткая и совместимая с современными браузерами,и более 500 человек проголосовали за то,чтобы она была лучше:</target>
        </trans-unit>
        <trans-unit id="8d196dd78b067d89657ffd9e9790b26d402ba387" translate="yes" xml:space="preserve">
          <source>I do that all the time. No pun intended.</source>
          <target state="translated">Я постоянно так делаю.Никакого каламбура.</target>
        </trans-unit>
        <trans-unit id="6746e7ced889423d25692f2c64ef392c430a35ff" translate="yes" xml:space="preserve">
          <source>I highly recommend using &lt;code&gt;moment.js&lt;/code&gt;. To get the number of milliseconds since UNIX epoch, do</source>
          <target state="translated">Я настоятельно рекомендую использовать &lt;code&gt;moment.js&lt;/code&gt; . Чтобы узнать количество миллисекунд с начала UNIX, выполните</target>
        </trans-unit>
        <trans-unit id="264d1b249b3604326e98068f8b559f1fec8a5a2d" translate="yes" xml:space="preserve">
          <source>I learned a really cool way of converting a given Date object to a Unix timestamp from the source code of &lt;a href=&quot;https://github.com/carhartl/jquery-cookie/blob/master/src/jquery.cookie.js&quot;&gt;JQuery Cookie&lt;/a&gt; the other day.</source>
          <target state="translated">На днях я узнал очень крутой способ преобразования данного объекта Date в метку времени Unix из исходного кода &lt;a href=&quot;https://github.com/carhartl/jquery-cookie/blob/master/src/jquery.cookie.js&quot;&gt;JQuery Cookie&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2bf58ea0d3ddcbfdd4ef5d413c7e69359fbe1367" translate="yes" xml:space="preserve">
          <source>I like this, because it is small:</source>
          <target state="translated">Мне это нравится,потому что оно маленькое:</target>
        </trans-unit>
        <trans-unit id="8fde8794cd8f9ed43c9fea4417233aa0d878ed8a" translate="yes" xml:space="preserve">
          <source>I would recommend using &lt;code&gt;Date.now()&lt;/code&gt; (with compatibility shim). It's slightly better because it's shorter &amp;amp; doesn't create a new &lt;code&gt;Date&lt;/code&gt; object. However, if you don't want a shim &amp;amp; maximum compatibility, you could use the &quot;old&quot; method to get the timestamp in &lt;strong&gt;milliseconds&lt;/strong&gt;:</source>
          <target state="translated">Я бы рекомендовал использовать &lt;code&gt;Date.now()&lt;/code&gt; (с совместимостью). Это немного лучше, потому что он короче и не создает новый объект &lt;code&gt;Date&lt;/code&gt; . Однако, если вы не хотите использовать шим и максимальную совместимость, вы можете использовать &amp;laquo;старый&amp;raquo; метод, чтобы получить метку времени в &lt;strong&gt;миллисекундах&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="d78be82aef225dae7c62367e39d651f2211c5f7f" translate="yes" xml:space="preserve">
          <source>If it is for logging purposes, you can use &lt;strong&gt;ISOString&lt;/strong&gt;</source>
          <target state="translated">Если это для целей регистрации, вы можете использовать &lt;strong&gt;ISOString&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e4c5b87bb3419a5c33343d12882bdbd27545a770" translate="yes" xml:space="preserve">
          <source>If want a basic way to generate a timestamp in Node.js this works well.</source>
          <target state="translated">Если вам нужен основной способ генерации метки времени в Node.js,то это хорошо работает.</target>
        </trans-unit>
        <trans-unit id="5f7ca843221a9458bc8d52cf145357994b256de2" translate="yes" xml:space="preserve">
          <source>If you are just happy about jQuery's version consider upvoting &lt;a href=&quot;//stackoverflow.com/a/15434736/1519836&quot;&gt;&lt;strong&gt;this&lt;/strong&gt;&lt;/a&gt; answer since I did not find it myself.</source>
          <target state="translated">Если вы просто довольны версией jQuery, рассмотрите вариант отзыва &lt;a href=&quot;//stackoverflow.com/a/15434736/1519836&quot;&gt;&lt;strong&gt;этого&lt;/strong&gt;&lt;/a&gt; ответа, поскольку я сам не нашел его.</target>
        </trans-unit>
        <trans-unit id="0894f8f80fdcaea5520717945470385758abbb3f" translate="yes" xml:space="preserve">
          <source>If you just want to know the relative time from the point of when the code was run through first you could use something like this:</source>
          <target state="translated">Если вы просто хотите знать относительное время с момента,когда код был пропущен первым,вы можете использовать нечто подобное:</target>
        </trans-unit>
        <trans-unit id="69f224b476af05f25e71d89c1ed7a647f9ce8869" translate="yes" xml:space="preserve">
          <source>If you using a version below ES5, &lt;code&gt;Date.now();&lt;/code&gt; not works and you need to use:</source>
          <target state="translated">Если вы используете версию ниже ES5, &lt;code&gt;Date.now();&lt;/code&gt; не работает и вам нужно использовать:</target>
        </trans-unit>
        <trans-unit id="efea3eb2b8f1d14f5f37738341cece6be2180d9c" translate="yes" xml:space="preserve">
          <source>If you want to be absolutely certain that this won't break in some ancient (pre ie9) browser, you can put it behind a check, like so:</source>
          <target state="translated">Если вы хотите быть абсолютно уверены,что это не сломается в каком-нибудь старинном (pre ie9)браузере,вы можете поставить его за галочкой,например,так:</target>
        </trans-unit>
        <trans-unit id="974164208fc49177a2f9916c9bfbca5139904fa0" translate="yes" xml:space="preserve">
          <source>In MDN it's mentioned as below:</source>
          <target state="translated">В МДН это упоминается ниже:</target>
        </trans-unit>
        <trans-unit id="1ed31258d64a6edc078268ce5eb32bc1fe2283f7" translate="yes" xml:space="preserve">
          <source>In addition to the other options, if you want a dateformat ISO, you get can get it directly</source>
          <target state="translated">В дополнение к другим опциям,если вы хотите ISO формата данных,вы можете получить его непосредственно</target>
        </trans-unit>
        <trans-unit id="ecd991ceed49f68724cb1174e0172aa552fe9197" translate="yes" xml:space="preserve">
          <source>JavaScript works with the number of milliseconds since the epoch whereas most other languages work with the seconds. You could work with milliseconds but as soon as you pass a value to say PHP, the PHP native functions will probably fail. So to be sure I always use the seconds, not milliseconds.</source>
          <target state="translated">JavaScript работает с количеством миллисекунд,начиная с эпохи,в то время как большинство других языков работают с секундами.Вы можете работать с миллисекундами,но как только вы передадите значение,чтобы сказать PHP,родные функции PHP,вероятно,не будут работать.Поэтому,чтобы быть уверенным,я всегда использую секунды,а не миллисекунды.</target>
        </trans-unit>
        <trans-unit id="dc8cc8beca51a7dcf7a7b503229ddcf5c28b183d" translate="yes" xml:space="preserve">
          <source>Just be careful in JavaScript the timestamp depends on the client computer set, so it's not 100% accurate timestamp. To get the best result, you need to get the timestamp from the &lt;strong&gt;server-side&lt;/strong&gt;.</source>
          <target state="translated">Просто будьте осторожны в JavaScript, временная метка зависит от установленного клиентского компьютера, так что это не 100% точная временная метка. Чтобы получить лучший результат, вам нужно получить временную метку со стороны &lt;strong&gt;сервера&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="efa7f7d9b5981c73ed08c52f393880cfcb590729" translate="yes" xml:space="preserve">
          <source>Just to add up, here's a function to return a timestamp string in Javascript. 
Example: 15:06:38 PM</source>
          <target state="translated">Добавим,что в Javascript есть функция,возвращающая строку с меткой времени.Пример:15:06:38</target>
        </trans-unit>
        <trans-unit id="2656f81ba2352e03515b80f1058ceef84e636b55" translate="yes" xml:space="preserve">
          <source>MDN Documentation on Date.now</source>
          <target state="translated">MDN Документация на Date.now</target>
        </trans-unit>
        <trans-unit id="640e311ff42b2b135badd837df6dab8de06cce37" translate="yes" xml:space="preserve">
          <source>Of course it will break daylight saving time but depending on what you
  are building this might be useful to you if you need to do binary
  operations on timestamps after int32 will break in 2038.</source>
          <target state="translated">Конечно,это сломает летнее время,но в зависимости от того,что вы строите,это может быть полезно для вас,если вам нужно будет выполнять двоичные операции с метками времени после того,как int32 сломается в 2038 году.</target>
        </trans-unit>
        <trans-unit id="3226f84f9f40cd59bd4b779f189926465165fc3c" translate="yes" xml:space="preserve">
          <source>On almost all current browsers you can use &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.4.4&quot;&gt;&lt;code&gt;Date.now()&lt;/code&gt;&lt;/a&gt; to get the UTC timestamp in &lt;strong&gt;milliseconds&lt;/strong&gt;; a notable exception to this is IE8 and earlier (see &lt;a href=&quot;http://kangax.github.io/compat-table/es5/#Date.now&quot;&gt;compatibility table&lt;/a&gt;).</source>
          <target state="translated">Почти во всех современных браузерах вы можете использовать &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.4.4&quot;&gt; &lt;code&gt;Date.now()&lt;/code&gt; &lt;/a&gt; чтобы получить метку времени UTC в &lt;strong&gt;миллисекундах&lt;/strong&gt; ; Заметным исключением является IE8 и более ранние версии (см. &lt;a href=&quot;http://kangax.github.io/compat-table/es5/#Date.now&quot;&gt;таблицу совместимости&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="4352fe6e742e13b0363d4f1e3748f910d7b1055c" translate="yes" xml:space="preserve">
          <source>One I haven't seen yet</source>
          <target state="translated">Которого я еще не видел.</target>
        </trans-unit>
        <trans-unit id="21e7544f557d2c428d6cc83568e4c05b25387a54" translate="yes" xml:space="preserve">
          <source>Or alternatively you could use:</source>
          <target state="translated">Или,в качестве альтернативы,ты можешь использовать:</target>
        </trans-unit>
        <trans-unit id="71490c02bf59648516c73ed56ee900749dd26c54" translate="yes" xml:space="preserve">
          <source>Our team is using this to bust cache in a localhost environment. The output is &lt;code&gt;/dist/css/global.css?v=245521377&lt;/code&gt; where &lt;code&gt;245521377&lt;/code&gt; is the timestamp generated by &lt;code&gt;hrtime()&lt;/code&gt;.</source>
          <target state="translated">Наша команда использует это, чтобы уничтожить кеш в локальной среде. &lt;code&gt;/dist/css/global.css?v=245521377&lt;/code&gt; является /dist/css/global.css?v=245521377, где &lt;code&gt;245521377&lt;/code&gt; - это отметка времени, сгенерированная &lt;code&gt;hrtime()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bad5af0132c9ad67f072fc624fea80472707902a" translate="yes" xml:space="preserve">
          <source>PS: sadly someone merged this to the top answer without giving credit.</source>
          <target state="translated">PS:к сожалению,кто-то объединил это с лучшим ответом,не отдавая при этом должное.</target>
        </trans-unit>
        <trans-unit id="09c3e90392b609ee59dca9e0981db05d25ac6937" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;http://momentjs.com/docs/#/displaying/unix-timestamp/&quot;&gt;http://momentjs.com/docs/#/displaying/unix-timestamp/&lt;/a&gt;</source>
          <target state="translated">Смотрите: &lt;a href=&quot;http://momentjs.com/docs/#/displaying/unix-timestamp/&quot;&gt;http://momentjs.com/docs/#/displaying/unix-timestamp/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2661594d1248ebc08511125837d5dea5620dcbe" translate="yes" xml:space="preserve">
          <source>Short &amp;amp; Snazzy:</source>
          <target state="translated">Короткие и шикарные:</target>
        </trans-unit>
        <trans-unit id="8f0cf74ec2160ab1ff63599867401f2f5aa48b5d" translate="yes" xml:space="preserve">
          <source>Some output of how it will look:</source>
          <target state="translated">Некоторое представление о том,как это будет выглядеть:</target>
        </trans-unit>
        <trans-unit id="f9d911f3aad33d3094992357bc52a2a7fac62528" translate="yes" xml:space="preserve">
          <source>Something similar to &lt;a href=&quot;https://en.wikipedia.org/wiki/Unix_time&quot;&gt;Unix timestamp&lt;/a&gt;, that is, a single number that represents the current time and date. Either as a number or a string.</source>
          <target state="translated">Нечто похожее на &lt;a href=&quot;https://en.wikipedia.org/wiki/Unix_time&quot;&gt;метку времени Unix&lt;/a&gt; , то есть одно число, представляющее текущее время и дату. Либо в виде числа или строки.</target>
        </trans-unit>
        <trans-unit id="d0dba514baaffe5a4a25e8c8c797ea9abb7cda1f" translate="yes" xml:space="preserve">
          <source>Tested on MacOs High Sierra 10.13.3 on Chrome 67.0.3396.99 (64-bit), Safari 11.0.3 (13604.5.6), Firefox 59.0.2 (64-bit). On below screenshot I show you results for fastest browser (Safari):</source>
          <target state="translated">Протестировано на MacOs High Sierra 10.13.3 на Chrome 67.0.3396.99 (64-bit),Safari 11.0.3 (13604.5.6),Firefox 59.0.2 (64-bit).На скриншоте ниже я покажу вам результаты для самого быстрого браузера (Safari):</target>
        </trans-unit>
        <trans-unit id="2e86c58c605bfe8cffb228a91f786f60a8395466" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime&quot;&gt;&lt;code&gt;Date.getTime()&lt;/code&gt;&lt;/a&gt; method can be used with a little tweak:</source>
          <target state="translated">Метод &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime&quot;&gt; &lt;code&gt;Date.getTime()&lt;/code&gt; &lt;/a&gt; можно использовать с небольшим изменением:</target>
        </trans-unit>
        <trans-unit id="13812a5808b8fe1a80bde08016cbe4507cea25a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;new Date()*1&lt;/code&gt; was slowest for Chrome (2.8M) and Firefox (2.6M). The &lt;code&gt;Number(new Date())&lt;/code&gt; was slowest for Safari (2.9M).</source>
          <target state="translated">&lt;code&gt;new Date()*1&lt;/code&gt; была самой медленной для Chrome (2.8M) и Firefox (2.6M). &lt;code&gt;Number(new Date())&lt;/code&gt; было самым медленным для Safari (2.9M).</target>
        </trans-unit>
        <trans-unit id="f4499f732a0e45b7fa7e1fba72949adb6f3884c5" translate="yes" xml:space="preserve">
          <source>The Date.now() method returns the number of milliseconds elapsed since
  1 January 1970 00:00:00 UTC.</source>
          <target state="translated">Метод Date.now()возвращает количество миллисекунд,прошедших с 1 января 1970 00:00:00 UTC.</target>
        </trans-unit>
        <trans-unit id="09f0706d3cb42dc1b7b5d47c52924089cdf79ffc" translate="yes" xml:space="preserve">
          <source>The code &lt;code&gt;Math.floor(new Date().getTime() / 1000)&lt;/code&gt; can be shortened to &lt;code&gt;new Date / 1E3 | 0&lt;/code&gt;.</source>
          <target state="translated">Код &lt;code&gt;Math.floor(new Date().getTime() / 1000)&lt;/code&gt; можно сократить до &lt;code&gt;new Date / 1E3 | 0&lt;/code&gt; 0</target>
        </trans-unit>
        <trans-unit id="690febb76917a148462279b049b2804833ed00bf" translate="yes" xml:space="preserve">
          <source>The value returned by the getTime method is the number of milliseconds
  since 1 January 1970 00:00:00 UTC.</source>
          <target state="translated">Значение,возвращаемое методом getTime,представляет собой количество миллисекунд,начиная с 1 января 1970 00:00:00 UTC.</target>
        </trans-unit>
        <trans-unit id="1a1487b72d28b45e5d04e4bece3d9af55e2e36ef" translate="yes" xml:space="preserve">
          <source>This could for example yield &lt;code&gt;1436140826653.139&lt;/code&gt;, while &lt;code&gt;Date.now&lt;/code&gt; only gives &lt;code&gt;1436140826653&lt;/code&gt;.</source>
          <target state="translated">Это может, например, привести к &lt;code&gt;1436140826653.139&lt;/code&gt; , в то время как &lt;code&gt;Date.now&lt;/code&gt; дает только &lt;code&gt;1436140826653&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5ad837bb7898551bab26b49b028cc7199bc2055" translate="yes" xml:space="preserve">
          <source>This one has a solution : which converts unixtime stamp to tim in js try this</source>
          <target state="translated">У этого есть решение:которое конвертирует unixtime марку в таймер в js попробуйте следующее</target>
        </trans-unit>
        <trans-unit id="34a32badd396c81c617c2188c546e9398277d984" translate="yes" xml:space="preserve">
          <source>This seems to work.</source>
          <target state="translated">Похоже,это сработало.</target>
        </trans-unit>
        <trans-unit id="00b93c39d06afcdb72fc8a261f0fa6ce62b1c5c0" translate="yes" xml:space="preserve">
          <source>This will also return negative values but only if the user of that PC
  you are running your code on is changing their PC's clock at least to
  31th of december of the previous year.</source>
          <target state="translated">Это также вернет отрицательные значения,но только в том случае,если пользователь ПК,на котором вы выполняете свой код,меняет часы своего ПК,по крайней мере,на 31 декабря предыдущего года.</target>
        </trans-unit>
        <trans-unit id="39934b9c1eaee234b1fcedc0a873b736a6c33248" translate="yes" xml:space="preserve">
          <source>This will give you a Unix timestamp (in seconds):</source>
          <target state="translated">Это даст вам Unix метку времени (в секундах):</target>
        </trans-unit>
        <trans-unit id="0b5226a3360f22af6db509055809735aeff384c8" translate="yes" xml:space="preserve">
          <source>This will give you the milliseconds since the epoch (not Unix timestamp):</source>
          <target state="translated">Это даст вам миллисекунды,начиная с эпохи (не Unix timestamp):</target>
        </trans-unit>
        <trans-unit id="63b5c47774fe2e70f965c640f5a0a0785777acdc" translate="yes" xml:space="preserve">
          <source>This will return the milliseconds since epoch time, of course, not seconds.</source>
          <target state="translated">Это вернет миллисекунды со времен эпохи,конечно,а не секунды.</target>
        </trans-unit>
        <trans-unit id="23682a9f2a373b395978bad94d86b598c969d1f3" translate="yes" xml:space="preserve">
          <source>To get it working in IE you could do this (Polyfill from &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now&quot;&gt;MDN&lt;/a&gt;):</source>
          <target state="translated">Чтобы заставить его работать в IE, вы можете сделать это (Polyfill из &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now&quot;&gt;MDN&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="b1b26851df5bfed8f3aa18c63580c74bc71eedb0" translate="yes" xml:space="preserve">
          <source>To get the number of seconds since UNIX epoch, do</source>
          <target state="translated">Чтобы получить количество секунд,прошедших с эпохи UNIX,сделайте следующее</target>
        </trans-unit>
        <trans-unit id="51d4de6065426390bb75cddcc630866c137aa247" translate="yes" xml:space="preserve">
          <source>To get the timestamp in &lt;strong&gt;seconds&lt;/strong&gt;, you can use:</source>
          <target state="translated">Чтобы получить метку времени в &lt;strong&gt;секундах&lt;/strong&gt; , вы можете использовать:</target>
        </trans-unit>
        <trans-unit id="c6f702c7ef6da5afd82688edda6f3e833daf6a22" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;moment.js&lt;/code&gt; in the browser:</source>
          <target state="translated">Чтобы использовать &lt;code&gt;moment.js&lt;/code&gt; в браузере:</target>
        </trans-unit>
        <trans-unit id="4ca0b297522996598e577e2c11e2193966464d78" translate="yes" xml:space="preserve">
          <source>Today - 2018.06.27 I provide some time comparison for pure js solutions. This can be useful for people who wanna get/measure time in JS in light/efficient way (eg. for real-time applications like simulations, games etc.)</source>
          <target state="translated">Сегодня-2018.06.27 я провожу сравнение по времени для чистых js растворов.Это может быть полезно для людей,которые хотят получить удовольствие от времени в JS свет эффективным способом (например,для приложений в реальном времени,таких как симуляции,игры и т.д.).</target>
        </trans-unit>
        <trans-unit id="e12c4ed327c1caad16d71ccb39a340755fd55af8" translate="yes" xml:space="preserve">
          <source>Which should be slightly faster, but also less readable (also &lt;a href=&quot;https://stackoverflow.com/questions/7487977/using-bitwise-or-0-to-floor-a-number&quot;&gt;see this answer&lt;/a&gt;).</source>
          <target state="translated">Который должен быть немного быстрее, но также менее читабельным ( &lt;a href=&quot;https://stackoverflow.com/questions/7487977/using-bitwise-or-0-to-floor-a-number&quot;&gt;см.&lt;/a&gt; Также этот ответ ).</target>
        </trans-unit>
        <trans-unit id="e2f1ba88be31eceb539de69b57688538ee8273fc" translate="yes" xml:space="preserve">
          <source>Which you can then convert to seconds like this:</source>
          <target state="translated">Который ты можешь затем преобразовать в секунды,как этот:</target>
        </trans-unit>
        <trans-unit id="90b842a06a5568c975aa6e7b3c4e2ac58b5dd623" translate="yes" xml:space="preserve">
          <source>You can also convert times like so:</source>
          <target state="translated">Ты также можешь конвертировать такие времена:</target>
        </trans-unit>
        <trans-unit id="d228a1821059280a5683da3268287479e5e54808" translate="yes" xml:space="preserve">
          <source>You can easily make a shim for this, though:</source>
          <target state="translated">Ты легко можешь сделать платок для этого:</target>
        </trans-unit>
        <trans-unit id="efbd017a3cb3b7a1e798516adb79f00a15049ff9" translate="yes" xml:space="preserve">
          <source>You can only use</source>
          <target state="translated">Вы можете использовать только</target>
        </trans-unit>
        <trans-unit id="3eee8f5fd95593438c9d36415e34d68b4c2b1637" translate="yes" xml:space="preserve">
          <source>You can perform test on your machine here: &lt;a href=&quot;https://jsperf.com/timestamp-test-x&quot;&gt;https://jsperf.com/timestamp-test-x&lt;/a&gt;.</source>
          <target state="translated">Вы можете выполнить тестирование на вашем компьютере здесь: &lt;a href=&quot;https://jsperf.com/timestamp-test-x&quot;&gt;https://jsperf.com/timestamp-test-x&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="63ed58255a35880df934cb3750209a0ebc53ca20" translate="yes" xml:space="preserve">
          <source>more simpler way:</source>
          <target state="translated">более простым способом:</target>
        </trans-unit>
        <trans-unit id="cb36c7b188494c1c7efa1d594b3f10cfdb5a64c2" translate="yes" xml:space="preserve">
          <source>to get the current timestamp. No need to do anything extra.</source>
          <target state="translated">чтобы получить текущую временную метку.Не нужно делать ничего лишнего.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
