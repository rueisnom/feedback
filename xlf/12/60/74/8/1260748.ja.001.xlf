<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/1260748">
    <body>
      <group id="1260748">
        <trans-unit id="75df9034e5f0ab05b359ebfc7a5adfe151a4e7be" translate="yes" xml:space="preserve">
          <source>&quot;&lt;strong&gt;&lt;code&gt;submodule deinit&lt;/code&gt;&lt;/strong&gt;&quot; is the way to do so.</source>
          <target state="translated">「 &lt;strong&gt; &lt;code&gt;submodule deinit&lt;/code&gt; &lt;/strong&gt; 」はそのための方法です。</target>
        </trans-unit>
        <trans-unit id="392629899d45cbd47895259061d0ff3ce069a21a" translate="yes" xml:space="preserve">
          <source>'&lt;code&gt;add&lt;/code&gt;' step which records the url of a submodule in the &lt;code&gt;.gitmodules&lt;/code&gt; file: it is need to removed for you.</source>
          <target state="translated">&lt;code&gt;.gitmodules&lt;/code&gt; ファイルにサブモジュールのURLを記録する「 &lt;code&gt;add&lt;/code&gt; 」ステップ：削除する必要があります。</target>
        </trans-unit>
        <trans-unit id="ba14dc44bc5523cd7563fc3f492c061f4fee5caf" translate="yes" xml:space="preserve">
          <source>(1) does &lt;code&gt;git submodule init&lt;/code&gt;, so updates &lt;code&gt;.git/config&lt;/code&gt;</source>
          <target state="translated">（1） &lt;code&gt;git submodule init&lt;/code&gt; を実行するため、 &lt;code&gt;.git/config&lt;/code&gt; を更新します</target>
        </trans-unit>
        <trans-unit id="1def3c48d21d75360ae1012a64badda431d5c9f8" translate="yes" xml:space="preserve">
          <source>(1) updates &lt;code&gt;.git/config&lt;/code&gt;</source>
          <target state="translated">（1） &lt;code&gt;.git/config&lt;/code&gt; を更新する</target>
        </trans-unit>
        <trans-unit id="2bfa5d8a2c4831b5555fbe1d921bfe0b0daa6946" translate="yes" xml:space="preserve">
          <source>(2) does &lt;code&gt;git submodule update&lt;/code&gt;, so, nonrecursively checks out the module</source>
          <target state="translated">（2） &lt;code&gt;git submodule update&lt;/code&gt; を行うので、モジュールを非再帰的にチェックアウトします</target>
        </trans-unit>
        <trans-unit id="87430307f79e6849310bc162e840241234657bae" translate="yes" xml:space="preserve">
          <source>(2) removes the files of the module</source>
          <target state="translated">(2)モジュールのファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="5b7ac361af4e1fa2234d4108d3c13c3178644919" translate="yes" xml:space="preserve">
          <source>(3) checks out the submodules of the submodule recursively</source>
          <target state="translated">(3)のサブモジュールを再帰的にチェックアウトする</target>
        </trans-unit>
        <trans-unit id="e448bb7d60c08bf380e6fbcfd10962aa317f505b" translate="yes" xml:space="preserve">
          <source>(3) thereby recursively removes the submodules of the submodule</source>
          <target state="translated">(3)それによって、再帰的にサブモジュールの</target>
        </trans-unit>
        <trans-unit id="bd69d69fcfe49811745d93e0b6615040b2390e32" translate="yes" xml:space="preserve">
          <source>(4) updates &lt;code&gt;.gitmodules&lt;/code&gt;</source>
          <target state="translated">（4） &lt;code&gt;.gitmodules&lt;/code&gt; を更新</target>
        </trans-unit>
        <trans-unit id="58191c64dc8bbe69521049950c192a0d5bdbf1b5" translate="yes" xml:space="preserve">
          <source>--Update (07/05/2017)--</source>
          <target state="translated">--更新 (07052017)--。</target>
        </trans-unit>
        <trans-unit id="7a417a4483cc8de89c115f7f25e2cef55458ef45" translate="yes" xml:space="preserve">
          <source>1.) Delete the relevant section from the .gitmodules file. You can use below command:</source>
          <target state="translated">1.).gitmodulesファイルから該当する部分を削除します。以下のコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="3d6c68cdaff83acff1043cae63b2018b1a52345c" translate="yes" xml:space="preserve">
          <source>2.) Stage the &lt;code&gt;.gitmodules&lt;/code&gt; changes</source>
          <target state="translated">2.）. &lt;code&gt;.gitmodules&lt;/code&gt; 変更をステージングする</target>
        </trans-unit>
        <trans-unit id="d50d54b4b2084be963c6b5c7d014d39b559d9a71" translate="yes" xml:space="preserve">
          <source>3.) Delete the relevant section from &lt;code&gt;.git/config&lt;/code&gt;. You can use below command:</source>
          <target state="translated">3.）. &lt;code&gt;.git/config&lt;/code&gt; から関連セクションを削除します。 以下のコマンドを使用できます。</target>
        </trans-unit>
        <trans-unit id="c7277a2c26f6c06aa691b4ee280630cf46308f95" translate="yes" xml:space="preserve">
          <source>4.) Remove the gitlink (no trailing slash):</source>
          <target state="translated">4.)gitlinkを削除します(末尾にスラッシュを入れない)。</target>
        </trans-unit>
        <trans-unit id="6926a4354a0cd992e6eb7e030d616319df849d60" translate="yes" xml:space="preserve">
          <source>5.) Cleanup the &lt;code&gt;.git/modules&lt;/code&gt;:</source>
          <target state="translated">5.）. &lt;code&gt;.git/modules&lt;/code&gt; クリーンアップします ：</target>
        </trans-unit>
        <trans-unit id="31b5db34f8e0cc9ff4eb92359a3f2275053ad125" translate="yes" xml:space="preserve">
          <source>6.) Commit:</source>
          <target state="translated">6.)コミット</target>
        </trans-unit>
        <trans-unit id="17fbaa47e0f16f4a560962bdb629bc835837f27c" translate="yes" xml:space="preserve">
          <source>7.) Delete the now untracked submodule files</source>
          <target state="translated">7.)現在追跡されていないサブモジュールファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="d445583f729dd42045a188617be6fbd6bb1316d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wiktionary.org/wiki/FWIW&quot;&gt;FWIW&lt;/a&gt;, I also removed the &lt;code&gt;.git&lt;/code&gt; folder before doing the &lt;code&gt;git add&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://en.wiktionary.org/wiki/FWIW&quot;&gt;FWIW&lt;/a&gt; 、私は &lt;code&gt;git add&lt;/code&gt; を実行する前に &lt;code&gt;.git&lt;/code&gt; フォルダも削除しました。</target>
        </trans-unit>
        <trans-unit id="905ecf03ef6bfc25f887e5d7e45974d4e3967f8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;$submodule&quot;&lt;/code&gt; is just to emphasize where to put the name, and that you have to be careful with spaces and the like</source>
          <target state="translated">&lt;code&gt;&quot;$submodule&quot;&lt;/code&gt; は、名前を付ける場所を強調するためだけのものであり、スペースなどに注意する必要があります</target>
        </trans-unit>
        <trans-unit id="2733c62b60e8bd5dd536c8ef3689b5af08022833" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.gitmodules&lt;/code&gt; then looks like</source>
          <target state="translated">&lt;code&gt;.gitmodules&lt;/code&gt; は次のようになります</target>
        </trans-unit>
        <trans-unit id="2343005b3df511792c4afb1585be1c47863c9e77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git rm --cached path_to_submodule&lt;/code&gt; (no trailing slash)</source>
          <target state="translated">&lt;code&gt;git rm --cached path_to_submodule&lt;/code&gt; （末尾のスラッシュなし）</target>
        </trans-unit>
        <trans-unit id="fa85b914c450e6a5b0d93c0557415248bf31dc21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git rm --cached path_to_submodule&lt;/code&gt; (no trailing slash).</source>
          <target state="translated">&lt;code&gt;git rm --cached path_to_submodule&lt;/code&gt; （末尾のスラッシュなし）。</target>
        </trans-unit>
        <trans-unit id="97b1d2b8f55b09b5693d68a244020ec30599996d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git rm&lt;/code&gt;: See &lt;a href=&quot;https://github.com/git/git/commit/95c16418f0375e2fc325f32c3d7578fba9cfd7ef&quot;&gt;commit 95c16418&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;git rm&lt;/code&gt; ： &lt;a href=&quot;https://github.com/git/git/commit/95c16418f0375e2fc325f32c3d7578fba9cfd7ef&quot;&gt;コミット95c16418を&lt;/a&gt;参照：</target>
        </trans-unit>
        <trans-unit id="33816e486b1c4f37297aff7ca4f58d0b84c3544d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git submodule deinit&lt;/code&gt;: It stems from &lt;a href=&quot;http://git.661346.n2.nabble.com/PATCH-v3-submodule-add-deinit-command-td7576946.html&quot;&gt;this patch&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;git submodule deinit&lt;/code&gt; ：これは&lt;a href=&quot;http://git.661346.n2.nabble.com/PATCH-v3-submodule-add-deinit-command-td7576946.html&quot;&gt;このパッチ&lt;/a&gt;に由来します ：</target>
        </trans-unit>
        <trans-unit id="56c73fccdad0005e7be1ce912f0d4cb4d049d8d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ls -1p .git/modules/&lt;/code&gt; gives</source>
          <target state="translated">&lt;code&gt;ls -1p .git/modules/&lt;/code&gt; は</target>
        </trans-unit>
        <trans-unit id="4f86b6191be8658ecb05ac980276737fa12f267e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rm -rf&lt;/code&gt;: This is mentioned in &lt;a href=&quot;https://stackoverflow.com/users/2753241/daniel-schroeder&quot;&gt;Daniel Schroeder&lt;/a&gt;'s &lt;a href=&quot;https://stackoverflow.com/a/26505847/6309&quot;&gt;answer&lt;/a&gt;, and summarized by &lt;a href=&quot;https://stackoverflow.com/users/246776/eonil&quot;&gt;Eonil&lt;/a&gt; in &lt;a href=&quot;https://stackoverflow.com/questions/1260748/how-do-i-remove-a-git-submodule/16162000?noredirect=1#comment41729982_16162000&quot;&gt;the comments&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;rm -rf&lt;/code&gt; ：これは&lt;a href=&quot;https://stackoverflow.com/users/2753241/daniel-schroeder&quot;&gt;Daniel Schroeder&lt;/a&gt;の&lt;a href=&quot;https://stackoverflow.com/a/26505847/6309&quot;&gt;回答&lt;/a&gt;で言及されており、 &lt;a href=&quot;https://stackoverflow.com/users/246776/eonil&quot;&gt;Eonil&lt;/a&gt;が&lt;a href=&quot;https://stackoverflow.com/questions/1260748/how-do-i-remove-a-git-submodule/16162000?noredirect=1#comment41729982_16162000&quot;&gt;コメント&lt;/a&gt;で要約しています ：</target>
        </trans-unit>
        <trans-unit id="86744ef5bc68f6c9217ef19e3202a295ca39d1cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;workhorse:~/path/to/worktree$ git merge --ff-only FETCH_HEAD&lt;/code&gt;.  If this does not work, use &lt;code&gt;git reset --soft FETCH_HEAD&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;workhorse:~/path/to/worktree$ git merge --ff-only FETCH_HEAD&lt;/code&gt; 。 これが機能しない場合は、 &lt;code&gt;git reset --soft FETCH_HEAD&lt;/code&gt; を使用します</target>
        </trans-unit>
        <trans-unit id="333a0434bdebb9dc141381dac1154fa4cc4da677" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;workhorse:~/path/to/worktree$ git status --porcelain&lt;/code&gt;&lt;strong&gt;must not&lt;/strong&gt; output anything!  If it does, cleanup things first!</source>
          <target state="translated">&lt;code&gt;workhorse:~/path/to/worktree$ git status --porcelain&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt;何も出力して&lt;strong&gt;はいけません&lt;/strong&gt; ！ 存在する場合は、最初にクリーンアップしてください！</target>
        </trans-unit>
        <trans-unit id="fa376d13f407fd16366f7120c7aaf255adb47552" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Please note:&lt;/em&gt;&lt;code&gt;$submodulepath&lt;/code&gt; doesn't contain leading or trailing slashes.</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt; &lt;code&gt;$submodulepath&lt;/code&gt; は、先頭または末尾のスラッシュが含まれていません。</target>
        </trans-unit>
        <trans-unit id="aaef89dbbebca68bd2777431d3b44acd06d21585" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Background&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Background&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="560172c61c1dbb6f80b4e7fdab37acc8aea8ba55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In theory&lt;/strong&gt;, &lt;code&gt;git rm&lt;/code&gt; in &lt;em&gt;step 1&lt;/em&gt; should take care of it. Hopefully, the second part of OP question can be answered positively one day (that this can be done in one command).</source>
          <target state="translated">&lt;strong&gt;理論的には&lt;/strong&gt; 、 &lt;em&gt;ステップ1の&lt;/em&gt; &lt;code&gt;git rm&lt;/code&gt; で処理できます。 うまくいけば、OP質問の2番目の部分は1日で肯定的に回答できます（これは1つのコマンドで実行できます）。</target>
        </trans-unit>
        <trans-unit id="3f3b24aeaaa0bd39c01d2e5c5520fcffe3389465" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Never touch the insides of the &lt;code&gt;.git&lt;/code&gt; directory yourself!&lt;/strong&gt;  Editing inside &lt;code&gt;.git&lt;/code&gt; enters the dark side.  Stay away at all cost!</source>
          <target state="translated">&lt;strong&gt;自分で &lt;code&gt;.git&lt;/code&gt; ディレクトリの内部に触れないでください。&lt;/strong&gt; &lt;code&gt;.git&lt;/code&gt; 内での編集はダークサイドに入ります。 絶対に近づかないでください！</target>
        </trans-unit>
        <trans-unit id="f4edeb813ceace49f9f305b324528b67449b2b03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also&lt;/strong&gt;: &lt;a href=&quot;https://stackoverflow.com/a/7646931/5614968&quot;&gt;alternative steps below&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/7646931/5614968&quot;&gt;以下&lt;/a&gt; &lt;strong&gt;も参照してください&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="5de5593ad47f9242fa4149d9113f83b1e00a5d77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Simple steps&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;簡単な手順&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e4b56a9672367d8f4ac4843beceba6b73aacffb1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To completely remove a submodule, additionally manually delete &lt;code&gt;$GIT_DIR/modules/&amp;lt;name&amp;gt;/&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;サブモジュールを完全に削除するには、さらに &lt;code&gt;$GIT_DIR/modules/&amp;lt;name&amp;gt;/&lt;/code&gt; 手動で削除します&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f1b14f0b0c084f7ab89a5ad01392fdab3452174" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To remove a submodule you need to:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;サブモジュールを削除するには、次のことを行う必要があります。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a1222bda332630854cdae80006e1fe6ce32dad9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To summarize, this is what you should do :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;要約すると、これはあなたがすべきことです：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="02d418269e8389c6167327b90ad8e42318134f27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;deinit&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;deinit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="127322f3facbebe1c97e1d50f00d2eb7ef8eb670" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;(Merged by &lt;a href=&quot;https://github.com/gitster&quot;&gt;Junio C Hamano -- &lt;code&gt;gitster&lt;/code&gt; --&lt;/a&gt; in &lt;a href=&quot;https://github.com/git/git/commit/ead8dbe2e14ee9a2a18ccd0ad7bca806e1be0d54&quot;&gt;commit ead8dbe&lt;/a&gt;, 13 Feb 2018)&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;（ &lt;a href=&quot;https://github.com/gitster&quot;&gt;Junio C Hamano- &lt;code&gt;gitster&lt;/code&gt; -&lt;/a&gt; &lt;a href=&quot;https://github.com/git/git/commit/ead8dbe2e14ee9a2a18ccd0ad7bca806e1be0d54&quot;&gt;コミット中ead8dbe&lt;/a&gt; 、2018年2月13日）&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e989f340019df7efe0e1d18d51185107965d21dc" translate="yes" xml:space="preserve">
          <source>A further reason is shown above.  Look at the &lt;code&gt;ls&lt;/code&gt;.  What do you see there?</source>
          <target state="translated">さらなる理由は上に示されています。 &lt;code&gt;ls&lt;/code&gt; を見てください。 そこで何が見えますか？</target>
        </trans-unit>
        <trans-unit id="f1acf21180f55e5ce393b96bb991be68f1799a0b" translate="yes" xml:space="preserve">
          <source>A submodule can be deleted by running &lt;code&gt;git rm &amp;lt;submodule path&amp;gt; &amp;amp;&amp;amp; git commit&lt;/code&gt;. This can be undone using &lt;code&gt;git revert&lt;/code&gt;.</source>
          <target state="translated">サブモジュールは &lt;code&gt;git rm &amp;lt;submodule path&amp;gt; &amp;amp;&amp;amp; git commit&lt;/code&gt; 実行することで削除できます。 これは &lt;code&gt;git revert&lt;/code&gt; を使用して元に戻すことができます。</target>
        </trans-unit>
        <trans-unit id="a19083aae8c4f24f25eb2b5fe29e28e8e67633bd" translate="yes" xml:space="preserve">
          <source>A submodule cloned using git 1.7.8 or newer will leave at most four traces of itself in your local repo. The process for removing those four traces is given by the three commands below:</source>
          <target state="translated">git 1.7.8 以降を使ってクローンしたサブモジュールは、せいぜい四つの痕跡をローカルのレポに残してしまいます。この四つの痕跡を削除するには、以下の三つのコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="20daf22b77b7ac0c68775a88bf34854b508544cd" translate="yes" xml:space="preserve">
          <source>Additional 2 more steps mentioned below are needed to clean submodule completely in local cloned copy.</source>
          <target state="translated">サブモジュールを完全にクリーンアップするためには、さらに以下の2つのステップが必要です。</target>
        </trans-unit>
        <trans-unit id="caa4bb0d75166dea06c08fa522d2d965c057300a" translate="yes" xml:space="preserve">
          <source>After experimenting with all the different answers on this site, I ended up with this solution:</source>
          <target state="translated">このサイトのすべての異なる答えを試した結果、私はこの解決策に行き着きました。</target>
        </trans-unit>
        <trans-unit id="45e899784b28fb9d3aa33853ddd0da06eeab7ee4" translate="yes" xml:space="preserve">
          <source>Also have a look at &lt;a href=&quot;https://stackoverflow.com/a/5387510/319266&quot;&gt;an answer to &lt;em&gt;Can I unpopulate a Git submodule?&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">また&lt;a href=&quot;https://stackoverflow.com/a/5387510/319266&quot;&gt;&lt;em&gt;、Gitサブモジュールの実装を解除できますか？の&lt;/em&gt;回答も&lt;em&gt;ご覧ください。&lt;/em&gt;&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef314e5782dfa75dcdd61039070894834b22f6d1" translate="yes" xml:space="preserve">
          <source>And from the philosophical view, wiping history is always wrong!
  &lt;a href=&quot;https://en.wikipedia.org/wiki/Quantum_eraser_experiment&quot;&gt;Except for quantum mechanics&lt;/a&gt;, as usual, but this is something completely different.</source>
          <target state="translated">そして哲学的な観点から、歴史を拭くのは常に間違っています！ いつものように、 &lt;a href=&quot;https://en.wikipedia.org/wiki/Quantum_eraser_experiment&quot;&gt;量子力学を除いて&lt;/a&gt; 、これは完全に異なるものです。</target>
        </trans-unit>
        <trans-unit id="cc8b18a25873b09f8f3ee5c3e3b42e01f7b9cc25" translate="yes" xml:space="preserve">
          <source>And yes, you can blame &lt;code&gt;git&lt;/code&gt; for this, as many handy things were missing in &lt;code&gt;git&lt;/code&gt; in the past.  Like a proper way to remove submodules again.</source>
          <target state="translated">そして、そうです、これまで &lt;code&gt;git&lt;/code&gt; には多くの便利なものが欠けていたため、 gitのせいにすることができます。 サブモジュールを削除する適切な方法のように。</target>
        </trans-unit>
        <trans-unit id="5f26a89694b84641815648077efb61627fedc522" translate="yes" xml:space="preserve">
          <source>And you do not lose history.  In case you forgot to push the very latest version of the old submodule, you can enter the local copy and do so later on.  Note that it is quite common that somebody forgets to push some submodules (because this is a PITA for newcomers, until they became accustomed to &lt;code&gt;git&lt;/code&gt;).</source>
          <target state="translated">そして、あなたは歴史を失うことはありません。 古いサブモジュールの最新バージョンをプッシュするのを忘れた場合は、ローカルコピーを入力して後で実行できます。 誰かがいくつかのサブモジュールをプッシュするのを忘れることはごく一般的であることに注意してください（これは、初心者が &lt;code&gt;git&lt;/code&gt; に慣れるまで、これはPITAであるため）。</target>
        </trans-unit>
        <trans-unit id="fbe9849172bead15ca97554d7588bd92c11f98ef" translate="yes" xml:space="preserve">
          <source>As @Mark Cheverton's answer correctly pointed out, if the second line isn't used, even if you removed the submodule for now, the remnant .git/modules/the_submodule folder will prevent the same submodule from being added back or replaced in the future. Also, as @VonC mentioned, &lt;code&gt;git rm&lt;/code&gt; will do most of the job on a submodule.</source>
          <target state="translated">@Mark Chevertonの回答が正しく指摘しているように、2行目が使用されていない場合、現時点でサブモジュールを削除しても、残りの.git / modules / the_submoduleフォルダーにより、同じサブモジュールが再び追加されたり、置き換えられたりすることが防止されます。 。 また、@ VonCで述べたように、 &lt;code&gt;git rm&lt;/code&gt; はほとんどの作業をサブモジュールで実行します。</target>
        </trans-unit>
        <trans-unit id="8a56ce8c54478dc506c0263c4ee63a89060e12db" translate="yes" xml:space="preserve">
          <source>As pointed out correctly in the comments and &lt;a href=&quot;https://stackoverflow.com/a/44863971/683218&quot;&gt;other answers&lt;/a&gt;, the two commands (although functionally sufficient to remove a submodule), do leave a trace in the &lt;code&gt;[submodule &quot;the_submodule&quot;]&lt;/code&gt; section of &lt;code&gt;.git/config&lt;/code&gt; (as of July 2017), which can be removed using a third command:</source>
          <target state="translated">コメントや&lt;a href=&quot;https://stackoverflow.com/a/44863971/683218&quot;&gt;その他の回答&lt;/a&gt;で正しく指摘されているように、2つのコマンド（サブモジュールを削除するには機能的に十分です）は、 &lt;code&gt;.git/config&lt;/code&gt; の &lt;code&gt;[submodule &quot;the_submodule&quot;]&lt;/code&gt; セクションにトレースを残します（2017年7月現在）。 3番目のコマンドを使用して削除できます。</target>
        </trans-unit>
        <trans-unit id="c44d79cf1fbed8080ef33f23ace585cb888ec5a0" translate="yes" xml:space="preserve">
          <source>But as of July 2017, &lt;em&gt;step 2&lt;/em&gt; is necessary to remove data in &lt;code&gt;.git/modules/&lt;/code&gt; for otherwise, you can't e.g. add the submodule back in the future.</source>
          <target state="translated">ただし、2017年7月の時点で、 &lt;code&gt;.git/modules/&lt;/code&gt; データを削除するには&lt;em&gt;ステップ2&lt;/em&gt;が必要です。それ以外の場合は、たとえばサブモジュールを後で追加することはできません。</target>
        </trans-unit>
        <trans-unit id="e0928c3d1bff80d43c5ce3a0d3cbbb445490d82d" translate="yes" xml:space="preserve">
          <source>But currently there is no easy way they can tell git they do not care about a submodule anymore and wants to get rid of the local work tree (unless the user knows a lot about submodule internals and removes the &quot;&lt;code&gt;submodule.$name.url&lt;/code&gt;&quot; setting from &lt;code&gt;.git/config&lt;/code&gt; together with the work tree himself).</source>
          <target state="translated">しかし、現在、ユーザーがサブモジュールを気にせず、ローカルの作業ツリーを削除することを望んでいるgitに簡単に伝える方法はありません（ユーザーがサブモジュールの内部についてよく知っていて、 &quot; &lt;code&gt;submodule.$name.url&lt;/code&gt; &quot;を削除しない限り） 。 &lt;code&gt;.git/config&lt;/code&gt; から作業ツリー自体と一緒に設定）。</target>
        </trans-unit>
        <trans-unit id="7babdd9be2896a6b41852600857f85d2a33822a0" translate="yes" xml:space="preserve">
          <source>But the submodule's section in &lt;code&gt;.gitmodules&lt;/code&gt; is left untouched, which is a leftover of the now removed submodule and might irritate users (as opposed to the setting in &lt;code&gt;.git/config&lt;/code&gt;, this must stay as a reminder that the user showed interest in this submodule so it will be repopulated later when an older commit is checked out).</source>
          <target state="translated">ただし、 &lt;code&gt;.gitmodules&lt;/code&gt; のサブモジュールのセクションは変更されません。これは、現在削除されているサブモジュールの残りであり、ユーザーを苛立たせる可能性があります（ &lt;code&gt;.git/config&lt;/code&gt; の設定とは対照的に、これは、ユーザーがこのサブモジュールに関心を示したことを思い出させるものとして残しておく必要があります）そのため、古いコミットがチェックアウトされると、後で再設定されます）。</target>
        </trans-unit>
        <trans-unit id="654ba1186f9f8bc755889fb6230dc270ff5b17f3" translate="yes" xml:space="preserve">
          <source>By the way, is there a reason I can't simply do 
&lt;code&gt;git submodule rm whatever&lt;/code&gt; ?</source>
          <target state="translated">ところで、 &lt;code&gt;git submodule rm whatever&lt;/code&gt; 簡単に実行できない理由はありますか？</target>
        </trans-unit>
        <trans-unit id="e98297a1c3d718ff8261d27aba3f2b66d62691bb" translate="yes" xml:space="preserve">
          <source>Call: &lt;code&gt;git add .gitmodules&lt;/code&gt;</source>
          <target state="translated">呼び出し： &lt;code&gt;git add .gitmodules&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5901d1e3a4cbf3904a5d9fc6f6176b76be6cf36e" translate="yes" xml:space="preserve">
          <source>Call: &lt;code&gt;git rm &amp;lt;path to submodule&amp;gt;&lt;/code&gt;</source>
          <target state="translated">呼び出し： &lt;code&gt;git rm &amp;lt;path to submodule&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7baaa05bcd5f4f1c97b1fec74cb6a7a70bfdad6d" translate="yes" xml:space="preserve">
          <source>Call: &lt;code&gt;git submodule deinit &amp;lt;path to submodule&amp;gt;&lt;/code&gt;</source>
          <target state="translated">呼び出し： &lt;code&gt;git submodule deinit &amp;lt;path to submodule&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f6a34c22b102e752b6415f7f23b75ba181aa11e" translate="yes" xml:space="preserve">
          <source>Cleaning manually up is good, because this way you perhaps detect some things you forgot about.</source>
          <target state="translated">この方法では、おそらくあなたが忘れていたいくつかのものを検出するので、手動でクリーンアップすることは良いことです。</target>
        </trans-unit>
        <trans-unit id="410ae06d82adb99361cf58d1e36f069d269d3801" translate="yes" xml:space="preserve">
          <source>Cleanup things first</source>
          <target state="translated">最初に片付けをすること</target>
        </trans-unit>
        <trans-unit id="1a1873ab51c74e8b39327ee42dade7a407e5a22d" translate="yes" xml:space="preserve">
          <source>Commit</source>
          <target state="translated">Commit</target>
        </trans-unit>
        <trans-unit id="9f949d035d28ec36be524e327a07d367ab7967b9" translate="yes" xml:space="preserve">
          <source>Commit and Push</source>
          <target state="translated">コミットとプッシュ</target>
        </trans-unit>
        <trans-unit id="4aa83793e006e33aa824385f88ae1a9cd0ebe7c6" translate="yes" xml:space="preserve">
          <source>Commit it &lt;code&gt;git commit -m &quot;Removed submodule xxx&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;git commit -m &quot;Removed submodule xxx&quot;&lt;/code&gt; コミットします</target>
        </trans-unit>
        <trans-unit id="cf609498bbd9f449c87f10c8fb42468b310b2435" translate="yes" xml:space="preserve">
          <source>Commit it &lt;code&gt;git commit -m &quot;Removed submodule xxx&quot;&lt;/code&gt; and push.</source>
          <target state="translated">&lt;code&gt;git commit -m &quot;Removed submodule xxx&quot;&lt;/code&gt; をコミットしてプッシュします。</target>
        </trans-unit>
        <trans-unit id="e179e8a2bc74ae797f87c8700661844fbbfa36a7" translate="yes" xml:space="preserve">
          <source>Commit the changes:</source>
          <target state="translated">変更をコミットします。</target>
        </trans-unit>
        <trans-unit id="df62bf4beff627a092931fe581233752c41b4f32" translate="yes" xml:space="preserve">
          <source>Commit the superproject</source>
          <target state="translated">スーパープロジェクトをコミットする</target>
        </trans-unit>
        <trans-unit id="d41a98cd75e2192cb8a8edadfa294e67c7350684" translate="yes" xml:space="preserve">
          <source>Complain when for a submodule given on the command line the url setting can't be found in &lt;code&gt;.git/config&lt;/code&gt;, but nonetheless don't fail.</source>
          <target state="translated">コマンドラインで指定されたサブモジュールの場合、 &lt;code&gt;.git/config&lt;/code&gt; にURL設定が見つからない場合でも文句を言いますが、それでも失敗しません。</target>
        </trans-unit>
        <trans-unit id="2ad47fcc2584e4323df21d5330c0c6a37ff5c902" translate="yes" xml:space="preserve">
          <source>Create bash script file in the &lt;code&gt;$HOME&lt;/code&gt; dir named i.e. &lt;code&gt;remove_submodule.sh&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;$HOME&lt;/code&gt; ディレクトリにie &lt;code&gt;remove_submodule.sh&lt;/code&gt; という名前のbashスクリプトファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="87f8da7866a67dbf2c107e2520b24b799c535746" translate="yes" xml:space="preserve">
          <source>Currently using &quot;&lt;code&gt;git rm&lt;/code&gt;&quot; on a submodule removes the submodule's work tree from that of the superproject and the gitlink from the index.</source>
          <target state="translated">現在サブモジュールで「 &lt;code&gt;git rm&lt;/code&gt; 」を使用すると、スーパープロジェクトのワークツリーからサブモジュールの作業ツリーが削除され、インデックスからgitlinkが削除されます。</target>
        </trans-unit>
        <trans-unit id="257afc1db76dcf4ed31ec80af396bee086359a49" translate="yes" xml:space="preserve">
          <source>Delete the now untracked submodule files</source>
          <target state="translated">現在追跡されていないサブモジュールファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="714c675ee2c0ed84cf83a604c45a55a7ef4720f4" translate="yes" xml:space="preserve">
          <source>Delete the now untracked submodule files:</source>
          <target state="translated">現在追跡されていないサブモジュールのファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="6a1e5a18768e5ee86609c2887a160c28a23f9af9" translate="yes" xml:space="preserve">
          <source>Delete the relevant line from the .gitmodules file:</source>
          <target state="translated">.gitmodulesファイルから該当する行を削除します。</target>
        </trans-unit>
        <trans-unit id="fbfcbc9b0c44d9483f1dcc147e847a0cb6588380" translate="yes" xml:space="preserve">
          <source>Delete the relevant section from .git/config</source>
          <target state="translated">.gitconfig から関連するセクションを削除します。</target>
        </trans-unit>
        <trans-unit id="51a16c4540e80245374ed29ce8500a4673d30257" translate="yes" xml:space="preserve">
          <source>Delete the relevant section from &lt;code&gt;.git/config&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.git/config&lt;/code&gt; から関連するセクションを削除します。</target>
        </trans-unit>
        <trans-unit id="dfea2604ab2ac62ffda9e7aceae892ee4794dc80" translate="yes" xml:space="preserve">
          <source>Delete the relevant section from the &lt;code&gt;.gitmodules&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;.gitmodules&lt;/code&gt; ファイルから関連セクションを削除します。</target>
        </trans-unit>
        <trans-unit id="29c3105e21ac6e88dacf4911f8ffbeec430aa89e" translate="yes" xml:space="preserve">
          <source>Delete unused files:</source>
          <target state="translated">未使用のファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="62700a7a416a31504d7e646aee6bf8684aedf1f1" translate="yes" xml:space="preserve">
          <source>Do &lt;code&gt;rm -rf .git/modules/path_to_submodule&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;rm -rf .git/modules/path_to_submodule&lt;/code&gt; を実行します</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="b32ef340ea4702fd5f41dbe4001671d76174ef71" translate="yes" xml:space="preserve">
          <source>Explanation</source>
          <target state="translated">Explanation</target>
        </trans-unit>
        <trans-unit id="f997879d5d21701a4d5f702a7ece2ea818b0d8e7" translate="yes" xml:space="preserve">
          <source>FYI you probably guessed it: &lt;a href=&quot;https://github.com/hilbix/&quot;&gt;hilbix&lt;/a&gt; is my GitHub account.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/hilbix/&quot;&gt;ちなみに&lt;/a&gt; 、ご想像のとおり 、 hilbixは私のGitHubアカウントです。</target>
        </trans-unit>
        <trans-unit id="78809aa187b9eddc5af4246fb332d13bee6ab0ff" translate="yes" xml:space="preserve">
          <source>Fail if the current work tree contains modifications unless forced.</source>
          <target state="translated">現在の作業ツリーに変更が含まれている場合は、強制されない限り失敗します。</target>
        </trans-unit>
        <trans-unit id="4c1a503f73f8e093aef972d62aecd04aa4fe3052" translate="yes" xml:space="preserve">
          <source>For old versions of git (circa ~1.8.5) use:</source>
          <target state="translated">古いバージョンの git (約 1.8.5)では、これを使用します。</target>
        </trans-unit>
        <trans-unit id="dc74bf328d942c8a3d1b6a29d937e5fc3e7a9b51" translate="yes" xml:space="preserve">
          <source>For the benefit of the reader, this here tries to sum it up and give a step-by-step guide on how to do it if things do not work as expected.  Following is the &lt;strong&gt;tested and safe way&lt;/strong&gt; for &lt;code&gt;git&lt;/code&gt; version &lt;code&gt;2.17&lt;/code&gt; and above &lt;strong&gt;to get rid of a submodule&lt;/strong&gt;:</source>
          <target state="translated">読者の利益のために、ここではそれを要約し、物事が期待どおりに機能しない場合にそれを行う方法について段階的なガイドを提供することを試みます。 以下は、 &lt;strong&gt;サブモジュールを取り除く&lt;/strong&gt;ための &lt;code&gt;git&lt;/code&gt; バージョン &lt;code&gt;2.17&lt;/code&gt; 以降の&lt;strong&gt;テスト済みで安全な方法&lt;/strong&gt;です。</target>
        </trans-unit>
        <trans-unit id="5fc8ccd64556db2c1ca7c48a472d9aef3748b47b" translate="yes" xml:space="preserve">
          <source>For this, most answers suggest using &lt;code&gt;git submodule deinit&lt;/code&gt;. I find it more explicit and less confusing to use &lt;code&gt;git config -f .git/config --remove-section&lt;/code&gt;. According to the &lt;a href=&quot;https://git-scm.com/docs/git-submodule&quot;&gt;git-submodule documentation&lt;/a&gt;, &lt;code&gt;git deinit&lt;/code&gt;:</source>
          <target state="translated">このため、ほとんどの回答は &lt;code&gt;git submodule deinit&lt;/code&gt; 使用を提案しています。 私は &lt;code&gt;git config -f .git/config --remove-section&lt;/code&gt; を使用する方がより明確で混乱しにくいと思います。 &lt;code&gt;git deinit&lt;/code&gt; &lt;a href=&quot;https://git-scm.com/docs/git-submodule&quot;&gt;サブモジュールのドキュメント&lt;/a&gt;によると、 git deinit ：</target>
        </trans-unit>
        <trans-unit id="25d21c4ba0be8d54505fc4fc64a9c1a452c8b3ae" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://git-scm.com/docs/git-submodule#git-submodule-deinit&quot;&gt;git docs&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://git-scm.com/docs/git-submodule#git-submodule-deinit&quot;&gt;git docs&lt;/a&gt;から：</target>
        </trans-unit>
        <trans-unit id="497761ef6cf11e80b06fa91d23a87e5980756bab" translate="yes" xml:space="preserve">
          <source>Help those users by providing a '&lt;strong&gt;&lt;code&gt;deinit&lt;/code&gt;&lt;/strong&gt;' command.</source>
          <target state="translated">' &lt;strong&gt; &lt;code&gt;deinit&lt;/code&gt; &lt;/strong&gt; 'コマンドを提供することにより、それらのユーザーを支援します。</target>
        </trans-unit>
        <trans-unit id="55d1b528fd36bb87622cfda7fa67d527253631cc" translate="yes" xml:space="preserve">
          <source>Here are the 4 steps that I found necessary or useful (important ones first):</source>
          <target state="translated">私が必要だと思った、あるいは役に立つと思った4つのステップをご紹介します(最初に重要なものを紹介します)。</target>
        </trans-unit>
        <trans-unit id="cf9c0a6a5ddd62dcd8d1f5fdd899db98657132c7" translate="yes" xml:space="preserve">
          <source>Here is what I did :</source>
          <target state="translated">ここに私がしたことがあります。</target>
        </trans-unit>
        <trans-unit id="765108d3c3a16b0ea93f264353cf3253ae6aad85" translate="yes" xml:space="preserve">
          <source>How do I remove a Git submodule?</source>
          <target state="translated">Git のサブモジュールを削除するには?</target>
        </trans-unit>
        <trans-unit id="8f261ccf8b516deafc68ea6154e6f9fac50dc5ad" translate="yes" xml:space="preserve">
          <source>How do I remove a submodule</source>
          <target state="translated">サブモジュールを削除するには</target>
        </trans-unit>
        <trans-unit id="50c6462f090c77763c128a0c36efcefc6c304783" translate="yes" xml:space="preserve">
          <source>However if you removed the cached directory, both different checkouts will stumble upon each other, because you will not use the &lt;code&gt;--name&lt;/code&gt; options, right?  So each time you do the checkout you perhaps have to remove the &lt;code&gt;.git/modules/&amp;lt;module&amp;gt;/&lt;/code&gt; directory again and again.  This is extremely cumbersome and makes it hard to use something like &lt;code&gt;git bisect&lt;/code&gt;.</source>
          <target state="translated">ただし、キャッシュされたディレクトリを削除した場合、 &lt;code&gt;--name&lt;/code&gt; オプションを使用しないため、両方の異なるチェックアウトが互いにぶつかります。 したがって、チェックアウトを実行するたびに、おそらく &lt;code&gt;.git/modules/&amp;lt;module&amp;gt;/&lt;/code&gt; ディレクトリを何度も削除する必要があります。 これは非常に扱いにくく、 &lt;code&gt;git bisect&lt;/code&gt; などの使用が困難になります。</target>
        </trans-unit>
        <trans-unit id="53aab762c31e6f4ae6d674356840ca0ce7056c02" translate="yes" xml:space="preserve">
          <source>I found &lt;code&gt;deinit&lt;/code&gt; works good for me:</source>
          <target state="translated">&lt;code&gt;deinit&lt;/code&gt; がうまくいくことがわかりました：</target>
        </trans-unit>
        <trans-unit id="860bf7d1aa2ed8627981b87e00d3554e84998cec" translate="yes" xml:space="preserve">
          <source>I had to take John Douthat's steps one step further and &lt;code&gt;cd&lt;/code&gt; into the submodule's directory, and then remove the Git repository:</source>
          <target state="translated">John Douthatの手順をさらに1歩進め、サブモジュールのディレクトリに &lt;code&gt;cd&lt;/code&gt; してから、Gitリポジトリを削除する必要がありました。</target>
        </trans-unit>
        <trans-unit id="015a7a4c095a9a2c77ccb5195c738f2b21bbae76" translate="yes" xml:space="preserve">
          <source>I just found the .submodule (forgot exact name) hidden file, it has a list... you can erase them individually that way. I just had one, so I deleted it. Simple, but it might mess up Git, since I don't know if anything's attached to the submodule. Seems ok so far, aside from libetpan's usual upgrade issue, but that's (hopefully) unrelated.</source>
          <target state="translated">さっき.submodule(正確な名前忘れた)の隠しファイルを見つけたんだけど、リストがあって...その方法で個別に消せるんだよね。ちょうど1つあったので削除しました。シンプルですが、Git を混乱させてしまうかもしれません。libetpan のいつものアップグレード問題を除けば、今のところ問題なさそうですが、それは(うまくいけば)無関係です。</target>
        </trans-unit>
        <trans-unit id="a6afd773ce6f263c31511a06f44b6de5f6167e18" translate="yes" xml:space="preserve">
          <source>I recently find out a git project which include many useful git related command: &lt;a href=&quot;https://github.com/visionmedia/git-extras&quot;&gt;https://github.com/visionmedia/git-extras&lt;/a&gt;</source>
          <target state="translated">私は最近、多くの便利なgit関連コマンドを含むgitプロジェクトを見つけました： &lt;a href=&quot;https://github.com/visionmedia/git-extras&quot;&gt;https&lt;/a&gt; : //github.com/visionmedia/git-extras</target>
        </trans-unit>
        <trans-unit id="6387706717b8e1c3e0e13b7909685148dd6383e5" translate="yes" xml:space="preserve">
          <source>I think there is a very dangerous part in the documentation of &lt;code&gt;git submodule&lt;/code&gt;.
  It recommends to remove &lt;code&gt;$GIT_DIR/modules/&amp;lt;name&amp;gt;/&lt;/code&gt; yourself.
  &lt;strong&gt;In my understanding this is not only plain wrong, it is extremely dangerous and provokes major headaches in future!&lt;/strong&gt;  See below.</source>
          <target state="translated">&lt;code&gt;git submodule&lt;/code&gt; ドキュメントには非常に危険な部分があると思います。 &lt;code&gt;$GIT_DIR/modules/&amp;lt;name&amp;gt;/&lt;/code&gt; 自分で削除することをお勧めします。 &lt;strong&gt;私の理解では、これは明らかに間違っているだけでなく、非常に危険であり、将来的に大きな頭痛の種を引き起こします！&lt;/strong&gt; 下記参照。</target>
        </trans-unit>
        <trans-unit id="89842fa02734c275d35ae3b8be04b64bb240e814" translate="yes" xml:space="preserve">
          <source>I've created a bash script to ease the removal process. It also checks whether there are changes in the repo left unsaved and asks for confirmation. 
It has been tested on &lt;code&gt;os x&lt;/code&gt; would be interesting to know if it works as is on common linux distros as well:</source>
          <target state="translated">削除プロセスを簡単にするためにbashスクリプトを作成しました。 また、保存されていないレポジトリに変更があるかどうかを確認し、確認を求めます。 これは &lt;code&gt;os x&lt;/code&gt; でテストされており、一般的なLinuxディストリビューションでも同様に機能するかどうかを知るのは興味深いでしょう。</target>
        </trans-unit>
        <trans-unit id="c69ba17ec241247896c43f8648b114e49f41ff06" translate="yes" xml:space="preserve">
          <source>If git complains about some leftovers, &lt;code&gt;git status&lt;/code&gt; and &lt;code&gt;git clean -ixfd&lt;/code&gt; is your friend</source>
          <target state="translated">gitが残り物について文句を言う場合、 &lt;code&gt;git status&lt;/code&gt; と &lt;code&gt;git clean -ixfd&lt;/code&gt; があなたの友達です</target>
        </trans-unit>
        <trans-unit id="63ee2337454055e2c5a1df3a99c3ce46401a6507" translate="yes" xml:space="preserve">
          <source>If git complains about unsaved stuff, commit and push it somewhere safe.</source>
          <target state="translated">git が保存されていないものについて文句を言ってきたら、コミットして安全な場所にプッシュします。</target>
        </trans-unit>
        <trans-unit id="3f3ed29bdef5da858818084524bd6488f2ea957a" translate="yes" xml:space="preserve">
          <source>If on Windows ignore the first line and replace &lt;code&gt;&quot;$submodule&quot;&lt;/code&gt; with the Windows way of a properly specified path to the submodule.  (I am not Windows)</source>
          <target state="translated">Windowsの場合、最初の行を無視して、 &lt;code&gt;&quot;$submodule&quot;&lt;/code&gt; をサブモジュールへの適切に指定されたパスのWindowsの方法で置き換えます。 （私はWindowsではありません）</target>
        </trans-unit>
        <trans-unit id="831eb64e8247de1446e4cb7a4cc379e459ac5988" translate="yes" xml:space="preserve">
          <source>If the submodule was &lt;em&gt;accidentally&lt;/em&gt; added because you added, committed and pushed a folder that was already a Git repository (contained &lt;code&gt;.git&lt;/code&gt;), you won&amp;rsquo;t have a &lt;code&gt;.gitmodules&lt;/code&gt; file to edit, or anything in &lt;code&gt;.git/config&lt;/code&gt;. &lt;a href=&quot;http://humansky.com/2011/12/accidentally-adding-a-git-submodule/&quot;&gt;In this case all you need&lt;/a&gt; is :</source>
          <target state="translated">すでにGitリポジトリ（ &lt;code&gt;.git&lt;/code&gt; が含まれている）であるフォルダーを追加、コミット、およびプッシュしたためにサブモジュールが&lt;em&gt;誤って&lt;/em&gt;追加された場合、編集する &lt;code&gt;.gitmodules&lt;/code&gt; ファイル、または &lt;code&gt;.git/config&lt;/code&gt; には何もありません。 &lt;a href=&quot;http://humansky.com/2011/12/accidentally-adding-a-git-submodule/&quot;&gt;この場合、必要なの&lt;/a&gt;は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="15834ba1f4b1b4ac03270dfe95e309670b97a32b" translate="yes" xml:space="preserve">
          <source>If this does not work for you, see below.</source>
          <target state="translated">これが効かない場合は、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="530c66395f376e61c9a49da5c6b39d22d6fa771c" translate="yes" xml:space="preserve">
          <source>If this fails</source>
          <target state="translated">これが失敗した場合</target>
        </trans-unit>
        <trans-unit id="25df07c5ef99d18de088a5274381d9f236746a74" translate="yes" xml:space="preserve">
          <source>If you forget that last step, and try to add what was a submodule as a regular directory, you would get error message like:</source>
          <target state="translated">この最後のステップを忘れて、サブモジュールだったものを通常のディレクトリとして追加しようとすると、以下のようなエラーメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="2358adfd9cc20e715b8926c85ec13e8289fae8a5" translate="yes" xml:space="preserve">
          <source>If you have just added the submodule, and for example, you simply added the wrong submodule or you added it to the wrong place, simply do &lt;code&gt;git stash&lt;/code&gt; then delete the folder. This is assuming that adding the submodule is the only thing you did in the recent repo.</source>
          <target state="translated">サブモジュールを追加したばかりで、たとえば、間違ったサブモジュールを追加したり、間違った場所に追加したりした場合は、単に &lt;code&gt;git stash&lt;/code&gt; を実行してからフォルダーを削除します。 これは、サブモジュールの追加が最近のリポジトリで行った唯一のものであることを前提としています。</target>
        </trans-unit>
        <trans-unit id="d2e51f4f83fc5dbf580e4b6e554dde8ca0e0e720" translate="yes" xml:space="preserve">
          <source>If you'll write on git's mailing list probably someone will do a shell script for you.</source>
          <target state="translated">git のメーリングリストに書けば、おそらく誰かがシェルスクリプトを作ってくれるでしょう。</target>
        </trans-unit>
        <trans-unit id="3483406dcae7d71a00f29eb55a64a55412e5b296" translate="yes" xml:space="preserve">
          <source>If your machine is too old there is no &lt;code&gt;submodule deinit&lt;/code&gt; in your &lt;code&gt;git&lt;/code&gt;.  If you do not want (or can) update your &lt;code&gt;git&lt;/code&gt;, then just use another machine with a newer &lt;code&gt;git&lt;/code&gt;!  &lt;code&gt;git&lt;/code&gt; is meant to be fully distributed, so you can use another &lt;code&gt;git&lt;/code&gt; to get the job done:</source>
          <target state="translated">マシンが古すぎる場合は、 &lt;code&gt;git&lt;/code&gt; に &lt;code&gt;submodule deinit&lt;/code&gt; がありません。 &lt;code&gt;git&lt;/code&gt; を更新したくない（または更新できない）場合は、新しい &lt;code&gt;git&lt;/code&gt; の別のマシンを使用してください。 &lt;code&gt;git&lt;/code&gt; は完全に配布されることを目的としているため、別の &lt;code&gt;git&lt;/code&gt; を使用して作業を完了できます。</target>
        </trans-unit>
        <trans-unit id="e52bb58a973aad3c8d92637982bc99be4938b956" translate="yes" xml:space="preserve">
          <source>In addition to the recommendations, I also had to &lt;code&gt;rm -Rf .git/modules/path/to/submodule&lt;/code&gt; to be able to add a new submodule with the same name (in my case I was replacing a fork with the original)</source>
          <target state="translated">推奨事項に加えて、同じ名前の新しいサブモジュールを追加できるように &lt;code&gt;rm -Rf .git/modules/path/to/submodule&lt;/code&gt; も実行する必要がありました（私の場合、フォークを元のフォークで置き換えていました）</target>
        </trans-unit>
        <trans-unit id="7779d279428a771a1db5928faf3789b7b21461dc" translate="yes" xml:space="preserve">
          <source>In case you need to do it in &lt;strong&gt;one line command&lt;/strong&gt; with bash script as below:</source>
          <target state="translated">以下のようにbashスクリプトを使用して&lt;strong&gt;1行のコマンド&lt;/strong&gt;で実行する必要がある場合：</target>
        </trans-unit>
        <trans-unit id="ac8eed6985381ac4f5ec9d9169a82442f3ebdd9b" translate="yes" xml:space="preserve">
          <source>In latest git just 4 operation is needed to remove the git submodule.</source>
          <target state="translated">最新のgitでは、gitサブモジュールを削除するのに必要な操作はたったの4つです。</target>
        </trans-unit>
        <trans-unit id="a79274d6836343740dfbb485e2f71c2afdbfd0cd" translate="yes" xml:space="preserve">
          <source>Install it and type :</source>
          <target state="translated">それをインストールして入力します。</target>
        </trans-unit>
        <trans-unit id="beb8e0516d42815bd918ce3bb6abe132187c49bc" translate="yes" xml:space="preserve">
          <source>It is a call to a C function.</source>
          <target state="translated">C言語の関数の呼び出しです。</target>
        </trans-unit>
        <trans-unit id="b306748ea8f10ffc7822981d50e5d68932480da1" translate="yes" xml:space="preserve">
          <source>It is a good idea to do &lt;code&gt;git rebase HEAD&lt;/code&gt; first and &lt;code&gt;git commit&lt;/code&gt;
at the end, if you put this in a script.</source>
          <target state="translated">これをスクリプトに入れる場合は、最初に &lt;code&gt;git rebase HEAD&lt;/code&gt; を &lt;code&gt;git commit&lt;/code&gt; し、最後にgit commitを実行することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="74b86000d17877d210cbb561f5db624a7d0d2cd7" translate="yes" xml:space="preserve">
          <source>It's easy if you start to become accustomed to powerful &lt;code&gt;git&lt;/code&gt; features like this.</source>
          <target state="translated">このような強力な &lt;code&gt;git&lt;/code&gt; 機能に慣れ始めたら、簡単です。</target>
        </trans-unit>
        <trans-unit id="c9bba89555d0112d1cb8f2952c0f07cfbc5b5ebf" translate="yes" xml:space="preserve">
          <source>Just a note. Since git 1.8.5.2, two commands will do:</source>
          <target state="translated">ちょっとしたメモです。git 1.8.5.2からは、2つのコマンドで可能です。</target>
        </trans-unit>
        <trans-unit id="2fe657eb0e4abbfb951e77f1649241b3c367fb35" translate="yes" xml:space="preserve">
          <source>Just to clarify, &lt;code&gt;the_submodule&lt;/code&gt; is the relative path of the submodule inside the project. For example, it's &lt;code&gt;subdir/my_submodule&lt;/code&gt; if the submodule is inside a subdirectory &lt;code&gt;subdir&lt;/code&gt;.</source>
          <target state="translated">明確にするために、 &lt;code&gt;the_submodule&lt;/code&gt; はプロジェクト内のサブモジュールの相対パスです。 たとえば、サブモジュールがサブディレクトリ &lt;code&gt;subdir&lt;/code&gt; 内にある場合、それは &lt;code&gt;subdir/my_submodule&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6d8e4195bff1e4526d17a64f16f4449c001ff7c3" translate="yes" xml:space="preserve">
          <source>Last but not least, if you don't  &lt;code&gt;git commit&lt;/code&gt;, you will/may get an error when doing &lt;code&gt;git submodule summary&lt;/code&gt; (as of git 2.7):</source>
          <target state="translated">最後に重要なことですが、 &lt;code&gt;git commit&lt;/code&gt; を実行しないと、 &lt;code&gt;git submodule summary&lt;/code&gt; 実行するときにエラーが発生します（git 2.7以降）。</target>
        </trans-unit>
        <trans-unit id="ea08f333ccafd808414fb3cfbebb5465d8af0771" translate="yes" xml:space="preserve">
          <source>Let &quot;&lt;code&gt;git rm&lt;/code&gt;&quot; help the user by not only removing the submodule from the work tree but by also removing the &quot;&lt;code&gt;submodule.&amp;lt;submodule name&amp;gt;&lt;/code&gt;&quot; section from the &lt;code&gt;.gitmodules&lt;/code&gt; file and stage both.</source>
          <target state="translated">作業ツリーからサブモジュールを削除するだけでなく、 &lt;code&gt;.gitmodules&lt;/code&gt; ファイルから「 &lt;code&gt;submodule.&amp;lt;submodule name&amp;gt;&lt;/code&gt; 」セクションも削除して、両方をステージングすることで、「 &lt;code&gt;git rm&lt;/code&gt; 」がユーザーを助けるようにします。</target>
        </trans-unit>
        <trans-unit id="9efaf3094c5ff7e5ecd0c6fb08b5f4842538a677" translate="yes" xml:space="preserve">
          <source>No options.  Nothing dangerous.  And do not even consider doing more!</source>
          <target state="translated">選択肢はない 危険なことは何もない それ以上のことは考えるな!</target>
        </trans-unit>
        <trans-unit id="da7038b6159ab37164aeb7442907c881108aff7e" translate="yes" xml:space="preserve">
          <source>Note that</source>
          <target state="translated">以下のことに注意してください。</target>
        </trans-unit>
        <trans-unit id="71305b94bd982a19edb0a9d099d629b36b66081c" translate="yes" xml:space="preserve">
          <source>Note that if you cannot &lt;code&gt;ssh&lt;/code&gt; in, there are trainloads of ways to transport &lt;code&gt;git&lt;/code&gt; repositories.  You can copy your worktree on some USB stick (including the &lt;code&gt;.git&lt;/code&gt; directory), and clone from the stick.  Clone the copy, just to get things in a clean fashion again.  This might be a PITA, in case your submodules are not accessible from othermachine directly.  But there is a solution for this, too:</source>
          <target state="translated">&lt;code&gt;ssh&lt;/code&gt; でログインできない場合は、 &lt;code&gt;git&lt;/code&gt; リポジトリを転送する方法が多数あることに注意してください。 ワークツリーをUSBスティック（ &lt;code&gt;.git&lt;/code&gt; ディレクトリを含む）にコピーし、スティックからクローンを作成できます。 コピーを複製して、もう一度クリーンな状態にしてください。 他のマシンからサブモジュールに直接アクセスできない場合、これはPITAである可能性があります。 しかし、これに対する解決策もあります：</target>
        </trans-unit>
        <trans-unit id="f73de20c626e01db20a21e29eb576ab8a7c5dbc6" translate="yes" xml:space="preserve">
          <source>Note: since Git 2.17 (Q2 2018), git submodule deinit is no longer a shell script.</source>
          <target state="translated">注意:Git 2.17 (2018年第2四半期)から git submodule deinit はシェルスクリプトではなくなりました。</target>
        </trans-unit>
        <trans-unit id="29ccc2aa6e79b7e8592eae231fb1715b934d0f3e" translate="yes" xml:space="preserve">
          <source>Noticed nobody posted manual erasing, so added</source>
          <target state="translated">誰も手動消去を投稿していないことに気づいたので、追加しました。</target>
        </trans-unit>
        <trans-unit id="24331d380c4850094ac60dc4967aa72e501c89ca" translate="yes" xml:space="preserve">
          <source>Now cleanup things, until &lt;code&gt;git status&lt;/code&gt; is clean again.  You are able to do so, because you have had it clean before, thanks to the first step.</source>
          <target state="translated">&lt;code&gt;git status&lt;/code&gt; が再びクリーンになるまで、クリーンアップします。 最初のステップのおかげで、以前はきれいにしていたので、それを行うことができます。</target>
        </trans-unit>
        <trans-unit id="4b455356f9aebbd6e08e4d490aecff866a4f38a8" translate="yes" xml:space="preserve">
          <source>Now do the submodule stuff</source>
          <target state="translated">では、サブモジュールの処理を行います。</target>
        </trans-unit>
        <trans-unit id="551fa99714c5e4eb749f5a69b500d469323b45b9" translate="yes" xml:space="preserve">
          <source>Perhaps there are more ways to fail I am not aware of (I am just some &lt;code&gt;git&lt;/code&gt; power-user.)</source>
          <target state="translated">おそらく、私が気づいていない失敗する方法が他にもあるでしょう（私は &lt;code&gt;git&lt;/code&gt; パワーユーザーの一部です）。</target>
        </trans-unit>
        <trans-unit id="fb5875b7fb04736c05b7eaa5c63ab6e73168f6c6" translate="yes" xml:space="preserve">
          <source>Possible fixes follow.</source>
          <target state="translated">可能性のある修正は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="512a47cd62f589f1f1588966b448ad0fa8c1f9bd" translate="yes" xml:space="preserve">
          <source>Probably people want to remove the cached repository, because they are afraid to run into a problem later.  This is true, but running into that &quot;problem&quot; is the correct way to solve it!  Because the fix is easy, and done right you will be able to live happily ever after.  This avoids more cumbersome trouble than when you remove the data yourself.</source>
          <target state="translated">おそらく人々は、後で問題にぶつかるのを恐れて、キャッシュされたリポジトリを削除したいと思っているのでしょう。これは本当ですが、その &quot;問題 &quot;に遭遇することが、それを解決するための正しい方法なのです。なぜなら、修正は簡単で、正しい方法で行えば、その後も幸せに暮らすことができるからです。自分でデータを削除するときよりも、面倒なトラブルを避けることができます。</target>
        </trans-unit>
        <trans-unit id="6450755e9b2094889e9a11aab2fd243d8dd57e03" translate="yes" xml:space="preserve">
          <source>Put that in your git config, and then you can do: &lt;code&gt;git rms path/to/submodule&lt;/code&gt;</source>
          <target state="translated">それをgit configに入れて、次のようにします： &lt;code&gt;git rms path/to/submodule&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8325bd509f9d03a3fed169c6a3c996dda82f932" translate="yes" xml:space="preserve">
          <source>Remove config entries:</source>
          <target state="translated">設定エントリを削除します。</target>
        </trans-unit>
        <trans-unit id="c2e7934f6d851cf78cd268e754efa79a5f69d90e" translate="yes" xml:space="preserve">
          <source>Remove corresponding entry in  &lt;code&gt;.gitmodules&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.gitmodules&lt;/code&gt; の対応するエントリを削除する</target>
        </trans-unit>
        <trans-unit id="52edaaa65838b9618a0c45f5344063667c5304f4" translate="yes" xml:space="preserve">
          <source>Remove directory from index:</source>
          <target state="translated">インデックスからディレクトリを削除します。</target>
        </trans-unit>
        <trans-unit id="50152eefea72779f07e643f78685e467a7b57e56" translate="yes" xml:space="preserve">
          <source>Remove the corresponding entry in  &lt;code&gt;.gitmodules&lt;/code&gt; file. Entry might be like mentioned below</source>
          <target state="translated">&lt;code&gt;.gitmodules&lt;/code&gt; ファイル内の対応するエントリを削除します。 エントリーは以下のようになるかもしれません</target>
        </trans-unit>
        <trans-unit id="90cea0f669d7575f5dbf4d99f3d77288b6929621" translate="yes" xml:space="preserve">
          <source>Remove the corresponding entry in &lt;code&gt;.git/config&lt;/code&gt; file. Entry might be like mentioned below</source>
          <target state="translated">&lt;code&gt;.git/config&lt;/code&gt; ファイルの対応するエントリを削除します。 エントリーは以下のようになるかもしれません</target>
        </trans-unit>
        <trans-unit id="9bf85edce9928368050f04396df441a974e0df09" translate="yes" xml:space="preserve">
          <source>Remove the section from &lt;code&gt;.gitmodules&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.gitmodules&lt;/code&gt; からセクションを削除する</target>
        </trans-unit>
        <trans-unit id="fea3115915a43e8381b5ea1504502fbaec6ae450" translate="yes" xml:space="preserve">
          <source>Remove the submodule directory &lt;code&gt;git rm --cached &amp;lt;path_to_submodule&amp;gt;&lt;/code&gt;</source>
          <target state="translated">サブモジュールディレクトリ &lt;code&gt;git rm --cached &amp;lt;path_to_submodule&amp;gt;&lt;/code&gt; を削除します</target>
        </trans-unit>
        <trans-unit id="2fe024baab888ced8538357fa9639436e266a39a" translate="yes" xml:space="preserve">
          <source>Remove the submodule directory &lt;code&gt;git rm --cached &amp;lt;path_to_submodule&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">サブモジュールディレクトリ &lt;code&gt;git rm --cached &amp;lt;path_to_submodule&amp;gt;&lt;/code&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="69c0d47518c8eba1d94b84e1b1c7fe35090d69e9" translate="yes" xml:space="preserve">
          <source>Remove the submodule files from the working tree and index:</source>
          <target state="translated">作業ツリーとインデックスからサブモジュールファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="e528120a26c9506a34107af57b5db40ff39a9cee" translate="yes" xml:space="preserve">
          <source>Remove the submodule's &lt;code&gt;.git&lt;/code&gt; directory:</source>
          <target state="translated">サブモジュールの &lt;code&gt;.git&lt;/code&gt; ディレクトリを削除します。</target>
        </trans-unit>
        <trans-unit id="4c539c37dcddedb6eaa766dd31e83115153d8021" translate="yes" xml:space="preserve">
          <source>Removing git submodule</source>
          <target state="translated">git サブモジュールの削除</target>
        </trans-unit>
        <trans-unit id="247f6e4943c76c92b5c6c8d51b7623da37673dc0" translate="yes" xml:space="preserve">
          <source>Run:</source>
          <target state="translated">Run:</target>
        </trans-unit>
        <trans-unit id="92c7ed21c91bb0dc58af31a7a7b3156b9c9355d2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/git/git/commit/2e612731b55f1a83fb5b7f4ecb9391f0cba63cb2&quot;&gt;commit 2e61273&lt;/a&gt;, &lt;a href=&quot;https://github.com/git/git/commit/13424764db3273091d136bd470cf14852255c98c&quot;&gt;commit 1342476&lt;/a&gt; (14 Jan 2018) by &lt;a href=&quot;https://github.com/pratham-pc&quot;&gt;Prathamesh Chavan (&lt;code&gt;pratham-pc&lt;/code&gt;)&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/pratham-pc&quot;&gt;Prathamesh Chavan（ &lt;code&gt;pratham-pc&lt;/code&gt; ）による&lt;/a&gt; &lt;a href=&quot;https://github.com/git/git/commit/2e612731b55f1a83fb5b7f4ecb9391f0cba63cb2&quot;&gt;commit 2e61273&lt;/a&gt; 、 &lt;a href=&quot;https://github.com/git/git/commit/13424764db3273091d136bd470cf14852255c98c&quot;&gt;commit 1342476&lt;/a&gt; （2018年1月14日）を参照してください。</target>
        </trans-unit>
        <trans-unit id="2eb27c67a5a0f682799c799740fd38e1fc56c1e2" translate="yes" xml:space="preserve">
          <source>See also : &lt;a href=&quot;https://git.wiki.kernel.org/index.php/GitSubmoduleTutorial#Removal&quot;&gt;Alternative guide lines&lt;/a&gt;</source>
          <target state="translated">参照： &lt;a href=&quot;https://git.wiki.kernel.org/index.php/GitSubmoduleTutorial#Removal&quot;&gt;代替ガイドライン&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f86a264719e3e3b19e7fda40b65ea0f4de2b04fc" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;path_to_submodule&lt;/code&gt; var (no trailing slash):</source>
          <target state="translated">&lt;code&gt;path_to_submodule&lt;/code&gt; 変数を設定します（末尾のスラッシュなし）：</target>
        </trans-unit>
        <trans-unit id="ac5e420135368e6e8685950b68810f791c6d3a36" translate="yes" xml:space="preserve">
          <source>Set path_to_submodule var (no trailing slash):</source>
          <target state="translated">path_to_submodule varを設定します。</target>
        </trans-unit>
        <trans-unit id="c4c57eaf6511aa0b1778e9f337c36953c575794b" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://github.com/git/git/blob/v1.8.3-rc0/Documentation/RelNotes/1.8.3.txt#L135-L137&quot;&gt;git1.8.3 (April 22d, 2013)&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/git/git/blob/v1.8.3-rc0/Documentation/RelNotes/1.8.3.txt#L135-L137&quot;&gt;git1.8.3（2013年4月22日）&lt;/a&gt;以降：</target>
        </trans-unit>
        <trans-unit id="7aea01fb7e0a326873472417fd77f1cf9f6130f8" translate="yes" xml:space="preserve">
          <source>Since git1.8.5, the &lt;code&gt;git rm&lt;/code&gt; takes &lt;em&gt;also&lt;/em&gt; care of the:</source>
          <target state="translated">git1.8.5以降、 &lt;code&gt;git rm&lt;/code&gt; は次のもの&lt;em&gt;も&lt;/em&gt;処理します。</target>
        </trans-unit>
        <trans-unit id="593dfbffe2738dac23aa7df5ae761789570f6443" translate="yes" xml:space="preserve">
          <source>So I understand complaints of people, saying &quot;Why doesn't do &lt;code&gt;git&lt;/code&gt; the obvious thing for me&quot;.  This is because &quot;obvious&quot; here depends from the point of view.  Reliability in each and every situation is far more important.  Hence what's obvious for you often is not the right thing in all possible technical situations.  Please remember that:  AFAICS &lt;code&gt;git&lt;/code&gt; follows the technical path, not the social one.  (Hence the clever name: git)</source>
          <target state="translated">だから私は「なぜ私にとって明白なことを &lt;code&gt;git&lt;/code&gt; しないのか」という人々の不満を理解しています。 これは、ここでの「自明」が観点から決まるためです。 あらゆる状況での信頼性ははるかに重要です。 したがって、多くの場合、明らかなことは、考えられるすべての技術的状況において正しいことではありません。 覚えておいてください：AFAICS &lt;code&gt;git&lt;/code&gt; は社会的な道ではなく、技術的な道をたどっています。 （したがって、賢い名前：git）</target>
        </trans-unit>
        <trans-unit id="32abb9915218927c05d7b7a046ed1e8d6ef4d76a" translate="yes" xml:space="preserve">
          <source>So if you once delete a submodule with this method and re-add them again, it will not be possible because repository already been corrupted.</source>
          <target state="translated">そのため、この方法で一度サブモジュールを削除した後、再度サブモジュールを追加すると、すでにリポジトリが破損しているためにできなくなります。</target>
        </trans-unit>
        <trans-unit id="9c7973d0b379489c167109c1ef5e5b26fe7165e5" translate="yes" xml:space="preserve">
          <source>So if you wish to remove the modules, but be able to restore it quickly,
then do just this:</source>
          <target state="translated">ですから、モジュールを削除しても、すぐに復元できるようにしたい場合は、このようにしてください。</target>
        </trans-unit>
        <trans-unit id="c0f93fbdf8917be6789844051b680d64104e83ef" translate="yes" xml:space="preserve">
          <source>So not only most other answers fall into this dangerous trap, &lt;a href=&quot;https://github.com/tj/git-extras/issues/799&quot;&gt;even very popular &lt;code&gt;git&lt;/code&gt; extensions had this bug&lt;/a&gt; (&lt;a href=&quot;https://github.com/tj/git-extras/pull/801&quot;&gt;it's now fixed there&lt;/a&gt;)!  So better keep your hands of the &lt;code&gt;.git/&lt;/code&gt; directory if you do not exactly, what you are doing!</source>
          <target state="translated">したがって、他のほとんどの回答がこの危険な罠に該当するだけでなく、 &lt;a href=&quot;https://github.com/tj/git-extras/issues/799&quot;&gt;非常に人気のある &lt;code&gt;git&lt;/code&gt; 拡張機能にもこのバグがありました&lt;/a&gt; （ &lt;a href=&quot;https://github.com/tj/git-extras/pull/801&quot;&gt;現在では修正されています&lt;/a&gt; ）。 ですから、 &lt;code&gt;.git/&lt;/code&gt; ディレクトリを手元に置いておくことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="76e086d913d7417c384b06312a8fdea974faf301" translate="yes" xml:space="preserve">
          <source>So there is a very technical reason to keep this module directory as a placeholder.  People who recommend to remove something below &lt;code&gt;.git/modules/&lt;/code&gt; either do not know better or forget to tell you that this makes powerful features like &lt;code&gt;git bisect&lt;/code&gt; nearly impossible to use if this crosses such a submodule incompatibility.</source>
          <target state="translated">したがって、このモジュールディレクトリをプレースホルダーとして保持することには、非常に技術的な理由があります。 &lt;code&gt;.git/modules/&lt;/code&gt; 以下の何かを削除することを推奨する人々は、これがそのようなサブモジュールの非互換性を超えた場合に &lt;code&gt;git bisect&lt;/code&gt; などの強力な機能を使用することをほとんど不可能にすることを知らないか、忘れることを忘れます。</target>
        </trans-unit>
        <trans-unit id="3b9cd30d73c1a5f6674e86a9e0989be9398677fd" translate="yes" xml:space="preserve">
          <source>Source: &lt;code&gt;git help submodules&lt;/code&gt;</source>
          <target state="translated">ソース： &lt;code&gt;git help submodules&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44a99fe5ccb53d1ad9da9430b7357dee83089a83" translate="yes" xml:space="preserve">
          <source>Stage changes &lt;code&gt;git add .gitmodules&lt;/code&gt;</source>
          <target state="translated">ステージの変更 &lt;code&gt;git add .gitmodules&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a39381dcbab1341b838eeafda2a6d527a86141fc" translate="yes" xml:space="preserve">
          <source>Stage the &lt;code&gt;.gitmodules&lt;/code&gt; changes:</source>
          <target state="translated">&lt;code&gt;.gitmodules&lt;/code&gt; の変更をステージングします。</target>
        </trans-unit>
        <trans-unit id="adb9fa34e4e0a154badd833b66c859d7244d3f02" translate="yes" xml:space="preserve">
          <source>Step 3 removes the section for &lt;code&gt;the_submodule&lt;/code&gt; in the file &lt;code&gt;.git/config&lt;/code&gt;. This should be done for completeness. (The entry may cause problems for older git versions, but I don't have one to test).</source>
          <target state="translated">ステップ3では、ファイル &lt;code&gt;.git/config&lt;/code&gt; の &lt;code&gt;the_submodule&lt;/code&gt; のセクションを削除します。 これは完全を期すためになされるべきです。 （このエントリは古いgitバージョンで問題を引き起こす可能性がありますが、テストするものはありません）。</target>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="d14518d1477563720b992fbf4dcefd5f409c4826" translate="yes" xml:space="preserve">
          <source>Tested with Debian Buster &lt;code&gt;2.20.1&lt;/code&gt; and Ubuntu 18.04 &lt;code&gt;2.17.1&lt;/code&gt;.</source>
          <target state="translated">Debian Buster &lt;code&gt;2.20.1&lt;/code&gt; およびUbuntu 18.04 &lt;code&gt;2.17.1&lt;/code&gt; でテスト済み。</target>
        </trans-unit>
        <trans-unit id="1d704f866e17c2f392cd1986aece26173a4f8b8f" translate="yes" xml:space="preserve">
          <source>That will remove that directory stored in the index with a special mode &quot;160000&quot;, marking it as a submodule root directory.</source>
          <target state="translated">これにより、インデックスに格納されているディレクトリが特別なモード「160000」で削除され、サブモジュールのルートディレクトリとしてマークされます。</target>
        </trans-unit>
        <trans-unit id="24962f784414ddc6635805dc57d580cb79b2541f" translate="yes" xml:space="preserve">
          <source>That's it.</source>
          <target state="translated">それだけだ</target>
        </trans-unit>
        <trans-unit id="95480d6c3828c85dd40b3f196be66d63de1eaa2b" translate="yes" xml:space="preserve">
          <source>Thats easy:</source>
          <target state="translated">簡単だ</target>
        </trans-unit>
        <trans-unit id="7d422cddfa6dd0924d16d922b712206343cb158b" translate="yes" xml:space="preserve">
          <source>The 3-steps removal process would then be:</source>
          <target state="translated">そうすると、3段階の除去作業になります。</target>
        </trans-unit>
        <trans-unit id="6d715a96d41bcc4f42879f0e1e7e70118568f25a" translate="yes" xml:space="preserve">
          <source>The commands above may fail due to following:</source>
          <target state="translated">上記のコマンドは以下のような理由で失敗することがあります。</target>
        </trans-unit>
        <trans-unit id="14ff80c43826dca01a461df75fc16f07233bf97e" translate="yes" xml:space="preserve">
          <source>The deletion process also uses &lt;code&gt;git rm&lt;/code&gt; (since git1.8.5 October 2013).</source>
          <target state="translated">削除プロセスも &lt;code&gt;git rm&lt;/code&gt; を使用します（git1.8.5 2013年10月以降）。</target>
        </trans-unit>
        <trans-unit id="0a8b7fae183dbf60b87929d7bf3aa1719bcc54ea" translate="yes" xml:space="preserve">
          <source>The deletion removes the superproject's tracking data, which are both the gitlink entry and the section in the &lt;code&gt;.gitmodules&lt;/code&gt; file.</source>
          <target state="translated">削除すると、スーパープロジェクトの追跡データが削除されます。これは、gitlinkエントリと &lt;code&gt;.gitmodules&lt;/code&gt; ファイルのセクションの両方です。</target>
        </trans-unit>
        <trans-unit id="87899e148899ca0ff17d91b13eb3e19d96011a3b" translate="yes" xml:space="preserve">
          <source>The last line outputs following error:</source>
          <target state="translated">最後の行は以下のエラーを出力します。</target>
        </trans-unit>
        <trans-unit id="c48018dec73cb0d3452d7bb06b1423b199193668" translate="yes" xml:space="preserve">
          <source>The majority of answers to this question are outdated, incomplete, or unnecessarily complex.</source>
          <target state="translated">この質問に対する回答の大半は、時代遅れ、不完全、または不必要に複雑なものです。</target>
        </trans-unit>
        <trans-unit id="e00f28fbc3d55a4640f420ad9099d6639da494be" translate="yes" xml:space="preserve">
          <source>The submodule's working directory is removed from the file system, but the Git directory is kept around as it to make it possible to checkout past commits without requiring fetching from another repository.</source>
          <target state="translated">サブモジュールの作業ディレクトリはファイルシステムから削除されますが、過去のコミットをチェックアウトする際に別のリポジトリからの取得を必要とせずに済むように、Gitディレクトリは残しておきます。</target>
        </trans-unit>
        <trans-unit id="11a69552b50cf6d380d20092704cd1871fc3a143" translate="yes" xml:space="preserve">
          <source>Then I could commit the files as a part of the parent Git repository without the old reference to a submodule.</source>
          <target state="translated">そうすれば、サブモジュールへの古い参照を使わずに、親Gitリポジトリの一部としてコミットできるようになりました。</target>
        </trans-unit>
        <trans-unit id="87eaf9cb0dc9221b0705a3c64911ebda6b424319" translate="yes" xml:space="preserve">
          <source>Then things are done. The submodule directory will be removed from your repo and still exist in your filesystem. You can then commit the change like: &lt;code&gt;git commit -am &quot;Remove the submodule&quot;&lt;/code&gt;.</source>
          <target state="translated">その後、物事が行われます。 サブモジュールディレクトリはリポジトリから削除され、ファイルシステムにまだ存在します。 その後、次のように変更をコミットできます： &lt;code&gt;git commit -am &quot;Remove the submodule&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93c968c4fdf875495af084a5662faf0bd3a0a0ea" translate="yes" xml:space="preserve">
          <source>There was no Porcelain way to say &quot;I no longer am interested in this submodule&quot;, once you express your interest in a submodule with &quot;&lt;code&gt;submodule init&lt;/code&gt;&quot;.</source>
          <target state="translated">「 &lt;code&gt;submodule init&lt;/code&gt; 」でサブモジュールに興味を示したら、「このサブモジュールにはもう興味がない」という磁器の方法はありませんでした。</target>
        </trans-unit>
        <trans-unit id="38e1218090a99f970bcf2410f99308d0aa90c9fd" translate="yes" xml:space="preserve">
          <source>These 5th and 6th steps does not creates any changes which needs commit.</source>
          <target state="translated">これらの第5ステップと第6ステップでは、コミットが必要な変更は発生しません。</target>
        </trans-unit>
        <trans-unit id="d9f83abcd0efc17820e9f7b16f98452c41d98faf" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;othermachine&lt;/code&gt; can be some VM, or some Ubuntu WSL under Windows, whatever.  Even a &lt;code&gt;chroot&lt;/code&gt; (but I assume that you are non-root, because if you are &lt;code&gt;root&lt;/code&gt; it should be more easy to update to the newer &lt;code&gt;git&lt;/code&gt;).</source>
          <target state="translated">この &lt;code&gt;othermachine&lt;/code&gt; は、VMでも、WindowsでのUbuntu WSLでもかまいません。 &lt;code&gt;chroot&lt;/code&gt; であっても（ただし、rootの方が新しい &lt;code&gt;git&lt;/code&gt; に更新する方が簡単であるため、非rootであると想定しています）。</target>
        </trans-unit>
        <trans-unit id="e9ed6324492e445628826d291002a3c4b8bedd07" translate="yes" xml:space="preserve">
          <source>This &lt;strong&gt;removes the whole &lt;code&gt;submodule.&amp;lt;name&amp;gt;&lt;/code&gt; section from &lt;code&gt;.git/config&lt;/code&gt; either for the given
  submodule(s)&lt;/strong&gt; (or for all those which have been initialized if '&lt;code&gt;.&lt;/code&gt;' is given).</source>
          <target state="translated">これ&lt;strong&gt;により、指定されたサブモジュール&lt;/strong&gt; （または ' &lt;code&gt;.&lt;/code&gt; 'が指定された場合に初期化されたすべて&lt;strong&gt;のサブモジュール）の &lt;code&gt;.git/config&lt;/code&gt; から &lt;code&gt;submodule.&amp;lt;name&amp;gt;&lt;/code&gt; セクション全体が削除&lt;/strong&gt;されます。</target>
        </trans-unit>
        <trans-unit id="ed891ffd8ed07489de62b972759741015572a031" translate="yes" xml:space="preserve">
          <source>This cannot be fully symmetric, as keeping it strictly symmetric does not make much sense.  There simply is no need for more than two commands.  Also &quot;pulling in the data&quot; is implicit, because you need it, but removing the cached information is not done, because this is not needed at all and might wipe precious data.</source>
          <target state="translated">厳密に対称にしていてもあまり意味がないので、これを完全に対称にすることはできません。単純に2つ以上のコマンドは必要ありません。また、「データを引っ張ってくる」というのは暗黙のうちに必要だからですが、キャッシュされた情報を削除するというのは、全く必要ないし、貴重なデータを消去してしまう可能性があるので行われません。</target>
        </trans-unit>
        <trans-unit id="d5a8eb02dd70d8f0864431159797c06c330396d3" translate="yes" xml:space="preserve">
          <source>This is not only true for you.  It also is true for all others using your repository.</source>
          <target state="translated">これはあなただけに当てはまることではありません。また、あなたのリポジトリを使用している他のすべての人にも当てはまります。</target>
        </trans-unit>
        <trans-unit id="43b0e09fc2033bb86af3cdf155067446979d13da" translate="yes" xml:space="preserve">
          <source>This is regardless of whether you do steps 2 or 3.</source>
          <target state="translated">これは、ステップ2を行うか、ステップ3を行うかに関係ありません。</target>
        </trans-unit>
        <trans-unit id="ff6cc9af1c994655cfb603e312bfe461cf4e4760" translate="yes" xml:space="preserve">
          <source>This leaves &lt;code&gt;.git/modules/&amp;lt;path-to-submodule&amp;gt;/&lt;/code&gt; unchanged.</source>
          <target state="translated">これにより、 &lt;code&gt;.git/modules/&amp;lt;path-to-submodule&amp;gt;/&lt;/code&gt; は変更されません。</target>
        </trans-unit>
        <trans-unit id="7c9f3428912942e6a0f63f1435a130706ac6e9b8" translate="yes" xml:space="preserve">
          <source>This leaves you with a clean checkout with no changes to commit.</source>
          <target state="translated">これにより、コミットするための変更がなく、クリーンなチェックアウトが可能になります。</target>
        </trans-unit>
        <trans-unit id="bfd37047b1c782691d2a43f60e1962877cbc2d60" translate="yes" xml:space="preserve">
          <source>This restores the exact same state as before you added the submodule. You can right away add the submodule again, which was not possible with most of the answers here.</source>
          <target state="translated">これで、サブモジュールを追加する前とまったく同じ状態に戻ります。ここでの回答のほとんどでは不可能でしたが、すぐにサブモジュールを追加することができます。</target>
        </trans-unit>
        <trans-unit id="651663fb7c8232755ea68bccbbcc2cf4eaeae173" translate="yes" xml:space="preserve">
          <source>This takes care if the (de)initialization steps (&lt;code&gt;.git/config&lt;/code&gt; and &lt;code&gt;.git/modules/xxx&lt;/code&gt;)</source>
          <target state="translated">これは、（非）初期化手順（ &lt;code&gt;.git/config&lt;/code&gt; および &lt;code&gt;.git/modules/xxx&lt;/code&gt; ）の場合に注意します</target>
        </trans-unit>
        <trans-unit id="10fe421614bb42b3b26ac3c2e5073767e8c8a9ae" translate="yes" xml:space="preserve">
          <source>This truly is puzzling to newcomers, but basically is a good thing:  &lt;code&gt;git&lt;/code&gt; just does the obviously thing and does that right, and does not even try to do more.  &lt;code&gt;git&lt;/code&gt; is a tool, which must do a reliable job, instead of being just another &quot;Eierlegende Wollmilchsau&quot; (&quot;Eierlegende Wollmilchsau&quot; translates for me to &quot;some evil version of a Swiss army knife&quot;).</source>
          <target state="translated">これは本当に初心者にとっては不可解ですが、基本的には良いことです &lt;code&gt;git&lt;/code&gt; は明らかにそれを実行し、それを正しく実行します。それ以上のことはしません。 &lt;code&gt;git&lt;/code&gt; はツールであり、単なる &quot;Eierlegende Wollmilchsau&quot;（ &quot;Eierlegende Wollmilchsau&quot;は私にとって &quot;スイスアーミーナイフの邪悪なバージョン&quot;と解釈されます）ではなく、信頼できる仕事をしなければなりません。</target>
        </trans-unit>
        <trans-unit id="596b8118b43155b52e9b5314fcb917b51eea60a8" translate="yes" xml:space="preserve">
          <source>This was tested with:</source>
          <target state="translated">でテストしました。</target>
        </trans-unit>
        <trans-unit id="313acf286ea454b402082bbc2bb414491f9edfb6" translate="yes" xml:space="preserve">
          <source>This way &lt;strong&gt;in future you can switch branches/commit forward and backward and will never get into any trouble again&lt;/strong&gt;, due to &lt;code&gt;two/&lt;/code&gt; having two different (and possibly incompatible) upstream repositories.  And the best is:  You keep both cached locally, too.</source>
          <target state="translated">この方法&lt;strong&gt;では、将来的にブランチ/コミットを前後に切り替えることができ&lt;/strong&gt; 、2つの異なる（場合によっては互換性のない）アップストリームリポジトリがあるため、 &lt;strong&gt;再び問題が発生することはありません&lt;/strong&gt; 。 そして、最良の方法は、両方ともローカルにキャッシュすることです。</target>
        </trans-unit>
        <trans-unit id="b09cff1dd1db179343c9c021aaa8972ecf92a753" translate="yes" xml:space="preserve">
          <source>To remove a &lt;code&gt;git&lt;/code&gt; submodule below 4 steps are needed.</source>
          <target state="translated">&lt;code&gt;git&lt;/code&gt; サブモジュールを削除するには、4つのステップが必要です。</target>
        </trans-unit>
        <trans-unit id="4a4b4d7e790894904087f5595c7b221e46036c76" translate="yes" xml:space="preserve">
          <source>To remove a submodule added using:</source>
          <target state="translated">を使って追加したサブモジュールを削除するには</target>
        </trans-unit>
        <trans-unit id="e840d7466b559eb0f0b23357086bf7848201520d" translate="yes" xml:space="preserve">
          <source>To summarize, this is what you should do :</source>
          <target state="translated">要約すると、これはあなたがすべきことです。</target>
        </trans-unit>
        <trans-unit id="0ff9656c2360991772c502bcb624d39289d26ed5" translate="yes" xml:space="preserve">
          <source>Track changes made to .gitmodules</source>
          <target state="translated">.gitmodules への変更を追跡する</target>
        </trans-unit>
        <trans-unit id="01d9d4bd68ab0b71b96630724db69bbc9e650688" translate="yes" xml:space="preserve">
          <source>Try to abstain from options to &lt;code&gt;rm&lt;/code&gt; and &lt;code&gt;deinit&lt;/code&gt; as long as you can.  Options (like &lt;code&gt;-f&lt;/code&gt;) for &lt;code&gt;git&lt;/code&gt; are good if you are a Pro.  But as you came here, you probably are not so experienced in the &lt;code&gt;submodule&lt;/code&gt; area.  So better be safe than sorry.</source>
          <target state="translated">可能な限り、オプションから &lt;code&gt;rm&lt;/code&gt; への &lt;code&gt;deinit&lt;/code&gt; 、 初期化を解除してください。 &lt;code&gt;git&lt;/code&gt; のオプション（ &lt;code&gt;-f&lt;/code&gt; など ）は、プロの場合に適しています。 しかし、あなたがここに来たとき、あなたはおそらく &lt;code&gt;submodule&lt;/code&gt; 領域でそれほど経験を積んでいないでしょう。 申し訳ありませんが、安全であることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="40669d18e0823e45a4c8dda101264e80ce1404c9" translate="yes" xml:space="preserve">
          <source>Unregister the given submodules ... If you really want to remove a
  submodule from the repository and commit that use git-rm[1]
  &lt;strong&gt;instead&lt;/strong&gt;.</source>
          <target state="translated">指定されたサブモジュールの登録を解除します...サブモジュールをリポジトリから削除してコミットする場合は、 &lt;strong&gt;代わりに&lt;/strong&gt; git-rm [1]を&lt;strong&gt;使用してください&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="b84a4b6364611d2bc031759abf5dcf0d3e4b2e89" translate="yes" xml:space="preserve">
          <source>Unregister the given submodules, i.e. remove the whole &lt;code&gt;submodule.$name&lt;/code&gt;
  section from .git/config together with their work tree.</source>
          <target state="translated">指定されたサブモジュールの登録を解除し &lt;code&gt;submodule.$name&lt;/code&gt; つまり、 サブモジュール全体を$ .nameセクションを.git / configから作業ツリーとともに削除します。</target>
        </trans-unit>
        <trans-unit id="17afc2cf9cdbab3e5d8d6b0ce546a16eb53640c3" translate="yes" xml:space="preserve">
          <source>Unstage and remove $path_to_submodule only from the index (to prevent losing information)</source>
          <target state="translated">インデックスから $path_to_submodule だけをアンステージして削除します (情報を失うのを防ぐため)。</target>
        </trans-unit>
        <trans-unit id="7c7c17d96895ab1edc446745a7cbb9bce2c4eab4" translate="yes" xml:space="preserve">
          <source>Use a newer &lt;code&gt;git&lt;/code&gt;</source>
          <target state="translated">新しい &lt;code&gt;git&lt;/code&gt; を使用する</target>
        </trans-unit>
        <trans-unit id="21a569a10b913e4067a51d36b1e566feb183e389" translate="yes" xml:space="preserve">
          <source>Via the page &lt;em&gt;&lt;a href=&quot;https://git.wiki.kernel.org/index.php/GitSubmoduleTutorial#Removal&quot;&gt;Git Submodule Tutorial&lt;/a&gt;&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;https://git.wiki.kernel.org/index.php/GitSubmoduleTutorial#Removal&quot;&gt;Gitサブモジュールチュートリアル&lt;/a&gt;&lt;/em&gt;ページから：</target>
        </trans-unit>
        <trans-unit id="c94e855e54cd9a7ccbadd695335791061fdec071" translate="yes" xml:space="preserve">
          <source>Warning!</source>
          <target state="translated">Warning!</target>
        </trans-unit>
        <trans-unit id="f6bafaa418c14b7db01de21b2e5950df4fdadcde" translate="yes" xml:space="preserve">
          <source>Well, the 2nd variant of module &lt;code&gt;two/&lt;/code&gt; is not under &lt;code&gt;.git/modules/two/&lt;/code&gt;, it is under &lt;code&gt;.git/modules/someunusedname/&lt;/code&gt;!  So things like &lt;code&gt;git rm $module; rm -f .git/module/$module&lt;/code&gt; are totally wrong!  You must either consult &lt;code&gt;module/.git&lt;/code&gt; or &lt;code&gt;.gitmodules&lt;/code&gt; to find the right thing to remove!</source>
          <target state="translated">まあ、モジュール &lt;code&gt;two/&lt;/code&gt; 2番目のバリアントは &lt;code&gt;.git/modules/two/&lt;/code&gt; 下ではなく、 &lt;code&gt;.git/modules/someunusedname/&lt;/code&gt; 下にあります ！ &lt;code&gt;git rm $module; rm -f .git/module/$module&lt;/code&gt; ようなものです。 rm -f .git / module / $ moduleは完全に間違っています！ 削除する適切なものを見つけるには、 &lt;code&gt;module/.git&lt;/code&gt; または &lt;code&gt;.gitmodules&lt;/code&gt; を参照する必要があります。</target>
        </trans-unit>
        <trans-unit id="17ec077994c0965f33148294d84c827da6cdac4a" translate="yes" xml:space="preserve">
          <source>What I'm currently doing Dec 2012 (combines most of these answers):</source>
          <target state="translated">私が今やっていること 2012年12月(これらの答えのほとんどを組み合わせたもの)。</target>
        </trans-unit>
        <trans-unit id="53939b94fa1711b1a7c570e811a85bafd8afd403" translate="yes" xml:space="preserve">
          <source>What to do now?  Well, just do exactly as told!  Use &lt;code&gt;--name someunusedname&lt;/code&gt;</source>
          <target state="translated">今何をする？ まあ、ちょうど言われたとおりにしてください！ &lt;code&gt;--name someunusedname&lt;/code&gt; を使用します</target>
        </trans-unit>
        <trans-unit id="22898919b72150cd9f5f1ea6b3e1bff1df5bded1" translate="yes" xml:space="preserve">
          <source>When you do &lt;code&gt;git submodule add&lt;/code&gt;, it only adds it to &lt;code&gt;.gitmodules&lt;/code&gt;, but
once you did &lt;code&gt;git submodule init&lt;/code&gt;, it added to &lt;code&gt;.git/config&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;git submodule add&lt;/code&gt; を実行すると、 &lt;code&gt;.gitmodules&lt;/code&gt; にのみ追加されますが、いったん &lt;code&gt;git submodule init&lt;/code&gt; を実行すると 、 &lt;code&gt;.git/config&lt;/code&gt; に追加されます。</target>
        </trans-unit>
        <trans-unit id="11d9064bfaeb9b71916696d7c5fab45081499344" translate="yes" xml:space="preserve">
          <source>Why never remove &lt;code&gt;$GIT_DIR/modules/&amp;lt;name&amp;gt;/&lt;/code&gt;?</source>
          <target state="translated">&lt;code&gt;$GIT_DIR/modules/&amp;lt;name&amp;gt;/&lt;/code&gt; 削除しないのはなぜですか？</target>
        </trans-unit>
        <trans-unit id="4c02475ea0a104471540c380d2a920b4b0a90b00" translate="yes" xml:space="preserve">
          <source>Why this error?  Because &lt;code&gt;.git/modules/two/&lt;/code&gt; previously was populated from &lt;a href=&quot;https://github.com/hilbix/empty.git&quot;&gt;https://github.com/hilbix/empty.git&lt;/a&gt; and now shall be re-populated from something else, namely &lt;a href=&quot;https://github.com/hilbix/src.git&quot;&gt;https://github.com/hilbix/src.git&lt;/a&gt;.  You won't see this if you re-populate it from &lt;a href=&quot;https://github.com/hilbix/empty.git&quot;&gt;https://github.com/hilbix/empty.git&lt;/a&gt;</source>
          <target state="translated">なぜこのエラーなのか？ 以前は &lt;code&gt;.git/modules/two/&lt;/code&gt; が&lt;a href=&quot;https://github.com/hilbix/empty.git&quot;&gt;https://github.com/hilbix/empty.git&lt;/a&gt;から入力されていましたが、現在は他の何か、つまり&lt;a href=&quot;https://github.com/hilbix/src.git&quot;&gt;https://github.com/hilbix/src.git&lt;/a&gt;から再入力されるためです。 &lt;a href=&quot;https://github.com/hilbix/empty.git&quot;&gt;https://github.com/hilbix/empty.git&lt;/a&gt;から再入力しても、これは表示されません。</target>
        </trans-unit>
        <trans-unit id="2d37e6a6f9105af4847908c33501a8800652476a" translate="yes" xml:space="preserve">
          <source>With &quot;&lt;code&gt;git submodule init&lt;/code&gt;&quot; the user is able to tell git they care about one or more submodules and wants to have it populated on the next call to &quot;&lt;code&gt;git submodule update&lt;/code&gt;&quot;.</source>
          <target state="translated">「 &lt;code&gt;git submodule init&lt;/code&gt; 」を使用すると、ユーザーはgitに1つまたは複数のサブモジュールについて気にかけていることを伝えることができ、「 &lt;code&gt;git submodule update&lt;/code&gt; 」への次の呼び出しでそれを設定したいとします。</target>
        </trans-unit>
        <trans-unit id="6c4c14376896bb21bdd7eadd89140b659cb40e96" translate="yes" xml:space="preserve">
          <source>With git 2.17 and above it's just:</source>
          <target state="translated">git 2.17以上ではただの</target>
        </trans-unit>
        <trans-unit id="a593fc6d174f81c09a0f106366de92244e03a3cb" translate="yes" xml:space="preserve">
          <source>You can probably get away with the above two steps for git 1.8.5+ as &lt;a href=&quot;https://stackoverflow.com/a/21211232/3363202&quot;&gt;tinlyx's answer&lt;/a&gt; noted, as all &lt;code&gt;git submodule&lt;/code&gt; commands seem to work.</source>
          <target state="translated">すべての &lt;code&gt;git submodule&lt;/code&gt; コマンドが機能しているように見えるので、 &lt;a href=&quot;https://stackoverflow.com/a/21211232/3363202&quot;&gt;tinlyxの答えが&lt;/a&gt;指摘しているように、おそらくgit 1.8.5以降で上記の2つのステップを回避できます。</target>
        </trans-unit>
        <trans-unit id="fec26e3f8230a518d5e1741dc787d3ee7e6062e2" translate="yes" xml:space="preserve">
          <source>You can use an alias to automate the solutions provided by others:</source>
          <target state="translated">エイリアスを使用して、他の人が提供するソリューションを自動化することができます。</target>
        </trans-unit>
        <trans-unit id="082e02cc74f2b7fa3b0c46fdc924a8bb08cc4240" translate="yes" xml:space="preserve">
          <source>You can use this multiply, and this is saved into &lt;code&gt;$HOME/.gitconfig&lt;/code&gt;.  Something like</source>
          <target state="translated">これを乗算して使用でき、これは &lt;code&gt;$HOME/.gitconfig&lt;/code&gt; 保存されます。 何かのようなもの</target>
        </trans-unit>
        <trans-unit id="cd3a606e7e1d2f85631ef8e8f851aebcfd11d8a4" translate="yes" xml:space="preserve">
          <source>You have done something in the past which is unsupported by &lt;code&gt;git&lt;/code&gt;.  Then you are on the dark side and things get ugly and complicated.  (Perhaps using another machine fixes it.)</source>
          <target state="translated">あなたは過去に &lt;code&gt;git&lt;/code&gt; でサポートされていない何かをしました。 次に、あなたは暗い側面にあり、物事は醜く複雑になります。 （おそらく別のマシンを使用することで修正されます。）</target>
        </trans-unit>
        <trans-unit id="027c6b3f95dc37999af133f32f39ca951ec5b710" translate="yes" xml:space="preserve">
          <source>You have uncommitted data and might lose data.  Then better commit them first.</source>
          <target state="translated">コミットされていないデータがあり、データを失う可能性があります。その場合は、先にコミットしておいた方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="b184733b05d2b2fb0fa48f553782e9e03032c673" translate="yes" xml:space="preserve">
          <source>You must remove the entry in &lt;code&gt;.gitmodules&lt;/code&gt; and &lt;code&gt;.git/config&lt;/code&gt;, and remove the directory of the module from the history:</source>
          <target state="translated">&lt;code&gt;.gitmodules&lt;/code&gt; と &lt;code&gt;.git/config&lt;/code&gt; のエントリを削除し、モジュールのディレクトリを履歴から削除する必要があります。</target>
        </trans-unit>
        <trans-unit id="8b02087b8f74f00315e8888ed3c0bd73eeafce64" translate="yes" xml:space="preserve">
          <source>You see, there is no &lt;code&gt;-f&lt;/code&gt; needed on &lt;code&gt;submodule deinit&lt;/code&gt;.  If things are clean, in a &lt;code&gt;git clean&lt;/code&gt; sense.  Also note that &lt;code&gt;git clean -x&lt;/code&gt; is not needed.  &lt;strong&gt;This means &lt;code&gt;git submodule deinit&lt;/code&gt; unconditionally removes untracked files which are ignored.&lt;/strong&gt;  This is usually what you want, but do not forget about it.  Sometimes ignored files might be precious, like cached data which takes hours to days to be calculated again.</source>
          <target state="translated">ご覧の &lt;code&gt;submodule deinit&lt;/code&gt; 、 サブモジュールdeinitには &lt;code&gt;-f&lt;/code&gt; は必要ありません。 物事がクリーンであれば、 &lt;code&gt;git clean&lt;/code&gt; 意味で。 また、 &lt;code&gt;git clean -x&lt;/code&gt; は必要ありません。 &lt;strong&gt;これは、 &lt;code&gt;git submodule deinit&lt;/code&gt; 無条件に無視された追跡されていないファイルを削除することを意味します。&lt;/strong&gt; これは通常あなたが望むものですが、忘れないでください。 キャッシュされたデータが再計算されるまでに数時間から数日かかるような、無視されたファイルは貴重な場合があります。</target>
        </trans-unit>
        <trans-unit id="29b8b4521c511ad84fe7fdb3cce1cf9a2bcb01ee" translate="yes" xml:space="preserve">
          <source>You will have to delete the module files on your project manually.</source>
          <target state="translated">プロジェクト上のモジュールファイルを手動で削除する必要があります。</target>
        </trans-unit>
        <trans-unit id="825806d08a98b7786e8612378baf5d216ab45418" translate="yes" xml:space="preserve">
          <source>Your &lt;code&gt;git&lt;/code&gt; is too old.  Then use a newer &lt;code&gt;git&lt;/code&gt;.  (See below how to.)</source>
          <target state="translated">&lt;code&gt;git&lt;/code&gt; が古すぎます。 次に、新しい &lt;code&gt;git&lt;/code&gt; を使用します。 （以下の方法を参照してください。）</target>
        </trans-unit>
        <trans-unit id="b3263d261892cd0fe088e87c994b93105a165597" translate="yes" xml:space="preserve">
          <source>Your submodule is not clean in a &lt;code&gt;git clean&lt;/code&gt; sense.  Then first clean your submodule using that command.  (See below.)</source>
          <target state="translated">あなたのサブモジュールは &lt;code&gt;git clean&lt;/code&gt; 意味でクリーンではありません。 次に、最初にそのコマンドを使用してサブモジュールをクリーンアップします。 （下記参照。）</target>
        </trans-unit>
        <trans-unit id="c5f61f79aa84e788870e87c6a3a7273f7a40b8d3" translate="yes" xml:space="preserve">
          <source>also is quite the inverse to</source>
          <target state="translated">の逆でもあります。</target>
        </trans-unit>
        <trans-unit id="fc021cf751bd19536fe97dc7c3e97f26df48da1d" translate="yes" xml:space="preserve">
          <source>because some commands basically need to do more than just a single thing:</source>
          <target state="translated">というのも、いくつかのコマンドは基本的に一つ以上のことをする必要があるからです。</target>
        </trans-unit>
        <trans-unit id="786e97b3ee9fc4b292d5852c2c5943153c4ce91a" translate="yes" xml:space="preserve">
          <source>but</source>
          <target state="translated">but</target>
        </trans-unit>
        <trans-unit id="a379c85f8c69a0d3679d831f2b58817f66b078af" translate="yes" xml:space="preserve">
          <source>into</source>
          <target state="translated">into</target>
        </trans-unit>
        <trans-unit id="e9701ce3d2a3e65a5ba9a8b06bf157883a5f2cca" translate="yes" xml:space="preserve">
          <source>is the direct inverse to</source>
          <target state="translated">の逆数です。</target>
        </trans-unit>
        <trans-unit id="067397bd0d1f8d785870c974f9dffe54efdc75de" translate="yes" xml:space="preserve">
          <source>pulls in further data if needed</source>
          <target state="translated">必要に応じて追加データを取得</target>
        </trans-unit>
        <trans-unit id="a63f4ed1ad5856b0ef695a7abace53c0751617ff" translate="yes" xml:space="preserve">
          <source>pulls in the data to &lt;code&gt;.git/modules/NAME/&lt;/code&gt;</source>
          <target state="translated">データを &lt;code&gt;.git/modules/NAME/&lt;/code&gt; プルします</target>
        </trans-unit>
        <trans-unit id="31cb2c3126ff597e73a7ee4c23e71508f6b6fc6d" translate="yes" xml:space="preserve">
          <source>rewrites URLs like</source>
          <target state="translated">のようにURLを書き換えます。</target>
        </trans-unit>
        <trans-unit id="1a98271a19ad55f7c6adc32e923d003f60257391" translate="yes" xml:space="preserve">
          <source>the submodule &lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1992018/git-submodule-update-needed-only-initially/2227598#2227598&quot;&gt;special entry&lt;/a&gt;&lt;/strong&gt; (as illustrated by &lt;a href=&quot;https://stackoverflow.com/q/16574625/6309&quot;&gt;this question&lt;/a&gt;): the git rm removes it from the index:</source>
          <target state="translated">サブモジュールの&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1992018/git-submodule-update-needed-only-initially/2227598#2227598&quot;&gt;特別なエントリ&lt;/a&gt;&lt;/strong&gt; （ &lt;a href=&quot;https://stackoverflow.com/q/16574625/6309&quot;&gt;この質問で&lt;/a&gt;示されています ）：git rmはそれをインデックスから削除します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
