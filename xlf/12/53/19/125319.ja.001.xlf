<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/125319">
    <body>
      <group id="125319">
        <trans-unit id="13c80939e98b207ec5609c70a1f029905e6596ed" translate="yes" xml:space="preserve">
          <source>(Note that &lt;code&gt;MyCorp.TheProduct&lt;/code&gt; was a part of &quot;3.&quot; and was therefore not needed between &quot;4.&quot; and &quot;5.&quot;.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyCorp.TheProduct&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は「3.」の一部であったため、「4。」と「5.」の間に必要ではなかった&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことに注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f53499b33b469e79a0026e9532b27dead9ae5e93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;using&lt;/code&gt; directives specified inside namespaces can make for shorter code since they don't need to be fully qualified as when they're specified on the outside.</source>
          <target state="translated">&lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名前空間の内部で指定されたディレクティブ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すると、外部で指定されている場合のように完全修飾する必要がないため、コードを短くすることができます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26d59afdbafe83b3ffbaed9ce40ebf75eae019a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;(1) With usings outside:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（1）外部での使用：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3c6b9c8ca62ade1455f2e1b4dbfa5529d912fc6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;(2) With usings inside:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（2）内部での使用：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="38d2073cb2f6532d32d9eb2aee352daa9e26c947" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Concluding remarks&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;おわりに&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="42d76294ecff26012ba6baccba64a184ce5cd4e7" translate="yes" xml:space="preserve">
          <source>According the to StyleCop Documentation:</source>
          <target state="translated">StyleCopのドキュメントによると</target>
        </trans-unit>
        <trans-unit id="d4a35ba98acb6526b54dd9713806c61dd1c188da" translate="yes" xml:space="preserve">
          <source>According to &lt;a href=&quot;http://www.hanselman.com/blog/BackToBasicsDoNamespaceUsingDirectivesAffectAssemblyLoading.aspx&quot;&gt;Hanselman - Using Directive and Assembly Loading...&lt;/a&gt; and other such articles there is technically no difference.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;よると&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.hanselman.com/blog/BackToBasicsDoNamespaceUsingDirectivesAffectAssemblyLoading.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hanselman氏-指令および集合体Loading ...使用&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;し、他のこのような製品は、技術的に違いはありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c87a0e035fb216cf89791ec16d880b2d2f9b37e" translate="yes" xml:space="preserve">
          <source>Also, if a nested namespace has the same name as a type, it can cause problems.</source>
          <target state="translated">また、入れ子になっている名前空間が型と同じ名前の場合、問題が発生することがあります。</target>
        </trans-unit>
        <trans-unit id="09988a20bb3d192be3c7367fc15188f803a150ca" translate="yes" xml:space="preserve">
          <source>And &lt;em&gt;Bar.cs&lt;/em&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そして&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bar.cs&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f70040b45265f5e96cab3aa11ec2b9be8bd5551" translate="yes" xml:space="preserve">
          <source>Another subtlety that I don't believe has been covered by the other answers is for when you have a class and namespace with the same name.</source>
          <target state="translated">他の回答ではカバーされていないと思われるもう一つの微妙な点は、クラスと名前空間が同じ名前の場合です。</target>
        </trans-unit>
        <trans-unit id="3cb8beca0579e015e02e88418938e973b50b2fcc" translate="yes" xml:space="preserve">
          <source>As Jeppe Stig Nielsen &lt;a href=&quot;https://stackoverflow.com/a/16092975/2707705&quot;&gt;said&lt;/a&gt;, this thread already has great answers, but I thought this rather obvious subtlety was worth mentioning too.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Jeppe Stig Nielsenが&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/16092975/2707705&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;言ったように&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、このスレッドにはすでにすばらしい答えがありますが、このかなり明白な微妙さについても言及する価値があると思いました。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d32b8feded9338982879c31bc673d3bcd6c4484c" translate="yes" xml:space="preserve">
          <source>CS0576: Namespace 'Microsoft.Sample' contains a definition conflicting with alias 'Guid'</source>
          <target state="translated">CS0576.名前空間 'Microsoft.Sample' にエイリアス 'Guid' と矛盾する定義が含まれている</target>
        </trans-unit>
        <trans-unit id="be428ac1f20b57a9aa7041f3931693095260489c" translate="yes" xml:space="preserve">
          <source>Cause 
A C# using directive is placed outside of a namespace element.</source>
          <target state="translated">原因 C#のusingディレクティブが名前空間要素の外側に配置されている。</target>
        </trans-unit>
        <trans-unit id="75e291169a2ebb63c935a5de7382990c0513d618" translate="yes" xml:space="preserve">
          <source>Consider:</source>
          <target state="translated">Consider:</target>
        </trans-unit>
        <trans-unit id="64f1cbf1d2e3e32985c88bdaffa742d700b3208d" translate="yes" xml:space="preserve">
          <source>First, remember that a namespace declaration with periods, like:</source>
          <target state="translated">まず、ピリオド付きの名前空間宣言は、ピリオドのようなものだと覚えておきましょう。</target>
        </trans-unit>
        <trans-unit id="e1a2c21bf8650e9154a38cd7552fcb3f29f58051" translate="yes" xml:space="preserve">
          <source>For example, the following code would result in two violations of this rule.</source>
          <target state="translated">例えば、以下のコードの場合、このルールに2回違反することになります。</target>
        </trans-unit>
        <trans-unit id="644a30cc91964ad692908e79108e7a2a1de5e1f7" translate="yes" xml:space="preserve">
          <source>How to Fix Violations
To fix a violation of this rule, move all using directives and using-alias directives within the namespace element.</source>
          <target state="translated">違反を修正する方法 このルールの違反を修正するには、すべての using ディレクティブと using-alias ディレクティブを名前空間要素内に移動します。</target>
        </trans-unit>
        <trans-unit id="8f101f82fe057f2e9148da5f7370d29f739e18bd" translate="yes" xml:space="preserve">
          <source>However if you use it &lt;em&gt;inside&lt;/em&gt; of that namespace declaration, it refers to the second one (Parent.Something.Other)!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、その名前空間宣言&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用すると&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、2番目の名前（Parent.Something.Other）が参照されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31dd4a724191ec6105febb2fb3696193e01a2ee0" translate="yes" xml:space="preserve">
          <source>I have been running &lt;a href=&quot;http://en.wikipedia.org/wiki/StyleCop&quot;&gt;StyleCop&lt;/a&gt; over some C# code, and it keeps reporting that my &lt;code&gt;using&lt;/code&gt; directives should be inside the namespace.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いくつかのC＃コードで&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/StyleCop&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;StyleCop&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実行してい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ディレクティブは名前空間内にあるべきだと&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;報告し続け&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="956bc1dda1ec8ac8cfa2e7bd3b11b0addb8d59e5" translate="yes" xml:space="preserve">
          <source>If you wanted to, you could put &lt;code&gt;using&lt;/code&gt; directives on all of these levels. (Of course, we want to have &lt;code&gt;using&lt;/code&gt;s in only one place, but it would be legal according to the language.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;応じて、これらすべてのレベル&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ディレクティブを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配置でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（もちろん、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1か所だけでs &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する必要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がありますが、言語によっては合法です。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43f852ee4f1ecc376814f854a51cc9f8f8d31566" translate="yes" xml:space="preserve">
          <source>In the above case, to find out what type &lt;code&gt;Ambiguous&lt;/code&gt; is, the search goes in this order:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記の場合、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Ambiguous&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイプを見つけるため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に、検索は次の順序で行われます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="96601fc71a11d2ce07689e9427287a51448cfa0d" translate="yes" xml:space="preserve">
          <source>Is there a technical reason for putting the &lt;code&gt;using&lt;/code&gt; directives inside instead of outside the namespace?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名前空間の外部ではなく内部に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ディレクティブ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を配置する技術的な理由はあり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ますか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="01abffeb795e5e0ef7f6f9503a2bd5488e6954d6" translate="yes" xml:space="preserve">
          <source>It is a better practice if those &lt;strong&gt;default&lt;/strong&gt; using i.e. &quot;&lt;em&gt;references&lt;/em&gt;&quot; used in your source solution should be outside the namespaces and those that are &lt;strong&gt;&quot;new added reference&quot;&lt;/strong&gt; is a good practice is you should put it inside the namespace. This is to distinguish what references are being added.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ソースソリューションで使用される&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」を使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デフォルト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が名前空間の外にあり、&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「新しく追加された参照」&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;であるものを名前空間内に置くことをお勧めします。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、追加されている参照を区別するためです。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63600b89eb34e7a0c564ef31800606259a53c96a" translate="yes" xml:space="preserve">
          <source>It is always dangerous to move the usings from one location to another because the search hierarchy changes, and another type may be found. Therefore, choose one convention and stick to it, so that you won't have to ever move usings.</source>
          <target state="translated">検索階層が変わり、別のタイプが見つかる可能性があるため、ある場所から別の場所へと用途を移動させるのは常に危険です。そのため、一つの規約を選択し、それに固執することで、使用場所を移動する必要がなくなります。</target>
        </trans-unit>
        <trans-unit id="7cbfc58096eecd07cf917861718ed5aab8e81d8a" translate="yes" xml:space="preserve">
          <source>It is important to note that when code has been written with using directives placed outside of the namespace, care should be taken when moving these directives within the namespace, to ensure that this is not changing the semantics of the code. As explained above, placing using-alias directives within the namespace element allows the compiler to choose between conflicting types in ways that will not happen when the directives are placed outside of the namespace.</source>
          <target state="translated">ネームスペースの外側に配置された using-alias ディレクティブを使用してコードが書かれている場合、コードのセマンティクスを変更しないように、これらのディレクティブをネームスペース内に移動させる際には注意が必要であることに注意してください。上で説明したように、using-alias ディレクティブをネームスペース要素内に配置することで、 コンパイラは競合するタイプを選択することができます。</target>
        </trans-unit>
        <trans-unit id="7a3ece54751ed5bd9039330832787b6a50745b6f" translate="yes" xml:space="preserve">
          <source>It's also interesting to note what happens if &lt;code&gt;Foo&lt;/code&gt; is in namespace &lt;code&gt;Outer&lt;/code&gt;, rather than &lt;code&gt;Outer.Inner&lt;/code&gt;. In that case, adding &lt;code&gt;Outer.Math&lt;/code&gt; in File2 breaks File1 regardless of where the &lt;code&gt;using&lt;/code&gt; goes. This implies that the compiler searches the innermost enclosing namespace before it looks at any &lt;code&gt;using&lt;/code&gt; directive.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt; &lt;code&gt;Outer.Inner&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ではなく&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、名前空間&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Outer&lt;/code&gt; にある&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合に何が起こるかを知ることも興味深い&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その場合、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;File2に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Outer.Math&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;追加すると&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関係なくFile1が壊れます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、コンパイラが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ディレクティブを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;調べる前に、最も内側にある名前空間を検索することを意味します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8b1135f13943bc689bae6349325ada0282a62a8" translate="yes" xml:space="preserve">
          <source>Multiple Namespaces</source>
          <target state="translated">複数の名前空間</target>
        </trans-unit>
        <trans-unit id="c3ec7cd84f6a7af3c659cd5e8fc499f8f59ce92c" translate="yes" xml:space="preserve">
          <source>My preference is to put them outside of namespaces.</source>
          <target state="translated">私の好みは、名前空間の外に置くことです。</target>
        </trans-unit>
        <trans-unit id="be49cf9fdf3dcfdb427a405771d2e56f61ba63bb" translate="yes" xml:space="preserve">
          <source>Nested types inside &lt;code&gt;C&lt;/code&gt; (including inherited nested types)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内のネストされた型&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（継承されたネストされた型を含む）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ef35d942a3c4f955e1ad271a58ed50adf0ee510" translate="yes" xml:space="preserve">
          <source>No matter if you put the usings inside or outside the namespace declaration, there's always the possibility that someone later adds a new type with identical name to one of the namespaces which have higher priority.</source>
          <target state="translated">名前空間宣言の内側でも外側でも、後から誰かが同じ名前の新しい型を追加して、より優先度の高い名前空間の一つに追加する可能性は常にあります。</target>
        </trans-unit>
        <trans-unit id="398ad3bec765621a50601d6f9a079cc6ed29c6fb" translate="yes" xml:space="preserve">
          <source>Not pretty.</source>
          <target state="translated">可愛くない</target>
        </trans-unit>
        <trans-unit id="4a58f815b1c2579c1f5aeb3707e58c3e14e7fdaf" translate="yes" xml:space="preserve">
          <source>Now imagine that someone adds another file (File2.cs) to the project that looks like this:</source>
          <target state="translated">さて、誰かが別のファイル (File2.cs)をプロジェクトに追加して、次のようになったとします。</target>
        </trans-unit>
        <trans-unit id="69084d69ae0fee95e80e54a1f91fcab519122bee" translate="yes" xml:space="preserve">
          <source>Now the compiler searches &lt;code&gt;System&lt;/code&gt; before searching &lt;code&gt;Outer&lt;/code&gt;, finds &lt;code&gt;System.Math&lt;/code&gt;, and all is well.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これで、コンパイラは&lt;/font&gt; &lt;code&gt;Outer&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;検索する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;前に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を検索し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;System.Math&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;見つけ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、すべて順調です。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00954b4224e090b2009f8aa807bb7905cfe619ca" translate="yes" xml:space="preserve">
          <source>Now, let's be explicit about what this means in a concrete example with the two major conventions.</source>
          <target state="translated">では、具体的な例ではどのようなことを意味するのか、大きく分けて2つの規約を使って明示してみましょう。</target>
        </trans-unit>
        <trans-unit id="134de1b1e2468363c23a475539cd2b9b859f888c" translate="yes" xml:space="preserve">
          <source>Now, search for the type &lt;code&gt;Ambiguous&lt;/code&gt; goes in this order:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Ambiguous&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイプの検索は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次の順序で行われます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a79df2e4e156baca4eea6aaaa00495226da8ee4" translate="yes" xml:space="preserve">
          <source>One (tiny) advantage of having usings &lt;em&gt;outside&lt;/em&gt; is that you can then utilize the using directives for a global attribute, for example &lt;code&gt;[assembly: ComVisible(false)]&lt;/code&gt; instead of &lt;code&gt;[assembly: System.Runtime.InteropServices.ComVisible(false)]&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;外部&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で使用することの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（小さな）利点の1つ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;[assembly: System.Runtime.InteropServices.ComVisible(false)]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ではなく、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[assembly: ComVisible(false)]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などのグローバル属性のusingディレクティブを利用できることです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="756f6a4e0a8e02d568f669cd27cfcc4d7397824d" translate="yes" xml:space="preserve">
          <source>One can adjust stylecop to check &lt;code&gt;using&lt;/code&gt; directives outside of namespaces through adding &lt;code&gt;stylecop.json&lt;/code&gt; file in the root of the project file with the following:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次のようにプロジェクトファイルのルートに&lt;/font&gt; &lt;code&gt;stylecop.json&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ファイル&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を追加することで、名前空間外のディレクティブ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;してチェック&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ように&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スタイルコップを調整でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92616370c4a06e100221736750ac43bb04e1a4a5" translate="yes" xml:space="preserve">
          <source>One wrinkle I ran into (that isn't covered in other answers):</source>
          <target state="translated">私が遭遇した一つのシワ(他の回答ではカバーされていないもの)。</target>
        </trans-unit>
        <trans-unit id="13fa65c554d5fd2fbc6e9f79c96c4070d51b0c0a" translate="yes" xml:space="preserve">
          <source>Parent.Something.Other</source>
          <target state="translated">Parent.Something.Other</target>
        </trans-unit>
        <trans-unit id="bf2b3a71d168e49a5958301792ffc739003f4d70" translate="yes" xml:space="preserve">
          <source>Placing multiple namespace elements within a single file is generally a bad idea, but if and when this is done, it is a good idea to place all using directives within each of the namespace elements, rather than globally at the top of the file. This will scope the namespaces tightly, and will also help to avoid the kind of behavior described above.</source>
          <target state="translated">複数の名前空間要素を一つのファイル内に配置するのは一般的には良くない考えですが、もしこれを行う場合は、ファイルの先頭にグローバルに配置するのではなく、それぞれの名前空間要素内にすべての使用ディレクティブを配置するのが良い考えです。これにより、名前空間を厳密にスコープすることができ、上述のような動作を回避するのにも役立ちます。</target>
        </trans-unit>
        <trans-unit id="925d84c837a9f7f533f2b7db98e912b39f0d9ff9" translate="yes" xml:space="preserve">
          <source>Placing the using-alias directive outside of the namespace is a bad practice because it can lead to confusion in situations such as this, where it is not obvious which version of the type is actually being used. This can potentially lead to a bug which might be difficult to diagnose.</source>
          <target state="translated">using-alias ディレクティブを名前空間の外に配置するのは、 このような状況では、どのバージョンの型が実際に使われているのかが明らかではなく、 混乱を招く可能性があるので、悪い習慣です。これは、診断が困難なバグを引き起こす可能性があります。</target>
        </trans-unit>
        <trans-unit id="19e0378823e626a0c3d97eaf723f6d0cefb3c551" translate="yes" xml:space="preserve">
          <source>Placing using-alias directives within the namespace element eliminates this as a source of bugs.</source>
          <target state="translated">using-aliasディレクティブを名前空間要素内に配置することで、バグの原因となるこれを排除することができます。</target>
        </trans-unit>
        <trans-unit id="09f056d7fdb8307f6f0831ae70720f77c09b12f6" translate="yes" xml:space="preserve">
          <source>Presume the code file &lt;em&gt;Foo.cs&lt;/em&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コードファイル&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Foo.csを想定し&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="69e6b06ddf09c9af2a3496b50c09228247817da7" translate="yes" xml:space="preserve">
          <source>Putting it inside the namespaces makes the declarations local to that namespace for the file (in case you have multiple namespaces in the file) but if you only have one namespace per file then it doesn't make much of a difference whether they go outside or inside the namespace.</source>
          <target state="translated">名前空間の内側に置くと、宣言はそのファイルの名前空間に対してローカルになりますが(ファイル内に複数の名前空間がある場合)、1つのファイルに1つの名前空間しかない場合は、名前空間の外側に行っても内側に行ってもあまり違いはありません。</target>
        </trans-unit>
        <trans-unit id="6af6e9ba70bcaf58bc8d3dce5c5182d0fbb6ac54" translate="yes" xml:space="preserve">
          <source>Rule Description 
A violation of this rule occurs when a using directive or a using-alias directive is placed outside of a namespace element, unless the file does not contain any namespace elements.</source>
          <target state="translated">ルール説明 このルールの違反は、ファイルに名前空間要素が含まれていない場合を除き、using指示文やusing-alias指示文が名前空間要素の外側に置かれた場合に発生します。</target>
        </trans-unit>
        <trans-unit id="84546d9ca5aaa960a592460413ff0f8c24fe13fa" translate="yes" xml:space="preserve">
          <source>SA1200: UsingDirectivesMustBePlacedWithinNamespace</source>
          <target state="translated">SA1200.UsingDirectivesは名前空間内に配置されなければならない</target>
        </trans-unit>
        <trans-unit id="b35f6998372eaf0597d95e69071c4636cb21d3e5" translate="yes" xml:space="preserve">
          <source>Should 'using' directives be inside or outside the namespace</source>
          <target state="translated">using' ディレクティブは名前空間の中にあるべきか外にあるべきか</target>
        </trans-unit>
        <trans-unit id="ed29f647aef11a6173bbba28e079e8e60ba45789" translate="yes" xml:space="preserve">
          <source>Some would argue that &lt;code&gt;Math&lt;/code&gt; might be a bad name for a user-defined class, since there's already one in &lt;code&gt;System&lt;/code&gt;; the point here is just that there &lt;em&gt;is&lt;/em&gt; a difference, and it affects the maintainability of your code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;System&lt;/code&gt; には&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すでにクラスが存在するので、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Math&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はユーザー定義クラスの悪い名前かもしれない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と主張する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;人もい&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここでのポイント&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、違い&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ある&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ということだけであり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、コードの保守性に影響します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a2bcce720ff9d95fc605504bd0dd89ceaec92a8c" translate="yes" xml:space="preserve">
          <source>Something.Other</source>
          <target state="translated">Something.Other</target>
        </trans-unit>
        <trans-unit id="d3b2c5ec4abca07b1dbf44dbb972237f335d4b54" translate="yes" xml:space="preserve">
          <source>Suppose you have these namespaces:</source>
          <target state="translated">以下のような名前空間があるとします。</target>
        </trans-unit>
        <trans-unit id="1e764edbf851847731d83b31f658865c296f3aa0" translate="yes" xml:space="preserve">
          <source>That may omit the outer namespace in the &lt;code&gt;using&lt;/code&gt; directive, for short:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;により、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ディレクティブの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;外側の名前空間が省略される場合があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7a157129b5972a52ba49ed360aa4d4e949433cc9" translate="yes" xml:space="preserve">
          <source>The code creates an alias to the System.Guid type called Guid, and also creates its own type called Guid with a matching constructor interface. Later, the code creates an instance of the type Guid. To create this instance, the compiler must choose between the two different definitions of Guid. When the using-alias directive is placed outside of the namespace element, the compiler will choose the local definition of Guid defined within the local namespace, and completely ignore the using-alias directive defined outside of the namespace. This, unfortunately, is not obvious when reading the code.</source>
          <target state="translated">このコードでは、Guid という System.Guid 型のエイリアスを作成し、一致するコンストラクタ・インタフェースを持つ Guid という独自の型を作成します。その後、コードは Guid 型のインスタンスを作成します。このインスタンスを作成するには、コンパイラは Guid の 2 つの異なる定義から選択する必要があります。using-alias ディレクティブが名前空間要素の外側に配置されている場合、コンパイラはローカルの名前空間内で定義された Guid のローカル定義を選択し、名前空間外で定義された using-alias ディレクティブを完全に無視します。これは、残念ながら、コードを読んでも明らかではありません。</target>
        </trans-unit>
        <trans-unit id="187ff69b695bce7381ee14b888bbcaa08edd0aa5" translate="yes" xml:space="preserve">
          <source>The code fails on the following compiler error, found on the line containing &lt;code&gt;Guid g = new Guid(&quot;hello&quot;);&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コードは、&lt;/font&gt; &lt;code&gt;Guid g = new Guid(&quot;hello&quot;);&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を含む行にある次のコンパイラエラーで失敗し&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a36c0b3f8a2013eaf4a191828f0b11c0a3bde44c" translate="yes" xml:space="preserve">
          <source>The compiler searches &lt;code&gt;Outer&lt;/code&gt; before looking at those &lt;code&gt;using&lt;/code&gt; directives outside the namespace, so it finds &lt;code&gt;Outer.Math&lt;/code&gt; instead of &lt;code&gt;System.Math&lt;/code&gt;. Unfortunately (or perhaps fortunately?), &lt;code&gt;Outer.Math&lt;/code&gt; has no &lt;code&gt;PI&lt;/code&gt; member, so File1 is now broken.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンパイラーは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、名前空間外のディレクティブ&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;するもの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;調べる前に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Outer&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;検索する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;System.Math&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ではなく&lt;/font&gt; &lt;code&gt;Outer.Math&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;見つけ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;残念ながら（または幸運なことに？）、&lt;/font&gt; &lt;code&gt;Outer.Math&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;には&lt;/font&gt; &lt;code&gt;PI&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;メンバー&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、File1は壊れています。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8c3a931af1eb87d55035ded85459b443f2474c36" translate="yes" xml:space="preserve">
          <source>The following code, however, would not result in any violations of this rule:</source>
          <target state="translated">ただし、以下のコードを使用しても、このルールに違反することはありません。</target>
        </trans-unit>
        <trans-unit id="0c97e3669b28cc3ffab716d5ca718cd5d3aa8942" translate="yes" xml:space="preserve">
          <source>The following example works because the types &lt;code&gt;Foo&lt;/code&gt; and &lt;code&gt;Bar&lt;/code&gt; are both in the same global namespace, &lt;code&gt;Outer&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次の例は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;型&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;型の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;両方が同じグローバル名前空間&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Outer&lt;/code&gt; にあるため機能し&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="70da926f7952de564f05bf3830e6fdc586e68463" translate="yes" xml:space="preserve">
          <source>The other convention:</source>
          <target state="translated">他の大会。</target>
        </trans-unit>
        <trans-unit id="b0e0458359c8b821fad8fb3f674cd0a6718dea51" translate="yes" xml:space="preserve">
          <source>The rule for resolving which type is implied, can be loosely stated like this: &lt;strong&gt;First search the inner-most &quot;scope&quot; for a match, if nothing is found there go out one level to the next scope and search there, and so on&lt;/strong&gt;, until a match is found. If at some level more than one match is found, if one of the types are from the current assembly, pick that one and issue a compiler warning. Otherwise, give up (compile-time error).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;暗黙のタイプを解決するためのルールは、次のように大まかに述べることができます。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初に一致の最も内側の「スコープ」を検索し、そこに何も見つからない場合は、1つのレベルから次のスコープに進み、そこで検索します&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。一致が見つかるまで。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あるレベルで複数の一致が見つかった場合、タイプの1つが現在のアセンブリのものである場合は、そのタイプを選択してコンパイラ警告を発行します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それ以外の場合は、あきらめてください（コンパイル時エラー）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29e50ce1993e27af18f0f5c2a913d7c84582e1d0" translate="yes" xml:space="preserve">
          <source>The technical reasons are discussed in the answers and I think that it comes to the personal preferences in the end since the difference is not that &lt;em&gt;big&lt;/em&gt; and there are tradeoffs for both of them. Visual Studio's default template for creating &lt;code&gt;.cs&lt;/code&gt; files use &lt;code&gt;using&lt;/code&gt; directives outside of namespaces e.g.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;技術的な理由は回答で議論されており、違いはそれほど&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;大きく&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なく&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、両方のトレードオフがあるため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、結局のところ個人的な好みになると思い&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.cs&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ファイル&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を作成するためのVisual Studioのデフォルトテンプレートは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、名前空間外のディレクティブを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30ae19b5100be6377570a3eed55577e5c933b65a" translate="yes" xml:space="preserve">
          <source>There is a simple solution: add the &quot;&lt;code&gt;global::&lt;/code&gt;&quot; prefix: &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/namespaces/how-to-use-the-global-namespace-alias&quot;&gt;docs&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;簡単な解決策があります： &quot; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;global::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;プレフィックスを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;追加し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/namespaces/how-to-use-the-global-namespace-alias&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;docs&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49d38edc7a6ce66170757a62c78345c0705c01d5" translate="yes" xml:space="preserve">
          <source>There is actually a (subtle) difference between the two. Imagine you have the following code in File1.cs:</source>
          <target state="translated">実はこの2つの間には(微妙な)違いがあります。File1.csに以下のようなコードがあると想像してみてください。</target>
        </trans-unit>
        <trans-unit id="f76a7c91f2b7778395e2fc68f80b543eb1b3450e" translate="yes" xml:space="preserve">
          <source>There is an issue with placing using statements inside the namespace when you wish to use aliases. The alias doesn't benefit from the earlier &lt;code&gt;using&lt;/code&gt; statements and has to be fully qualified.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エイリアスを使用する場合、ネームスペース内にusingステートメントを配置すると問題が発生します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エイリアスは、以前の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ステートメントの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;恩恵を受けておらず、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;完全修飾する必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ca80b14b81433b2a715dc818cb725d52202f43db" translate="yes" xml:space="preserve">
          <source>This can be particularly pronounced if you have a long-winded alias such as the following (which is how I found the problem):</source>
          <target state="translated">これは、以下のような長文のエイリアスを使用している場合に特に顕著になります(私が問題を発見した方法です)。</target>
        </trans-unit>
        <trans-unit id="ac6c1e42d0eb2770bad2ba9d7c404e49566f91a5" translate="yes" xml:space="preserve">
          <source>This changes if you put the &lt;code&gt;using&lt;/code&gt; inside your namespace declaration, as follows:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、次のように、名前空間宣言内&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を置くと変わり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="816ea5d1ef2de960bc030e05178aa008f5ede004" translate="yes" xml:space="preserve">
          <source>This code will compile cleanly, without any compiler errors. However, it is unclear which version of the Guid type is being allocated. If the using directive is moved inside of the namespace, as shown below, a compiler error will occur:</source>
          <target state="translated">このコードは、コンパイラエラーもなくきれいにコンパイルされます。しかし、Guid型のどのバージョンが割り当てられているかは不明です。以下のようにusingディレクティブを名前空間内に移動させると、コンパイラエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="78e3b49698e0b99860655a91da438e804a112592" translate="yes" xml:space="preserve">
          <source>This thread already has some great answers, but I feel I can bring a little more detail with this additional answer.</source>
          <target state="translated">このスレッドにはすでにいくつかの素晴らしい回答がありますが、私はこの追加の回答でもう少し詳細を持ってくることができると感じています。</target>
        </trans-unit>
        <trans-unit id="fe0f3d496daf00fb25025f0f97ad5308162b5eaa" translate="yes" xml:space="preserve">
          <source>Types in &lt;code&gt;MyCorp.TheProduct&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;MyCorp.TheProduct&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイプ&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f70621da8fb62dc5eeed84964e68057431467dd4" translate="yes" xml:space="preserve">
          <source>Types in &lt;code&gt;MyCorp&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;MyCorp&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイプ&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5a35e89b7793f47c809492315be0c2bb184b6b69" translate="yes" xml:space="preserve">
          <source>Types in &lt;code&gt;System&lt;/code&gt;, &lt;code&gt;System.Collections.Generic&lt;/code&gt;, &lt;code&gt;System.Linq&lt;/code&gt;, &lt;code&gt;MyCorp.TheProduct.OtherModule&lt;/code&gt;, &lt;code&gt;MyCorp.TheProduct.OtherModule.Integration&lt;/code&gt;, and &lt;code&gt;ThirdParty&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内の型&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Collections.Generic&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Linq&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyCorp.TheProduct.OtherModule&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyCorp.TheProduct.OtherModule.Integration&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ThirdParty&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4e3e8cb2c0875baf709e4024d6b0ca0c20ab0b5b" translate="yes" xml:space="preserve">
          <source>Types in &lt;code&gt;System&lt;/code&gt;, &lt;code&gt;System.Collections.Generic&lt;/code&gt;, &lt;code&gt;System.Linq&lt;/code&gt;, &lt;code&gt;MyCorp.TheProduct&lt;/code&gt;, &lt;code&gt;MyCorp.TheProduct.OtherModule&lt;/code&gt;, &lt;code&gt;MyCorp.TheProduct.OtherModule.Integration&lt;/code&gt;, and &lt;code&gt;ThirdParty&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内の型&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Collections.Generic&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Linq&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyCorp.TheProduct&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyCorp.TheProduct.OtherModule&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyCorp.TheProduct.OtherModule.Integration&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ThirdParty&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="551e0c03acf80f91c7c9b334405f8da52d840d4d" translate="yes" xml:space="preserve">
          <source>Types in namespace &lt;code&gt;MyCorp.TheProduct.SomeModule&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名前空間のタイプ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyCorp.TheProduct.SomeModule&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="62467dab55f6272edf5d8b61217803619b4984a3" translate="yes" xml:space="preserve">
          <source>Types in the &lt;em&gt;null&lt;/em&gt; namespace (the global namespace)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でタイプ&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ヌル&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名前空間（グローバル名前空間）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="746fb56ae02a32de454b0cae1c045ec0f1c37302" translate="yes" xml:space="preserve">
          <source>Types in the current namespace &lt;code&gt;MyCorp.TheProduct.SomeModule.Utilities&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;現在の名前空間のタイプ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyCorp.TheProduct.SomeModule.Utilities&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c3b64bf60e0498c3147ef5069b9ebb7b7e02a2a9" translate="yes" xml:space="preserve">
          <source>Visual Studio's templates, by default, put the usings &lt;em&gt;outside&lt;/em&gt; of the namespace (for example if you make VS generate a new class in a new file).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Visual Studioのテンプレートは、デフォルト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で、名前空間の&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;外&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;法&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を配置します（たとえば、VSに新しいファイルで新しいクラスを生成させる場合）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="51042845e3ed1187d9582fdba58d81dbd9a8ba0a" translate="yes" xml:space="preserve">
          <source>When the using-alias directive is positioned within the namespace, however, the compiler has to choose between two different, conflicting Guid types both defined within the same namespace. Both of these types provide a matching constructor. The compiler is unable to make a decision, so it flags the compiler error.</source>
          <target state="translated">しかし、using-alias ディレクティブが名前空間内に配置されている場合、コンパイラは同じ名前空間内に定義されている 2 つの異なる、相反する Guid 型のどちらかを選択しなければなりません。これらの型はどちらも一致するコンストラクタを提供します。コンパイラは判断できないので、コンパイラ・エラーを通知します。</target>
        </trans-unit>
        <trans-unit id="f8442593b53631076684617e148a99c4a785e057" translate="yes" xml:space="preserve">
          <source>When you have the import inside the namespace then it will find the class. If the import is outside the namespace then the import will be ignored and the class and namespace have to be fully qualified.</source>
          <target state="translated">インポートがネームスペース内にある場合は、クラスを見つけます。インポートがネームスペースの外にある場合、インポートは無視され、クラスとネームスペースは完全に修飾されている必要があります。</target>
        </trans-unit>
        <trans-unit id="0474ba91551dc08aed94545a3b7eb9cd1d8e03ba" translate="yes" xml:space="preserve">
          <source>When you use &lt;code&gt;using Something.Other&lt;/code&gt;&lt;em&gt;outside&lt;/em&gt; of a &lt;code&gt;namespace Parent&lt;/code&gt;, it refers to the first one (Something.Other).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;namespace Parent&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;外&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using Something.Other&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、最初のもの（Something.Other）を参照します。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="82011997a6ea7cc8205ce7dbf6e65e548572b200" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;using&lt;/code&gt; statements inside the namespace, it suddenly becomes:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名前空間内の文を、それが突然、次のようになります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a147613a822c14163c682f90d9cb4d7ba498952" translate="yes" xml:space="preserve">
          <source>You can create this config file in solution level and add it to your projects as 'Existing Link File' to share the config across all of your projects too.</source>
          <target state="translated">このコンフィグファイルをソリューションレベルで作成し、「既存のリンクファイル」としてプロジェクトに追加することで、すべてのプロジェクトでコンフィグを共有することができます。</target>
        </trans-unit>
        <trans-unit id="733c154ca115471ffbef3193211673105955f21b" translate="yes" xml:space="preserve">
          <source>is entirely equivalent to:</source>
          <target state="translated">と完全に等価です。</target>
        </trans-unit>
        <trans-unit id="d1add0059bf8e9b747aba843af8d9a92c234489d" translate="yes" xml:space="preserve">
          <source>versus:</source>
          <target state="translated">versus:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
