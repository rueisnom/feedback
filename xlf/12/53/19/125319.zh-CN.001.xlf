<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/125319">
    <body>
      <group id="125319">
        <trans-unit id="13c80939e98b207ec5609c70a1f029905e6596ed" translate="yes" xml:space="preserve">
          <source>(Note that &lt;code&gt;MyCorp.TheProduct&lt;/code&gt; was a part of &quot;3.&quot; and was therefore not needed between &quot;4.&quot; and &quot;5.&quot;.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（请注意，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyCorp.TheProduct&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&amp;ldquo; 3.&amp;rdquo;的一部分，因此在&amp;ldquo; 4.&amp;rdquo;和&amp;ldquo; 5.&amp;rdquo;之间不需要。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f53499b33b469e79a0026e9532b27dead9ae5e93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;using&lt;/code&gt; directives specified inside namespaces can make for shorter code since they don't need to be fully qualified as when they're specified on the outside.</source>
          <target state="translated">&lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在名称空间中指定的指令可以缩短代码长度，因为它们不需要像在外部指定时一样完全合格。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26d59afdbafe83b3ffbaed9ce40ebf75eae019a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;(1) With usings outside:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（1）外部使用：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3c6b9c8ca62ade1455f2e1b4dbfa5529d912fc6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;(2) With usings inside:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（2）内部使用：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="38d2073cb2f6532d32d9eb2aee352daa9e26c947" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Concluding remarks&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;结束语&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="42d76294ecff26012ba6baccba64a184ce5cd4e7" translate="yes" xml:space="preserve">
          <source>According the to StyleCop Documentation:</source>
          <target state="translated">根据StyleCop文档的规定。</target>
        </trans-unit>
        <trans-unit id="d4a35ba98acb6526b54dd9713806c61dd1c188da" translate="yes" xml:space="preserve">
          <source>According to &lt;a href=&quot;http://www.hanselman.com/blog/BackToBasicsDoNamespaceUsingDirectivesAffectAssemblyLoading.aspx&quot;&gt;Hanselman - Using Directive and Assembly Loading...&lt;/a&gt; and other such articles there is technically no difference.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;根据&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.hanselman.com/blog/BackToBasicsDoNamespaceUsingDirectivesAffectAssemblyLoading.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hanselman-使用指令和程序集加载...&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以及其他此类文章，技术上没有区别。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c87a0e035fb216cf89791ec16d880b2d2f9b37e" translate="yes" xml:space="preserve">
          <source>Also, if a nested namespace has the same name as a type, it can cause problems.</source>
          <target state="translated">另外,如果一个嵌套的命名空间和一个类型有相同的名字,也会引起问题。</target>
        </trans-unit>
        <trans-unit id="09988a20bb3d192be3c7367fc15188f803a150ca" translate="yes" xml:space="preserve">
          <source>And &lt;em&gt;Bar.cs&lt;/em&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bar.cs&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f70040b45265f5e96cab3aa11ec2b9be8bd5551" translate="yes" xml:space="preserve">
          <source>Another subtlety that I don't believe has been covered by the other answers is for when you have a class and namespace with the same name.</source>
          <target state="translated">另一个微妙的地方,我不相信其他答案已经涉及到了,那就是当你有一个同名的类和命名空间时。</target>
        </trans-unit>
        <trans-unit id="3cb8beca0579e015e02e88418938e973b50b2fcc" translate="yes" xml:space="preserve">
          <source>As Jeppe Stig Nielsen &lt;a href=&quot;https://stackoverflow.com/a/16092975/2707705&quot;&gt;said&lt;/a&gt;, this thread already has great answers, but I thought this rather obvious subtlety was worth mentioning too.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正如Jeppe Stig Nielsen &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/16092975/2707705&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所说&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，该线程已经有了不错的答案，但是我认为这种明显的微妙之处也值得一提。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d32b8feded9338982879c31bc673d3bcd6c4484c" translate="yes" xml:space="preserve">
          <source>CS0576: Namespace 'Microsoft.Sample' contains a definition conflicting with alias 'Guid'</source>
          <target state="translated">CS0576:命名空间'Microsoft.Sample'包含一个与别名'Guid'冲突的定义</target>
        </trans-unit>
        <trans-unit id="be428ac1f20b57a9aa7041f3931693095260489c" translate="yes" xml:space="preserve">
          <source>Cause 
A C# using directive is placed outside of a namespace element.</source>
          <target state="translated">原因 一个C#使用指令被放置在命名空间元素之外。</target>
        </trans-unit>
        <trans-unit id="75e291169a2ebb63c935a5de7382990c0513d618" translate="yes" xml:space="preserve">
          <source>Consider:</source>
          <target state="translated">Consider:</target>
        </trans-unit>
        <trans-unit id="64f1cbf1d2e3e32985c88bdaffa742d700b3208d" translate="yes" xml:space="preserve">
          <source>First, remember that a namespace declaration with periods, like:</source>
          <target state="translated">首先,记住,命名空间声明中的句号,如。</target>
        </trans-unit>
        <trans-unit id="e1a2c21bf8650e9154a38cd7552fcb3f29f58051" translate="yes" xml:space="preserve">
          <source>For example, the following code would result in two violations of this rule.</source>
          <target state="translated">例如,以下代码将导致两次违反本规则:</target>
        </trans-unit>
        <trans-unit id="644a30cc91964ad692908e79108e7a2a1de5e1f7" translate="yes" xml:space="preserve">
          <source>How to Fix Violations
To fix a violation of this rule, move all using directives and using-alias directives within the namespace element.</source>
          <target state="translated">如何修复违反规则 要修复违反此规则,请将所有使用指令和使用-alias指令移动到命名空间元素中。</target>
        </trans-unit>
        <trans-unit id="8f101f82fe057f2e9148da5f7370d29f739e18bd" translate="yes" xml:space="preserve">
          <source>However if you use it &lt;em&gt;inside&lt;/em&gt; of that namespace declaration, it refers to the second one (Parent.Something.Other)!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，如果&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该名称空间声明中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用它&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它将引用第二个（Parent.Something.Other）！&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31dd4a724191ec6105febb2fb3696193e01a2ee0" translate="yes" xml:space="preserve">
          <source>I have been running &lt;a href=&quot;http://en.wikipedia.org/wiki/StyleCop&quot;&gt;StyleCop&lt;/a&gt; over some C# code, and it keeps reporting that my &lt;code&gt;using&lt;/code&gt; directives should be inside the namespace.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我一直在&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过某些C＃代码&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运行&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/StyleCop&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;StyleCop&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，并且一直在报告我的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指令应该在名称空间内。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="956bc1dda1ec8ac8cfa2e7bd3b11b0addb8d59e5" translate="yes" xml:space="preserve">
          <source>If you wanted to, you could put &lt;code&gt;using&lt;/code&gt; directives on all of these levels. (Of course, we want to have &lt;code&gt;using&lt;/code&gt;s in only one place, but it would be legal according to the language.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果愿意，可以&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在所有这些级别上&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指令。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（当然，我们只想&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在一个地方&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; s，但是根据语言，这是合法的。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43f852ee4f1ecc376814f854a51cc9f8f8d31566" translate="yes" xml:space="preserve">
          <source>In the above case, to find out what type &lt;code&gt;Ambiguous&lt;/code&gt; is, the search goes in this order:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在上述情况下，要找出&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Ambiguous&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类型&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;什么&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，搜索按以下顺序进行：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="96601fc71a11d2ce07689e9427287a51448cfa0d" translate="yes" xml:space="preserve">
          <source>Is there a technical reason for putting the &lt;code&gt;using&lt;/code&gt; directives inside instead of outside the namespace?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是否有技术上的理由将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指令放在名称空间的内部而不是外部？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="01abffeb795e5e0ef7f6f9503a2bd5488e6954d6" translate="yes" xml:space="preserve">
          <source>It is a better practice if those &lt;strong&gt;default&lt;/strong&gt; using i.e. &quot;&lt;em&gt;references&lt;/em&gt;&quot; used in your source solution should be outside the namespaces and those that are &lt;strong&gt;&quot;new added reference&quot;&lt;/strong&gt; is a good practice is you should put it inside the namespace. This is to distinguish what references are being added.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在源解决方案中使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;默认值（&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;即&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引用&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rdquo;）的&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;默认值&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;应该在命名空间之外，而那些&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;新添加引用&amp;rdquo;的&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;默认值&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;应该&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是一个好习惯，则应将其放在命名空间中。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是为了区分正在添加哪些引用。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63600b89eb34e7a0c564ef31800606259a53c96a" translate="yes" xml:space="preserve">
          <source>It is always dangerous to move the usings from one location to another because the search hierarchy changes, and another type may be found. Therefore, choose one convention and stick to it, so that you won't have to ever move usings.</source>
          <target state="translated">从一个地方转移到另一个地方,总是很危险的,因为搜索的层次会发生变化,可能会发现另一种类型。因此,选择一个惯例,并坚持下去,这样你就不会再去搬动usings了。</target>
        </trans-unit>
        <trans-unit id="7cbfc58096eecd07cf917861718ed5aab8e81d8a" translate="yes" xml:space="preserve">
          <source>It is important to note that when code has been written with using directives placed outside of the namespace, care should be taken when moving these directives within the namespace, to ensure that this is not changing the semantics of the code. As explained above, placing using-alias directives within the namespace element allows the compiler to choose between conflicting types in ways that will not happen when the directives are placed outside of the namespace.</source>
          <target state="translated">需要注意的是,当编写的代码中使用了放置在命名空间之外的使用指令时,在将这些指令移动到命名空间内时要注意,以确保不会改变代码的语义。如上文所述,将使用-alias指令放在命名空间元素中,可以让编译器在冲突类型之间进行选择,而当指令放在命名空间之外时,就不会出现这种情况。</target>
        </trans-unit>
        <trans-unit id="7a3ece54751ed5bd9039330832787b6a50745b6f" translate="yes" xml:space="preserve">
          <source>It's also interesting to note what happens if &lt;code&gt;Foo&lt;/code&gt; is in namespace &lt;code&gt;Outer&lt;/code&gt;, rather than &lt;code&gt;Outer.Inner&lt;/code&gt;. In that case, adding &lt;code&gt;Outer.Math&lt;/code&gt; in File2 breaks File1 regardless of where the &lt;code&gt;using&lt;/code&gt; goes. This implies that the compiler searches the innermost enclosing namespace before it looks at any &lt;code&gt;using&lt;/code&gt; directive.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有趣的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在命名空间&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Outer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而不是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Outer.Inner&lt;/code&gt; 中&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;会发生什么&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在这种情况下，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;无论&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;哪里，在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Outer.Math&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;添加&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Outer.Math都会&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;破坏&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;File1&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这意味着编译器在查看任何&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;指令&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之前先搜索最内层的命名空间&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8b1135f13943bc689bae6349325ada0282a62a8" translate="yes" xml:space="preserve">
          <source>Multiple Namespaces</source>
          <target state="translated">多名称空间</target>
        </trans-unit>
        <trans-unit id="c3ec7cd84f6a7af3c659cd5e8fc499f8f59ce92c" translate="yes" xml:space="preserve">
          <source>My preference is to put them outside of namespaces.</source>
          <target state="translated">我的偏好是把它们放在命名空间之外。</target>
        </trans-unit>
        <trans-unit id="be49cf9fdf3dcfdb427a405771d2e56f61ba63bb" translate="yes" xml:space="preserve">
          <source>Nested types inside &lt;code&gt;C&lt;/code&gt; (including inherited nested types)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; 中的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;嵌套类型&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（包括继承的嵌套类型）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ef35d942a3c4f955e1ad271a58ed50adf0ee510" translate="yes" xml:space="preserve">
          <source>No matter if you put the usings inside or outside the namespace declaration, there's always the possibility that someone later adds a new type with identical name to one of the namespaces which have higher priority.</source>
          <target state="translated">无论你把usings放在命名空间声明的内部或外部,总是有可能后来有人在其中一个具有更高的优先级的命名空间中添加了一个新的同名类型。</target>
        </trans-unit>
        <trans-unit id="398ad3bec765621a50601d6f9a079cc6ed29c6fb" translate="yes" xml:space="preserve">
          <source>Not pretty.</source>
          <target state="translated">不漂亮。</target>
        </trans-unit>
        <trans-unit id="4a58f815b1c2579c1f5aeb3707e58c3e14e7fdaf" translate="yes" xml:space="preserve">
          <source>Now imagine that someone adds another file (File2.cs) to the project that looks like this:</source>
          <target state="translated">现在想象一下,有人在项目中添加了另一个文件(File2.cs),看起来是这样的。</target>
        </trans-unit>
        <trans-unit id="69084d69ae0fee95e80e54a1f91fcab519122bee" translate="yes" xml:space="preserve">
          <source>Now the compiler searches &lt;code&gt;System&lt;/code&gt; before searching &lt;code&gt;Outer&lt;/code&gt;, finds &lt;code&gt;System.Math&lt;/code&gt;, and all is well.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，编译器&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在搜索&lt;/font&gt; &lt;code&gt;Outer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;之前先&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;搜索&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;然后&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;找到&lt;/font&gt; &lt;code&gt;System.Math&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;，一切都很好。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00954b4224e090b2009f8aa807bb7905cfe619ca" translate="yes" xml:space="preserve">
          <source>Now, let's be explicit about what this means in a concrete example with the two major conventions.</source>
          <target state="translated">现在,我们用两个主要的约定俗成的具体例子来明确一下这意味着什么。</target>
        </trans-unit>
        <trans-unit id="134de1b1e2468363c23a475539cd2b9b859f888c" translate="yes" xml:space="preserve">
          <source>Now, search for the type &lt;code&gt;Ambiguous&lt;/code&gt; goes in this order:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，搜索类型&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Ambiguous&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;依次进行：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a79df2e4e156baca4eea6aaaa00495226da8ee4" translate="yes" xml:space="preserve">
          <source>One (tiny) advantage of having usings &lt;em&gt;outside&lt;/em&gt; is that you can then utilize the using directives for a global attribute, for example &lt;code&gt;[assembly: ComVisible(false)]&lt;/code&gt; instead of &lt;code&gt;[assembly: System.Runtime.InteropServices.ComVisible(false)]&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在外部&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个（微小）优点&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是，您可以然后对全局属性使用using指令，例如，使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[assembly: ComVisible(false)]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代替&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[assembly: System.Runtime.InteropServices.ComVisible(false)]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="756f6a4e0a8e02d568f669cd27cfcc4d7397824d" translate="yes" xml:space="preserve">
          <source>One can adjust stylecop to check &lt;code&gt;using&lt;/code&gt; directives outside of namespaces through adding &lt;code&gt;stylecop.json&lt;/code&gt; file in the root of the project file with the following:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在项目文件的根目录中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;添加&lt;/font&gt; &lt;code&gt;stylecop.json&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;文件，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以通过以下方式调整stylecop以&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;命名空间之外的指令&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进行检查&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92616370c4a06e100221736750ac43bb04e1a4a5" translate="yes" xml:space="preserve">
          <source>One wrinkle I ran into (that isn't covered in other answers):</source>
          <target state="translated">我遇到的一个皱纹(其他答案中没有涉及)。</target>
        </trans-unit>
        <trans-unit id="13fa65c554d5fd2fbc6e9f79c96c4070d51b0c0a" translate="yes" xml:space="preserve">
          <source>Parent.Something.Other</source>
          <target state="translated">Parent.Something.Other</target>
        </trans-unit>
        <trans-unit id="bf2b3a71d168e49a5958301792ffc739003f4d70" translate="yes" xml:space="preserve">
          <source>Placing multiple namespace elements within a single file is generally a bad idea, but if and when this is done, it is a good idea to place all using directives within each of the namespace elements, rather than globally at the top of the file. This will scope the namespaces tightly, and will also help to avoid the kind of behavior described above.</source>
          <target state="translated">在一个文件中放置多个命名空间元素通常是个坏主意,但如果这样做的话,最好是将所有使用指令放置在每个命名空间元素中,而不是全局放置在文件的顶部。这样做会使命名空间的范围更紧密,同时也有助于避免出现上面描述的那种行为。</target>
        </trans-unit>
        <trans-unit id="925d84c837a9f7f533f2b7db98e912b39f0d9ff9" translate="yes" xml:space="preserve">
          <source>Placing the using-alias directive outside of the namespace is a bad practice because it can lead to confusion in situations such as this, where it is not obvious which version of the type is actually being used. This can potentially lead to a bug which might be difficult to diagnose.</source>
          <target state="translated">将使用-alias指令放在命名空间之外是一个不好的做法,因为在这种情况下,可能会导致混淆,因为在这种情况下,不知道实际使用的是哪个版本的类型。这可能会导致一个可能难以诊断的错误。</target>
        </trans-unit>
        <trans-unit id="19e0378823e626a0c3d97eaf723f6d0cefb3c551" translate="yes" xml:space="preserve">
          <source>Placing using-alias directives within the namespace element eliminates this as a source of bugs.</source>
          <target state="translated">将使用-alias指令放置在命名空间元素中,可以消除这个bug。</target>
        </trans-unit>
        <trans-unit id="09f056d7fdb8307f6f0831ae70720f77c09b12f6" translate="yes" xml:space="preserve">
          <source>Presume the code file &lt;em&gt;Foo.cs&lt;/em&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;假定代码文件&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Foo.cs&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="69e6b06ddf09c9af2a3496b50c09228247817da7" translate="yes" xml:space="preserve">
          <source>Putting it inside the namespaces makes the declarations local to that namespace for the file (in case you have multiple namespaces in the file) but if you only have one namespace per file then it doesn't make much of a difference whether they go outside or inside the namespace.</source>
          <target state="translated">把它放在命名空间里,可以使文件的声明本地化到该文件的命名空间(如果你在文件里有多个命名空间的话),但如果每个文件只有一个命名空间,那么它们在命名空间外还是在命名空间里,并没有什么区别。</target>
        </trans-unit>
        <trans-unit id="6af6e9ba70bcaf58bc8d3dce5c5182d0fbb6ac54" translate="yes" xml:space="preserve">
          <source>Rule Description 
A violation of this rule occurs when a using directive or a using-alias directive is placed outside of a namespace element, unless the file does not contain any namespace elements.</source>
          <target state="translated">规则说明 当使用指令或使用-alias指令被放置在命名空间元素之外时,除非文件中不包含任何命名空间元素,否则会发生违反本规则的情况。</target>
        </trans-unit>
        <trans-unit id="84546d9ca5aaa960a592460413ff0f8c24fe13fa" translate="yes" xml:space="preserve">
          <source>SA1200: UsingDirectivesMustBePlacedWithinNamespace</source>
          <target state="translated">SA1200:UsingDirectivesMustBePlacedWithinNamespace</target>
        </trans-unit>
        <trans-unit id="b35f6998372eaf0597d95e69071c4636cb21d3e5" translate="yes" xml:space="preserve">
          <source>Should 'using' directives be inside or outside the namespace</source>
          <target state="translated">使用 &quot;使用 &quot;指令应该在命名空间内部还是外部?</target>
        </trans-unit>
        <trans-unit id="ed29f647aef11a6173bbba28e079e8e60ba45789" translate="yes" xml:space="preserve">
          <source>Some would argue that &lt;code&gt;Math&lt;/code&gt; might be a bad name for a user-defined class, since there's already one in &lt;code&gt;System&lt;/code&gt;; the point here is just that there &lt;em&gt;is&lt;/em&gt; a difference, and it affects the maintainability of your code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有人会认为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Math&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于用户定义的类来说可能是个坏名字，因为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System&lt;/code&gt; 中&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;已经有一个了&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这里要说的就是这样存在&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;差异，并且它会影响您的代码的可维护性。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a2bcce720ff9d95fc605504bd0dd89ceaec92a8c" translate="yes" xml:space="preserve">
          <source>Something.Other</source>
          <target state="translated">Something.Other</target>
        </trans-unit>
        <trans-unit id="d3b2c5ec4abca07b1dbf44dbb972237f335d4b54" translate="yes" xml:space="preserve">
          <source>Suppose you have these namespaces:</source>
          <target state="translated">假设你有这些命名空间。</target>
        </trans-unit>
        <trans-unit id="1e764edbf851847731d83b31f658865c296f3aa0" translate="yes" xml:space="preserve">
          <source>That may omit the outer namespace in the &lt;code&gt;using&lt;/code&gt; directive, for short:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;简而言之，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这可能会省略&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指令中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的外部名称空间&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7a157129b5972a52ba49ed360aa4d4e949433cc9" translate="yes" xml:space="preserve">
          <source>The code creates an alias to the System.Guid type called Guid, and also creates its own type called Guid with a matching constructor interface. Later, the code creates an instance of the type Guid. To create this instance, the compiler must choose between the two different definitions of Guid. When the using-alias directive is placed outside of the namespace element, the compiler will choose the local definition of Guid defined within the local namespace, and completely ignore the using-alias directive defined outside of the namespace. This, unfortunately, is not obvious when reading the code.</source>
          <target state="translated">这段代码创建了一个System.Guid类型的别名,叫做Guid,同时也创建了自己的类型Guid,并有一个匹配的构造函数接口。之后,代码创建了一个 Guid 类型的实例。为了创建这个实例,编译器必须在Guid的两个不同定义中选择。当使用-alias指令放在命名空间元素之外时,编译器会选择在本地命名空间内定义的Guid的本地定义,而完全忽略在命名空间之外定义的使用-alias指令。不幸的是,这一点在阅读代码时并不明显。</target>
        </trans-unit>
        <trans-unit id="187ff69b695bce7381ee14b888bbcaa08edd0aa5" translate="yes" xml:space="preserve">
          <source>The code fails on the following compiler error, found on the line containing &lt;code&gt;Guid g = new Guid(&quot;hello&quot;);&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代码在包含&lt;/font&gt; &lt;code&gt;Guid g = new Guid(&quot;hello&quot;);&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;的行中发现以下编译器错误时失败&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a36c0b3f8a2013eaf4a191828f0b11c0a3bde44c" translate="yes" xml:space="preserve">
          <source>The compiler searches &lt;code&gt;Outer&lt;/code&gt; before looking at those &lt;code&gt;using&lt;/code&gt; directives outside the namespace, so it finds &lt;code&gt;Outer.Math&lt;/code&gt; instead of &lt;code&gt;System.Math&lt;/code&gt;. Unfortunately (or perhaps fortunately?), &lt;code&gt;Outer.Math&lt;/code&gt; has no &lt;code&gt;PI&lt;/code&gt; member, so File1 is now broken.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;编译器先搜索&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Outer&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;然后再&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;命名空间之外的指令&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;查看它们&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，因此它将找到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Outer.Math&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而不是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Math&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不幸的是（或者幸运的是？），&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Outer.Math&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;没有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;PI&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;成员，因此&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;File1&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在已损坏。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8c3a931af1eb87d55035ded85459b443f2474c36" translate="yes" xml:space="preserve">
          <source>The following code, however, would not result in any violations of this rule:</source>
          <target state="translated">然而,下列守则不会导致任何违反本条规则的行为:</target>
        </trans-unit>
        <trans-unit id="0c97e3669b28cc3ffab716d5ca718cd5d3aa8942" translate="yes" xml:space="preserve">
          <source>The following example works because the types &lt;code&gt;Foo&lt;/code&gt; and &lt;code&gt;Bar&lt;/code&gt; are both in the same global namespace, &lt;code&gt;Outer&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;下面的示例起作用，因为类型&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;都在同一个全局名称空间&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Outer&lt;/code&gt; 中&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="70da926f7952de564f05bf3830e6fdc586e68463" translate="yes" xml:space="preserve">
          <source>The other convention:</source>
          <target state="translated">另一个惯例。</target>
        </trans-unit>
        <trans-unit id="b0e0458359c8b821fad8fb3f674cd0a6718dea51" translate="yes" xml:space="preserve">
          <source>The rule for resolving which type is implied, can be loosely stated like this: &lt;strong&gt;First search the inner-most &quot;scope&quot; for a match, if nothing is found there go out one level to the next scope and search there, and so on&lt;/strong&gt;, until a match is found. If at some level more than one match is found, if one of the types are from the current assembly, pick that one and issue a compiler warning. Otherwise, give up (compile-time error).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;解决隐含类型的规则可以大致这样表示：&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;首先在最内层的&amp;ldquo;范围&amp;rdquo;中查找匹配项，如果没有找到匹配项，则进入下一个范围并在那里搜索，依此类推&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，直到找到匹配项。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果在某种程度上找到多个匹配项，并且其中一种类型来自当前程序集，则选择该一种并发出编译器警告。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;否则，放弃（编译时错误）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29e50ce1993e27af18f0f5c2a913d7c84582e1d0" translate="yes" xml:space="preserve">
          <source>The technical reasons are discussed in the answers and I think that it comes to the personal preferences in the end since the difference is not that &lt;em&gt;big&lt;/em&gt; and there are tradeoffs for both of them. Visual Studio's default template for creating &lt;code&gt;.cs&lt;/code&gt; files use &lt;code&gt;using&lt;/code&gt; directives outside of namespaces e.g.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;答案中讨论了技术原因，我认为最终涉及的是个人喜好，因为两者之间的差异并不&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;大，&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而且两者都需要权衡取舍。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;创建Visual Studio的默认模板&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.cs&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文件使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指令的命名空间如外&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30ae19b5100be6377570a3eed55577e5c933b65a" translate="yes" xml:space="preserve">
          <source>There is a simple solution: add the &quot;&lt;code&gt;global::&lt;/code&gt;&quot; prefix: &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/namespaces/how-to-use-the-global-namespace-alias&quot;&gt;docs&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有一个简单的解决方案：添加&amp;ldquo; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;global::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rdquo;前缀：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/namespaces/how-to-use-the-global-namespace-alias&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;docs&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49d38edc7a6ce66170757a62c78345c0705c01d5" translate="yes" xml:space="preserve">
          <source>There is actually a (subtle) difference between the two. Imagine you have the following code in File1.cs:</source>
          <target state="translated">实际上,这两者之间有一个(微妙的)区别。想象一下,你在File1.cs里有以下代码。</target>
        </trans-unit>
        <trans-unit id="f76a7c91f2b7778395e2fc68f80b543eb1b3450e" translate="yes" xml:space="preserve">
          <source>There is an issue with placing using statements inside the namespace when you wish to use aliases. The alias doesn't benefit from the earlier &lt;code&gt;using&lt;/code&gt; statements and has to be fully qualified.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当您希望使用别名时，在名称空间中放置using语句会出现问题。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;别名不能从较早的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;语句中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;受益&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，必须完全限定。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ca80b14b81433b2a715dc818cb725d52202f43db" translate="yes" xml:space="preserve">
          <source>This can be particularly pronounced if you have a long-winded alias such as the following (which is how I found the problem):</source>
          <target state="translated">如果你有一个冗长的别名,比如下面这样的别名(我就是这样发现问题的),这种情况会特别明显。</target>
        </trans-unit>
        <trans-unit id="ac6c1e42d0eb2770bad2ba9d7c404e49566f91a5" translate="yes" xml:space="preserve">
          <source>This changes if you put the &lt;code&gt;using&lt;/code&gt; inside your namespace declaration, as follows:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;放在名称空间声明中，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;则情况会发生变化&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，如下所示：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="816ea5d1ef2de960bc030e05178aa008f5ede004" translate="yes" xml:space="preserve">
          <source>This code will compile cleanly, without any compiler errors. However, it is unclear which version of the Guid type is being allocated. If the using directive is moved inside of the namespace, as shown below, a compiler error will occur:</source>
          <target state="translated">这段代码将被编译得很干净,没有任何编译器错误。但是,不清楚是哪个版本的 Guid 类型被分配了。如果使用指令被移动到命名空间内,如下图所示,就会出现编译器错误。</target>
        </trans-unit>
        <trans-unit id="78e3b49698e0b99860655a91da438e804a112592" translate="yes" xml:space="preserve">
          <source>This thread already has some great answers, but I feel I can bring a little more detail with this additional answer.</source>
          <target state="translated">这条线程已经有了一些很好的答案,但我觉得我可以通过这个补充的答案,带来更多的细节。</target>
        </trans-unit>
        <trans-unit id="fe0f3d496daf00fb25025f0f97ad5308162b5eaa" translate="yes" xml:space="preserve">
          <source>Types in &lt;code&gt;MyCorp.TheProduct&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;MyCorp.TheProduct&lt;/code&gt; 中的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类型&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f70621da8fb62dc5eeed84964e68057431467dd4" translate="yes" xml:space="preserve">
          <source>Types in &lt;code&gt;MyCorp&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;MyCorp&lt;/code&gt; 中的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类型&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5a35e89b7793f47c809492315be0c2bb184b6b69" translate="yes" xml:space="preserve">
          <source>Types in &lt;code&gt;System&lt;/code&gt;, &lt;code&gt;System.Collections.Generic&lt;/code&gt;, &lt;code&gt;System.Linq&lt;/code&gt;, &lt;code&gt;MyCorp.TheProduct.OtherModule&lt;/code&gt;, &lt;code&gt;MyCorp.TheProduct.OtherModule.Integration&lt;/code&gt;, and &lt;code&gt;ThirdParty&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在类型&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Collections.Generic&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Linq&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyCorp.TheProduct.OtherModule&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyCorp.TheProduct.OtherModule.Integration&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ThirdParty&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4e3e8cb2c0875baf709e4024d6b0ca0c20ab0b5b" translate="yes" xml:space="preserve">
          <source>Types in &lt;code&gt;System&lt;/code&gt;, &lt;code&gt;System.Collections.Generic&lt;/code&gt;, &lt;code&gt;System.Linq&lt;/code&gt;, &lt;code&gt;MyCorp.TheProduct&lt;/code&gt;, &lt;code&gt;MyCorp.TheProduct.OtherModule&lt;/code&gt;, &lt;code&gt;MyCorp.TheProduct.OtherModule.Integration&lt;/code&gt;, and &lt;code&gt;ThirdParty&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在类型&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Collections.Generic&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.Linq&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyCorp.TheProduct&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyCorp.TheProduct.OtherModule&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyCorp.TheProduct.OtherModule.Integration&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ThirdParty&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="551e0c03acf80f91c7c9b334405f8da52d840d4d" translate="yes" xml:space="preserve">
          <source>Types in namespace &lt;code&gt;MyCorp.TheProduct.SomeModule&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;命名空间&lt;/font&gt; &lt;code&gt;MyCorp.TheProduct.SomeModule&lt;/code&gt; 中的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类型&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="62467dab55f6272edf5d8b61217803619b4984a3" translate="yes" xml:space="preserve">
          <source>Types in the &lt;em&gt;null&lt;/em&gt; namespace (the global namespace)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;输入&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;空&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名称空间（全局名称空间）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="746fb56ae02a32de454b0cae1c045ec0f1c37302" translate="yes" xml:space="preserve">
          <source>Types in the current namespace &lt;code&gt;MyCorp.TheProduct.SomeModule.Utilities&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在当前名称空间&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyCorp.TheProduct.SomeModule.Utilities&lt;/code&gt; 中键入</target>
        </trans-unit>
        <trans-unit id="c3b64bf60e0498c3147ef5069b9ebb7b7e02a2a9" translate="yes" xml:space="preserve">
          <source>Visual Studio's templates, by default, put the usings &lt;em&gt;outside&lt;/em&gt; of the namespace (for example if you make VS generate a new class in a new file).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;默认情况下，Visual Studio的模板将使用方法&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;放在&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;命名空间&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之外&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（例如，如果让VS在新文件中生成新类）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="51042845e3ed1187d9582fdba58d81dbd9a8ba0a" translate="yes" xml:space="preserve">
          <source>When the using-alias directive is positioned within the namespace, however, the compiler has to choose between two different, conflicting Guid types both defined within the same namespace. Both of these types provide a matching constructor. The compiler is unable to make a decision, so it flags the compiler error.</source>
          <target state="translated">然而,当使用-alias指令被定位在命名空间中时,编译器必须在两个不同的、相互冲突的 Guid 类型中进行选择,这两个类型都定义在同一个命名空间中。这两种类型都提供了一个匹配的构造函数。编译器无法做出决定,所以会标记出编译器错误。</target>
        </trans-unit>
        <trans-unit id="f8442593b53631076684617e148a99c4a785e057" translate="yes" xml:space="preserve">
          <source>When you have the import inside the namespace then it will find the class. If the import is outside the namespace then the import will be ignored and the class and namespace have to be fully qualified.</source>
          <target state="translated">当你的导入在命名空间内,那么它将找到类。如果导入在命名空间之外,那么导入将被忽略,类和命名空间必须完全合格。</target>
        </trans-unit>
        <trans-unit id="0474ba91551dc08aed94545a3b7eb9cd1d8e03ba" translate="yes" xml:space="preserve">
          <source>When you use &lt;code&gt;using Something.Other&lt;/code&gt;&lt;em&gt;outside&lt;/em&gt; of a &lt;code&gt;namespace Parent&lt;/code&gt;, it refers to the first one (Something.Other).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当您&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt; &lt;code&gt;namespace Parent&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之外&lt;/font&gt;&lt;/em&gt;&lt;/font&gt; &lt;code&gt;using Something.Other&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它指的是第一个（Something.Other）。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="82011997a6ea7cc8205ce7dbf6e65e548572b200" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;using&lt;/code&gt; statements inside the namespace, it suddenly becomes:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名称空间中&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;语句时，它突然变成：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a147613a822c14163c682f90d9cb4d7ba498952" translate="yes" xml:space="preserve">
          <source>You can create this config file in solution level and add it to your projects as 'Existing Link File' to share the config across all of your projects too.</source>
          <target state="translated">您可以在解决方案级别中创建此配置文件,并将其添加到您的项目中,作为 &quot;现有链接文件 &quot;来共享您所有项目的配置。</target>
        </trans-unit>
        <trans-unit id="733c154ca115471ffbef3193211673105955f21b" translate="yes" xml:space="preserve">
          <source>is entirely equivalent to:</source>
          <target state="translated">完全等同于:</target>
        </trans-unit>
        <trans-unit id="d1add0059bf8e9b747aba843af8d9a92c234489d" translate="yes" xml:space="preserve">
          <source>versus:</source>
          <target state="translated">versus:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
