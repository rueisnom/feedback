<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/12859942">
    <body>
      <group id="12859942">
        <trans-unit id="6cda3a126b38102fb9da9475533aaf3305f7fc81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/Stored_procedure&quot;&gt;Stored procedures&lt;/a&gt; (can't handle multiple result sets)</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Stored_procedure&quot;&gt;Procedimientos almacenados&lt;/a&gt; (no puede manejar m&amp;uacute;ltiples conjuntos de resultados)</target>
        </trans-unit>
        <trans-unit id="b3ded5903fe8ef5cae508b2ae92f896e2213e013" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/book.mysqli.php&quot;&gt;MySQLi&lt;/a&gt; is the 'improved' extension for working with MySQL databases. It takes advantage of features that are available in newer versions of the MySQL server, exposes both a function-oriented and an object-oriented interface to the developer and a does few other nifty things.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/book.mysqli.php&quot;&gt;MySQLi&lt;/a&gt; es la extensi&amp;oacute;n 'mejorada' para trabajar con bases de datos MySQL. Aprovecha las caracter&amp;iacute;sticas que est&amp;aacute;n disponibles en las versiones m&amp;aacute;s recientes del servidor MySQL, expone una interfaz orientada a funciones y orientada a objetos al desarrollador y hace algunas otras cosas ingeniosas.</target>
        </trans-unit>
        <trans-unit id="d17381afa285d004079efeb7bdb099fd00671abd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/book.pdo.php&quot;&gt;PDO&lt;/a&gt; offers an API that consolidates most of the functionality that was previously spread across the major database access extensions, i.e. MySQL, PostgreSQL, SQLite, MSSQL, etc. The interface exposes high-level objects for the programmer to work with database connections, queries and result sets, and low-level drivers perform communication and resource handling with the database server. A lot of discussion and work is going into PDO and it&amp;rsquo;s considered the appropriate method of working with databases in modern, professional code.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/book.pdo.php&quot;&gt;PDO&lt;/a&gt; ofrece una API que consolida la mayor parte de la funcionalidad que anteriormente se extend&amp;iacute;a entre las principales extensiones de acceso a la base de datos, es decir, MySQL, PostgreSQL, SQLite, MSSQL, etc. La interfaz expone objetos de alto nivel para que el programador trabaje con conexiones de base de datos, consultas y conjuntos de resultados y controladores de bajo nivel realizan comunicaci&amp;oacute;n y manejo de recursos con el servidor de base de datos. Se est&amp;aacute; debatiendo y trabajando mucho en PDO y se considera el m&amp;eacute;todo apropiado para trabajar con bases de datos en c&amp;oacute;digo moderno y profesional.</target>
        </trans-unit>
        <trans-unit id="046ffaee85489e61d2263f509946570f847cc8ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/pdostatement.fetchall.php&quot;&gt;&lt;code&gt;PDOStatement::fetchAll()&lt;/code&gt;&lt;/a&gt; - Returns an array containing all of the result set rows</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/pdostatement.fetchall.php&quot;&gt; &lt;code&gt;PDOStatement::fetchAll()&lt;/code&gt; &lt;/a&gt; - Devuelve una matriz que contiene todas las filas del conjunto de resultados</target>
        </trans-unit>
        <trans-unit id="b28a28e308fceeb11923ec4f6b51a94fdc522831" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/pdostatement.fetchcolumn.php&quot;&gt;&lt;code&gt;PDOStatement::fetchColumn()&lt;/code&gt;&lt;/a&gt; - Returns a single column from the next row of a result set</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/pdostatement.fetchcolumn.php&quot;&gt; &lt;code&gt;PDOStatement::fetchColumn()&lt;/code&gt; &lt;/a&gt; - Devuelve una sola columna de la siguiente fila de un conjunto de resultados</target>
        </trans-unit>
        <trans-unit id="f38ca8ad882074ee896d85b8ff9c3b2f2d31a650" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/pdostatement.fetchobject.php&quot;&gt;&lt;code&gt;PDOStatement::fetchObject()&lt;/code&gt;&lt;/a&gt; - Fetches the next row and returns it as an object.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/pdostatement.fetchobject.php&quot;&gt; &lt;code&gt;PDOStatement::fetchObject()&lt;/code&gt; &lt;/a&gt; - Obtiene la siguiente fila y la devuelve como un objeto.</target>
        </trans-unit>
        <trans-unit id="6f018387924cb8a35b2d0d50bcf690d933b109aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/pdostatement.setfetchmode.php&quot;&gt;&lt;code&gt;PDOStatement::setFetchMode()&lt;/code&gt;&lt;/a&gt; - Set the default fetch mode for this statement</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/pdostatement.setfetchmode.php&quot;&gt; &lt;code&gt;PDOStatement::setFetchMode()&lt;/code&gt; &lt;/a&gt; - Establece el modo de recuperaci&amp;oacute;n predeterminado para esta declaraci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="0fa08d46c3da4c6dbad08eae37dd7aabd954a814" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/q/12859942&quot;&gt;&lt;strong&gt;Please, don't use &lt;code&gt;mysql_*&lt;/code&gt; functions in new code&lt;/strong&gt;&lt;/a&gt;. They are no longer maintained &lt;a href=&quot;https://wiki.php.net/rfc/mysql_deprecation&quot;&gt;and are officially deprecated&lt;/a&gt;. See the &lt;a href=&quot;http://uk.php.net/manual/en/function.mysql-connect.php&quot;&gt;&lt;strong&gt;red box&lt;/strong&gt;&lt;/a&gt;? Learn about &lt;a href=&quot;http://en.wikipedia.org/wiki/Prepared_statement&quot;&gt;&lt;em&gt;prepared statements&lt;/em&gt;&lt;/a&gt; instead, and use &lt;a href=&quot;http://php.net/pdo&quot;&gt;PDO&lt;/a&gt; or &lt;a href=&quot;http://php.net/mysqli&quot;&gt;MySQLi&lt;/a&gt; - &lt;a href=&quot;http://php.net/manual/en/mysqlinfo.api.choosing.php&quot;&gt;this article&lt;/a&gt; will help you decide which. If you choose PDO, &lt;a href=&quot;http://wiki.hashphp.org/PDO_Tutorial_for_MySQL_Developers&quot;&gt;here is a good tutorial&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/q/12859942&quot;&gt;&lt;strong&gt;Por favor, no use las funciones &lt;code&gt;mysql_*&lt;/code&gt; en el nuevo c&amp;oacute;digo&lt;/strong&gt;&lt;/a&gt; . Ya no se mantienen &lt;a href=&quot;https://wiki.php.net/rfc/mysql_deprecation&quot;&gt;y est&amp;aacute;n oficialmente en desuso&lt;/a&gt; . &amp;iquest;Ves el &lt;a href=&quot;http://uk.php.net/manual/en/function.mysql-connect.php&quot;&gt;&lt;strong&gt;cuadro rojo&lt;/strong&gt;&lt;/a&gt; ? Aprenda sobre las &lt;a href=&quot;http://en.wikipedia.org/wiki/Prepared_statement&quot;&gt;&lt;em&gt;declaraciones preparadas&lt;/em&gt;&lt;/a&gt; y use &lt;a href=&quot;http://php.net/pdo&quot;&gt;PDO&lt;/a&gt; o &lt;a href=&quot;http://php.net/mysqli&quot;&gt;MySQLi&lt;/a&gt; ; &lt;a href=&quot;http://php.net/manual/en/mysqlinfo.api.choosing.php&quot;&gt;este art&amp;iacute;culo&lt;/a&gt; lo ayudar&amp;aacute; a decidir cu&amp;aacute;l. Si elige PDO, &lt;a href=&quot;http://wiki.hashphp.org/PDO_Tutorial_for_MySQL_Developers&quot;&gt;aqu&amp;iacute; hay un buen tutorial&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f6ffdb59a47d534bf1c4ce50a2ab19c2c804aac9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OR die()&lt;/code&gt; is not a good way to handle the error since we can not handle the thing in &lt;code&gt;die&lt;/code&gt;. It will just end the script abruptly and then echo the error to the screen which you usually do NOT want to show to your end users, and let bloody hackers discover your schema. Alternately, the return values of &lt;code&gt;mysql_*&lt;/code&gt; functions can often be used in conjunction with &lt;a href=&quot;http://php.net/mysql_error&quot;&gt;mysql_error()&lt;/a&gt; to handle errors.</source>
          <target state="translated">&lt;code&gt;OR die()&lt;/code&gt; no es una buena forma de manejar el error ya que no podemos manejar la cosa en &lt;code&gt;die&lt;/code&gt; . Simplemente terminar&amp;aacute; el script abruptamente y luego har&amp;aacute; eco del error en la pantalla que generalmente NO desea mostrar a sus usuarios finales, y permitir&amp;aacute; que los hackers sangrientos descubran su esquema. Alternativamente, los valores de &lt;code&gt;mysql_*&lt;/code&gt; funciones mysql_ * a menudo se pueden usar junto con &lt;a href=&quot;http://php.net/mysql_error&quot;&gt;mysql_error ()&lt;/a&gt; para manejar errores.</target>
        </trans-unit>
        <trans-unit id="f8d90257eb4cba009d9da07c259d01492dd67cb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PDO::ERRMODE_EXCEPTION&lt;/code&gt;: Throw exceptions. It represents an error raised by PDO. You should not throw a &lt;code&gt;PDOException&lt;/code&gt; from your own code. See &lt;em&gt;Exceptions&lt;/em&gt; for more information about exceptions in PHP. It acts very much like &lt;code&gt;or die(mysql_error());&lt;/code&gt;, when it isn't caught. But unlike &lt;code&gt;or die()&lt;/code&gt;, the &lt;code&gt;PDOException&lt;/code&gt; can be caught and handled gracefully if you choose to do so.</source>
          <target state="translated">&lt;code&gt;PDO::ERRMODE_EXCEPTION&lt;/code&gt; : Lanzar excepciones. Representa un error provocado por PDO. No debe lanzar una &lt;code&gt;PDOException&lt;/code&gt; desde su propio c&amp;oacute;digo. Consulte &lt;em&gt;Excepciones&lt;/em&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre excepciones en PHP. Act&amp;uacute;a muy parecido &lt;code&gt;or die(mysql_error());&lt;/code&gt; , cuando no est&amp;aacute; atrapado. Pero a diferencia de &lt;code&gt;or die()&lt;/code&gt; , la &lt;code&gt;PDOException&lt;/code&gt; se puede capturar y manejar con gracia si elige hacerlo.</target>
        </trans-unit>
        <trans-unit id="5515c76631bc1066c78ab2cd9cdef4e2a606b1d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PDO::ERRMODE_SILENT&lt;/code&gt;. It's just setting error codes and acts pretty much the same as &lt;code&gt;mysql_*&lt;/code&gt; where you must check each result and then look at &lt;code&gt;$db-&amp;gt;errorInfo();&lt;/code&gt; to get the error details.</source>
          <target state="translated">&lt;code&gt;PDO::ERRMODE_SILENT&lt;/code&gt; . Solo establece c&amp;oacute;digos de error y act&amp;uacute;a casi igual que &lt;code&gt;mysql_*&lt;/code&gt; donde debe verificar cada resultado y luego mirar &lt;code&gt;$db-&amp;gt;errorInfo();&lt;/code&gt; para obtener los detalles del error.</target>
        </trans-unit>
        <trans-unit id="e7c4b1bce0513c7fb8025092a93478da761f79aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PDO::ERRMODE_WARNING&lt;/code&gt; Raise &lt;code&gt;E_WARNING&lt;/code&gt;. (Run-time warnings (non-fatal errors). Execution of the script is not halted.)</source>
          <target state="translated">&lt;code&gt;PDO::ERRMODE_WARNING&lt;/code&gt; Elevar &lt;code&gt;E_WARNING&lt;/code&gt; . (Advertencias en tiempo de ejecuci&amp;oacute;n (errores no fatales). La ejecuci&amp;oacute;n del script no se detiene).</target>
        </trans-unit>
        <trans-unit id="e02705f324751cbe9f1129e09c39ee8bf3c6790e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PDO::FETCH_ASSOC&lt;/code&gt;: returns an array indexed by column name as returned in your result set</source>
          <target state="translated">&lt;code&gt;PDO::FETCH_ASSOC&lt;/code&gt; : devuelve una matriz indexada por nombre de columna como se devolvi&amp;oacute; en su conjunto de resultados</target>
        </trans-unit>
        <trans-unit id="c53f912043ed13d79a8752a65b60437033b9a967" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PDO::FETCH_BOTH&lt;/code&gt; (default): returns an array indexed by both column name and 0-indexed column number as returned in your result set</source>
          <target state="translated">&lt;code&gt;PDO::FETCH_BOTH&lt;/code&gt; (predeterminado): devuelve una matriz indexada tanto por el nombre de la columna como por el n&amp;uacute;mero de la columna indexada en 0 como se devuelve en su conjunto de resultados</target>
        </trans-unit>
        <trans-unit id="64c39564f8d39a4c2fdc909d2132ee966fa92c95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PDO&lt;/code&gt; offers a better solution: exceptions. Anything we do with &lt;code&gt;PDO&lt;/code&gt; should be wrapped in a &lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt; block. We can force &lt;code&gt;PDO&lt;/code&gt; into one of three error modes by setting the error mode attribute. Three error handling modes are below.</source>
          <target state="translated">&lt;code&gt;PDO&lt;/code&gt; ofrece una mejor soluci&amp;oacute;n: excepciones. Cualquier cosa que hagamos con &lt;code&gt;PDO&lt;/code&gt; debe estar envuelta en un bloque &lt;code&gt;try&lt;/code&gt; - &lt;code&gt;catch&lt;/code&gt; . Podemos forzar a &lt;code&gt;PDO&lt;/code&gt; a uno de los tres modos de error configurando el atributo de modo de error. Hay tres modos de manejo de errores a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b690a13d160e3bb95e6e3e9ad4972ca25987a5b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt; prepared queries</source>
          <target state="translated">&lt;code&gt;SELECT&lt;/code&gt; , &lt;code&gt;INSERT&lt;/code&gt; AR , &lt;code&gt;UPDATE&lt;/code&gt; , &lt;code&gt;DELETE&lt;/code&gt; consultas preparadas</target>
        </trans-unit>
        <trans-unit id="8bf705f99d5823b73420e7e85ef046dfddb3f6d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ext/mysql&lt;/code&gt; was built for &lt;strong&gt;MySQL 3.23&lt;/strong&gt; and only got very few additions since then while mostly keeping compatibility with this old version which makes the code a bit harder to maintain. Missing features that is not supported by &lt;code&gt;ext/mysql&lt;/code&gt; include: (&lt;em&gt;&lt;a href=&quot;https://wiki.php.net/rfc/mysql_deprecation&quot;&gt;from PHP manual&lt;/a&gt;&lt;/em&gt;).</source>
          <target state="translated">&lt;code&gt;ext/mysql&lt;/code&gt; se cre&amp;oacute; para &lt;strong&gt;MySQL 3.23&lt;/strong&gt; y solo ha recibido muy pocas adiciones desde entonces, manteniendo la compatibilidad con esta versi&amp;oacute;n anterior, lo que hace que el c&amp;oacute;digo sea un poco m&amp;aacute;s dif&amp;iacute;cil de mantener. Las caracter&amp;iacute;sticas faltantes que no son compatibles con &lt;code&gt;ext/mysql&lt;/code&gt; incluyen: ( &lt;em&gt;&lt;a href=&quot;https://wiki.php.net/rfc/mysql_deprecation&quot;&gt;del manual de PHP&lt;/a&gt;&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="616d50367e59cecd8e39af146c7cc40afc851bf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mysql_*&lt;/code&gt; extension does not support &lt;strong&gt;prepared statements&lt;/strong&gt;, which is (among other things) a very effective countermeasure against &lt;strong&gt;SQL Injection&lt;/strong&gt;. It fixed a very serious vulnerability in MySQL dependent applications which allows attackers to gain access to your script and perform &lt;strong&gt;any possible query&lt;/strong&gt; on your database.</source>
          <target state="translated">&lt;code&gt;mysql_*&lt;/code&gt; extensi&amp;oacute;n mysql_ * no admite &lt;strong&gt;declaraciones preparadas&lt;/strong&gt; , que es (entre otras cosas) una contramedida muy efectiva contra la &lt;strong&gt;inyecci&amp;oacute;n SQL&lt;/strong&gt; . Se corrigi&amp;oacute; una vulnerabilidad muy grave en las aplicaciones dependientes de MySQL que permite a los atacantes obtener acceso a su script y realizar &lt;strong&gt;cualquier consulta posible&lt;/strong&gt; en su base de datos.</target>
        </trans-unit>
        <trans-unit id="04f4afe04132a28eaf0cf86a418f420d470d506d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pdo_query()&lt;/code&gt; adds very facile support for bound parameters. Converting old code is straightforward:</source>
          <target state="translated">&lt;code&gt;pdo_query()&lt;/code&gt; agrega soporte muy f&amp;aacute;cil para par&amp;aacute;metros enlazados. Convertir el c&amp;oacute;digo antiguo es sencillo:</target>
        </trans-unit>
        <trans-unit id="75528272c8ccd5010c8d8ca46c4a8dfbf9778675" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;and so on...&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;y as&amp;iacute;...&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5237e9f27ed52517cac1144483a5b7980060c686" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;voila&lt;/em&gt;, everything is parameterized and safe.</source>
          <target state="translated">&lt;em&gt;voila&lt;/em&gt; , todo est&amp;aacute; parametrizado y seguro.</target>
        </trans-unit>
        <trans-unit id="3fcb0c24213528d4e6d53492a70d7a8291036328" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;code&gt;mysql_&lt;/code&gt;&lt;/s&gt;&lt;code&gt;connect()&lt;/code&gt; becomes &lt;b&gt;&lt;code&gt;pdo_&lt;/code&gt;&lt;/b&gt;&lt;code&gt;connect()&lt;/code&gt;</source>
          <target state="translated">&lt;s&gt; &lt;code&gt;mysql_&lt;/code&gt; &lt;/s&gt; &lt;code&gt;connect()&lt;/code&gt; convierte en &lt;b&gt; &lt;code&gt;pdo_&lt;/code&gt; &lt;/b&gt; &lt;code&gt;connect()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b3d112ed884c4390787d133672862205824e4fd" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;code&gt;mysql_&lt;/code&gt;&lt;/s&gt;&lt;code&gt;fetch_array()&lt;/code&gt; becomes &lt;b&gt;&lt;code&gt;pdo_&lt;/code&gt;&lt;/b&gt;&lt;code&gt;fetch_array()&lt;/code&gt;</source>
          <target state="translated">&lt;s&gt; &lt;code&gt;mysql_&lt;/code&gt; &lt;/s&gt; &lt;code&gt;fetch_array()&lt;/code&gt; convierte en &lt;b&gt; &lt;code&gt;pdo_&lt;/code&gt; &lt;/b&gt; &lt;code&gt;fetch_array()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a21fb7cc60ddb95c041c9f9ded1d45b2a7edf190" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;code&gt;mysql_&lt;/code&gt;&lt;/s&gt;&lt;code&gt;fetch_assoc()&lt;/code&gt; becomes &lt;b&gt;&lt;code&gt;pdo_&lt;/code&gt;&lt;/b&gt;&lt;code&gt;fetch_assoc()&lt;/code&gt;</source>
          <target state="translated">&lt;s&gt; &lt;code&gt;mysql_&lt;/code&gt; &lt;/s&gt; &lt;code&gt;fetch_assoc()&lt;/code&gt; convierte en &lt;b&gt; &lt;code&gt;pdo_&lt;/code&gt; &lt;/b&gt; &lt;code&gt;fetch_assoc()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef13a65638ca5d535b808e90281c25f89511e748" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;code&gt;mysql_&lt;/code&gt;&lt;/s&gt;&lt;code&gt;insert_id()&lt;/code&gt; becomes &lt;b&gt;&lt;code&gt;pdo_&lt;/code&gt;&lt;/b&gt;&lt;code&gt;insert_id()&lt;/code&gt;</source>
          <target state="translated">&lt;s&gt; &lt;code&gt;mysql_&lt;/code&gt; &lt;/s&gt; &lt;code&gt;insert_id()&lt;/code&gt; convierte en &lt;b&gt; &lt;code&gt;pdo_&lt;/code&gt; &lt;/b&gt; &lt;code&gt;insert_id()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc407c0ffce461b779a38bb1fc0dc99251428726" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;code&gt;mysql_&lt;/code&gt;&lt;/s&gt;&lt;code&gt;num_rows()&lt;/code&gt; becomes &lt;b&gt;&lt;code&gt;pdo_&lt;/code&gt;&lt;/b&gt;&lt;code&gt;num_rows()&lt;/code&gt;</source>
          <target state="translated">&lt;s&gt; &lt;code&gt;mysql_&lt;/code&gt; &lt;/s&gt; &lt;code&gt;num_rows()&lt;/code&gt; convierte en &lt;b&gt; &lt;code&gt;pdo_&lt;/code&gt; &lt;/b&gt; &lt;code&gt;num_rows()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f9a2ad43ca1e733f76816229b4aa318182e265e" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;code&gt;mysql_&lt;/code&gt;&lt;/s&gt;&lt;code&gt;query()&lt;/code&gt; becomes &lt;b&gt;&lt;code&gt;pdo_&lt;/code&gt;&lt;/b&gt;&lt;code&gt;query()&lt;/code&gt;</source>
          <target state="translated">&lt;s&gt; &lt;code&gt;mysql_&lt;/code&gt; &lt;/s&gt; &lt;code&gt;query()&lt;/code&gt; convierte en &lt;b&gt; &lt;code&gt;pdo_&lt;/code&gt; &lt;/b&gt; &lt;code&gt;query()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="de66ab6b7bdbd02e289701939878dd5dd7d2fb27" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;code&gt;mysql_&lt;/code&gt;&lt;/s&gt;&lt;code&gt;real_escape_string()&lt;/code&gt; becomes &lt;b&gt;&lt;code&gt;pdo_&lt;/code&gt;&lt;/b&gt;&lt;code&gt;real_escape_string()&lt;/code&gt;</source>
          <target state="translated">&lt;s&gt; &lt;code&gt;mysql_&lt;/code&gt; &lt;/s&gt; &lt;code&gt;real_escape_string()&lt;/code&gt; convierte en &lt;b&gt; &lt;code&gt;pdo_&lt;/code&gt; &lt;/b&gt; &lt;code&gt;real_escape_string()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f0b58668ae25ccfe5bdc1cbae5c9ee2cddd631f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://php.net/manual/en/mysqli.quickstart.prepared-statements.php&quot;&gt;Prepared statements&lt;/a&gt; or parameterized queries&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://php.net/manual/en/mysqli.quickstart.prepared-statements.php&quot;&gt;Declaraciones preparadas&lt;/a&gt; o consultas parametrizadas&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="375f987ed1362ce8666be1d597bccb89f0a4b4e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;DELETE&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;DELETE&lt;/code&gt;&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="e1373de0a72aae36b8557c0139b699198b6a40ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;INSERT&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;INSERT&lt;/code&gt;&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="ae0641e9808706462aeeee3ff5fada2631f3e370" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;SELECT&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;SELECT&lt;/code&gt;&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="7d55ef0f6c839d55762a2f54ead50913fcbd88be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;UPDATE&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;UPDATE&lt;/code&gt;&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="4af3d4a1c360d57942900ff0fcaf6dc0a9cff4b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;ext/mysql&lt;/code&gt;&lt;/strong&gt; was &lt;a href=&quot;https://wiki.php.net/rfc/mysql_deprecation&quot;&gt;&lt;strong&gt;officially deprecated as of PHP 5.5&lt;/strong&gt;&lt;/a&gt; and has been &lt;a href=&quot;https://wiki.php.net/rfc/remove_deprecated_functionality_in_php7&quot;&gt;&lt;strong&gt;removed as of PHP 7&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;ext/mysql&lt;/code&gt; &lt;/strong&gt; qued&amp;oacute; &lt;a href=&quot;https://wiki.php.net/rfc/mysql_deprecation&quot;&gt;&lt;strong&gt;oficialmente en desuso a partir de PHP 5.5&lt;/strong&gt;&lt;/a&gt; y se ha &lt;a href=&quot;https://wiki.php.net/rfc/remove_deprecated_functionality_in_php7&quot;&gt;&lt;strong&gt;eliminado a partir de PHP 7&lt;/strong&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="21d3709bc3604de67baa10faab0af9188543ecb1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A.&lt;/strong&gt; A prepared statement is a pre-compiled SQL statement that can be executed multiple times by sending only the data to the server.</source>
          <target state="translated">&lt;strong&gt;R.&lt;/strong&gt; Una declaraci&amp;oacute;n preparada es una declaraci&amp;oacute;n SQL precompilada que se puede ejecutar varias veces enviando solo los datos al servidor.</target>
        </trans-unit>
        <trans-unit id="66bcf27ed5345c3e7d140adfa9c56ebb3359dfcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A.&lt;/strong&gt; Let's have an example:</source>
          <target state="translated">&lt;strong&gt;A.&lt;/strong&gt; Tengamos un ejemplo:</target>
        </trans-unit>
        <trans-unit id="7d69176c1f43d19cde596ba2b74bea58f3c1bad5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A.&lt;/strong&gt; Named placeholders. Use descriptive names preceded by a colon, instead of question marks. We don't care about position/order of value in name place holder:</source>
          <target state="translated">&lt;strong&gt;A.&lt;/strong&gt; Marcadores de posici&amp;oacute;n nombrados. Utilice nombres descriptivos precedidos por dos puntos, en lugar de signos de interrogaci&amp;oacute;n. No nos importa la posici&amp;oacute;n / orden de valor en el marcador de posici&amp;oacute;n de nombre:</target>
        </trans-unit>
        <trans-unit id="1aecc95b507fcd1d0e6fda933de9c7becbbe5a09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Also, there are some false or non-significant reasons, like&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Adem&amp;aacute;s, hay algunas razones falsas o no significativas, como&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fbda4158ca375d01bee8e519487823e89ac0c2a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Can we set attributes after PDO construction?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&amp;iquest;Podemos establecer atributos despu&amp;eacute;s de la construcci&amp;oacute;n PDO?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="71900205aba19377ace55dba6e80e5d49843cfb8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Contemporary database APIs are just &lt;em&gt;easier&lt;/em&gt; to use.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Las API de bases de datos contempor&amp;aacute;neas son m&amp;aacute;s &lt;em&gt;f&amp;aacute;ciles&lt;/em&gt; de usar.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3ce243cbd8cc444c680e66a9ca31863339ae7a10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Execute&lt;/strong&gt;: At a later time, the application supplies (or binds) values for the parameters, and the DBMS executes the statement (possibly returning a result). The application may execute the statement as many times as it wants with different values. In this example, it might supply 'Bread' for the first parameter and &lt;code&gt;1.00&lt;/code&gt; for the second parameter.</source>
          <target state="translated">&lt;strong&gt;Ejecutar&lt;/strong&gt; : en un momento posterior, la aplicaci&amp;oacute;n proporciona (o enlaza) valores para los par&amp;aacute;metros, y el DBMS ejecuta la declaraci&amp;oacute;n (posiblemente devuelve un resultado). La aplicaci&amp;oacute;n puede ejecutar la declaraci&amp;oacute;n tantas veces como quiera con diferentes valores. En este ejemplo, podr&amp;iacute;a suministrar 'Pan' para el primer par&amp;aacute;metro y &lt;code&gt;1.00&lt;/code&gt; para el segundo par&amp;aacute;metro.</target>
        </trans-unit>
        <trans-unit id="b76647d0abd6627dc3e3d7aed8eb990660dd95d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Getting the Last Inserted ID&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Obteniendo la &amp;uacute;ltima identificaci&amp;oacute;n insertada&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bbeb2123bb627ff2057e11808030689ea471e52f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Getting the row count&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Obteniendo el recuento de filas&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="3d2b4c709812584ec969783a6880ad9830f30c48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Good read&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Buena lectura&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="ca5ca16bcc78e74bfbd4891290090d73b43c0d80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Good read&lt;/strong&gt;: &lt;a href=&quot;http://php.net/manual/en/pdo.connections.php&quot;&gt;Connections and Connection management &amp;para;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Buena lectura&lt;/strong&gt; : &lt;a href=&quot;http://php.net/manual/en/pdo.connections.php&quot;&gt;Conexiones y gesti&amp;oacute;n de conexiones &amp;para;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64787817e9b226c3de70d33bdb039da28b3c4415" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Historic note on magic_quotes.&lt;/strong&gt; That feature is rightly deprecated. It's often incorrectly portrayed as failed &lt;em&gt;security&lt;/em&gt; feature however. But magic_quotes are as much a failed security feature as tennis balls have failed as nutrition source. That simply wasn't their purpose.</source>
          <target state="translated">&lt;strong&gt;Nota hist&amp;oacute;rica sobre magic_quotes.&lt;/strong&gt; Esa caracter&amp;iacute;stica est&amp;aacute; en desuso correctamente. Sin embargo, a menudo se retrata incorrectamente como &lt;em&gt;una&lt;/em&gt; funci&amp;oacute;n de &lt;em&gt;seguridad&lt;/em&gt; fallida. Pero magic_quotes son una caracter&amp;iacute;stica de seguridad tan fallida como las pelotas de tenis han fallado como fuente de nutrici&amp;oacute;n. Ese simplemente no era su prop&amp;oacute;sito.</target>
        </trans-unit>
        <trans-unit id="7c2c76a00e13c745b512b4a84fde6bd4d754f51e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Instead, you should learn of prepared statements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;En cambio, debe aprender de las declaraciones preparadas&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d0dbca28c12bb63433f617f4435842da2de64f12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NEW! - ext/mysql is now &lt;em&gt;&lt;a href=&quot;https://wiki.php.net/rfc/mysql_deprecation&quot;&gt;officially deprecated as of PHP 5.5!&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&amp;iexcl;NUEVO!&lt;/strong&gt; &lt;strong&gt;- ext / mysql ahora est&amp;aacute; &lt;em&gt;&lt;a href=&quot;https://wiki.php.net/rfc/mysql_deprecation&quot;&gt;oficialmente en desuso desde PHP 5.5!&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f35097e2b1b38de5ec88177ea2b0967e5b0e99a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;NOTE:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3bcee5544ef56b940a214706dc29617b2b713720" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: In &lt;strong&gt;unnamed placeholders&lt;/strong&gt; we must take care of the proper order of the elements in the array that we are passing to the &lt;code&gt;PDOStatement::execute()&lt;/code&gt; method.</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; : En los &lt;strong&gt;marcadores de posici&amp;oacute;n sin nombre&lt;/strong&gt; , debemos cuidar el orden correcto de los elementos en la matriz que estamos pasando al &lt;code&gt;PDOStatement::execute()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2fb3e1339eb87a7998bdbb7ee4cd05d10c3a4ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Neither mysqli_* nor PDO functions should have appeared in the application code.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ni mysqli_ * ni las funciones PDO deber&amp;iacute;an haber aparecido en el c&amp;oacute;digo de la aplicaci&amp;oacute;n.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dda929987f6bc860e4d7687f0f9b9055c3b38c38" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Nevertheless, there are also some non-technical issues, which can make your experience a bit harder&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Sin embargo, tambi&amp;eacute;n hay algunos problemas no t&amp;eacute;cnicos, que pueden hacer que su experiencia sea un poco m&amp;aacute;s dif&amp;iacute;cil.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee452aec63009c2bd7bbfd6f03acd850aab819f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; you can also use &lt;code&gt;charset=UTF-8&lt;/code&gt;, but sometimes it causes an error, so it's better to use &lt;code&gt;utf8&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Nota:&lt;/strong&gt; tambi&amp;eacute;n puede usar &lt;code&gt;charset=UTF-8&lt;/code&gt; , pero a veces causa un error, por lo que es mejor usar &lt;code&gt;utf8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f722b24d30ed0d049e9217e7bf9e78930a63b61" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: If you are using the method like below (&lt;code&gt;query()&lt;/code&gt;), this method returns a &lt;code&gt;PDOStatement&lt;/code&gt; object. So if you want to fetch the result, use it like above.</source>
          <target state="translated">&lt;strong&gt;Nota&lt;/strong&gt; : Si est&amp;aacute; utilizando el m&amp;eacute;todo como se muestra a continuaci&amp;oacute;n ( &lt;code&gt;query()&lt;/code&gt; ), este m&amp;eacute;todo devuelve un objeto &lt;code&gt;PDOStatement&lt;/code&gt; . Entonces, si desea obtener el resultado, &amp;uacute;selo como se indic&amp;oacute; anteriormente.</target>
        </trans-unit>
        <trans-unit id="1d0a361ba3da0755ad03adc9e9d32cb4ed1a08c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Prepare&lt;/strong&gt;: The statement template is created by the application and sent to the database management system (DBMS). Certain values are left unspecified, called parameters, placeholders or bind variables (labelled &lt;code&gt;?&lt;/code&gt; below):</source>
          <target state="translated">&lt;strong&gt;Preparar&lt;/strong&gt; : la aplicaci&amp;oacute;n crea la plantilla de extracto y la env&amp;iacute;a al sistema de gesti&amp;oacute;n de bases de datos (DBMS). Ciertos valores se dejan sin especificar, llamados par&amp;aacute;metros, marcadores de posici&amp;oacute;n o variables de enlace ( &lt;code&gt;?&lt;/code&gt; etiquetado ? A continuaci&amp;oacute;n):</target>
        </trans-unit>
        <trans-unit id="8de8d53910fb26580d0d1462d5f15822e1f2f8fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Prepared Statements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Declaraciones preparadas&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="83772b3402056078699b22b03ae7c71d472d223a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q.&lt;/strong&gt; So now, what are named placeholders and how do I use them?</source>
          <target state="translated">&lt;strong&gt;P.&lt;/strong&gt; Entonces, &amp;iquest;qu&amp;eacute; se denominan marcadores de posici&amp;oacute;n y c&amp;oacute;mo los uso?</target>
        </trans-unit>
        <trans-unit id="bf935138dd58afb317f393a58a87a426e51d9625" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q.&lt;/strong&gt; So now, what are unnamed placeholders and how do I use them?</source>
          <target state="translated">&lt;strong&gt;P.&lt;/strong&gt; Entonces, &amp;iquest;qu&amp;eacute; son marcadores de posici&amp;oacute;n sin nombre y c&amp;oacute;mo los uso?</target>
        </trans-unit>
        <trans-unit id="246454779aad75d51088bb0de1cda979d51768d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q.&lt;/strong&gt; What is a prepared statement and why do I need them?</source>
          <target state="translated">&lt;strong&gt;P.&lt;/strong&gt; &amp;iquest;Qu&amp;eacute; es una declaraci&amp;oacute;n preparada y por qu&amp;eacute; los necesito?</target>
        </trans-unit>
        <trans-unit id="bc3aaa8f04d43e44f616656297e0c78c54e1f172" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason to not use &lt;code&gt;mysql_*&lt;/code&gt; function&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Raz&amp;oacute;n para no usar la funci&amp;oacute;n &lt;code&gt;mysql_*&lt;/code&gt; &lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="c7cfb15d4b60ac9b33a75c31e26bd7807779ace0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See the Red Box?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&amp;iquest;Ves la caja roja?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb999dd362a05e63929ca191a77eea6b0e5a6b94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Suppressing deprecation warnings&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Suprimir advertencias de desaprobaci&amp;oacute;n&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3c1160a54ccd72e93448ddb4bc662e0ee249f6fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;They are no longer maintained, and are officially deprecated&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ya no se mantienen y est&amp;aacute;n oficialmente en desuso&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14c3edf5863da2e2fc42e3f847cd0cec2427b6c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use either PDO or MySQLi&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Use PDO o MySQLi&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba557ea612da45ee87ea50fbc09e07ea7b1520ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yes&lt;/strong&gt;, we can also set some attributes after PDO construction with the &lt;code&gt;setAttribute&lt;/code&gt; method:</source>
          <target state="translated">&lt;strong&gt;S&amp;iacute;&lt;/strong&gt; , tambi&amp;eacute;n podemos establecer algunos atributos despu&amp;eacute;s de la construcci&amp;oacute;n de PDO con el m&amp;eacute;todo &lt;code&gt;setAttribute&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8cf01d9490d0b537b44b782fd8131a614ece8d85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysql_*&lt;/strong&gt; functions do not support prepared statements.</source>
          <target state="translated">&lt;strong&gt;Las&lt;/strong&gt; funciones &lt;strong&gt;mysql_ *&lt;/strong&gt; no admiten declaraciones preparadas.</target>
        </trans-unit>
        <trans-unit id="e42abeed45b2dfef66fccc34fef34fdbe2a6d2f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysql_*&lt;/strong&gt; functions do not support the binding of parameters.</source>
          <target state="translated">&lt;strong&gt;Las&lt;/strong&gt; funciones &lt;strong&gt;mysql_ *&lt;/strong&gt; no admiten la vinculaci&amp;oacute;n de par&amp;aacute;metros.</target>
        </trans-unit>
        <trans-unit id="ac0f78e16e8962d33c7f864e2d4cfab79ed85fb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysql_*&lt;/strong&gt; functions lack functionality for Object Oriented Programming.</source>
          <target state="translated">&lt;strong&gt;Las&lt;/strong&gt; funciones &lt;strong&gt;mysql_ *&lt;/strong&gt; carecen de funcionalidad para la programaci&amp;oacute;n orientada a objetos.</target>
        </trans-unit>
        <trans-unit id="9ab107729188b218548fbdc2bdea183a073fe436" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysql_*&lt;/strong&gt; functions were deprecated (as of &lt;strong&gt;PHP 5.5&lt;/strong&gt;) given the fact that better functions and code structures were developed. The fact that the function was deprecated means that no more effort will be placed into improving it in terms of performance and security, &lt;strong&gt;which means it is less future proof&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;las&lt;/strong&gt; funciones de &lt;strong&gt;mysql_ *&lt;/strong&gt; quedaron en desuso (a partir de &lt;strong&gt;PHP 5.5&lt;/strong&gt; ) dado el hecho de que se desarrollaron mejores funciones y estructuras de c&amp;oacute;digo. El hecho de que la funci&amp;oacute;n haya quedado en desuso significa que no se har&amp;aacute; m&amp;aacute;s esfuerzo para mejorarla en t&amp;eacute;rminos de rendimiento y seguridad, lo &lt;strong&gt;que significa que es menos a prueba de futuro&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="2a9ce00004e2016f2cadb930b22a5cb4bfad93c2" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;&lt;em&gt;Insert and delete will be covered later.&lt;/em&gt;&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;em&gt;Insertar y eliminar se cubrir&amp;aacute; m&amp;aacute;s adelante.&lt;/em&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="4605e640a44a2903dc29f4d7c4d5f1a5d3a737e6" translate="yes" xml:space="preserve">
          <source>A common practice when using &lt;code&gt;mysql_*&lt;/code&gt; is:</source>
          <target state="translated">Una pr&amp;aacute;ctica com&amp;uacute;n cuando se usa &lt;code&gt;mysql_*&lt;/code&gt; es:</target>
        </trans-unit>
        <trans-unit id="a13839e20b6d574ce0048134aef78b15481c1e5c" translate="yes" xml:space="preserve">
          <source>A simple and short PDO tutorial</source>
          <target state="translated">Un simple y corto tutorial PDO</target>
        </trans-unit>
        <trans-unit id="48250fcdf8841a07f5b1248699a34ceeeef49b50" translate="yes" xml:space="preserve">
          <source>A. &amp;ldquo;&lt;strong&gt;PDO &amp;ndash; PHP Data Objects&lt;/strong&gt; &amp;ndash; is a database access layer providing a uniform method of access to multiple databases.&amp;rdquo;</source>
          <target state="translated">A. &quot; &lt;strong&gt;PDO - PHP Data Objects&lt;/strong&gt; - es una capa de acceso a la base de datos que proporciona un m&amp;eacute;todo uniforme de acceso a m&amp;uacute;ltiples bases de datos&quot;.</target>
        </trans-unit>
        <trans-unit id="2f434a1f9a23e4564ea51f72e542f32afebac04b" translate="yes" xml:space="preserve">
          <source>API supports Multiple Statements and all MySQL 4.1+ functionality - Supported by MySQLi and mostly also by PDO</source>
          <target state="translated">La API soporta múltiples declaraciones y todas las funcionalidades de MySQL 4.1+-Soportado por MySQLi y mayormente también por PDO</target>
        </trans-unit>
        <trans-unit id="1fc3feb37f7a72085af4f28967eb6151ee8d1c5e" translate="yes" xml:space="preserve">
          <source>API supports Stored Procedures: Both MySQLi and PDO</source>
          <target state="translated">La API soporta procedimientos almacenados:Tanto MySQLi como PDO</target>
        </trans-unit>
        <trans-unit id="f09f90c57066a24eee0eb4f850c58410d1012793" translate="yes" xml:space="preserve">
          <source>API supports client-side Prepared Statements: Supported only by PDO</source>
          <target state="translated">La API soporta declaraciones preparadas del lado del cliente:Apoyado sólo por PDO</target>
        </trans-unit>
        <trans-unit id="bc6bd620a8604b899ec28a40dd9fd604faf87f73" translate="yes" xml:space="preserve">
          <source>API supports server-side Prepared Statements: Supported by MYSQLi and PDO</source>
          <target state="translated">La API soporta declaraciones preparadas del lado del servidor:Soportado por MYSQLi y PDO</target>
        </trans-unit>
        <trans-unit id="34890013f003ff6a72ea8f3325210ceb78fdcc4d" translate="yes" xml:space="preserve">
          <source>Above point quoted from Quentin's answer</source>
          <target state="translated">El punto anterior citado de la respuesta de Quentin</target>
        </trans-unit>
        <trans-unit id="fd9035ed506b5a7ea270a5b3e1a41eff0a713ea2" translate="yes" xml:space="preserve">
          <source>Add them as comma delimited function parameters to &lt;code&gt;pdo_query()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pdo_query()&lt;/code&gt; como par&amp;aacute;metros de funci&amp;oacute;n delimitados por comas a pdo_query () .</target>
        </trans-unit>
        <trans-unit id="01fb17f71e8b9143a9904e6eb49ef6a34b6db1f8" translate="yes" xml:space="preserve">
          <source>Also, you can handle by &lt;code&gt;or die()&lt;/code&gt; or we can say like &lt;code&gt;mysql_*&lt;/code&gt;, but it will be really varied. You can hide the dangerous error messages in production by turning &lt;code&gt;display_errors off&lt;/code&gt; and just reading your error log.</source>
          <target state="translated">Adem&amp;aacute;s, puede manejar by &lt;code&gt;or die()&lt;/code&gt; o podemos decir como &lt;code&gt;mysql_*&lt;/code&gt; , pero ser&amp;aacute; muy variado. Puede ocultar los mensajes de error peligrosos en producci&amp;oacute;n apagando &lt;code&gt;display_errors off&lt;/code&gt; y simplemente leyendo su registro de errores.</target>
        </trans-unit>
        <trans-unit id="65ace5a4919de42d6ac9e8e70a32858585a56919" translate="yes" xml:space="preserve">
          <source>Amazing! Hi-fives all round, the code correctly verified an admin. It's perfect!</source>
          <target state="translated">¡Increíble! Hola a todos,el código verificó correctamente un administrador.¡Es perfecto!</target>
        </trans-unit>
        <trans-unit id="67c99697e4cd741a12219ff4ecfee60683efb9b6" translate="yes" xml:space="preserve">
          <source>And a better way is &lt;code&gt;PDO&lt;/code&gt;, and I am now writing a simple &lt;code&gt;PDO&lt;/code&gt; tutorial.</source>
          <target state="translated">Y una mejor manera es &lt;code&gt;PDO&lt;/code&gt; , y ahora estoy escribiendo un sencillo tutorial &lt;code&gt;PDO&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="120d08ba81249a9f81e7d175247796e5cff77a30" translate="yes" xml:space="preserve">
          <source>And contrary - if you have an abstraction layer between your application code and mysql API - &lt;strong&gt;it doesn't actually matter which engine is used.&lt;/strong&gt; You can use mysql ext until it goes deprecated and then easily rewrite your abstraction class to another engine, &lt;strong&gt;having all the application code intact.&lt;/strong&gt;</source>
          <target state="translated">Y al contrario, si tiene una capa de abstracci&amp;oacute;n entre el c&amp;oacute;digo de su aplicaci&amp;oacute;n y la API de mysql, &lt;strong&gt;en realidad no importa qu&amp;eacute; motor se use.&lt;/strong&gt; Puede usar mysql ext hasta que quede obsoleto y luego reescribir f&amp;aacute;cilmente su clase de abstracci&amp;oacute;n a otro motor, &lt;strong&gt;con todo el c&amp;oacute;digo de la aplicaci&amp;oacute;n intacto.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="42319ef1243e1cb43dbc04ce225a03a2d0c6b42e" translate="yes" xml:space="preserve">
          <source>And in pdo, this same thing can be done by:</source>
          <target state="translated">Y en Pdo,esta misma cosa se puede hacer por:</target>
        </trans-unit>
        <trans-unit id="0993bf28ecd55614b8bb57ddce1033f985cb8e69" translate="yes" xml:space="preserve">
          <source>And it will be too wordy and most likely unsafe.</source>
          <target state="translated">Y será demasiado prolijo y probablemente inseguro.</target>
        </trans-unit>
        <trans-unit id="f8d456b41786de88a2dbb3af1c629f6c1141c80c" translate="yes" xml:space="preserve">
          <source>And the later PHP developer team has taken the decision to generate &lt;a href=&quot;https://github.com/php/php-src/commit/b7091aaf0137d97cf4aa4a402ec50b3946d369c0&quot;&gt;&lt;strong&gt;&lt;code&gt;E_DEPRECATED&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; errors when users connect to MySQL, whether through &lt;code&gt;mysql_connect()&lt;/code&gt;, &lt;code&gt;mysql_pconnect()&lt;/code&gt; or the implicit connection functionality built into &lt;code&gt;ext/mysql&lt;/code&gt;.</source>
          <target state="translated">Y el equipo de desarrolladores de PHP posterior tom&amp;oacute; la decisi&amp;oacute;n de generar errores &lt;a href=&quot;https://github.com/php/php-src/commit/b7091aaf0137d97cf4aa4a402ec50b3946d369c0&quot;&gt;&lt;strong&gt; &lt;code&gt;E_DEPRECATED&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt; cuando los usuarios se conectan a MySQL, ya sea a trav&amp;eacute;s de &lt;code&gt;mysql_connect()&lt;/code&gt; , &lt;code&gt;mysql_pconnect()&lt;/code&gt; o la funcionalidad de conexi&amp;oacute;n impl&amp;iacute;cita integrada en &lt;code&gt;ext/mysql&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef4d4c6fb57c79a8162041f226c5e4efb9e26af4" translate="yes" xml:space="preserve">
          <source>And the output is:</source>
          <target state="translated">Y la salida es:</target>
        </trans-unit>
        <trans-unit id="968a4fefe78eb6c9a0fb316c9f7ac9217c1ea9fc" translate="yes" xml:space="preserve">
          <source>And you can wrap it in &lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt;, like below:</source>
          <target state="translated">Y puede envolverlo en &lt;code&gt;try&lt;/code&gt; - &lt;code&gt;catch&lt;/code&gt; , como a continuaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="dedf5ccdeb6bf446ef7cfb01d8db4c4b042b2078" translate="yes" xml:space="preserve">
          <source>Another example:</source>
          <target state="translated">Otro ejemplo:</target>
        </trans-unit>
        <trans-unit id="8899017bb75139a8d05c4ded944ef88bb6b69e08" translate="yes" xml:space="preserve">
          <source>Another nice feature for &lt;code&gt;OOP&lt;/code&gt; friends is that named placeholders have the ability to insert objects directly into your database, assuming the properties match the named fields. For example:</source>
          <target state="translated">Otra buena caracter&amp;iacute;stica para los amigos de &lt;code&gt;OOP&lt;/code&gt; es que los marcadores de posici&amp;oacute;n con nombre tienen la capacidad de insertar objetos directamente en su base de datos, suponiendo que las propiedades coincidan con los campos con nombre. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="498040b4cb115e9716562169981fc9fa03b6e734" translate="yes" xml:space="preserve">
          <source>Any of the new functionality in MySQL 5.1 or later</source>
          <target state="translated">Cualquiera de las nuevas funcionalidades en MySQL 5.1 o posterior</target>
        </trans-unit>
        <trans-unit id="0e5e1aea7f23bc2927b5d23c2cbc5412b05fce82" translate="yes" xml:space="preserve">
          <source>As an example, someone could use &lt;code&gt;&quot;enhzflep); drop table users&quot;&lt;/code&gt; as a username. The old functions will allow executing multiple statements per query, so something like that nasty bugger can delete a whole table.</source>
          <target state="translated">Como ejemplo, alguien podr&amp;iacute;a usar &lt;code&gt;&quot;enhzflep); drop table users&quot;&lt;/code&gt; como nombre de usuario. Las funciones antiguas permitir&amp;aacute;n ejecutar m&amp;uacute;ltiples declaraciones por consulta, por lo que algo como ese desagradable bugger puede eliminar una tabla completa.</target>
        </trans-unit>
        <trans-unit id="d5ad27cf2144b732b070aaef3f6328e7557022c6" translate="yes" xml:space="preserve">
          <source>As explained in the above answers, the alternatives to mysql are mysqli and PDO (PHP Data Objects).</source>
          <target state="translated">Como se ha explicado en las respuestas anteriores,las alternativas a mysql son mysqli y PDO (PHP Data Objects).</target>
        </trans-unit>
        <trans-unit id="242084bedb9aa3c73ad1bd7da789bee02633449f" translate="yes" xml:space="preserve">
          <source>Because (amongst other reasons) it's much harder to ensure the input data is sanitized. If you use parametrized queries, as one does with PDO or mysqli you can entirely avoid the risk.</source>
          <target state="translated">Porque (entre otras razones)es mucho más difícil asegurar que los datos de entrada sean desinfectados.Si se utilizan consultas parametrizadas,como se hace con PDO o mysqli se puede evitar totalmente el riesgo.</target>
        </trans-unit>
        <trans-unit id="06606943663433f539cbc360dbd06b2bc39a6263" translate="yes" xml:space="preserve">
          <source>Below is an example of how you can do it:</source>
          <target state="translated">A continuación se muestra un ejemplo de cómo se puede hacer:</target>
        </trans-unit>
        <trans-unit id="123eebf3efbb03421b5f4b2571c2660d81b303c7" translate="yes" xml:space="preserve">
          <source>Beware that parameter binding still isn't a magic one-stop solution against &lt;em&gt;all&lt;/em&gt; SQL injections. It handles the most common use for data/values. But can't whitelist column name / table identifiers, help with dynamic clause construction, or just plain array value lists.</source>
          <target state="translated">Tenga en cuenta que el enlace de par&amp;aacute;metros todav&amp;iacute;a no es una soluci&amp;oacute;n &amp;uacute;nica m&amp;aacute;gica contra &lt;em&gt;todas&lt;/em&gt; las inyecciones SQL. Maneja el uso m&amp;aacute;s com&amp;uacute;n para datos / valores. Pero no se pueden incluir en la lista blanca los identificadores de tabla / nombre de columna, ayudar con la construcci&amp;oacute;n de cl&amp;aacute;usulas din&amp;aacute;micas o simplemente listas de valores de matriz simple.</target>
        </trans-unit>
        <trans-unit id="dbf3abea317b3728874b25d75ef5a69530c550f8" translate="yes" xml:space="preserve">
          <source>Both MySQLi and PDO were introduced in PHP 5.0, whereas MySQL was introduced prior to PHP 3.0. A point to note is that MySQL is included in PHP5.x though deprecated in later versions.</source>
          <target state="translated">Tanto MySQLi como PDO fueron introducidos en PHP 5.0,mientras que MySQL fue introducido antes de PHP 3.0.Un punto a destacar es que MySQL está incluido en PHP 5.x aunque depreciado en versiones posteriores.</target>
        </trans-unit>
        <trans-unit id="51020afda7d0112c97929b784637a312225d970c" translate="yes" xml:space="preserve">
          <source>Bound parameters can be easy to use</source>
          <target state="translated">Los parámetros de los límites pueden ser fáciles de usar</target>
        </trans-unit>
        <trans-unit id="300f56277ff5fe0394d55c2ebdaf31a5d9ca5560" translate="yes" xml:space="preserve">
          <source>Brilliant, not enter in the following:</source>
          <target state="translated">Brillante,no entrar en lo siguiente:</target>
        </trans-unit>
        <trans-unit id="13baed15c99f957c80af17236b205876746fb816" translate="yes" xml:space="preserve">
          <source>But as first step just &lt;strong&gt;get rid of the &lt;code&gt;_real_escape_string&lt;/code&gt;&lt;/strong&gt; call.</source>
          <target state="translated">Pero como primer paso, simplemente &lt;strong&gt;elimine la&lt;/strong&gt; llamada &lt;strong&gt; &lt;code&gt;_real_escape_string&lt;/code&gt; &lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="c2b6b6db7e4e3dfb886e45b51b27e98f7d6f7e48" translate="yes" xml:space="preserve">
          <source>But okay, if you don't like the red box in the manual, a problem of choice arises: mysqli or PDO?</source>
          <target state="translated">Pero bueno,si no te gusta la caja roja del manual,surge un problema de elección:¿misqli o PDO?</target>
        </trans-unit>
        <trans-unit id="0ea2f9f9df0901957a54cc00384ae3ecf9e7598f" translate="yes" xml:space="preserve">
          <source>But, in my opinion, the proposed solution is no better either.</source>
          <target state="translated">Pero,en mi opinión,la solución propuesta tampoco es mejor.</target>
        </trans-unit>
        <trans-unit id="87f8df6d2b63e036157cc4d012be4719078a49b1" translate="yes" xml:space="preserve">
          <source>Can be replaced with just an foreach iteration:</source>
          <target state="translated">Puede ser reemplazado por una simple iteración de la frente:</target>
        </trans-unit>
        <trans-unit id="98de0e635b4201b0c76f621b74657cf746901ace" translate="yes" xml:space="preserve">
          <source>Compare it with usual PDO inserts, when every single field name being repeated six to ten times - in all these numerous named placeholders, bindings, and query definitions.</source>
          <target state="translated">Compárese con las inserciones usuales de PDO,cuando cada nombre de campo se repite de seis a diez veces-en todos estos numerosos marcadores de posición con nombre,encuadernaciones y definiciones de consulta.</target>
        </trans-unit>
        <trans-unit id="f2b2bc84e981266a2ed8528d294c0bc718096013" translate="yes" xml:space="preserve">
          <source>Compare this one single line with &lt;a href=&quot;https://stackoverflow.com/a/15991146/285587&quot;&gt;amount of code you will need with PDO&lt;/a&gt;.</source>
          <target state="translated">Compare esta &amp;uacute;nica l&amp;iacute;nea con la &lt;a href=&quot;https://stackoverflow.com/a/15991146/285587&quot;&gt;cantidad de c&amp;oacute;digo que necesitar&amp;aacute; con PDO&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="46ead4045fbadbc2f0b37b6046e5803972459710" translate="yes" xml:space="preserve">
          <source>Compression</source>
          <target state="translated">Compression</target>
        </trans-unit>
        <trans-unit id="9f82982d2197b2fb50ef5bc31251b1e69637c99f" translate="yes" xml:space="preserve">
          <source>Congrats, you just allowed me to enter your super-protected admins only section with me entering a false username and a false password. Seriously, if you don't believe me, create the database with the code I provided, and run this PHP code - which at glance REALLY does seem to verify the username and password rather nicely.</source>
          <target state="translated">Felicidades,me acabas de permitir entrar en tu superprotegida sección de sólo administradores,con un falso nombre de usuario y una falsa contraseña.En serio,si no me crees,crea la base de datos con el código que te proporcioné,y ejecuta este código PHP-que a simple vista parece verificar el nombre de usuario y la contraseña bastante bien.</target>
        </trans-unit>
        <trans-unit id="9cdd246b67ff3115cf8e58af1aa4662b256a8fa8" translate="yes" xml:space="preserve">
          <source>Connecting to MySQL</source>
          <target state="translated">Conectando con MySQL</target>
        </trans-unit>
        <trans-unit id="f84015d92e165e7b3f840594a075b9ee6030c2a1" translate="yes" xml:space="preserve">
          <source>Correct order would have been: deprecatedly &lt;code&gt;stripslashes&lt;/code&gt; as the innermost call, then &lt;code&gt;trim&lt;/code&gt;, afterwards &lt;code&gt;strip_tags&lt;/code&gt;, &lt;code&gt;htmlentities&lt;/code&gt; for output context, and only lastly the &lt;code&gt;_escape_string&lt;/code&gt; as its application should directly preceed the SQL intersparsing.</source>
          <target state="translated">El orden correcto hubiera sido: &lt;code&gt;stripslashes&lt;/code&gt; obsoleta las barras como la llamada m&amp;aacute;s interna, luego &lt;code&gt;trim&lt;/code&gt; , luego &lt;code&gt;strip_tags&lt;/code&gt; , &lt;code&gt;htmlentities&lt;/code&gt; para el contexto de salida, y solo por &amp;uacute;ltimo la &lt;code&gt;_escape_string&lt;/code&gt; ya que su aplicaci&amp;oacute;n deber&amp;iacute;a preceder directamente al intercalado SQL.</target>
        </trans-unit>
        <trans-unit id="274ac70de9ee561047b2d6020375c34942dc13aa" translate="yes" xml:space="preserve">
          <source>Doesn't support &lt;a href=&quot;http://en.wikipedia.org/wiki/Database_transaction&quot;&gt;transactions&lt;/a&gt;</source>
          <target state="translated">No admite &lt;a href=&quot;http://en.wikipedia.org/wiki/Database_transaction&quot;&gt;transacciones&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b91190ed508aa1ebccf4667808bf07650ab04f8" translate="yes" xml:space="preserve">
          <source>Doesn't support Multiple Statements (who need them?)</source>
          <target state="translated">No admite declaraciones múltiples (¿quién las necesita?)</target>
        </trans-unit>
        <trans-unit id="d44232efd1fd248676980ae2cdc482a57df4a84c" translate="yes" xml:space="preserve">
          <source>Doesn't support Prepared Statements or Parametrized Queries</source>
          <target state="translated">No apoya las declaraciones preparadas o las consultas parametrizadas</target>
        </trans-unit>
        <trans-unit id="6c479d1a8515470d066edea5ea563b89e68cc6f8" translate="yes" xml:space="preserve">
          <source>Doesn't support Stored Procedures (we were using &lt;code&gt;mysql_query(&quot;CALL my_proc&quot;);&lt;/code&gt; for ages)</source>
          <target state="translated">No es compatible con procedimientos almacenados (est&amp;aacute;bamos usando &lt;code&gt;mysql_query(&quot;CALL my_proc&quot;);&lt;/code&gt; por a&amp;ntilde;os)</target>
        </trans-unit>
        <trans-unit id="866143011c8a05791bf29b94865c70519ad71e72" translate="yes" xml:space="preserve">
          <source>Doesn't support Transactions (same as above)</source>
          <target state="translated">No apoya las transacciones (igual que arriba)</target>
        </trans-unit>
        <trans-unit id="fce860154fdb146e5f646b4901b94461c45d68e0" translate="yes" xml:space="preserve">
          <source>Doesn't support all of the functionality in MySQL 5.1</source>
          <target state="translated">No soporta toda la funcionalidad en MySQL 5.1</target>
        </trans-unit>
        <trans-unit id="3cf92a22337ed0b5bde371c6efea5d06737ca874" translate="yes" xml:space="preserve">
          <source>Doesn't support multiple statements</source>
          <target state="translated">No apoya las declaraciones múltiples</target>
        </trans-unit>
        <trans-unit id="864e78e1d6a762f1e100177dd6406de3ab443864" translate="yes" xml:space="preserve">
          <source>Doesn't support non-blocking, asynchronous queries</source>
          <target state="translated">No soporta consultas asincrónicas no bloqueantes</target>
        </trans-unit>
        <trans-unit id="d1636c7a918bc55871631f47bbb14d7249b434bf" translate="yes" xml:space="preserve">
          <source>Doesn't support prepared statements or &lt;a href=&quot;http://en.wikipedia.org/wiki/Prepared_statement&quot;&gt;parameterized queries&lt;/a&gt;</source>
          <target state="translated">No admite declaraciones preparadas o &lt;a href=&quot;http://en.wikipedia.org/wiki/Prepared_statement&quot;&gt;consultas parametrizadas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b1078a18b28afd9f7f8df361d462c8be33bb483" translate="yes" xml:space="preserve">
          <source>Doesn't support stored procedures</source>
          <target state="translated">No soporta procedimientos almacenados</target>
        </trans-unit>
        <trans-unit id="913e0c4a5ec4213ac6b0e5bc84a0b4952dd23744" translate="yes" xml:space="preserve">
          <source>Doesn't support:</source>
          <target state="translated">No apoya:</target>
        </trans-unit>
        <trans-unit id="3a2186dd09a53f0acfd3661a66ceb59c176eaf88" translate="yes" xml:space="preserve">
          <source>Ease of use</source>
          <target state="translated">Facilidad de uso</target>
        </trans-unit>
        <trans-unit id="db8c650e4e279285960b1784a6fbbece934a01e3" translate="yes" xml:space="preserve">
          <source>Embedded server support</source>
          <target state="translated">Soporte para servidores integrados</target>
        </trans-unit>
        <trans-unit id="6d7b79456a20370d710fa37e809943165d11f572" translate="yes" xml:space="preserve">
          <source>Encryption (SSL)</source>
          <target state="translated">Cifrado (SSL)</target>
        </trans-unit>
        <trans-unit id="5b860d134c5b348f6cc8170ac43f9694cf148a8f" translate="yes" xml:space="preserve">
          <source>Enhanced debugging capabilities</source>
          <target state="translated">Capacidades de depuración mejoradas</target>
        </trans-unit>
        <trans-unit id="6f31dd815c428bc663ce257d3df663a6858bc6b0" translate="yes" xml:space="preserve">
          <source>Enter in the following:</source>
          <target state="translated">Escriba lo siguiente:</target>
        </trans-unit>
        <trans-unit id="09fa2a067aee2197e8eb1a89b00eefbf6e88e347" translate="yes" xml:space="preserve">
          <source>Equivalent pdo_* functions in place of &lt;s&gt;mysql_*&lt;/s&gt;</source>
          <target state="translated">Funciones pdo_ * equivalentes en lugar de &lt;s&gt;mysql_ *&lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="5fff1f56919b006049c274c6c76fbbe56470ee4c" translate="yes" xml:space="preserve">
          <source>Error Handling</source>
          <target state="translated">Manejo de errores</target>
        </trans-unit>
        <trans-unit id="2f3b48eb0edc6001d7879dc58945e065cc2e3e5a" translate="yes" xml:space="preserve">
          <source>Error handling is much easier in &lt;code&gt;PDO&lt;/code&gt; than &lt;code&gt;mysql_*&lt;/code&gt;.</source>
          <target state="translated">El manejo de errores es mucho m&amp;aacute;s f&amp;aacute;cil en &lt;code&gt;PDO&lt;/code&gt; que &lt;code&gt;mysql_*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fec40d777dec6257585f890975134a9cea348678" translate="yes" xml:space="preserve">
          <source>Errors and error handling &amp;para;</source>
          <target state="translated">Errores y manejo de errores &amp;para;</target>
        </trans-unit>
        <trans-unit id="c019ec3bcff0bb2854b0e299ba32a9eee4bd0ee3" translate="yes" xml:space="preserve">
          <source>Et voil&amp;agrave;.</source>
          <target state="translated">Et voil&amp;agrave;.</target>
        </trans-unit>
        <trans-unit id="1286a514865def6edb80f749d66c5420df3e9cc2" translate="yes" xml:space="preserve">
          <source>Exceptions &amp;para;</source>
          <target state="translated">Excepciones &amp;para;</target>
        </trans-unit>
        <trans-unit id="ca51f996bb09297e02939f7b41f4c178b7775704" translate="yes" xml:space="preserve">
          <source>Fetch Modes</source>
          <target state="translated">Modos de búsqueda</target>
        </trans-unit>
        <trans-unit id="0cda57057d1816d4de9cdbd01aece5021ed7c626" translate="yes" xml:space="preserve">
          <source>First of all, I explain how to select fetch mode:</source>
          <target state="translated">En primer lugar,explico cómo seleccionar el modo de búsqueda:</target>
        </trans-unit>
        <trans-unit id="17ba645d365edcb5b41c66ee76e97181eab4127f" translate="yes" xml:space="preserve">
          <source>First off, please feel free to create this test mysql database (I have called mine prep):</source>
          <target state="translated">En primer lugar,por favor,siéntase libre de crear esta base de datos mysql de prueba (he llamado a la preparación de la mía):</target>
        </trans-unit>
        <trans-unit id="dde1356568f59e4b14dee0b21b6e2107618e0338" translate="yes" xml:space="preserve">
          <source>First, let's begin with the standard comment we give everyone:</source>
          <target state="translated">Primero,comencemos con el comentario estándar que le damos a todos:</target>
        </trans-unit>
        <trans-unit id="5659b9d449b5b012e0b098e81e7ed2f20fe0f375" translate="yes" xml:space="preserve">
          <source>Fix or remove any oldschool &lt;a href=&quot;https://stackoverflow.com/questions/3126072/what-are-the-best-php-input-sanitizing-functions&quot;&gt;&lt;code&gt;sanitize()&lt;/code&gt;&lt;/a&gt; function</source>
          <target state="translated">Repara o elimina cualquier funci&amp;oacute;n de &lt;a href=&quot;https://stackoverflow.com/questions/3126072/what-are-the-best-php-input-sanitizing-functions&quot;&gt; &lt;code&gt;sanitize()&lt;/code&gt; &lt;/a&gt; vieja escuela</target>
        </trans-unit>
        <trans-unit id="3aa75d58669bb5ac8b40367ea713bcccf7011235" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/questions/60174/best-way-to-prevent-sql-injection-in-php&quot;&gt;How can I prevent SQL injection in PHP?&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/questions/60174/best-way-to-prevent-sql-injection-in-php&quot;&gt;&amp;iquest;C&amp;oacute;mo puedo evitar la inyecci&amp;oacute;n de SQL en PHP?&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="07593710668e04f42ef94baca94b6702963b9675" translate="yes" xml:space="preserve">
          <source>Full Charset support</source>
          <target state="translated">Soporte completo de Charset</target>
        </trans-unit>
        <trans-unit id="55dc1ba13909c533de685b19d9a8793a296b2045" translate="yes" xml:space="preserve">
          <source>Get rid of &lt;code&gt;'&lt;/code&gt; single quotes that previously enclosed string values/variables.</source>
          <target state="translated">Desh&amp;aacute;gase de &lt;code&gt;'&lt;/code&gt; comillas simples que anteriormente inclu&amp;iacute;an valores / variables de cadena.</target>
        </trans-unit>
        <trans-unit id="6eed48caa38c8545e4fcf00ca0a37b5a7cf30396" translate="yes" xml:space="preserve">
          <source>Has been &lt;strong&gt;&lt;a href=&quot;https://wiki.php.net/rfc/remove_deprecated_functionality_in_php7#extmysql&quot;&gt;removed&lt;/a&gt; entirely&lt;/strong&gt; as of PHP 7.0 (released December 2015)</source>
          <target state="translated">Se ha &lt;strong&gt;&lt;a href=&quot;https://wiki.php.net/rfc/remove_deprecated_functionality_in_php7#extmysql&quot;&gt;eliminado por&lt;/a&gt; completo a&lt;/strong&gt; partir de PHP 7.0 (lanzado en diciembre de 2015)</target>
        </trans-unit>
        <trans-unit id="292c37ca19719be96899acb843e9a5c01e00d6c6" translate="yes" xml:space="preserve">
          <source>Here I think you are familiar with all except &lt;code&gt;DSN&lt;/code&gt;; this is new in &lt;code&gt;PDO&lt;/code&gt;. A &lt;code&gt;DSN&lt;/code&gt; is basically a string of options that tell &lt;code&gt;PDO&lt;/code&gt; which driver to use, and connection details. For further reference, check &lt;a href=&quot;http://www.php.net/manual/en/ref.pdo-mysql.connection.php&quot;&gt;PDO MySQL DSN&lt;/a&gt;.</source>
          <target state="translated">Aqu&amp;iacute; creo que est&amp;aacute; familiarizado con todos, excepto &lt;code&gt;DSN&lt;/code&gt; ; Esto es nuevo en &lt;code&gt;PDO&lt;/code&gt; . Un &lt;code&gt;DSN&lt;/code&gt; es b&amp;aacute;sicamente una serie de opciones que le indican a &lt;code&gt;PDO&lt;/code&gt; qu&amp;eacute; controlador usar y los detalles de conexi&amp;oacute;n. Para mayor referencia, consulte &lt;a href=&quot;http://www.php.net/manual/en/ref.pdo-mysql.connection.php&quot;&gt;PDO MySQL DSN&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="019fa0bc748b8d714e14e0a14973bd4b152ee106" translate="yes" xml:space="preserve">
          <source>Here are some examples based on my &lt;a href=&quot;https://github.com/colshrapnel/safemysql/blob/master/safemysql.class.php&quot;&gt;safemysql class&lt;/a&gt; to show how such an abstraction class ought to be:</source>
          <target state="translated">Aqu&amp;iacute; hay algunos ejemplos basados ​​en mi &lt;a href=&quot;https://github.com/colshrapnel/safemysql/blob/master/safemysql.class.php&quot;&gt;clase safemysql&lt;/a&gt; para mostrar c&amp;oacute;mo deber&amp;iacute;a ser una clase de abstracci&amp;oacute;n como esta:</target>
        </trans-unit>
        <trans-unit id="e75030adb468b3a20795417b746e352d74186766" translate="yes" xml:space="preserve">
          <source>How about:</source>
          <target state="translated">¿Qué tal si..:</target>
        </trans-unit>
        <trans-unit id="f26d6694fb7f66ecaf4fa1fbfe7bfe24ef194112" translate="yes" xml:space="preserve">
          <source>How prepared statements differ</source>
          <target state="translated">Cómo difieren las declaraciones preparadas</target>
        </trans-unit>
        <trans-unit id="ad5800a3aa56f013a36e72eea8f14ecf9737e3a7" translate="yes" xml:space="preserve">
          <source>However &lt;code&gt;PDO&lt;/code&gt; and/or &lt;code&gt;MySQLi&lt;/code&gt; are not completely safe. Check the answer &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/a/12202218/1723893&quot;&gt;Are PDO prepared statements sufficient to prevent SQL injection?&lt;/a&gt;&lt;/em&gt; by &lt;a href=&quot;https://stackoverflow.com/users/338665/ircmaxell&quot;&gt;ircmaxell&lt;/a&gt;. Also, I am quoting some part from his answer:</source>
          <target state="translated">Sin embargo, &lt;code&gt;PDO&lt;/code&gt; y / o &lt;code&gt;MySQLi&lt;/code&gt; no son completamente seguros. Verifique la respuesta &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/a/12202218/1723893&quot;&gt;&amp;iquest;Son suficientes las declaraciones preparadas por PDO para evitar la inyecci&amp;oacute;n de SQL?&lt;/a&gt;&lt;/em&gt; por &lt;a href=&quot;https://stackoverflow.com/users/338665/ircmaxell&quot;&gt;ircmaxell&lt;/a&gt; . Adem&amp;aacute;s, estoy citando alguna parte de su respuesta:</target>
        </trans-unit>
        <trans-unit id="de3f6b6dffdfbc0e7f9d59202608ca2d11708387" translate="yes" xml:space="preserve">
          <source>However, PDO is not a silver bullet too and has its hardships.</source>
          <target state="translated">Sin embargo,la DOP no es una bala de plata también y tiene sus dificultades.</target>
        </trans-unit>
        <trans-unit id="2326670ae94db3911611b4826e5793726e96d9a3" translate="yes" xml:space="preserve">
          <source>However, this isn't about folks yelling at you now, this is about showing you how to make your code more secure.</source>
          <target state="translated">Sin embargo,no se trata de que la gente te grite ahora,se trata de mostrarte cómo hacer tu código más seguro.</target>
        </trans-unit>
        <trans-unit id="c9bbba0df8331566d9a670652804604f09ff8317" translate="yes" xml:space="preserve">
          <source>Hybrid PDO use</source>
          <target state="translated">Uso del híbrido PDO</target>
        </trans-unit>
        <trans-unit id="5e7fba6fe256396d77ecf48550f90f920c0cc0f5" translate="yes" xml:space="preserve">
          <source>I find the above answers really lengthy, so to summarize:</source>
          <target state="translated">Las respuestas anteriores me parecen muy largas,así que para resumir:</target>
        </trans-unit>
        <trans-unit id="f888fecc5715ba4d43b06bf6c44a1576614e0cd5" translate="yes" xml:space="preserve">
          <source>I will later explain why prepare emulation should be turned off. To find reason please check &lt;a href=&quot;https://stackoverflow.com/a/12202218/1723893&quot;&gt;this post&lt;/a&gt;.</source>
          <target state="translated">M&amp;aacute;s adelante explicar&amp;eacute; por qu&amp;eacute; se debe desactivar la emulaci&amp;oacute;n de preparaci&amp;oacute;n. Para encontrar la raz&amp;oacute;n, consulte &lt;a href=&quot;https://stackoverflow.com/a/12202218/1723893&quot;&gt;esta publicaci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="28dfd8eb5aa64d92b1531d7f65006651386ac1e5" translate="yes" xml:space="preserve">
          <source>If one were to use PDO of mysqli, the user-name would end-up being &lt;code&gt;&quot;enhzflep); drop table users&quot;&lt;/code&gt;.</source>
          <target state="translated">Si uno usara PDO de mysqli, el nombre de usuario terminar&amp;iacute;a siendo &lt;code&gt;&quot;enhzflep); drop table users&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4376248962eeae9e24a09673cabe25c9fe2dda0b" translate="yes" xml:space="preserve">
          <source>If there is any connection error, it will throw a &lt;code&gt;PDOException&lt;/code&gt; object that can be caught to handle &lt;code&gt;Exception&lt;/code&gt; further.</source>
          <target state="translated">Si hay alg&amp;uacute;n error de conexi&amp;oacute;n, arrojar&amp;aacute; un objeto &lt;code&gt;PDOException&lt;/code&gt; que puede ser atrapado para manejar la &lt;code&gt;Exception&lt;/code&gt; a&amp;uacute;n m&amp;aacute;s.</target>
        </trans-unit>
        <trans-unit id="94d17d9e7f39fa252ce5b88628ec7ce8a80613f1" translate="yes" xml:space="preserve">
          <source>If there was any mention of &lt;code&gt;stripslashes()&lt;/code&gt; in your sanitize function, it may indicate a higher level oversight.</source>
          <target state="translated">Si hubo alguna menci&amp;oacute;n de &lt;code&gt;stripslashes()&lt;/code&gt; en su funci&amp;oacute;n de desinfecci&amp;oacute;n, puede indicar un descuido de mayor nivel.</target>
        </trans-unit>
        <trans-unit id="4b4c10e7726c178ac937120403512eeb1525dc8e" translate="yes" xml:space="preserve">
          <source>If they don't work on my site, why do I get errors like</source>
          <target state="translated">Si no funcionan en mi sitio,¿por qué tengo errores como</target>
        </trans-unit>
        <trans-unit id="846ece56704dd1bb57e31e8af6a84a5ac5a26943" translate="yes" xml:space="preserve">
          <source>If you need more reasons:</source>
          <target state="translated">Si necesitas más razones:</target>
        </trans-unit>
        <trans-unit id="c46e5bd047077b5ae27ca605ac5c2cfb2afbb0b6" translate="yes" xml:space="preserve">
          <source>If you need them - these are no doubt technical reasons to move away from mysql extension toward something more stylish and modern-looking.</source>
          <target state="translated">Si los necesitas,sin duda son razones técnicas para alejarse de la extensión de mysql hacia algo más elegante y de aspecto moderno.</target>
        </trans-unit>
        <trans-unit id="2407ac2d8afe5ad1d4210ba943dda290fb411756" translate="yes" xml:space="preserve">
          <source>If you understand the necessity of using a &lt;em&gt;database abstraction layer&lt;/em&gt; and looking for an API to create one, &lt;strong&gt;mysqli&lt;/strong&gt; is a very good choice, as it indeed supports many mysql-specific features.</source>
          <target state="translated">Si comprende la necesidad de usar una &lt;em&gt;capa de abstracci&amp;oacute;n de base de datos&lt;/em&gt; y busca una API para crear una, &lt;strong&gt;mysqli&lt;/strong&gt; es una muy buena opci&amp;oacute;n, ya que de hecho es compatible con muchas caracter&amp;iacute;sticas espec&amp;iacute;ficas de mysql.</target>
        </trans-unit>
        <trans-unit id="d41a7c07f4fd244d7cfdcf97a95a4ac1ba508f7c" translate="yes" xml:space="preserve">
          <source>If you want to simplify your database interaction further, mappers like &lt;a href=&quot;http://j4mie.github.io/idiormandparis/&quot;&gt;Paris/Idiorm&lt;/a&gt; are worth a try. Just like nobody uses the bland DOM in JavaScript anymore, you don't have to babysit a raw database interface nowadays.</source>
          <target state="translated">Si desea simplificar a&amp;uacute;n m&amp;aacute;s la interacci&amp;oacute;n de su base de datos, vale la pena intentarlo con mapeadores como &lt;a href=&quot;http://j4mie.github.io/idiormandparis/&quot;&gt;Paris / Idiorm&lt;/a&gt; . Al igual que ya nadie usa el DOM blando en JavaScript, hoy en d&amp;iacute;a no tiene que cuidar una interfaz de base de datos sin formato.</target>
        </trans-unit>
        <trans-unit id="a03e56ddd1d9eaedeb9d91db1610b19c15481de8" translate="yes" xml:space="preserve">
          <source>If, like vast majority of PHP folks, you are using raw API calls right in the application code (which is essentially wrong practice) - &lt;strong&gt;PDO is the only choice&lt;/strong&gt;, as this extension pretends to be not just API but rather a semi-DAL, still incomplete but offers many important features, with two of them makes PDO critically distinguished from mysqli:</source>
          <target state="translated">Si, como la gran mayor&amp;iacute;a de la gente de PHP, est&amp;aacute; utilizando llamadas API sin procesar directamente en el c&amp;oacute;digo de la aplicaci&amp;oacute;n (lo que es esencialmente una pr&amp;aacute;ctica incorrecta), &lt;strong&gt;PDO es la &amp;uacute;nica opci&amp;oacute;n&lt;/strong&gt; , ya que esta extensi&amp;oacute;n pretende ser no solo API sino m&amp;aacute;s bien un semi-DAL, Todav&amp;iacute;a est&amp;aacute; incompleto pero ofrece muchas caracter&amp;iacute;sticas importantes, con dos de ellas hace que PDO se distinga cr&amp;iacute;ticamente de mysqli:</target>
        </trans-unit>
        <trans-unit id="5f5e48429d30c2e5c8c7ca18ee430f4c425e3ebe" translate="yes" xml:space="preserve">
          <source>In PDO Data, it is obtained via the &lt;code&gt;-&amp;gt;fetch()&lt;/code&gt;, a method of your statement handle. Before calling fetch, the best approach would be telling PDO how you&amp;rsquo;d like the data to be fetched. In the below section I am explaining this.</source>
          <target state="translated">En PDO Data, se obtiene a trav&amp;eacute;s de &lt;code&gt;-&amp;gt;fetch()&lt;/code&gt; , un m&amp;eacute;todo de su identificador de declaraci&amp;oacute;n. Antes de llamar a fetch, el mejor enfoque ser&amp;iacute;a decirle a PDO c&amp;oacute;mo desea que se recuperen los datos. En la secci&amp;oacute;n a continuaci&amp;oacute;n estoy explicando esto.</target>
        </trans-unit>
        <trans-unit id="3859a21002fff48190278b32ba00eefe967fe002" translate="yes" xml:space="preserve">
          <source>In particular you should fix any &lt;code&gt;sanitize&lt;/code&gt; or &lt;code&gt;clean&lt;/code&gt; or &lt;code&gt;filterThis&lt;/code&gt; or &lt;code&gt;clean_data&lt;/code&gt; functions as advertised by dated tutorials in one form or the other:</source>
          <target state="translated">En particular, debe corregir cualquier funci&amp;oacute;n de &lt;code&gt;sanitize&lt;/code&gt; o &lt;code&gt;clean&lt;/code&gt; o &lt;code&gt;clean_data&lt;/code&gt; . Esto o clean_data como se anuncia en los tutoriales con fecha de una forma u otra:</target>
        </trans-unit>
        <trans-unit id="ba93b0ae18afe09edfc1991f28f940835559bcc0" translate="yes" xml:space="preserve">
          <source>In the above query &lt;a href=&quot;http://php.net/manual/en/pdo.exec.php&quot;&gt;&lt;code&gt;PDO::exec&lt;/code&gt;&lt;/a&gt; execute an SQL statement and returns the number of affected rows.</source>
          <target state="translated">En la consulta anterior, &lt;a href=&quot;http://php.net/manual/en/pdo.exec.php&quot;&gt; &lt;code&gt;PDO::exec&lt;/code&gt; &lt;/a&gt; ejecuta una instrucci&amp;oacute;n SQL y devuelve el n&amp;uacute;mero de filas afectadas.</target>
        </trans-unit>
        <trans-unit id="37976e7c9d1ceb09ad128295fdb921a6584e75ca" translate="yes" xml:space="preserve">
          <source>In the above, I have been using &lt;code&gt;fetch()&lt;/code&gt;. You can also use:</source>
          <target state="translated">En lo anterior, he estado usando &lt;code&gt;fetch()&lt;/code&gt; . Tambi&amp;eacute;n puedes usar:</target>
        </trans-unit>
        <trans-unit id="838f76e4ca8001fae4cd38b944929578bd91104a" translate="yes" xml:space="preserve">
          <source>In the above, you can see those &lt;code&gt;?&lt;/code&gt; instead of a name like in a name place holder. Now in the first example, we assign variables to the various placeholders (&lt;code&gt;$stmt-&amp;gt;bindValue(1, $name, PDO::PARAM_STR);&lt;/code&gt;). Then, we assign values to those placeholders and execute the statement. In the second example, the first array element goes to the first &lt;code&gt;?&lt;/code&gt; and the second to the second &lt;code&gt;?&lt;/code&gt;.</source>
          <target state="translated">En lo anterior, &amp;iquest;puedes ver esos &lt;code&gt;?&lt;/code&gt; en lugar de un nombre como en un marcador de lugar de nombre. Ahora, en el primer ejemplo, asignamos variables a los distintos marcadores de posici&amp;oacute;n ( &lt;code&gt;$stmt-&amp;gt;bindValue(1, $name, PDO::PARAM_STR);&lt;/code&gt; ). Luego, asignamos valores a esos marcadores de posici&amp;oacute;n y ejecutamos la declaraci&amp;oacute;n. En el segundo ejemplo, &amp;iquest;el primer elemento de matriz va al primero &lt;code&gt;?&lt;/code&gt; y el segundo al segundo &lt;code&gt;?&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51e69d1bd76f27cf149eed630feb3e8bbbe3e693" translate="yes" xml:space="preserve">
          <source>Insert and Update or Delete statements</source>
          <target state="translated">Insertar y actualizar o eliminar declaraciones</target>
        </trans-unit>
        <trans-unit id="f6116d88666e16df0efbdad2df064412c9f30a13" translate="yes" xml:space="preserve">
          <source>Instead of using &lt;code&gt;mysql_num_rows&lt;/code&gt; to get the number of returned rows, you can get a &lt;code&gt;PDOStatement&lt;/code&gt; and do &lt;code&gt;rowCount()&lt;/code&gt;, like:</source>
          <target state="translated">En lugar de usar &lt;code&gt;mysql_num_rows&lt;/code&gt; para obtener el n&amp;uacute;mero de filas devueltas, puede obtener un &lt;code&gt;PDOStatement&lt;/code&gt; y hacer &lt;code&gt;rowCount()&lt;/code&gt; , como:</target>
        </trans-unit>
        <trans-unit id="2f4f5b358872d7afce164df88c9ed86e13417775" translate="yes" xml:space="preserve">
          <source>Is &lt;strong&gt;officially &lt;a href=&quot;https://wiki.php.net/rfc/mysql_deprecation&quot;&gt;deprecated&lt;/a&gt;&lt;/strong&gt; as of PHP 5.5 (released June 2013).</source>
          <target state="translated">Est&amp;aacute; &lt;strong&gt;oficialmente en &lt;a href=&quot;https://wiki.php.net/rfc/mysql_deprecation&quot;&gt;desuso a&lt;/a&gt;&lt;/strong&gt; partir de PHP 5.5 (lanzado en junio de 2013).</target>
        </trans-unit>
        <trans-unit id="f27190c0d5f51b1ca6eb014f6b10e0503b10a2e9" translate="yes" xml:space="preserve">
          <source>Is not under active development</source>
          <target state="translated">No está en desarrollo activo</target>
        </trans-unit>
        <trans-unit id="dcf8be11b129ed1d3fa675563db73c8506041b9b" translate="yes" xml:space="preserve">
          <source>It is only usable if you are using an old version of &lt;code&gt;MySQL&lt;/code&gt; which I do not recommended.</source>
          <target state="translated">Solo se puede usar si est&amp;aacute; utilizando una versi&amp;oacute;n anterior de &lt;code&gt;MySQL&lt;/code&gt; que no recomiendo.</target>
        </trans-unit>
        <trans-unit id="5e9565aafd703c4317b924ba9cdbc3c14be98c98" translate="yes" xml:space="preserve">
          <source>It seems to me &lt;strong&gt;too idealistic&lt;/strong&gt; a dream that all those PHP users will learn how to handle SQL queries properly at once. Most likely they would just change mysql_* to mysqli_* mechanically, &lt;strong&gt;leaving the approach the same&lt;/strong&gt;. Especially because mysqli makes prepared statements usage incredible painful and troublesome.</source>
          <target state="translated">Me parece un sue&amp;ntilde;o &lt;strong&gt;demasiado idealista&lt;/strong&gt; que todos esos usuarios de PHP aprender&amp;aacute;n a manejar las consultas SQL correctamente de una vez. Lo m&amp;aacute;s probable es que simplemente cambien mysql_ * a mysqli_ * mec&amp;aacute;nicamente, &lt;strong&gt;dejando el enfoque igual&lt;/strong&gt; . Especialmente porque mysqli hace que el uso de declaraciones preparadas sea incre&amp;iacute;blemente doloroso y problem&amp;aacute;tico.</target>
        </trans-unit>
        <trans-unit id="ffe81de05696768d78038c224645412434af0ab5" translate="yes" xml:space="preserve">
          <source>It's best to start at simplifying again however. For example the common result fetching:</source>
          <target state="translated">Sin embargo,es mejor empezar a simplificar de nuevo.Por ejemplo,el resultado común de la obtención de resultados:</target>
        </trans-unit>
        <trans-unit id="7bd40f368444a59ce546d97ec42b7235ad3f6390" translate="yes" xml:space="preserve">
          <source>It's mostly the &lt;em&gt;bound parameters&lt;/em&gt; which can simplify code. And with &lt;a href=&quot;https://stackoverflow.com/a/14110189&quot;&gt;excellent tutorials (as seen above)&lt;/a&gt; the transition to &lt;a href=&quot;http://php.net/PDO&quot;&gt;PDO&lt;/a&gt; isn't overly arduous.</source>
          <target state="translated">Son principalmente los &lt;em&gt;par&amp;aacute;metros enlazados los&lt;/em&gt; que pueden simplificar el c&amp;oacute;digo. Y con &lt;a href=&quot;https://stackoverflow.com/a/14110189&quot;&gt;excelentes tutoriales (como se ve arriba)&lt;/a&gt; la transici&amp;oacute;n a &lt;a href=&quot;http://php.net/PDO&quot;&gt;PDO&lt;/a&gt; no es demasiado ardua.</target>
        </trans-unit>
        <trans-unit id="48bb63e397a815a1d4028b30f85fed998e978b00" translate="yes" xml:space="preserve">
          <source>It's possible to define almost all &lt;code&gt;mysql_*&lt;/code&gt; functions using mysqli or PDO. Just include them on top of your old PHP application, and it will work on PHP7. My solution &lt;a href=&quot;https://github.com/sunhater/php7-mysql/blob/master/php7-mysql.php&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Es posible definir casi todas las funciones &lt;code&gt;mysql_*&lt;/code&gt; usando mysqli o PDO. Solo incl&amp;uacute;yalos en la parte superior de su antigua aplicaci&amp;oacute;n PHP, y funcionar&amp;aacute; en PHP7. Mi soluci&amp;oacute;n &lt;a href=&quot;https://github.com/sunhater/php7-mysql/blob/master/php7-mysql.php&quot;&gt;aqu&amp;iacute;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0e54f725cef35b6c2a077269e4ced4587f8f5e96" translate="yes" xml:space="preserve">
          <source>Just don't escape a variable &lt;em&gt;and&lt;/em&gt; bind it in the same query.</source>
          <target state="translated">Simplemente no escape una variable &lt;em&gt;y la&lt;/em&gt; asocie en la misma consulta.</target>
        </trans-unit>
        <trans-unit id="5cc04691e5722139d5540eb38b3f8fdedafc04b3" translate="yes" xml:space="preserve">
          <source>Just switching to &lt;a href=&quot;/questions/tagged/pdo&quot;&gt;pdo&lt;/a&gt; doesn't quite cut it. &lt;code&gt;pdo_query()&lt;/code&gt; is also just a frontend onto it.</source>
          <target state="translated">Simplemente cambiar a &lt;a href=&quot;/questions/tagged/pdo&quot;&gt;pdo&lt;/a&gt; no es suficiente. &lt;code&gt;pdo_query()&lt;/code&gt; tambi&amp;eacute;n es solo una interfaz en &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="66ec5c04732160bf6b782f5fc5a7fd3d0a54ffb2" translate="yes" xml:space="preserve">
          <source>Lack of support for prepared statements is particularly important as they provide a clearer, less error prone method of escaping and quoting external data than manually escaping it with a separate function call.</source>
          <target state="translated">La falta de apoyo a las declaraciones preparadas es particularmente importante,ya que proporcionan un método más claro y menos propenso a errores para escapar y citar datos externos que el de escapar manualmente con una llamada de función separada.</target>
        </trans-unit>
        <trans-unit id="ef74674a0032ecad5b46a45642e5b320f61a0320" translate="yes" xml:space="preserve">
          <source>Lack of support for prepared statements is particularly important as they provide a clearer, less error-prone method of escaping and quoting external data than manually escaping it with a separate function call.</source>
          <target state="translated">La falta de apoyo a las declaraciones preparadas es particularmente importante,ya que proporcionan un método más claro y menos propenso a errores para escapar y citar datos externos que el de escapar manualmente con una llamada de función separada.</target>
        </trans-unit>
        <trans-unit id="a5c76c162b06e13ac4bcdfd672e71bd3f45ca6a4" translate="yes" xml:space="preserve">
          <source>Lacks an OO interface</source>
          <target state="translated">Carece de una interfaz OO</target>
        </trans-unit>
        <trans-unit id="f4466bc90729ac480010ac96a72f88b0375e70c8" translate="yes" xml:space="preserve">
          <source>Lacks an OO interface (to create one is a matter of several hours)</source>
          <target state="translated">Carece de una interfaz OO (crear una es cuestión de varias horas)</target>
        </trans-unit>
        <trans-unit id="1d16e278bd69ab650d0b2ca2923fa1b532adb204" translate="yes" xml:space="preserve">
          <source>Lastly, this isn't to say that this is PERFECT code. There are many more things that you could do to improve it, use hashed passwords for example, ensure that when you store sensetive information in the database, you don't store it in plain text, have multiple levels of verification - but really, if you just change your old injection prone code to this, you will be WELL along the way to writing good code - and the fact that you have gotten this far and are still reading gives me a sense of hope that you will not only implement this type of code when writing your websites and applications, but that you might go out and research those other things I just mentioned - and more. Write the best code you can, not the most basic code that barely functions.</source>
          <target state="translated">Por último,esto no quiere decir que sea un código PERFECTO.Hay muchas más cosas que podrías hacer para mejorarlo,usar contraseñas hash por ejemplo,asegurarte de que cuando guardas información sensible en la base de datos,no la guardas en texto plano,tener múltiples niveles de verificación-pero realmente,si sólo cambias tu antiguo código propenso a las inyecciones a esto,estarás BIEN en el camino de escribir un buen código-y el hecho de que hayas llegado hasta aquí y que todavía estés leyendo me da una sensación de esperanza de que no sólo implementarás este tipo de código cuando escribas tus sitios web y aplicaciones,sino que podrías salir e investigar esas otras cosas que acabo de mencionar-y más.Escriban el mejor código que puedan,no el código más básico que apenas funciona.</target>
        </trans-unit>
        <trans-unit id="d94fac60f2ec2499ed53938148c85015abf6f2b1" translate="yes" xml:space="preserve">
          <source>Let's go through this, sentence by sentence, and explain:</source>
          <target state="translated">Repasemos esto,frase por frase,y expliquémoslo:</target>
        </trans-unit>
        <trans-unit id="e754152995eed2c697af0b43150ac82ad5ccb3c4" translate="yes" xml:space="preserve">
          <source>Lets assume the following script is the verification process for an admin on a website (simplified but working if you copy and use it for testing):</source>
          <target state="translated">Asumamos que el siguiente guión es el proceso de verificación para un administrador de un sitio web (simplificado pero que funciona si lo copias y lo usas para hacer pruebas):</target>
        </trans-unit>
        <trans-unit id="a707aa190f760150c8ff8256bff3171e748227a0" translate="yes" xml:space="preserve">
          <source>Like:</source>
          <target state="translated">Like:</target>
        </trans-unit>
        <trans-unit id="b11d87a0679fc93bf95cfcb6a2752248f89d290e" translate="yes" xml:space="preserve">
          <source>Maybe I am too ignorant, but I never had an opportunity to use them things like</source>
          <target state="translated">Tal vez sea demasiado ignorante,pero nunca he tenido la oportunidad de usar esas cosas como</target>
        </trans-unit>
        <trans-unit id="17fe9ca6bbb425d8633e6b31c6b723df16a660db" translate="yes" xml:space="preserve">
          <source>More importantly you can pass $_REQUEST[] variables safely behind any query. When submitted &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; fields match the database structure exactly it's even shorter:</source>
          <target state="translated">M&amp;aacute;s importante a&amp;uacute;n, puede pasar $ _REQUEST [] variables de forma segura detr&amp;aacute;s de cualquier consulta. Cuando se env&amp;iacute;an los campos &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; coinciden exactamente con la estructura de la base de datos, es a&amp;uacute;n m&amp;aacute;s corta:</target>
        </trans-unit>
        <trans-unit id="f1587de204fa79f4a4783af5600a077de5317c2d" translate="yes" xml:space="preserve">
          <source>Most glaring bug here is the lack of documentation. More significantly the order of filtering was in exactly the wrong order.</source>
          <target state="translated">El error más evidente aquí es la falta de documentación.Lo más significativo es que el orden de filtrado estaba exactamente en el orden equivocado.</target>
        </trans-unit>
        <trans-unit id="f92274be79830199dc63b7643aad05843b510053" translate="yes" xml:space="preserve">
          <source>Move your variables out of the SQL string.</source>
          <target state="translated">Mueve tus variables fuera de la cadena SQL.</target>
        </trans-unit>
        <trans-unit id="1bdcae0a8ea855d5e4a88cd02e009731df745843" translate="yes" xml:space="preserve">
          <source>Moving away from &lt;code&gt;ext/mysql&lt;/code&gt; is not only about security, but also about having access to all the features of the MySQL database.</source>
          <target state="translated">Alejarse de &lt;code&gt;ext/mysql&lt;/code&gt; no se trata solo de seguridad, sino tambi&amp;eacute;n de tener acceso a todas las funciones de la base de datos MySQL.</target>
        </trans-unit>
        <trans-unit id="e35ac0203a1fef2dcb5b1881363e036ecd70d1e9" translate="yes" xml:space="preserve">
          <source>Multiple Statements</source>
          <target state="translated">Múltiples declaraciones</target>
        </trans-unit>
        <trans-unit id="c49860262ec681368ccb9bcf9cb9facc422187d7" translate="yes" xml:space="preserve">
          <source>MySQL deprecated in PHP 5.5.0, and removed in PHP 7.0.0. For a large and old application, this is difficult to search and replace each function.</source>
          <target state="translated">MySQL desaprobado en PHP 5.5.0,y eliminado en PHP 7.0.0.Para una aplicación grande y antigua,esto es difícil de buscar y reemplazar cada función.</target>
        </trans-unit>
        <trans-unit id="e8bb7548ab9b8605aff82c9f2282425a263a1641" translate="yes" xml:space="preserve">
          <source>Nevertheless, everyone talking about extensions always missing the &lt;strong&gt;2 important facts&lt;/strong&gt; about Mysqli and PDO:</source>
          <target state="translated">Sin embargo, todos los que hablan de extensiones siempre pierden los &lt;strong&gt;2 hechos importantes&lt;/strong&gt; sobre Mysqli y PDO:</target>
        </trans-unit>
        <trans-unit id="7d2fa77f8c62d7e4e20bf83f1d23da735eceaaeb" translate="yes" xml:space="preserve">
          <source>Newer! ext/mysql &lt;em&gt;&lt;a href=&quot;https://wiki.php.net/rfc/remove_deprecated_functionality_in_php7&quot;&gt;has been removed in PHP 7&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">&amp;iexcl;M&amp;aacute;s nuevo! ext / mysql &lt;em&gt;&lt;a href=&quot;https://wiki.php.net/rfc/remove_deprecated_functionality_in_php7&quot;&gt;ha sido eliminado en PHP 7&lt;/a&gt;&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="685d76edff92343d24a20b8ec69b6efaff99726a" translate="yes" xml:space="preserve">
          <source>Non-blocking, asynchronous queries</source>
          <target state="translated">Consultas asincrónicas sin bloqueo</target>
        </trans-unit>
        <trans-unit id="68345c1292e1cc90d4f880a94c3bca3d035eaeb2" translate="yes" xml:space="preserve">
          <source>Not to mention that &lt;em&gt;native&lt;/em&gt; prepared statements &lt;strong&gt;aren't enough to protect&lt;/strong&gt; from SQL injections, and neither mysqli nor PDO offers a solution.</source>
          <target state="translated">Sin mencionar que &lt;em&gt;las&lt;/em&gt; declaraciones preparadas &lt;em&gt;nativas&lt;/em&gt; &lt;strong&gt;no son suficientes para proteger&lt;/strong&gt; de las inyecciones de SQL, y ni mysqli ni PDO ofrecen una soluci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c63f37e1f56dcfbabca1e890130ce1ea2da2597c" translate="yes" xml:space="preserve">
          <source>Not under active development</source>
          <target state="translated">No está en desarrollo activo</target>
        </trans-unit>
        <trans-unit id="943cf0ecd5faca4611853075578258bc2002ba56" translate="yes" xml:space="preserve">
          <source>Not under active development (so what? does it affect &lt;em&gt;you&lt;/em&gt; in any practical way?)</source>
          <target state="translated">No bajo desarrollo activo (&amp;iquest;y qu&amp;eacute;? &amp;iquest; &lt;em&gt;Te&lt;/em&gt; afecta de manera pr&amp;aacute;ctica?)</target>
        </trans-unit>
        <trans-unit id="bb2ac3999c57f46e2bd9758251dbcf1d84afb4d6" translate="yes" xml:space="preserve">
          <source>Note that this will also hide &lt;strong&gt;other deprecation warnings&lt;/strong&gt;, which, however, may be for things other than MySQL. (&lt;em&gt;&lt;a href=&quot;https://wiki.php.net/rfc/mysql_deprecation#workarounds&quot;&gt;from PHP manual&lt;/a&gt;&lt;/em&gt;)</source>
          <target state="translated">Tenga en cuenta que esto tambi&amp;eacute;n ocultar&amp;aacute; &lt;strong&gt;otras advertencias de desaprobaci&amp;oacute;n&lt;/strong&gt; , que, sin embargo, pueden ser para otras cosas que no sean MySQL. ( &lt;em&gt;&lt;a href=&quot;https://wiki.php.net/rfc/mysql_deprecation#workarounds&quot;&gt;del manual de PHP&lt;/a&gt;&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="bda5dde931c8e24b349d67e7a7b806e98b96812c" translate="yes" xml:space="preserve">
          <source>Note the use of &lt;code&gt;PDO::FETCH_ASSOC&lt;/code&gt; in the &lt;code&gt;fetch()&lt;/code&gt; and &lt;code&gt;fetchAll()&lt;/code&gt; code above. This tells &lt;code&gt;PDO&lt;/code&gt; to return the rows as an associative array with the field names as keys. There are many other fetch modes too which I will explain one by one.</source>
          <target state="translated">Tenga en cuenta el uso de &lt;code&gt;PDO::FETCH_ASSOC&lt;/code&gt; en el c&amp;oacute;digo &lt;code&gt;fetch()&lt;/code&gt; y &lt;code&gt;fetchAll()&lt;/code&gt; anterior. Esto le dice a &lt;code&gt;PDO&lt;/code&gt; que devuelva las filas como una matriz asociativa con los nombres de campo como claves. Tambi&amp;eacute;n hay muchos otros modos de recuperaci&amp;oacute;n que explicar&amp;eacute; uno por uno.</target>
        </trans-unit>
        <trans-unit id="390aff0245fd3f60ed591a199d4ab419c07a3c3d" translate="yes" xml:space="preserve">
          <source>Now I come to fetch mode:</source>
          <target state="translated">Ahora paso al modo de búsqueda:</target>
        </trans-unit>
        <trans-unit id="df9f2bb47f2f3240e6cc68b55730527bb6d13c2e" translate="yes" xml:space="preserve">
          <source>Now in &lt;code&gt;PDO&lt;/code&gt;, you can do this like:</source>
          <target state="translated">Ahora en &lt;code&gt;PDO&lt;/code&gt; , puede hacer esto como:</target>
        </trans-unit>
        <trans-unit id="f01b36c532e5c2589a140fa7f84b5b0a69b50379" translate="yes" xml:space="preserve">
          <source>Now it's time to actually &lt;em&gt;utilize&lt;/em&gt; it.</source>
          <target state="translated">Ahora es el momento de &lt;em&gt;utilizarlo&lt;/em&gt; realmente.</target>
        </trans-unit>
        <trans-unit id="af4e1cd344ecad42d4d3ae20475ecfd47bd9b08f" translate="yes" xml:space="preserve">
          <source>Now, after reading all the things above, you are probably thinking: what the heck is that when I just want to start leaning simple &lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt;, or &lt;code&gt;DELETE&lt;/code&gt; statements? Don't worry, here we go:</source>
          <target state="translated">Ahora, despu&amp;eacute;s de leer todas las cosas anteriores, probablemente est&amp;eacute; pensando: &amp;iquest;qu&amp;eacute; diablos es eso cuando solo quiero comenzar a inclinarme por las declaraciones simples &lt;code&gt;SELECT&lt;/code&gt; , &lt;code&gt;INSERT&lt;/code&gt; , &lt;code&gt;UPDATE&lt;/code&gt; o &lt;code&gt;DELETE&lt;/code&gt; ? No te preocupes, aqu&amp;iacute; vamos:</target>
        </trans-unit>
        <trans-unit id="bb447931ebe2bec10f8d27c32d8b085d4929ad94" translate="yes" xml:space="preserve">
          <source>Now, lets have a look at that code again, this time written using a PDO object:</source>
          <target state="translated">Ahora,echemos un vistazo a ese código de nuevo,esta vez escrito con un objeto PDO:</target>
        </trans-unit>
        <trans-unit id="d95a06cc3375c57a4fb46a5611bf33dc0eac0163" translate="yes" xml:space="preserve">
          <source>Now, lets try the data that a clever chap would enter to try to get past our little verification system:</source>
          <target state="translated">Ahora,probemos los datos que un tipo inteligente introduciría para intentar pasar nuestro pequeño sistema de verificación:</target>
        </trans-unit>
        <trans-unit id="c56d47755ee1354ee2f207be52265612e2153d71" translate="yes" xml:space="preserve">
          <source>Now, you have the better options of using &lt;a href=&quot;http://php.net/manual/en/book.mysqli.php&quot;&gt;mysqli_&lt;/a&gt; or &lt;a href=&quot;http://www.php.net/manual/en/book.pdo.php&quot;&gt;PDO&lt;/a&gt;. I am personally a big fan of PDO, so I will be using PDO in the rest of this answer. There are pro's and con's, but personally I find that the pro's far outweigh the con's. It's portable across multiple database engines - whether you are using MySQL or Oracle or just about bloody anything - just by changing the connection string, it has all the fancy features we want to use and it is nice and clean. I like clean.</source>
          <target state="translated">Ahora, tiene las mejores opciones para usar &lt;a href=&quot;http://php.net/manual/en/book.mysqli.php&quot;&gt;mysqli_&lt;/a&gt; o &lt;a href=&quot;http://www.php.net/manual/en/book.pdo.php&quot;&gt;PDO&lt;/a&gt; . Personalmente soy un gran admirador de PDO, por lo que usar&amp;eacute; PDO en el resto de esta respuesta. Hay ventajas y desventajas, pero personalmente considero que las ventajas superan con creces a las desventajas. Es port&amp;aacute;til a trav&amp;eacute;s de m&amp;uacute;ltiples motores de base de datos, ya sea que est&amp;eacute; utilizando MySQL u Oracle o casi cualquier cosa, solo al cambiar la cadena de conexi&amp;oacute;n, tiene todas las caracter&amp;iacute;sticas elegantes que queremos usar y es agradable y limpio. Me gusta limpiar</target>
        </trans-unit>
        <trans-unit id="b4df376bcf338aaf237cc2ceb55bc64301fbe1d9" translate="yes" xml:space="preserve">
          <source>Object-oriented interface</source>
          <target state="translated">Interfaz orientada a objetos</target>
        </trans-unit>
        <trans-unit id="79f9618f1912184bc89ea96846cec252f2b5b111" translate="yes" xml:space="preserve">
          <source>Often string variables aren't just interpolated into SQL, but concatenated with escaping calls in between.</source>
          <target state="translated">A menudo las variables de cadena no sólo se interpolan en SQL,sino que se concatenan con llamadas de escape en el medio.</target>
        </trans-unit>
        <trans-unit id="0842d63b94cdae1d97ca5df8b49fbf2cefb344db" translate="yes" xml:space="preserve">
          <source>Oh, I just got a little excited, it worked: The check passed. We have a verified admin!</source>
          <target state="translated">Oh,me emocioné un poco,funcionó:El cheque pasó.¡Tenemos un administrador verificado!</target>
        </trans-unit>
        <trans-unit id="94c3dc399cf5b64e36b7c400dadceac39bc77b5b" translate="yes" xml:space="preserve">
          <source>Okay, so what went wrong, and how can we fix it?</source>
          <target state="translated">Vale,¿qué ha ido mal y cómo podemos arreglarlo?</target>
        </trans-unit>
        <trans-unit id="e33efcc54426fd4f64d01de7305ceab6f21b294b" translate="yes" xml:space="preserve">
          <source>Once you have converted all &lt;s&gt;&lt;code&gt;mysql_&lt;/code&gt;&lt;/s&gt; calls to &lt;code&gt;pdo_query&lt;/code&gt; with bound params, remove all redundant &lt;code&gt;pdo_real_escape_string&lt;/code&gt; calls.</source>
          <target state="translated">Una vez que haya convertido todas &lt;s&gt; &lt;code&gt;mysql_&lt;/code&gt; &lt;/s&gt; llamadas &lt;s&gt;mysql_&lt;/s&gt; a &lt;code&gt;pdo_query&lt;/code&gt; con par&amp;aacute;metros enlazados, elimine todas las llamadas redundantes &lt;code&gt;pdo_real_escape_string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e72184f55cc026514b7160d78c3c5aef63c2a050" translate="yes" xml:space="preserve">
          <source>Or</source>
          <target state="translated">Or</target>
        </trans-unit>
        <trans-unit id="dccb816213ce63a2edee44cd16d1bf786620eda9" translate="yes" xml:space="preserve">
          <source>Or better yet a direct and complete array retrieval:</source>
          <target state="translated">O mejor aún,una recuperación directa y completa de la matriz:</target>
        </trans-unit>
        <trans-unit id="d291165f3e48fa04de2df661e5577d3237e36a86" translate="yes" xml:space="preserve">
          <source>Other options</source>
          <target state="translated">Otras opciones</target>
        </trans-unit>
        <trans-unit id="80c9afff3fc6e7a45d3cc8c0ba82a6e36345cadc" translate="yes" xml:space="preserve">
          <source>PHP offers three different APIs to connect to MySQL. These are the &lt;a href=&quot;http://in1.php.net/manual/en/book.mysql.php&quot;&gt;&lt;code&gt;mysql&lt;/code&gt;&lt;/a&gt;(removed as of PHP 7), &lt;a href=&quot;http://uk.php.net/manual/en/book.mysqli.php&quot;&gt;&lt;code&gt;mysqli&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;http://php.net/manual/en/book.pdo.php&quot;&gt;&lt;code&gt;PDO&lt;/code&gt;&lt;/a&gt; extensions.</source>
          <target state="translated">PHP ofrece tres API diferentes para conectarse a MySQL. Estas son las extensiones &lt;a href=&quot;http://in1.php.net/manual/en/book.mysql.php&quot;&gt; &lt;code&gt;mysql&lt;/code&gt; &lt;/a&gt; (eliminadas a partir de PHP 7), &lt;a href=&quot;http://uk.php.net/manual/en/book.mysqli.php&quot;&gt; &lt;code&gt;mysqli&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;http://php.net/manual/en/book.pdo.php&quot;&gt; &lt;code&gt;PDO&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="66b1f6ccb868a51c719c54211a58306d2ce6458b" translate="yes" xml:space="preserve">
          <source>Place question marks &lt;code&gt;?&lt;/code&gt; as placeholders where the variables were before.</source>
          <target state="translated">Colocar signos de interrogaci&amp;oacute;n &lt;code&gt;?&lt;/code&gt; como marcadores de posici&amp;oacute;n donde las variables estaban antes.</target>
        </trans-unit>
        <trans-unit id="7478e01a69a59cf96a526ecfcd34a76707511615" translate="yes" xml:space="preserve">
          <source>Prepared statement &lt;strong&gt;isn't a silver bullet&lt;/strong&gt;. There are dynamical identifiers which cannot be bound using prepared statements. There are dynamical queries with an unknown number of parameters which makes query building a difficult task.</source>
          <target state="translated">La declaraci&amp;oacute;n preparada &lt;strong&gt;no es una bala de plata&lt;/strong&gt; . Hay identificadores din&amp;aacute;micos que no se pueden vincular mediante declaraciones preparadas. Hay consultas din&amp;aacute;micas con un n&amp;uacute;mero desconocido de par&amp;aacute;metros que hace que la creaci&amp;oacute;n de consultas sea una tarea dif&amp;iacute;cil.</target>
        </trans-unit>
        <trans-unit id="88e0e0a0df815f954f20830db35becc23bd2fb02" translate="yes" xml:space="preserve">
          <source>Prepared statements</source>
          <target state="translated">Declaraciones preparadas</target>
        </trans-unit>
        <trans-unit id="0b0459e39e775d8d016c9a1b7d9fbb9cf8ae780b" translate="yes" xml:space="preserve">
          <source>Q. First question in my mind was: what is `PDO`?</source>
          <target state="translated">Q.La primera pregunta en mi mente fue:¿qué es &quot;PDO&quot;?</target>
        </trans-unit>
        <trans-unit id="cb0e0b93a85516a6c4a7283d442e3274fb701224" translate="yes" xml:space="preserve">
          <source>Remember that pdo_* still allows &lt;em&gt;either or&lt;/em&gt;.</source>
          <target state="translated">Recuerde que pdo_ * todav&amp;iacute;a permite &lt;em&gt;o&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="3e04ee6f5fe2cec54a2d0b8c7a1e5d97c3761798" translate="yes" xml:space="preserve">
          <source>Remove the &lt;s&gt;&lt;code&gt;mysql_&lt;/code&gt;&lt;/s&gt; function prefix &lt;em&gt;everywhere&lt;/em&gt; and replace it with &lt;strong&gt;&lt;code&gt;pdo_&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">Elimine el prefijo de la funci&amp;oacute;n &lt;s&gt; &lt;code&gt;mysql_&lt;/code&gt; en&lt;/s&gt; &lt;em&gt;todas partes&lt;/em&gt; y reempl&amp;aacute;celo con &lt;strong&gt; &lt;code&gt;pdo_&lt;/code&gt; &lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="6e950042d73e706574ab836f1c73abbaeaec437a" translate="yes" xml:space="preserve">
          <source>Removed as of PHP 7</source>
          <target state="translated">Eliminado a partir de PHP 7</target>
        </trans-unit>
        <trans-unit id="f71536fa3d10e36d63218592cefa79677819294b" translate="yes" xml:space="preserve">
          <source>Rewriting a larger code base at once however takes time. Raison d'&amp;ecirc;tre for this intermediate alternative:</source>
          <target state="translated">Reescribir una base de c&amp;oacute;digo m&amp;aacute;s grande a la vez, sin embargo, lleva tiempo. Raison d'&amp;ecirc;tre para esta alternativa intermedia:</target>
        </trans-unit>
        <trans-unit id="b7b089287c11c303c7e28345b34bb09873f7b3e2" translate="yes" xml:space="preserve">
          <source>Rewriting doesn't have to stop at using the new pdo_ function names. You could one by one transition each pdo_query() into a plain $pdo-&amp;gt;prepare()-&amp;gt;execute() call.</source>
          <target state="translated">La reescritura no tiene por qu&amp;eacute; detenerse en el uso de los nuevos nombres de funciones pdo_. Podr&amp;iacute;a uno por uno hacer la transici&amp;oacute;n de cada pdo_query () en una simple $ pdo-&amp;gt; prepare () -&amp;gt; execute () call.</target>
        </trans-unit>
        <trans-unit id="d18471042a4567ba79deea1a219d4a26d8d8459a" translate="yes" xml:space="preserve">
          <source>SQL injections simply are when &lt;em&gt;data bleeds into code&lt;/em&gt; context. A database server can't later spot where PHP originally glued variables inbetween query clauses.</source>
          <target state="translated">Las inyecciones de SQL simplemente son cuando los &lt;em&gt;datos sangran en el&lt;/em&gt; contexto del &lt;em&gt;c&amp;oacute;digo&lt;/em&gt; . Un servidor de base de datos no puede detectar posteriormente d&amp;oacute;nde PHP originalmente peg&amp;oacute; variables entre cl&amp;aacute;usulas de consulta.</target>
        </trans-unit>
        <trans-unit id="e665bf1f2a0279913bf81f45ec5a5c78ea174425" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://bobby-tables.com/&quot;&gt;bobby-tables.com&lt;/a&gt;.</source>
          <target state="translated">Ver &lt;a href=&quot;http://bobby-tables.com/&quot;&gt;bobby-tables.com&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5434d7a025004202b6c9d1ef189773a1aad44220" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://php.net/manual/en/mysqlinfo.api.choosing.php&quot;&gt;&lt;strong&gt;the comparison of SQL extensions&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">Ver &lt;a href=&quot;http://php.net/manual/en/mysqlinfo.api.choosing.php&quot;&gt;&lt;strong&gt;la comparaci&amp;oacute;n de extensiones SQL&lt;/strong&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7489fd89c972450ae2f6ec9bf321744a53fac8d8" translate="yes" xml:space="preserve">
          <source>See how I constructed my &quot;password&quot; so that it would first close the single quote around the password, then introduce a completely new comparison? Then just for safety, I added another &quot;string&quot; so that the single quote would get closed as expected in the code we originally had.</source>
          <target state="translated">¿Ves cómo construí mi &quot;contraseña&quot; para que primero cerrara la única cita alrededor de la contraseña,y luego introdujera una comparación completamente nueva? Luego,sólo por seguridad,añadí otra &quot;cadena&quot; para que la cita única se cerrara como se esperaba en el código que teníamos originalmente.</target>
        </trans-unit>
        <trans-unit id="55506229592fa23e7b5870b9dc6c5aa7e1583634" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;http://php.net/manual/en/mysqlinfo.api.choosing.php&quot;&gt;comparison of SQL extensions&lt;/a&gt;.</source>
          <target state="translated">Ver la &lt;a href=&quot;http://php.net/manual/en/mysqlinfo.api.choosing.php&quot;&gt;comparaci&amp;oacute;n de extensiones SQL&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8332ef556cea9f1f40a6c76849dace653964c7a0" translate="yes" xml:space="preserve">
          <source>Seems legit enough at first glance.</source>
          <target state="translated">Parece bastante legítimo a primera vista.</target>
        </trans-unit>
        <trans-unit id="af912eddd3068889909f441f05cc66e7d588440d" translate="yes" xml:space="preserve">
          <source>Selecting Data</source>
          <target state="translated">Selección de datos</target>
        </trans-unit>
        <trans-unit id="418dc8b027c0175bc948e9cbb66d6a25f398bcb1" translate="yes" xml:space="preserve">
          <source>Simply &lt;code&gt;include_once(&lt;/code&gt;&lt;a href=&quot;http://fossil.include-once.org/upgradephp/artifact/43ab742241e5a3be43d31764dd333ba68e245360&quot;&gt;&lt;code&gt;&quot;pdo_mysql.php&quot;&lt;/code&gt;&lt;/a&gt;&lt;code&gt;);&lt;/code&gt; in each invocation script that has to interact with the database.</source>
          <target state="translated">Simplemente &lt;code&gt;include_once(&lt;/code&gt; &lt;a href=&quot;http://fossil.include-once.org/upgradephp/artifact/43ab742241e5a3be43d31764dd333ba68e245360&quot;&gt; &lt;code&gt;&quot;pdo_mysql.php&quot;&lt;/code&gt; &lt;/a&gt; &lt;code&gt;);&lt;/code&gt; en cada script de invocaci&amp;oacute;n que tiene que interactuar con la base de datos.</target>
        </trans-unit>
        <trans-unit id="da5002da9abdeebe9fb4cab82878e2462cde36fb" translate="yes" xml:space="preserve">
          <source>Since it is deprecated, using it makes your code less future proof.</source>
          <target state="translated">Como está desactualizado,su uso hace que su código sea menos a prueba de futuro.</target>
        </trans-unit>
        <trans-unit id="181dff808d342cf7f9e72760d9c8e79ed94e35e7" translate="yes" xml:space="preserve">
          <source>So much simplicity. But let's get back to some more rewriting advises and technical reasons on why you may want to get rid of &lt;s&gt;&lt;code&gt;mysql_&lt;/code&gt;&lt;/s&gt; and escaping.</source>
          <target state="translated">Tanta simplicidad. Pero volvamos a algunos consejos de reescritura m&amp;aacute;s y razones t&amp;eacute;cnicas sobre por qu&amp;eacute; es posible que desee deshacerse de &lt;s&gt; &lt;code&gt;mysql_&lt;/code&gt; &lt;/s&gt; y escapar.</target>
        </trans-unit>
        <trans-unit id="0e06bdf278d741a7d2afe7a65871fe0c7c71210f" translate="yes" xml:space="preserve">
          <source>So this hopefully visualized some &lt;em&gt;practical&lt;/em&gt; reasons and a worthwile pathway to drop &lt;s&gt;&lt;code&gt;mysql_&lt;/code&gt;&lt;/s&gt;.</source>
          <target state="translated">Entonces, con suerte, visualic&amp;eacute; algunas razones &lt;em&gt;pr&amp;aacute;cticas&lt;/em&gt; y un camino digno de abandonar &lt;s&gt; &lt;code&gt;mysql_&lt;/code&gt; &lt;/s&gt; .</target>
        </trans-unit>
        <trans-unit id="3012707c2195366927599a0dd74ecf1430c805f0" translate="yes" xml:space="preserve">
          <source>So what you are doing in &lt;code&gt;mysql_*&lt;/code&gt; is:</source>
          <target state="translated">Entonces, lo que est&amp;aacute;s haciendo en &lt;code&gt;mysql_*&lt;/code&gt; es:</target>
        </trans-unit>
        <trans-unit id="502276f58db137875cfb6cf92bfa59236b8263ac" translate="yes" xml:space="preserve">
          <source>So, I wrote solutions for all the common pitfalls and complex cases in the &lt;a href=&quot;https://stackoverflow.com/tags/pdo/info&quot;&gt;&lt;strong&gt;PDO tag wiki&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">Entonces, escrib&amp;iacute; soluciones para todos los escollos comunes y casos complejos en el &lt;a href=&quot;https://stackoverflow.com/tags/pdo/info&quot;&gt;&lt;strong&gt;wiki de etiqueta PDO&lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72d2f3bbb78bd884d0b025adc79a648f2da15e63" translate="yes" xml:space="preserve">
          <source>So, how do we protect your sacred admin section and make it nice and secure? The first thing to do will be to stop using those really old and deprecated &lt;code&gt;mysql_*&lt;/code&gt; functions. I know, you followed a tutorial you found online and it works, but it's old, it's outdated and in the space of a few minutes, I have just broken past it without so much as breaking a sweat.</source>
          <target state="translated">Entonces, &amp;iquest;c&amp;oacute;mo protegemos su secci&amp;oacute;n de administraci&amp;oacute;n sagrada y la hacemos agradable y segura? Lo primero que debe hacer es dejar de usar esas funciones &lt;code&gt;mysql_*&lt;/code&gt; realmente antiguas y obsoletas. Lo s&amp;eacute;, seguiste un tutorial que encontraste en l&amp;iacute;nea y funciona, pero es viejo, est&amp;aacute; desactualizado y en unos minutos, lo acabo de pasar sin siquiera sudar.</target>
        </trans-unit>
        <trans-unit id="156ae2c1a681018477e990b03ebe020a3aacb23e" translate="yes" xml:space="preserve">
          <source>So, if you are an average PHP user and want to save yourself a ton of headaches when using native prepared statements, PDO - again - is the only choice.</source>
          <target state="translated">Así que si eres un usuario promedio de PHP y quieres ahorrarte un montón de dolores de cabeza al usar declaraciones preparadas nativamente,PDO-de nuevo-es la única opción.</target>
        </trans-unit>
        <trans-unit id="09bd59ae9fef4f113a6fb3d96fee1aae3a9fb79f" translate="yes" xml:space="preserve">
          <source>So, in answer, THAT IS WHY YOU ARE BEING YELLED AT.</source>
          <target state="translated">Así que,en respuesta,es por eso que te están gritando.</target>
        </trans-unit>
        <trans-unit id="4586573c065a2c5d5186ace73cde0c4532012c55" translate="yes" xml:space="preserve">
          <source>So, instead of fighting this honest extension, I'd prefer to fight wrong practices and educate people in the right ways.</source>
          <target state="translated">Así que,en lugar de luchar contra esta extensión honesta,prefiero luchar contra las prácticas erróneas y educar a la gente de la manera correcta.</target>
        </trans-unit>
        <trans-unit id="977784c6079621feedaf15de1c0e69f13959d921" translate="yes" xml:space="preserve">
          <source>So, just switching to PDO or mysqli is not enough. One has to use an ORM, or a query builder, or whatever database abstraction class instead of calling raw API functions in their code.</source>
          <target state="translated">Así que,sólo cambiar a PDO o mysqli no es suficiente.Uno tiene que usar un ORM,o un constructor de consultas,o cualquier clase de abstracción de base de datos en lugar de llamar a las funciones de la API en bruto en su código.</target>
        </trans-unit>
        <trans-unit id="6a4c25a013fc181e44690a0c81f43ed6d49a2760" translate="yes" xml:space="preserve">
          <source>So, lets have a look at what went wrong, and why I just got into your super-admin-only-bat-cave. I took a guess and assumed that you weren't being careful with your inputs and simply passed them to the database directly. I constructed the input in a way tht would CHANGE the query that you were actually running. So, what was it supposed to be, and what did it end up being?</source>
          <target state="translated">Entonces,veamos qué salió mal,y por qué acabo de entrar en tu súper-admin-sólo-cueva de murciélagos.Supuse que no estabas siendo cuidadoso con tus entradas y simplemente las pasé a la base de datos directamente.Construí la entrada de una manera que cambiaría la consulta que estabas ejecutando.Entonces,¿qué se suponía que era,y qué terminó siendo?</target>
        </trans-unit>
        <trans-unit id="419b0e23c522675ea4d8d7c937461eb95377a4fe" translate="yes" xml:space="preserve">
          <source>So, once more - it is not just raw driver should be your concern but abstraction class, useful not only for silly examples from beginner's manual but to solve whatever real-life problems.</source>
          <target state="translated">Así que,una vez más-no es sólo el conductor en bruto debe ser su preocupación,pero la clase de abstracción,útil no sólo para los ejemplos tontos del manual de principiantes,sino para resolver cualquier problema de la vida real.</target>
        </trans-unit>
        <trans-unit id="8cf0be74cb1010c94f25e5fc839c648278844902" translate="yes" xml:space="preserve">
          <source>Source: &lt;a href=&quot;http://us2.php.net/manual/en/mysqli.overview.php&quot;&gt;MySQLi overview&lt;/a&gt;</source>
          <target state="translated">Fuente: &lt;a href=&quot;http://us2.php.net/manual/en/mysqli.overview.php&quot;&gt;descripci&amp;oacute;n general de MySQLi&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fcb447d1aaebb249a35efcda9785a596a7569ba1" translate="yes" xml:space="preserve">
          <source>Speaking of &lt;em&gt;technical&lt;/em&gt; reasons, there are only a few, extremely specific and rarely used. Most likely you will never ever use them in your life.</source>
          <target state="translated">Hablando de razones &lt;em&gt;t&amp;eacute;cnicas&lt;/em&gt; , solo hay unas pocas, extremadamente espec&amp;iacute;ficas y raramente utilizadas. Lo m&amp;aacute;s probable es que nunca los uses en tu vida.</target>
        </trans-unit>
        <trans-unit id="bf36b631054e4b9ebdd95cb1972bb398da13213f" translate="yes" xml:space="preserve">
          <source>Stored procedures</source>
          <target state="translated">Procedimientos almacenados</target>
        </trans-unit>
        <trans-unit id="43f21f37b385b47e7aca36f912842875218a10aa" translate="yes" xml:space="preserve">
          <source>String/value handling is delegated to PDO and its parameterized statements.</source>
          <target state="translated">El manejo de los valores de las cuerdas se delega a PDO y sus declaraciones parametrizadas.</target>
        </trans-unit>
        <trans-unit id="f330726eae49c3e09ec43d61637f5396a5a55745" translate="yes" xml:space="preserve">
          <source>Super! Working as expected, now lets try the actual username and password:</source>
          <target state="translated">¡Súper! Trabajando como se esperaba,ahora probemos el nombre de usuario y la contraseña:</target>
        </trans-unit>
        <trans-unit id="dfadaca1a30bce993f932dca13aff0957793e885" translate="yes" xml:space="preserve">
          <source>Support for Multiple Statements</source>
          <target state="translated">Apoyo a las declaraciones múltiples</target>
        </trans-unit>
        <trans-unit id="2142d72824641e7c7d357d78453232623a4fd7ff" translate="yes" xml:space="preserve">
          <source>Support for Prepared Statements</source>
          <target state="translated">Apoyo a las declaraciones preparadas</target>
        </trans-unit>
        <trans-unit id="1051e4c201c5f65414e7b143a72570669fd228ca" translate="yes" xml:space="preserve">
          <source>Support for Transactions</source>
          <target state="translated">Apoyo a las transacciones</target>
        </trans-unit>
        <trans-unit id="aa4d81fe71bb245630f293271255fef6e35bbfad" translate="yes" xml:space="preserve">
          <source>That was commonly there to undo damage (double escaping) from the deprecated &lt;a href=&quot;http://php.net/magic_quotes&quot;&gt;&lt;code&gt;magic_quotes&lt;/code&gt;&lt;/a&gt;. Which however is &lt;a href=&quot;https://stackoverflow.com/questions/517008/how-to-turn-off-magic-quotes-on-shared-hosting&quot;&gt;best fixed centrally&lt;/a&gt;, not string by string.</source>
          <target state="translated">Eso estaba com&amp;uacute;nmente all&amp;iacute; para deshacer el da&amp;ntilde;o (escape doble) de las &lt;a href=&quot;http://php.net/magic_quotes&quot;&gt; &lt;code&gt;magic_quotes&lt;/code&gt; &lt;/a&gt; desuso. Lo que, sin embargo, se &lt;a href=&quot;https://stackoverflow.com/questions/517008/how-to-turn-off-magic-quotes-on-shared-hosting&quot;&gt;soluciona mejor centralmente&lt;/a&gt; , no cadena por cadena.</target>
        </trans-unit>
        <trans-unit id="34467e1287edc5b797be2730e35c61969473a83f" translate="yes" xml:space="preserve">
          <source>That's the query, but when we replace the variables with the actual inputs that we used, we get the following:</source>
          <target state="translated">Esa es la consulta,pero cuando reemplazamos las variables con las entradas reales que usamos,obtenemos lo siguiente:</target>
        </trans-unit>
        <trans-unit id="e35c0916a18283d4ea1f81a70d61efa106dd1b1f" translate="yes" xml:space="preserve">
          <source>The &quot;new&quot; password authentication method (on by default in MySQL 5.6; required in 5.7)</source>
          <target state="translated">El método de autenticación de la contraseña &quot;nueva&quot; (activado por defecto en MySQL 5.6;requerido en 5.7)</target>
        </trans-unit>
        <trans-unit id="a8deffdde633f6dcdac49482f5db747ce9e171b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mysql_*&lt;/code&gt; functions used to be very popular, but their use is not encouraged anymore. The documentation team is discussing the database security situation, and educating users to move away from the commonly used ext/mysql extension is part of this (check &lt;em&gt;&lt;a href=&quot;http://news.php.net/php.internals/53799&quot;&gt;php.internals: deprecating ext/mysql&lt;/a&gt;&lt;/em&gt;).</source>
          <target state="translated">Las funciones &lt;code&gt;mysql_*&lt;/code&gt; sol&amp;iacute;an ser muy populares, pero ya no se recomienda su uso. El equipo de documentaci&amp;oacute;n est&amp;aacute; discutiendo la situaci&amp;oacute;n de seguridad de la base de datos, y educar a los usuarios para que se alejen de la extensi&amp;oacute;n ext / mysql com&amp;uacute;nmente utilizada es parte de esto (ver &lt;em&gt;&lt;a href=&quot;http://news.php.net/php.internals/53799&quot;&gt;php.internals: desaprobar ext / mysql&lt;/a&gt;&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="d67db1d2a3f9c279e59ee7cbab7e7ad484b23610" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mysql_&lt;/code&gt; functions:</source>
          <target state="translated">Las funciones &lt;code&gt;mysql_&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8555deeb46964ebda4fb022ebe48c5e2ada84f62" translate="yes" xml:space="preserve">
          <source>The DBMS parses, compiles, and performs query optimization on the statement template, and stores the result without executing it.</source>
          <target state="translated">El SGBD analiza,compila y realiza la optimización de la consulta en la plantilla de declaración y almacena el resultado sin ejecutarlo.</target>
        </trans-unit>
        <trans-unit id="23a504e237cda5d5bd1d5d68ab647b0abc87ece7" translate="yes" xml:space="preserve">
          <source>The MySQL extension is the oldest of the three and was the original way that developers used to communicate with MySQL. This extension is now being &lt;a href=&quot;http://php.net/manual/en/migration55.deprecated.php&quot;&gt;deprecated&lt;/a&gt; in favor of the other &lt;a href=&quot;http://php.net/manual/en/book.mysqli.php&quot;&gt;two&lt;/a&gt;&lt;a href=&quot;http://php.net/manual/en/book.pdo.php&quot;&gt;alternatives&lt;/a&gt; because of improvements made in newer releases of both PHP and MySQL.</source>
          <target state="translated">La extensi&amp;oacute;n MySQL es la m&amp;aacute;s antigua de las tres y fue la forma original en que los desarrolladores sol&amp;iacute;an comunicarse con MySQL. Esta extensi&amp;oacute;n ahora est&amp;aacute; en &lt;a href=&quot;http://php.net/manual/en/migration55.deprecated.php&quot;&gt;desuso&lt;/a&gt; en favor de las otras &lt;a href=&quot;http://php.net/manual/en/book.mysqli.php&quot;&gt;dos&lt;/a&gt; &lt;a href=&quot;http://php.net/manual/en/book.pdo.php&quot;&gt;alternativas&lt;/a&gt; debido a las mejoras realizadas en las versiones m&amp;aacute;s recientes de PHP y MySQL.</target>
        </trans-unit>
        <trans-unit id="f8a41f267bbe8e8e99d77e3f59457faa0a4e2d32" translate="yes" xml:space="preserve">
          <source>The MySQL extension:</source>
          <target state="translated">La extensión de MySQL:</target>
        </trans-unit>
        <trans-unit id="21414d4d700662c909aebc645c1a9d88f9c8e575" translate="yes" xml:space="preserve">
          <source>The PDOException class &amp;para;</source>
          <target state="translated">La clase PDOException &amp;para;</target>
        </trans-unit>
        <trans-unit id="ceaa748e73e903659c37e91ec7bc481b4aba692e" translate="yes" xml:space="preserve">
          <source>The above method is only useful when you are not using variable in query. But when you need to use a variable in a query, do not ever ever try like the above and there for  &lt;a href=&quot;http://en.wikipedia.org/wiki/Prepared_statement&quot;&gt;&lt;strong&gt;prepared statement or parameterized statement&lt;/strong&gt;&lt;/a&gt; is.</source>
          <target state="translated">El m&amp;eacute;todo anterior solo es &amp;uacute;til cuando no est&amp;aacute; utilizando variable en la consulta. Pero cuando necesite usar una variable en una consulta, nunca intente como lo anterior y all&amp;iacute; para la &lt;a href=&quot;http://en.wikipedia.org/wiki/Prepared_statement&quot;&gt;&lt;strong&gt;declaraci&amp;oacute;n preparada o la declaraci&amp;oacute;n parametrizada&lt;/strong&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b16db0ed6b33fd376c4271f150426eeb37d5407a" translate="yes" xml:space="preserve">
          <source>The advantage becomes more obvious for lengthier code.</source>
          <target state="translated">La ventaja se hace más obvia para un código más largo.</target>
        </trans-unit>
        <trans-unit id="5a186859a541d2250d60b00b21cdf3c3b63312a9" translate="yes" xml:space="preserve">
          <source>The analytic and synthetic reasons were already mentioned. For newcomers there's a more significant incentive to stop using the dated mysql_ functions.</source>
          <target state="translated">Ya se mencionaron las razones analíticas y sintéticas.Para los recién llegados hay un incentivo más significativo para dejar de usar las funciones anticuadas de mysql_.</target>
        </trans-unit>
        <trans-unit id="27bb7e6155e751876dec5eb5272f609fe02b5ef0" translate="yes" xml:space="preserve">
          <source>The article &lt;em&gt;&lt;a href=&quot;http://net.tutsplus.com/tutorials/php/pdo-vs-mysqli-which-should-you-use/&quot;&gt;PDO vs. MySQLi: Which Should You Use?&lt;/a&gt;&lt;/em&gt; by &lt;a href=&quot;http://webarto.com/&quot;&gt;&lt;strong&gt;Dejan Marjanovic&lt;/strong&gt;&lt;/a&gt; will help you to choose.</source>
          <target state="translated">El art&amp;iacute;culo &lt;em&gt;&lt;a href=&quot;http://net.tutsplus.com/tutorials/php/pdo-vs-mysqli-which-should-you-use/&quot;&gt;PDO vs. MySQLi: &amp;iquest;Cu&amp;aacute;l deber&amp;iacute;a usar?&lt;/a&gt;&lt;/em&gt; por &lt;a href=&quot;http://webarto.com/&quot;&gt;&lt;strong&gt;Dejan Marjanovic&lt;/strong&gt;&lt;/a&gt; te ayudar&amp;aacute; a elegir.</target>
        </trans-unit>
        <trans-unit id="99a09cf05588a6ee72d21881c364b7fa6b57bb3e" translate="yes" xml:space="preserve">
          <source>The functions which are as similar to this &lt;code&gt;mysql_connect()&lt;/code&gt;, &lt;code&gt;mysql_query()&lt;/code&gt; type are the previous version PHP i.e(PHP 4) functions and now not in use .</source>
          <target state="translated">Las funciones que son tan similares a este tipo &lt;code&gt;mysql_connect()&lt;/code&gt; , &lt;code&gt;mysql_query()&lt;/code&gt; son la versi&amp;oacute;n anterior de PHP, es decir, funciones (PHP 4) y ahora no est&amp;aacute;n en uso.</target>
        </trans-unit>
        <trans-unit id="4abbb603d8f2b2afd3d6309a44e29670822a32ff" translate="yes" xml:space="preserve">
          <source>The last one is an interesting point. Although mysql ext do not support &lt;em&gt;native&lt;/em&gt; prepared statements, they aren't required for the safety. We can easily fake prepared statements using manually handled placeholders (just like PDO does):</source>
          <target state="translated">El &amp;uacute;ltimo es un punto interesante. Aunque mysql ext no admite declaraciones preparadas &lt;em&gt;nativas&lt;/em&gt; , no son necesarias para la seguridad. Podemos falsificar f&amp;aacute;cilmente declaraciones preparadas utilizando marcadores de posici&amp;oacute;n manejados manualmente (tal como lo hace PDO):</target>
        </trans-unit>
        <trans-unit id="2dada7706eedc4cc1377e36d4ff7b1cba1c73978" translate="yes" xml:space="preserve">
          <source>The major differences are that there are no more &lt;code&gt;mysql_*&lt;/code&gt; functions. It's all done via a PDO object, secondly, it is using a prepared statement. Now, what's a prepred statement you ask? It's a way to tell the database ahead of running a query, what the query is that we are going to run. In this case, we tell the database: &quot;Hi, I am going to run a select statement wanting id, userid and pass from the table users where the userid is a variable and the pass is also a variable.&quot;.</source>
          <target state="translated">Las principales diferencias son que no hay m&amp;aacute;s funciones &lt;code&gt;mysql_*&lt;/code&gt; . Todo se hace a trav&amp;eacute;s de un objeto PDO, en segundo lugar, est&amp;aacute; utilizando una declaraci&amp;oacute;n preparada. Ahora, &amp;iquest;qu&amp;eacute; es una declaraci&amp;oacute;n preparatoria que preguntas? Es una manera de decirle a la base de datos antes de ejecutar una consulta, cu&amp;aacute;l es la consulta que vamos a ejecutar. En este caso, le decimos a la base de datos: &quot;Hola, voy a ejecutar una instrucci&amp;oacute;n select que quiera id, userid y pass de los usuarios de la tabla donde el userid es una variable y el pass tambi&amp;eacute;n es una variable&quot;.</target>
        </trans-unit>
        <trans-unit id="2dccd3b2ef63bf7cb2dcdbff4e9bf66af2258b71" translate="yes" xml:space="preserve">
          <source>The mysqli extension has a number of
  benefits, the key enhancements over
  the mysql extension being:</source>
          <target state="translated">La extensión de mysqli tiene una serie de beneficios,siendo las principales mejoras con respecto a la extensión de mysql:</target>
        </trans-unit>
        <trans-unit id="562dc1125a1bf25b7d1d24db6381f0d3d62bbedd" translate="yes" xml:space="preserve">
          <source>The original implementation in PHP2/FI introduced it explicitly with just &quot;&lt;em&gt;quotes will be automatically escaped making it easier to pass form data directly to msql queries&lt;/em&gt;&quot;. Notably it was accidentially safe to use with &lt;a href=&quot;http://www.hughes.com.au/products/msql/&quot;&gt;mSQL&lt;/a&gt;, as that supported ASCII only.</source>
          <target state="translated">La implementaci&amp;oacute;n original en PHP2 / FI lo introdujo expl&amp;iacute;citamente con solo &quot;las &lt;em&gt;comillas se escapar&amp;aacute;n autom&amp;aacute;ticamente para que sea m&amp;aacute;s f&amp;aacute;cil pasar los datos del formulario directamente a las consultas msql&lt;/em&gt; &quot;. En particular, era accidentalmente seguro usarlo con &lt;a href=&quot;http://www.hughes.com.au/products/msql/&quot;&gt;mSQL&lt;/a&gt; , ya que solo admit&amp;iacute;a ASCII.</target>
        </trans-unit>
        <trans-unit id="aebcc1312a3d5f8dc2dd1e177025cf78c72eda79" translate="yes" xml:space="preserve">
          <source>The other is to turn off prepare emulation which is enabled in the &lt;code&gt;MySQL&lt;/code&gt; driver by default, but prepare emulation should be turned off to use &lt;code&gt;PDO&lt;/code&gt; safely.</source>
          <target state="translated">La otra es desactivar la emulaci&amp;oacute;n de preparaci&amp;oacute;n que est&amp;aacute; habilitada en el controlador &lt;code&gt;MySQL&lt;/code&gt; de forma predeterminada, pero la emulaci&amp;oacute;n de preparaci&amp;oacute;n debe desactivarse para usar &lt;code&gt;PDO&lt;/code&gt; de manera segura.</target>
        </trans-unit>
        <trans-unit id="e1647f08fd0d03cfed6027ec69a028632d0edcfe" translate="yes" xml:space="preserve">
          <source>The output is as follows:</source>
          <target state="translated">El resultado es el siguiente:</target>
        </trans-unit>
        <trans-unit id="1c80ab0d65d86371430abcdf8ed4202036dd3c5d" translate="yes" xml:space="preserve">
          <source>The placeholder feature is provided by the real PDO behind it.</source>
          <target state="translated">La característica de marcador de posición es proporcionada por el verdadero PDO detrás de él.</target>
        </trans-unit>
        <trans-unit id="b025ee4adb8cf0f65ed9aabff546b7033803e091" translate="yes" xml:space="preserve">
          <source>The results are fantastic. Lets try those username and password combinations from before again:</source>
          <target state="translated">Los resultados son fantásticos.Probemos de nuevo esas combinaciones de nombre de usuario y contraseña de antes:</target>
        </trans-unit>
        <trans-unit id="6367ed4377cb731bc3493ca0a1f8fb62d7a404f7" translate="yes" xml:space="preserve">
          <source>The typical workflow of using a prepared statement is as follows (&lt;a href=&quot;http://en.wikipedia.org/wiki/Prepared_statement&quot;&gt;quoted from Wikipedia three 3 point&lt;/a&gt;):</source>
          <target state="translated">El flujo de trabajo t&amp;iacute;pico de usar una declaraci&amp;oacute;n preparada es el siguiente ( &lt;a href=&quot;http://en.wikipedia.org/wiki/Prepared_statement&quot;&gt;citado en Wikipedia tres 3 puntos&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="c0663df1a52266fe58480cc90e9a9f1077932a7a" translate="yes" xml:space="preserve">
          <source>The user has to enter a login and password, right?</source>
          <target state="translated">El usuario tiene que introducir un nombre de usuario y una contraseña,¿verdad?</target>
        </trans-unit>
        <trans-unit id="bd441197e0d87715716a19344182973372419d2a" translate="yes" xml:space="preserve">
          <source>Then PHP3/Zend reintroduced magic_quotes for MySQL and misdocumented it. But originally it was just a &lt;a href=&quot;https://stackoverflow.com/questions/16098194/why-magic-quotes-has-been-removed-from-php-5-4&quot;&gt;convenience feature&lt;/a&gt;, not intend for security.</source>
          <target state="translated">Luego PHP3 / Zend reintrodujo magic_quotes para MySQL y lo documentaron mal. Pero originalmente era solo una &lt;a href=&quot;https://stackoverflow.com/questions/16098194/why-magic-quotes-has-been-removed-from-php-5-4&quot;&gt;caracter&amp;iacute;stica de conveniencia&lt;/a&gt; , no pensada para la seguridad.</target>
        </trans-unit>
        <trans-unit id="57c2defd4b5ec30df25974856ac6eb0286c19204" translate="yes" xml:space="preserve">
          <source>Then compare with &lt;a href=&quot;https://stackoverflow.com/a/17874410/285587&quot;&gt;crazy amount of code&lt;/a&gt; you will need with raw Mysqli prepared statements.
Note that error handling, profiling, query logging already built in and running.</source>
          <target state="translated">Luego compare con una &lt;a href=&quot;https://stackoverflow.com/a/17874410/285587&quot;&gt;cantidad loca de c&amp;oacute;digo&lt;/a&gt; que necesitar&amp;aacute; con declaraciones preparadas sin procesar de Mysqli. Tenga en cuenta que el manejo de errores, la creaci&amp;oacute;n de perfiles y el registro de consultas ya est&amp;aacute;n integrados y en ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c9c4db9de41823c261f34da4aa90c4b93945d84c" translate="yes" xml:space="preserve">
          <source>Then, in the execute statement, we pass the database an array with all the variables that it now expects.</source>
          <target state="translated">Luego,en la sentencia de ejecución,le pasamos a la base de datos una matriz con todas las variables que ahora espera.</target>
        </trans-unit>
        <trans-unit id="c69679c49c5f8114f4079ae3ec807eb8cad58847" translate="yes" xml:space="preserve">
          <source>There are better, more robust and well-built alternatives, &lt;strong&gt;&lt;a href=&quot;http://php.net/pdo&quot;&gt;PDO - PHP Database Object&lt;/a&gt;&lt;/strong&gt;, which offers a complete OOP approach to database interaction, and &lt;strong&gt;&lt;a href=&quot;http://php.net/mysqli&quot;&gt;MySQLi&lt;/a&gt;&lt;/strong&gt;, which is a MySQL specific improvement.</source>
          <target state="translated">Hay alternativas mejores, m&amp;aacute;s robustas y bien construidas, &lt;strong&gt;&lt;a href=&quot;http://php.net/pdo&quot;&gt;PDO - Objeto de base de datos PHP&lt;/a&gt;&lt;/strong&gt; , que ofrece un enfoque OOP completo para la interacci&amp;oacute;n de la base de datos, y &lt;strong&gt;&lt;a href=&quot;http://php.net/mysqli&quot;&gt;MySQLi&lt;/a&gt;&lt;/strong&gt; , que es una mejora espec&amp;iacute;fica de MySQL.</target>
        </trans-unit>
        <trans-unit id="52a787558155f6b79392728bd50c95fa82bc40c0" translate="yes" xml:space="preserve">
          <source>There are even more choices! Read about them all in &lt;a href=&quot;http://www.php.net/manual/en/pdostatement.fetch.php&quot;&gt;&lt;code&gt;PDOStatement&lt;/code&gt; Fetch documentation.&lt;/a&gt;.</source>
          <target state="translated">&amp;iexcl;Incluso hay m&amp;aacute;s opciones! Lea sobre todos ellos en la &lt;a href=&quot;http://www.php.net/manual/en/pdostatement.fetch.php&quot;&gt;documentaci&amp;oacute;n de &lt;code&gt;PDOStatement&lt;/code&gt; Fetch.&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0536d09b1c2f82b31a60e587322bf4e9ae190fe2" translate="yes" xml:space="preserve">
          <source>There are many reasons, but perhaps the most important one is that those functions encourage insecure programming practices because they do not support prepared statements. Prepared statements help prevent SQL injection attacks.</source>
          <target state="translated">Hay muchas razones,pero quizás la más importante es que esas funciones fomentan prácticas de programación inseguras porque no apoyan las declaraciones preparadas.Las sentencias preparadas ayudan a prevenir los ataques de inyección SQL.</target>
        </trans-unit>
        <trans-unit id="b5b472b07cd013e7228dcd85aa4b24ebd1742ea3" translate="yes" xml:space="preserve">
          <source>There ought to be an &lt;strong&gt;abstraction layer&lt;/strong&gt; between them and application code, which will do all the dirty job of binding, looping, error handling, etc. inside, making application code DRY and clean. Especially for the complex cases like dynamical query building.</source>
          <target state="translated">Deber&amp;iacute;a haber una &lt;strong&gt;capa de abstracci&amp;oacute;n&lt;/strong&gt; entre ellos y el c&amp;oacute;digo de la aplicaci&amp;oacute;n, que har&amp;aacute; todo el trabajo sucio de encuadernaci&amp;oacute;n, bucle, manejo de errores, etc. dentro, haciendo que el c&amp;oacute;digo de la aplicaci&amp;oacute;n est&amp;eacute; SECO y limpio. Especialmente para los casos complejos como la construcci&amp;oacute;n din&amp;aacute;mica de consultas.</target>
        </trans-unit>
        <trans-unit id="5aa178ec91604559d6a4a1f12b3fe446f5816ce4" translate="yes" xml:space="preserve">
          <source>These &lt;code&gt;pdo_*&lt;/code&gt; wrapper functions make a coding-friendly stop-gap API. (It's pretty much what &lt;code&gt;MYSQLI&lt;/code&gt; could have been if it wasn't for the idiosyncratic function signature shift). They also expose the real PDO at most times.</source>
          <target state="translated">Estas funciones de contenedor &lt;code&gt;pdo_*&lt;/code&gt; hacen una API stop-gap amigable con la codificaci&amp;oacute;n. (Es m&amp;aacute;s o menos lo que &lt;code&gt;MYSQLI&lt;/code&gt; podr&amp;iacute;a haber sido si no fuera por el cambio de firma de la funci&amp;oacute;n idiosincr&amp;aacute;sica). Tambi&amp;eacute;n exponen la verdadera DOP en la mayor&amp;iacute;a de los casos.</target>
        </trans-unit>
        <trans-unit id="66a2a549e1414faaaca0f781d02836464a0a76dc" translate="yes" xml:space="preserve">
          <source>These are replaced by &lt;code&gt;mysqli_connect()&lt;/code&gt;, &lt;code&gt;mysqli_query()&lt;/code&gt; similarly in the latest PHP5.</source>
          <target state="translated">Estos son reemplazados por &lt;code&gt;mysqli_connect()&lt;/code&gt; , &lt;code&gt;mysqli_query()&lt;/code&gt; manera similar en el &amp;uacute;ltimo PHP5.</target>
        </trans-unit>
        <trans-unit id="b9701d5279e360121f1a9236afe73ce6cdab2437" translate="yes" xml:space="preserve">
          <source>This answer is written to show just how trivial it is to bypass poorly written PHP user-validation code, how (and using what) these attacks work and how to replace the old MySQL functions with a secure prepared statement - and basically, why StackOverflow users (probably with a lot of rep) are barking at new users asking questions to improve their code.</source>
          <target state="translated">Esta respuesta está escrita para mostrar cuán trivial es eludir el código de validación de usuario de PHP mal escrito,cómo (y usando qué)funcionan estos ataques y cómo reemplazar las viejas funciones de MySQL con una declaración preparada segura-y básicamente,por qué los usuarios de StackOverflow (probablemente con mucha reputación)están ladrando a los nuevos usuarios que hacen preguntas para mejorar su código.</target>
        </trans-unit>
        <trans-unit id="acf591526b7653913fa0342793a9a8eed4e6efa1" translate="yes" xml:space="preserve">
          <source>This is a classic SQL injection attack. One of the simplest for that matter. On the scale of attack vectors, this is a toddler attacking a tank - and winning.</source>
          <target state="translated">Este es un clásico ataque de inyección SQL.Uno de los más simples para el caso.En la escala de vectores de ataque,este es un niño pequeño atacando un tanque-y ganando.</target>
        </trans-unit>
        <trans-unit id="53d154ecdaa8d6b0fba2af9eefdc52d17f07dcb7" translate="yes" xml:space="preserve">
          <source>This is the reason behind the error.</source>
          <target state="translated">Esta es la razón del error.</target>
        </trans-unit>
        <trans-unit id="6bafa12ee03b3bf471f9002286e0bb60d99c0b9e" translate="yes" xml:space="preserve">
          <source>This is why you are being yelled at when posting questions - it's because people can see that your code can be bypassed wihout even trying. Please, do use this question and answer to improve your code, to make it more secure and to use functions that are current.</source>
          <target state="translated">Por eso te gritan cuando publicas preguntas,porque la gente puede ver que tu código puede ser evitado sin siquiera intentarlo.Por favor,usa esta pregunta y respuesta para mejorar tu código,para hacerlo más seguro y para usar funciones que estén actualizadas.</target>
        </trans-unit>
        <trans-unit id="7d8ecdcb3fa76fbbc753f992ef32e06a8691ab30" translate="yes" xml:space="preserve">
          <source>This latter issue is a problem.</source>
          <target state="translated">Esta última cuestión es un problema.</target>
        </trans-unit>
        <trans-unit id="b327464305947f9b5efea8f1e165dfaa4f7af138" translate="yes" xml:space="preserve">
          <source>This means that as of &lt;a href=&quot;https://www.php.net/eol.php&quot;&gt;31 Dec 2018&lt;/a&gt; it does not exist in any supported version of PHP. If you are using a version of PHP which supports it, you are using a version which doesn't get security problems fixed.</source>
          <target state="translated">Esto significa que a partir del &lt;a href=&quot;https://www.php.net/eol.php&quot;&gt;31 de diciembre de 2018&lt;/a&gt; no existe en ninguna versi&amp;oacute;n compatible de PHP. Si est&amp;aacute; utilizando una versi&amp;oacute;n de PHP que lo admite, est&amp;aacute; utilizando una versi&amp;oacute;n que no soluciona los problemas de seguridad.</target>
        </trans-unit>
        <trans-unit id="c5028f4b1c5e464cbdf5fbc73b406c40f8937746" translate="yes" xml:space="preserve">
          <source>This means that the PHP community is gradually dropping support for these very old functions. They are likely to not exist in a future (recent) version of PHP! Continued use of these functions may break your code in the (not so) far future.</source>
          <target state="translated">Esto significa que la comunidad PHP está dejando de soportar gradualmente estas funciones tan antiguas.¡Es probable que no existan en una futura (reciente)versión de PHP! El uso continuado de estas funciones puede romper su código en un futuro (no tan)lejano.</target>
        </trans-unit>
        <trans-unit id="a9447e1e24f2f798f77e4acb808ca245ef8e28b9" translate="yes" xml:space="preserve">
          <source>This time, we get the following:</source>
          <target state="translated">Esta vez,tenemos lo siguiente:</target>
        </trans-unit>
        <trans-unit id="7b5d0b0f701ec4934ce62c2d94018de81b4de43f" translate="yes" xml:space="preserve">
          <source>Thus also allowed &lt;code&gt;:named&lt;/code&gt; placeholder lists later.</source>
          <target state="translated">Por lo tanto, tambi&amp;eacute;n se permite &lt;code&gt;:named&lt;/code&gt; listas de marcadores de posici&amp;oacute;n con nombre m&amp;aacute;s adelante.</target>
        </trans-unit>
        <trans-unit id="1e3281a962e6db2e54e787f796eb7d2b1582389a" translate="yes" xml:space="preserve">
          <source>Transactions</source>
          <target state="translated">Transactions</target>
        </trans-unit>
        <trans-unit id="5ce32adc4f972e95e060d45591a7aa082f17d9f6" translate="yes" xml:space="preserve">
          <source>Unless you also introduce parameter binding or can utilize something else from the nicer API, it's a pointless switch. I hope it's portrayed simple enough to not further the discouragement to newcomers. (Education usually works better than prohibition.)</source>
          <target state="translated">A menos que también introduzcas la vinculación de parámetros o puedas utilizar algo más de la mejor API,es un cambio inútil.Espero que se muestre lo suficientemente simple como para no desanimar a los recién llegados.(La educación suele funcionar mejor que la prohibición).</target>
        </trans-unit>
        <trans-unit id="9f6d94af323287247ddbdf1bbc2b55dbba5ca657" translate="yes" xml:space="preserve">
          <source>Use one of the &lt;a href=&quot;http://php.net/security.magicquotes.disabling&quot;&gt;userland reversal&lt;/a&gt; approaches. Then remove the &lt;code&gt;stripslashes()&lt;/code&gt; in the &lt;code&gt;sanitize&lt;/code&gt; function.</source>
          <target state="translated">Utilice uno de los enfoques de &lt;a href=&quot;http://php.net/security.magicquotes.disabling&quot;&gt;reversi&amp;oacute;n de tierra&lt;/a&gt; de usuario . Luego quite las &lt;code&gt;stripslashes()&lt;/code&gt; en la funci&amp;oacute;n de &lt;code&gt;sanitize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d22feee0d218aca696cac86b7e4deb1dabc1af1d" translate="yes" xml:space="preserve">
          <source>User wasn't verified. Awesome.</source>
          <target state="translated">El usuario no fue verificado.Impresionante.</target>
        </trans-unit>
        <trans-unit id="ef7051e396eea2b5e406d5540802dd68853d889b" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;http://fossil.include-once.org/upgradephp/artifact/43ab742241e5a3be43d31764dd333ba68e245360&quot;&gt;&amp;lt;&lt;strong&gt;pdo_mysql.php&lt;/strong&gt;&amp;gt;&lt;/a&gt; you can switch from the old mysql_ functions with &lt;em&gt;minimal effort&lt;/em&gt;. It adds &lt;code&gt;pdo_&lt;/code&gt; function wrappers which replace their &lt;code&gt;mysql_&lt;/code&gt; counterparts.</source>
          <target state="translated">Usando &lt;a href=&quot;http://fossil.include-once.org/upgradephp/artifact/43ab742241e5a3be43d31764dd333ba68e245360&quot;&gt;&amp;lt; &lt;strong&gt;pdo_mysql.php&lt;/strong&gt; &amp;gt;&lt;/a&gt; puede cambiar de las antiguas funciones mysql_ con un &lt;em&gt;m&amp;iacute;nimo esfuerzo&lt;/em&gt; . Agrega &lt;code&gt;pdo_&lt;/code&gt; funciones pdo_ que reemplazan a sus hom&amp;oacute;logos &lt;code&gt;mysql_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3546de296990f00559369725f6b73e5773d07ec" translate="yes" xml:space="preserve">
          <source>Using prepared statements in &lt;code&gt;PDO&lt;/code&gt; or &lt;code&gt;mysqli&lt;/code&gt; will make it so that these sorts of programming errors are more difficult to make.</source>
          <target state="translated">El uso de declaraciones preparadas en &lt;code&gt;PDO&lt;/code&gt; o &lt;code&gt;mysqli&lt;/code&gt; har&amp;aacute; que este tipo de errores de programaci&amp;oacute;n sea m&amp;aacute;s dif&amp;iacute;cil de hacer.</target>
        </trans-unit>
        <trans-unit id="486fedcd9d1e44ea49d7fea32a811becae9a5ea2" translate="yes" xml:space="preserve">
          <source>Warning: mysql_connect(): No such file or directory</source>
          <target state="translated">Advertencia:mysql_connect():No existe tal archivo o directorio</target>
        </trans-unit>
        <trans-unit id="4c5244a83456f7a8a64e8871234ed5b7ddc13050" translate="yes" xml:space="preserve">
          <source>We can use MySQL functions by creating a wrapper function for each below is running code. &lt;a href=&quot;https://www.talkforweb.com.au/php/how-to-use-mysql-in-php-7-version&quot;&gt;Click here&lt;/a&gt;</source>
          <target state="translated">Podemos usar las funciones de MySQL creando una funci&amp;oacute;n de contenedor para cada uno de los siguientes c&amp;oacute;digos de ejecuci&amp;oacute;n. &lt;a href=&quot;https://www.talkforweb.com.au/php/how-to-use-mysql-in-php-7-version&quot;&gt;haga clic aqu&amp;iacute;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75b20bd2200600dac46620c83364968245f98595" translate="yes" xml:space="preserve">
          <source>Well, not really. Lets say the user is a clever little person. Lets say the person is me.</source>
          <target state="translated">Bueno,en realidad no.Digamos que el usuario es una pequeña persona inteligente.Digamos que la persona soy yo.</target>
        </trans-unit>
        <trans-unit id="7899429896ac711595aff78d7cfe787d90c838cd" translate="yes" xml:space="preserve">
          <source>Well, the answer would be as follows:</source>
          <target state="translated">Bueno,la respuesta sería la siguiente:</target>
        </trans-unit>
        <trans-unit id="0fbfa99fed4d886de39ca6ae2e0a7d91af92c318" translate="yes" xml:space="preserve">
          <source>What are the technical reasons for why one shouldn't use &lt;code&gt;mysql_*&lt;/code&gt; functions? (e.g. &lt;code&gt;mysql_query()&lt;/code&gt;, &lt;code&gt;mysql_connect()&lt;/code&gt; or &lt;code&gt;mysql_real_escape_string()&lt;/code&gt;)?</source>
          <target state="translated">&amp;iquest;Cu&amp;aacute;les son las razones t&amp;eacute;cnicas por las cuales uno no deber&amp;iacute;a usar las funciones &lt;code&gt;mysql_*&lt;/code&gt; ? (por ejemplo, &lt;code&gt;mysql_query()&lt;/code&gt; , &lt;code&gt;mysql_connect()&lt;/code&gt; o &lt;code&gt;mysql_real_escape_string()&lt;/code&gt; )?</target>
        </trans-unit>
        <trans-unit id="cd38c24be39c82544339ccc932bdc9bf31585932" translate="yes" xml:space="preserve">
          <source>What we are doing in &lt;code&gt;mysql_*&lt;/code&gt; function is:</source>
          <target state="translated">Lo que estamos haciendo en la funci&amp;oacute;n &lt;code&gt;mysql_*&lt;/code&gt; es:</target>
        </trans-unit>
        <trans-unit id="b21a3658c12dc7f9942d92330d6ba7faf54fd2f5" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;mysql_*&lt;/code&gt; functions, you have to remember to run user-supplied parameters through &lt;code&gt;mysql_real_escape_string()&lt;/code&gt;. If you forget in just one place or if you happen to escape only part of the input, your database may be subject to attack.</source>
          <target state="translated">Cuando use las funciones &lt;code&gt;mysql_*&lt;/code&gt; , debe recordar ejecutar los par&amp;aacute;metros proporcionados por el usuario a trav&amp;eacute;s de &lt;code&gt;mysql_real_escape_string()&lt;/code&gt; . Si olvida en un solo lugar o si escapa solo una parte de la entrada, su base de datos puede estar sujeta a ataques.</target>
        </trans-unit>
        <trans-unit id="2931a1a4cd0a0347c48feeaca13f011b624aed4e" translate="yes" xml:space="preserve">
          <source>When you go on any &lt;code&gt;mysql_*&lt;/code&gt; function manual page, you see a red box, explaining it should not be used anymore.</source>
          <target state="translated">Cuando va a cualquier p&amp;aacute;gina de manual de funciones de &lt;code&gt;mysql_*&lt;/code&gt; , ve un cuadro rojo que explica que ya no debe usarse.</target>
        </trans-unit>
        <trans-unit id="cf411fb39b805de367075ecc7671c209fb94fd0c" translate="yes" xml:space="preserve">
          <source>When you go to any &lt;code&gt;mysql&lt;/code&gt; function manual page, you see a red box, explaining it should not be used anymore.</source>
          <target state="translated">Cuando vaya a cualquier p&amp;aacute;gina del manual de funciones de &lt;code&gt;mysql&lt;/code&gt; , ver&amp;aacute; un cuadro rojo que explica que ya no debe usarse.</target>
        </trans-unit>
        <trans-unit id="de52d720c2b9fc0148a79e4ac0bf6e334c6922de" translate="yes" xml:space="preserve">
          <source>When you scramble string variables into the SQL queries, it doesn't just get more intricate for you to follow. It's also extraneous effort for MySQL to segregate code and data again.</source>
          <target state="translated">Cuando se mezclan las variables de cadena en las consultas SQL,no sólo se hace más intrincado para que usted siga.También es un esfuerzo externo para MySQL para segregar el código y los datos de nuevo.</target>
        </trans-unit>
        <trans-unit id="08e4f5d49c704cc6527ca62c9c0c5f10e94a3848" translate="yes" xml:space="preserve">
          <source>While code is being converted to &lt;code&gt;MySQLi&lt;/code&gt;/&lt;code&gt;PDO&lt;/code&gt;, &lt;code&gt;E_DEPRECATED&lt;/code&gt; errors can be suppressed by setting &lt;code&gt;error_reporting&lt;/code&gt; in &lt;strong&gt;php.ini&lt;/strong&gt; to exclude &lt;code&gt;E_DEPRECATED:&lt;/code&gt;</source>
          <target state="translated">Mientras el c&amp;oacute;digo se convierte a &lt;code&gt;MySQLi&lt;/code&gt; / &lt;code&gt;PDO&lt;/code&gt; , los errores &lt;code&gt;E_DEPRECATED&lt;/code&gt; se pueden suprimir configurando &lt;code&gt;error_reporting&lt;/code&gt; en &lt;strong&gt;php.ini&lt;/strong&gt; para excluir &lt;code&gt;E_DEPRECATED:&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e96fbd5b6300a2987f662d74b0a387a6eaee6777" translate="yes" xml:space="preserve">
          <source>While it qualifies for the simplest-thing-that-could-possibly-work category, it's also still very experimental code. I just wrote it over the weekend. There's a plethora of alternatives however. Just google for &lt;a href=&quot;https://www.google.de/search?client=stackoverflow&amp;amp;q=PHP+database+abstraction&quot;&gt;PHP database abstraction&lt;/a&gt; and browse a little. There always have been and will be lots of excellent libraries for such tasks.</source>
          <target state="translated">Si bien califica para la categor&amp;iacute;a de lo m&amp;aacute;s simple que podr&amp;iacute;a funcionar, tambi&amp;eacute;n sigue siendo un c&amp;oacute;digo muy experimental. Lo acabo de escribir el fin de semana. Sin embargo, hay una gran cantidad de alternativas. Simplemente busque en Google la &lt;a href=&quot;https://www.google.de/search?client=stackoverflow&amp;amp;q=PHP+database+abstraction&quot;&gt;abstracci&amp;oacute;n de la base de datos PHP&lt;/a&gt; y explore un poco. Siempre ha habido y habr&amp;aacute; muchas bibliotecas excelentes para tales tareas.</target>
        </trans-unit>
        <trans-unit id="3db062dc13c427b5833ae038cf2841371c4940cd" translate="yes" xml:space="preserve">
          <source>While this answer stresses that you should care about the readability advantages of dropping &lt;s&gt;&lt;code&gt;mysql_&lt;/code&gt;&lt;/s&gt;. There's occasionally also a performance advantage (repeated INSERTs with just differing values) due to this visible and technical data/code separation.</source>
          <target state="translated">Si bien esta respuesta enfatiza que debe preocuparse por las ventajas de legibilidad de soltar &lt;s&gt; &lt;code&gt;mysql_&lt;/code&gt; &lt;/s&gt; . Ocasionalmente tambi&amp;eacute;n hay una ventaja de rendimiento (INSERT repetidos con solo valores diferentes) debido a esta separaci&amp;oacute;n visible y t&amp;eacute;cnica de datos / c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="21e2caea4476d26af34541ca7c909c7ff2fa4a7f" translate="yes" xml:space="preserve">
          <source>Why</source>
          <target state="translated">Why</target>
        </trans-unit>
        <trans-unit id="3ef9f79b5eb449f72b3fdf90c2c98ca4727dbf72" translate="yes" xml:space="preserve">
          <source>Why should I use something else even if they work on my site?</source>
          <target state="translated">¿Por qué debería usar otra cosa aunque funcionen en mi sitio?</target>
        </trans-unit>
        <trans-unit id="bef272d0089010f98f10750eee469e97be3484f5" translate="yes" xml:space="preserve">
          <source>Why shouldn't I use mysql_* functions in PHP</source>
          <target state="translated">¿Por qué no debería usar las funciones mysql_*en PHP</target>
        </trans-unit>
        <trans-unit id="4ba7de6b07d2790dbe183ff8860e4b3a376efb27" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;?&lt;/code&gt; placeholders applied you don't have to bother with that:</source>
          <target state="translated">Con &lt;code&gt;?&lt;/code&gt; marcadores de posici&amp;oacute;n aplicados no tiene que molestarse con eso:</target>
        </trans-unit>
        <trans-unit id="1b521949ba1a0d81fe7f7a22ca009f139258af49" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;PDO&lt;/code&gt;: All you need to do is create a new &lt;code&gt;PDO&lt;/code&gt; object. The constructor accepts parameters for specifying the database source &lt;code&gt;PDO&lt;/code&gt;'s constructor mostly takes four parameters which are &lt;code&gt;DSN&lt;/code&gt; (data source name) and  optionally &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;password&lt;/code&gt;.</source>
          <target state="translated">Con &lt;code&gt;PDO&lt;/code&gt; : todo lo que necesita hacer es crear un nuevo objeto &lt;code&gt;PDO&lt;/code&gt; . El constructor acepta par&amp;aacute;metros para especificar la fuente de la base de datos. El constructor de &lt;code&gt;PDO&lt;/code&gt; toma principalmente cuatro par&amp;aacute;metros que son &lt;code&gt;DSN&lt;/code&gt; (nombre de la fuente de datos) y opcionalmente &lt;code&gt;username&lt;/code&gt; , &lt;code&gt;password&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e432386262217c200274bffa28234079d822668e" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;mysql_*&lt;/code&gt; function or we can say it the old way (deprecated in PHP 5.5 and above)</source>
          <target state="translated">Con la funci&amp;oacute;n &lt;code&gt;mysql_*&lt;/code&gt; o podemos decirlo a la antigua usanza (obsoleto en PHP 5.5 y superior)</target>
        </trans-unit>
        <trans-unit id="aa425a4526ed951fbc2faa2bf53cf3ac2eedcb7b" translate="yes" xml:space="preserve">
          <source>With bound parameters you separate SQL code and SQL-context values in your PHP code. But it doesn't get shuffled up again behind the scenes (except with PDO::EMULATE_PREPARES). Your database receives the unvaried SQL commands and 1:1 variable values.</source>
          <target state="translated">Con los parámetros vinculados,usted separa el código SQL y los valores de contexto SQL en su código PHP.Pero no se vuelve a mezclar entre bastidores (excepto con PDO::EMULATE_PREPARES).Su base de datos recibe los comandos SQL sin variación y los valores de las variables 1:1.</target>
        </trans-unit>
        <trans-unit id="e7b9c34542bc7220d2b9d0c79dbfc014575aed6b" translate="yes" xml:space="preserve">
          <source>With that done, we can move to our PHP code.</source>
          <target state="translated">Con eso hecho,podemos pasar a nuestro código PHP.</target>
        </trans-unit>
        <trans-unit id="bd1fd1c6043beb37d33d7ef7c193233e05a2152e" translate="yes" xml:space="preserve">
          <source>You can also bind using an execute array as well:</source>
          <target state="translated">También puedes unirte usando una matriz de ejecución:</target>
        </trans-unit>
        <trans-unit id="39834359a3e108415bb98b0c8863a7cd433c0634" translate="yes" xml:space="preserve">
          <source>You can also pass in several driver options as an array to the fourth parameter. I recommend passing the parameter which puts &lt;code&gt;PDO&lt;/code&gt; into exception mode. Because some &lt;code&gt;PDO&lt;/code&gt; drivers don't support native prepared statements, so &lt;code&gt;PDO&lt;/code&gt; performs emulation of the prepare. It also lets you manually enable this emulation. To use the native server-side prepared statements, you should explicitly set it &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n puede pasar varias opciones de controlador como una matriz al cuarto par&amp;aacute;metro. Recomiendo pasar el par&amp;aacute;metro que pone &lt;code&gt;PDO&lt;/code&gt; en modo de excepci&amp;oacute;n. Debido a que algunos controladores &lt;code&gt;PDO&lt;/code&gt; no admiten declaraciones preparadas nativas, &lt;code&gt;PDO&lt;/code&gt; realiza la emulaci&amp;oacute;n de la preparaci&amp;oacute;n. Tambi&amp;eacute;n le permite habilitar manualmente esta emulaci&amp;oacute;n. Para usar las declaraciones preparadas del lado del servidor nativo, debe establecerlo expl&amp;iacute;citamente como &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0106d16cdb27ff2ec30c1b900ece093440a823c3" translate="yes" xml:space="preserve">
          <source>You can hardly find an example for PDO to handle such practical case.</source>
          <target state="translated">Apenas se puede encontrar un ejemplo para que la PDO maneje un caso tan práctico.</target>
        </trans-unit>
        <trans-unit id="193b814af13365eaaf93b92758d562e11bdc9a6e" translate="yes" xml:space="preserve">
          <source>You can use a prepared statement by including placeholders in your SQL. There are basically three ones without placeholders (don't try this with variable its above one), one with unnamed placeholders, and one with named placeholders.</source>
          <target state="translated">Puede utilizar una declaración preparada incluyendo marcadores de posición en su SQL.Básicamente hay tres sin marcadores de posición (no intente esto con la variable que está arriba de uno),uno con marcadores de posición sin nombre y uno con marcadores de posición con nombre.</target>
        </trans-unit>
        <trans-unit id="9f8aaea6ff6d99acc02af021cf0de60526c70b07" translate="yes" xml:space="preserve">
          <source>You do not have to handle with &lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt; right now. You can catch it at any time appropriate, but I strongly recommend you to use &lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt;. Also it may make more sense to catch it at outside the function that calls the &lt;code&gt;PDO&lt;/code&gt; stuff:</source>
          <target state="translated">No tiene que lidiar con &lt;code&gt;try&lt;/code&gt; - &lt;code&gt;catch&lt;/code&gt; ahora mismo. Puede atraparlo en cualquier momento apropiado, pero le recomiendo encarecidamente que use &lt;code&gt;try&lt;/code&gt; - &lt;code&gt;catch&lt;/code&gt; . Tambi&amp;eacute;n puede tener m&amp;aacute;s sentido detectarlo fuera de la funci&amp;oacute;n que llama al material &lt;code&gt;PDO&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f6ec43a805132e214cc4951849805b992f1dca6d" translate="yes" xml:space="preserve">
          <source>You just need a less unwieldy API.</source>
          <target state="translated">Sólo necesitas un API menos pesado.</target>
        </trans-unit>
        <trans-unit id="83c916251fa57138befaf512e453b91c66f1222f" translate="yes" xml:space="preserve">
          <source>You may have to keep the rest of your &lt;code&gt;sanitize()&lt;/code&gt; function for now if your database and application flow expect HTML-context-safe strings. Add a comment that it applies only HTML escaping henceforth.</source>
          <target state="translated">Es posible que deba mantener el resto de su funci&amp;oacute;n &lt;code&gt;sanitize()&lt;/code&gt; por ahora si su base de datos y el flujo de la aplicaci&amp;oacute;n esperan cadenas seguras para el contexto HTML. Agregue un comentario que solo aplica el escape de HTML en adelante.</target>
        </trans-unit>
        <trans-unit id="109ef7c7ad471c0fd553af6c791c965eb0053415" translate="yes" xml:space="preserve">
          <source>You'll get more helpful warnings in most cases than PDO or mysql_ usually provide after failed queries.</source>
          <target state="translated">Recibirás advertencias más útiles en la mayoría de los casos que las que PDO o mysql_suelen proporcionar después de las consultas fallidas.</target>
        </trans-unit>
        <trans-unit id="00c17ebf04ff3d123b5bf045615793029cdab7eb" translate="yes" xml:space="preserve">
          <source>Your code is &lt;em&gt;using&lt;/em&gt; PDO.</source>
          <target state="translated">Su c&amp;oacute;digo est&amp;aacute; &lt;em&gt;usando&lt;/em&gt; PDO.</target>
        </trans-unit>
        <trans-unit id="114e82ddc86b988c9f233dd5f847ff571f7ead99" translate="yes" xml:space="preserve">
          <source>Your code will work alike and still mostly look the same:</source>
          <target state="translated">Tu código funcionará igual y seguirá siendo casi siempre el mismo:</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="09e7d790f3ab05e4f56ffe51297bfcdde73f15bf" translate="yes" xml:space="preserve">
          <source>and submit it.</source>
          <target state="translated">y presentarlo.</target>
        </trans-unit>
        <trans-unit id="12328e72903e2254dcef3aa99b38ab6b1480db8b" translate="yes" xml:space="preserve">
          <source>are out of date - they're not maintained any more</source>
          <target state="translated">están desfasados-ya no se mantienen</target>
        </trans-unit>
        <trans-unit id="ed3059ee362c75dcd7469e8cfbf286738600b576" translate="yes" xml:space="preserve">
          <source>being an average PHP user, most likely your idea of using these functions is error-prone and wrong. Just because of all these numerous tutorials and manuals which teach you the wrong way. Not the functions themselves - I have to emphasize it - but the way they are used.</source>
          <target state="translated">siendo un usuario promedio de PHP,lo más probable es que su idea de usar estas funciones sea propensa a errores y equivocada.Sólo por todos estos numerosos tutoriales y manuales que te enseñan el camino equivocado.No las funciones en sí mismas-tengo que enfatizarlo-sino la forma en que son usadas.</target>
        </trans-unit>
        <trans-unit id="7a880ef5359c5138ea32e24d56e7ada875ea4f77" translate="yes" xml:space="preserve">
          <source>don't allow you to move easily to another database backend</source>
          <target state="translated">no te permiten moverte fácilmente a otro backend de la base de datos</target>
        </trans-unit>
        <trans-unit id="830033092d1fd68deec56e78e5679b5bb240badd" translate="yes" xml:space="preserve">
          <source>don't support prepared statements, hence</source>
          <target state="translated">no apoyan las declaraciones preparadas,por lo tanto</target>
        </trans-unit>
        <trans-unit id="2935b5bb29398649ebd070be72ec96b9e5d1dcad" translate="yes" xml:space="preserve">
          <source>encourage programmers to use concatenation to build queries, leading to SQL injection vulnerabilities</source>
          <target state="translated">animar a los programadores a usar la concatenación para construir consultas,lo que lleva a vulnerabilidades de inyección SQL</target>
        </trans-unit>
        <trans-unit id="acc54e219ffe07f00fcf43d7c700c28aea05aca4" translate="yes" xml:space="preserve">
          <source>further use of these functions with modern PHP versions will raise deprecated-level notices. They simply can be turned off.</source>
          <target state="translated">Un mayor uso de estas funciones con las versiones modernas de PHP levantará avisos de nivel depreciado.Simplemente pueden ser desactivadas.</target>
        </trans-unit>
        <trans-unit id="d815f35640c25abe234d7b810ff746628e851f0e" translate="yes" xml:space="preserve">
          <source>in a distant future, they can be possibly removed from the default PHP build. Not a big deal too, as mydsql ext will be moved into PECL and every hoster will be happy to compile PHP with it, as they don't want to lose clients whose sites were working for decades.</source>
          <target state="translated">en un futuro lejano,pueden ser posiblemente eliminados de la construcción de PHP por defecto.No es gran cosa también,ya que mydsql ext será movido a PECL y cada host estará feliz de compilar PHP con él,ya que no quieren perder clientes cuyos sitios estuvieron funcionando por décadas.</target>
        </trans-unit>
        <trans-unit id="7f76e98f72dce710ff68c2850ea89b8fb65a8322" translate="yes" xml:space="preserve">
          <source>non-blocking, asynchronous queries</source>
          <target state="translated">consultas asincrónicas no bloqueantes</target>
        </trans-unit>
        <trans-unit id="de7c9165c22b2bbc30bc3ecad1c9e6bf4b9c7c6f" translate="yes" xml:space="preserve">
          <source>stored procedures returning multiple resultsets</source>
          <target state="translated">procedimientos almacenados que devuelven múltiples resultados</target>
        </trans-unit>
        <trans-unit id="95b2ac54f95972248a7b13860ea1d8810f52eeb0" translate="yes" xml:space="preserve">
          <source>strong resistance from Stackoverflow community. Еverytime you mention these honest functions, you being told that they are under strict taboo.</source>
          <target state="translated">una fuerte resistencia de la comunidad de Stackoverflow.Еverytime mencionas estas funciones honestas,te dicen que están bajo un estricto tabú.</target>
        </trans-unit>
        <trans-unit id="4ca2ac0512b37905e3e07228b035c03f882fec79" translate="yes" xml:space="preserve">
          <source>the list goes on ...</source>
          <target state="translated">la lista sigue...</target>
        </trans-unit>
        <trans-unit id="2eb74edb23d3b49834fb5098164392d5ce9f9a09" translate="yes" xml:space="preserve">
          <source>unlike mysqli, PDO can always return query result in a simple usual array, while mysqli can do it only on mysqlnd installations.</source>
          <target state="translated">A diferencia de mysqli,PDO siempre puede devolver el resultado de la consulta en un simple arreglo usual,mientras que mysqli sólo puede hacerlo en instalaciones de mysqlnd.</target>
        </trans-unit>
        <trans-unit id="aa4f5271f5951ab6344d7de045285abcfe2bf002" translate="yes" xml:space="preserve">
          <source>unlike mysqli, PDO can bind placeholders &lt;em&gt;by value&lt;/em&gt;, which makes dynamically built queries feasible without several screens of quite messy code.</source>
          <target state="translated">A diferencia de mysqli, PDO puede enlazar marcadores &lt;em&gt;de&lt;/em&gt; posici&amp;oacute;n &lt;em&gt;por valor&lt;/em&gt; , lo que hace factibles las consultas creadas din&amp;aacute;micamente sin varias pantallas de c&amp;oacute;digo bastante desordenado.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
