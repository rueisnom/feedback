<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/123559">
    <body>
      <group id="123559">
        <trans-unit id="46bd2bf2dbfcdbbcdc91543315903ec8d9fa7110" translate="yes" xml:space="preserve">
          <source>(416)555-3456</source>
          <target state="translated">(416)555-3456</target>
        </trans-unit>
        <trans-unit id="922db0fa7e91b0835c2ba07c721ee9be3dca5c9c" translate="yes" xml:space="preserve">
          <source>(926) 1234567</source>
          <target state="translated">(926)1234567</target>
        </trans-unit>
        <trans-unit id="a35c2a47e8479c61161487357ed2255f62b29768" translate="yes" xml:space="preserve">
          <source>+1-(800)-123-4567</source>
          <target state="translated">+1-(800)-123-4567</target>
        </trans-unit>
        <trans-unit id="01040e6fe4beb6bd4429c3545016bdd99a84e9c8" translate="yes" xml:space="preserve">
          <source>+42 555.123.4567</source>
          <target state="translated">+42 555.123.4567</target>
        </trans-unit>
        <trans-unit id="c65e2689191172b5a4409a3edf9e2821a1a502a3" translate="yes" xml:space="preserve">
          <source>+7 555 1234567</source>
          <target state="translated">+7 555 1234567</target>
        </trans-unit>
        <trans-unit id="958572d35dce6a727de99eecd46fe65f713990a5" translate="yes" xml:space="preserve">
          <source>+7(926)1234567</source>
          <target state="translated">+7(926)1234567</target>
        </trans-unit>
        <trans-unit id="1b3ba023e29fe0db6f746c89dc0d2c3994ff3ec0" translate="yes" xml:space="preserve">
          <source>+79261234567</source>
          <target state="translated">+79261234567</target>
        </trans-unit>
        <trans-unit id="4d92d488728ea2b58d1e8dafe06109f59bd1d6b3" translate="yes" xml:space="preserve">
          <source>-Adam</source>
          <target state="translated">-Adam</target>
        </trans-unit>
        <trans-unit id="12550a116a592ec6145716a1c1d7f7816709bbef" translate="yes" xml:space="preserve">
          <source>1 416 555 9292</source>
          <target state="translated">1 416 555 9292</target>
        </trans-unit>
        <trans-unit id="ee1884442ea911f3046d5aeade966104f58bf91c" translate="yes" xml:space="preserve">
          <source>123-4567</source>
          <target state="translated">123-4567</target>
        </trans-unit>
        <trans-unit id="44d6bfea854e4d538cb4e6c4daaf2e3534086b3a" translate="yes" xml:space="preserve">
          <source>123-89-01</source>
          <target state="translated">123-89-01</target>
        </trans-unit>
        <trans-unit id="20eabe5d64b0e216796e834f52d61fd0b70332fc" translate="yes" xml:space="preserve">
          <source>1234567</source>
          <target state="translated">1234567</target>
        </trans-unit>
        <trans-unit id="0b97f0509411d69a0661b070e86679e931a50f51" translate="yes" xml:space="preserve">
          <source>202 555 4567</source>
          <target state="translated">202 555 4567</target>
        </trans-unit>
        <trans-unit id="0f82b1cdc77d7852a909e872fa51b4f38ae87f78" translate="yes" xml:space="preserve">
          <source>4035555678</source>
          <target state="translated">4035555678</target>
        </trans-unit>
        <trans-unit id="d3af04306c750f12c8537841140ec19e68eb80d7" translate="yes" xml:space="preserve">
          <source>415-555-1234</source>
          <target state="translated">415-555-1234</target>
        </trans-unit>
        <trans-unit id="caa42b7c1aa9577623f00ff8ee9a70689bc689dd" translate="yes" xml:space="preserve">
          <source>469 123 45 67</source>
          <target state="translated">469 123 45 67</target>
        </trans-unit>
        <trans-unit id="666c16448d37b6c46e857ce94f27858056aa06bb" translate="yes" xml:space="preserve">
          <source>495 1234567</source>
          <target state="translated">495 1234567</target>
        </trans-unit>
        <trans-unit id="6545ceeda2d631b6102dd498f087e3043a70a1c9" translate="yes" xml:space="preserve">
          <source>650-555-2345</source>
          <target state="translated">650-555-2345</target>
        </trans-unit>
        <trans-unit id="bda8273b562ee4d450607f5f1eeee381a0db0d12" translate="yes" xml:space="preserve">
          <source>8 (926) 1234567</source>
          <target state="translated">8 (926)1234567</target>
        </trans-unit>
        <trans-unit id="b466f2b1ab3e14efbabb3362cb7f3b191004a81f" translate="yes" xml:space="preserve">
          <source>8 800 600-APPLE</source>
          <target state="translated">8 800 600-苹果</target>
        </trans-unit>
        <trans-unit id="c8f6d1b7f2dee5ecd696a27ce9a49f0ad87455d7" translate="yes" xml:space="preserve">
          <source>89261234567</source>
          <target state="translated">89261234567</target>
        </trans-unit>
        <trans-unit id="26b7a98f37ccc4ad6acbb28aac670ca8271322db" translate="yes" xml:space="preserve">
          <source>926 1234567</source>
          <target state="translated">926 1234567</target>
        </trans-unit>
        <trans-unit id="e44cfa11f63bc4c02c7877f31888a5041b157e04" translate="yes" xml:space="preserve">
          <source>926 3 4</source>
          <target state="translated">926 3 4</target>
        </trans-unit>
        <trans-unit id="8a1892e3f407adfe6fe96d1d939c9807978cebcb" translate="yes" xml:space="preserve">
          <source>926.123.4567</source>
          <target state="translated">926.123.4567</target>
        </trans-unit>
        <trans-unit id="12b3277a907665b90ff11b244a17ee74d8ea444c" translate="yes" xml:space="preserve">
          <source>9261234567</source>
          <target state="translated">9261234567</target>
        </trans-unit>
        <trans-unit id="7136bc4473fb12d41af3223d4c129fbba798d30d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.codeitive.com/0QNggPXPgW/international-and-irish-phone-number-form-validation-using-jquery.html&quot;&gt;Source&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.codeitive.com/0QNggPXPgW/international-and-irish-phone-number-form-validation-using-jquery.html&quot;&gt;Source&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0a38a09b5464fc1e52499ce243b4bec7e7585d1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$/&lt;/code&gt; : End the expression</source>
          <target state="translated">&lt;code&gt;$/&lt;/code&gt; ：结束表达式</target>
        </trans-unit>
        <trans-unit id="a1b68d4d6936a232eda26e679236a1605101efed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(02) 9999 9999&lt;/code&gt; is also a &lt;strong&gt;valid&lt;/strong&gt; Australian number</source>
          <target state="translated">&lt;code&gt;(02) 9999 9999&lt;/code&gt; 也是&lt;strong&gt;有效的&lt;/strong&gt;澳大利亚号码</target>
        </trans-unit>
        <trans-unit id="3633256ac8b591b550060c60eaf7b37a2230361d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(09) 9999 9999&lt;/code&gt; is &lt;strong&gt;not a valid&lt;/strong&gt; Australian number</source>
          <target state="translated">&lt;code&gt;(09) 9999 9999&lt;/code&gt; &lt;strong&gt;不是有效的&lt;/strong&gt;澳大利亚号码</target>
        </trans-unit>
        <trans-unit id="d7edae792248e451ea60a485b12fd0eb603d7062" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(408) 974&amp;ndash;2042&lt;/code&gt; is a &lt;strong&gt;valid&lt;/strong&gt; US number</source>
          <target state="translated">&lt;code&gt;(408) 974&amp;ndash;2042&lt;/code&gt; 是&lt;strong&gt;有效的&lt;/strong&gt;美国号码</target>
        </trans-unit>
        <trans-unit id="53ba90e16905883e3b69639432a64176bac521b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(999) 974&amp;ndash;2042&lt;/code&gt; is &lt;strong&gt;not a valid&lt;/strong&gt; US number</source>
          <target state="translated">&lt;code&gt;(999) 974&amp;ndash;2042&lt;/code&gt; &lt;strong&gt;不是有效的&lt;/strong&gt;美国号码</target>
        </trans-unit>
        <trans-unit id="b683d55971afcff131f4e90fca39caf9b54c7553" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(\+|1\s)?&lt;/code&gt; : Accept a &quot;plus&quot; or a 1 and a space (pipe character, &lt;code&gt;|&lt;/code&gt;, is &quot;or&quot;), and make it optional.  The &quot;plus&quot; sign must be escaped.</source>
          <target state="translated">&lt;code&gt;(\+|1\s)?&lt;/code&gt; ：接受一个&amp;ldquo;加号&amp;rdquo;或1和一个空格（竖线字符 &lt;code&gt;|&lt;/code&gt; ，是&amp;ldquo;或&amp;rdquo;），并将其设置为可选。 &amp;ldquo;加号&amp;rdquo;必须转义。</target>
        </trans-unit>
        <trans-unit id="5a90008edd365f07eb413c9fb2102990009c39d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0404 999 999&lt;/code&gt; is a &lt;strong&gt;valid&lt;/strong&gt; Australian number</source>
          <target state="translated">&lt;code&gt;0404 999 999&lt;/code&gt; 是&lt;strong&gt;有效的&lt;/strong&gt;澳大利亚号码</target>
        </trans-unit>
        <trans-unit id="f4c6a8656c9ac3ff7006494b88234b76534c313b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AsYouTypeFormatter&lt;/code&gt; - formats phone numbers on-the-fly when users enter each digit.</source>
          <target state="translated">&lt;code&gt;AsYouTypeFormatter&lt;/code&gt; -用户输入每个数字时，即时格式化电话号码。</target>
        </trans-unit>
        <trans-unit id="ff709eb0cb6873a644d25a1ff6e17489e4eccbb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PhoneNumberOfflineGeocoder&lt;/code&gt; - provides geographical information related to a phone number.</source>
          <target state="translated">&lt;code&gt;PhoneNumberOfflineGeocoder&lt;/code&gt; -提供与电话号码相关的地理信息。</target>
        </trans-unit>
        <trans-unit id="41901e4b3e46b93b8cdd2df707362b4e960bc6af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[2-9]&lt;/code&gt; :  Requires a digit 2-9 for that slot.</source>
          <target state="translated">&lt;code&gt;[2-9]&lt;/code&gt; ：该插槽要求数字2-9。</target>
        </trans-unit>
        <trans-unit id="30ae1ff0a2a51fc47926c273807c8f3801af0d4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\d{3}&lt;/code&gt; :  Requires a 3-digit number:  000-999.  Shorthand for
&lt;code&gt;[0-9][0-9][0-9]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;\d{3}&lt;/code&gt; ：需要3位数字：000-999。 &lt;code&gt;[0-9][0-9][0-9]&lt;/code&gt; 的简写。</target>
        </trans-unit>
        <trans-unit id="40a52a3d72da33a1e4f4bd90588fa2259da597df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;findNumbers&lt;/code&gt; - finds numbers in text input.</source>
          <target state="translated">&lt;code&gt;findNumbers&lt;/code&gt; -查找文本输入中的数字。</target>
        </trans-unit>
        <trans-unit id="2028f080264773ae0782713fe0fa5bf8434dcb78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getExampleNumber&lt;/code&gt;/&lt;code&gt;getExampleNumberByType&lt;/code&gt; - provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.</source>
          <target state="translated">&lt;code&gt;getExampleNumber&lt;/code&gt; / &lt;code&gt;getExampleNumberByType&lt;/code&gt; -为所有国家/地区提供有效的示例号码，并可以指定需要哪种示例电话号码。</target>
        </trans-unit>
        <trans-unit id="8ae5d2eb6cb5560a9b58ef49e842be7c328f5354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getNumberType&lt;/code&gt; - gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP and Personal Numbers (whenever feasible).</source>
          <target state="translated">&lt;code&gt;getNumberType&lt;/code&gt; -根据数字本身获取数字的类型； 能够区分固定电话，移动电话，免费电话，附加费率，共享费用，VoIP和个人号码（在可行的情况下）。</target>
        </trans-unit>
        <trans-unit id="de6f3026a2a806857a02c158c3f3516ca3203953" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isNumberMatch&lt;/code&gt; - gets a confidence level on whether two numbers could be the same.</source>
          <target state="translated">&lt;code&gt;isNumberMatch&lt;/code&gt; -获取两个数字是否相同的置信度。</target>
        </trans-unit>
        <trans-unit id="d95332e339f288fa1055f04e2fdd1f00f614a359" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isPossibleNumber&lt;/code&gt; - quickly guessing whether a number is a possible phonenumber by using only the length information, much faster than a full validation.</source>
          <target state="translated">&lt;code&gt;isPossibleNumber&lt;/code&gt; -仅使用长度信息即可快速猜测数字是否为可能的电话号码，比完全验证要快得多。</target>
        </trans-unit>
        <trans-unit id="8dff01c36dabb4875658933ef3c1a9112bae41d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isValidNumber&lt;/code&gt; - full validation of a phone number for a region using length and prefix information.</source>
          <target state="translated">&lt;code&gt;isValidNumber&lt;/code&gt; -使用长度和前缀信息对区域的电话号码进行完全验证。</target>
        </trans-unit>
        <trans-unit id="9f561e466531ebcda547d50fab19e7b5430d8922" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;America&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;America&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="93680b7e2fa033f259e12bd2f56b2b1593e4d7f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Australia&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Australia&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="033fc1fbbea67f031c319e448ee0ee8ce320d484" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C#&lt;/strong&gt;: &lt;a href=&quot;https://github.com/twcclegg/libphonenumber-csharp&quot;&gt;https://github.com/twcclegg/libphonenumber-csharp&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;C＃&lt;/strong&gt; ： &lt;a href=&quot;https://github.com/twcclegg/libphonenumber-csharp&quot;&gt;https&lt;/a&gt; : //github.com/twcclegg/libphonenumber-csharp</target>
        </trans-unit>
        <trans-unit id="5fbf4a00d6a882121a802d2725d98940aaaeb108" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Edit:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="24605bd984aabecf300ff94f55f51e1114adcd40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Elixir&lt;/strong&gt;: &lt;a href=&quot;https://github.com/socialpaymentsbv/ex_phone_number&quot;&gt;https://github.com/socialpaymentsbv/ex_phone_number&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;长生不老药&lt;/strong&gt; ： &lt;a href=&quot;https://github.com/socialpaymentsbv/ex_phone_number&quot;&gt;https&lt;/a&gt; : //github.com/socialpaymentsbv/ex_phone_number</target>
        </trans-unit>
        <trans-unit id="dbac505176c7d070a0ce804c63b6347e23f78d30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Highlights of functionality:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;功能亮点：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="30a3db4832247f60fba1a2168df67582ae88b7f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ruimarinho/google-libphonenumber&quot;&gt;https://github.com/ruimarinho/google-libphonenumber&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JavaScript&lt;/strong&gt; ： &lt;a href=&quot;https://github.com/ruimarinho/google-libphonenumber&quot;&gt;https&lt;/a&gt; : //github.com/ruimarinho/google-libphonenumber</target>
        </trans-unit>
        <trans-unit id="4b825c9117f16fec2c2885e9738341494f979c39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Objective-C&lt;/strong&gt;: &lt;a href=&quot;https://github.com/iziz/libPhoneNumber-iOS&quot;&gt;https://github.com/iziz/libPhoneNumber-iOS&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Objective-C&lt;/strong&gt; ： &lt;a href=&quot;https://github.com/iziz/libPhoneNumber-iOS&quot;&gt;https&lt;/a&gt; ： //github.com/iziz/libPhoneNumber-iOS</target>
        </trans-unit>
        <trans-unit id="59ccb2fa2dfb42e44cf55acf54cdcb9e47466e0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PHP&lt;/strong&gt;: &lt;a href=&quot;https://github.com/giggsey/libphonenumber-for-php&quot;&gt;https://github.com/giggsey/libphonenumber-for-php&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;PHP的&lt;/strong&gt; ： &lt;a href=&quot;https://github.com/giggsey/libphonenumber-for-php&quot;&gt;https&lt;/a&gt; ： //github.com/giggsey/libphonenumber-for-php</target>
        </trans-unit>
        <trans-unit id="638642d05d74b4159689f3ed5a7c0e4fdbb817a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Python&lt;/strong&gt;: &lt;a href=&quot;https://github.com/daviddrysdale/python-phonenumbers&quot;&gt;https://github.com/daviddrysdale/python-phonenumbers&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Python&lt;/strong&gt; ： &lt;a href=&quot;https://github.com/daviddrysdale/python-phonenumbers&quot;&gt;https&lt;/a&gt; ： //github.com/daviddrysdale/python-phonenumbers</target>
        </trans-unit>
        <trans-unit id="01dc2621b96b7722fd431829f5d867d46c77593f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sstephenson/global_phone&quot;&gt;https://github.com/sstephenson/global_phone&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ruby&lt;/strong&gt; ： &lt;a href=&quot;https://github.com/sstephenson/global_phone&quot;&gt;https&lt;/a&gt; ： //github.com/sstephenson/global_phone</target>
        </trans-unit>
        <trans-unit id="488aeff36a84e59f02d58068108b1919630e3440" translate="yes" xml:space="preserve">
          <source>A couple simple perl expressions might be:</source>
          <target state="translated">几个简单的perl表达式可能是。</target>
        </trans-unit>
        <trans-unit id="ca6b2583d0e9a3c4be4eb43eacf5aa17d784da0c" translate="yes" xml:space="preserve">
          <source>A regular expression is fine for checking the format of a phone number, but it's not really going to be able to check the &lt;em&gt;validity&lt;/em&gt; of a phone number.</source>
          <target state="translated">正则表达式可以很好地检查电话号码的格式，但实际上并不能检查电话号码的&lt;em&gt;有效性&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="59aae6ebbd36ac7b0e708dcdbfe7b57ca5fcb0e0" translate="yes" xml:space="preserve">
          <source>Accepts:</source>
          <target state="translated">Accepts:</target>
        </trans-unit>
        <trans-unit id="aadf0b7cafc7f742c185a01cdda7569411bce26e" translate="yes" xml:space="preserve">
          <source>After reading through these answers, it looks like there wasn't a straightforward regular expression that can parse through a bunch of text and pull out phone numbers in any format (including international with and without the plus sign).</source>
          <target state="translated">看完这些答案,似乎没有一个直接的正则表达式可以解析出一堆文字,并且可以调出任何格式的电话号码(包括带加号和不带加号的国际号码)。</target>
        </trans-unit>
        <trans-unit id="400bb35a87523373a5deaa7cf3dda1d5543b1fad" translate="yes" xml:space="preserve">
          <source>Although the answer to strip all whitespace is neat, it doesn't really solve the problem that's posed, which is to find a regex.  Take, for instance, my test script that downloads a web page and extracts all phone numbers using the regex.  Since you'd need a regex anyway, you might as well have the regex do all the work.  I came up with this:</source>
          <target state="translated">虽然把所有的空白处都去掉的答案很好,但并不能真正解决这个问题,那就是找到一个regex。比如说,我的测试脚本下载了一个网页,然后用regex提取所有的电话号码。既然你需要一个regex,那还不如让regex来做所有的工作。我想出了这样的方法。</target>
        </trans-unit>
        <trans-unit id="ac8fd7a0e55b893ddc9967e7ee080a882160e910" translate="yes" xml:space="preserve">
          <source>And while stripping all/most non-numeric characters may work well on the server side (especially if you are planning on passing these values to a dialer), you may not want to thrash the user's input during validation, particularly if you want them to make corrections in another field.</source>
          <target state="translated">虽然剥离所有的非数字字符在服务器端可能会有很好的效果(特别是如果你打算将这些值传递给拨号器的话),但你可能不希望在验证过程中对用户的输入进行破坏,特别是如果你想让他们在另一个字段中进行修正的话。</target>
        </trans-unit>
        <trans-unit id="97fbcada001f55ac5e505e92a5396afd1f06169b" translate="yes" xml:space="preserve">
          <source>As a bonus, &lt;code&gt;libphonenumber&lt;/code&gt; has a number of datasets to check the validity of phone numbers, as well, so checking a number such as &lt;code&gt;+61299999999&lt;/code&gt; (the international version of &lt;a href=&quot;https://libphonenumber.appspot.com/phonenumberparser?number=+61299999999&amp;amp;country=AU&amp;amp;geocodingLocale=en-US&quot;&gt;&lt;code&gt;(02) 9999 9999&lt;/code&gt;&lt;/a&gt;) returns as a valid number with formatting:</source>
          <target state="translated">另外， &lt;code&gt;libphonenumber&lt;/code&gt; 还具有许多数据集来检查电话号码的有效性，因此检查诸如 &lt;code&gt;+61299999999&lt;/code&gt; （ &lt;a href=&quot;https://libphonenumber.appspot.com/phonenumberparser?number=+61299999999&amp;amp;country=AU&amp;amp;geocodingLocale=en-US&quot;&gt; &lt;code&gt;(02) 9999 9999&lt;/code&gt; &lt;/a&gt;的国际版本）之类的数字将作为有效数字返回，格式为：</target>
        </trans-unit>
        <trans-unit id="3d196df3b26d8c379e3dd5b18cdf5c6e24cb329d" translate="yes" xml:space="preserve">
          <source>As mentioned below, it checks only for characters, not its structure/order</source>
          <target state="translated">正如下面提到的,它只检查字符,而不是它的结构顺序。</target>
        </trans-unit>
        <trans-unit id="cac51434fcdc8532c06654edfe20ccf273510fab" translate="yes" xml:space="preserve">
          <source>Better option... just strip all non-digit characters on input (except 'x' and leading '+' signs), taking care because of the British tendency to write numbers in the non-standard form &lt;code&gt;+44 (0) ...&lt;/code&gt; when asked to use the international prefix (in that specific case, you should discard the &lt;code&gt;(0)&lt;/code&gt; entirely).</source>
          <target state="translated">更好的选择...只是去除输入上的所有非数字字符（&amp;ldquo; x&amp;rdquo;和前导&amp;ldquo; +&amp;rdquo;符号除外），要小心，因为英国人倾向于以非标准格式 &lt;code&gt;+44 (0) ...&lt;/code&gt; 写数字。 。当要求使用国际前缀时（在这种情况下，您应该完全丢弃 &lt;code&gt;(0)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4a225d2f9965fe34ea538413a35d7b335c066858" translate="yes" xml:space="preserve">
          <source>Beyond that - the list you gave does not include another common US format - leaving off the initial 1.  Most cell phones in the US don't require it, and it'll start to baffle the younger generation unless they've dialed internationally.</source>
          <target state="translated">除此以外--你给出的列表中并不包括另一种常见的美国格式--省略了最初的1。美国的大部分手机都不需要,除非年轻的一代人打过国际长途电话,否则就会开始迷惑不解。</target>
        </trans-unit>
        <trans-unit id="43a5906151aeae7631de0c8088ed4d4982f3bea6" translate="yes" xml:space="preserve">
          <source>Breaking a complex regexp like this can be just as effective, but much more simple.</source>
          <target state="translated">打破这样一个复杂的regexp也可以同样有效,但要简单得多。</target>
        </trans-unit>
        <trans-unit id="37d42d17f06037bfcdb7e90603c5fb51b34fbb15" translate="yes" xml:space="preserve">
          <source>But the invalid Australian phone number (&lt;a href=&quot;https://libphonenumber.appspot.com/phonenumberparser?number=01161999999999&amp;amp;country=US&amp;amp;geocodingLocale=en-US&quot;&gt;&lt;code&gt;(09) 9999 9999&lt;/code&gt;&lt;/a&gt;) returns that it is not a valid phone number.</source>
          <target state="translated">但是无效的澳大利亚电话号码（ &lt;a href=&quot;https://libphonenumber.appspot.com/phonenumberparser?number=01161999999999&amp;amp;country=US&amp;amp;geocodingLocale=en-US&quot;&gt; &lt;code&gt;(09) 9999 9999&lt;/code&gt; &lt;/a&gt; ）返回它不是有效的电话号码。</target>
        </trans-unit>
        <trans-unit id="dd97f611de650fc07dfa1c4d6992198b072a7f30" translate="yes" xml:space="preserve">
          <source>Country indicator</source>
          <target state="translated">国家指标</target>
        </trans-unit>
        <trans-unit id="fdfe09df639dcc072e670324ee0209f2debec6ec" translate="yes" xml:space="preserve">
          <source>Do a replace on formatting characters, then check the remaining for phone validity.  In PHP,</source>
          <target state="translated">在格式化的字符上做一个替换,然后检查剩余的手机有效性。在PHP中。</target>
        </trans-unit>
        <trans-unit id="16a0b451f01e21349e7ff6a5419e8ec27f88d8d0" translate="yes" xml:space="preserve">
          <source>EDIT:</source>
          <target state="translated">EDIT:</target>
        </trans-unit>
        <trans-unit id="0f86093f5a5fbb42dbd59a0c2d1a4b6e838479a1" translate="yes" xml:space="preserve">
          <source>Entering US phone number brought back quite a list of possibilities.</source>
          <target state="translated">输入美国的电话号码带来了一系列的可能性。</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="659087d3ca23db6ae11e0a43579b5f4a260dda11" translate="yes" xml:space="preserve">
          <source>Extension</source>
          <target state="translated">Extension</target>
        </trans-unit>
        <trans-unit id="9c06f2a299923d862630566d22b27441c053e469" translate="yes" xml:space="preserve">
          <source>For anyone interested in doing something similar with Irish mobile phone numbers, here's a straightforward way of accomplishing it:</source>
          <target state="translated">对于有兴趣用爱尔兰手机号码做类似的事情的人来说,这里有一个简单明了的方法。</target>
        </trans-unit>
        <trans-unit id="f953f99de4fc84ba1451d0528f96f4405157617d" translate="yes" xml:space="preserve">
          <source>For example, it will recognize that:</source>
          <target state="translated">例如,它将识别。</target>
        </trans-unit>
        <trans-unit id="d6057320fd68061629731fe2fbb1d427361c6696" translate="yes" xml:space="preserve">
          <source>For further analysis you can subscribe to one of many providers that will give you access to a database of valid numbers as well as tell you if they're landlines or mobiles, disconnected, etc. It costs money.</source>
          <target state="translated">为了进一步的分析,你可以订阅许多供应商,他们会给你提供一个有效号码的数据库,并告诉你这些号码是座机还是移动电话,是否已断开等。这是要花钱的。</target>
        </trans-unit>
        <trans-unit id="af5aa2daf63a7d05f098b5b003ef31604f6b16f1" translate="yes" xml:space="preserve">
          <source>From my post on that site, I've created a quick guide to assist anyone with making their own regex for their own desired phone number format, which I will caveat (like I did on the other site) that if you are too restrictive, you may not get the desired results, and there is no &quot;one size fits all&quot; solution to accepting all possible phone numbers in the world - only what you decide to accept as your format of choice.  Use at your own risk.</source>
          <target state="translated">从我在那个网站上的帖子中,我创建了一个快速指南,帮助任何人为自己想要的电话号码格式制作自己的regex,我要提醒大家(就像我在另一个网站上做的那样),如果你的限制太多,你可能不会得到想要的结果,而且没有 &quot;一刀切 &quot;的解决方案来接受世界上所有可能的电话号码--只有你决定接受的格式才是你的选择。使用时请自行承担风险。</target>
        </trans-unit>
        <trans-unit id="1ea80608bd0135d482e7ecafa7647192f008cb75" translate="yes" xml:space="preserve">
          <source>Google's version has code for Java and Javascript, but people have also implemented libraries for other languages that use the Google i18n phone number dataset:</source>
          <target state="translated">Google的版本有Java和Javascript的代码,但人们也实现了使用Google i18n手机号码数据集的其他语言的库。</target>
        </trans-unit>
        <trans-unit id="44f085c8e03a6a858b882ee9431bad07c64c314e" translate="yes" xml:space="preserve">
          <source>Have you had a look over at &lt;a href=&quot;http://regexlib.com/&quot;&gt;RegExLib&lt;/a&gt;?</source>
          <target state="translated">您看过&lt;a href=&quot;http://regexlib.com/&quot;&gt;RegExLib&lt;/a&gt;吗？</target>
        </trans-unit>
        <trans-unit id="ca525f2d9d8acdf38205777d144c84521f1a175d" translate="yes" xml:space="preserve">
          <source>Here's a perl script to test it.  When you match, $1 contains the area code, $2 and $3 contain the phone number, and $5 contains the extension.  My test script downloads a file from the internet and prints all the phone numbers in it.</source>
          <target state="translated">这里有一个perl脚本来测试。匹配时,1元包含区号,2元和3元包含电话号码,5元包含分机号。我的测试脚本从网上下载了一个文件,然后打印出里面所有的电话号码。</target>
        </trans-unit>
        <trans-unit id="22b476064f663edfa8252e9e9661ecf3d4ed6339" translate="yes" xml:space="preserve">
          <source>Here's a regex for a 7 or 10 digit number, with extensions allowed, delimiters are spaces, dashes, or periods:</source>
          <target state="translated">这里是一个7位或10位数字的转换符,允许扩展,分隔符是空格、破折号或句号。</target>
        </trans-unit>
        <trans-unit id="eacc65b2c702c38624f0c21b9e494415538871b2" translate="yes" xml:space="preserve">
          <source>Here's a wonderful pattern that most closely matched the validation that I needed to achieve. I'm not the original author, but I think it's well worth sharing as I found this problem to be very complex and without a concise or widely useful answer.</source>
          <target state="translated">这里有一个很精彩的模式,最符合我所需要的验证效果。虽然我不是原作者,但我觉得很值得分享,因为我发现这个问题非常复杂,没有一个简明扼要或广泛有用的答案。</target>
        </trans-unit>
        <trans-unit id="87bb8df3e3750778782fc993b14771b25c1ae9e1" translate="yes" xml:space="preserve">
          <source>Here's my best try so far. It handles the formats above but I'm sure I'm missing some other possible formats.</source>
          <target state="translated">这是我到目前为止最好的尝试。它可以处理上面的格式,但我肯定我错过了一些其他可能的格式。</target>
        </trans-unit>
        <trans-unit id="3d4c8ec063c8453425fd199339fa0dc71fd1084a" translate="yes" xml:space="preserve">
          <source>Here's one that works well in JavaScript. It's in a string because that's what the Dojo widget was expecting.</source>
          <target state="translated">这里有一个在JavaScript中工作得很好。它是在一个字符串中,因为这就是Dojo widget所期望的。</target>
        </trans-unit>
        <trans-unit id="022980180be3a3d695520932cf3a4e6a1f9d42d8" translate="yes" xml:space="preserve">
          <source>Here's what I used for a client project recently, where we had to convert all phone numbers in any format to tel: links.</source>
          <target state="translated">以下是我最近在一个客户项目中使用的方法,我们必须将所有的电话号码以任何格式转换为tel:链接。</target>
        </trans-unit>
        <trans-unit id="f0ac0dbc5713c70f3f68911c8011ad8531f4bfc7" translate="yes" xml:space="preserve">
          <source>Honestly, I would recommend you don't try to validate phone numbers. Even if you could write a big, hairy validator that would allow all the different legitimate formats, it would end up allowing pretty much anything even remotely resembling a phone number in the first place.</source>
          <target state="translated">老实说,我建议你不要尝试验证电话号码。即使你能写出一个大的、毛茸茸的验证器,允许所有不同的合法格式,但它最终也会允许任何类似于电话号码的东西。</target>
        </trans-unit>
        <trans-unit id="63826e2f09a3eca5122612b589a84c33d0624c30" translate="yes" xml:space="preserve">
          <source>How to validate phone numbers using regex</source>
          <target state="translated">如何使用regex验证电话号码?</target>
        </trans-unit>
        <trans-unit id="5a7c6a46c8b444a39962acafbea226f89aa12a89" translate="yes" xml:space="preserve">
          <source>I answered this question on another SO question before deciding to also include my answer as an answer on this thread, because no one was addressing how to require/not require items, just handing out regexs:
&lt;a href=&quot;https://stackoverflow.com/questions/25184823/regex-working-wrong-matching-unexpected-things/25298604#25298604&quot;&gt;Regex working wrong, matching unexpected things&lt;/a&gt;</source>
          <target state="translated">在决定也将我的答案作为该线程的答案之前，我在另一个SO问题上回答了该问题，因为没有人在解决如何要求/不要求物品的问题，只是分发了正则&lt;a href=&quot;https://stackoverflow.com/questions/25184823/regex-working-wrong-matching-unexpected-things/25298604#25298604&quot;&gt;表达式&lt;/a&gt; ：正则表达式工作错误，匹配了意外的事情</target>
        </trans-unit>
        <trans-unit id="0bfbfe611624b3a8f88a726cb01f206cb9f27249" translate="yes" xml:space="preserve">
          <source>I believe the &lt;a href=&quot;http://search.cpan.org/~kennedyh/Number-Phone-US-1.5/&quot;&gt;Number::Phone::US&lt;/a&gt; and &lt;a href=&quot;http://search.cpan.org/~abigail/Regexp-Common-2.122/&quot;&gt;Regexp::Common&lt;/a&gt;  (particularly the source of &lt;a href=&quot;http://search.cpan.org/~abigail/Regexp-Common-2.122/lib/Regexp/Common/URI/RFC2806.pm&quot;&gt;Regexp::Common::URI::RFC2806&lt;/a&gt;) Perl modules could help.</source>
          <target state="translated">我相信&lt;a href=&quot;http://search.cpan.org/~kennedyh/Number-Phone-US-1.5/&quot;&gt;Number :: Phone :: US&lt;/a&gt;和&lt;a href=&quot;http://search.cpan.org/~abigail/Regexp-Common-2.122/&quot;&gt;Regexp :: Common&lt;/a&gt; （特别是&lt;a href=&quot;http://search.cpan.org/~abigail/Regexp-Common-2.122/lib/Regexp/Common/URI/RFC2806.pm&quot;&gt;Regexp :: Common :: URI :: RFC2806的来源&lt;/a&gt; ）Perl模块可以提供帮助。</target>
        </trans-unit>
        <trans-unit id="ccc9e077f990fddb26d3b34eeba471be5b1cec42" translate="yes" xml:space="preserve">
          <source>I found this to be something interesting. I have not tested it but it looks as if it would work</source>
          <target state="translated">我发现这是个有趣的东西。我还没有测试过,但看起来好像能行得通。</target>
        </trans-unit>
        <trans-unit id="10e25061e0c6d708c7ba4765226d048f5fdd6132" translate="yes" xml:space="preserve">
          <source>I found this to work quite well:</source>
          <target state="translated">我发现这样做的效果相当好。</target>
        </trans-unit>
        <trans-unit id="b71f940c0579bff4446fcab0a0dcfce1cf7dc5fa" translate="yes" xml:space="preserve">
          <source>I interpret the question as looking for a broadly valid pattern, which may not be internally consistent - for example having a valid set of numbers, but not validating that the trunk-line, exchange, etc. to the valid pattern for the country code prefix.</source>
          <target state="translated">我把这个问题理解为寻找一个大致有效的模式,可能内部不一致----比如有一组有效的数字,但不能验证主干线、交换等对国家代码前缀的有效模式。</target>
        </trans-unit>
        <trans-unit id="75d1417c12f58c1fc82eee361d8bf8f15542070f" translate="yes" xml:space="preserve">
          <source>I was struggling with the same issue, trying to make my application future proof, but these guys got me going in the right direction. I'm not actually checking the number itself to see if it works or not, I'm just trying to make sure that a series of numbers was entered that may or may not have an extension.</source>
          <target state="translated">我也在为同样的问题而挣扎,试图让我的申请有一个未来的证明,但这些人让我找到了正确的方向。其实我并不是要检查数字本身是否有效,我只是想确定输入了一串可能有或可能没有扩展的数字。</target>
        </trans-unit>
        <trans-unit id="fa0d64ff8c3a2270191366f37f0e3b07e104d40f" translate="yes" xml:space="preserve">
          <source>I work for a market research company and we have to filter these types of input alllll the time. You're complicating it too much. Just strip the non-alphanumeric chars, and see if there's an extension.</source>
          <target state="translated">我在一家市场研究公司工作,我们必须过滤这些类型的输入,所有的时间。你把事情弄得太复杂了 只要把非字母数字字符去掉,看看是否有扩展。</target>
        </trans-unit>
        <trans-unit id="36f85d8b9ecf98746ea135d39fc26f6f094fc9c2" translate="yes" xml:space="preserve">
          <source>I would also consider any of the following as valid entries on a web site:</source>
          <target state="translated">我也会认为以下任何一项是网站上的有效条目:</target>
        </trans-unit>
        <trans-unit id="b240d6f282239cc116368553457e618099c93be0" translate="yes" xml:space="preserve">
          <source>I would also suggest looking at the &quot;&lt;a href=&quot;https://github.com/googlei18n/libphonenumber&quot;&gt;libphonenumber&lt;/a&gt;&quot; Google Library. I know it is not regex but it does exactly what you want.</source>
          <target state="translated">我还建议您查看&amp;ldquo; &lt;a href=&quot;https://github.com/googlei18n/libphonenumber&quot;&gt;libphonenumber&lt;/a&gt; &amp;rdquo; Google图书馆。 我知道它不是正则表达式，但它确实可以满足您的要求。</target>
        </trans-unit>
        <trans-unit id="2980a1a622568116f14431287d2474d7ffb950a1" translate="yes" xml:space="preserve">
          <source>I would suggest skipping a simple regular expression to test your phone number against, and using a library such as Google's &lt;a href=&quot;https://github.com/googlei18n/libphonenumber&quot;&gt;&lt;code&gt;libphonenumber&lt;/code&gt; (link to GitHub project)&lt;/a&gt;.</source>
          <target state="translated">我建议跳过一个简单的正则表达式来测试您的电话号码，并使用诸如Google的&lt;a href=&quot;https://github.com/googlei18n/libphonenumber&quot;&gt; &lt;code&gt;libphonenumber&lt;/code&gt; 之&lt;/a&gt;类的库（链接到GitHub项目） 。</target>
        </trans-unit>
        <trans-unit id="66b66c47f3306e9d78e3a3bf13fb6788b912c88f" translate="yes" xml:space="preserve">
          <source>I wrote simpliest (although i didn't need dot in it).</source>
          <target state="translated">我写的是最简单的(虽然我不需要dot)。</target>
        </trans-unit>
        <trans-unit id="4c2424d48183efdb09767b99a30b1f0659f9ef5a" translate="yes" xml:space="preserve">
          <source>I'll answer with my current attempt, but I'm hoping somebody has something better and/or more elegant.</source>
          <target state="translated">我会用我目前的尝试来回答,但我希望有人有更好的,或者说更优雅的东西。</target>
        </trans-unit>
        <trans-unit id="c90880b06f56cf763af15f83349452b90003c599" translate="yes" xml:space="preserve">
          <source>I'm trying to put together a comprehensive regex to validate phone numbers. Ideally it would handle international formats, but it must handle US formats, including the following:</source>
          <target state="translated">我正在尝试着建立一个综合的重新格式来验证电话号码。理想情况下,它可以处理国际格式,但它必须处理美国格式,包括以下内容。</target>
        </trans-unit>
        <trans-unit id="8994625e0238ac85a4b3f559a90a21a2acde5fe4" translate="yes" xml:space="preserve">
          <source>If the users want to give you their phone numbers, then trust them to get it right.  If they do not want to give it to you then forcing them to enter a valid number will either send them to a competitor's site or make them enter a random string that fits your regex.  I might even be tempted to look up the number of a premium rate horoscope hotline and enter that instead.</source>
          <target state="translated">如果用户想把他们的电话号码给你,那就相信他们会得到正确的电话号码。如果他们不愿意给你,那么强迫他们输入一个有效的号码,要么将他们发送到竞争对手的网站,要么让他们输入一个随机的字符串,符合你的regex。我甚至可能会想去查一个高级星座热线的号码,然后输入这个号码。</target>
        </trans-unit>
        <trans-unit id="9f091b9560d69c1ee36d37625cbaf5953d8340aa" translate="yes" xml:space="preserve">
          <source>If you are trying to validate user input, why not normalize the result and be done with it?  If the user puts in a number you can't recognize as a valid number, either save it as inputted or strip out undailable characters.  The &lt;a href=&quot;http://search.cpan.org/~cfaerber/Number-Phone-Normalize-0.20/lib/Number/Phone/Normalize.pm&quot;&gt;Number::Phone::Normalize&lt;/a&gt; Perl module could be a source of inspiration.</source>
          <target state="translated">如果要验证用户输入，为什么不对结果进行归一化并完成呢？ 如果用户输入了一个您无法识别为有效数字的数字，请将该数字另存为输入内容，或者去除不重复的字符。 &lt;a href=&quot;http://search.cpan.org/~cfaerber/Number-Phone-Normalize-0.20/lib/Number/Phone/Normalize.pm&quot;&gt;Number :: Phone :: Normalize&lt;/a&gt; Perl模块可能是灵感的来源。</target>
        </trans-unit>
        <trans-unit id="b02777a3e87266f7dd95c27f23a29f5651cc719f" translate="yes" xml:space="preserve">
          <source>If you just want to verify you don't have random garbage in the field (i.e., from form spammers) this regex should do nicely:</source>
          <target state="translated">如果你只是想验证你的字段中没有随机的垃圾信息(即来自于垃圾邮件发送者),那么这个regex应该很好。</target>
        </trans-unit>
        <trans-unit id="15a209b828c8667e424aefd50e088a7ea554abc4" translate="yes" xml:space="preserve">
          <source>If you want a hyphen, just type &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;[-]&lt;/code&gt; . If you do not put it first or last in a series of other characters, though, you may need to escape it:  &lt;code&gt;\-&lt;/code&gt;</source>
          <target state="translated">如果需要连字符，只需键入 &lt;code&gt;-&lt;/code&gt; 或 &lt;code&gt;[-]&lt;/code&gt; 即可 。 但是，如果您未将其放在其他一系列字符的开头或结尾，则可能需要转义它： &lt;code&gt;\-&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd3c2186bbca3a97b7824576c949f6ea54f4fa75" translate="yes" xml:space="preserve">
          <source>If you want anything to be optional, put a &lt;code&gt;?&lt;/code&gt; after it</source>
          <target state="translated">如果您希望任何东西都可选，请放一个 &lt;code&gt;?&lt;/code&gt; 之后</target>
        </trans-unit>
        <trans-unit id="718e26645a3839ca2b0ddaaed52e50182e77cee4" translate="yes" xml:space="preserve">
          <source>If you want specific numbers to match a slot, enter them: &lt;code&gt;[246]&lt;/code&gt; will require a 2, 4, or 6.  &lt;code&gt;[77|78]&lt;/code&gt; will require 77 or 78.</source>
          <target state="translated">如果要让特定数字与插槽匹配，请输入它们： &lt;code&gt;[246]&lt;/code&gt; 将需要2、4或6。 &lt;code&gt;[77|78]&lt;/code&gt; 将需要77或78。</target>
        </trans-unit>
        <trans-unit id="2ac71d06ab1140a038c4a6d174e05d44ca01d64e" translate="yes" xml:space="preserve">
          <source>If you want to accept different choices in a slot, put brackets around the options: &lt;code&gt;[-.\s]&lt;/code&gt; will require a hyphen, period, or space.  A question mark after the last bracket will make all of those optional for that slot.</source>
          <target state="translated">如果要在插槽中接受其他选择，请在选项周围加上方括号： &lt;code&gt;[-.\s]&lt;/code&gt; 将需要连字符，句号或空格。 最后一个括号后面的问号将使所有这些对于该插槽都是可选的。</target>
        </trans-unit>
        <trans-unit id="4a7d10f24f70f4d0fedc28310dd1999c71ad4928" translate="yes" xml:space="preserve">
          <source>If you want to maintain per digit rules (such as in US Area Codes and Prefixes (exchange codes) must fall in the range of 200-999) well, good luck to you. Maintaining a complex rule-set which could be outdated at any point in the future by any country in the world does not sound fun.</source>
          <target state="translated">如果你想维持每一个数字的规则(例如美国的区号和前缀(交换码)必须在200-999之间),那么祝你好运。维持一个复杂的规则集,可能在未来的任何一个国家的任何时候都会过时,这听起来并不有趣。</target>
        </trans-unit>
        <trans-unit id="5e90127b7b04fe9a92804e9a02c9e0cdda1e82db" translate="yes" xml:space="preserve">
          <source>If you want to require a space, use:  &lt;code&gt;[\s]&lt;/code&gt; or &lt;code&gt;\s&lt;/code&gt;</source>
          <target state="translated">如果需要空格，请使用： &lt;code&gt;[\s]&lt;/code&gt; 或 &lt;code&gt;\s&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5ed6e18f9c088af83ca192a802e402a6e7aacdc" translate="yes" xml:space="preserve">
          <source>If you want to require parenthesis, use:  &lt;code&gt;[(]&lt;/code&gt; and &lt;code&gt;[)]&lt;/code&gt; .  Using &lt;code&gt;\(&lt;/code&gt; and &lt;code&gt;\)&lt;/code&gt; is ugly and can make things confusing.</source>
          <target state="translated">如果需要括号，请使用： &lt;code&gt;[(]&lt;/code&gt; 和 &lt;code&gt;[)]&lt;/code&gt; 。 使用 &lt;code&gt;\(&lt;/code&gt; 和 &lt;code&gt;\)&lt;/code&gt; 很丑陋，可能会使情况变得混乱。</target>
        </trans-unit>
        <trans-unit id="fb2fb6da06f21696f5d1b2691d120c610e9009e5" translate="yes" xml:space="preserve">
          <source>If you're talking about form validation, the regexp to validate correct meaning as well as correct data is going to be extremely complex because of varying country and provider standards. It will also be hard to keep up to date.</source>
          <target state="translated">如果你说的是表单验证,由于国家和供应商的标准不同,要验证正确的含义和正确的数据,那么验证正确的regexp将是非常复杂的。这也将很难跟上时代的步伐。</target>
        </trans-unit>
        <trans-unit id="87fcc4d677e51bf63d0ac99b2817edc349e9cb7a" translate="yes" xml:space="preserve">
          <source>In my opinion, the most elegant solution is to validate a minimum length, nothing more.</source>
          <target state="translated">在我看来,最优雅的解决方案是验证最短的长度,没有别的。</target>
        </trans-unit>
        <trans-unit id="43e79cfa9396bc345e5838e3f37973a6c38c5e5f" translate="yes" xml:space="preserve">
          <source>Introducing libphonenumber!</source>
          <target state="translated">介绍libphonenumber!</target>
        </trans-unit>
        <trans-unit id="a4b27df698d7725b55128784e85bbae9b949ab77" translate="yes" xml:space="preserve">
          <source>Is it a worry that there may need to be a pause and then more keys entered? Or something like 555-1212 (wait for the beep) 123?</source>
          <target state="translated">是否担心需要停顿一下,然后再输入更多的按键?或者像555-121212(等着哔声)123之类的东西?</target>
        </trans-unit>
        <trans-unit id="3eb85813d690117d00ba8ce9afa7e769117ad047" translate="yes" xml:space="preserve">
          <source>It is up to you to sanitize it for display. After validating it &lt;em&gt;could&lt;/em&gt; be a number though.</source>
          <target state="translated">您需要对其进行消毒以进行显示。 验证后，它&lt;em&gt;可能&lt;/em&gt;是一个数字。</target>
        </trans-unit>
        <trans-unit id="d819d73918d144bf36182bd54a80f94464fc719b" translate="yes" xml:space="preserve">
          <source>It matches a 10 digit North America NANP number with optional extension. Spaces, dashes and periods are accepted delimiters.</source>
          <target state="translated">它与10位数字的北美NANP号码相匹配,并可选择扩展。空格、破折号和句号是可接受的分隔符。</target>
        </trans-unit>
        <trans-unit id="4f5bbec380484c3069324749e5a035edf5e474e6" translate="yes" xml:space="preserve">
          <source>It should be compatible with international numbers and localization formats. Do you foresee any need to allow square, curly, or angled brackets for some regions? (currently they aren't included).</source>
          <target state="translated">它应该与国际数字和本地化格式兼容。您预计是否有必要允许某些地区的方括号、卷曲或倾斜的括号?(目前不包括它们)。</target>
        </trans-unit>
        <trans-unit id="e5b6a04692150ee396c21b4a57672a87a7ab4f20" translate="yes" xml:space="preserve">
          <source>It turns out that there's something of a spec for this, at least for North America, called the &lt;a href=&quot;http://en.wikipedia.org/wiki/North_American_Numbering_Plan&quot;&gt;NANP&lt;/a&gt;.</source>
          <target state="translated">事实证明，至少对于北美，有一个规范，称为&lt;a href=&quot;http://en.wikipedia.org/wiki/North_American_Numbering_Plan&quot;&gt;NANP&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="6588a0770d9f9cf9c4f30b6c0b8040981a6dcb51" translate="yes" xml:space="preserve">
          <source>It works for these number formats:</source>
          <target state="translated">它适用于这些数字格式。</target>
        </trans-unit>
        <trans-unit id="9f40c848887d7e0847c7b4c6abe28ac113814717" translate="yes" xml:space="preserve">
          <source>Like validating email addresses, even if you have a valid result you can't know if it's assigned to someone until you try it.</source>
          <target state="translated">就像验证电子邮件地址一样,即使你有一个有效的结果,你也不能知道它是否分配给了别人,直到你尝试了才知道。</target>
        </trans-unit>
        <trans-unit id="7057878a5e038957345085ab1b05d5b33c955fd7" translate="yes" xml:space="preserve">
          <source>Link:  &lt;a href=&quot;http://www.regexr.com/3bp4b&quot;&gt;http://www.regexr.com/3bp4b&lt;/a&gt;</source>
          <target state="translated">链接： &lt;a href=&quot;http://www.regexr.com/3bp4b&quot;&gt;http&lt;/a&gt; ： //www.regexr.com/3bp4b</target>
        </trans-unit>
        <trans-unit id="71cb6484edba6b6c887668edf2ee21f03c120a6e" translate="yes" xml:space="preserve">
          <source>Make sure to use global AND multiline flags to make sure.</source>
          <target state="translated">确保使用全局和多行标志,以确保。</target>
        </trans-unit>
        <trans-unit id="776c1c2a1fe04524e681fe8e5cc65db0cf1e92eb" translate="yes" xml:space="preserve">
          <source>Must end with a digit, can begin with ( or + or a digit, and may contain + - ( or )</source>
          <target state="translated">必须以数字结尾,可以以(或+或+或一个数字开头,并可包含+--(或)</target>
        </trans-unit>
        <trans-unit id="0b11df816cc9038c4fd5a10dca5adfa322783d1f" translate="yes" xml:space="preserve">
          <source>My attempt at an unrestrictive regex:</source>
          <target state="translated">我尝试了一个不受限制的重新格式。</target>
        </trans-unit>
        <trans-unit id="67ec4a620ab433ec5e022254965558a542cb2a2b" translate="yes" xml:space="preserve">
          <source>My gut feeling is reinforced by the amount of replies to this topic - that there is a virtually infinite number of solutions to this problem, none of which are going to be elegant.</source>
          <target state="translated">对这一主题的大量答复强化了我的直觉----这个问题的解决办法几乎有无数种,但没有一种是优雅的。</target>
        </trans-unit>
        <trans-unit id="1a37dbb17a66518011d677e5e44077ec82b6b3da" translate="yes" xml:space="preserve">
          <source>My inclination is to agree that stripping non-digits and just accepting what's there is best. Maybe to ensure at least a couple digits are present, although that does prohibit something like an alphabetic phone number &quot;ASK-JAKE&quot; for example.</source>
          <target state="translated">我的倾向是同意删除非数字,只接受里面的内容是最好的。也许要确保至少有几位数,虽然这确实禁止使用字母顺序的电话号码 &quot;ask-JAKE &quot;之类的东西。</target>
        </trans-unit>
        <trans-unit id="dab2d18b0aca7dc5ec44365bf7d787cfa5b0bdce" translate="yes" xml:space="preserve">
          <source>Negative:</source>
          <target state="translated">Negative:</target>
        </trans-unit>
        <trans-unit id="95942b328963edd3d4351c3c56ba69c40d14e793" translate="yes" xml:space="preserve">
          <source>North America is straightforward, and for international I prefer to use an 'idiomatic' pattern which covers the ways in which people specify and remember their numbers:</source>
          <target state="translated">北美洲很直接,对于国际,我更喜欢用一个 &quot;成语 &quot;模式,涵盖了人们指定和记忆数字的方式。</target>
        </trans-unit>
        <trans-unit id="d51e891f1e5d2aee821d8fd4aa7ce56bb38b96a4" translate="yes" xml:space="preserve">
          <source>Note that it doesn't have any special rules for how many digits, or what numbers are valid in those digits, it just verifies that only digits, parenthesis, dashes, plus, space, pound,  asterisk, period, comma, or the letters &lt;code&gt;e&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;t&lt;/code&gt; are present.</source>
          <target state="translated">请注意，对于多少个数字或这些数字中有效的数字没有任何特殊的规则，它仅验证仅数字，括号，破折号，加号，空格，磅，星号，句点，逗号或字母 &lt;code&gt;e&lt;/code&gt; ， &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;t&lt;/code&gt; 存在。</target>
        </trans-unit>
        <trans-unit id="adeacbad8873a5fd52f8f94e72b56b3d1471dbd6" translate="yes" xml:space="preserve">
          <source>Note that stripping &lt;code&gt;()&lt;/code&gt; characters does not work for a style of writing UK numbers that is common: &lt;code&gt;+44 (0) 1234 567890&lt;/code&gt; which means dial either the international number:</source>
          <target state="translated">请注意，剥离 &lt;code&gt;()&lt;/code&gt; 字符不适用于常见的英国数字书写风格： &lt;code&gt;+44 (0) 1234 567890&lt;/code&gt; ，这意味着拨打国际号码：</target>
        </trans-unit>
        <trans-unit id="ca024c03255c776ed9cde0669572cfeef6b6693f" translate="yes" xml:space="preserve">
          <source>On $n, it saves:</source>
          <target state="translated">在n美元上,它节省了。</target>
        </trans-unit>
        <trans-unit id="57b3f19efda3db9541743ca20805fdc3cc6037b9" translate="yes" xml:space="preserve">
          <source>Original source: &lt;a href=&quot;http://www.regexr.com/38pvb&quot;&gt;http://www.regexr.com/38pvb&lt;/a&gt;</source>
          <target state="translated">原始资料来源： &lt;a href=&quot;http://www.regexr.com/38pvb&quot;&gt;http&lt;/a&gt; ： //www.regexr.com/38pvb</target>
        </trans-unit>
        <trans-unit id="7daf403c7589f4927632ed3b6af762a992f09b78" translate="yes" xml:space="preserve">
          <source>PHP</source>
          <target state="translated">PHP</target>
        </trans-unit>
        <trans-unit id="bb64f436897b16df14b3e811de773d2ebaf52e22" translate="yes" xml:space="preserve">
          <source>PHP function to replace all phone numbers with tel: links (in case anyone is curious):</source>
          <target state="translated">用tel:链接替换所有电话号码的PHP函数(以防有人好奇)。</target>
        </trans-unit>
        <trans-unit id="0ea51c7a617654993771490ea9e81d30a03af872" translate="yes" xml:space="preserve">
          <source>Parsing/formatting/validating phone numbers for all countries/regions of the world.</source>
          <target state="translated">Parsingformattingvalidatingvalidating phone numbers for all countriesregions of the world.</target>
        </trans-unit>
        <trans-unit id="8961d3bf56ef1c18ef5c831ba0838e8b1f85e5de" translate="yes" xml:space="preserve">
          <source>Phone number</source>
          <target state="translated">电话号</target>
        </trans-unit>
        <trans-unit id="78efb8bbd67c1896fb22b7034ecc0ee8da90f38c" translate="yes" xml:space="preserve">
          <source>Positive:</source>
          <target state="translated">Positive:</target>
        </trans-unit>
        <trans-unit id="8e54c9b1c2dfef11b55a9b78e13d7252f5ad62a5" translate="yes" xml:space="preserve">
          <source>Quick cheat sheet</source>
          <target state="translated">快捷的作弊器</target>
        </trans-unit>
        <trans-unit id="a16b01bb4a0955a42f3184d251b7508ef3590ed5" translate="yes" xml:space="preserve">
          <source>Regex:</source>
          <target state="translated">Regex:</target>
        </trans-unit>
        <trans-unit id="0c7929be80317c9b5ed14c7e723d5b1c7863b671" translate="yes" xml:space="preserve">
          <source>Rejects:</source>
          <target state="translated">Rejects:</target>
        </trans-unit>
        <trans-unit id="5db41536d0a17a221c98fbfddb6fbfb0466e104f" translate="yes" xml:space="preserve">
          <source>So far, it's been working with everything they've thrown at it, but if errors come up, I'll update this answer.</source>
          <target state="translated">到目前为止,他们扔给它的东西都能用,但如果出现错误,我会更新这个答案。</target>
        </trans-unit>
        <trans-unit id="0dd4fff1de550144cf86eec0812f147ee12d15f7" translate="yes" xml:space="preserve">
          <source>So not only do you learn if the phone number is valid (which it is), but you also get consistent phone number formatting in your locale.</source>
          <target state="translated">因此,您不仅可以了解到电话号码是否有效(确实有效),而且还可以在您的区域内获得一致的电话号码格式。</target>
        </trans-unit>
        <trans-unit id="4f665cfaf200a12ba9fa162f8ca4bf502423e54b" translate="yes" xml:space="preserve">
          <source>Start the expression:  &lt;code&gt;/^&lt;/code&gt;</source>
          <target state="translated">开始表达式： &lt;code&gt;/^&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd1fbc9a4c8077728d7d41f50640c260a78a08c1" translate="yes" xml:space="preserve">
          <source>Test it here: &lt;a href=&quot;http://refiddle.com/1ox&quot;&gt;http://refiddle.com/1ox&lt;/a&gt;</source>
          <target state="translated">在这里测试： &lt;a href=&quot;http://refiddle.com/1ox&quot;&gt;http&lt;/a&gt; : //refiddle.com/1ox</target>
        </trans-unit>
        <trans-unit id="3dd5ed2b006a2c4e4eda78dea03343c7eac1b057" translate="yes" xml:space="preserve">
          <source>The North American pattern makes sure that if one parenthesis is included both are.  The international accounts for an optional initial '+' and country code.  After that, you're in the idiom.  Valid matches would be:</source>
          <target state="translated">北美模式确保如果包含了一个括号,那么两个括号都是。国际上占了一个可选的首字母 &quot;+&quot;和国家代码。之后,你在成语中。有效的匹配将是。</target>
        </trans-unit>
        <trans-unit id="7fd81a8aaf6a57b5ddc89278b1a6384f8deb0e42" translate="yes" xml:space="preserve">
          <source>The biggest problem with phone number validation is it is very culturally dependant.</source>
          <target state="translated">手机号码验证最大的问题是它对文化的依赖性很强。</target>
        </trans-unit>
        <trans-unit id="cdbd51aa8cc8844a78771ccfa80d1d540ebac280" translate="yes" xml:space="preserve">
          <source>The first one will match ANY two digit country code, while the second one will match the Philippine country code exclusively.</source>
          <target state="translated">前者将匹配任何两位数的国家代码,而后者将完全匹配菲律宾国家代码。</target>
        </trans-unit>
        <trans-unit id="62692686df1c5b3b8d5898482ac3d6f07ff6614f" translate="yes" xml:space="preserve">
          <source>The following regex will catch widely used number and character combinations in a variety of global phone number formats:</source>
          <target state="translated">下面的改写符将捕捉各种全球电话号码格式中广泛使用的数字和字符组合。</target>
        </trans-unit>
        <trans-unit id="8f012cc502a1dd6af0cfc11025b7261b5cee93c2" translate="yes" xml:space="preserve">
          <source>The question should probably be specified in a bit more detail to explain the purpose of validating the numbers.  For instance, 911 is a valid number in the US, but 911x isn't for any value of x.  That's so that the phone company can calculate when you are done dialing.  There are several variations on this issue.  But your regex doesn't check the area code portion, so that doesn't seem to be a concern.</source>
          <target state="translated">这个问题可能要具体说一下,说明一下验证号码的目的。比如说911在美国是有效的号码,但911x不是针对任何值为x的号码,那是为了让电话公司可以计算出你什么时候拨完了。关于这个问题,有好几种变体。但你的regex没有检查区号部分,所以这似乎不是一个问题。</target>
        </trans-unit>
        <trans-unit id="1f477bd6da6989ac5eedab1067bc8f2e905fa3fb" translate="yes" xml:space="preserve">
          <source>Then when you display, reformat to your hearts content. e.g.</source>
          <target state="translated">然后,当你显示时,根据你的想法重新调整格式,例如:。</target>
        </trans-unit>
        <trans-unit id="ac2c585e0fd46195e564ef49c2fcf2718c0161e3" translate="yes" xml:space="preserve">
          <source>Then, you end up with values like:</source>
          <target state="translated">然后,你最终会得到像这样的值。</target>
        </trans-unit>
        <trans-unit id="4672a7b3fc8f3d7ccfae109d1c8e1a317b117d04" translate="yes" xml:space="preserve">
          <source>There is also a JQuery solution on that link.</source>
          <target state="translated">那个链接上也有一个JQuery的解决方案。</target>
        </trans-unit>
        <trans-unit id="15129efc19b445979961f54aa768b66bb0b78f10" translate="yes" xml:space="preserve">
          <source>They even go over how to mask phone number inputs in their tutorial.</source>
          <target state="translated">他们甚至在教程中还介绍了如何屏蔽电话号码的输入。</target>
        </trans-unit>
        <trans-unit id="f75317c94b401f28a1651a9ef34023d46532b9a7" translate="yes" xml:space="preserve">
          <source>This is a simple Regular Expression pattern for Philippine Mobile Phone Numbers:</source>
          <target state="translated">这是一个简单的正则表达式模式,菲律宾手机号码大全。</target>
        </trans-unit>
        <trans-unit id="a70496b978a05b65591b54c2cb906b99688e1181" translate="yes" xml:space="preserve">
          <source>This matches:</source>
          <target state="translated">这个符合。</target>
        </trans-unit>
        <trans-unit id="96de1b265278b3f71ca16feea1983e3c0ab2c655" translate="yes" xml:space="preserve">
          <source>This may be biased as my experience is limited to North America, Europe and a small bit of Asia.</source>
          <target state="translated">这可能有失偏颇,因为我的经验仅限于北美、欧洲和少量的亚洲地区。</target>
        </trans-unit>
        <trans-unit id="d5870bfaa0b34c1097aef11523676e1529cef19b" translate="yes" xml:space="preserve">
          <source>Unless you are certain that you are always going to be accepting numbers from one locale, and they are always going to be in one format, I would heavily suggest not writing your own code for this, and using libphonenumber for validating and displaying phone numbers.</source>
          <target state="translated">除非你确定你总是要接受来自一个地方的号码,而且它们总是以一种格式,否则我强烈建议不要为此编写自己的代码,而使用libphonenumber来验证和显示电话号码。</target>
        </trans-unit>
        <trans-unit id="dbce309ff66488b404ed28d71ac60ebe021bd617" translate="yes" xml:space="preserve">
          <source>Use the first one to keep the digit groups together, which may give formatting clues. Use the second one to trivially toss all non-digits.</source>
          <target state="translated">用第一种来保持数字组在一起,这可能会给出格式化的线索。用第二种来琐碎地折腾所有的非数字组。</target>
        </trans-unit>
        <trans-unit id="cdfacd1928d4950d5111c4de6bc9d502c037b588" translate="yes" xml:space="preserve">
          <source>Using one of your more complex examples, &lt;code&gt;1-234-567-8901 x1234&lt;/code&gt;, you get &lt;a href=&quot;https://libphonenumber.appspot.com/phonenumberparser?number=234-567-8901+x123&amp;amp;country=US&amp;amp;geocodingLocale=en-US&quot;&gt;the following data out of &lt;code&gt;libphonenumber&lt;/code&gt; (link to online demo)&lt;/a&gt;:</source>
          <target state="translated">使用更复杂的示例之一（ &lt;code&gt;1-234-567-8901 x1234&lt;/code&gt; ) ，您将从 &lt;a href=&quot;https://libphonenumber.appspot.com/phonenumberparser?number=234-567-8901+x123&amp;amp;country=US&amp;amp;geocodingLocale=en-US&quot;&gt; &lt;code&gt;libphonenumber&lt;/code&gt; 中&lt;/a&gt;获取以下数据（链接至在线演示） ：</target>
        </trans-unit>
        <trans-unit id="bfbdab4a2b4c45896d02b09374e7fedf55af54e2" translate="yes" xml:space="preserve">
          <source>Worst case scenario if the user had to pull an unformatted number from the XML file, they would still just type the numbers into the phone's numberpad &lt;code&gt;012345678x5&lt;/code&gt;, no real reason to keep it pretty. That kind of RegEx would come out something like this for me:</source>
          <target state="translated">最糟糕的情况是，如果用户不得不从XML文件中提取未格式化的号码，那么他们仍然只会将这些号码键入手机的数字键盘 &lt;code&gt;012345678x5&lt;/code&gt; 中 ，没有真正的理由保持美观。 这种RegEx对我来说会是这样的：</target>
        </trans-unit>
        <trans-unit id="b47b766208f8ce2f500bfcf69a6ee1c98720e422" translate="yes" xml:space="preserve">
          <source>You can change \W* to \s*\W?\s* in the regex to tighten it up a bit.  I wasn't thinking of the regex in terms of, say, validating user input on a form when I wrote it, but this change makes it possible to use the regex for that purpose.</source>
          <target state="translated">你可以把regex中的 &quot;W*&quot;改成 &quot;S*&quot;,这样可以让它更严格一些。我在写regex的时候,并没有想到这个regex是为了验证用户在表单上的输入,但是这个改动使得这个regex可以用于这个目的。</target>
        </trans-unit>
        <trans-unit id="d4fc38b4c1497d7649b3704f8dddf5c49b098519" translate="yes" xml:space="preserve">
          <source>You can test it on &lt;a href=&quot;https://www.regexpal.com/?fam=99127&quot;&gt;https://www.regexpal.com/?fam=99127&lt;/a&gt;</source>
          <target state="translated">您可以在&lt;a href=&quot;https://www.regexpal.com/?fam=99127&quot;&gt;https://www.regexpal.com/?fam=99127上&lt;/a&gt;对其进行测试</target>
        </trans-unit>
        <trans-unit id="77470b2cf4d80e511f5d0478505bf5f48f4b2324" translate="yes" xml:space="preserve">
          <source>You need to specify exactly what you want. What are legal delimiters? Spaces, dashes, and periods? No delimiter allowed? Can one mix delimiters (e.g., +0.111-222.3333)? How are extensions (e.g., 111-222-3333 x 44444) going to be handled? What about special numbers, like 911? Is the area code going to be optional or required?</source>
          <target state="translated">你需要明确说明你要的是什么。什么是法律上的分隔符?空格、破折号和句号?不允许使用分界符?可以混合分隔符(如+0.111-222.3333)吗?如何处理扩展符(例如111-222-333333×444444)?特殊号码如何处理,如911?区号是可选的还是必须的?</target>
        </trans-unit>
        <trans-unit id="c4bf0ac578f43f9354484a128538d7dfc54a322f" translate="yes" xml:space="preserve">
          <source>You would probably be better off using a Masked Input for this.  That way users can ONLY enter numbers and you can format however you see fit.  I'm not sure if this is for a web application, but if it is there is a very click jQuery plugin that offers some options for doing this.</source>
          <target state="translated">你可能最好使用蒙版输入法,这样用户只需输入数字就可以了。这样用户就可以只输入数字,而你可以根据自己的需要进行格式化。我不确定这是否适用于网络应用,但如果是的话,有一个非常点击的jQuery插件,提供了一些选项。</target>
        </trans-unit>
        <trans-unit id="e1fada8e271fdb48c0538ce4a226f71b9335690d" translate="yes" xml:space="preserve">
          <source>You'll have a hard time dealing with international numbers with a single/simple regex, see &lt;a href=&quot;https://stackoverflow.com/questions/41925/is-there-a-standard-for-storing-normalized-phone-numbers-in-a-database#41982&quot;&gt;this post&lt;/a&gt; on the difficulties of international (and even north american) phone numbers.</source>
          <target state="translated">您将很难用一个/简单的正则表达式来处理国际号码，有关国际（甚至北美）电话号码的困难，请参阅&lt;a href=&quot;https://stackoverflow.com/questions/41925/is-there-a-standard-for-storing-normalized-phone-numbers-in-a-database#41982&quot;&gt;此文章&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="b012622b5cd106aa994e423a68f75df6af5f2f04" translate="yes" xml:space="preserve">
          <source>You'll want to parse the first few digits to determine what the country code is, then act differently based on the country.</source>
          <target state="translated">你要先解析前几位数字,确定国家代码是什么,然后根据国家的不同,采取不同的行动。</target>
        </trans-unit>
        <trans-unit id="91e2eeadb5278bcea65ca02c9fe718f3f9995981" translate="yes" xml:space="preserve">
          <source>You've correctly identified that it's a tricky problem...</source>
          <target state="translated">你正确地判断出这是个棘手的问题......</target>
        </trans-unit>
        <trans-unit id="20bc79407d96acddb6ff91f963f31fb77dc39a56" translate="yes" xml:space="preserve">
          <source>is a possible number but not a valid number. It also supports countries outside the US.</source>
          <target state="translated">是一个可能的数字,但不是一个有效的数字。它还支持美国以外的国家。</target>
        </trans-unit>
        <trans-unit id="1acef3661e617a169f69157393e675bf232166c7" translate="yes" xml:space="preserve">
          <source>jQuery solution:</source>
          <target state="translated">jQuery的解决方案。</target>
        </trans-unit>
        <trans-unit id="957cf2f4562af79ff7be8afd4a8ffa463ee6d543" translate="yes" xml:space="preserve">
          <source>libphonenumber also gives you many additional benefits, such as grabbing the location that the phone number is detected as being, and also getting the time zone information from the phone number:</source>
          <target state="translated">libphonenumber还能给你带来很多额外的好处,比如抓取检测到的电话号码所在的位置,还能从电话号码中获取时区信息。</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="41fa97204f85b1ee91db07e4b13713003b0d9880" translate="yes" xml:space="preserve">
          <source>or in the UK dial &lt;code&gt;01234567890&lt;/code&gt;</source>
          <target state="translated">或在英国拨打 &lt;code&gt;01234567890&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48b9fa27e31ebdae0101f95cfe08e08db7b95200" translate="yes" xml:space="preserve">
          <source>will match these:</source>
          <target state="translated">将匹配这些。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
