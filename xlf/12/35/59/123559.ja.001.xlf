<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/123559">
    <body>
      <group id="123559">
        <trans-unit id="46bd2bf2dbfcdbbcdc91543315903ec8d9fa7110" translate="yes" xml:space="preserve">
          <source>(416)555-3456</source>
          <target state="translated">(416)555-3456</target>
        </trans-unit>
        <trans-unit id="922db0fa7e91b0835c2ba07c721ee9be3dca5c9c" translate="yes" xml:space="preserve">
          <source>(926) 1234567</source>
          <target state="translated">(926)1234567</target>
        </trans-unit>
        <trans-unit id="a35c2a47e8479c61161487357ed2255f62b29768" translate="yes" xml:space="preserve">
          <source>+1-(800)-123-4567</source>
          <target state="translated">+1-(800)-123-4567</target>
        </trans-unit>
        <trans-unit id="01040e6fe4beb6bd4429c3545016bdd99a84e9c8" translate="yes" xml:space="preserve">
          <source>+42 555.123.4567</source>
          <target state="translated">+42 555.123.4567</target>
        </trans-unit>
        <trans-unit id="c65e2689191172b5a4409a3edf9e2821a1a502a3" translate="yes" xml:space="preserve">
          <source>+7 555 1234567</source>
          <target state="translated">+7 555 1234567</target>
        </trans-unit>
        <trans-unit id="958572d35dce6a727de99eecd46fe65f713990a5" translate="yes" xml:space="preserve">
          <source>+7(926)1234567</source>
          <target state="translated">+7(926)1234567</target>
        </trans-unit>
        <trans-unit id="1b3ba023e29fe0db6f746c89dc0d2c3994ff3ec0" translate="yes" xml:space="preserve">
          <source>+79261234567</source>
          <target state="translated">+79261234567</target>
        </trans-unit>
        <trans-unit id="4d92d488728ea2b58d1e8dafe06109f59bd1d6b3" translate="yes" xml:space="preserve">
          <source>-Adam</source>
          <target state="translated">-Adam</target>
        </trans-unit>
        <trans-unit id="12550a116a592ec6145716a1c1d7f7816709bbef" translate="yes" xml:space="preserve">
          <source>1 416 555 9292</source>
          <target state="translated">1 416 555 9292</target>
        </trans-unit>
        <trans-unit id="ee1884442ea911f3046d5aeade966104f58bf91c" translate="yes" xml:space="preserve">
          <source>123-4567</source>
          <target state="translated">123-4567</target>
        </trans-unit>
        <trans-unit id="44d6bfea854e4d538cb4e6c4daaf2e3534086b3a" translate="yes" xml:space="preserve">
          <source>123-89-01</source>
          <target state="translated">123-89-01</target>
        </trans-unit>
        <trans-unit id="20eabe5d64b0e216796e834f52d61fd0b70332fc" translate="yes" xml:space="preserve">
          <source>1234567</source>
          <target state="translated">1234567</target>
        </trans-unit>
        <trans-unit id="0b97f0509411d69a0661b070e86679e931a50f51" translate="yes" xml:space="preserve">
          <source>202 555 4567</source>
          <target state="translated">202 555 4567</target>
        </trans-unit>
        <trans-unit id="0f82b1cdc77d7852a909e872fa51b4f38ae87f78" translate="yes" xml:space="preserve">
          <source>4035555678</source>
          <target state="translated">4035555678</target>
        </trans-unit>
        <trans-unit id="d3af04306c750f12c8537841140ec19e68eb80d7" translate="yes" xml:space="preserve">
          <source>415-555-1234</source>
          <target state="translated">415-555-1234</target>
        </trans-unit>
        <trans-unit id="caa42b7c1aa9577623f00ff8ee9a70689bc689dd" translate="yes" xml:space="preserve">
          <source>469 123 45 67</source>
          <target state="translated">469 123 45 67</target>
        </trans-unit>
        <trans-unit id="666c16448d37b6c46e857ce94f27858056aa06bb" translate="yes" xml:space="preserve">
          <source>495 1234567</source>
          <target state="translated">495 1234567</target>
        </trans-unit>
        <trans-unit id="6545ceeda2d631b6102dd498f087e3043a70a1c9" translate="yes" xml:space="preserve">
          <source>650-555-2345</source>
          <target state="translated">650-555-2345</target>
        </trans-unit>
        <trans-unit id="bda8273b562ee4d450607f5f1eeee381a0db0d12" translate="yes" xml:space="preserve">
          <source>8 (926) 1234567</source>
          <target state="translated">8 (926)1234567</target>
        </trans-unit>
        <trans-unit id="b466f2b1ab3e14efbabb3362cb7f3b191004a81f" translate="yes" xml:space="preserve">
          <source>8 800 600-APPLE</source>
          <target state="translated">8 800 600 りんご</target>
        </trans-unit>
        <trans-unit id="c8f6d1b7f2dee5ecd696a27ce9a49f0ad87455d7" translate="yes" xml:space="preserve">
          <source>89261234567</source>
          <target state="translated">89261234567</target>
        </trans-unit>
        <trans-unit id="26b7a98f37ccc4ad6acbb28aac670ca8271322db" translate="yes" xml:space="preserve">
          <source>926 1234567</source>
          <target state="translated">926 1234567</target>
        </trans-unit>
        <trans-unit id="e44cfa11f63bc4c02c7877f31888a5041b157e04" translate="yes" xml:space="preserve">
          <source>926 3 4</source>
          <target state="translated">926 3 4</target>
        </trans-unit>
        <trans-unit id="8a1892e3f407adfe6fe96d1d939c9807978cebcb" translate="yes" xml:space="preserve">
          <source>926.123.4567</source>
          <target state="translated">926.123.4567</target>
        </trans-unit>
        <trans-unit id="12b3277a907665b90ff11b244a17ee74d8ea444c" translate="yes" xml:space="preserve">
          <source>9261234567</source>
          <target state="translated">9261234567</target>
        </trans-unit>
        <trans-unit id="7136bc4473fb12d41af3223d4c129fbba798d30d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.codeitive.com/0QNggPXPgW/international-and-irish-phone-number-form-validation-using-jquery.html&quot;&gt;Source&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.codeitive.com/0QNggPXPgW/international-and-irish-phone-number-form-validation-using-jquery.html&quot;&gt;Source&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0a38a09b5464fc1e52499ce243b4bec7e7585d1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$/&lt;/code&gt; : End the expression</source>
          <target state="translated">&lt;code&gt;$/&lt;/code&gt; ：式を終了します</target>
        </trans-unit>
        <trans-unit id="a1b68d4d6936a232eda26e679236a1605101efed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(02) 9999 9999&lt;/code&gt; is also a &lt;strong&gt;valid&lt;/strong&gt; Australian number</source>
          <target state="translated">&lt;code&gt;(02) 9999 9999&lt;/code&gt; も&lt;strong&gt;有効な&lt;/strong&gt;オーストラリアの番号です</target>
        </trans-unit>
        <trans-unit id="3633256ac8b591b550060c60eaf7b37a2230361d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(09) 9999 9999&lt;/code&gt; is &lt;strong&gt;not a valid&lt;/strong&gt; Australian number</source>
          <target state="translated">&lt;code&gt;(09) 9999 9999&lt;/code&gt; は&lt;strong&gt;有効な&lt;/strong&gt;オーストラリアの番号ではあり&lt;strong&gt;ません&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d7edae792248e451ea60a485b12fd0eb603d7062" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(408) 974&amp;ndash;2042&lt;/code&gt; is a &lt;strong&gt;valid&lt;/strong&gt; US number</source>
          <target state="translated">&lt;code&gt;(408) 974&amp;ndash;2042&lt;/code&gt; は&lt;strong&gt;有効な&lt;/strong&gt;米国の番号です</target>
        </trans-unit>
        <trans-unit id="53ba90e16905883e3b69639432a64176bac521b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(999) 974&amp;ndash;2042&lt;/code&gt; is &lt;strong&gt;not a valid&lt;/strong&gt; US number</source>
          <target state="translated">&lt;code&gt;(999) 974&amp;ndash;2042&lt;/code&gt; は&lt;strong&gt;有効な&lt;/strong&gt;米国の番号ではあり&lt;strong&gt;ません&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b683d55971afcff131f4e90fca39caf9b54c7553" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(\+|1\s)?&lt;/code&gt; : Accept a &quot;plus&quot; or a 1 and a space (pipe character, &lt;code&gt;|&lt;/code&gt;, is &quot;or&quot;), and make it optional.  The &quot;plus&quot; sign must be escaped.</source>
          <target state="translated">&lt;code&gt;(\+|1\s)?&lt;/code&gt; ：「プラス」または1とスペース（パイプ文字 &lt;code&gt;|&lt;/code&gt; 、「または」）を受け入れ、オプションにします。 「プラス」記号はエスケープする必要があります。</target>
        </trans-unit>
        <trans-unit id="5a90008edd365f07eb413c9fb2102990009c39d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0404 999 999&lt;/code&gt; is a &lt;strong&gt;valid&lt;/strong&gt; Australian number</source>
          <target state="translated">&lt;code&gt;0404 999 999&lt;/code&gt; は&lt;strong&gt;有効な&lt;/strong&gt;オーストラリアの番号です</target>
        </trans-unit>
        <trans-unit id="f4c6a8656c9ac3ff7006494b88234b76534c313b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AsYouTypeFormatter&lt;/code&gt; - formats phone numbers on-the-fly when users enter each digit.</source>
          <target state="translated">&lt;code&gt;AsYouTypeFormatter&lt;/code&gt; -ユーザーが各桁を入力すると、オンザフライで電話番号をフォーマットします。</target>
        </trans-unit>
        <trans-unit id="ff709eb0cb6873a644d25a1ff6e17489e4eccbb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PhoneNumberOfflineGeocoder&lt;/code&gt; - provides geographical information related to a phone number.</source>
          <target state="translated">&lt;code&gt;PhoneNumberOfflineGeocoder&lt;/code&gt; -電話番号に関連する地理情報を提供します。</target>
        </trans-unit>
        <trans-unit id="41901e4b3e46b93b8cdd2df707362b4e960bc6af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[2-9]&lt;/code&gt; :  Requires a digit 2-9 for that slot.</source>
          <target state="translated">&lt;code&gt;[2-9]&lt;/code&gt; ：そのスロットには数字2-9が必要です。</target>
        </trans-unit>
        <trans-unit id="30ae1ff0a2a51fc47926c273807c8f3801af0d4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\d{3}&lt;/code&gt; :  Requires a 3-digit number:  000-999.  Shorthand for
&lt;code&gt;[0-9][0-9][0-9]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;\d{3}&lt;/code&gt; ：3桁の番号が必要です：000-999。 &lt;code&gt;[0-9][0-9][0-9]&lt;/code&gt; の短縮形 。</target>
        </trans-unit>
        <trans-unit id="40a52a3d72da33a1e4f4bd90588fa2259da597df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;findNumbers&lt;/code&gt; - finds numbers in text input.</source>
          <target state="translated">&lt;code&gt;findNumbers&lt;/code&gt; -テキスト入力で数値を検索します。</target>
        </trans-unit>
        <trans-unit id="2028f080264773ae0782713fe0fa5bf8434dcb78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getExampleNumber&lt;/code&gt;/&lt;code&gt;getExampleNumberByType&lt;/code&gt; - provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.</source>
          <target state="translated">&lt;code&gt;getExampleNumber&lt;/code&gt; / &lt;code&gt;getExampleNumberByType&lt;/code&gt; -すべての国/地域に有効なサンプル番号を提供し、必要なサンプル電話番号のタイプを指定するオプションがあります。</target>
        </trans-unit>
        <trans-unit id="8ae5d2eb6cb5560a9b58ef49e842be7c328f5354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getNumberType&lt;/code&gt; - gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP and Personal Numbers (whenever feasible).</source>
          <target state="translated">&lt;code&gt;getNumberType&lt;/code&gt; -数値自体に基づいて数値のタイプを取得します。 固定回線、モバイル、フリーダイヤル、プレミアムレート、共有コスト、VoIP、および個人番号（可能な場合）を区別できます。</target>
        </trans-unit>
        <trans-unit id="de6f3026a2a806857a02c158c3f3516ca3203953" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isNumberMatch&lt;/code&gt; - gets a confidence level on whether two numbers could be the same.</source>
          <target state="translated">&lt;code&gt;isNumberMatch&lt;/code&gt; -2つの数値が同じであるかどうかの信頼レベルを取得します。</target>
        </trans-unit>
        <trans-unit id="d95332e339f288fa1055f04e2fdd1f00f614a359" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isPossibleNumber&lt;/code&gt; - quickly guessing whether a number is a possible phonenumber by using only the length information, much faster than a full validation.</source>
          <target state="translated">&lt;code&gt;isPossibleNumber&lt;/code&gt; -長さ情報のみを使用することで、番号が可能な電話番号であるかどうかをすばやく推測します。完全な検証よりもはるかに高速です。</target>
        </trans-unit>
        <trans-unit id="8dff01c36dabb4875658933ef3c1a9112bae41d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isValidNumber&lt;/code&gt; - full validation of a phone number for a region using length and prefix information.</source>
          <target state="translated">&lt;code&gt;isValidNumber&lt;/code&gt; -長さとプレフィックス情報を使用した地域の電話番号の完全な検証。</target>
        </trans-unit>
        <trans-unit id="9f561e466531ebcda547d50fab19e7b5430d8922" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;America&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;America&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="93680b7e2fa033f259e12bd2f56b2b1593e4d7f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Australia&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Australia&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="033fc1fbbea67f031c319e448ee0ee8ce320d484" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C#&lt;/strong&gt;: &lt;a href=&quot;https://github.com/twcclegg/libphonenumber-csharp&quot;&gt;https://github.com/twcclegg/libphonenumber-csharp&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;C＃&lt;/strong&gt; ： &lt;a href=&quot;https://github.com/twcclegg/libphonenumber-csharp&quot;&gt;https&lt;/a&gt; : //github.com/twcclegg/libphonenumber-csharp</target>
        </trans-unit>
        <trans-unit id="5fbf4a00d6a882121a802d2725d98940aaaeb108" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Edit:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="24605bd984aabecf300ff94f55f51e1114adcd40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Elixir&lt;/strong&gt;: &lt;a href=&quot;https://github.com/socialpaymentsbv/ex_phone_number&quot;&gt;https://github.com/socialpaymentsbv/ex_phone_number&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;エリクサー&lt;/strong&gt; ： &lt;a href=&quot;https://github.com/socialpaymentsbv/ex_phone_number&quot;&gt;https&lt;/a&gt; : //github.com/socialpaymentsbv/ex_phone_number</target>
        </trans-unit>
        <trans-unit id="dbac505176c7d070a0ce804c63b6347e23f78d30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Highlights of functionality:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;機能のハイライト：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="30a3db4832247f60fba1a2168df67582ae88b7f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JavaScript&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ruimarinho/google-libphonenumber&quot;&gt;https://github.com/ruimarinho/google-libphonenumber&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JavaScript&lt;/strong&gt; ： &lt;a href=&quot;https://github.com/ruimarinho/google-libphonenumber&quot;&gt;https&lt;/a&gt; : //github.com/ruimarinho/google-libphonenumber</target>
        </trans-unit>
        <trans-unit id="4b825c9117f16fec2c2885e9738341494f979c39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Objective-C&lt;/strong&gt;: &lt;a href=&quot;https://github.com/iziz/libPhoneNumber-iOS&quot;&gt;https://github.com/iziz/libPhoneNumber-iOS&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Objective-C&lt;/strong&gt; ： &lt;a href=&quot;https://github.com/iziz/libPhoneNumber-iOS&quot;&gt;https&lt;/a&gt; : //github.com/iziz/libPhoneNumber-iOS</target>
        </trans-unit>
        <trans-unit id="59ccb2fa2dfb42e44cf55acf54cdcb9e47466e0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PHP&lt;/strong&gt;: &lt;a href=&quot;https://github.com/giggsey/libphonenumber-for-php&quot;&gt;https://github.com/giggsey/libphonenumber-for-php&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;PHP&lt;/strong&gt; ： &lt;a href=&quot;https://github.com/giggsey/libphonenumber-for-php&quot;&gt;https&lt;/a&gt; : //github.com/giggsey/libphonenumber-for-php</target>
        </trans-unit>
        <trans-unit id="638642d05d74b4159689f3ed5a7c0e4fdbb817a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Python&lt;/strong&gt;: &lt;a href=&quot;https://github.com/daviddrysdale/python-phonenumbers&quot;&gt;https://github.com/daviddrysdale/python-phonenumbers&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Python&lt;/strong&gt; ： &lt;a href=&quot;https://github.com/daviddrysdale/python-phonenumbers&quot;&gt;https&lt;/a&gt; : //github.com/daviddrysdale/python-phonenumbers</target>
        </trans-unit>
        <trans-unit id="01dc2621b96b7722fd431829f5d867d46c77593f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ruby&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sstephenson/global_phone&quot;&gt;https://github.com/sstephenson/global_phone&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ruby&lt;/strong&gt; ： &lt;a href=&quot;https://github.com/sstephenson/global_phone&quot;&gt;https&lt;/a&gt; : //github.com/sstephenson/global_phone</target>
        </trans-unit>
        <trans-unit id="488aeff36a84e59f02d58068108b1919630e3440" translate="yes" xml:space="preserve">
          <source>A couple simple perl expressions might be:</source>
          <target state="translated">いくつかの簡単なPerlの式があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="ca6b2583d0e9a3c4be4eb43eacf5aa17d784da0c" translate="yes" xml:space="preserve">
          <source>A regular expression is fine for checking the format of a phone number, but it's not really going to be able to check the &lt;em&gt;validity&lt;/em&gt; of a phone number.</source>
          <target state="translated">電話番号の形式を確認するには正規表現で問題ありませんが、実際には電話番号の&lt;em&gt;有効性&lt;/em&gt;を確認することはできません。</target>
        </trans-unit>
        <trans-unit id="59aae6ebbd36ac7b0e708dcdbfe7b57ca5fcb0e0" translate="yes" xml:space="preserve">
          <source>Accepts:</source>
          <target state="translated">Accepts:</target>
        </trans-unit>
        <trans-unit id="aadf0b7cafc7f742c185a01cdda7569411bce26e" translate="yes" xml:space="preserve">
          <source>After reading through these answers, it looks like there wasn't a straightforward regular expression that can parse through a bunch of text and pull out phone numbers in any format (including international with and without the plus sign).</source>
          <target state="translated">これらの回答に目を通した後、テキストの束を解析して、どのような形式(プラス記号のある、なしの国際的なものを含む)でも電話番号を引き出すことができる、簡単な正規表現はなかったように見えます。</target>
        </trans-unit>
        <trans-unit id="400bb35a87523373a5deaa7cf3dda1d5543b1fad" translate="yes" xml:space="preserve">
          <source>Although the answer to strip all whitespace is neat, it doesn't really solve the problem that's posed, which is to find a regex.  Take, for instance, my test script that downloads a web page and extracts all phone numbers using the regex.  Since you'd need a regex anyway, you might as well have the regex do all the work.  I came up with this:</source>
          <target state="translated">すべての空白を取り除くという答えはすっきりしていますが、それは問題を解決するものではありません。例えば、ウェブページをダウンロードして、正規表現を使ってすべての電話番号を抽出するテストスクリプトを見てみましょう。どうせ正規表現が必要なので、すべての作業を正規表現に任せたほうがいいかもしれません。そこで思いついたのがこれです。</target>
        </trans-unit>
        <trans-unit id="ac8fd7a0e55b893ddc9967e7ee080a882160e910" translate="yes" xml:space="preserve">
          <source>And while stripping all/most non-numeric characters may work well on the server side (especially if you are planning on passing these values to a dialer), you may not want to thrash the user's input during validation, particularly if you want them to make corrections in another field.</source>
          <target state="translated">また、数値以外の文字をすべて削除することはサーバ側ではうまくいくかもしれませんが(特にこれらの値をダイヤラに渡すことを計画している場合)、検証中にユーザの入力を叩きつけることは避けたいかもしれません。</target>
        </trans-unit>
        <trans-unit id="97fbcada001f55ac5e505e92a5396afd1f06169b" translate="yes" xml:space="preserve">
          <source>As a bonus, &lt;code&gt;libphonenumber&lt;/code&gt; has a number of datasets to check the validity of phone numbers, as well, so checking a number such as &lt;code&gt;+61299999999&lt;/code&gt; (the international version of &lt;a href=&quot;https://libphonenumber.appspot.com/phonenumberparser?number=+61299999999&amp;amp;country=AU&amp;amp;geocodingLocale=en-US&quot;&gt;&lt;code&gt;(02) 9999 9999&lt;/code&gt;&lt;/a&gt;) returns as a valid number with formatting:</source>
          <target state="translated">おまけとして、 &lt;code&gt;libphonenumber&lt;/code&gt; には、電話番号の有効性をチェックするための多数のデータセットも含まれているため、 &lt;code&gt;+61299999999&lt;/code&gt; （ &lt;a href=&quot;https://libphonenumber.appspot.com/phonenumberparser?number=+61299999999&amp;amp;country=AU&amp;amp;geocodingLocale=en-US&quot;&gt; &lt;code&gt;(02) 9999 9999&lt;/code&gt; &lt;/a&gt;国際バージョン）などの番号をチェックすると、有効な番号がフォーマットされて返されます。</target>
        </trans-unit>
        <trans-unit id="3d196df3b26d8c379e3dd5b18cdf5c6e24cb329d" translate="yes" xml:space="preserve">
          <source>As mentioned below, it checks only for characters, not its structure/order</source>
          <target state="translated">後述するように、文字のみをチェックし、構造体の順番はチェックしません。</target>
        </trans-unit>
        <trans-unit id="cac51434fcdc8532c06654edfe20ccf273510fab" translate="yes" xml:space="preserve">
          <source>Better option... just strip all non-digit characters on input (except 'x' and leading '+' signs), taking care because of the British tendency to write numbers in the non-standard form &lt;code&gt;+44 (0) ...&lt;/code&gt; when asked to use the international prefix (in that specific case, you should discard the &lt;code&gt;(0)&lt;/code&gt; entirely).</source>
          <target state="translated">より良いオプション...入力で数字以外のすべての文字（ 'x'と先頭の '+'記号を除く）を取り除くだけです。イギリスでは、非標準形式 &lt;code&gt;+44 (0) ...&lt;/code&gt; 数字を書く傾向があるため、注意してください。 。国際プレフィックスを使用するように求められた場合（その特定のケースでは、 &lt;code&gt;(0)&lt;/code&gt; を完全に破棄する必要があります）。</target>
        </trans-unit>
        <trans-unit id="4a225d2f9965fe34ea538413a35d7b335c066858" translate="yes" xml:space="preserve">
          <source>Beyond that - the list you gave does not include another common US format - leaving off the initial 1.  Most cell phones in the US don't require it, and it'll start to baffle the younger generation unless they've dialed internationally.</source>
          <target state="translated">それ以上に、あなたがあげたリストには、最初の1を省略した別の一般的な米国のフォーマットが含まれていません。米国のほとんどの携帯電話はそれを必要としないし、国際電話をかけていない限り、若い世代を困惑させ始めるだろう。</target>
        </trans-unit>
        <trans-unit id="43a5906151aeae7631de0c8088ed4d4982f3bea6" translate="yes" xml:space="preserve">
          <source>Breaking a complex regexp like this can be just as effective, but much more simple.</source>
          <target state="translated">このような複雑な正規表現を壊すことは、同じように効果的ですが、はるかにシンプルです。</target>
        </trans-unit>
        <trans-unit id="37d42d17f06037bfcdb7e90603c5fb51b34fbb15" translate="yes" xml:space="preserve">
          <source>But the invalid Australian phone number (&lt;a href=&quot;https://libphonenumber.appspot.com/phonenumberparser?number=01161999999999&amp;amp;country=US&amp;amp;geocodingLocale=en-US&quot;&gt;&lt;code&gt;(09) 9999 9999&lt;/code&gt;&lt;/a&gt;) returns that it is not a valid phone number.</source>
          <target state="translated">しかし、無効なオーストラリアの電話番号（ &lt;a href=&quot;https://libphonenumber.appspot.com/phonenumberparser?number=01161999999999&amp;amp;country=US&amp;amp;geocodingLocale=en-US&quot;&gt; &lt;code&gt;(09) 9999 9999&lt;/code&gt; &lt;/a&gt; ）は、有効な電話番号ではないことを返します。</target>
        </trans-unit>
        <trans-unit id="dd97f611de650fc07dfa1c4d6992198b072a7f30" translate="yes" xml:space="preserve">
          <source>Country indicator</source>
          <target state="translated">国別指標</target>
        </trans-unit>
        <trans-unit id="fdfe09df639dcc072e670324ee0209f2debec6ec" translate="yes" xml:space="preserve">
          <source>Do a replace on formatting characters, then check the remaining for phone validity.  In PHP,</source>
          <target state="translated">書式化した文字を置換してから、残りの電話の有効性を確認してください。PHPでは。</target>
        </trans-unit>
        <trans-unit id="16a0b451f01e21349e7ff6a5419e8ec27f88d8d0" translate="yes" xml:space="preserve">
          <source>EDIT:</source>
          <target state="translated">EDIT:</target>
        </trans-unit>
        <trans-unit id="0f86093f5a5fbb42dbd59a0c2d1a4b6e838479a1" translate="yes" xml:space="preserve">
          <source>Entering US phone number brought back quite a list of possibilities.</source>
          <target state="translated">米国の電話番号を入力すると、かなりの可能性のリストが戻ってきました。</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="659087d3ca23db6ae11e0a43579b5f4a260dda11" translate="yes" xml:space="preserve">
          <source>Extension</source>
          <target state="translated">Extension</target>
        </trans-unit>
        <trans-unit id="9c06f2a299923d862630566d22b27441c053e469" translate="yes" xml:space="preserve">
          <source>For anyone interested in doing something similar with Irish mobile phone numbers, here's a straightforward way of accomplishing it:</source>
          <target state="translated">アイルランドの携帯電話番号で似たようなことをすることに興味がある人のために、ここではそれを達成するための簡単な方法です。</target>
        </trans-unit>
        <trans-unit id="f953f99de4fc84ba1451d0528f96f4405157617d" translate="yes" xml:space="preserve">
          <source>For example, it will recognize that:</source>
          <target state="translated">例えば、それを認識します。</target>
        </trans-unit>
        <trans-unit id="d6057320fd68061629731fe2fbb1d427361c6696" translate="yes" xml:space="preserve">
          <source>For further analysis you can subscribe to one of many providers that will give you access to a database of valid numbers as well as tell you if they're landlines or mobiles, disconnected, etc. It costs money.</source>
          <target state="translated">さらに分析するには、有効な番号のデータベースにアクセスし、固定電話か携帯電話か、接続されていないかなどを教えてくれる多くのプロバイダーに加入することができます。これにはお金がかかります。</target>
        </trans-unit>
        <trans-unit id="af5aa2daf63a7d05f098b5b003ef31604f6b16f1" translate="yes" xml:space="preserve">
          <source>From my post on that site, I've created a quick guide to assist anyone with making their own regex for their own desired phone number format, which I will caveat (like I did on the other site) that if you are too restrictive, you may not get the desired results, and there is no &quot;one size fits all&quot; solution to accepting all possible phone numbers in the world - only what you decide to accept as your format of choice.  Use at your own risk.</source>
          <target state="translated">そのサイトの私の投稿から、私は誰でも自分の希望する電話番号フォーマットの正規表現を作ることを支援するためのクイックガイドを作成しましたが、(他のサイトで私がしたように)制限しすぎると、希望する結果が得られない可能性があることに注意しておきます。ご自身の責任においてご利用ください。</target>
        </trans-unit>
        <trans-unit id="1ea80608bd0135d482e7ecafa7647192f008cb75" translate="yes" xml:space="preserve">
          <source>Google's version has code for Java and Javascript, but people have also implemented libraries for other languages that use the Google i18n phone number dataset:</source>
          <target state="translated">Google のバージョンには Java と Javascript 用のコードがありますが、Google i18n 電話番号データセットを使用する他の言語用のライブラリも実装されています。</target>
        </trans-unit>
        <trans-unit id="44f085c8e03a6a858b882ee9431bad07c64c314e" translate="yes" xml:space="preserve">
          <source>Have you had a look over at &lt;a href=&quot;http://regexlib.com/&quot;&gt;RegExLib&lt;/a&gt;?</source>
          <target state="translated">&lt;a href=&quot;http://regexlib.com/&quot;&gt;RegExLibを&lt;/a&gt;確認しましたか？</target>
        </trans-unit>
        <trans-unit id="ca525f2d9d8acdf38205777d144c84521f1a175d" translate="yes" xml:space="preserve">
          <source>Here's a perl script to test it.  When you match, $1 contains the area code, $2 and $3 contain the phone number, and $5 contains the extension.  My test script downloads a file from the internet and prints all the phone numbers in it.</source>
          <target state="translated">これをテストするための perl スクリプトです。一致すると、$1には市外局番、$2と$3には電話番号、$5には拡張子が含まれています。私のテストスクリプトは、インターネットからファイルをダウンロードして、その中のすべての電話番号を印刷します。</target>
        </trans-unit>
        <trans-unit id="22b476064f663edfa8252e9e9661ecf3d4ed6339" translate="yes" xml:space="preserve">
          <source>Here's a regex for a 7 or 10 digit number, with extensions allowed, delimiters are spaces, dashes, or periods:</source>
          <target state="translated">これは7桁または10桁の数字の正規表現で、拡張子を使用することができ、区切り文字はスペース、ダッシュ、ピリオドです。</target>
        </trans-unit>
        <trans-unit id="eacc65b2c702c38624f0c21b9e494415538871b2" translate="yes" xml:space="preserve">
          <source>Here's a wonderful pattern that most closely matched the validation that I needed to achieve. I'm not the original author, but I think it's well worth sharing as I found this problem to be very complex and without a concise or widely useful answer.</source>
          <target state="translated">ここに、私が達成するために必要としていた検証と最も密接に一致した素晴らしいパターンがあります。私は原著者ではありませんが、この問題は非常に複雑で、簡潔で広く有用な答えがないことがわかったので、共有する価値は十分にあると思います。</target>
        </trans-unit>
        <trans-unit id="87bb8df3e3750778782fc993b14771b25c1ae9e1" translate="yes" xml:space="preserve">
          <source>Here's my best try so far. It handles the formats above but I'm sure I'm missing some other possible formats.</source>
          <target state="translated">これまでのところ、私の最高の試みです。これは上記のフォーマットを処理しますが、他の可能性のあるフォーマットを見落としていると思います。</target>
        </trans-unit>
        <trans-unit id="3d4c8ec063c8453425fd199339fa0dc71fd1084a" translate="yes" xml:space="preserve">
          <source>Here's one that works well in JavaScript. It's in a string because that's what the Dojo widget was expecting.</source>
          <target state="translated">これはJavaScriptでうまく動作するものです。これはDojoウィジェットが期待していたものなので、文字列になっています。</target>
        </trans-unit>
        <trans-unit id="022980180be3a3d695520932cf3a4e6a1f9d42d8" translate="yes" xml:space="preserve">
          <source>Here's what I used for a client project recently, where we had to convert all phone numbers in any format to tel: links.</source>
          <target state="translated">ここでは、私が最近クライアントのプロジェクトのために使用したものは、我々はtelに任意の形式ですべての電話番号を変換しなければならなかった:リンクです。</target>
        </trans-unit>
        <trans-unit id="f0ac0dbc5713c70f3f68911c8011ad8531f4bfc7" translate="yes" xml:space="preserve">
          <source>Honestly, I would recommend you don't try to validate phone numbers. Even if you could write a big, hairy validator that would allow all the different legitimate formats, it would end up allowing pretty much anything even remotely resembling a phone number in the first place.</source>
          <target state="translated">正直言って、電話番号を検証しようとしないことをお勧めします。たとえあなたが、さまざまな正当なフォーマットをすべて許可するような、毛むくじゃらのような大きなバリデータを書くことができたとしても、そもそも電話番号に似たものは何でも許可することになってしまうでしょう。</target>
        </trans-unit>
        <trans-unit id="63826e2f09a3eca5122612b589a84c33d0624c30" translate="yes" xml:space="preserve">
          <source>How to validate phone numbers using regex</source>
          <target state="translated">正規表現を使って電話番号を検証する方法</target>
        </trans-unit>
        <trans-unit id="5a7c6a46c8b444a39962acafbea226f89aa12a89" translate="yes" xml:space="preserve">
          <source>I answered this question on another SO question before deciding to also include my answer as an answer on this thread, because no one was addressing how to require/not require items, just handing out regexs:
&lt;a href=&quot;https://stackoverflow.com/questions/25184823/regex-working-wrong-matching-unexpected-things/25298604#25298604&quot;&gt;Regex working wrong, matching unexpected things&lt;/a&gt;</source>
          <target state="translated">私は別のSOの質問でこの質問に答えた後、このスレッドの回答として私の回答も含めることにしました。なぜなら、誰がアイテムを必要とするか、または必要としないかについては対処せず、正規表現を渡すだけだったからです。</target>
        </trans-unit>
        <trans-unit id="0bfbfe611624b3a8f88a726cb01f206cb9f27249" translate="yes" xml:space="preserve">
          <source>I believe the &lt;a href=&quot;http://search.cpan.org/~kennedyh/Number-Phone-US-1.5/&quot;&gt;Number::Phone::US&lt;/a&gt; and &lt;a href=&quot;http://search.cpan.org/~abigail/Regexp-Common-2.122/&quot;&gt;Regexp::Common&lt;/a&gt;  (particularly the source of &lt;a href=&quot;http://search.cpan.org/~abigail/Regexp-Common-2.122/lib/Regexp/Common/URI/RFC2806.pm&quot;&gt;Regexp::Common::URI::RFC2806&lt;/a&gt;) Perl modules could help.</source>
          <target state="translated">&lt;a href=&quot;http://search.cpan.org/~kennedyh/Number-Phone-US-1.5/&quot;&gt;Number :: Phone :: US&lt;/a&gt;および&lt;a href=&quot;http://search.cpan.org/~abigail/Regexp-Common-2.122/&quot;&gt;Regexp :: Common&lt;/a&gt; （特に&lt;a href=&quot;http://search.cpan.org/~abigail/Regexp-Common-2.122/lib/Regexp/Common/URI/RFC2806.pm&quot;&gt;Regexp :: Common :: URI :: RFC2806のソース&lt;/a&gt; ）Perlモジュールが役立つと思います。</target>
        </trans-unit>
        <trans-unit id="ccc9e077f990fddb26d3b34eeba471be5b1cec42" translate="yes" xml:space="preserve">
          <source>I found this to be something interesting. I have not tested it but it looks as if it would work</source>
          <target state="translated">これは面白いことに気がつきました。テストはしていませんが、使えそうな気がします。</target>
        </trans-unit>
        <trans-unit id="10e25061e0c6d708c7ba4765226d048f5fdd6132" translate="yes" xml:space="preserve">
          <source>I found this to work quite well:</source>
          <target state="translated">これはかなり効果があることがわかりました。</target>
        </trans-unit>
        <trans-unit id="b71f940c0579bff4446fcab0a0dcfce1cf7dc5fa" translate="yes" xml:space="preserve">
          <source>I interpret the question as looking for a broadly valid pattern, which may not be internally consistent - for example having a valid set of numbers, but not validating that the trunk-line, exchange, etc. to the valid pattern for the country code prefix.</source>
          <target state="translated">私は、内部的に一貫性がないかもしれませんが、広く有効なパターンを探しているように質問を解釈しています-例えば、有効な番号のセットを持っていますが、国コードの接頭辞の有効なパターンにトランクライン、交換などを検証していません。</target>
        </trans-unit>
        <trans-unit id="75d1417c12f58c1fc82eee361d8bf8f15542070f" translate="yes" xml:space="preserve">
          <source>I was struggling with the same issue, trying to make my application future proof, but these guys got me going in the right direction. I'm not actually checking the number itself to see if it works or not, I'm just trying to make sure that a series of numbers was entered that may or may not have an extension.</source>
          <target state="translated">私は同じ問題に苦しんでいました、私のアプリケーションを将来の証明にしようとしていましたが、この人たちは私を正しい方向に導いてくれました。私は実際にそれが機能するかどうかを確認するために番号自体をチェックしているわけではなく、拡張子があるかもしれないし、ないかもしれない一連の番号が入力されたかどうかを確認しようとしているだけなのです。</target>
        </trans-unit>
        <trans-unit id="fa0d64ff8c3a2270191366f37f0e3b07e104d40f" translate="yes" xml:space="preserve">
          <source>I work for a market research company and we have to filter these types of input alllll the time. You're complicating it too much. Just strip the non-alphanumeric chars, and see if there's an extension.</source>
          <target state="translated">私は市場調査会社で働いています。そして、我々はこのタイプの入力をフィルタリングしなければなりません。あなたはそれをあまりにも複雑にしています。英数字以外の文字を削除して、拡張子があるかどうかを確認してください。</target>
        </trans-unit>
        <trans-unit id="36f85d8b9ecf98746ea135d39fc26f6f094fc9c2" translate="yes" xml:space="preserve">
          <source>I would also consider any of the following as valid entries on a web site:</source>
          <target state="translated">また、以下のいずれかを有効なエントリとして、ウェブサイト上で検討してみたいと思います。</target>
        </trans-unit>
        <trans-unit id="b240d6f282239cc116368553457e618099c93be0" translate="yes" xml:space="preserve">
          <source>I would also suggest looking at the &quot;&lt;a href=&quot;https://github.com/googlei18n/libphonenumber&quot;&gt;libphonenumber&lt;/a&gt;&quot; Google Library. I know it is not regex but it does exactly what you want.</source>
          <target state="translated">「 &lt;a href=&quot;https://github.com/googlei18n/libphonenumber&quot;&gt;libphonenumber&lt;/a&gt; 」のGoogleライブラリもご覧になることをお勧めします。 私はそれが正規表現ではないことを知っていますが、それはあなたが望むものを正確に行います。</target>
        </trans-unit>
        <trans-unit id="2980a1a622568116f14431287d2474d7ffb950a1" translate="yes" xml:space="preserve">
          <source>I would suggest skipping a simple regular expression to test your phone number against, and using a library such as Google's &lt;a href=&quot;https://github.com/googlei18n/libphonenumber&quot;&gt;&lt;code&gt;libphonenumber&lt;/code&gt; (link to GitHub project)&lt;/a&gt;.</source>
          <target state="translated">単純な正規表現をスキップして電話番号をテストし、Googleの&lt;a href=&quot;https://github.com/googlei18n/libphonenumber&quot;&gt; &lt;code&gt;libphonenumber&lt;/code&gt; （GitHubプロジェクトへのリンク）&lt;/a&gt;などのライブラリを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="66b66c47f3306e9d78e3a3bf13fb6788b912c88f" translate="yes" xml:space="preserve">
          <source>I wrote simpliest (although i didn't need dot in it).</source>
          <target state="translated">一番シンプルと書いたのは(ドットはいらないけど)。</target>
        </trans-unit>
        <trans-unit id="4c2424d48183efdb09767b99a30b1f0659f9ef5a" translate="yes" xml:space="preserve">
          <source>I'll answer with my current attempt, but I'm hoping somebody has something better and/or more elegant.</source>
          <target state="translated">今の試みで答えますが、誰かもっといいものを持っていて、もっとエレガントなものを持っている人がいたらいいなと思っています。</target>
        </trans-unit>
        <trans-unit id="c90880b06f56cf763af15f83349452b90003c599" translate="yes" xml:space="preserve">
          <source>I'm trying to put together a comprehensive regex to validate phone numbers. Ideally it would handle international formats, but it must handle US formats, including the following:</source>
          <target state="translated">電話番号を検証するための包括的な正規表現をまとめようとしています。理想的には国際的なフォーマットを扱うことになりますが、以下のような米国のフォーマットを扱う必要があります。</target>
        </trans-unit>
        <trans-unit id="8994625e0238ac85a4b3f559a90a21a2acde5fe4" translate="yes" xml:space="preserve">
          <source>If the users want to give you their phone numbers, then trust them to get it right.  If they do not want to give it to you then forcing them to enter a valid number will either send them to a competitor's site or make them enter a random string that fits your regex.  I might even be tempted to look up the number of a premium rate horoscope hotline and enter that instead.</source>
          <target state="translated">ユーザーが自分の電話番号を教えたいのであれば、彼らを信頼して正しい番号を入力してください。もしユーザーが電話番号を教えたくないのであれば、有効な番号を強制的に入力させると、競合他社のサイトに飛ばされるか、あなたの正規表現に合ったランダムな文字列を入力させられてしまいます。私も、プレミアム料金の星占いホットラインの番号を調べて、代わりにそれを入力したくなるかもしれません。</target>
        </trans-unit>
        <trans-unit id="9f091b9560d69c1ee36d37625cbaf5953d8340aa" translate="yes" xml:space="preserve">
          <source>If you are trying to validate user input, why not normalize the result and be done with it?  If the user puts in a number you can't recognize as a valid number, either save it as inputted or strip out undailable characters.  The &lt;a href=&quot;http://search.cpan.org/~cfaerber/Number-Phone-Normalize-0.20/lib/Number/Phone/Normalize.pm&quot;&gt;Number::Phone::Normalize&lt;/a&gt; Perl module could be a source of inspiration.</source>
          <target state="translated">ユーザー入力を検証しようとしている場合は、結果を正規化してそれを使ってみませんか？ ユーザーが有効な番号として認識できない番号を入力した場合は、入力した番号として保存するか、使用できない文字を削除します。 &lt;a href=&quot;http://search.cpan.org/~cfaerber/Number-Phone-Normalize-0.20/lib/Number/Phone/Normalize.pm&quot;&gt;Number :: Phone :: Normalize&lt;/a&gt; Perlモジュールは、インスピレーションの源となる可能性があります。</target>
        </trans-unit>
        <trans-unit id="b02777a3e87266f7dd95c27f23a29f5651cc719f" translate="yes" xml:space="preserve">
          <source>If you just want to verify you don't have random garbage in the field (i.e., from form spammers) this regex should do nicely:</source>
          <target state="translated">フィールドにランダムなゴミが入っていないことを確認したいだけならば (つまりフォームのスパマーからの)この正規表現はうまくいくはずです。</target>
        </trans-unit>
        <trans-unit id="15a209b828c8667e424aefd50e088a7ea554abc4" translate="yes" xml:space="preserve">
          <source>If you want a hyphen, just type &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;[-]&lt;/code&gt; . If you do not put it first or last in a series of other characters, though, you may need to escape it:  &lt;code&gt;\-&lt;/code&gt;</source>
          <target state="translated">ハイフンが必要な場合は、単に &lt;code&gt;-&lt;/code&gt; または &lt;code&gt;[-]&lt;/code&gt; と入力します。 ただし、他の一連の文字の最初または最後に配置しない場合は、エスケープする必要がある場合があります。 &lt;code&gt;\-&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd3c2186bbca3a97b7824576c949f6ea54f4fa75" translate="yes" xml:space="preserve">
          <source>If you want anything to be optional, put a &lt;code&gt;?&lt;/code&gt; after it</source>
          <target state="translated">何かをオプションにしたい場合は、 &lt;code&gt;?&lt;/code&gt; その後</target>
        </trans-unit>
        <trans-unit id="718e26645a3839ca2b0ddaaed52e50182e77cee4" translate="yes" xml:space="preserve">
          <source>If you want specific numbers to match a slot, enter them: &lt;code&gt;[246]&lt;/code&gt; will require a 2, 4, or 6.  &lt;code&gt;[77|78]&lt;/code&gt; will require 77 or 78.</source>
          <target state="translated">特定の番号をスロットに一致させる場合は、それらを入力します。 &lt;code&gt;[246]&lt;/code&gt; には2、4、または6が必要です。 &lt;code&gt;[77|78]&lt;/code&gt; には77または78が必要です。</target>
        </trans-unit>
        <trans-unit id="2ac71d06ab1140a038c4a6d174e05d44ca01d64e" translate="yes" xml:space="preserve">
          <source>If you want to accept different choices in a slot, put brackets around the options: &lt;code&gt;[-.\s]&lt;/code&gt; will require a hyphen, period, or space.  A question mark after the last bracket will make all of those optional for that slot.</source>
          <target state="translated">スロットで異なる選択を受け入れる場合は、オプションを角括弧で囲みます。 &lt;code&gt;[-.\s]&lt;/code&gt; にはハイフン、ピリオド、またはスペースが必要です。 最後のブラケットの後の疑問符は、それらすべてをそのスロットに対してオプションにします。</target>
        </trans-unit>
        <trans-unit id="4a7d10f24f70f4d0fedc28310dd1999c71ad4928" translate="yes" xml:space="preserve">
          <source>If you want to maintain per digit rules (such as in US Area Codes and Prefixes (exchange codes) must fall in the range of 200-999) well, good luck to you. Maintaining a complex rule-set which could be outdated at any point in the future by any country in the world does not sound fun.</source>
          <target state="translated">桁ごとのルールを維持したいのであれば(米国のエリアコードや接頭辞(交換コード)は200から999の範囲内でなければならないなど)、まあ、幸運を祈るしかありません。世界中のどの国でも将来的に時代遅れになる可能性のある複雑なルールセットを維持することは、楽しくないでしょう。</target>
        </trans-unit>
        <trans-unit id="5e90127b7b04fe9a92804e9a02c9e0cdda1e82db" translate="yes" xml:space="preserve">
          <source>If you want to require a space, use:  &lt;code&gt;[\s]&lt;/code&gt; or &lt;code&gt;\s&lt;/code&gt;</source>
          <target state="translated">スペースが必要な場合は、 &lt;code&gt;[\s]&lt;/code&gt; または &lt;code&gt;\s&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5ed6e18f9c088af83ca192a802e402a6e7aacdc" translate="yes" xml:space="preserve">
          <source>If you want to require parenthesis, use:  &lt;code&gt;[(]&lt;/code&gt; and &lt;code&gt;[)]&lt;/code&gt; .  Using &lt;code&gt;\(&lt;/code&gt; and &lt;code&gt;\)&lt;/code&gt; is ugly and can make things confusing.</source>
          <target state="translated">括弧が必要な場合は、 &lt;code&gt;[(]&lt;/code&gt; および &lt;code&gt;[)]&lt;/code&gt; を使用します。 &lt;code&gt;\(&lt;/code&gt; と &lt;code&gt;\)&lt;/code&gt; の使用は見苦しく、混乱を招く可能性があります。</target>
        </trans-unit>
        <trans-unit id="fb2fb6da06f21696f5d1b2691d120c610e9009e5" translate="yes" xml:space="preserve">
          <source>If you're talking about form validation, the regexp to validate correct meaning as well as correct data is going to be extremely complex because of varying country and provider standards. It will also be hard to keep up to date.</source>
          <target state="translated">フォームバリデーションの場合、正しいデータだけでなく正しい意味を検証するための正規表現は、国やプロバイダの基準が異なるため、非常に複雑なものになります。また、最新の状態を維持するのも大変でしょう。</target>
        </trans-unit>
        <trans-unit id="87fcc4d677e51bf63d0ac99b2817edc349e9cb7a" translate="yes" xml:space="preserve">
          <source>In my opinion, the most elegant solution is to validate a minimum length, nothing more.</source>
          <target state="translated">私の考えでは、最もエレガントな解決策は、最小の長さを検証することであり、それ以上のことは何もありません。</target>
        </trans-unit>
        <trans-unit id="43e79cfa9396bc345e5838e3f37973a6c38c5e5f" translate="yes" xml:space="preserve">
          <source>Introducing libphonenumber!</source>
          <target state="translated">libphonenumberを紹介します!</target>
        </trans-unit>
        <trans-unit id="a4b27df698d7725b55128784e85bbae9b949ab77" translate="yes" xml:space="preserve">
          <source>Is it a worry that there may need to be a pause and then more keys entered? Or something like 555-1212 (wait for the beep) 123?</source>
          <target state="translated">一時停止してからさらにキーを入力する必要があるかもしれないという心配はありませんか?それとも555-1212(ビープ音待ち)123みたいな感じでしょうか?</target>
        </trans-unit>
        <trans-unit id="3eb85813d690117d00ba8ce9afa7e769117ad047" translate="yes" xml:space="preserve">
          <source>It is up to you to sanitize it for display. After validating it &lt;em&gt;could&lt;/em&gt; be a number though.</source>
          <target state="translated">表示のために消毒するのはあなた次第です。 検証した後でも、それ&lt;em&gt;は&lt;/em&gt;数になる&lt;em&gt;可能性&lt;/em&gt;があります。</target>
        </trans-unit>
        <trans-unit id="d819d73918d144bf36182bd54a80f94464fc719b" translate="yes" xml:space="preserve">
          <source>It matches a 10 digit North America NANP number with optional extension. Spaces, dashes and periods are accepted delimiters.</source>
          <target state="translated">10桁の北米NANP番号にマッチし、オプションで拡張子が付いています。スペース、ダッシュ、ピリオドは区切り文字として使用できます。</target>
        </trans-unit>
        <trans-unit id="4f5bbec380484c3069324749e5a035edf5e474e6" translate="yes" xml:space="preserve">
          <source>It should be compatible with international numbers and localization formats. Do you foresee any need to allow square, curly, or angled brackets for some regions? (currently they aren't included).</source>
          <target state="translated">国際的な数字やローカリゼーション形式と互換性があるはずです。いくつかの地域で四角括弧、カーリー括弧、角括弧を使用できるようにする必要性はありますか?(現在は含まれていません)。</target>
        </trans-unit>
        <trans-unit id="e5b6a04692150ee396c21b4a57672a87a7ab4f20" translate="yes" xml:space="preserve">
          <source>It turns out that there's something of a spec for this, at least for North America, called the &lt;a href=&quot;http://en.wikipedia.org/wiki/North_American_Numbering_Plan&quot;&gt;NANP&lt;/a&gt;.</source>
          <target state="translated">これには、少なくとも北米では、 &lt;a href=&quot;http://en.wikipedia.org/wiki/North_American_Numbering_Plan&quot;&gt;NANP&lt;/a&gt;と呼ばれる仕様があることがわかります。</target>
        </trans-unit>
        <trans-unit id="6588a0770d9f9cf9c4f30b6c0b8040981a6dcb51" translate="yes" xml:space="preserve">
          <source>It works for these number formats:</source>
          <target state="translated">これらの数値形式に対応しています。</target>
        </trans-unit>
        <trans-unit id="9f40c848887d7e0847c7b4c6abe28ac113814717" translate="yes" xml:space="preserve">
          <source>Like validating email addresses, even if you have a valid result you can't know if it's assigned to someone until you try it.</source>
          <target state="translated">メールアドレスの検証と同じで、有効な結果が出ていても、それが誰かに割り当てられているかどうかは、やってみないとわかりません。</target>
        </trans-unit>
        <trans-unit id="7057878a5e038957345085ab1b05d5b33c955fd7" translate="yes" xml:space="preserve">
          <source>Link:  &lt;a href=&quot;http://www.regexr.com/3bp4b&quot;&gt;http://www.regexr.com/3bp4b&lt;/a&gt;</source>
          <target state="translated">リンク： &lt;a href=&quot;http://www.regexr.com/3bp4b&quot;&gt;http&lt;/a&gt; : //www.regexr.com/3bp4b</target>
        </trans-unit>
        <trans-unit id="71cb6484edba6b6c887668edf2ee21f03c120a6e" translate="yes" xml:space="preserve">
          <source>Make sure to use global AND multiline flags to make sure.</source>
          <target state="translated">必ずグローバルANDマルチラインフラグを使用して確認してください。</target>
        </trans-unit>
        <trans-unit id="776c1c2a1fe04524e681fe8e5cc65db0cf1e92eb" translate="yes" xml:space="preserve">
          <source>Must end with a digit, can begin with ( or + or a digit, and may contain + - ( or )</source>
          <target state="translated">数字で終わらなければならず、(または+または数字で始まり、+-(または)を含むことができます。</target>
        </trans-unit>
        <trans-unit id="0b11df816cc9038c4fd5a10dca5adfa322783d1f" translate="yes" xml:space="preserve">
          <source>My attempt at an unrestrictive regex:</source>
          <target state="translated">制約のない正規表現を試してみました。</target>
        </trans-unit>
        <trans-unit id="67ec4a620ab433ec5e022254965558a542cb2a2b" translate="yes" xml:space="preserve">
          <source>My gut feeling is reinforced by the amount of replies to this topic - that there is a virtually infinite number of solutions to this problem, none of which are going to be elegant.</source>
          <target state="translated">私の直感は、このトピックへの返信の量によって強化されています-この問題に対する解決策は事実上無限にあり、そのどれもがエレガントなものになることはないということです。</target>
        </trans-unit>
        <trans-unit id="1a37dbb17a66518011d677e5e44077ec82b6b3da" translate="yes" xml:space="preserve">
          <source>My inclination is to agree that stripping non-digits and just accepting what's there is best. Maybe to ensure at least a couple digits are present, although that does prohibit something like an alphabetic phone number &quot;ASK-JAKE&quot; for example.</source>
          <target state="translated">私の考えでは、数字以外の数字を削除して、そこにあるものを受け入れるのが最善だということに同意したいと思います。多分、少なくとも数桁の数字が存在することを確認するために、例えばアルファベットの電話番号「アスク・ジャケ」のようなものを禁止していますが。</target>
        </trans-unit>
        <trans-unit id="dab2d18b0aca7dc5ec44365bf7d787cfa5b0bdce" translate="yes" xml:space="preserve">
          <source>Negative:</source>
          <target state="translated">Negative:</target>
        </trans-unit>
        <trans-unit id="95942b328963edd3d4351c3c56ba69c40d14e793" translate="yes" xml:space="preserve">
          <source>North America is straightforward, and for international I prefer to use an 'idiomatic' pattern which covers the ways in which people specify and remember their numbers:</source>
          <target state="translated">北米ではストレートで、国際的には、人々が自分の番号を指定して記憶する方法をカバーする「慣用句」パターンを使うのが好きです。</target>
        </trans-unit>
        <trans-unit id="d51e891f1e5d2aee821d8fd4aa7ce56bb38b96a4" translate="yes" xml:space="preserve">
          <source>Note that it doesn't have any special rules for how many digits, or what numbers are valid in those digits, it just verifies that only digits, parenthesis, dashes, plus, space, pound,  asterisk, period, comma, or the letters &lt;code&gt;e&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;t&lt;/code&gt; are present.</source>
          <target state="translated">桁数、またはそれらの桁で有効な数値について特別な規則はないことに注意してください。数字、括弧、ダッシュ、プラス、スペース、ポンド、アスタリスク、ピリオド、コンマ、または文字のみが検証されます。 &lt;code&gt;e&lt;/code&gt; 、 &lt;code&gt;x&lt;/code&gt; 、 &lt;code&gt;t&lt;/code&gt; が存在します。</target>
        </trans-unit>
        <trans-unit id="adeacbad8873a5fd52f8f94e72b56b3d1471dbd6" translate="yes" xml:space="preserve">
          <source>Note that stripping &lt;code&gt;()&lt;/code&gt; characters does not work for a style of writing UK numbers that is common: &lt;code&gt;+44 (0) 1234 567890&lt;/code&gt; which means dial either the international number:</source>
          <target state="translated">&lt;code&gt;()&lt;/code&gt; 文字を取り除くことは、一般的な英国の番号を書くスタイルでは機能しないことに注意してください： &lt;code&gt;+44 (0) 1234 567890&lt;/code&gt; これは、国際番号をダイヤルすることを意味します。</target>
        </trans-unit>
        <trans-unit id="ca024c03255c776ed9cde0669572cfeef6b6693f" translate="yes" xml:space="preserve">
          <source>On $n, it saves:</source>
          <target state="translated">nドルでは、それは節約になります。</target>
        </trans-unit>
        <trans-unit id="57b3f19efda3db9541743ca20805fdc3cc6037b9" translate="yes" xml:space="preserve">
          <source>Original source: &lt;a href=&quot;http://www.regexr.com/38pvb&quot;&gt;http://www.regexr.com/38pvb&lt;/a&gt;</source>
          <target state="translated">元のソース： &lt;a href=&quot;http://www.regexr.com/38pvb&quot;&gt;http&lt;/a&gt; : //www.regexr.com/38pvb</target>
        </trans-unit>
        <trans-unit id="7daf403c7589f4927632ed3b6af762a992f09b78" translate="yes" xml:space="preserve">
          <source>PHP</source>
          <target state="translated">PHP</target>
        </trans-unit>
        <trans-unit id="bb64f436897b16df14b3e811de773d2ebaf52e22" translate="yes" xml:space="preserve">
          <source>PHP function to replace all phone numbers with tel: links (in case anyone is curious):</source>
          <target state="translated">すべての電話番号をtel:リンクに置き換えるPHP関数(気になる人がいる場合に備えて)。</target>
        </trans-unit>
        <trans-unit id="0ea51c7a617654993771490ea9e81d30a03af872" translate="yes" xml:space="preserve">
          <source>Parsing/formatting/validating phone numbers for all countries/regions of the world.</source>
          <target state="translated">世界のすべての国と地域のための電話番号を検証するParsingformatting。</target>
        </trans-unit>
        <trans-unit id="8961d3bf56ef1c18ef5c831ba0838e8b1f85e5de" translate="yes" xml:space="preserve">
          <source>Phone number</source>
          <target state="translated">電話番号</target>
        </trans-unit>
        <trans-unit id="78efb8bbd67c1896fb22b7034ecc0ee8da90f38c" translate="yes" xml:space="preserve">
          <source>Positive:</source>
          <target state="translated">Positive:</target>
        </trans-unit>
        <trans-unit id="8e54c9b1c2dfef11b55a9b78e13d7252f5ad62a5" translate="yes" xml:space="preserve">
          <source>Quick cheat sheet</source>
          <target state="translated">クイックチートシート</target>
        </trans-unit>
        <trans-unit id="a16b01bb4a0955a42f3184d251b7508ef3590ed5" translate="yes" xml:space="preserve">
          <source>Regex:</source>
          <target state="translated">Regex:</target>
        </trans-unit>
        <trans-unit id="0c7929be80317c9b5ed14c7e723d5b1c7863b671" translate="yes" xml:space="preserve">
          <source>Rejects:</source>
          <target state="translated">Rejects:</target>
        </trans-unit>
        <trans-unit id="5db41536d0a17a221c98fbfddb6fbfb0466e104f" translate="yes" xml:space="preserve">
          <source>So far, it's been working with everything they've thrown at it, but if errors come up, I'll update this answer.</source>
          <target state="translated">これまでのところ、それは彼らが投げたすべてのもので動作していますが、エラーが発生した場合は、私はこの回答を更新します。</target>
        </trans-unit>
        <trans-unit id="0dd4fff1de550144cf86eec0812f147ee12d15f7" translate="yes" xml:space="preserve">
          <source>So not only do you learn if the phone number is valid (which it is), but you also get consistent phone number formatting in your locale.</source>
          <target state="translated">そのため、電話番号が有効であるかどうかを学ぶだけでなく(有効である)、あなたのロケールで一貫した電話番号の書式を取得することができます。</target>
        </trans-unit>
        <trans-unit id="4f665cfaf200a12ba9fa162f8ca4bf502423e54b" translate="yes" xml:space="preserve">
          <source>Start the expression:  &lt;code&gt;/^&lt;/code&gt;</source>
          <target state="translated">式を開始します： &lt;code&gt;/^&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd1fbc9a4c8077728d7d41f50640c260a78a08c1" translate="yes" xml:space="preserve">
          <source>Test it here: &lt;a href=&quot;http://refiddle.com/1ox&quot;&gt;http://refiddle.com/1ox&lt;/a&gt;</source>
          <target state="translated">ここでテストしてください： &lt;a href=&quot;http://refiddle.com/1ox&quot;&gt;http&lt;/a&gt; : //refiddle.com/1ox</target>
        </trans-unit>
        <trans-unit id="3dd5ed2b006a2c4e4eda78dea03343c7eac1b057" translate="yes" xml:space="preserve">
          <source>The North American pattern makes sure that if one parenthesis is included both are.  The international accounts for an optional initial '+' and country code.  After that, you're in the idiom.  Valid matches would be:</source>
          <target state="translated">北米パターンでは、1つの括弧が含まれている場合は両方が含まれていることを確認します。国際は任意の頭文字「+」と国番号を勘定します。その後は慣用句になります。有効なマッチは次のようになります。</target>
        </trans-unit>
        <trans-unit id="7fd81a8aaf6a57b5ddc89278b1a6384f8deb0e42" translate="yes" xml:space="preserve">
          <source>The biggest problem with phone number validation is it is very culturally dependant.</source>
          <target state="translated">電話番号認証の最大の問題点は、それが非常に文化的に依存していることです。</target>
        </trans-unit>
        <trans-unit id="cdbd51aa8cc8844a78771ccfa80d1d540ebac280" translate="yes" xml:space="preserve">
          <source>The first one will match ANY two digit country code, while the second one will match the Philippine country code exclusively.</source>
          <target state="translated">最初のものはどんな2桁の国コードにもマッチしますが、2番目のものはフィリピンの国コードだけにマッチします。</target>
        </trans-unit>
        <trans-unit id="62692686df1c5b3b8d5898482ac3d6f07ff6614f" translate="yes" xml:space="preserve">
          <source>The following regex will catch widely used number and character combinations in a variety of global phone number formats:</source>
          <target state="translated">以下の正規表現は、様々なグローバル電話番号フォーマットで広く使われている数字と文字の組み合わせをキャッチします。</target>
        </trans-unit>
        <trans-unit id="8f012cc502a1dd6af0cfc11025b7261b5cee93c2" translate="yes" xml:space="preserve">
          <source>The question should probably be specified in a bit more detail to explain the purpose of validating the numbers.  For instance, 911 is a valid number in the US, but 911x isn't for any value of x.  That's so that the phone company can calculate when you are done dialing.  There are several variations on this issue.  But your regex doesn't check the area code portion, so that doesn't seem to be a concern.</source>
          <target state="translated">この質問は、番号を有効にする目的を説明するために、もう少し詳しく指定すべきでしょう。例えば、911はアメリカでは有効な番号ですが、911xはxの値には対応していません。これは電話会社があなたがダイヤルし終わったときに計算できるようにするためです。この問題にはいくつかのバリエーションがあります。しかし、あなたの正規表現は市外局番の部分をチェックしていないので、それは問題ではないようです。</target>
        </trans-unit>
        <trans-unit id="1f477bd6da6989ac5eedab1067bc8f2e905fa3fb" translate="yes" xml:space="preserve">
          <source>Then when you display, reformat to your hearts content. e.g.</source>
          <target state="translated">そして、表示するときには、あなたの心のコンテンツに再フォーマットします。</target>
        </trans-unit>
        <trans-unit id="ac2c585e0fd46195e564ef49c2fcf2718c0161e3" translate="yes" xml:space="preserve">
          <source>Then, you end up with values like:</source>
          <target state="translated">といった値になってしまいます。</target>
        </trans-unit>
        <trans-unit id="4672a7b3fc8f3d7ccfae109d1c8e1a317b117d04" translate="yes" xml:space="preserve">
          <source>There is also a JQuery solution on that link.</source>
          <target state="translated">そのリンク先にもJQueryのソリューションがあります。</target>
        </trans-unit>
        <trans-unit id="15129efc19b445979961f54aa768b66bb0b78f10" translate="yes" xml:space="preserve">
          <source>They even go over how to mask phone number inputs in their tutorial.</source>
          <target state="translated">彼らはチュートリアルで電話番号の入力をマスクする方法についても説明しています。</target>
        </trans-unit>
        <trans-unit id="f75317c94b401f28a1651a9ef34023d46532b9a7" translate="yes" xml:space="preserve">
          <source>This is a simple Regular Expression pattern for Philippine Mobile Phone Numbers:</source>
          <target state="translated">フィリピンの携帯電話番号の簡単な正規表現パターンです。</target>
        </trans-unit>
        <trans-unit id="a70496b978a05b65591b54c2cb906b99688e1181" translate="yes" xml:space="preserve">
          <source>This matches:</source>
          <target state="translated">これは一致します。</target>
        </trans-unit>
        <trans-unit id="96de1b265278b3f71ca16feea1983e3c0ab2c655" translate="yes" xml:space="preserve">
          <source>This may be biased as my experience is limited to North America, Europe and a small bit of Asia.</source>
          <target state="translated">私の経験は北米、ヨーロッパ、アジアのほんの少しに限られているので、偏っているかもしれません。</target>
        </trans-unit>
        <trans-unit id="d5870bfaa0b34c1097aef11523676e1529cef19b" translate="yes" xml:space="preserve">
          <source>Unless you are certain that you are always going to be accepting numbers from one locale, and they are always going to be in one format, I would heavily suggest not writing your own code for this, and using libphonenumber for validating and displaying phone numbers.</source>
          <target state="translated">あなたが常に一つのロケールからの番号を受け入れ、それらが常に一つの形式であることを確信していない限り、私はこれのために独自のコードを書かず、電話番号の検証と表示に libphonenumber を使用することを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="dbce309ff66488b404ed28d71ac60ebe021bd617" translate="yes" xml:space="preserve">
          <source>Use the first one to keep the digit groups together, which may give formatting clues. Use the second one to trivially toss all non-digits.</source>
          <target state="translated">最初のものを使用して、数字のグループをまとめておくと、書式設定の手がかりになるかもしれません。2番目の数字を使用して、すべての非数字を簡単に捨てることができます。</target>
        </trans-unit>
        <trans-unit id="cdfacd1928d4950d5111c4de6bc9d502c037b588" translate="yes" xml:space="preserve">
          <source>Using one of your more complex examples, &lt;code&gt;1-234-567-8901 x1234&lt;/code&gt;, you get &lt;a href=&quot;https://libphonenumber.appspot.com/phonenumberparser?number=234-567-8901+x123&amp;amp;country=US&amp;amp;geocodingLocale=en-US&quot;&gt;the following data out of &lt;code&gt;libphonenumber&lt;/code&gt; (link to online demo)&lt;/a&gt;:</source>
          <target state="translated">より複雑な例の1つである &lt;code&gt;1-234-567-8901 x1234&lt;/code&gt; を &lt;a href=&quot;https://libphonenumber.appspot.com/phonenumberparser?number=234-567-8901+x123&amp;amp;country=US&amp;amp;geocodingLocale=en-US&quot;&gt;使用して、 &lt;code&gt;libphonenumber&lt;/code&gt; から次のデータ&lt;/a&gt;を取得します（オンラインデモへのリンク） 。</target>
        </trans-unit>
        <trans-unit id="bfbdab4a2b4c45896d02b09374e7fedf55af54e2" translate="yes" xml:space="preserve">
          <source>Worst case scenario if the user had to pull an unformatted number from the XML file, they would still just type the numbers into the phone's numberpad &lt;code&gt;012345678x5&lt;/code&gt;, no real reason to keep it pretty. That kind of RegEx would come out something like this for me:</source>
          <target state="translated">最悪のシナリオでは、ユーザーがXMLファイルからフォーマットされていない番号を取得する必要がある場合でも、番号を電話のテンキー &lt;code&gt;012345678x5&lt;/code&gt; に入力するだけです。 この種のRegExは、私にとって次のようなものになります。</target>
        </trans-unit>
        <trans-unit id="b47b766208f8ce2f500bfcf69a6ee1c98720e422" translate="yes" xml:space="preserve">
          <source>You can change \W* to \s*\W?\s* in the regex to tighten it up a bit.  I wasn't thinking of the regex in terms of, say, validating user input on a form when I wrote it, but this change makes it possible to use the regex for that purpose.</source>
          <target state="translated">正規表現では、「\W*」を「\s*\W? 正規表現を書いているときは、ユーザの入力を検証するという意味では考えていませんでしたが、今回の変更で、そのような目的でも正規表現を使うことができるようになりました。</target>
        </trans-unit>
        <trans-unit id="d4fc38b4c1497d7649b3704f8dddf5c49b098519" translate="yes" xml:space="preserve">
          <source>You can test it on &lt;a href=&quot;https://www.regexpal.com/?fam=99127&quot;&gt;https://www.regexpal.com/?fam=99127&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.regexpal.com/?fam=99127&quot;&gt;https://www.regexpal.com/?fam=99127で&lt;/a&gt;テストできます</target>
        </trans-unit>
        <trans-unit id="77470b2cf4d80e511f5d0478505bf5f48f4b2324" translate="yes" xml:space="preserve">
          <source>You need to specify exactly what you want. What are legal delimiters? Spaces, dashes, and periods? No delimiter allowed? Can one mix delimiters (e.g., +0.111-222.3333)? How are extensions (e.g., 111-222-3333 x 44444) going to be handled? What about special numbers, like 911? Is the area code going to be optional or required?</source>
          <target state="translated">正確に指定する必要があります。法的な区切り文字とは何ですか?スペース、ダッシュ、ピリオド?区切り文字は使用できませんか? 区切り文字を混在させることはできますか? 拡張子(例:111-222-3333 x 44444)はどのように扱われますか? 911のような特殊な番号はどうなりますか? 市外局番は任意ですか、それとも必須ですか?</target>
        </trans-unit>
        <trans-unit id="c4bf0ac578f43f9354484a128538d7dfc54a322f" translate="yes" xml:space="preserve">
          <source>You would probably be better off using a Masked Input for this.  That way users can ONLY enter numbers and you can format however you see fit.  I'm not sure if this is for a web application, but if it is there is a very click jQuery plugin that offers some options for doing this.</source>
          <target state="translated">マスクド入力を使用した方が良いでしょう。そうすることで、ユーザーは数字のみを入力することができ、あなたの好きなようにフォーマットすることができます。これがWebアプリケーション用かどうかはわかりませんが、もしそうであれば、クリックするだけで入力できるjQueryプラグインがあります。</target>
        </trans-unit>
        <trans-unit id="e1fada8e271fdb48c0538ce4a226f71b9335690d" translate="yes" xml:space="preserve">
          <source>You'll have a hard time dealing with international numbers with a single/simple regex, see &lt;a href=&quot;https://stackoverflow.com/questions/41925/is-there-a-standard-for-storing-normalized-phone-numbers-in-a-database#41982&quot;&gt;this post&lt;/a&gt; on the difficulties of international (and even north american) phone numbers.</source>
          <target state="translated">あなたは単一/単純な正規表現で国際番号を扱うのに苦労するでしょう、国際（さらには北米）の電話番号の難しさに関する&lt;a href=&quot;https://stackoverflow.com/questions/41925/is-there-a-standard-for-storing-normalized-phone-numbers-in-a-database#41982&quot;&gt;この投稿&lt;/a&gt;を見てください。</target>
        </trans-unit>
        <trans-unit id="b012622b5cd106aa994e423a68f75df6af5f2f04" translate="yes" xml:space="preserve">
          <source>You'll want to parse the first few digits to determine what the country code is, then act differently based on the country.</source>
          <target state="translated">最初の数桁を解析して国コードを決定し、国によって異なる行動をとるようにします。</target>
        </trans-unit>
        <trans-unit id="91e2eeadb5278bcea65ca02c9fe718f3f9995981" translate="yes" xml:space="preserve">
          <source>You've correctly identified that it's a tricky problem...</source>
          <target state="translated">厄介な問題だと正しく認識していますね...。</target>
        </trans-unit>
        <trans-unit id="20bc79407d96acddb6ff91f963f31fb77dc39a56" translate="yes" xml:space="preserve">
          <source>is a possible number but not a valid number. It also supports countries outside the US.</source>
          <target state="translated">は可能な番号ですが、有効な番号ではありません。アメリカ以外の国にも対応しています。</target>
        </trans-unit>
        <trans-unit id="1acef3661e617a169f69157393e675bf232166c7" translate="yes" xml:space="preserve">
          <source>jQuery solution:</source>
          <target state="translated">jQueryのソリューションです。</target>
        </trans-unit>
        <trans-unit id="957cf2f4562af79ff7be8afd4a8ffa463ee6d543" translate="yes" xml:space="preserve">
          <source>libphonenumber also gives you many additional benefits, such as grabbing the location that the phone number is detected as being, and also getting the time zone information from the phone number:</source>
          <target state="translated">libphonenumberはまた、電話番号があると検出された場所を把握したり、電話番号からタイムゾーン情報を取得したりと、多くの付加的な利点を与えてくれます。</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="41fa97204f85b1ee91db07e4b13713003b0d9880" translate="yes" xml:space="preserve">
          <source>or in the UK dial &lt;code&gt;01234567890&lt;/code&gt;</source>
          <target state="translated">または英国では &lt;code&gt;01234567890&lt;/code&gt; をダイヤル</target>
        </trans-unit>
        <trans-unit id="48b9fa27e31ebdae0101f95cfe08e08db7b95200" translate="yes" xml:space="preserve">
          <source>will match these:</source>
          <target state="translated">はこれらと一致します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
