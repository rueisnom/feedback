<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/1200621">
    <body>
      <group id="1200621">
        <trans-unit id="cadc0c0784f280561b6250baabac0758d79cd080" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Another Way:&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De otra manera:&lt;/font&gt;&lt;/font&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="244d7fa9531947c7afd08896b5eba15fa961d083" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type[]&lt;/code&gt; is the &lt;em&gt;type&lt;/em&gt; of the &lt;em&gt;variable&lt;/em&gt; called name (&quot;name&quot; is called the &lt;em&gt;identifier&lt;/em&gt;).  The literal &quot;Type&quot; is the base type, and the brackets mean this is the array type of that base. Array types are in turn types of their own, which allows you to make multidimensional arrays like &lt;code&gt;Type[][]&lt;/code&gt; (the array type of Type[]). The keyword &lt;code&gt;new&lt;/code&gt; says to allocate memory for the new array.  The number between the bracket says how large the new array will be and how much memory to allocate. For instance, if Java knows that the base type &lt;code&gt;Type&lt;/code&gt; takes 32 bytes, and you want an array of size 5, it needs to internally allocate 32 * 5 = 160 bytes.</source>
          <target state="translated">&lt;code&gt;Type[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es el &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tipo&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de la &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;variable&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; llamada nombre (&quot;nombre&quot; se llama &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;identificador&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). El &quot;Tipo&quot; literal es el tipo base, y los corchetes significan que este es el tipo de matriz de esa base. Los tipos de matriz son a su vez tipos propios, lo que le permite crear matrices multidimensionales como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Type[][]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (el tipo de matriz de Tipo []). La palabra clave &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; dice asignar memoria para la nueva matriz. El n&amp;uacute;mero entre par&amp;eacute;ntesis dice qu&amp;eacute; tan grande ser&amp;aacute; la nueva matriz y cu&amp;aacute;nta memoria asignar. Por ejemplo, si Java sabe que el tipo de base &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Type&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; toma 32 bytes, y desea una matriz de tama&amp;ntilde;o 5, necesita asignar internamente 32 * 5 = 160 bytes.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5185e05a799c32e8a959f347048b2f6b0cecd4d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datatype&lt;/code&gt; should be in lower case.</source>
          <target state="translated">&lt;code&gt;datatype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; debe estar en min&amp;uacute;sculas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="234e109fd1b45d72c8300122bfec23c97b646b4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;variableName&lt;/code&gt; is a reference to the array meaning that manipulating &lt;code&gt;variableName&lt;/code&gt; will manipulate &lt;code&gt;arrayName&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;variableName&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una referencia a la matriz, lo que significa que manipular &lt;/font&gt;&lt;/font&gt; &lt;code&gt;variableName&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; manipular&amp;aacute; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;arrayName&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a2783850360e42427e548e524e84f2d0b0b3c3bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Dynamic Array:&lt;/strong&gt; No size limit is considered for this. (Pure dynamic arrays do not exist in Java. Instead, List is most encouraged)</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Matriz din&amp;aacute;mica:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no se considera un l&amp;iacute;mite de tama&amp;ntilde;o para esto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Las matrices din&amp;aacute;micas puras no existen en Java. En cambio, se recomienda List)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b8e66cca0e8c233ada64437e2e49beed1617ed74" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IMPORTANT: For referenced types, the default value stored in the array is null.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;IMPORTANTE: Para los tipos referenciados, el valor predeterminado almacenado en la matriz es nulo.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9544ba285ba91e391066529df8f36822f06c6b6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Initializing an array means specifying the size of it.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Inicializar una matriz significa especificar el tama&amp;ntilde;o de la misma.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d503246f642baf69b096a25b60a26d07f3fea8fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Instantiating an Array in Java&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Instanciar una matriz en Java&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c88b408ed39fa66458056145fee9cfcc7d539f6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;One-Dimensional Arrays :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Matrices unidimensionales:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="96025033606dc9bbc2268b665a0b4d82540d86cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Similar for multi-dimensional arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Similar para matrices multidimensionales&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6aad8a0da464b440805dc35fd21c8cf8dab98940" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Static Array:&lt;/strong&gt; Fixed size array (Its size should be declared at start and can not be changed later)</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Matriz est&amp;aacute;tica:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; matriz de tama&amp;ntilde;o fijo (su tama&amp;ntilde;o debe declararse al inicio y no se puede cambiar m&amp;aacute;s adelante)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db22b2c5126204d225a05684d4dcf50ea5529c8f" translate="yes" xml:space="preserve">
          <source>Also, in case you want something more dynamic there is the List interface.  This will not perform as well, but is more flexible:</source>
          <target state="translated">Además,en caso de que quieras algo más dinámico,está la interfaz de la Lista.Esto no funcionará tan bien,pero es más flexible:</target>
        </trans-unit>
        <trans-unit id="326dff1f84cdca33ec4cd86f8765659aceea2acf" translate="yes" xml:space="preserve">
          <source>Alternatively,</source>
          <target state="translated">Alternatively,</target>
        </trans-unit>
        <trans-unit id="c85c58dec99e5ab948d510b95570ff7548c7b434" translate="yes" xml:space="preserve">
          <source>Alternatively:</source>
          <target state="translated">Alternatively:</target>
        </trans-unit>
        <trans-unit id="ee43268c689363ed09ec9912c144be55d59b1dd4" translate="yes" xml:space="preserve">
          <source>An array of length 0</source>
          <target state="translated">Un conjunto de longitudes 0</target>
        </trans-unit>
        <trans-unit id="164a20a8f3a572ab64c6fa43f452d94ab4407d27" translate="yes" xml:space="preserve">
          <source>And this one, for an initialized array:</source>
          <target state="translated">Y éste,para una matriz inicializada:</target>
        </trans-unit>
        <trans-unit id="95dc0492001977cf1b2f1f04376b2fc0ad777990" translate="yes" xml:space="preserve">
          <source>Another important feature is &lt;strong&gt;covariant&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Otra caracter&amp;iacute;stica importante es la &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;covariante.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d71f7145f690775938559b04d64509bcfb08592" translate="yes" xml:space="preserve">
          <source>Another way to declare and initialize ArrayList:</source>
          <target state="translated">Otra forma de declarar e inicializar ArrayList:</target>
        </trans-unit>
        <trans-unit id="42da06e2e5c8fe1ae09c7964dd817c6acef4f50a" translate="yes" xml:space="preserve">
          <source>Array can contains primitives data types as well as objects of a class depending on the definition of array. In case of primitives data types, the actual values are stored in contiguous memory locations. In case of objects of a class, the actual objects are stored in heap segment.</source>
          <target state="translated">La matriz puede contener tipos de datos primitivos así como objetos de una clase dependiendo de la definición de matriz.En el caso de los tipos de datos primitivos,los valores reales se almacenan en lugares de memoria contiguos.En el caso de los objetos de una clase,los objetos reales se almacenan en un segmento de pila.</target>
        </trans-unit>
        <trans-unit id="accefd791cac597bc5fa0f35a3b89e51b59ae373" translate="yes" xml:space="preserve">
          <source>Array has two basic types.</source>
          <target state="translated">Array tiene dos tipos básicos.</target>
        </trans-unit>
        <trans-unit id="6d5569a030423998b7630c054ede604adf8dad8f" translate="yes" xml:space="preserve">
          <source>Array is a sequential list of items</source>
          <target state="translated">La matriz es una lista secuencial de elementos</target>
        </trans-unit>
        <trans-unit id="4e322480a537d8262416f69ef614e4e5b6cf8be3" translate="yes" xml:space="preserve">
          <source>Assign values to the array:</source>
          <target state="translated">Asignar valores a la matriz:</target>
        </trans-unit>
        <trans-unit id="33497ba90d7026a7fa3446f9e392e55fde88446a" translate="yes" xml:space="preserve">
          <source>But this third one shows the property of anonymous array-object creation which is pointed by a reference variable &quot;myIntArray&quot;, so if we write just &quot;new int[]{1,2,3};&quot; then this is how anonymous array-object can be created.</source>
          <target state="translated">Pero este tercero muestra la propiedad de la creación de objetos de matriz anónima que es apuntada por una variable de referencia &quot;myIntArray&quot;,así que si escribimos sólo &quot;new int[]{1,2,3};&quot; entonces así es como se puede crear una matriz-objeto anónima.</target>
        </trans-unit>
        <trans-unit id="129f49de1cc02398c974caca314258ea1fb39ca3" translate="yes" xml:space="preserve">
          <source>But when you do it by &quot;method b&quot; you will not have to enter the values manually.</source>
          <target state="translated">Pero si lo haces por el &quot;método b&quot; no tendrás que introducir los valores manualmente.</target>
        </trans-unit>
        <trans-unit id="5ed8156d61c144fe241113791b538fdeadc42318" translate="yes" xml:space="preserve">
          <source>Create a random array for integers between [-50, 50] and for doubles [0, 1E17]:</source>
          <target state="translated">Crear una matriz aleatoria para números enteros entre [-50,50]y para dobles [0,1E17]:</target>
        </trans-unit>
        <trans-unit id="d6f37721bc043c8dd7475e584d1b0bdd4b256c24" translate="yes" xml:space="preserve">
          <source>Declaration</source>
          <target state="translated">Declaration</target>
        </trans-unit>
        <trans-unit id="f2bd05b5ef32bab86711a55b71b969b8c2b30fa7" translate="yes" xml:space="preserve">
          <source>Declare Array: &lt;code&gt;int[] arr;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Declarar matriz: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[] arr;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3106a3135287ef9d22ffbd2cc3086424c08e9915" translate="yes" xml:space="preserve">
          <source>Declare Multidimensional Array: &lt;code&gt;int[][] arr;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Declarar matriz multidimensional: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[][] arr;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7fdc5100d36eda5bebf1cea14b7ebe26ab8d8422" translate="yes" xml:space="preserve">
          <source>Declare and define an array</source>
          <target state="translated">Declarar y definir una matriz</target>
        </trans-unit>
        <trans-unit id="1cb8e47d668ae55028206105f8380afcc72c6f67" translate="yes" xml:space="preserve">
          <source>Declare and initialize for Java 8 and later. Create a simple integer array:</source>
          <target state="translated">Declarar e inicializar para Java 8 y más tarde.Crear un simple arreglo de números enteros:</target>
        </trans-unit>
        <trans-unit id="5c2dde373686791bddfe10dba25e3cdf0e1a3887" translate="yes" xml:space="preserve">
          <source>Declaring an array of object references:</source>
          <target state="translated">Declarando una serie de referencias de objetos:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Ampliar fragmento</target>
        </trans-unit>
        <trans-unit id="9c2d4702ec71996e044b22d97312108a897d83ce" translate="yes" xml:space="preserve">
          <source>For Accessing:</source>
          <target state="translated">Para acceder:</target>
        </trans-unit>
        <trans-unit id="58a696793c5e76ec79ef00906829b55fdf22d7ce" translate="yes" xml:space="preserve">
          <source>For Example</source>
          <target state="translated">Por ejemplo</target>
        </trans-unit>
        <trans-unit id="6784110dbf80d0bc4ac8a3483a105ff28115ba16" translate="yes" xml:space="preserve">
          <source>For String[] you must specify a constructor:</source>
          <target state="translated">Para String[]se debe especificar un constructor:</target>
        </trans-unit>
        <trans-unit id="f8988a2e0164b227509109c9e7952fd00171df7a" translate="yes" xml:space="preserve">
          <source>For classes, for example &lt;code&gt;String&lt;/code&gt;, it's the same:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para las clases, por ejemplo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , es lo mismo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6356ff71c59019c4b11cac3fd1c3b9558c879bc1" translate="yes" xml:space="preserve">
          <source>For creating arrays of class Objects you can use the &lt;code&gt;java.util.ArrayList&lt;/code&gt;. to define an array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para crear matrices de objetos de clase, puede usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;java.util.ArrayList&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;para definir una matriz:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="28f37995efbf25f1c4abc3377034c7ce5fda6de6" translate="yes" xml:space="preserve">
          <source>For explanation see multidimensional array detail at &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/java/nutsandbolts/arrays.html&quot;&gt;the official java tutorials&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para obtener una explicaci&amp;oacute;n, consulte los detalles de la matriz multidimensional en &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/java/nutsandbolts/arrays.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;los tutoriales oficiales de Java&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc6da86b5ed19cada5575e249da9bf0ba13d288d" translate="yes" xml:space="preserve">
          <source>For float double, the format of array will be same as integer.</source>
          <target state="translated">En el caso del doble flotante,el formato de la matriz será el mismo que el del entero.</target>
        </trans-unit>
        <trans-unit id="29e2d4316b320a43d5dd6309a7564aa20ec9bd2e" translate="yes" xml:space="preserve">
          <source>For primitive types:</source>
          <target state="translated">Para los tipos primitivos:</target>
        </trans-unit>
        <trans-unit id="6d804293fd89cde44bb0706729ad99a47ffe9ea8" translate="yes" xml:space="preserve">
          <source>How do I declare and initialize an array in Java</source>
          <target state="translated">¿Cómo declaro e inicializo una matriz en Java</target>
        </trans-unit>
        <trans-unit id="bca538f5c5fba391e8b7ce179647090a2c98f8a4" translate="yes" xml:space="preserve">
          <source>How do I declare and initialize an array in Java?</source>
          <target state="translated">¿Cómo declaro e inicializo una matriz en Java?</target>
        </trans-unit>
        <trans-unit id="ca4e9151c2cb01cd4825f582341c7a661af772a3" translate="yes" xml:space="preserve">
          <source>I find it is helpful if you understand each part:</source>
          <target state="translated">Creo que es útil que entiendas cada parte:</target>
        </trans-unit>
        <trans-unit id="e4335d0765b6b0af8090b872edcfdecfcaa215fd" translate="yes" xml:space="preserve">
          <source>If it's a character array:</source>
          <target state="translated">Si es un conjunto de personajes:</target>
        </trans-unit>
        <trans-unit id="a5e3f7f8fe2da5acf770608fc5cf8d303236b695" translate="yes" xml:space="preserve">
          <source>If it's a string array:</source>
          <target state="translated">Si es un conjunto de cuerdas:</target>
        </trans-unit>
        <trans-unit id="9d0e02b3b82a035bde9f6a609898ef34aacf5115" translate="yes" xml:space="preserve">
          <source>If it's an object, then it's the same concept</source>
          <target state="translated">Si es un objeto,entonces es el mismo concepto</target>
        </trans-unit>
        <trans-unit id="3e1f7f40a5c066553fb3427ac877638a4965fdc4" translate="yes" xml:space="preserve">
          <source>If we just write:</source>
          <target state="translated">Si sólo escribimos:</target>
        </trans-unit>
        <trans-unit id="32240437bf04caf5360119393dd11b250037631a" translate="yes" xml:space="preserve">
          <source>If you want to create arrays using reflections then you can do like this:</source>
          <target state="translated">Si quieres crear matrices usando reflejos,puedes hacerlo así:</target>
        </trans-unit>
        <trans-unit id="454396ca246efda9bbdcb0585f168bec978eef8c" translate="yes" xml:space="preserve">
          <source>In Java 10</source>
          <target state="translated">En Java 10</target>
        </trans-unit>
        <trans-unit id="d102853cfe5d871bc5b70dbb3706e71ea57d72ca" translate="yes" xml:space="preserve">
          <source>In Java 8 you can use like this.</source>
          <target state="translated">En Java 8 se puede usar así.</target>
        </trans-unit>
        <trans-unit id="fbb9c43b3fb09b2b5bb38abcc10762c48f28e4e9" translate="yes" xml:space="preserve">
          <source>In Java 9</source>
          <target state="translated">En Java 9</target>
        </trans-unit>
        <trans-unit id="4b7d5fa9337591e86f852a15cfbc8ea81641be0c" translate="yes" xml:space="preserve">
          <source>In case of objects, you need to either assign it to &lt;code&gt;null&lt;/code&gt; to initialize them using &lt;code&gt;new Type(..)&lt;/code&gt;, classes like &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;Integer&lt;/code&gt; are special cases that will be handled as following</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En el caso de los objetos, debe asignarlo a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para inicializarlos con un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Type(..)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , clases como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; e &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; son casos especiales que se manejar&amp;aacute;n de la siguiente manera&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="97c1bbd47adbba43089a0a1da92a7b8dda415aae" translate="yes" xml:space="preserve">
          <source>In general you can create arrays that's &lt;code&gt;M&lt;/code&gt; dimensional</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En general, puede crear matrices que sean &lt;/font&gt;&lt;/font&gt; &lt;code&gt;M&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; dimensionales&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="74550664301794d02b0edd4f63d72b12d5a5184f" translate="yes" xml:space="preserve">
          <source>Initialise and provide data to the array</source>
          <target state="translated">Inicializar y proporcionar datos a la matriz</target>
        </trans-unit>
        <trans-unit id="68fa16ffd48f366e4fa8d57fea78ff03fcab0191" translate="yes" xml:space="preserve">
          <source>Initialization</source>
          <target state="translated">Initialization</target>
        </trans-unit>
        <trans-unit id="e82891031aa39a2eddaad402ebf9dcff46989374" translate="yes" xml:space="preserve">
          <source>Initialize Array: &lt;code&gt;int[] arr = new int[10];&lt;/code&gt; 10 represents the number of elements allowed in the array</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Inicializar matriz: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[] arr = new int[10];&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;10 representa el n&amp;uacute;mero de elementos permitidos en la matriz&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8524a047fa9e7ee5a67dc4e3cc0764a7390faf0a" translate="yes" xml:space="preserve">
          <source>Initialize Multidimensional Array: &lt;code&gt;int[][] arr = new int[10][17];&lt;/code&gt; 10 rows and 17 columns and 170 elements because 10 times 17 is 170.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Inicializar matriz multidimensional: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[][] arr = new int[10][17];&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;10 filas y 17 columnas y 170 elementos porque 10 veces 17 es 170.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="07c42be23d589c822de15db4e756dbb3fb436370" translate="yes" xml:space="preserve">
          <source>Inside the method, &lt;code&gt;varargs&lt;/code&gt; is treated as a normal &lt;code&gt;int[]&lt;/code&gt;. &lt;code&gt;Type...&lt;/code&gt; can only be used in method parameters, so &lt;code&gt;int... i = new int[] {}&lt;/code&gt; will not compile.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Dentro del m&amp;eacute;todo, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;varargs&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se trata como un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; normal &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Type...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; solo se puede usar en par&amp;aacute;metros de m&amp;eacute;todo, por lo que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int... i = new int[] {}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no se compilar&amp;aacute;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a1f9655ab6910087005e63876eb03ed0b470ef46" translate="yes" xml:space="preserve">
          <source>It's absolutely fine if you put one box bracket at the end:</source>
          <target state="translated">Está absolutamente bien si pones un soporte de caja al final:</target>
        </trans-unit>
        <trans-unit id="2a5ba07490985c0b12beb0682f16574e89b75bc1" translate="yes" xml:space="preserve">
          <source>It's not mandatory that each inner element is of the same size.</source>
          <target state="translated">No es obligatorio que cada elemento interno sea del mismo tamaño.</target>
        </trans-unit>
        <trans-unit id="e9035ff630424c0ba544af7be0e2b2871bd7369e" translate="yes" xml:space="preserve">
          <source>It's very easy to declare and initialize an array.
For example, you want to save five integer elements which are 1, 2, 3, 4, and 5 in an array. You can do it in the following way:</source>
          <target state="translated">Es muy fácil declarar e inicializar una matriz.Por ejemplo,quieres guardar cinco elementos enteros que son 1,2,3,4 y 5 en un array.Puedes hacerlo de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="bb9b7d5821c04bb3fa00f80ad8362a3a43b1b115" translate="yes" xml:space="preserve">
          <source>It's worthy to note that creating an &lt;code&gt;M&lt;/code&gt; dimensional array is expensive in terms of Space. Since when you create an &lt;code&gt;M&lt;/code&gt; dimensional array with &lt;code&gt;N&lt;/code&gt; on all the dimensions, The total size of the array is bigger than &lt;code&gt;N^M&lt;/code&gt;, since each array has a reference, and at the M-dimension there is an (M-1)-dimensional array of references. The total size is as following</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vale la pena se&amp;ntilde;alar que crear una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;matriz dimensional &lt;/font&gt;&lt;/font&gt; &lt;code&gt;M&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es costoso en t&amp;eacute;rminos de espacio. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Desde cuando crea una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;matriz &lt;/font&gt;&lt;/font&gt; &lt;code&gt;M&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; dimensional con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;N&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en todas las dimensiones, el tama&amp;ntilde;o total de la matriz es mayor que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;N^M&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , ya que cada matriz tiene una referencia, y en la dimensi&amp;oacute;n M hay un (M-1) - matriz dimensional de referencias. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El tama&amp;ntilde;o total es el siguiente&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a9d638ce5bf60587999d44aed72b74552ba37415" translate="yes" xml:space="preserve">
          <source>Multidimensional Arrays</source>
          <target state="translated">Arreglos multidimensionales</target>
        </trans-unit>
        <trans-unit id="1ea1e4280a4c5f8ce40c94ad05af1e7eb5fd0eae" translate="yes" xml:space="preserve">
          <source>Multidimensional array</source>
          <target state="translated">Matriz multidimensional</target>
        </trans-unit>
        <trans-unit id="a9967ce7963d6e652a643d81a5ccb9bedc6e8951" translate="yes" xml:space="preserve">
          <source>Multidimensional arrays are much harder to deal with. Essentially, a 2D array is an array of arrays. &lt;code&gt;int[][]&lt;/code&gt; means an array of &lt;code&gt;int[]&lt;/code&gt;s. The key is that if an &lt;code&gt;int[][]&lt;/code&gt; is declared as &lt;code&gt;int[x][y]&lt;/code&gt;, the maximum index is &lt;code&gt;i[x-1][y-1]&lt;/code&gt;. Essentially, a rectangular &lt;code&gt;int[3][5]&lt;/code&gt; is:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las matrices multidimensionales son mucho m&amp;aacute;s dif&amp;iacute;ciles de manejar. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esencialmente, una matriz 2D es una matriz de matrices. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[][]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; significa una matriz de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; s. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La clave es que si un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[][]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se declara como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[x][y]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , el &amp;iacute;ndice m&amp;aacute;ximo es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i[x-1][y-1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esencialmente, un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[3][5]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; rectangular &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[3] [5]&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5fccf61b52eaa9c56e366ab05398b42ff4557195" translate="yes" xml:space="preserve">
          <source>Multidimensional arrays:</source>
          <target state="translated">Matrices multidimensionales:</target>
        </trans-unit>
        <trans-unit id="90a418e3e8f324b5269483957bf28079362cd734" translate="yes" xml:space="preserve">
          <source>Note that in method parameters, &lt;code&gt;...&lt;/code&gt; indicates &lt;code&gt;variable arguments&lt;/code&gt;. Essentially, any number of parameters is fine. It's easier to explain with code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que en los par&amp;aacute;metros del m&amp;eacute;todo, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; indica &lt;/font&gt;&lt;/font&gt; &lt;code&gt;variable arguments&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esencialmente, cualquier n&amp;uacute;mero de par&amp;aacute;metros est&amp;aacute; bien. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es m&amp;aacute;s f&amp;aacute;cil de explicar con c&amp;oacute;digo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="abca571142ffdc6c46ab2ec1d093c6f96b4ecc6e" translate="yes" xml:space="preserve">
          <source>Note that when passing an &lt;code&gt;int[]&lt;/code&gt; to a method (or any other &lt;code&gt;Type[]&lt;/code&gt;), you cannot use the third way. In the statement &lt;code&gt;int[] i = *{a, b, c, d, etc}*&lt;/code&gt;, the compiler assumes that the &lt;code&gt;{...}&lt;/code&gt; means an &lt;code&gt;int[]&lt;/code&gt;. But that is because you are declaring a variable. When passing an array to a method, the declaration must either be &lt;code&gt;new Type[capacity]&lt;/code&gt; or &lt;code&gt;new Type[] {...}&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que al pasar un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a un m&amp;eacute;todo (o cualquier otro &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Type[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), no puede usar la tercera forma. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En la instrucci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[] i = *{a, b, c, d, etc}*&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , el compilador supone que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{...}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; significa un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero eso es porque est&amp;aacute;s declarando una variable. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Al pasar una matriz a un m&amp;eacute;todo, la declaraci&amp;oacute;n debe ser un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Type[capacity]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Type[] {...}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">Note:</target>
        </trans-unit>
        <trans-unit id="a57eb5af2c5c4dfb42fe10e5f6623498ba1807a3" translate="yes" xml:space="preserve">
          <source>Note: For convenience  int[] num is preferable because it clearly tells that you are talking here about array. Otherwise no difference. Not at all.</source>
          <target state="translated">Nota:Por conveniencia int[]num es preferible porque dice claramente que se trata de un arreglo.De lo contrario no hay diferencia.No hay ninguna diferencia.</target>
        </trans-unit>
        <trans-unit id="cfe8dc71bda8259f167ad25591968e0d5b9e8d22" translate="yes" xml:space="preserve">
          <source>Now, the following also shows the declaration as well as initialization of the array:</source>
          <target state="translated">Ahora,lo siguiente también muestra la declaración así como la inicialización de la matriz:</target>
        </trans-unit>
        <trans-unit id="0ff3b45138376d04f91d643b71e4326d0b67670d" translate="yes" xml:space="preserve">
          <source>One Dimensional Array</source>
          <target state="translated">Un conjunto unidimensional</target>
        </trans-unit>
        <trans-unit id="e72184f55cc026514b7160d78c3c5aef63c2a050" translate="yes" xml:space="preserve">
          <source>Or</source>
          <target state="translated">Or</target>
        </trans-unit>
        <trans-unit id="c2c7848cab8e1aa876905a1aa28f78325e17b185" translate="yes" xml:space="preserve">
          <source>Or (less preferred)</source>
          <target state="translated">O (menos preferido)</target>
        </trans-unit>
        <trans-unit id="f98f55e894bf6c6d3b253f45c662432464823fd0" translate="yes" xml:space="preserve">
          <source>Power-of-two sequence:</source>
          <target state="translated">Secuencia de potencia de dos:</target>
        </trans-unit>
        <trans-unit id="c1709a0f66395b5233316c1b9c569cdce6381f00" translate="yes" xml:space="preserve">
          <source>Ragged Array (or Non-rectangular Array)</source>
          <target state="translated">Conjunto irregular (o conjunto no rectangular)</target>
        </trans-unit>
        <trans-unit id="d4bf874fb137eeaf177ce8ff80cba48e13ea6b4b" translate="yes" xml:space="preserve">
          <source>Ragged arrays are multidimensional arrays.</source>
          <target state="translated">Las matrices irregulares son matrices multidimensionales.</target>
        </trans-unit>
        <trans-unit id="5ad471f866060853ee0b27a1e2c75693bc6bc9da" translate="yes" xml:space="preserve">
          <source>Read from the array:</source>
          <target state="translated">Lee de la matriz:</target>
        </trans-unit>
        <trans-unit id="5e0aecab609a33c180d2798c48ea919c6b266d83" translate="yes" xml:space="preserve">
          <source>Ref: &lt;a href=&quot;https://www.geeksforgeeks.org/arrays-in-java/&quot;&gt;https://www.geeksforgeeks.org/arrays-in-java/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ref: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.geeksforgeeks.org/arrays-in-java/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://www.geeksforgeeks.org/arrays-in-java/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="877cd88ac8443939104250bfbb46950f30b88cfa" translate="yes" xml:space="preserve">
          <source>So here we are defining columns explicitly.</source>
          <target state="translated">Así que aquí estamos definiendo las columnas explícitamente.</target>
        </trans-unit>
        <trans-unit id="1298f9c967d21f4a80c853ea5846b035384691dd" translate="yes" xml:space="preserve">
          <source>So the basic pattern is for initialization and declaration by method a is:</source>
          <target state="translated">Así que la pauta básica es para la inicialización y la declaración por el método a es:</target>
        </trans-unit>
        <trans-unit id="76b15ddd9bbae2a42a5c96bc2b644d8162ba90e8" translate="yes" xml:space="preserve">
          <source>Some examples</source>
          <target state="translated">Algunos ejemplos</target>
        </trans-unit>
        <trans-unit id="699d21b1cc9f463e20aceefefd74619a32876af0" translate="yes" xml:space="preserve">
          <source>Syntax for default values:</source>
          <target state="translated">Sintaxis de los valores por defecto:</target>
        </trans-unit>
        <trans-unit id="23363058d5ecc4181f65d5588f53474c37f1b763" translate="yes" xml:space="preserve">
          <source>Syntax with values given (variable/field initialization):</source>
          <target state="translated">Sintaxis con valores dados (inicialización de campo variable):</target>
        </trans-unit>
        <trans-unit id="7963f9855d20bac653579ad5e31e24efc41190d9" translate="yes" xml:space="preserve">
          <source>Take the primitive type &lt;code&gt;int&lt;/code&gt; for example. There are several ways to declare and &lt;code&gt;int&lt;/code&gt; array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tome el tipo primitivo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; por ejemplo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hay varias formas de declarar e &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; array:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b63e59fd33cd8df365739014bcae6c1969efc01f" translate="yes" xml:space="preserve">
          <source>That declares an array called &lt;code&gt;arrayName&lt;/code&gt; of size 10 (you have elements 0 through 9 to use).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Eso declara una matriz llamada &lt;/font&gt;&lt;/font&gt; &lt;code&gt;arrayName&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de tama&amp;ntilde;o 10 (tiene elementos del 0 al 9 para usar).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec6a2229f621c89b08f6a049dddf3ca3638e72e5" translate="yes" xml:space="preserve">
          <source>The following shows the declaration as well as initialization of the array:</source>
          <target state="translated">A continuación se muestra la declaración así como la inicialización del conjunto:</target>
        </trans-unit>
        <trans-unit id="1b344e5653321d31dd495bfb3ad4309baa420df8" translate="yes" xml:space="preserve">
          <source>The following shows the declaration of an array, but the array is not initialized:</source>
          <target state="translated">A continuación se muestra la declaración de una matriz,pero la matriz no está inicializada:</target>
        </trans-unit>
        <trans-unit id="429516426d9d21d59a40c1bcd51c56beda43a672" translate="yes" xml:space="preserve">
          <source>The general form of a one-dimensional array declaration is</source>
          <target state="translated">La forma general de la declaración de un conjunto unidimensional es</target>
        </trans-unit>
        <trans-unit id="3f95b44caf0ba873a8ead040c61934dd0f7d2ec4" translate="yes" xml:space="preserve">
          <source>The third way of initializing is useful when you declare the array first and then initialize it. The cast is necessary here.</source>
          <target state="translated">La tercera forma de inicializar es útil cuando se declara la matriz primero y luego se inicializa.El molde es necesario aquí.</target>
        </trans-unit>
        <trans-unit id="4d4da839e17afe216e16445a6dc68cf412fe7357" translate="yes" xml:space="preserve">
          <source>There are a lot of answers here. I am adding a few tricky ways to create arrays (from an &lt;strong&gt;exam&lt;/strong&gt; point of view it's good to know this)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hay muchas respuestas aqu&amp;iacute;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Estoy agregando algunas formas dif&amp;iacute;ciles de crear matrices (desde el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;punto de vista del &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;examen&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , es bueno saber esto)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00a2b88efef8a6ee1d84cd9057aaad4a96620a99" translate="yes" xml:space="preserve">
          <source>There are two main ways to make an array:</source>
          <target state="translated">Hay dos formas principales de hacer una matriz:</target>
        </trans-unit>
        <trans-unit id="de2c60726dc477227d58cef5b5cc365aa18ebf1a" translate="yes" xml:space="preserve">
          <source>There are two types of array.</source>
          <target state="translated">Hay dos tipos de matriz.</target>
        </trans-unit>
        <trans-unit id="4691136e34d4186c7b08b7ed0cb03d8b37684462" translate="yes" xml:space="preserve">
          <source>There are various ways in which you can declare an array in Java:</source>
          <target state="translated">Hay varias formas de declarar una matriz en Java:</target>
        </trans-unit>
        <trans-unit id="77a37c45c2d991061f2ae8ce24954d8253893b60" translate="yes" xml:space="preserve">
          <source>This one is pretty &lt;strong&gt;simple&lt;/strong&gt; and straightforward.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este es bastante &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;simple&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y directo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f32cb077b5c5428bab048225d9e28f1d1f3a22bd" translate="yes" xml:space="preserve">
          <source>This one, for an empty array:</source>
          <target state="translated">Este,para una matriz vacía:</target>
        </trans-unit>
        <trans-unit id="a49dd6da63450049fb4d1b6a20bc5663c0a1ff57" translate="yes" xml:space="preserve">
          <source>This time there isn't any need to mention the size in the box bracket. Even a simple variant of this is:</source>
          <target state="translated">Esta vez no es necesario mencionar el tamaño en el soporte de la caja.Incluso una simple variante de esto es:</target>
        </trans-unit>
        <trans-unit id="7f713b1a57240f7e18f112723c5c496d19f578a5" translate="yes" xml:space="preserve">
          <source>This will create an array of length 3. As it holds a primitive type, int, all values are set to 0 by default. For example,</source>
          <target state="translated">Esto creará una matriz de longitud 3.Como tiene un tipo primitivo,int,todos los valores se establecen en 0 por defecto.Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="7c59af311a82c9e7a3736067595e5c686d8d602d" translate="yes" xml:space="preserve">
          <source>To declare a static array of Integer, string, float, etc... use the bellow declaration and initialization statements.</source>
          <target state="translated">Para declarar un conjunto estático de Entero,cadena,flotador,etc...use las declaraciones de declaración e inicialización de abajo.</target>
        </trans-unit>
        <trans-unit id="4fc4c5ad1821edbb2f27ab76f45dc7d826be6558" translate="yes" xml:space="preserve">
          <source>To use dynamic features, you have to use List... 
List is pure &lt;strong&gt;dynamic Array&lt;/strong&gt; and there is no need to declare size at beginning. 
Bellow is the proper way to declare a list in JAVA&amp;gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para usar las caracter&amp;iacute;sticas din&amp;aacute;micas, debe usar List ... List es pura &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;matriz din&amp;aacute;mica&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y no es necesario declarar el tama&amp;ntilde;o al principio. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A continuaci&amp;oacute;n es la forma correcta de declarar una lista en JAVA&amp;gt;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2236c2cf7e54d7c093d96c8f71b61e7d40ca7e52" translate="yes" xml:space="preserve">
          <source>Using box brackets [] before the variable name</source>
          <target state="translated">Usando los corchetes []antes del nombre de la variable</target>
        </trans-unit>
        <trans-unit id="9fe3471b79eb33fc98fb097c1ccec3369b9df4ad" translate="yes" xml:space="preserve">
          <source>Using box brackets before the variable:</source>
          <target state="translated">Usando paréntesis de caja antes de la variable:</target>
        </trans-unit>
        <trans-unit id="22286f2dd1b1d16f8a2f377c0d3ab3744a54473b" translate="yes" xml:space="preserve">
          <source>Using different &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/IntStream.html#iterate-int-java.util.function.IntPredicate-java.util.function.IntUnaryOperator-&quot;&gt;&lt;code&gt;IntStream.iterate&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/IntStream.html#takeWhile-java.util.function.IntPredicate-&quot;&gt;&lt;code&gt;IntStream.takeWhile&lt;/code&gt;&lt;/a&gt; methods:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Usando diferentes &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todos &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/IntStream.html#iterate-int-java.util.function.IntPredicate-java.util.function.IntUnaryOperator-&quot;&gt; &lt;code&gt;IntStream.iterate&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; e &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/IntStream.html#takeWhile-java.util.function.IntPredicate-&quot;&gt; &lt;code&gt;IntStream.takeWhile&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6aca899afa49509a823ed95674e8cf0cbceeba5" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;https://developer.oracle.com/java/jdk-10-local-variable-type-inference.html&quot;&gt;Local Variable Type Inference&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Uso de la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.oracle.com/java/jdk-10-local-variable-type-inference.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;inferencia de tipo de variable local&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fbfdd1a54278cf6b141db0c7bb5bd461606fbc30" translate="yes" xml:space="preserve">
          <source>With local variable type inference you only have to specify the type once:</source>
          <target state="translated">Con la inferencia del tipo de variable local sólo hay que especificar el tipo una vez:</target>
        </trans-unit>
        <trans-unit id="4c1241b566f6aceca467c183ea2715d0f828905a" translate="yes" xml:space="preserve">
          <source>With reflection, you can use &lt;code&gt;(Type[]) Array.newInstance(Type.class, capacity);&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Con reflexi&amp;oacute;n, puede usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(Type[]) Array.newInstance(Type.class, capacity);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e49c0d81b331685a918f561b6bb655f018f9663d" translate="yes" xml:space="preserve">
          <source>You can also create arrays with the values already there, such as</source>
          <target state="translated">También puedes crear matrices con los valores ya existentes,como</target>
        </trans-unit>
        <trans-unit id="3f7e1c9df460d6ac77819b0e92b2b28e4417e43a" translate="yes" xml:space="preserve">
          <source>You can also do it with &lt;code&gt;java.util.Arrays&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n puedes hacerlo con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;java.util.Arrays&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="84e604823f41689c8333489976e7557a3c3b1284" translate="yes" xml:space="preserve">
          <source>You can also make multidimensional arrays, like this:</source>
          <target state="translated">También puedes hacer arreglos multidimensionales,como este:</target>
        </trans-unit>
        <trans-unit id="9d302345d26cedde51da53249bbfab47362bd3eb" translate="yes" xml:space="preserve">
          <source>You can either use array declaration or array literal (but only when you declare and affect the variable right away, array literals cannot be used for re-assigning an array).</source>
          <target state="translated">Puedes usar la declaración de array o el literal de array (pero sólo cuando declaras y afectas la variable de inmediato,los literales de array no pueden usarse para reasignar un array).</target>
        </trans-unit>
        <trans-unit id="982546c50726230bf3040272152168d500932d78" translate="yes" xml:space="preserve">
          <source>You can find more information in the &lt;a href=&quot;http://java.sun.com/docs/books/tutorial/java/nutsandbolts/arrays.html&quot;&gt;Sun tutorial&lt;/a&gt; site and the &lt;a href=&quot;http://java.sun.com/j2se/1.5.0/docs/api/java/util/Arrays.html&quot;&gt;JavaDoc&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede encontrar m&amp;aacute;s informaci&amp;oacute;n en el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;sitio de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://java.sun.com/docs/books/tutorial/java/nutsandbolts/arrays.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tutoriales de Sun&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://java.sun.com/j2se/1.5.0/docs/api/java/util/Arrays.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaDoc&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7966a57afd7865f6d3343a8ce4905b1d8f827d95" translate="yes" xml:space="preserve">
          <source>You have to make sure if you are using the above syntax, that the forward direction you have to specify the values in box brackets. Else it won't compile. Some examples:</source>
          <target state="translated">Hay que asegurarse de que si se utiliza la sintaxis anterior,que la dirección de avance tiene que especificar los valores entre corchetes.De lo contrario no se compilará.Algunos ejemplos:</target>
        </trans-unit>
        <trans-unit id="21b825df3faa11615ed424e23e8cff717a5252d5" translate="yes" xml:space="preserve">
          <source>a)</source>
          <target state="translated">a)</target>
        </trans-unit>
        <trans-unit id="fddfc6e1d7666d90904c5e3b0ac5d66177c016ab" translate="yes" xml:space="preserve">
          <source>b)</source>
          <target state="translated">b)</target>
        </trans-unit>
        <trans-unit id="b59df146904a9d1ba0d2afeb5dcc655177ff38f5" translate="yes" xml:space="preserve">
          <source>but when you declare and initialize the array by &quot;method a&quot; you will have to enter the values manually or by loop or something.</source>
          <target state="translated">pero cuando declare e inicialice el array por el &quot;método a&quot; tendrá que introducir los valores manualmente o por bucle o algo así.</target>
        </trans-unit>
        <trans-unit id="b58d80edf0d9a5f19d17ce43b0b4205bab0262a4" translate="yes" xml:space="preserve">
          <source>example:</source>
          <target state="translated">example:</target>
        </trans-unit>
        <trans-unit id="bc3eeab034567c452215cbfbbe733b44999db7d7" translate="yes" xml:space="preserve">
          <source>for loop that allows you to edit &lt;code&gt;arrayName&lt;/code&gt; (conventional for loop):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;for loop que le permite editar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;arrayName&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (convencional for loop):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce57f9ec74d739a8f370ce118dcbd0d543eb0983" translate="yes" xml:space="preserve">
          <source>for loops:</source>
          <target state="translated">para los bucles:</target>
        </trans-unit>
        <trans-unit id="f8a544ea7cbffae352055223d1064e798cf761fd" translate="yes" xml:space="preserve">
          <source>is also valid, but I prefer the brackets after the type, because it's easier to see that the variable's type is actually an array.</source>
          <target state="translated">también es válido,pero prefiero los corchetes después del tipo,porque es más fácil ver que el tipo de la variable es en realidad un array.</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="2d177ae0276c78ed9840fab7da5a7f708d7a6c1c" translate="yes" xml:space="preserve">
          <source>so the basic pattern is for initialization and declaration by method a) is:</source>
          <target state="translated">así que la pauta básica es para la inicialización y la declaración por el método a)es:</target>
        </trans-unit>
        <trans-unit id="139567a72ed93085de40c7389ceb1c59bc114445" translate="yes" xml:space="preserve">
          <source>this is not declaration of array, but the following statement makes the above declaration complete:</source>
          <target state="translated">esto no es una declaración de la matriz,pero la siguiente declaración hace que la declaración anterior sea completa:</target>
        </trans-unit>
        <trans-unit id="ad5f9d461327a4b8f1d0119329a1e09300714928" translate="yes" xml:space="preserve">
          <source>where in all of these, you can use &lt;code&gt;int i[]&lt;/code&gt; instead of &lt;code&gt;int[] i&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;donde en todos estos, puede usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int i[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; lugar de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[] i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7a9afd2bad445d016e07ad73ac3df7a13b73f8de" translate="yes" xml:space="preserve">
          <source>which not only creates the empty space but fills it with those values. Java can tell that the primitives are integers and that there are 5 of them, so the size of the array can be determined implicitly.</source>
          <target state="translated">que no sólo crea el espacio vacío sino que lo llena con esos valores.Java puede decir que los primitivos son enteros y que hay 5 de ellos,por lo que el tamaño del conjunto puede ser determinado implícitamente.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
