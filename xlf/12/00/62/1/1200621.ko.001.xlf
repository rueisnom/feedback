<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/1200621">
    <body>
      <group id="1200621">
        <trans-unit id="cadc0c0784f280561b6250baabac0758d79cd080" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Another Way:&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또 다른 방법:&lt;/font&gt;&lt;/font&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="244d7fa9531947c7afd08896b5eba15fa961d083" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type[]&lt;/code&gt; is the &lt;em&gt;type&lt;/em&gt; of the &lt;em&gt;variable&lt;/em&gt; called name (&quot;name&quot; is called the &lt;em&gt;identifier&lt;/em&gt;).  The literal &quot;Type&quot; is the base type, and the brackets mean this is the array type of that base. Array types are in turn types of their own, which allows you to make multidimensional arrays like &lt;code&gt;Type[][]&lt;/code&gt; (the array type of Type[]). The keyword &lt;code&gt;new&lt;/code&gt; says to allocate memory for the new array.  The number between the bracket says how large the new array will be and how much memory to allocate. For instance, if Java knows that the base type &lt;code&gt;Type&lt;/code&gt; takes 32 bytes, and you want an array of size 5, it needs to internally allocate 32 * 5 = 160 bytes.</source>
          <target state="translated">&lt;code&gt;Type[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;name이라는 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유형&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;( &quot;name&quot;은 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;식별자&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 라고 함 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;). 리터럴 &quot;Type&quot;은 기본 유형이며 괄호는 이것이 기본의 배열 유형임을 의미합니다. 배열 유형은 고유 한 유형이므로 &lt;/font&gt; &lt;code&gt;Type[][]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Type []&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 배열 유형) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;과 같은 다차원 배열을 만들 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 키워드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 새 배열에 메모리를 할당한다고 말합니다. 대괄호 사이의 숫자는 새 배열의 크기와 할당 할 메모리 양을 나타냅니다. 예를 들어, Java가 기본 유형 &lt;/font&gt; &lt;code&gt;Type&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 32 바이트를 차지하고 크기 5의 배열을 원하면 내부적으로 32 * 5 = 160 바이트를 할당해야합니다.&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5185e05a799c32e8a959f347048b2f6b0cecd4d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datatype&lt;/code&gt; should be in lower case.</source>
          <target state="translated">&lt;code&gt;datatype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 소문자 여야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="234e109fd1b45d72c8300122bfec23c97b646b4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;variableName&lt;/code&gt; is a reference to the array meaning that manipulating &lt;code&gt;variableName&lt;/code&gt; will manipulate &lt;code&gt;arrayName&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;variableName&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 배열에 대한 참조이며 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;variableName&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 조작하면 &lt;/font&gt; &lt;code&gt;arrayName&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 조작 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a2783850360e42427e548e524e84f2d0b0b3c3bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Dynamic Array:&lt;/strong&gt; No size limit is considered for this. (Pure dynamic arrays do not exist in Java. Instead, List is most encouraged)</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동적 배열 : 여기에는&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 크기 제한이 고려되지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(순수 동적 배열은 Java에 존재하지 않습니다. 대신 List가 가장 권장됩니다)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b8e66cca0e8c233ada64437e2e49beed1617ed74" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IMPORTANT: For referenced types, the default value stored in the array is null.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;중요 : 참조 형식의 경우 배열에 저장된 기본값은 null입니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9544ba285ba91e391066529df8f36822f06c6b6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Initializing an array means specifying the size of it.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열을 초기화한다는 것은 배열의 크기를 지정하는 것을 의미합니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d503246f642baf69b096a25b60a26d07f3fea8fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Instantiating an Array in Java&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java에서 배열 인스턴스화&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c88b408ed39fa66458056145fee9cfcc7d539f6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;One-Dimensional Arrays :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1 차원 배열 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="96025033606dc9bbc2268b665a0b4d82540d86cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Similar for multi-dimensional arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다차원 배열과 유사&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6aad8a0da464b440805dc35fd21c8cf8dab98940" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Static Array:&lt;/strong&gt; Fixed size array (Its size should be declared at start and can not be changed later)</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 배열 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 고정 크기 배열 (시작시 크기를 선언해야하며 나중에 변경할 수 없음)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db22b2c5126204d225a05684d4dcf50ea5529c8f" translate="yes" xml:space="preserve">
          <source>Also, in case you want something more dynamic there is the List interface.  This will not perform as well, but is more flexible:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 더 역동적 인 것을 원할 경우 List 인터페이스가 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 잘 수행되지 않지만 더 유연합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="326dff1f84cdca33ec4cd86f8765659aceea2acf" translate="yes" xml:space="preserve">
          <source>Alternatively,</source>
          <target state="translated">Alternatively,</target>
        </trans-unit>
        <trans-unit id="c85c58dec99e5ab948d510b95570ff7548c7b434" translate="yes" xml:space="preserve">
          <source>Alternatively:</source>
          <target state="translated">Alternatively:</target>
        </trans-unit>
        <trans-unit id="ee43268c689363ed09ec9912c144be55d59b1dd4" translate="yes" xml:space="preserve">
          <source>An array of length 0</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;길이가 0 인 배열&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="164a20a8f3a572ab64c6fa43f452d94ab4407d27" translate="yes" xml:space="preserve">
          <source>And this one, for an initialized array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 이것은 초기화 된 배열의 경우 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95dc0492001977cf1b2f1f04376b2fc0ad777990" translate="yes" xml:space="preserve">
          <source>Another important feature is &lt;strong&gt;covariant&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또 다른 중요한 특징은 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;공변량입니다&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d71f7145f690775938559b04d64509bcfb08592" translate="yes" xml:space="preserve">
          <source>Another way to declare and initialize ArrayList:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ArrayList를 선언하고 초기화하는 다른 방법 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="42da06e2e5c8fe1ae09c7964dd817c6acef4f50a" translate="yes" xml:space="preserve">
          <source>Array can contains primitives data types as well as objects of a class depending on the definition of array. In case of primitives data types, the actual values are stored in contiguous memory locations. In case of objects of a class, the actual objects are stored in heap segment.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열은 배열의 정의에 따라 프리미티브 데이터 유형과 클래스의 객체를 포함 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프리미티브 데이터 유형의 경우 실제 값은 연속 메모리 위치에 저장됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스의 객체의 경우 실제 객체는 힙 세그먼트에 저장됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="accefd791cac597bc5fa0f35a3b89e51b59ae373" translate="yes" xml:space="preserve">
          <source>Array has two basic types.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열에는 두 가지 기본 유형이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d5569a030423998b7630c054ede604adf8dad8f" translate="yes" xml:space="preserve">
          <source>Array is a sequential list of items</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열은 순차적 인 항목 목록입니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e322480a537d8262416f69ef614e4e5b6cf8be3" translate="yes" xml:space="preserve">
          <source>Assign values to the array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열에 값을 지정하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33497ba90d7026a7fa3446f9e392e55fde88446a" translate="yes" xml:space="preserve">
          <source>But this third one shows the property of anonymous array-object creation which is pointed by a reference variable &quot;myIntArray&quot;, so if we write just &quot;new int[]{1,2,3};&quot; then this is how anonymous array-object can be created.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나이 세 번째는 참조 변수 &quot;myIntArray&quot;가 가리키는 익명 배열 객체 생성의 속성을 보여줍니다. &quot;new int [] {1,2,3};&quot; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 익명 배열 객체를 만드는 방법입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="129f49de1cc02398c974caca314258ea1fb39ca3" translate="yes" xml:space="preserve">
          <source>But when you do it by &quot;method b&quot; you will not have to enter the values manually.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &quot;방법 b&quot;로 수행 할 때는 수동으로 값을 입력 할 필요가 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5ed8156d61c144fe241113791b538fdeadc42318" translate="yes" xml:space="preserve">
          <source>Create a random array for integers between [-50, 50] and for doubles [0, 1E17]:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[-50, 50] 사이의 정수와 [0, 1E17]의 배가에 대한 랜덤 배열을 만듭니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d6f37721bc043c8dd7475e584d1b0bdd4b256c24" translate="yes" xml:space="preserve">
          <source>Declaration</source>
          <target state="translated">Declaration</target>
        </trans-unit>
        <trans-unit id="f2bd05b5ef32bab86711a55b71b969b8c2b30fa7" translate="yes" xml:space="preserve">
          <source>Declare Array: &lt;code&gt;int[] arr;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열 선언 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[] arr;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3106a3135287ef9d22ffbd2cc3086424c08e9915" translate="yes" xml:space="preserve">
          <source>Declare Multidimensional Array: &lt;code&gt;int[][] arr;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다차원 배열 선언 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[][] arr;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7fdc5100d36eda5bebf1cea14b7ebe26ab8d8422" translate="yes" xml:space="preserve">
          <source>Declare and define an array</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열 선언 및 정의&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1cb8e47d668ae55028206105f8380afcc72c6f67" translate="yes" xml:space="preserve">
          <source>Declare and initialize for Java 8 and later. Create a simple integer array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java 8 이상을 선언하고 초기화하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;간단한 정수 배열을 만듭니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5c2dde373686791bddfe10dba25e3cdf0e1a3887" translate="yes" xml:space="preserve">
          <source>Declaring an array of object references:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체 참조의 배열 선언 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">스 니펫 확장</target>
        </trans-unit>
        <trans-unit id="9c2d4702ec71996e044b22d97312108a897d83ce" translate="yes" xml:space="preserve">
          <source>For Accessing:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;액세스 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="58a696793c5e76ec79ef00906829b55fdf22d7ce" translate="yes" xml:space="preserve">
          <source>For Example</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6784110dbf80d0bc4ac8a3483a105ff28115ba16" translate="yes" xml:space="preserve">
          <source>For String[] you must specify a constructor:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;String []의 경우 생성자를 지정해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f8988a2e0164b227509109c9e7952fd00171df7a" translate="yes" xml:space="preserve">
          <source>For classes, for example &lt;code&gt;String&lt;/code&gt;, it's the same:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 (예 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )의 경우 동일합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6356ff71c59019c4b11cac3fd1c3b9558c879bc1" translate="yes" xml:space="preserve">
          <source>For creating arrays of class Objects you can use the &lt;code&gt;java.util.ArrayList&lt;/code&gt;. to define an array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 Object의 배열을 작성하려면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;java.util.ArrayList&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열을 정의하려면&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="28f37995efbf25f1c4abc3377034c7ce5fda6de6" translate="yes" xml:space="preserve">
          <source>For explanation see multidimensional array detail at &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/java/nutsandbolts/arrays.html&quot;&gt;the official java tutorials&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 내용은 &lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/java/nutsandbolts/arrays.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;공식 Java 자습서&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 다차원 배열 세부 정보를 참조하십시오.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc6da86b5ed19cada5575e249da9bf0ba13d288d" translate="yes" xml:space="preserve">
          <source>For float double, the format of array will be same as integer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;float double의 경우 배열 형식은 정수와 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29e2d4316b320a43d5dd6309a7564aa20ec9bd2e" translate="yes" xml:space="preserve">
          <source>For primitive types:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본 유형의 경우 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d804293fd89cde44bb0706729ad99a47ffe9ea8" translate="yes" xml:space="preserve">
          <source>How do I declare and initialize an array in Java</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java에서 배열을 선언하고 초기화하는 방법&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bca538f5c5fba391e8b7ce179647090a2c98f8a4" translate="yes" xml:space="preserve">
          <source>How do I declare and initialize an array in Java?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java에서 배열을 선언하고 초기화하는 방법은 무엇입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ca4e9151c2cb01cd4825f582341c7a661af772a3" translate="yes" xml:space="preserve">
          <source>I find it is helpful if you understand each part:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;각 부분을 이해하면 도움이됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e4335d0765b6b0af8090b872edcfdecfcaa215fd" translate="yes" xml:space="preserve">
          <source>If it's a character array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자 배열 인 경우 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a5e3f7f8fe2da5acf770608fc5cf8d303236b695" translate="yes" xml:space="preserve">
          <source>If it's a string array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자열 배열 인 경우 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d0e02b3b82a035bde9f6a609898ef34aacf5115" translate="yes" xml:space="preserve">
          <source>If it's an object, then it's the same concept</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것이 물체라면 같은 개념입니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e1f7f40a5c066553fb3427ac877638a4965fdc4" translate="yes" xml:space="preserve">
          <source>If we just write:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리가 방금 쓴다면 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="32240437bf04caf5360119393dd11b250037631a" translate="yes" xml:space="preserve">
          <source>If you want to create arrays using reflections then you can do like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;반사를 사용하여 배열을 만들려면 다음과 같이하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="454396ca246efda9bbdcb0585f168bec978eef8c" translate="yes" xml:space="preserve">
          <source>In Java 10</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자바 10&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d102853cfe5d871bc5b70dbb3706e71ea57d72ca" translate="yes" xml:space="preserve">
          <source>In Java 8 you can use like this.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java 8에서는 이와 같이 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fbb9c43b3fb09b2b5bb38abcc10762c48f28e4e9" translate="yes" xml:space="preserve">
          <source>In Java 9</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자바 9에서&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b7d5fa9337591e86f852a15cfbc8ea81641be0c" translate="yes" xml:space="preserve">
          <source>In case of objects, you need to either assign it to &lt;code&gt;null&lt;/code&gt; to initialize them using &lt;code&gt;new Type(..)&lt;/code&gt;, classes like &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;Integer&lt;/code&gt; are special cases that will be handled as following</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체의 경우 &lt;/font&gt; &lt;code&gt;new Type(..)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하여 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 초기화 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하려면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;할당해야합니다 &lt;/font&gt; &lt;code&gt;String&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;같은 클래스 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 다음과 같이 처리되는 특수한 경우입니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="97c1bbd47adbba43089a0a1da92a7b8dda415aae" translate="yes" xml:space="preserve">
          <source>In general you can create arrays that's &lt;code&gt;M&lt;/code&gt; dimensional</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적으로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;M&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 차원 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 배열을 만들 수 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="74550664301794d02b0edd4f63d72b12d5a5184f" translate="yes" xml:space="preserve">
          <source>Initialise and provide data to the array</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열을 초기화하고 데이터를 제공&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68fa16ffd48f366e4fa8d57fea78ff03fcab0191" translate="yes" xml:space="preserve">
          <source>Initialization</source>
          <target state="translated">Initialization</target>
        </trans-unit>
        <trans-unit id="e82891031aa39a2eddaad402ebf9dcff46989374" translate="yes" xml:space="preserve">
          <source>Initialize Array: &lt;code&gt;int[] arr = new int[10];&lt;/code&gt; 10 represents the number of elements allowed in the array</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열 초기화 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[] arr = new int[10];&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;10은 배열에서 허용되는 요소 수를 나타냅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8524a047fa9e7ee5a67dc4e3cc0764a7390faf0a" translate="yes" xml:space="preserve">
          <source>Initialize Multidimensional Array: &lt;code&gt;int[][] arr = new int[10][17];&lt;/code&gt; 10 rows and 17 columns and 170 elements because 10 times 17 is 170.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다차원 배열 초기화 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[][] arr = new int[10][17];&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;10 곱하기 17은 170이므로 10 개의 행과 17 개의 열과 170 개의 요소가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="07c42be23d589c822de15db4e756dbb3fb436370" translate="yes" xml:space="preserve">
          <source>Inside the method, &lt;code&gt;varargs&lt;/code&gt; is treated as a normal &lt;code&gt;int[]&lt;/code&gt;. &lt;code&gt;Type...&lt;/code&gt; can only be used in method parameters, so &lt;code&gt;int... i = new int[] {}&lt;/code&gt; will not compile.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메서드 내에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;varargs&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 일반 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 처리됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Type...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 메소드 매개 변수에서만 사용할 수 있으므로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int... i = new int[] {}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 컴파일되지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a1f9655ab6910087005e63876eb03ed0b470ef46" translate="yes" xml:space="preserve">
          <source>It's absolutely fine if you put one box bracket at the end:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마지막에 하나의 상자 브래킷을 넣으면 좋습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a5ba07490985c0b12beb0682f16574e89b75bc1" translate="yes" xml:space="preserve">
          <source>It's not mandatory that each inner element is of the same size.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;각 내부 요소의 크기가 반드시 같은 것은 아닙니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e9035ff630424c0ba544af7be0e2b2871bd7369e" translate="yes" xml:space="preserve">
          <source>It's very easy to declare and initialize an array.
For example, you want to save five integer elements which are 1, 2, 3, 4, and 5 in an array. You can do it in the following way:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열을 선언하고 초기화하는 것은 매우 쉽습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어, 배열에 1, 2, 3, 4 및 5 인 5 개의 정수 요소를 저장하려고합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같은 방법으로 수행 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bb9b7d5821c04bb3fa00f80ad8362a3a43b1b115" translate="yes" xml:space="preserve">
          <source>It's worthy to note that creating an &lt;code&gt;M&lt;/code&gt; dimensional array is expensive in terms of Space. Since when you create an &lt;code&gt;M&lt;/code&gt; dimensional array with &lt;code&gt;N&lt;/code&gt; on all the dimensions, The total size of the array is bigger than &lt;code&gt;N^M&lt;/code&gt;, since each array has a reference, and at the M-dimension there is an (M-1)-dimensional array of references. The total size is as following</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;M&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 차원 배열 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 만드는 것은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;공간 측면에서 비용이 많이 듭니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 차원에서 &lt;/font&gt; &lt;code&gt;N&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 사용하여 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;M&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 차원 배열 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 만들 때 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;각 배열에 참조가 있고 M 차원에는 (M-1) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 있으므로 배열의 총 크기는 &lt;/font&gt; &lt;code&gt;N^M&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 보다 큽니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조의 차원 배열. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;총 크기는 다음과 같습니다&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a9d638ce5bf60587999d44aed72b74552ba37415" translate="yes" xml:space="preserve">
          <source>Multidimensional Arrays</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다차원 배열&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ea1e4280a4c5f8ce40c94ad05af1e7eb5fd0eae" translate="yes" xml:space="preserve">
          <source>Multidimensional array</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다차원 배열&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a9967ce7963d6e652a643d81a5ccb9bedc6e8951" translate="yes" xml:space="preserve">
          <source>Multidimensional arrays are much harder to deal with. Essentially, a 2D array is an array of arrays. &lt;code&gt;int[][]&lt;/code&gt; means an array of &lt;code&gt;int[]&lt;/code&gt;s. The key is that if an &lt;code&gt;int[][]&lt;/code&gt; is declared as &lt;code&gt;int[x][y]&lt;/code&gt;, the maximum index is &lt;code&gt;i[x-1][y-1]&lt;/code&gt;. Essentially, a rectangular &lt;code&gt;int[3][5]&lt;/code&gt; is:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다차원 배열은 다루기가 훨씬 어렵습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본적으로 2D 배열은 배열의 배열입니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[][]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열을 의미합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;핵심은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[][]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[x][y]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 선언 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되면 최대 인덱스는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i[x-1][y-1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본적으로 직사각형 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[3][5]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5fccf61b52eaa9c56e366ab05398b42ff4557195" translate="yes" xml:space="preserve">
          <source>Multidimensional arrays:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다차원 배열 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90a418e3e8f324b5269483957bf28079362cd734" translate="yes" xml:space="preserve">
          <source>Note that in method parameters, &lt;code&gt;...&lt;/code&gt; indicates &lt;code&gt;variable arguments&lt;/code&gt;. Essentially, any number of parameters is fine. It's easier to explain with code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메소드 매개 변수에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;variable arguments&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 나타냅니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;본질적으로, 임의의 수의 파라미터가 양호하다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드로 설명하는 것이 더 쉽습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="abca571142ffdc6c46ab2ec1d093c6f96b4ecc6e" translate="yes" xml:space="preserve">
          <source>Note that when passing an &lt;code&gt;int[]&lt;/code&gt; to a method (or any other &lt;code&gt;Type[]&lt;/code&gt;), you cannot use the third way. In the statement &lt;code&gt;int[] i = *{a, b, c, d, etc}*&lt;/code&gt;, the compiler assumes that the &lt;code&gt;{...}&lt;/code&gt; means an &lt;code&gt;int[]&lt;/code&gt;. But that is because you are declaring a variable. When passing an array to a method, the declaration must either be &lt;code&gt;new Type[capacity]&lt;/code&gt; or &lt;code&gt;new Type[] {...}&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;int[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 메소드 (또는 다른 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Type[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전달할 때는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;세 번째 방법을 사용할 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[] i = *{a, b, c, d, etc}*&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 컴파일러는 그 가정 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{...}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 수단 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 변수를 선언했기 때문입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열을 메소드에 전달할 때 선언은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Type[capacity]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Type[] {...}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이어야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">Note:</target>
        </trans-unit>
        <trans-unit id="a57eb5af2c5c4dfb42fe10e5f6623498ba1807a3" translate="yes" xml:space="preserve">
          <source>Note: For convenience  int[] num is preferable because it clearly tells that you are talking here about array. Otherwise no difference. Not at all.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참고 : 편의상 int [] num은 배열에 대해 여기서 이야기하고 있음을 분명히 나타내므로 바람직합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇지 않으면 차이가 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전혀.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cfe8dc71bda8259f167ad25591968e0d5b9e8d22" translate="yes" xml:space="preserve">
          <source>Now, the following also shows the declaration as well as initialization of the array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 다음은 선언 및 배열 초기화를 보여줍니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ff3b45138376d04f91d643b71e4326d0b67670d" translate="yes" xml:space="preserve">
          <source>One Dimensional Array</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1 차원 배열&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e72184f55cc026514b7160d78c3c5aef63c2a050" translate="yes" xml:space="preserve">
          <source>Or</source>
          <target state="translated">Or</target>
        </trans-unit>
        <trans-unit id="c2c7848cab8e1aa876905a1aa28f78325e17b185" translate="yes" xml:space="preserve">
          <source>Or (less preferred)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 (덜 선호)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f98f55e894bf6c6d3b253f45c662432464823fd0" translate="yes" xml:space="preserve">
          <source>Power-of-two sequence:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2의 거듭 제곱 시퀀스 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c1709a0f66395b5233316c1b9c569cdce6381f00" translate="yes" xml:space="preserve">
          <source>Ragged Array (or Non-rectangular Array)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비정형 배열 (또는 비 사각형 배열)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d4bf874fb137eeaf177ce8ff80cba48e13ea6b4b" translate="yes" xml:space="preserve">
          <source>Ragged arrays are multidimensional arrays.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비정형 배열은 다차원 배열입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5ad471f866060853ee0b27a1e2c75693bc6bc9da" translate="yes" xml:space="preserve">
          <source>Read from the array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열에서 읽습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5e0aecab609a33c180d2798c48ea919c6b266d83" translate="yes" xml:space="preserve">
          <source>Ref: &lt;a href=&quot;https://www.geeksforgeeks.org/arrays-in-java/&quot;&gt;https://www.geeksforgeeks.org/arrays-in-java/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.geeksforgeeks.org/arrays-in-java/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://www.geeksforgeeks.org/arrays-in-java/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="877cd88ac8443939104250bfbb46950f30b88cfa" translate="yes" xml:space="preserve">
          <source>So here we are defining columns explicitly.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서는 명시 적으로 열을 정의합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1298f9c967d21f4a80c853ea5846b035384691dd" translate="yes" xml:space="preserve">
          <source>So the basic pattern is for initialization and declaration by method a is:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 기본 패턴은 메소드 a에 의한 초기화 및 선언입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="76b15ddd9bbae2a42a5c96bc2b644d8162ba90e8" translate="yes" xml:space="preserve">
          <source>Some examples</source>
          <target state="translated">몇 가지 예</target>
        </trans-unit>
        <trans-unit id="699d21b1cc9f463e20aceefefd74619a32876af0" translate="yes" xml:space="preserve">
          <source>Syntax for default values:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본값의 구문 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="23363058d5ecc4181f65d5588f53474c37f1b763" translate="yes" xml:space="preserve">
          <source>Syntax with values given (variable/field initialization):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주어진 값이있는 구문 (변수 / 필드 초기화) :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7963f9855d20bac653579ad5e31e24efc41190d9" translate="yes" xml:space="preserve">
          <source>Take the primitive type &lt;code&gt;int&lt;/code&gt; for example. There are several ways to declare and &lt;code&gt;int&lt;/code&gt; array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본 유형 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 선언하고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하는 방법에는 여러 가지가 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b63e59fd33cd8df365739014bcae6c1969efc01f" translate="yes" xml:space="preserve">
          <source>That declares an array called &lt;code&gt;arrayName&lt;/code&gt; of size 10 (you have elements 0 through 9 to use).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;크기가 10 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;arrayName&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이라는 배열을 선언합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(사용할 요소가 0-9입니다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec6a2229f621c89b08f6a049dddf3ca3638e72e5" translate="yes" xml:space="preserve">
          <source>The following shows the declaration as well as initialization of the array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 배열의 선언과 선언을 보여줍니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1b344e5653321d31dd495bfb3ad4309baa420df8" translate="yes" xml:space="preserve">
          <source>The following shows the declaration of an array, but the array is not initialized:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 배열 선언을 보여 주지만 배열이 초기화되지 않았습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="429516426d9d21d59a40c1bcd51c56beda43a672" translate="yes" xml:space="preserve">
          <source>The general form of a one-dimensional array declaration is</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1 차원 배열 선언의 일반적인 형식은&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f95b44caf0ba873a8ead040c61934dd0f7d2ec4" translate="yes" xml:space="preserve">
          <source>The third way of initializing is useful when you declare the array first and then initialize it. The cast is necessary here.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;세 번째 초기화 방법은 배열을 먼저 선언 한 다음 초기화 할 때 유용합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;캐스트가 필요합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d4da839e17afe216e16445a6dc68cf412fe7357" translate="yes" xml:space="preserve">
          <source>There are a lot of answers here. I am adding a few tricky ways to create arrays (from an &lt;strong&gt;exam&lt;/strong&gt; point of view it's good to know this)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에 많은 답변이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열을 만드는 몇 가지 까다로운 방법을 추가하고 있습니다 ( &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;시험&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 관점에서 이것을 아는 것이 좋습니다)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00a2b88efef8a6ee1d84cd9057aaad4a96620a99" translate="yes" xml:space="preserve">
          <source>There are two main ways to make an array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열을 만드는 두 가지 주요 방법이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de2c60726dc477227d58cef5b5cc365aa18ebf1a" translate="yes" xml:space="preserve">
          <source>There are two types of array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열에는 두 가지 유형이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4691136e34d4186c7b08b7ed0cb03d8b37684462" translate="yes" xml:space="preserve">
          <source>There are various ways in which you can declare an array in Java:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java로 배열을 선언 할 수있는 다양한 방법이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77a37c45c2d991061f2ae8ce24954d8253893b60" translate="yes" xml:space="preserve">
          <source>This one is pretty &lt;strong&gt;simple&lt;/strong&gt; and straightforward.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 매우 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;간단&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하고 간단합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f32cb077b5c5428bab048225d9e28f1d1f3a22bd" translate="yes" xml:space="preserve">
          <source>This one, for an empty array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 배열은 빈 배열입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a49dd6da63450049fb4d1b6a20bc5663c0a1ff57" translate="yes" xml:space="preserve">
          <source>This time there isn't any need to mention the size in the box bracket. Even a simple variant of this is:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이번에는 상자 괄호 안에 크기를 언급 할 필요가 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것의 간단한 변형조차도 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f713b1a57240f7e18f112723c5c496d19f578a5" translate="yes" xml:space="preserve">
          <source>This will create an array of length 3. As it holds a primitive type, int, all values are set to 0 by default. For example,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이렇게하면 길이가 3 인 배열이 만들어집니다. 기본 유형 인 int를 유지하므로 모든 값은 기본적으로 0으로 설정됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c59af311a82c9e7a3736067595e5c686d8d602d" translate="yes" xml:space="preserve">
          <source>To declare a static array of Integer, string, float, etc... use the bellow declaration and initialization statements.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Integer, string, float 등의 정적 배열을 선언하려면 다음 선언 및 초기화 문을 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4fc4c5ad1821edbb2f27ab76f45dc7d826be6558" translate="yes" xml:space="preserve">
          <source>To use dynamic features, you have to use List... 
List is pure &lt;strong&gt;dynamic Array&lt;/strong&gt; and there is no need to declare size at beginning. 
Bellow is the proper way to declare a list in JAVA&amp;gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동적 기능을 사용하려면 List ... List를 사용해야합니다. List는 순수한 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동적 배열&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이므로 처음에 크기를 선언 할 필요가 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JAVA에서 목록을 선언하는 올바른 방법은 Bellow입니다.&amp;gt;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2236c2cf7e54d7c093d96c8f71b61e7d40ca7e52" translate="yes" xml:space="preserve">
          <source>Using box brackets [] before the variable name</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수 이름 앞에 상자 괄호 [] 사용&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9fe3471b79eb33fc98fb097c1ccec3369b9df4ad" translate="yes" xml:space="preserve">
          <source>Using box brackets before the variable:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수 앞에 상자 괄호 사용 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="22286f2dd1b1d16f8a2f377c0d3ab3744a54473b" translate="yes" xml:space="preserve">
          <source>Using different &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/IntStream.html#iterate-int-java.util.function.IntPredicate-java.util.function.IntUnaryOperator-&quot;&gt;&lt;code&gt;IntStream.iterate&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/IntStream.html#takeWhile-java.util.function.IntPredicate-&quot;&gt;&lt;code&gt;IntStream.takeWhile&lt;/code&gt;&lt;/a&gt; methods:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/IntStream.html#iterate-int-java.util.function.IntPredicate-java.util.function.IntUnaryOperator-&quot;&gt; &lt;code&gt;IntStream.iterate&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/stream/IntStream.html#takeWhile-java.util.function.IntPredicate-&quot;&gt; &lt;code&gt;IntStream.takeWhile&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드 사용 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6aca899afa49509a823ed95674e8cf0cbceeba5" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;https://developer.oracle.com/java/jdk-10-local-variable-type-inference.html&quot;&gt;Local Variable Type Inference&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 Using &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.oracle.com/java/jdk-10-local-variable-type-inference.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;지역 변수 유형 추론을&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fbfdd1a54278cf6b141db0c7bb5bd461606fbc30" translate="yes" xml:space="preserve">
          <source>With local variable type inference you only have to specify the type once:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;지역 변수 유형 유추를 사용하면 유형을 한 번만 지정하면됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4c1241b566f6aceca467c183ea2715d0f828905a" translate="yes" xml:space="preserve">
          <source>With reflection, you can use &lt;code&gt;(Type[]) Array.newInstance(Type.class, capacity);&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;리플렉션을 사용하면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(Type[]) Array.newInstance(Type.class, capacity);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e49c0d81b331685a918f561b6bb655f018f9663d" translate="yes" xml:space="preserve">
          <source>You can also create arrays with the values already there, such as</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이미 존재하는 값으로 배열을 만들 수도 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f7e1c9df460d6ac77819b0e92b2b28e4417e43a" translate="yes" xml:space="preserve">
          <source>You can also do it with &lt;code&gt;java.util.Arrays&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;java.util.Arrays&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로도 가능합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="84e604823f41689c8333489976e7557a3c3b1284" translate="yes" xml:space="preserve">
          <source>You can also make multidimensional arrays, like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같이 다차원 배열을 만들 수도 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d302345d26cedde51da53249bbfab47362bd3eb" translate="yes" xml:space="preserve">
          <source>You can either use array declaration or array literal (but only when you declare and affect the variable right away, array literals cannot be used for re-assigning an array).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열 선언 또는 배열 리터럴을 사용할 수 있습니다 (단, 변수를 선언하고 바로 영향을주는 경우에만 배열 리터럴을 사용하여 배열을 다시 할당 할 수 없습니다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="982546c50726230bf3040272152168d500932d78" translate="yes" xml:space="preserve">
          <source>You can find more information in the &lt;a href=&quot;http://java.sun.com/docs/books/tutorial/java/nutsandbolts/arrays.html&quot;&gt;Sun tutorial&lt;/a&gt; site and the &lt;a href=&quot;http://java.sun.com/j2se/1.5.0/docs/api/java/util/Arrays.html&quot;&gt;JavaDoc&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://java.sun.com/docs/books/tutorial/java/nutsandbolts/arrays.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sun 튜토리얼&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사이트와 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://java.sun.com/j2se/1.5.0/docs/api/java/util/Arrays.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaDoc&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 자세한 정보를 찾을 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7966a57afd7865f6d3343a8ce4905b1d8f827d95" translate="yes" xml:space="preserve">
          <source>You have to make sure if you are using the above syntax, that the forward direction you have to specify the values in box brackets. Else it won't compile. Some examples:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 구문을 사용중인 경우 순방향으로 상자 괄호 안에 값을 지정해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇지 않으면 컴파일되지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;몇 가지 예 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="21b825df3faa11615ed424e23e8cff717a5252d5" translate="yes" xml:space="preserve">
          <source>a)</source>
          <target state="translated">a)</target>
        </trans-unit>
        <trans-unit id="fddfc6e1d7666d90904c5e3b0ac5d66177c016ab" translate="yes" xml:space="preserve">
          <source>b)</source>
          <target state="translated">b)</target>
        </trans-unit>
        <trans-unit id="b59df146904a9d1ba0d2afeb5dcc655177ff38f5" translate="yes" xml:space="preserve">
          <source>but when you declare and initialize the array by &quot;method a&quot; you will have to enter the values manually or by loop or something.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &quot;method a&quot;로 배열을 선언하고 초기화 할 때 값을 수동으로 또는 루프 등으로 입력해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b58d80edf0d9a5f19d17ce43b0b4205bab0262a4" translate="yes" xml:space="preserve">
          <source>example:</source>
          <target state="translated">example:</target>
        </trans-unit>
        <trans-unit id="bc3eeab034567c452215cbfbbe733b44999db7d7" translate="yes" xml:space="preserve">
          <source>for loop that allows you to edit &lt;code&gt;arrayName&lt;/code&gt; (conventional for loop):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;arrayName&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 편집 할 수있는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;for 루프 (기존의 for 루프) :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce57f9ec74d739a8f370ce118dcbd0d543eb0983" translate="yes" xml:space="preserve">
          <source>for loops:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;for 루프 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f8a544ea7cbffae352055223d1064e798cf761fd" translate="yes" xml:space="preserve">
          <source>is also valid, but I prefer the brackets after the type, because it's easier to see that the variable's type is actually an array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수도 유효하지만 변수 유형이 실제로 배열임을 쉽게 알 수 있기 때문에 유형 뒤에 괄호를 선호합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="2d177ae0276c78ed9840fab7da5a7f708d7a6c1c" translate="yes" xml:space="preserve">
          <source>so the basic pattern is for initialization and declaration by method a) is:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 기본 패턴은 메소드 a)에 의한 초기화 및 선언입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="139567a72ed93085de40c7389ceb1c59bc114445" translate="yes" xml:space="preserve">
          <source>this is not declaration of array, but the following statement makes the above declaration complete:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 배열 선언이 아니지만 다음 명령문은 위 선언을 완료합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad5f9d461327a4b8f1d0119329a1e09300714928" translate="yes" xml:space="preserve">
          <source>where in all of these, you can use &lt;code&gt;int i[]&lt;/code&gt; instead of &lt;code&gt;int[] i&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이들 모두에서 &lt;/font&gt; &lt;code&gt;int[] i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대신 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int i[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7a9afd2bad445d016e07ad73ac3df7a13b73f8de" translate="yes" xml:space="preserve">
          <source>which not only creates the empty space but fills it with those values. Java can tell that the primitives are integers and that there are 5 of them, so the size of the array can be determined implicitly.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;빈 공간을 만들뿐만 아니라 그 값으로 채 웁니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java는 프리미티브가 정수이고 5 개가 있음을 알 수 있으므로 배열의 크기를 암시 적으로 결정할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
