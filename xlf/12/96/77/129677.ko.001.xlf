<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/129677">
    <body>
      <group id="129677">
        <trans-unit id="2d01f839d8b2ac5a7d42b2c3b3c4a46bbae39563" translate="yes" xml:space="preserve">
          <source>1) User input should always be assumed to be bad.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1) 사용자 입력은 항상 나쁜 것으로 가정해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c8ae8f9b63f4f7ac9f5c7dce7513ce38bef2696" translate="yes" xml:space="preserve">
          <source>2) This is a large topic, and it depends on the context of the data being output. For HTML there are solutions such as htmlpurifier out there.
as a rule of thumb, always escape anything you output.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2) 이것은 큰 주제이며 출력되는 데이터의 컨텍스트에 따라 다릅니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HTML의 경우 htmlpurifier와 같은 솔루션이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경험상 항상 출력하는 것을 피하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c7d6fed06fc4568a93069e256057ac434bd6dd9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://htmlpurifier.org/&quot;&gt;HTML Purifier&lt;/a&gt; has been around a long time and is still actively updated. You can use it to sanitize malicious input, while still allowing a generous &amp;amp; configurable whitelist of tags. Works great with many WYSIWYG editors, but it might be heavy for some use cases.</source>
          <target state="translated">&lt;a href=&quot;http://htmlpurifier.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HTML Purifier&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 오랫동안 사용되어 왔으며 여전히 활발하게 업데이트되고 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 태그를 사용하여 악의적 인 입력을 삭제하는 동시에 관대하고 구성 가능한 태그의 허용 목록을 허용 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;많은 WYSIWYG 편집기에서 잘 작동하지만 일부 사용 사례에서는 무거울 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2e30650a74842cb895defc3804044b3c89a45975" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/class.pdo.php&quot;&gt;PDO::quote()&lt;/a&gt; - places quotes around the input string (if required) and escapes special characters within the input string, using a quoting style appropriate to the underlying driver:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/class.pdo.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PDO :: quote ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -입력 문자열을 따옴표로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;묶고 (&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 필요한 경우) 기본 드라이버에 적합한 따옴표 스타일을 사용하여 입력 문자열 내에서 특수 문자를 이스케이프합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec9d76d8c1ee5a9241fc009f20ea58bcb7f0c67b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/function.filter-input.php&quot;&gt;filter_input()&lt;/a&gt; &amp;mdash; Gets a specific external variable by name and optionally filters it:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.filter-input.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;filter_input ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;mdash; 이름으로 특정 외부 변수를 가져오고 선택적으로 필터링합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="197e77be997e0d6813a86a84a97267de1a14261c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/function.json-encode.php&quot;&gt;&lt;code&gt;json_encode&lt;/code&gt;&lt;/a&gt; is a safe way to provide user-supplied values from PHP to Javascript</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.json-encode.php&quot;&gt; &lt;code&gt;json_encode&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 PHP에서 Javascript로 사용자 제공 값을 제공하는 안전한 방법입니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="48b6b31bd59ae8f54a87f7932bcdd65e00e4a7f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/function.mysql-real-escape-string.php&quot;&gt;&lt;s&gt;mysql_real_escape_string&lt;/s&gt;&lt;/a&gt;&lt;sup&gt;[deprecated in PHP 5.5.0, removed in PHP 7.0.0].&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.mysql-real-escape-string.php&quot;&gt;&lt;s&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mysql_real_escape_string&lt;/font&gt;&lt;/font&gt;&lt;/s&gt;&lt;/a&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; [PHP 5.5.0에서 더 이상 사용되지 않고 PHP 7.0.0에서 제거됨]&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b2e09b476d75aeaa4edbcd50b0132560f8071076" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/function.preg-match.php&quot;&gt;preg_match()&lt;/a&gt; &amp;mdash; Perform a regular expression match;</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.preg-match.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;preg_match ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;mdash; 정규식 일치를 수행합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a86f3f2b45de5bdd7e961b3aa1821fc6b6e464fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/mysqli.real-escape-string.php&quot;&gt;mysqli_real_escape_string&lt;/a&gt; Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection. But recommended to use Prepared Statements because they are not simply escaped strings, a statement comes up with a complete query execution plan, including which tables and indexes it would use, it is a optimized way.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/mysqli.real-escape-string.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mysqli_real_escape_string&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 연결의 현재 문자 세트를 고려하여 SQL 문에서 사용하기 위해 문자열에서 특수 문자를 이스케이프합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 준비된 명령문은 단순히 이스케이프 된 문자열이 아니기 때문에 사용하는 것이 좋습니다. 명령문은 사용할 테이블 및 인덱스를 포함하여 완전한 쿼리 실행 계획을 제시하며 최적화 된 방법입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ddd94bba2acaa5a42cc343d26978aa5659998ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/pdo.prepare.php&quot;&gt;PDO Prepared Statements&lt;/a&gt;: vs MySQLi prepared statements supports more database drivers and named parameters:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/pdo.prepare.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PDO 준비된 명령문&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : vs MySQLi 준비된 명령문은 더 많은 데이터베이스 드라이버 및 명명 된 매개 변수를 지원합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31087e657f115c6ae414547009d6672f96fa786f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do you call external shell commands using &lt;a href=&quot;http://php.net/manual/en/function.exec.php&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/manual/en/function.system.php&quot;&gt;&lt;code&gt;system()&lt;/code&gt;&lt;/a&gt; functions, or to the &lt;a href=&quot;http://php.net/manual/en/language.operators.execution.php&quot;&gt;&lt;code&gt;backtick&lt;/code&gt;&lt;/a&gt; operator?&lt;/strong&gt; If so, in addition to SQL Injection &amp;amp; XSS you might have an additional concern to address, &lt;em&gt;users running malicious commands on your server&lt;/em&gt;. You need to use &lt;a href=&quot;http://php.net/manual/en/function.escapeshellcmd.php&quot;&gt;&lt;code&gt;escapeshellcmd&lt;/code&gt;&lt;/a&gt; if you'd like to escape the entire command OR &lt;a href=&quot;http://php.net/manual/en/function.escapeshellarg.php&quot;&gt;&lt;code&gt;escapeshellarg&lt;/code&gt;&lt;/a&gt; to escape individual arguments.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/function.exec.php&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/function.system.php&quot;&gt; &lt;code&gt;system()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수를 사용하거나 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/language.operators.execution.php&quot;&gt; &lt;code&gt;backtick&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 연산자로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;외부 쉘 명령을 호출 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니까? &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇다면 SQL Injection &amp;amp; XSS 외에도 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서버에서 악의적 인 명령을 실행하는 사용자&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 해결해야 할 추가 문제가있을 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 사용해야 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/function.escapeshellcmd.php&quot;&gt; &lt;code&gt;escapeshellcmd&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 전체 명령을 탈출하고 싶은 경우, 또는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/function.escapeshellarg.php&quot;&gt; &lt;code&gt;escapeshellarg&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 개별 인수를 탈출.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e39478210a7c0c3ebd2e42b2e65590119a580ecc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SQL Injection&lt;/strong&gt; - Today, generally, every PHP project should be using &lt;a href=&quot;http://php.net/manual/en/pdo.prepared-statements.php&quot;&gt;prepared statements via PHP Data Objects (PDO)&lt;/a&gt; as a best practice, &lt;em&gt;preventing an error from a stray quote as well as a full-featured solution against injection&lt;/em&gt;. It's also the most flexible &amp;amp; secure way to access your database.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL 인젝션&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -일반적으로 모든 PHP 프로젝트는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.prepared-statements.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP Data Objects (PDO)&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;통해 준비된 명령문을&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 모범 사례 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로 사용하여 흩어진 따옴표로 인한 오류와 인젝션에 대한 모든 기능을 갖춘 솔루션을 방지해야합니다&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 데이터베이스에 액세스하는 가장 유연하고 안전한 방법입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cfd97153563bf4c922b321ccc03a153e3346ed92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XSS - Sanitize data on the way in...&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;XSS-도중에 데이터를 삭제합니다 ...&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc156968bc89678692b894d6a5c5e12240b94d7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XSS - Sanitize data on the way out...&lt;/strong&gt; unless you guarantee the data was properly sanitized before you add it to your database, you'll need to sanitize it before displaying it to your user, we can leverage these useful PHP functions:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;XSS-나갈&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 때 데이터 삭제 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;...&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 데이터베이스에 데이터를 추가하기 전에 데이터가 제대로 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정리&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 되었다고 보장하지 않으면 사용자에게 데이터를 표시하기 전에 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정리&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 해야합니다. 다음과 같은 유용한 PHP 기능을 활용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="068808ff0a60a263a2358801c4749089e30def64" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/mysqli.set-charset.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/mysqli.set-charset.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="46e173dc9a760384731add89dab0f2870d080331" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.construct.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.construct.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="21b30dda49f2f98580fc87a73465f1c06f270546" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.exec.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.exec.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="20f973bca827652525ece5a7191c7c65279d7e87" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/ref.pdo-mysql.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/ref.pdo-mysql.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9ed4446127d86c78b106a84a5eff4cb6ed4f956e" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;[deprecated in PHP 5.5.0, removed in PHP 7.0.0].&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[PHP 5.5.0에서 더 이상 사용되지 않고 PHP 7.0.0에서 제거됨].&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a6556046fbcfcf7aba9e2c1d496d4c414c910ce5" translate="yes" xml:space="preserve">
          <source>A better solution is to use prepared statements. The &lt;a href=&quot;http://www.php.net/pdo&quot;&gt;PDO library&lt;/a&gt; and mysqli extension support these.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 나은 해결책은 준비된 문장을 사용하는 것입니다. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/pdo&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PDO 라이브러리&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 mysqli 확장은 다음을 지원합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c8b4387481b8b21adbbe7392aa035865c2014c6b" translate="yes" xml:space="preserve">
          <source>A long time ago someone tried to invent a one-size fits all mechanism for escaping data and we ended up with &quot;&lt;a href=&quot;http://php.net/manual/en/security.magicquotes.php&quot;&gt;magic_quotes&lt;/a&gt;&quot; which didn't properly escape data for all output targets and resulted in different installation requiring different code to work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오래 전에 누군가가 데이터를 이스케이프하기위한 모든 메커니즘에 맞는 단일 크기를 만들려고했지만 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 출력 대상에 대한 데이터를 올바르게 이스케이프하지 않고 다른 코드가 필요한 다른 설치가 발생하는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/security.magicquotes.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;magic_quotes&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;끝났습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0fc7a13401116e8243ae650fb135e8ebeb378727" translate="yes" xml:space="preserve">
          <source>A third example could be shell commands: If you are going to embed strings (such as arguments) to external commands, and call them with &lt;a href=&quot;http://php.net/manual/function.exec.php&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;, then you must use &lt;a href=&quot;http://php.net/manual/function.escapeshellcmd.php&quot;&gt;&lt;code&gt;escapeshellcmd&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://php.net/manual/function.escapeshellarg.php&quot;&gt;&lt;code&gt;escapeshellarg&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;세 번째 예는 쉘 명령 일 수 있습니다. 문자열 (인수 등)을 외부 명령에 포함시키고 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.exec.php&quot;&gt; &lt;code&gt;exec&lt;/code&gt; 로&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 호출 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하려면 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.escapeshellcmd.php&quot;&gt; &lt;code&gt;escapeshellcmd&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.escapeshellarg.php&quot;&gt; &lt;code&gt;escapeshellarg&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e5c726f106b0c67bcee919a11840ab92bf0eade3" translate="yes" xml:space="preserve">
          <source>And for database (model) layer there are ORM frameworks like Doctrine or wrappers around PDO like Nette Database.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 데이터베이스 (모델) 계층에는 Doctrine과 같은 ORM 프레임 워크 또는 Nette Database와 같은 PDO 주변 래퍼가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c9330dd2e1314fe70c4190e16e416b782b01badb" translate="yes" xml:space="preserve">
          <source>And so on and so forth ...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 등등 ...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="11a11a5dfe2fffbbd36948beab81434ec2fa5e02" translate="yes" xml:space="preserve">
          <source>Another example is HTML: If you embed strings within HTML markup, you must escape it with &lt;a href=&quot;http://php.net/manual/function.htmlspecialchars.php&quot;&gt;&lt;code&gt;htmlspecialchars&lt;/code&gt;&lt;/a&gt;. This means that every single &lt;code&gt;echo&lt;/code&gt; or &lt;code&gt;print&lt;/code&gt; statement should use &lt;code&gt;htmlspecialchars&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또 다른 예는 HTML입니다. HTML 마크 업 내에 문자열을 포함하는 경우 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.htmlspecialchars.php&quot;&gt; &lt;code&gt;htmlspecialchars&lt;/code&gt; 로&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 문자열을 이스케이프해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, 모든 단일 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;echo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;print&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 문은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;htmlspecialchars&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77451a5a324c3f31a98538f1241ff38c93653973" translate="yes" xml:space="preserve">
          <source>As for the SQL injection attacks, make sure you check the user input, and then run it though mysql_real_escape_string(). The function won't defeat all injection attacks, though, so it is important that you check the data before dumping it into your query string.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL 주입 공격의 경우 사용자 입력을 확인한 다음 mysql_real_escape_string ()을 통해 실행하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나이 함수는 모든 인젝션 공격을 막지는 못하므로 쿼리 문자열로 덤프하기 전에 데이터를 확인하는 것이 중요합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="70f490bdcfd74f199c8c9f2ad1d532dd0d8392ed" translate="yes" xml:space="preserve">
          <source>Basic rules of thumb</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경험의 기본 규칙&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="52e497215e568c0d8dcf18530294b4057df2fd8b" translate="yes" xml:space="preserve">
          <source>Both issues are far too big to go into in a single post, but there are lots of posts which go into more detail:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 문제 모두 단일 게시물에 들어가기에는 너무 크지 만 더 자세한 게시물이 많이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="403ca0e1883c9bdceb591d29dd9d3adb80fbe823" translate="yes" xml:space="preserve">
          <source>But of course that only cuts out one specific attack, so read all the other answers. (And yes I know that the code above isn't great, but it shows the specific defence.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 물론 특정 공격 하나만 차단하므로 다른 모든 답변을 읽으십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(그리고 위의 코드는 훌륭하지 않지만 특정 방어를 보여줍니다.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0400d8222cc4fb403356cb194eb689f467a44681" translate="yes" xml:space="preserve">
          <source>By all means &lt;a href=&quot;http://symcbean.blogspot.co.uk/2017/07/validate-input-escape-output.html&quot;&gt;validate input&lt;/a&gt; - decide whether you should accept it for further processing or tell the user it is unacceptable. But don't apply any change to representation of the data until it is about to leave PHP land.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;반드시 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://symcbean.blogspot.co.uk/2017/07/validate-input-escape-output.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입력의 유효성을 검사&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하십시오. 추가 처리를 위해 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입력&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 승인해야하는지 또는 사용자에게 허용되지 않는지를 알려주십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 PHP 토지를 떠날 때까지 데이터 표현에 변경을 적용하지 마십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="893894ce0a262221f6844c710bdd9007af076015" translate="yes" xml:space="preserve">
          <source>Check out &lt;a href=&quot;https://phpdelusions.net/pdo&quot;&gt;&lt;em&gt;(The only proper) PDO tutorial&lt;/em&gt;&lt;/a&gt; for pretty much everything you need to know about PDO. (Sincere thanks to top SO contributor, @YourCommonSense, for this great resource on the subject.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://phpdelusions.net/pdo&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PDO&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 대해 알아야 할 모든 내용 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 (유일한) PDO 튜토리얼&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;확인하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(이 주제에 대한 훌륭한 자료를 주신 SO 개발자 (@YourCommonSense)에게 감사드립니다.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c7552a526f85c6de9290ce674e36578f5ca0cdd" translate="yes" xml:space="preserve">
          <source>Check the variable contains what you are expecting for:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수에 기대하는 것이 포함되어 있는지 확인하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e35785ef46fe91adda0bb2bc95edad42da71547c" translate="yes" xml:space="preserve">
          <source>Do not try to prevent SQL injection by sanitizing input data.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입력 데이터를 삭제하여 SQL 삽입을 막으려 고하지 마십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="61f2c0fd1afcf789824a5f6f1258b9979dfd4d5a" translate="yes" xml:space="preserve">
          <source>Easiest way to avoid mistakes in sanitizing input and escaping data is using PHP framework like &lt;a href=&quot;http://symfony.com/&quot;&gt;Symfony&lt;/a&gt;, &lt;a href=&quot;http://nette.org/en/&quot;&gt;Nette&lt;/a&gt; etc. or part of that framework (templating engine, database layer, ORM).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입력 및 데이터를 삭제하는 실수를 피하는 가장 쉬운 방법은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://symfony.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Symfony&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://nette.org/en/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nette&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 등과 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;같은 PHP 프레임 워크 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 해당 프레임 워크의 일부 (템플릿 엔진, 데이터베이스 계층, ORM)를 사용하는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9d9fbd42dcd246044f66af486685093501db482" translate="yes" xml:space="preserve">
          <source>Escape all other output with &lt;code&gt;htmlspecialchars()&lt;/code&gt; and be mindful of the 2nd and 3rd parameters here.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;htmlspecialchars()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하여 다른 모든 출력을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;피하고&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 여기에서 두 번째 및 세 번째 매개 변수를 염두에 두십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3642b67ad1fb7b231149ce7ab92930a16d765590" translate="yes" xml:space="preserve">
          <source>Escaping output.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이스케이프 출력.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e4d3621b956946dbddbe00b105a477e193ad1d04" translate="yes" xml:space="preserve">
          <source>First of all, SQL injection is an input filtering problem, and XSS is an output escaping one - so you wouldn't even execute these two operations at the same time in the code lifecycle.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우선, SQL 주입은 입력 필터링 문제이고 XSS는 하나를 빠져 나가는 출력이므로 코드 수명주기에서이 두 작업을 동시에 실행조차하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ef84394fbdc42e23b3957a0093946a2c222b8bce" translate="yes" xml:space="preserve">
          <source>For SQL query, bind parameters (as with PDO) or use a driver-native escaping function for query variables (such as &lt;code&gt;mysql_real_escape_string()&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL 쿼리의 경우, PDO와 같이 매개 변수를 바인드하거나 쿼리 변수에 대한 드라이버 기본 이스케이프 기능 (예 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;mysql_real_escape_string()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )을 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="768192e7bd1e73ea1dd2aa6047fec8f6f4a21e46" translate="yes" xml:space="preserve">
          <source>For Strings use:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자열의 경우 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a4d5f6bc1515eba0a4f8d3895d351b699537b3e7" translate="yes" xml:space="preserve">
          <source>For really allowing HTML input with like stripped classes and/or tags depend on one of the dedicated xss validation packages. DO NOT WRITE YOUR OWN REGEXES TO PARSE HTML!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스트립 된 클래스 및 / 또는 태그와 같은 HTML 입력을 실제로 허용하려면 전용 xss 유효성 검사 패키지 중 하나에 의존합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HTML을 구문 분석하기 위해 자신의 레지스트리를 작성하지 마십시오!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5e6746a0b3a7bbcf345c1620070531cdadb865d5" translate="yes" xml:space="preserve">
          <source>Framework is automatically sanitizing input and you should't use $_POST, $_GET or $_SESSION variables directly, but through mechanism like routing, session handling etc.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프레임 워크는 입력을 자동으로 삭제하므로 $ _POST, $ _GET 또는 $ _SESSION 변수를 직접 사용하지 말고 라우팅, 세션 처리 등과 같은 메커니즘을 통해 사용해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10ae3619d0cc29cbdf1eb3a6f831f221ce9e1424" translate="yes" xml:space="preserve">
          <source>From the documentation (&lt;a href=&quot;http://php.net/manual/es/function.pg-escape-string.php&quot;&gt;http://php.net/manual/es/function.pg-escape-string.php&lt;/a&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문서에서 ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/es/function.pg-escape-string.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://php.net/manual/es/function.pg-escape-string.php&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="def16db71810caf6bd9b197ffe44afbd7ce9d911" translate="yes" xml:space="preserve">
          <source>How can I sanitize user input with PHP</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP로 사용자 입력을 소독하는 방법&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d7429d9588e46faadcd0180412ecb6d7f1535f7" translate="yes" xml:space="preserve">
          <source>If you are expecting an integer, use:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정수가 필요한 경우 다음을 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bcab0c28ba6e63b65cf5c270776241bc01d79275" translate="yes" xml:space="preserve">
          <source>If you're using PostgreSQL, the input from PHP can be escaped with pg_escape_string()</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PostgreSQL을 사용하는 경우 pg_escape_string ()을 사용하여 PHP 입력을 이스케이프 처리 할 수 ​​있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c8e4cbba33065e4ab88bb5cb466bb38d69c768cd" translate="yes" xml:space="preserve">
          <source>In other instances, where we don't want to accept HTML/Javascript at all, I've found this simple function useful (and has passed multiple audits against XSS):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HTML / Javascript를 전혀 받아들이고 싶지 않은 다른 경우에는이 간단한 기능이 유용하다는 것을 알았습니다 (XSS에 대해 여러 감사를 통과했습니다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b49b0d26e4330e624c70c482882f858cfc3ac57d" translate="yes" xml:space="preserve">
          <source>Instead, &lt;strong&gt;do not allow data to be used in creating your SQL code&lt;/strong&gt;.  Use Prepared Statements (i.e. using parameters in a template query) that uses bound variables.  It is the only way to be guaranteed against SQL injection.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대신, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL 코드 작성에 데이터를 사용하지 마십시오&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;바운드 변수를 사용하는 준비된 명령문 (예 : 템플리트 조회에서 매개 변수 사용)을 사용하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL 삽입에 대해 보장 할 수있는 유일한 방법입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="136b1dbfe8dbf848113a395f2caf7ef575eba377" translate="yes" xml:space="preserve">
          <source>Is there a catchall function somewhere that works well for sanitizing user input for SQL injection and XSS attacks, while still allowing certain types of HTML tags?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;특정 유형의 HTML 태그를 계속 허용하면서 SQL 삽입 및 XSS 공격에 대한 사용자 입력을 삭제하는 데 잘 작동하는 catchall 함수가 있습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f471b01c59a0ecb03b402f2a0f3d8dfcdd928002" translate="yes" xml:space="preserve">
          <source>It supports a great deal of SANITIZE, VALIDATE filters.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;많은 SANITIZE, VALIDATE 필터를 지원합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="199b9497f5267081e9c247dd3d8da36194200031" translate="yes" xml:space="preserve">
          <source>It's a common misconception that user input can be filtered. PHP even has a (now deprecated) &quot;feature&quot;, called &lt;a href=&quot;https://www.php.net/manual/en/security.magicquotes.php&quot;&gt;magic-quotes&lt;/a&gt;, that builds on this idea. It's nonsense. Forget about filtering (or cleaning, or whatever people call it).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용자 입력을 필터링 할 수 있다는 것은 일반적인 오해입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP에는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 아이디어를 기반으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 (현재 사용되지 않는) &quot;feature&quot;( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.php.net/manual/en/security.magicquotes.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;매직 인용 부호&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )가 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;말도 안 돼요 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;필터링 (또는 청소 또는 사람들이 부르는 것)은 잊어 버리십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f4d5795ad5d4608d4c3ea9c423f6e9a975403458" translate="yes" xml:space="preserve">
          <source>Just wanted to add that on the subject of output escaping, if you use php DOMDocument to make your html output it will automatically escape in the right context. An attribute (value=&quot;&quot;) and the inner text of a &amp;lt;span&amp;gt; are not equal.
To be safe against XSS read this:
&lt;a href=&quot;https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet&quot;&gt;OWASP XSS Prevention Cheat Sheet&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;출력 이스케이프 주제에 추가하고 싶었습니다 .php DOMDocument를 사용하여 html 출력을 만들면 올바른 컨텍스트에서 자동으로 이스케이프됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;lt;span&amp;gt;의 속성 (value = &quot;&quot;)과 내부 텍스트가 동일하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;XSS로부터 안전을 위해 다음을 읽으십시오 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;OWASP XSS Prevention Cheat Sheet&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="60198a33aeb248b6ffbdba60a0718b4039eeb2cf" translate="yes" xml:space="preserve">
          <source>Methods PHP output</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 출력 방법&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d2bc3bb9b800b664dcff4c90dc2c9853d5f2b77d" translate="yes" xml:space="preserve">
          <source>Methods for sanitizing user input with PHP:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP로 사용자 입력을 삭제하는 방법 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="faf7a40ae2065a38d2cb46f614e9e936b1279db9" translate="yes" xml:space="preserve">
          <source>My own filter class (uses JavaScript to highlight faulty fields) can be initiated by either an ajax request or normal form post. (see the example below)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 자신의 필터 클래스 (JavaScript를 사용하여 잘못된 필드를 강조 표시)는 ajax 요청 또는 일반 양식 게시로 시작할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(아래 예 참조)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10985aec5b69b93215f26c11c37ace08dd409cc9" translate="yes" xml:space="preserve">
          <source>MySQLi prepared statements:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQLi 준비 문장 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b2e939e97014d76fc52afb9f25398e8437a57d4" translate="yes" xml:space="preserve">
          <source>Never trust user data.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용자 데이터를 신뢰하지 마십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3fc19b6eabc192274c081f4cc04768e6da1bd620" translate="yes" xml:space="preserve">
          <source>No, there is not.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아니 없어.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e71755ad95a991d2550e729e313f99167ec08c2c" translate="yes" xml:space="preserve">
          <source>No.  You can't generically filter data without any context of what it's for.  Sometimes you'd want to take a SQL query as input and sometimes you'd want to take HTML as input.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아니요. 용도에 대한 컨텍스트 없이는 일반적으로 데이터를 필터링 할 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;때로는 SQL 쿼리를 입력으로 사용하고 때로는 HTML을 입력으로 사용하려고 할 수도 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd11f10cb95b2c076fc452dbf358ace02da8cdb3" translate="yes" xml:space="preserve">
          <source>Of course, keep in mind that you need to do your sql query escaping too depending on what type of db your are using (mysql_real_escape_string() is useless for an sql server for instance). You probably want to handle this automatically at your appropriate application layer like an ORM. Also, as mentioned above: for outputting to html use the other php dedicated functions like htmlspecialchars ;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;물론, 사용중인 db 유형에 따라 SQL 쿼리 이스케이프 처리를 수행해야한다는 것을 명심하십시오 (예 : mysql_real_escape_string ()은 SQL 서버에는 쓸모가 없습니다). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ORM과 같은 적절한 응용 프로그램 계층에서이를 자동으로 처리하려고합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 위에서 언급했듯이 html로 출력하려면 htmlspecialchars와 같은 다른 PHP 전용 함수를 사용하십시오.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d5981c8540a76eb2029024b194b93a3efd793fc" translate="yes" xml:space="preserve">
          <source>One trick that can help in the specific circumstance where you have a page like &lt;code&gt;/mypage?id=53&lt;/code&gt; and you use the id in a WHERE clause is to ensure that id definitely is an integer, like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;/mypage?id=53&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;같은 페이지 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가 있고 WHERE 절에서 id를 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 특정 상황에서 도움이 될 수있는 한 가지 트릭은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;id가 확실히 정수인지 확인하는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b0c10e2d4fa3143070da217cf90eb10f25bca7f8" translate="yes" xml:space="preserve">
          <source>PHP 5.2 introduced the &lt;strong&gt;filter_var&lt;/strong&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 5.2는 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;filter_var&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;도입했습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="81c651559f4dbe7cbc96e85543703dc1a1e80872" translate="yes" xml:space="preserve">
          <source>PHP has the new nice filter_input functions now, that for instance liberate you from finding 'the ultimate e-mail regex' now that there is a built-in FILTER_VALIDATE_EMAIL type</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP에는 새로운 멋진 filter_input 함수가 있습니다. 예를 들어 내장 된 FILTER_VALIDATE_EMAIL 유형이 있으므로 '최종 전자 메일 정규식'을 찾지 않아도됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="171fd95c8abb9573d2081f395e524c7356473f19" translate="yes" xml:space="preserve">
          <source>Please see my website &lt;a href=&quot;http://bobby-tables.com/&quot;&gt;http://bobby-tables.com/&lt;/a&gt; for more about preventing SQL injection.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL 삽입 방지에 대한 자세한 내용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 내 웹 사이트 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://bobby-tables.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://bobby-tables.com/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f543785f024bf51fd075ffdeb68766707018887" translate="yes" xml:space="preserve">
          <source>Safer PHP output</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보다 안전한 PHP 출력&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7082c859c9b7812a40a3131775791535efc835c1" translate="yes" xml:space="preserve">
          <source>Sanitizing / filtering of user input data.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용자 입력 데이터의 살균 / 필터링.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4241418b71d5c671bffbb4bae7b2bb9212d30ea8" translate="yes" xml:space="preserve">
          <source>Select utf8, latin1, ascii.., dont use vulnerable charsets big5, cp932, gb2312, gbk, sjis.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;취약한 문자셋 big5, cp932, gb2312, gbk, sjis를 사용하지 말고 utf8, latin1, ascii ..를 선택하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2d7501cac084808741395df8299fd5787721779b" translate="yes" xml:space="preserve">
          <source>Set charset explicitly:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자셋을 명시 적으로 설정하십시오 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="13c07eed9ebfe49ee8394c055157abca732a249c" translate="yes" xml:space="preserve">
          <source>Templating engine like &lt;a href=&quot;http://twig.sensiolabs.org/&quot;&gt;Twig&lt;/a&gt; or Latte has output escaping on by default - you don't have to solve manually if you have properly escaped your output depending on context (HTML or Javascript part of web page).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://twig.sensiolabs.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Twig&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 Latte &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;와 같은 템플릿 엔진 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 기본적으로 출력 이스케이프를 사용합니다. 컨텍스트 (웹 페이지의 HTML 또는 Javascript 부분)에 따라 출력을 올바르게 이스케이프 한 경우 수동으로 해결할 필요가 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1fbca31e1fcf00aa82c38350b13da658ed711f90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;htmlspecialchars()&lt;/code&gt; function converts some predefined characters to HTML entities.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;htmlspecialchars()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수 변환 HTML 개체에 대한 몇 가지 미리 정의 된 문자.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c04e51f77d61a28e30bf202c4fe2c7ce56781d2a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stripslashes()&lt;/code&gt; function removes backslashes</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;stripslashes()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수 슬래시 삭제&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a466a86b6e913569f4fae3cede3a81561c9cc946" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trim()&lt;/code&gt; function removes whitespace and other predefined characters from both sides of a string.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;trim()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수를 제거합니다 공백과 문자열의 양쪽에서 다른 미리 정의 된 문자.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="269e75117b6e759eb210dd655bddd974a81ed8da" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;only&lt;/em&gt; case where you need to actively filter data, is if you're accepting preformatted input. For example, if you let your users post HTML markup, that you plan to display on the site. However, you should be wise to avoid this at all cost, since no matter how well you filter it, it will always be a potential security hole.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;단지&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 당신이 미리 포맷 입력을 수신하는 경우 적극적 필터 데이터를 필요로하는 경우이다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어, 사용자가 HTML 마크 업을 게시하도록 허용하면 사이트에 표시 할 계획입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 필터를 아무리 잘 필터링하더라도 항상 잠재적 인 보안 허점이 될 수 있으므로이를 피하는 것이 좋습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="060f5ef963fb60e92d049b7feeca81819ca54b96" translate="yes" xml:space="preserve">
          <source>The predefined characters are:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사전 정의 된 문자는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="35580b6ad52c01ba4488170125c50a9e65babb9c" translate="yes" xml:space="preserve">
          <source>The process of escaping data for SQL - to prevent SQL injection - is very different from the process of escaping data for (X)HTML, to prevent XSS.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL 삽입을 방지하기 위해 SQL에 대한 데이터를 이스케이프하는 프로세스는 XSS를 방지하기 위해 (X) HTML에 대한 데이터를 이스케이프하는 프로세스와 매우 다릅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="17bf62cbc872170053df2e495c91ac3c6ac74584" translate="yes" xml:space="preserve">
          <source>The transforms you apply to data to make it safe for inclusion in an SQL statement are completely different from those you apply for inclusion in HTML are completely different from those you apply for inclusion in Javascript are completely different from those you apply for inclusion in LDIF are completely different from those you apply to inclusion in CSS are completely different from those you apply to inclusion in an Email....</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL 문에 포함하기에 안전하도록 데이터에 적용하는 변환은 HTML에 포함하도록 적용하는 것과 완전히 다릅니다. Javascript에 포함하도록 신청하는 것과는 완전히 다릅니다. LDIF에 포함하기 위해 적용하는 것과는 완전히 다릅니다. CSS에 포함하는 것과 완전히 다른 것은 이메일에 포함하는 것과는 완전히 다릅니다 ....&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1f0dcecfb20ba1d1a341edd58d72f4b5c1442285" translate="yes" xml:space="preserve">
          <source>There is the filter extension (&lt;a href=&quot;http://devolio.com/blog/archives/413-Data-Filtering-Using-PHPs-Filter-Functions-Part-one.html&quot;&gt;howto-link&lt;/a&gt;, &lt;a href=&quot;http://php.net/filter&quot;&gt;manual&lt;/a&gt;), which works pretty well with all GPC variables. It's not a magic-do-it-all thing though, you will still have to use it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 GPC 변수와 잘 작동 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 필터 확장 ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://devolio.com/blog/archives/413-Data-Filtering-Using-PHPs-Filter-Functions-Part-one.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;howto-link&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/filter&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;manual&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 마술처럼 모든 것이 아니지만 여전히 사용해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1909509beba0d411634dbb1917141ebd047048c9" translate="yes" xml:space="preserve">
          <source>There's no catchall function, because there are multiple concerns to be addressed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다루어야 할 여러 가지 우려가 있기 때문에 catchall 기능은 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a47bc113b4488d293b5b9897930cc1702c2e63d0" translate="yes" xml:space="preserve">
          <source>To address the XSS issue, take a look at &lt;a href=&quot;http://www.htmlpurifier.org&quot;&gt;HTML Purifier&lt;/a&gt;. It is fairly configurable and has a decent track record.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;XSS 문제를 해결하려면 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.htmlpurifier.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HTML Purifier를&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 살펴보십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 상당히 구성 가능하고 괜찮은 실적을 가지고 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aacd69a86e6fde2567e6d43eb5eb920ad1c6ceef" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://php.net/manual/en/ref.filter.php&quot;&gt;Filter Function&lt;/a&gt; filter_var() &amp;mdash; filters a variable with a specified filter:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/ref.filter.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;필터 함수&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;filter_var () &amp;mdash; 지정된 필터로 변수를 필터링합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e9cdfa5e79f8bf58acaa230e594bb0f90ed146e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;strip_tags()&lt;/code&gt; to filter out unwanted HTML</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;원하지 않는 HTML을 걸러 내기 위해 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;strip_tags()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9e0a6e9f0cd23ea70ece92d13bc41632e1eddc80" translate="yes" xml:space="preserve">
          <source>Use Modern Versions of MySQL and PHP.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;최신 버전의 MySQL 및 PHP를 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="158bf109055a4391853e862d88370c6aad637ac3" translate="yes" xml:space="preserve">
          <source>Use secure charsets:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;안전한 문자셋을 사용하십시오 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="190173fa9a0a8945467da85cad2c5cbd859c8c4d" translate="yes" xml:space="preserve">
          <source>Use single quotes (' ') around your variables inside your query.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;쿼리 내 변수 주위에 작은 따옴표 ( '')를 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c1d5f68a71902364f592c8951c7b28037bad3656" translate="yes" xml:space="preserve">
          <source>Use spatialized function:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;공간 함수 사용 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9fc1cb8178c33c027bef9fc36ce32b59e89755fe" translate="yes" xml:space="preserve">
          <source>Using prepared statements, or/and filtering with mysql_real_escape_string is definitely a must.
PHP also has filter_input built in which is a good place to start.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;준비된 명령문을 사용하거나 mysql_real_escape_string으로 필터링하는 것은 필수입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP에는 filter_input도 내장되어있어 시작하기에 좋습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8fdec9ef6cefb7103653b6d041d1890a5352e0ed" translate="yes" xml:space="preserve">
          <source>What you are describing here is two separate issues:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 설명하는 것은 두 가지 별도의 문제입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f5018a80b300558bb5cedb9c67aeebd9041e242" translate="yes" xml:space="preserve">
          <source>What you should do, to avoid problems, is quite simple: whenever you embed a string within foreign code, you must escape it, according to the rules of that language. For example, if you embed a string in some SQL targeting MySQL, you must escape the string with MySQL's function for this purpose (&lt;code&gt;mysqli_real_escape_string&lt;/code&gt;). (Or, in case of databases, using prepared statements are a better approach, when possible.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문제를 피하기 위해해야 ​​할 일은 매우 간단합니다. 외부 코드에 문자열을 포함 할 때마다 해당 언어의 규칙에 따라 이스케이프해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어, MySQL을 대상으로하는 일부 SQL에 문자열을 포함하는 경우이 목적을 위해 MySQL 기능을 사용하여 문자열을 이스케이프해야합니다 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;mysqli_real_escape_string&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 데이터베이스의 경우 준비된 문을 사용하는 것이 가능하면 더 나은 방법입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a350516541472d3775090a423f6261315a4c4bfd" translate="yes" xml:space="preserve">
          <source>When you call &lt;code&gt;echo&lt;/code&gt; or &lt;code&gt;print&lt;/code&gt; to display user-supplied values, use &lt;a href=&quot;http://php.net/manual/function.htmlspecialchars.php&quot;&gt;&lt;code&gt;htmlspecialchars&lt;/code&gt;&lt;/a&gt; unless the data was properly sanitized safe and is allowed to display HTML.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용자가 제공 한 값을 표시하기 위해 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;echo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;print&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;호출 할 때 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;데이터가 올바르게 위생 처리되어 HTML을 표시 할 수없는 경우가 아니면 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.htmlspecialchars.php&quot;&gt; &lt;code&gt;htmlspecialchars&lt;/code&gt; 를&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc255d7ae663a0144641261bf30f86bee325bb59" translate="yes" xml:space="preserve">
          <source>Write Your own validation function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자체 검증 기능을 작성하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63ccb8a2a4f0c1752cfec6059d40d0fef41dbbca" translate="yes" xml:space="preserve">
          <source>You always sanitize output.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 항상 출력을 소독합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc8072db5e3d12f9b4c07b3808fd4d4eac198f6f" translate="yes" xml:space="preserve">
          <source>You can read more about it here - &lt;a href=&quot;https://stackoverflow.com/questions/2964140/what-is-a-framework-what-does-it-do-why-do-we-need-a-framework&quot;&gt;What is a software framework?&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 여기에 대한 자세한 내용을보실 수 있습니다 - &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2964140/what-is-a-framework-what-does-it-do-why-do-we-need-a-framework&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;소프트웨어 프레임 워크는 무엇입니까?&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="065a44c1fd533eb8f0aeec539cc40f5d54158958" translate="yes" xml:space="preserve">
          <source>You need to filter input on a whitelist -- ensure that the data matches some specification of what you expect.  Then you need to escape it before you use it, depending on the context in which you are using it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;화이트리스트에서 입력을 필터링해야합니다. 데이터가 예상 한 사양과 일치하는지 확인하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 사용하는 컨텍스트에 따라 사용하기 전에 이스케이프해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="76c10eb695163d405afe10a26f80e6a20b18adb9" translate="yes" xml:space="preserve">
          <source>You never sanitize input.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 입력을 살균하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="05ad6cccc4873f2f7bdb9c7e3d0ccc3bf44d4353" translate="yes" xml:space="preserve">
          <source>more predefined filters</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 사전 정의 된 필터&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d171be0ec601f7ae8915d89e367ad0f1d8d4fd21" translate="yes" xml:space="preserve">
          <source>pg_escape_string() escapes a string for querying the database. It returns an escaped string in the PostgreSQL format without quotes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pg_escape_string ()은 데이터베이스를 쿼리하기위한 문자열을 이스케이프합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PostgreSQL 형식으로 이스케이프 된 문자열을 따옴표없이 반환합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
