<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/129677">
    <body>
      <group id="129677">
        <trans-unit id="2d01f839d8b2ac5a7d42b2c3b3c4a46bbae39563" translate="yes" xml:space="preserve">
          <source>1) User input should always be assumed to be bad.</source>
          <target state="translated">1)Вход пользователя всегда следует считать плохим.</target>
        </trans-unit>
        <trans-unit id="2c8ae8f9b63f4f7ac9f5c7dce7513ce38bef2696" translate="yes" xml:space="preserve">
          <source>2) This is a large topic, and it depends on the context of the data being output. For HTML there are solutions such as htmlpurifier out there.
as a rule of thumb, always escape anything you output.</source>
          <target state="translated">2)Это большая тема,и она зависит от контекста выводимых данных.Для HTML существуют такие решения,как htmlpurifier.как правило,всегда избегайте всего,что вы выводите.</target>
        </trans-unit>
        <trans-unit id="c7d6fed06fc4568a93069e256057ac434bd6dd9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://htmlpurifier.org/&quot;&gt;HTML Purifier&lt;/a&gt; has been around a long time and is still actively updated. You can use it to sanitize malicious input, while still allowing a generous &amp;amp; configurable whitelist of tags. Works great with many WYSIWYG editors, but it might be heavy for some use cases.</source>
          <target state="translated">&lt;a href=&quot;http://htmlpurifier.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HTML Purifier&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; существует уже давно и до сих пор активно обновляется. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете использовать его для дезинфекции вредоносного ввода, в то же время позволяя использовать щедрый и настраиваемый белый список тегов. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Прекрасно работает со многими редакторами WYSIWYG, но в некоторых случаях может оказаться тяжелым.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2e30650a74842cb895defc3804044b3c89a45975" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/class.pdo.php&quot;&gt;PDO::quote()&lt;/a&gt; - places quotes around the input string (if required) and escapes special characters within the input string, using a quoting style appropriate to the underlying driver:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/class.pdo.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PDO :: quote ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - помещает кавычки вокруг входной строки (если требуется) и экранирует специальные символы во входной строке, используя стиль цитирования, соответствующий базовому драйверу:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec9d76d8c1ee5a9241fc009f20ea58bcb7f0c67b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/function.filter-input.php&quot;&gt;filter_input()&lt;/a&gt; &amp;mdash; Gets a specific external variable by name and optionally filters it:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.filter-input.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;filter_input ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - получает определенную внешнюю переменную по имени и дополнительно фильтрует ее:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="197e77be997e0d6813a86a84a97267de1a14261c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/function.json-encode.php&quot;&gt;&lt;code&gt;json_encode&lt;/code&gt;&lt;/a&gt; is a safe way to provide user-supplied values from PHP to Javascript</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.json-encode.php&quot;&gt; &lt;code&gt;json_encode&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это безопасный способ предоставления пользовательских значений из PHP в Javascript&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="48b6b31bd59ae8f54a87f7932bcdd65e00e4a7f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/function.mysql-real-escape-string.php&quot;&gt;&lt;s&gt;mysql_real_escape_string&lt;/s&gt;&lt;/a&gt;&lt;sup&gt;[deprecated in PHP 5.5.0, removed in PHP 7.0.0].&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.mysql-real-escape-string.php&quot;&gt;&lt;s&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mysql_real_escape_string&lt;/font&gt;&lt;/font&gt;&lt;/s&gt;&lt;/a&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; [устарело в PHP 5.5.0, удалено в PHP 7.0.0].&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b2e09b476d75aeaa4edbcd50b0132560f8071076" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/function.preg-match.php&quot;&gt;preg_match()&lt;/a&gt; &amp;mdash; Perform a regular expression match;</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.preg-match.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;preg_match ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - выполняет сопоставление с регулярным выражением;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a86f3f2b45de5bdd7e961b3aa1821fc6b6e464fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/mysqli.real-escape-string.php&quot;&gt;mysqli_real_escape_string&lt;/a&gt; Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection. But recommended to use Prepared Statements because they are not simply escaped strings, a statement comes up with a complete query execution plan, including which tables and indexes it would use, it is a optimized way.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/mysqli.real-escape-string.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mysqli_real_escape_string&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Экранирует специальные символы в строке для использования в операторе SQL с учетом текущей кодировки соединения. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но рекомендуется использовать подготовленные операторы, поскольку они не являются просто экранированными строками, оператор предлагает полный план выполнения запроса, включая таблицы и индексы, которые он будет использовать, это оптимизированный способ.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ddd94bba2acaa5a42cc343d26978aa5659998ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/pdo.prepare.php&quot;&gt;PDO Prepared Statements&lt;/a&gt;: vs MySQLi prepared statements supports more database drivers and named parameters:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/pdo.prepare.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Подготовленные&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; операторы &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PDO&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : против подготовленных MySQLi операторов поддерживается больше драйверов базы данных и именованных параметров:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31087e657f115c6ae414547009d6672f96fa786f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do you call external shell commands using &lt;a href=&quot;http://php.net/manual/en/function.exec.php&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/manual/en/function.system.php&quot;&gt;&lt;code&gt;system()&lt;/code&gt;&lt;/a&gt; functions, or to the &lt;a href=&quot;http://php.net/manual/en/language.operators.execution.php&quot;&gt;&lt;code&gt;backtick&lt;/code&gt;&lt;/a&gt; operator?&lt;/strong&gt; If so, in addition to SQL Injection &amp;amp; XSS you might have an additional concern to address, &lt;em&gt;users running malicious commands on your server&lt;/em&gt;. You need to use &lt;a href=&quot;http://php.net/manual/en/function.escapeshellcmd.php&quot;&gt;&lt;code&gt;escapeshellcmd&lt;/code&gt;&lt;/a&gt; if you'd like to escape the entire command OR &lt;a href=&quot;http://php.net/manual/en/function.escapeshellarg.php&quot;&gt;&lt;code&gt;escapeshellarg&lt;/code&gt;&lt;/a&gt; to escape individual arguments.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы вызываете команды внешней оболочки, используя функции &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/function.exec.php&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/function.system.php&quot;&gt; &lt;code&gt;system()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , или &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;оператор &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/language.operators.execution.php&quot;&gt; &lt;code&gt;backtick&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ? &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если это так, в дополнение к SQL-инъекциям и XSS у вас может возникнуть дополнительная проблема для &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;пользователей, выполняющих вредоносные команды на вашем сервере&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вам нужно использовать &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/function.escapeshellcmd.php&quot;&gt; &lt;code&gt;escapeshellcmd&lt;/code&gt; ,&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; если вы хотите экранировать всю команду ИЛИ &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/function.escapeshellarg.php&quot;&gt; &lt;code&gt;escapeshellarg&lt;/code&gt; ,&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; чтобы экранировать отдельные аргументы.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e39478210a7c0c3ebd2e42b2e65590119a580ecc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SQL Injection&lt;/strong&gt; - Today, generally, every PHP project should be using &lt;a href=&quot;http://php.net/manual/en/pdo.prepared-statements.php&quot;&gt;prepared statements via PHP Data Objects (PDO)&lt;/a&gt; as a best practice, &lt;em&gt;preventing an error from a stray quote as well as a full-featured solution against injection&lt;/em&gt;. It's also the most flexible &amp;amp; secure way to access your database.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL-инъекция.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Сегодня, как правило, каждый PHP-проект должен использовать &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.prepared-statements.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;подготовленные операторы через PHP Data Objects (PDO)&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в качестве лучшей практики, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;предотвращающей ошибку из-за случайных цитат, а также полнофункциональное решение для внедрения&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это также самый гибкий и безопасный способ доступа к вашей базе данных.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cfd97153563bf4c922b321ccc03a153e3346ed92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XSS - Sanitize data on the way in...&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;XSS - очистить данные на пути в ...&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc156968bc89678692b894d6a5c5e12240b94d7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XSS - Sanitize data on the way out...&lt;/strong&gt; unless you guarantee the data was properly sanitized before you add it to your database, you'll need to sanitize it before displaying it to your user, we can leverage these useful PHP functions:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;XSS - Санитарная обработка данных при выходе ...&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; если вы не гарантируете, что данные были должным образом очищены, прежде чем добавлять их в базу данных, вам нужно будет санировать их перед отображением для пользователя, мы можем использовать эти полезные функции PHP:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="068808ff0a60a263a2358801c4749089e30def64" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/mysqli.set-charset.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/mysqli.set-charset.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="46e173dc9a760384731add89dab0f2870d080331" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.construct.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.construct.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="21b30dda49f2f98580fc87a73465f1c06f270546" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.exec.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.exec.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="20f973bca827652525ece5a7191c7c65279d7e87" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/ref.pdo-mysql.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/ref.pdo-mysql.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9ed4446127d86c78b106a84a5eff4cb6ed4f956e" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;[deprecated in PHP 5.5.0, removed in PHP 7.0.0].&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[устарело в PHP 5.5.0, удалено в PHP 7.0.0].&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a6556046fbcfcf7aba9e2c1d496d4c414c910ce5" translate="yes" xml:space="preserve">
          <source>A better solution is to use prepared statements. The &lt;a href=&quot;http://www.php.net/pdo&quot;&gt;PDO library&lt;/a&gt; and mysqli extension support these.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Лучшее решение - использовать подготовленные заявления. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Библиотека &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/pdo&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PDO&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и расширение mysqli поддерживают их.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c8b4387481b8b21adbbe7392aa035865c2014c6b" translate="yes" xml:space="preserve">
          <source>A long time ago someone tried to invent a one-size fits all mechanism for escaping data and we ended up with &quot;&lt;a href=&quot;http://php.net/manual/en/security.magicquotes.php&quot;&gt;magic_quotes&lt;/a&gt;&quot; which didn't properly escape data for all output targets and resulted in different installation requiring different code to work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Давным-давно кто-то пытался изобрести универсальный механизм для экранирования всех данных, и мы в итоге &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/security.magicquotes.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;получили&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;laquo; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;magic_quotes&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;raquo;, который некорректно экранировал данные для всех выходных целей и привел к разной установке, требующей разного кода для работы.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0fc7a13401116e8243ae650fb135e8ebeb378727" translate="yes" xml:space="preserve">
          <source>A third example could be shell commands: If you are going to embed strings (such as arguments) to external commands, and call them with &lt;a href=&quot;http://php.net/manual/function.exec.php&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;, then you must use &lt;a href=&quot;http://php.net/manual/function.escapeshellcmd.php&quot;&gt;&lt;code&gt;escapeshellcmd&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://php.net/manual/function.escapeshellarg.php&quot;&gt;&lt;code&gt;escapeshellarg&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Третьим примером могут быть команды оболочки: если вы собираетесь встраивать строки (например, аргументы) во внешние команды и вызывать их с помощью &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.exec.php&quot;&gt; &lt;code&gt;exec&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , то вы должны использовать &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.escapeshellcmd.php&quot;&gt; &lt;code&gt;escapeshellcmd&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.escapeshellarg.php&quot;&gt; &lt;code&gt;escapeshellarg&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e5c726f106b0c67bcee919a11840ab92bf0eade3" translate="yes" xml:space="preserve">
          <source>And for database (model) layer there are ORM frameworks like Doctrine or wrappers around PDO like Nette Database.</source>
          <target state="translated">А для уровня базы данных (модели)существуют фреймворки ORM,такие как Doctrine или обертки вокруг PDO,такие как Nette Database.</target>
        </trans-unit>
        <trans-unit id="c9330dd2e1314fe70c4190e16e416b782b01badb" translate="yes" xml:space="preserve">
          <source>And so on and so forth ...</source>
          <target state="translated">И так далее и так далее...</target>
        </trans-unit>
        <trans-unit id="11a11a5dfe2fffbbd36948beab81434ec2fa5e02" translate="yes" xml:space="preserve">
          <source>Another example is HTML: If you embed strings within HTML markup, you must escape it with &lt;a href=&quot;http://php.net/manual/function.htmlspecialchars.php&quot;&gt;&lt;code&gt;htmlspecialchars&lt;/code&gt;&lt;/a&gt;. This means that every single &lt;code&gt;echo&lt;/code&gt; or &lt;code&gt;print&lt;/code&gt; statement should use &lt;code&gt;htmlspecialchars&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Другой пример - HTML: если вы встраиваете строки в разметку HTML, вы должны экранировать ее с помощью &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.htmlspecialchars.php&quot;&gt; &lt;code&gt;htmlspecialchars&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это означает, что каждый &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;оператор &lt;/font&gt;&lt;/font&gt; &lt;code&gt;echo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;print&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; должен использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;htmlspecialchars&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77451a5a324c3f31a98538f1241ff38c93653973" translate="yes" xml:space="preserve">
          <source>As for the SQL injection attacks, make sure you check the user input, and then run it though mysql_real_escape_string(). The function won't defeat all injection attacks, though, so it is important that you check the data before dumping it into your query string.</source>
          <target state="translated">Что касается атак SQL инъекции,убедитесь,что вы проверили пользовательский ввод,а затем запустите его через mysql_real_escape_string().Функция,однако,не сможет победить все атаки инъекции,поэтому важно,чтобы вы проверили данные перед тем,как бросать их в строку запроса.</target>
        </trans-unit>
        <trans-unit id="70f490bdcfd74f199c8c9f2ad1d532dd0d8392ed" translate="yes" xml:space="preserve">
          <source>Basic rules of thumb</source>
          <target state="translated">Основные правила</target>
        </trans-unit>
        <trans-unit id="52e497215e568c0d8dcf18530294b4057df2fd8b" translate="yes" xml:space="preserve">
          <source>Both issues are far too big to go into in a single post, but there are lots of posts which go into more detail:</source>
          <target state="translated">Оба вопроса слишком велики,чтобы вдаваться в одну должность,но есть много должностей,которые вдаются в подробности:</target>
        </trans-unit>
        <trans-unit id="403ca0e1883c9bdceb591d29dd9d3adb80fbe823" translate="yes" xml:space="preserve">
          <source>But of course that only cuts out one specific attack, so read all the other answers. (And yes I know that the code above isn't great, but it shows the specific defence.)</source>
          <target state="translated">Но,конечно,это вырезает только одну конкретную атаку,так что читайте все остальные ответы.(И да,я знаю,что вышеприведенный код не очень хорош,но он показывает специфическую защиту).</target>
        </trans-unit>
        <trans-unit id="0400d8222cc4fb403356cb194eb689f467a44681" translate="yes" xml:space="preserve">
          <source>By all means &lt;a href=&quot;http://symcbean.blogspot.co.uk/2017/07/validate-input-escape-output.html&quot;&gt;validate input&lt;/a&gt; - decide whether you should accept it for further processing or tell the user it is unacceptable. But don't apply any change to representation of the data until it is about to leave PHP land.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обязательно &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://symcbean.blogspot.co.uk/2017/07/validate-input-escape-output.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;проверяйте ввод&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - решите, хотите ли вы принять его для дальнейшей обработки или скажите пользователю, что это недопустимо. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но не применяйте никаких изменений к представлению данных, пока они не покинут землю PHP.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="893894ce0a262221f6844c710bdd9007af076015" translate="yes" xml:space="preserve">
          <source>Check out &lt;a href=&quot;https://phpdelusions.net/pdo&quot;&gt;&lt;em&gt;(The only proper) PDO tutorial&lt;/em&gt;&lt;/a&gt; for pretty much everything you need to know about PDO. (Sincere thanks to top SO contributor, @YourCommonSense, for this great resource on the subject.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Прочтите &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://phpdelusions.net/pdo&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Единственное правильное) руководство&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; по &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PDO,&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; чтобы узнать почти все, что вам нужно знать о PDO. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Искренне благодарим ведущего SO SO, @YourCommonSense, за этот замечательный ресурс по этой теме.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c7552a526f85c6de9290ce674e36578f5ca0cdd" translate="yes" xml:space="preserve">
          <source>Check the variable contains what you are expecting for:</source>
          <target state="translated">Проверьте,что переменная содержит то,что вы ожидаете:</target>
        </trans-unit>
        <trans-unit id="e35785ef46fe91adda0bb2bc95edad42da71547c" translate="yes" xml:space="preserve">
          <source>Do not try to prevent SQL injection by sanitizing input data.</source>
          <target state="translated">Не пытайтесь предотвратить SQL-инъекцию,дезинфицируя входные данные.</target>
        </trans-unit>
        <trans-unit id="61f2c0fd1afcf789824a5f6f1258b9979dfd4d5a" translate="yes" xml:space="preserve">
          <source>Easiest way to avoid mistakes in sanitizing input and escaping data is using PHP framework like &lt;a href=&quot;http://symfony.com/&quot;&gt;Symfony&lt;/a&gt;, &lt;a href=&quot;http://nette.org/en/&quot;&gt;Nette&lt;/a&gt; etc. or part of that framework (templating engine, database layer, ORM).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Самый простой способ избежать ошибок при очистке входных данных и экранирования данных - использовать PHP-фреймворк, такой как &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://symfony.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Symfony&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://nette.org/en/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nette&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и т. Д., Или его часть (шаблонизатор, слой базы данных, ORM).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9d9fbd42dcd246044f66af486685093501db482" translate="yes" xml:space="preserve">
          <source>Escape all other output with &lt;code&gt;htmlspecialchars()&lt;/code&gt; and be mindful of the 2nd and 3rd parameters here.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;htmlspecialchars()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; все остальные выходные данные с помощью &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;htmlspecialchars ()&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;помните&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; о 2-м и 3-м параметрах здесь.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3642b67ad1fb7b231149ce7ab92930a16d765590" translate="yes" xml:space="preserve">
          <source>Escaping output.</source>
          <target state="translated">Эвакуационный выход.</target>
        </trans-unit>
        <trans-unit id="e4d3621b956946dbddbe00b105a477e193ad1d04" translate="yes" xml:space="preserve">
          <source>First of all, SQL injection is an input filtering problem, and XSS is an output escaping one - so you wouldn't even execute these two operations at the same time in the code lifecycle.</source>
          <target state="translated">Прежде всего,SQL-инъекция-это проблема фильтрации входных данных,а XSS-это проблема экранирования выходных данных-так что вы даже не будете выполнять эти две операции одновременно в жизненном цикле кода.</target>
        </trans-unit>
        <trans-unit id="ef84394fbdc42e23b3957a0093946a2c222b8bce" translate="yes" xml:space="preserve">
          <source>For SQL query, bind parameters (as with PDO) or use a driver-native escaping function for query variables (such as &lt;code&gt;mysql_real_escape_string()&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для SQL-запроса связывайте параметры (как с PDO) или используйте встроенную функцию драйвера для переменных запроса (таких как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;mysql_real_escape_string()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="768192e7bd1e73ea1dd2aa6047fec8f6f4a21e46" translate="yes" xml:space="preserve">
          <source>For Strings use:</source>
          <target state="translated">Для использования Strings:</target>
        </trans-unit>
        <trans-unit id="a4d5f6bc1515eba0a4f8d3895d351b699537b3e7" translate="yes" xml:space="preserve">
          <source>For really allowing HTML input with like stripped classes and/or tags depend on one of the dedicated xss validation packages. DO NOT WRITE YOUR OWN REGEXES TO PARSE HTML!</source>
          <target state="translated">Для того,чтобы действительно разрешить ввод HTML с такими же полосатыми классами andor-тегами,необходимо использовать один из специальных пакетов проверки xss.НЕ ПИШИТЕ СВОИ СОБСТВЕННЫЕ РЕГЕКСЫ ДЛЯ РАЗБОРА HTML!</target>
        </trans-unit>
        <trans-unit id="5e6746a0b3a7bbcf345c1620070531cdadb865d5" translate="yes" xml:space="preserve">
          <source>Framework is automatically sanitizing input and you should't use $_POST, $_GET or $_SESSION variables directly, but through mechanism like routing, session handling etc.</source>
          <target state="translated">Фреймворк автоматически дезинфицирует входные данные,и вы не должны напрямую использовать переменные $_POST,$_GET или $_SESSION,а через такие механизмы,как маршрутизация,обработка сеансов и т.п.</target>
        </trans-unit>
        <trans-unit id="10ae3619d0cc29cbdf1eb3a6f831f221ce9e1424" translate="yes" xml:space="preserve">
          <source>From the documentation (&lt;a href=&quot;http://php.net/manual/es/function.pg-escape-string.php&quot;&gt;http://php.net/manual/es/function.pg-escape-string.php&lt;/a&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Из документации ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/es/function.pg-escape-string.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://php.net/manual/es/function.pg-escape-string.php&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="def16db71810caf6bd9b197ffe44afbd7ce9d911" translate="yes" xml:space="preserve">
          <source>How can I sanitize user input with PHP</source>
          <target state="translated">Как дезинфицировать пользовательский ввод с помощью PHP</target>
        </trans-unit>
        <trans-unit id="4d7429d9588e46faadcd0180412ecb6d7f1535f7" translate="yes" xml:space="preserve">
          <source>If you are expecting an integer, use:</source>
          <target state="translated">Если вы ожидаете целое число,используйте:</target>
        </trans-unit>
        <trans-unit id="bcab0c28ba6e63b65cf5c270776241bc01d79275" translate="yes" xml:space="preserve">
          <source>If you're using PostgreSQL, the input from PHP can be escaped with pg_escape_string()</source>
          <target state="translated">Если вы используете PostgreSQL,входные данные из PHP могут быть экранированы с помощью pg_escape_string()</target>
        </trans-unit>
        <trans-unit id="c8e4cbba33065e4ab88bb5cb466bb38d69c768cd" translate="yes" xml:space="preserve">
          <source>In other instances, where we don't want to accept HTML/Javascript at all, I've found this simple function useful (and has passed multiple audits against XSS):</source>
          <target state="translated">В других случаях,когда мы вообще не хотим принимать HTMLJavascript,я нашел эту простую функцию полезной (и прошел несколько аудитов против XSS):</target>
        </trans-unit>
        <trans-unit id="b49b0d26e4330e624c70c482882f858cfc3ac57d" translate="yes" xml:space="preserve">
          <source>Instead, &lt;strong&gt;do not allow data to be used in creating your SQL code&lt;/strong&gt;.  Use Prepared Statements (i.e. using parameters in a template query) that uses bound variables.  It is the only way to be guaranteed against SQL injection.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вместо &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;этого не допускайте использования данных при создании кода SQL&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Используйте подготовленные операторы (то есть, используя параметры в шаблонном запросе), которые используют связанные переменные. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это единственный способ гарантировать защиту от SQL-инъекций.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="136b1dbfe8dbf848113a395f2caf7ef575eba377" translate="yes" xml:space="preserve">
          <source>Is there a catchall function somewhere that works well for sanitizing user input for SQL injection and XSS attacks, while still allowing certain types of HTML tags?</source>
          <target state="translated">Есть ли где-нибудь функция catchall,которая хорошо работает для дезинфекции пользовательского ввода для SQL-инъекций и XSS-атак,позволяя при этом определенные типы HTML-тегов?</target>
        </trans-unit>
        <trans-unit id="f471b01c59a0ecb03b402f2a0f3d8dfcdd928002" translate="yes" xml:space="preserve">
          <source>It supports a great deal of SANITIZE, VALIDATE filters.</source>
          <target state="translated">Он поддерживает большое количество САНИТИЗНЫХ,ВАЛИДНЫХ фильтров.</target>
        </trans-unit>
        <trans-unit id="199b9497f5267081e9c247dd3d8da36194200031" translate="yes" xml:space="preserve">
          <source>It's a common misconception that user input can be filtered. PHP even has a (now deprecated) &quot;feature&quot;, called &lt;a href=&quot;https://www.php.net/manual/en/security.magicquotes.php&quot;&gt;magic-quotes&lt;/a&gt;, that builds on this idea. It's nonsense. Forget about filtering (or cleaning, or whatever people call it).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это распространенное заблуждение, что пользовательский ввод может быть отфильтрован. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В PHP даже есть (теперь устаревшая) &amp;laquo;особенность&amp;raquo;, называемая &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.php.net/manual/en/security.magicquotes.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;магическими кавычками&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , которая основывается на этой идее. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это чепуха. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Забудьте о фильтрации (или очистке, или как люди это называют).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f4d5795ad5d4608d4c3ea9c423f6e9a975403458" translate="yes" xml:space="preserve">
          <source>Just wanted to add that on the subject of output escaping, if you use php DOMDocument to make your html output it will automatically escape in the right context. An attribute (value=&quot;&quot;) and the inner text of a &amp;lt;span&amp;gt; are not equal.
To be safe against XSS read this:
&lt;a href=&quot;https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet&quot;&gt;OWASP XSS Prevention Cheat Sheet&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Просто хочу добавить, что по теме экранирования вывода, если вы используете php DOMDocument для вывода html-кода, он автоматически выйдет в нужном контексте. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Атрибут (value = &quot;&quot;) и внутренний текст &amp;lt;span&amp;gt; не равны. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чтобы быть в безопасности от XSS, прочитайте это: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Шпаргалка по профилактике OWASP XSS&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="60198a33aeb248b6ffbdba60a0718b4039eeb2cf" translate="yes" xml:space="preserve">
          <source>Methods PHP output</source>
          <target state="translated">Методы вывода PHP</target>
        </trans-unit>
        <trans-unit id="d2bc3bb9b800b664dcff4c90dc2c9853d5f2b77d" translate="yes" xml:space="preserve">
          <source>Methods for sanitizing user input with PHP:</source>
          <target state="translated">Методы дезинфекции пользовательского ввода с помощью PHP:</target>
        </trans-unit>
        <trans-unit id="faf7a40ae2065a38d2cb46f614e9e936b1279db9" translate="yes" xml:space="preserve">
          <source>My own filter class (uses JavaScript to highlight faulty fields) can be initiated by either an ajax request or normal form post. (see the example below)</source>
          <target state="translated">Мой собственный класс фильтрации (использует JavaScript для выделения ошибочных полей)может быть инициирован либо запросом ajax,либо постом обычной формы.(см.пример ниже)</target>
        </trans-unit>
        <trans-unit id="10985aec5b69b93215f26c11c37ace08dd409cc9" translate="yes" xml:space="preserve">
          <source>MySQLi prepared statements:</source>
          <target state="translated">MySQLi подготовил заявления:</target>
        </trans-unit>
        <trans-unit id="7b2e939e97014d76fc52afb9f25398e8437a57d4" translate="yes" xml:space="preserve">
          <source>Never trust user data.</source>
          <target state="translated">Никогда не доверяйте пользовательским данным.</target>
        </trans-unit>
        <trans-unit id="3fc19b6eabc192274c081f4cc04768e6da1bd620" translate="yes" xml:space="preserve">
          <source>No, there is not.</source>
          <target state="translated">Нет,нет.</target>
        </trans-unit>
        <trans-unit id="e71755ad95a991d2550e729e313f99167ec08c2c" translate="yes" xml:space="preserve">
          <source>No.  You can't generically filter data without any context of what it's for.  Sometimes you'd want to take a SQL query as input and sometimes you'd want to take HTML as input.</source>
          <target state="translated">Нет.Обычно нельзя фильтровать данные без контекста,для чего они нужны.Иногда вам захочется принять SQL-запрос за вход,а иногда-HTML за вход.</target>
        </trans-unit>
        <trans-unit id="cd11f10cb95b2c076fc452dbf358ace02da8cdb3" translate="yes" xml:space="preserve">
          <source>Of course, keep in mind that you need to do your sql query escaping too depending on what type of db your are using (mysql_real_escape_string() is useless for an sql server for instance). You probably want to handle this automatically at your appropriate application layer like an ORM. Also, as mentioned above: for outputting to html use the other php dedicated functions like htmlspecialchars ;)</source>
          <target state="translated">Конечно,имейте в виду,что экранирование sql-запросов тоже нужно делать в зависимости от того,какой тип db вы используете (mysql_real_escape_string()бесполезна,например,для sql-сервера).Вероятно,вы захотите обрабатывать это автоматически на соответствующем прикладном уровне,как ORM.Также,как упоминалось выше:для вывода на html используйте другие выделенные php функции,такие как htmlspecialchars ;)</target>
        </trans-unit>
        <trans-unit id="6d5981c8540a76eb2029024b194b93a3efd793fc" translate="yes" xml:space="preserve">
          <source>One trick that can help in the specific circumstance where you have a page like &lt;code&gt;/mypage?id=53&lt;/code&gt; and you use the id in a WHERE clause is to ensure that id definitely is an integer, like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Одна хитрость, которая может помочь в определенных обстоятельствах, когда у вас есть страница типа &lt;/font&gt;&lt;/font&gt; &lt;code&gt;/mypage?id=53&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и вы используете id в предложении WHERE, это убедиться, что id определенно является целым числом, например так:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b0c10e2d4fa3143070da217cf90eb10f25bca7f8" translate="yes" xml:space="preserve">
          <source>PHP 5.2 introduced the &lt;strong&gt;filter_var&lt;/strong&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В PHP 5.2 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;появилась&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; функция &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;filter_var&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="81c651559f4dbe7cbc96e85543703dc1a1e80872" translate="yes" xml:space="preserve">
          <source>PHP has the new nice filter_input functions now, that for instance liberate you from finding 'the ultimate e-mail regex' now that there is a built-in FILTER_VALIDATE_EMAIL type</source>
          <target state="translated">В PHP появились новые приятные функции filter_input,которые,например,освобождают вас от поиска 'конечного почтового регекса' теперь,когда есть встроенный тип FILTER_VALIDATE_EMAIL</target>
        </trans-unit>
        <trans-unit id="171fd95c8abb9573d2081f395e524c7356473f19" translate="yes" xml:space="preserve">
          <source>Please see my website &lt;a href=&quot;http://bobby-tables.com/&quot;&gt;http://bobby-tables.com/&lt;/a&gt; for more about preventing SQL injection.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Пожалуйста, посетите мой сайт &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://bobby-tables.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://bobby-tables.com/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для получения дополнительной информации о предотвращении внедрения SQL.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f543785f024bf51fd075ffdeb68766707018887" translate="yes" xml:space="preserve">
          <source>Safer PHP output</source>
          <target state="translated">Безопасный вывод PHP</target>
        </trans-unit>
        <trans-unit id="7082c859c9b7812a40a3131775791535efc835c1" translate="yes" xml:space="preserve">
          <source>Sanitizing / filtering of user input data.</source>
          <target state="translated">Дезинфекция фильтрации пользовательских входных данных.</target>
        </trans-unit>
        <trans-unit id="4241418b71d5c671bffbb4bae7b2bb9212d30ea8" translate="yes" xml:space="preserve">
          <source>Select utf8, latin1, ascii.., dont use vulnerable charsets big5, cp932, gb2312, gbk, sjis.</source>
          <target state="translated">Выберите utf8,latin1,ascii...,не используйте уязвимые кодировки big5,cp932,gb2312,gbk,sjis.</target>
        </trans-unit>
        <trans-unit id="2d7501cac084808741395df8299fd5787721779b" translate="yes" xml:space="preserve">
          <source>Set charset explicitly:</source>
          <target state="translated">Установите кодовую таблицу явно:</target>
        </trans-unit>
        <trans-unit id="13c07eed9ebfe49ee8394c055157abca732a249c" translate="yes" xml:space="preserve">
          <source>Templating engine like &lt;a href=&quot;http://twig.sensiolabs.org/&quot;&gt;Twig&lt;/a&gt; or Latte has output escaping on by default - you don't have to solve manually if you have properly escaped your output depending on context (HTML or Javascript part of web page).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Движок шаблонов, такой как &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://twig.sensiolabs.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Twig&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или Latte, по умолчанию выводит экранирование - вам не нужно решать вручную, если вы правильно экранировали выход в зависимости от контекста (HTML или Javascript часть веб-страницы).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1fbca31e1fcf00aa82c38350b13da658ed711f90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;htmlspecialchars()&lt;/code&gt; function converts some predefined characters to HTML entities.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Функция &lt;/font&gt;&lt;/font&gt; &lt;code&gt;htmlspecialchars()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; преобразует некоторые предопределенные символы в объекты HTML.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c04e51f77d61a28e30bf202c4fe2c7ce56781d2a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stripslashes()&lt;/code&gt; function removes backslashes</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Функция &lt;/font&gt;&lt;/font&gt; &lt;code&gt;stripslashes()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; удаляет обратную косую черту&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a466a86b6e913569f4fae3cede3a81561c9cc946" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trim()&lt;/code&gt; function removes whitespace and other predefined characters from both sides of a string.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Функция &lt;/font&gt;&lt;/font&gt; &lt;code&gt;trim()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; удаляет пробелы и другие предопределенные символы с обеих сторон строки.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="269e75117b6e759eb210dd655bddd974a81ed8da" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;only&lt;/em&gt; case where you need to actively filter data, is if you're accepting preformatted input. For example, if you let your users post HTML markup, that you plan to display on the site. However, you should be wise to avoid this at all cost, since no matter how well you filter it, it will always be a potential security hole.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Только&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; случай , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;когда вам нужно активно фильтровать данные, если вы будете принимать Преформатированный вход. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Например, если вы позволите своим пользователям публиковать разметку HTML, которую вы планируете показывать на сайте. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Однако вам следует избегать этого любой ценой, поскольку независимо от того, насколько хорошо вы его фильтруете, это всегда будет потенциальной дырой в безопасности.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="060f5ef963fb60e92d049b7feeca81819ca54b96" translate="yes" xml:space="preserve">
          <source>The predefined characters are:</source>
          <target state="translated">Предопределенные символы:</target>
        </trans-unit>
        <trans-unit id="35580b6ad52c01ba4488170125c50a9e65babb9c" translate="yes" xml:space="preserve">
          <source>The process of escaping data for SQL - to prevent SQL injection - is very different from the process of escaping data for (X)HTML, to prevent XSS.</source>
          <target state="translated">Процесс экранирования данных для SQL-для предотвращения SQL инъекции-очень отличается от процесса экранирования данных для (X)HTML,для предотвращения XSS.</target>
        </trans-unit>
        <trans-unit id="17bf62cbc872170053df2e495c91ac3c6ac74584" translate="yes" xml:space="preserve">
          <source>The transforms you apply to data to make it safe for inclusion in an SQL statement are completely different from those you apply for inclusion in HTML are completely different from those you apply for inclusion in Javascript are completely different from those you apply for inclusion in LDIF are completely different from those you apply to inclusion in CSS are completely different from those you apply to inclusion in an Email....</source>
          <target state="translated">Трансформации,которые вы применяете к данным,чтобы сделать их безопасными для включения в SQL оператор,полностью отличаются от тех,которые вы применяете для включения в HTML,полностью отличаются от тех,которые вы применяете для включения в Javascript,полностью отличаются от тех,которые вы применяете для включения в LDIF,полностью отличаются от тех,которые вы применяете для включения в CSS,полностью отличаются от тех,которые вы применяете для включения в Email.....</target>
        </trans-unit>
        <trans-unit id="1f0dcecfb20ba1d1a341edd58d72f4b5c1442285" translate="yes" xml:space="preserve">
          <source>There is the filter extension (&lt;a href=&quot;http://devolio.com/blog/archives/413-Data-Filtering-Using-PHPs-Filter-Functions-Part-one.html&quot;&gt;howto-link&lt;/a&gt;, &lt;a href=&quot;http://php.net/filter&quot;&gt;manual&lt;/a&gt;), which works pretty well with all GPC variables. It's not a magic-do-it-all thing though, you will still have to use it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Существует расширение фильтра ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://devolio.com/blog/archives/413-Data-Filtering-Using-PHPs-Filter-Functions-Part-one.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;howto-link&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/filter&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;manual&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), которое довольно хорошо работает со всеми переменными GPC. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это не волшебство делай все, хотя, тебе все равно придется его использовать.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1909509beba0d411634dbb1917141ebd047048c9" translate="yes" xml:space="preserve">
          <source>There's no catchall function, because there are multiple concerns to be addressed.</source>
          <target state="translated">Функции ловушки нет,потому что есть множество проблем,которые нужно решать.</target>
        </trans-unit>
        <trans-unit id="a47bc113b4488d293b5b9897930cc1702c2e63d0" translate="yes" xml:space="preserve">
          <source>To address the XSS issue, take a look at &lt;a href=&quot;http://www.htmlpurifier.org&quot;&gt;HTML Purifier&lt;/a&gt;. It is fairly configurable and has a decent track record.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чтобы решить проблему XSS, взгляните на &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.htmlpurifier.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HTML Purifier&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это довольно настраиваемый и имеет достойный послужной список.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aacd69a86e6fde2567e6d43eb5eb920ad1c6ceef" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://php.net/manual/en/ref.filter.php&quot;&gt;Filter Function&lt;/a&gt; filter_var() &amp;mdash; filters a variable with a specified filter:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Использовать &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/ref.filter.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;функцию фильтра&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; filter_var () - фильтрует переменную с указанным фильтром:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e9cdfa5e79f8bf58acaa230e594bb0f90ed146e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;strip_tags()&lt;/code&gt; to filter out unwanted HTML</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Используйте &lt;/font&gt;&lt;/font&gt; &lt;code&gt;strip_tags()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для фильтрации нежелательного HTML&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9e0a6e9f0cd23ea70ece92d13bc41632e1eddc80" translate="yes" xml:space="preserve">
          <source>Use Modern Versions of MySQL and PHP.</source>
          <target state="translated">Используйте современные версии MySQL и PHP.</target>
        </trans-unit>
        <trans-unit id="158bf109055a4391853e862d88370c6aad637ac3" translate="yes" xml:space="preserve">
          <source>Use secure charsets:</source>
          <target state="translated">Используйте безопасные зарядные устройства:</target>
        </trans-unit>
        <trans-unit id="190173fa9a0a8945467da85cad2c5cbd859c8c4d" translate="yes" xml:space="preserve">
          <source>Use single quotes (' ') around your variables inside your query.</source>
          <target state="translated">Используйте одинарные кавычки (' ')вокруг переменных внутри запроса.</target>
        </trans-unit>
        <trans-unit id="c1d5f68a71902364f592c8951c7b28037bad3656" translate="yes" xml:space="preserve">
          <source>Use spatialized function:</source>
          <target state="translated">Используйте пространственную функцию:</target>
        </trans-unit>
        <trans-unit id="9fc1cb8178c33c027bef9fc36ce32b59e89755fe" translate="yes" xml:space="preserve">
          <source>Using prepared statements, or/and filtering with mysql_real_escape_string is definitely a must.
PHP also has filter_input built in which is a good place to start.</source>
          <target state="translated">Используя подготовленные операторы,фильтрация по фразам с помощью mysql_real_escape_string,безусловно,обязательна.В PHP также встроена функция filter_input,с которой можно начать работу.</target>
        </trans-unit>
        <trans-unit id="8fdec9ef6cefb7103653b6d041d1890a5352e0ed" translate="yes" xml:space="preserve">
          <source>What you are describing here is two separate issues:</source>
          <target state="translated">То,что вы описываете здесь,это два отдельных вопроса:</target>
        </trans-unit>
        <trans-unit id="5f5018a80b300558bb5cedb9c67aeebd9041e242" translate="yes" xml:space="preserve">
          <source>What you should do, to avoid problems, is quite simple: whenever you embed a string within foreign code, you must escape it, according to the rules of that language. For example, if you embed a string in some SQL targeting MySQL, you must escape the string with MySQL's function for this purpose (&lt;code&gt;mysqli_real_escape_string&lt;/code&gt;). (Or, in case of databases, using prepared statements are a better approach, when possible.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;То, что вы должны сделать, чтобы избежать проблем, довольно просто: всякий раз, когда вы встраиваете строку в чужой код, вы должны избегать ее в соответствии с правилами этого языка. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Например, если вы встраиваете строку в какой-то SQL, ориентированный на MySQL, вы должны экранировать строку с помощью функции MySQL для этой цели ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;mysqli_real_escape_string&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Или, в случае баз данных, использование подготовленных заявлений является лучшим подходом, когда это возможно.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a350516541472d3775090a423f6261315a4c4bfd" translate="yes" xml:space="preserve">
          <source>When you call &lt;code&gt;echo&lt;/code&gt; or &lt;code&gt;print&lt;/code&gt; to display user-supplied values, use &lt;a href=&quot;http://php.net/manual/function.htmlspecialchars.php&quot;&gt;&lt;code&gt;htmlspecialchars&lt;/code&gt;&lt;/a&gt; unless the data was properly sanitized safe and is allowed to display HTML.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда вы вызываете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;echo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;print&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для отображения предоставленных пользователем значений, используйте &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.htmlspecialchars.php&quot;&gt; &lt;code&gt;htmlspecialchars&lt;/code&gt; ,&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; если только данные не были должным образом очищены безопасным образом и не разрешено отображать HTML.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc255d7ae663a0144641261bf30f86bee325bb59" translate="yes" xml:space="preserve">
          <source>Write Your own validation function.</source>
          <target state="translated">Напишите свою собственную функцию проверки.</target>
        </trans-unit>
        <trans-unit id="63ccb8a2a4f0c1752cfec6059d40d0fef41dbbca" translate="yes" xml:space="preserve">
          <source>You always sanitize output.</source>
          <target state="translated">Ты всегда санируешь выходные данные.</target>
        </trans-unit>
        <trans-unit id="fc8072db5e3d12f9b4c07b3808fd4d4eac198f6f" translate="yes" xml:space="preserve">
          <source>You can read more about it here - &lt;a href=&quot;https://stackoverflow.com/questions/2964140/what-is-a-framework-what-does-it-do-why-do-we-need-a-framework&quot;&gt;What is a software framework?&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете прочитать больше об этом здесь - &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2964140/what-is-a-framework-what-does-it-do-why-do-we-need-a-framework&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Что такое программный каркас?&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="065a44c1fd533eb8f0aeec539cc40f5d54158958" translate="yes" xml:space="preserve">
          <source>You need to filter input on a whitelist -- ensure that the data matches some specification of what you expect.  Then you need to escape it before you use it, depending on the context in which you are using it.</source>
          <target state="translated">Вам нужно отфильтровать входные данные в белом списке-убедитесь,что данные соответствуют некоторой спецификации того,что вы ожидаете.Затем,в зависимости от контекста,в котором вы его используете,вам нужно экранировать его перед тем,как использовать.</target>
        </trans-unit>
        <trans-unit id="76c10eb695163d405afe10a26f80e6a20b18adb9" translate="yes" xml:space="preserve">
          <source>You never sanitize input.</source>
          <target state="translated">Ты никогда не дезинфицируешь входные данные.</target>
        </trans-unit>
        <trans-unit id="05ad6cccc4873f2f7bdb9c7e3d0ccc3bf44d4353" translate="yes" xml:space="preserve">
          <source>more predefined filters</source>
          <target state="translated">дополнительные фильтры</target>
        </trans-unit>
        <trans-unit id="d171be0ec601f7ae8915d89e367ad0f1d8d4fd21" translate="yes" xml:space="preserve">
          <source>pg_escape_string() escapes a string for querying the database. It returns an escaped string in the PostgreSQL format without quotes.</source>
          <target state="translated">pg_escape_string()экранирует строку для запроса к БД.Она возвращает экранированную строку в формате PostgreSQL без кавычек.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
