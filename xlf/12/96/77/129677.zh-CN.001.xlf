<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/129677">
    <body>
      <group id="129677">
        <trans-unit id="2d01f839d8b2ac5a7d42b2c3b3c4a46bbae39563" translate="yes" xml:space="preserve">
          <source>1) User input should always be assumed to be bad.</source>
          <target state="translated">1)用户的输入应始终认为是坏的。</target>
        </trans-unit>
        <trans-unit id="2c8ae8f9b63f4f7ac9f5c7dce7513ce38bef2696" translate="yes" xml:space="preserve">
          <source>2) This is a large topic, and it depends on the context of the data being output. For HTML there are solutions such as htmlpurifier out there.
as a rule of thumb, always escape anything you output.</source>
          <target state="translated">2)这是一个很大的话题,这取决于输出数据的上下文。对于HTML,有一些解决方案,比如htmlpurifier。</target>
        </trans-unit>
        <trans-unit id="c7d6fed06fc4568a93069e256057ac434bd6dd9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://htmlpurifier.org/&quot;&gt;HTML Purifier&lt;/a&gt; has been around a long time and is still actively updated. You can use it to sanitize malicious input, while still allowing a generous &amp;amp; configurable whitelist of tags. Works great with many WYSIWYG editors, but it might be heavy for some use cases.</source>
          <target state="translated">&lt;a href=&quot;http://htmlpurifier.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HTML Purifier&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;已经存在了很长时间，并且仍在积极更新中。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以使用它来清除恶意输入，同时仍然允许大量且可配置的标签白名单。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在许多WYSIWYG编辑器中都可以很好地工作，但是在某些用例中可能会很繁重。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2e30650a74842cb895defc3804044b3c89a45975" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/class.pdo.php&quot;&gt;PDO::quote()&lt;/a&gt; - places quotes around the input string (if required) and escapes special characters within the input string, using a quoting style appropriate to the underlying driver:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/class.pdo.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PDO :: quote（）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -使用适合底层驱动程序的引号样式将引号放在输入字符串周围（如果需要），并在输入字符串内转义特殊字符：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec9d76d8c1ee5a9241fc009f20ea58bcb7f0c67b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/function.filter-input.php&quot;&gt;filter_input()&lt;/a&gt; &amp;mdash; Gets a specific external variable by name and optionally filters it:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.filter-input.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;filter_input（）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;mdash;按名称获取特定的外部变量，并可以选择对其进行过滤：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="197e77be997e0d6813a86a84a97267de1a14261c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/function.json-encode.php&quot;&gt;&lt;code&gt;json_encode&lt;/code&gt;&lt;/a&gt; is a safe way to provide user-supplied values from PHP to Javascript</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.json-encode.php&quot;&gt; &lt;code&gt;json_encode&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是从PHP到Javascript提供用户提供的值的安全方法&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="48b6b31bd59ae8f54a87f7932bcdd65e00e4a7f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/function.mysql-real-escape-string.php&quot;&gt;&lt;s&gt;mysql_real_escape_string&lt;/s&gt;&lt;/a&gt;&lt;sup&gt;[deprecated in PHP 5.5.0, removed in PHP 7.0.0].&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.mysql-real-escape-string.php&quot;&gt;&lt;s&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mysql_real_escape_string&lt;/font&gt;&lt;/font&gt;&lt;/s&gt;&lt;/a&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; [在PHP 5.5.0中已弃用，在PHP 7.0.0中已删除]。&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b2e09b476d75aeaa4edbcd50b0132560f8071076" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/function.preg-match.php&quot;&gt;preg_match()&lt;/a&gt; &amp;mdash; Perform a regular expression match;</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.preg-match.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;preg_match（）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;mdash;执行正则表达式匹配；&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a86f3f2b45de5bdd7e961b3aa1821fc6b6e464fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/mysqli.real-escape-string.php&quot;&gt;mysqli_real_escape_string&lt;/a&gt; Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection. But recommended to use Prepared Statements because they are not simply escaped strings, a statement comes up with a complete query execution plan, including which tables and indexes it would use, it is a optimized way.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/mysqli.real-escape-string.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mysqli_real_escape_string&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;考虑到连接的当前字符集，转义字符串中的特殊字符以用于SQL语句。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是建议使用&amp;ldquo; Prepared Statements&amp;rdquo;，因为它们不是简单的转义字符串，它带有完整的查询执行计划，包括它将使用的表和索引，这是一种优化的方式。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ddd94bba2acaa5a42cc343d26978aa5659998ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/pdo.prepare.php&quot;&gt;PDO Prepared Statements&lt;/a&gt;: vs MySQLi prepared statements supports more database drivers and named parameters:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/pdo.prepare.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PDO准备语句&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：vs MySQLi准备语句支持更多的数据库驱动程序和命名参数：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31087e657f115c6ae414547009d6672f96fa786f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do you call external shell commands using &lt;a href=&quot;http://php.net/manual/en/function.exec.php&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/manual/en/function.system.php&quot;&gt;&lt;code&gt;system()&lt;/code&gt;&lt;/a&gt; functions, or to the &lt;a href=&quot;http://php.net/manual/en/language.operators.execution.php&quot;&gt;&lt;code&gt;backtick&lt;/code&gt;&lt;/a&gt; operator?&lt;/strong&gt; If so, in addition to SQL Injection &amp;amp; XSS you might have an additional concern to address, &lt;em&gt;users running malicious commands on your server&lt;/em&gt;. You need to use &lt;a href=&quot;http://php.net/manual/en/function.escapeshellcmd.php&quot;&gt;&lt;code&gt;escapeshellcmd&lt;/code&gt;&lt;/a&gt; if you'd like to escape the entire command OR &lt;a href=&quot;http://php.net/manual/en/function.escapeshellarg.php&quot;&gt;&lt;code&gt;escapeshellarg&lt;/code&gt;&lt;/a&gt; to escape individual arguments.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您是否使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/function.exec.php&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/function.system.php&quot;&gt; &lt;code&gt;system()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数或&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/language.operators.execution.php&quot;&gt; &lt;code&gt;backtick&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运算符&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调用外部Shell命令&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果是这样，除了SQL Injection＆XSS之外，您还可能需要解决&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在服务器上运行恶意命令的用户&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您想转义整个命令，或者使用&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/function.escapeshellarg.php&quot;&gt; &lt;code&gt;escapeshellarg&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;转义单个参数，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;则&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;需要使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/function.escapeshellcmd.php&quot;&gt; &lt;code&gt;escapeshellcmd&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e39478210a7c0c3ebd2e42b2e65590119a580ecc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SQL Injection&lt;/strong&gt; - Today, generally, every PHP project should be using &lt;a href=&quot;http://php.net/manual/en/pdo.prepared-statements.php&quot;&gt;prepared statements via PHP Data Objects (PDO)&lt;/a&gt; as a best practice, &lt;em&gt;preventing an error from a stray quote as well as a full-featured solution against injection&lt;/em&gt;. It's also the most flexible &amp;amp; secure way to access your database.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL注入&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -如今，通常，每个PHP项目都应&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.prepared-statements.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过PHP数据对象（PDO）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;预先准备好的语句，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是最佳实践，&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可防止因引号引起的错误以及防止注入的功能齐全的解决方案&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这也是访问数据库的最灵活，最安全的方法。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cfd97153563bf4c922b321ccc03a153e3346ed92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XSS - Sanitize data on the way in...&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;XSS-清理中途的数据&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc156968bc89678692b894d6a5c5e12240b94d7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XSS - Sanitize data on the way out...&lt;/strong&gt; unless you guarantee the data was properly sanitized before you add it to your database, you'll need to sanitize it before displaying it to your user, we can leverage these useful PHP functions:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;XSS-清理输出中的数据...&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;除非您保证在将数据添加到数据库之前已对数据进行了正确的清理，否则需要在将其显示给用户之前对其进行清理，我们可以利用以下有用的PHP函数：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="068808ff0a60a263a2358801c4749089e30def64" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/mysqli.set-charset.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/mysqli.set-charset.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="46e173dc9a760384731add89dab0f2870d080331" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.construct.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.construct.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="21b30dda49f2f98580fc87a73465f1c06f270546" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.exec.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.exec.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="20f973bca827652525ece5a7191c7c65279d7e87" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/ref.pdo-mysql.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/ref.pdo-mysql.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9ed4446127d86c78b106a84a5eff4cb6ed4f956e" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;[deprecated in PHP 5.5.0, removed in PHP 7.0.0].&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[在PHP 5.5.0中已弃用，在PHP 7.0.0中已删除]。&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a6556046fbcfcf7aba9e2c1d496d4c414c910ce5" translate="yes" xml:space="preserve">
          <source>A better solution is to use prepared statements. The &lt;a href=&quot;http://www.php.net/pdo&quot;&gt;PDO library&lt;/a&gt; and mysqli extension support these.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更好的解决方案是使用准备好的语句。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/pdo&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PDO库&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和mysqli扩展支持这些。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c8b4387481b8b21adbbe7392aa035865c2014c6b" translate="yes" xml:space="preserve">
          <source>A long time ago someone tried to invent a one-size fits all mechanism for escaping data and we ended up with &quot;&lt;a href=&quot;http://php.net/manual/en/security.magicquotes.php&quot;&gt;magic_quotes&lt;/a&gt;&quot; which didn't properly escape data for all output targets and resulted in different installation requiring different code to work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;很久以前，有人试图发明一种适用于所有数据转义的全尺寸机制，而我们最终得到了&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/security.magicquotes.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;magic_quotes&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rdquo;，它没有为所有输出目标正确地转义数据，并导致安装不同需要使用不同的代码。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0fc7a13401116e8243ae650fb135e8ebeb378727" translate="yes" xml:space="preserve">
          <source>A third example could be shell commands: If you are going to embed strings (such as arguments) to external commands, and call them with &lt;a href=&quot;http://php.net/manual/function.exec.php&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;, then you must use &lt;a href=&quot;http://php.net/manual/function.escapeshellcmd.php&quot;&gt;&lt;code&gt;escapeshellcmd&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://php.net/manual/function.escapeshellarg.php&quot;&gt;&lt;code&gt;escapeshellarg&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;第三个示例可能是shell命令：如果要将字符串（例如参数）嵌入到外部命令中，并使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.exec.php&quot;&gt; &lt;code&gt;exec&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调用它们&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则必须使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.escapeshellcmd.php&quot;&gt; &lt;code&gt;escapeshellcmd&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.escapeshellarg.php&quot;&gt; &lt;code&gt;escapeshellarg&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e5c726f106b0c67bcee919a11840ab92bf0eade3" translate="yes" xml:space="preserve">
          <source>And for database (model) layer there are ORM frameworks like Doctrine or wrappers around PDO like Nette Database.</source>
          <target state="translated">而对于数据库(模型)层,有像Doctrine这样的ORM框架,也有像Nette Database这样的PDO包装器。</target>
        </trans-unit>
        <trans-unit id="c9330dd2e1314fe70c4190e16e416b782b01badb" translate="yes" xml:space="preserve">
          <source>And so on and so forth ...</source>
          <target state="translated">等等等等.....</target>
        </trans-unit>
        <trans-unit id="11a11a5dfe2fffbbd36948beab81434ec2fa5e02" translate="yes" xml:space="preserve">
          <source>Another example is HTML: If you embed strings within HTML markup, you must escape it with &lt;a href=&quot;http://php.net/manual/function.htmlspecialchars.php&quot;&gt;&lt;code&gt;htmlspecialchars&lt;/code&gt;&lt;/a&gt;. This means that every single &lt;code&gt;echo&lt;/code&gt; or &lt;code&gt;print&lt;/code&gt; statement should use &lt;code&gt;htmlspecialchars&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;另一个示例是HTML：如果将字符串嵌入HTML标记中，则必须使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.htmlspecialchars.php&quot;&gt; &lt;code&gt;htmlspecialchars&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对其进行转义&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这意味着每个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;echo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;print&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;语句都应使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;htmlspecialchars&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77451a5a324c3f31a98538f1241ff38c93653973" translate="yes" xml:space="preserve">
          <source>As for the SQL injection attacks, make sure you check the user input, and then run it though mysql_real_escape_string(). The function won't defeat all injection attacks, though, so it is important that you check the data before dumping it into your query string.</source>
          <target state="translated">至于SQL注入攻击,一定要检查用户的输入,然后通过mysql_real_escape_string()运行。不过这个函数不会打败所有的注入攻击,所以在将数据倾倒到查询字符串中之前,一定要先检查一下数据。</target>
        </trans-unit>
        <trans-unit id="70f490bdcfd74f199c8c9f2ad1d532dd0d8392ed" translate="yes" xml:space="preserve">
          <source>Basic rules of thumb</source>
          <target state="translated">基本经验法则</target>
        </trans-unit>
        <trans-unit id="52e497215e568c0d8dcf18530294b4057df2fd8b" translate="yes" xml:space="preserve">
          <source>Both issues are far too big to go into in a single post, but there are lots of posts which go into more detail:</source>
          <target state="translated">这两个问题都太大了,无法在一个帖子中详述,但有很多帖子都有详细说明。</target>
        </trans-unit>
        <trans-unit id="403ca0e1883c9bdceb591d29dd9d3adb80fbe823" translate="yes" xml:space="preserve">
          <source>But of course that only cuts out one specific attack, so read all the other answers. (And yes I know that the code above isn't great, but it shows the specific defence.)</source>
          <target state="translated">不过当然这只能删掉一个具体的攻击,所以看其他的答案。(是的,我知道上面的代码不是很好,但它显示了具体的防御)。</target>
        </trans-unit>
        <trans-unit id="0400d8222cc4fb403356cb194eb689f467a44681" translate="yes" xml:space="preserve">
          <source>By all means &lt;a href=&quot;http://symcbean.blogspot.co.uk/2017/07/validate-input-escape-output.html&quot;&gt;validate input&lt;/a&gt; - decide whether you should accept it for further processing or tell the user it is unacceptable. But don't apply any change to representation of the data until it is about to leave PHP land.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过一切手段&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://symcbean.blogspot.co.uk/2017/07/validate-input-escape-output.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;验证输入&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -决定你是否应该接受它作进一步处理或告知这是不能接受的用户。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是在数据将要离开PHP之前，请不要对数据的表示进行任何更改。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="893894ce0a262221f6844c710bdd9007af076015" translate="yes" xml:space="preserve">
          <source>Check out &lt;a href=&quot;https://phpdelusions.net/pdo&quot;&gt;&lt;em&gt;(The only proper) PDO tutorial&lt;/em&gt;&lt;/a&gt; for pretty much everything you need to know about PDO. (Sincere thanks to top SO contributor, @YourCommonSense, for this great resource on the subject.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;查看&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://phpdelusions.net/pdo&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（唯一合适的）PDO教程&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，了解有关PDO所需的几乎所有知识。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（衷心感谢顶级SO贡献者@YourCommonSense，感谢他提供了有关此主题的大量资源。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c7552a526f85c6de9290ce674e36578f5ca0cdd" translate="yes" xml:space="preserve">
          <source>Check the variable contains what you are expecting for:</source>
          <target state="translated">检查变量是否包含您所期望的内容。</target>
        </trans-unit>
        <trans-unit id="e35785ef46fe91adda0bb2bc95edad42da71547c" translate="yes" xml:space="preserve">
          <source>Do not try to prevent SQL injection by sanitizing input data.</source>
          <target state="translated">不要试图通过对输入数据进行消毒处理来防止SQL注入。</target>
        </trans-unit>
        <trans-unit id="61f2c0fd1afcf789824a5f6f1258b9979dfd4d5a" translate="yes" xml:space="preserve">
          <source>Easiest way to avoid mistakes in sanitizing input and escaping data is using PHP framework like &lt;a href=&quot;http://symfony.com/&quot;&gt;Symfony&lt;/a&gt;, &lt;a href=&quot;http://nette.org/en/&quot;&gt;Nette&lt;/a&gt; etc. or part of that framework (templating engine, database layer, ORM).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;避免在清理输入和转义数据时出错的最简单方法是使用PHP框架（例如&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://symfony.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Symfony&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://nette.org/en/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nette&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;等）或该框架的一部分（模板引擎，数据库层，ORM）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9d9fbd42dcd246044f66af486685093501db482" translate="yes" xml:space="preserve">
          <source>Escape all other output with &lt;code&gt;htmlspecialchars()&lt;/code&gt; and be mindful of the 2nd and 3rd parameters here.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;htmlspecialchars()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;转义所有其他输出，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并注意此处的第二和第三参数。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3642b67ad1fb7b231149ce7ab92930a16d765590" translate="yes" xml:space="preserve">
          <source>Escaping output.</source>
          <target state="translated">逃逸输出。</target>
        </trans-unit>
        <trans-unit id="e4d3621b956946dbddbe00b105a477e193ad1d04" translate="yes" xml:space="preserve">
          <source>First of all, SQL injection is an input filtering problem, and XSS is an output escaping one - so you wouldn't even execute these two operations at the same time in the code lifecycle.</source>
          <target state="translated">首先,SQL注入是一个输入过滤的问题,而XSS是一个输出转义的问题--所以你甚至不会在代码生命周期中同时执行这两个操作。</target>
        </trans-unit>
        <trans-unit id="ef84394fbdc42e23b3957a0093946a2c222b8bce" translate="yes" xml:space="preserve">
          <source>For SQL query, bind parameters (as with PDO) or use a driver-native escaping function for query variables (such as &lt;code&gt;mysql_real_escape_string()&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于SQL查询，请绑定参数（与PDO一样）或对查询变量使用驱动程序本机转义函数（例如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;mysql_real_escape_string()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="768192e7bd1e73ea1dd2aa6047fec8f6f4a21e46" translate="yes" xml:space="preserve">
          <source>For Strings use:</source>
          <target state="translated">用于字符串的使用。</target>
        </trans-unit>
        <trans-unit id="a4d5f6bc1515eba0a4f8d3895d351b699537b3e7" translate="yes" xml:space="preserve">
          <source>For really allowing HTML input with like stripped classes and/or tags depend on one of the dedicated xss validation packages. DO NOT WRITE YOUR OWN REGEXES TO PARSE HTML!</source>
          <target state="translated">对于真正允许HTML输入的类和标记的HTML输入,需要依赖一个专门的xss验证包。不要写自己的regexes来解析html!</target>
        </trans-unit>
        <trans-unit id="5e6746a0b3a7bbcf345c1620070531cdadb865d5" translate="yes" xml:space="preserve">
          <source>Framework is automatically sanitizing input and you should't use $_POST, $_GET or $_SESSION variables directly, but through mechanism like routing, session handling etc.</source>
          <target state="translated">框架会自动处理输入,你不应该直接使用$_POST、$_GET或$_SESSION等变量,而是通过路由、会话处理等机制来实现。</target>
        </trans-unit>
        <trans-unit id="10ae3619d0cc29cbdf1eb3a6f831f221ce9e1424" translate="yes" xml:space="preserve">
          <source>From the documentation (&lt;a href=&quot;http://php.net/manual/es/function.pg-escape-string.php&quot;&gt;http://php.net/manual/es/function.pg-escape-string.php&lt;/a&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从文档（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/es/function.pg-escape-string.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://php.net/manual/es/function.pg-escape-string.php&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="def16db71810caf6bd9b197ffe44afbd7ce9d911" translate="yes" xml:space="preserve">
          <source>How can I sanitize user input with PHP</source>
          <target state="translated">如何用PHP对用户输入进行消毒处理?</target>
        </trans-unit>
        <trans-unit id="4d7429d9588e46faadcd0180412ecb6d7f1535f7" translate="yes" xml:space="preserve">
          <source>If you are expecting an integer, use:</source>
          <target state="translated">如果你期望的是整数,请使用。</target>
        </trans-unit>
        <trans-unit id="bcab0c28ba6e63b65cf5c270776241bc01d79275" translate="yes" xml:space="preserve">
          <source>If you're using PostgreSQL, the input from PHP can be escaped with pg_escape_string()</source>
          <target state="translated">如果你使用的是PostgreSQL,PHP的输入可以用pg_escape_string()转义。</target>
        </trans-unit>
        <trans-unit id="c8e4cbba33065e4ab88bb5cb466bb38d69c768cd" translate="yes" xml:space="preserve">
          <source>In other instances, where we don't want to accept HTML/Javascript at all, I've found this simple function useful (and has passed multiple audits against XSS):</source>
          <target state="translated">在其他情况下,如果我们根本不想接受HTMLJavascript,我发现这个简单的函数很有用(并且通过了多次针对XSS的审核)。</target>
        </trans-unit>
        <trans-unit id="b49b0d26e4330e624c70c482882f858cfc3ac57d" translate="yes" xml:space="preserve">
          <source>Instead, &lt;strong&gt;do not allow data to be used in creating your SQL code&lt;/strong&gt;.  Use Prepared Statements (i.e. using parameters in a template query) that uses bound variables.  It is the only way to be guaranteed against SQL injection.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相反，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请勿在创建SQL代码时使用数据&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用使用绑定变量的预处理语句（即在模板查询中使用参数）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是防止SQL注入的唯一方法。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="136b1dbfe8dbf848113a395f2caf7ef575eba377" translate="yes" xml:space="preserve">
          <source>Is there a catchall function somewhere that works well for sanitizing user input for SQL injection and XSS attacks, while still allowing certain types of HTML tags?</source>
          <target state="translated">是否有一个可以很好地过滤用户输入的SQL注入和XSS攻击,同时仍然允许某些类型的HTML标签的功能?</target>
        </trans-unit>
        <trans-unit id="f471b01c59a0ecb03b402f2a0f3d8dfcdd928002" translate="yes" xml:space="preserve">
          <source>It supports a great deal of SANITIZE, VALIDATE filters.</source>
          <target state="translated">它支持大量的SANITIZE、VALIDATE过滤器。</target>
        </trans-unit>
        <trans-unit id="199b9497f5267081e9c247dd3d8da36194200031" translate="yes" xml:space="preserve">
          <source>It's a common misconception that user input can be filtered. PHP even has a (now deprecated) &quot;feature&quot;, called &lt;a href=&quot;https://www.php.net/manual/en/security.magicquotes.php&quot;&gt;magic-quotes&lt;/a&gt;, that builds on this idea. It's nonsense. Forget about filtering (or cleaning, or whatever people call it).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;常见的误解是可以过滤用户输入。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP甚至有一个（现在已不推荐使用的）&amp;ldquo;功能&amp;rdquo;，称为&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.php.net/manual/en/security.magicquotes.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;magic-quotes&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它基于此思想。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;废话 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;忘记过滤（或清洁，或任何人称呼它）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f4d5795ad5d4608d4c3ea9c423f6e9a975403458" translate="yes" xml:space="preserve">
          <source>Just wanted to add that on the subject of output escaping, if you use php DOMDocument to make your html output it will automatically escape in the right context. An attribute (value=&quot;&quot;) and the inner text of a &amp;lt;span&amp;gt; are not equal.
To be safe against XSS read this:
&lt;a href=&quot;https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet&quot;&gt;OWASP XSS Prevention Cheat Sheet&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;只是想在输出转义的主题上添加该内容，如果您使用php DOMDocument进行html输出，它将在正确的上下文中自动转义。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性（value =&amp;ldquo;&amp;rdquo;）和&amp;lt;span&amp;gt;的内部文本不相等。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为了安全防范XSS，请阅读以下内容： &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;OWASP XSS预防备忘单&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="60198a33aeb248b6ffbdba60a0718b4039eeb2cf" translate="yes" xml:space="preserve">
          <source>Methods PHP output</source>
          <target state="translated">方法 PHP输出</target>
        </trans-unit>
        <trans-unit id="d2bc3bb9b800b664dcff4c90dc2c9853d5f2b77d" translate="yes" xml:space="preserve">
          <source>Methods for sanitizing user input with PHP:</source>
          <target state="translated">用PHP对用户输入进行消毒处理的方法。</target>
        </trans-unit>
        <trans-unit id="faf7a40ae2065a38d2cb46f614e9e936b1279db9" translate="yes" xml:space="preserve">
          <source>My own filter class (uses JavaScript to highlight faulty fields) can be initiated by either an ajax request or normal form post. (see the example below)</source>
          <target state="translated">我自己的过滤器类(使用JavaScript来突出显示有问题的字段)可以通过ajax请求或普通表单发布来启动。(见下面的例子)</target>
        </trans-unit>
        <trans-unit id="10985aec5b69b93215f26c11c37ace08dd409cc9" translate="yes" xml:space="preserve">
          <source>MySQLi prepared statements:</source>
          <target state="translated">MySQLi准备的报表。</target>
        </trans-unit>
        <trans-unit id="7b2e939e97014d76fc52afb9f25398e8437a57d4" translate="yes" xml:space="preserve">
          <source>Never trust user data.</source>
          <target state="translated">千万不要相信用户数据。</target>
        </trans-unit>
        <trans-unit id="3fc19b6eabc192274c081f4cc04768e6da1bd620" translate="yes" xml:space="preserve">
          <source>No, there is not.</source>
          <target state="translated">不,没有。</target>
        </trans-unit>
        <trans-unit id="e71755ad95a991d2550e729e313f99167ec08c2c" translate="yes" xml:space="preserve">
          <source>No.  You can't generically filter data without any context of what it's for.  Sometimes you'd want to take a SQL query as input and sometimes you'd want to take HTML as input.</source>
          <target state="translated">不,你不能在没有任何上下文的情况下通用地过滤数据。有时你会想把SQL查询作为输入,有时你会想把HTML作为输入。</target>
        </trans-unit>
        <trans-unit id="cd11f10cb95b2c076fc452dbf358ace02da8cdb3" translate="yes" xml:space="preserve">
          <source>Of course, keep in mind that you need to do your sql query escaping too depending on what type of db your are using (mysql_real_escape_string() is useless for an sql server for instance). You probably want to handle this automatically at your appropriate application layer like an ORM. Also, as mentioned above: for outputting to html use the other php dedicated functions like htmlspecialchars ;)</source>
          <target state="translated">当然,请记住,你也需要根据你使用的数据库类型来进行sql查询转义(mysql_real_escape_string()对sql服务器来说是没用的)。你可能想在适当的应用层自动处理这个问题,就像ORM一样。另外,就像上面提到的:如果要输出到html,可以使用其他php的专用函数,比如htmlspecialchars;)</target>
        </trans-unit>
        <trans-unit id="6d5981c8540a76eb2029024b194b93a3efd793fc" translate="yes" xml:space="preserve">
          <source>One trick that can help in the specific circumstance where you have a page like &lt;code&gt;/mypage?id=53&lt;/code&gt; and you use the id in a WHERE clause is to ensure that id definitely is an integer, like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在特定情况下（例如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;/mypage?id=53&lt;/code&gt; )&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并且在WHERE子句中使用id的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一种技巧可以&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;确保id绝对是整数，例如：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b0c10e2d4fa3143070da217cf90eb10f25bca7f8" translate="yes" xml:space="preserve">
          <source>PHP 5.2 introduced the &lt;strong&gt;filter_var&lt;/strong&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 5.2引入了&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;filter_var&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="81c651559f4dbe7cbc96e85543703dc1a1e80872" translate="yes" xml:space="preserve">
          <source>PHP has the new nice filter_input functions now, that for instance liberate you from finding 'the ultimate e-mail regex' now that there is a built-in FILTER_VALIDATE_EMAIL type</source>
          <target state="translated">PHP现在有了新的filter_input函数,比如说,现在有了内置的FILTER_VALIDATE_EMAIL类型,让你不用再去找 &quot;终极邮件的regex &quot;了。</target>
        </trans-unit>
        <trans-unit id="171fd95c8abb9573d2081f395e524c7356473f19" translate="yes" xml:space="preserve">
          <source>Please see my website &lt;a href=&quot;http://bobby-tables.com/&quot;&gt;http://bobby-tables.com/&lt;/a&gt; for more about preventing SQL injection.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请访问我的网站&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://bobby-tables.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://bobby-tables.com/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;了解有关防止SQL注入的更多信息。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f543785f024bf51fd075ffdeb68766707018887" translate="yes" xml:space="preserve">
          <source>Safer PHP output</source>
          <target state="translated">更安全的PHP输出</target>
        </trans-unit>
        <trans-unit id="7082c859c9b7812a40a3131775791535efc835c1" translate="yes" xml:space="preserve">
          <source>Sanitizing / filtering of user input data.</source>
          <target state="translated">对用户输入数据进行消毒过滤。</target>
        </trans-unit>
        <trans-unit id="4241418b71d5c671bffbb4bae7b2bb9212d30ea8" translate="yes" xml:space="preserve">
          <source>Select utf8, latin1, ascii.., dont use vulnerable charsets big5, cp932, gb2312, gbk, sjis.</source>
          <target state="translated">选择utf8,latin1,ascii...,不要使用易损字符集big5,cp932,gb2312,gb2312,gbk,sjis.</target>
        </trans-unit>
        <trans-unit id="2d7501cac084808741395df8299fd5787721779b" translate="yes" xml:space="preserve">
          <source>Set charset explicitly:</source>
          <target state="translated">明确设置charset。</target>
        </trans-unit>
        <trans-unit id="13c07eed9ebfe49ee8394c055157abca732a249c" translate="yes" xml:space="preserve">
          <source>Templating engine like &lt;a href=&quot;http://twig.sensiolabs.org/&quot;&gt;Twig&lt;/a&gt; or Latte has output escaping on by default - you don't have to solve manually if you have properly escaped your output depending on context (HTML or Javascript part of web page).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;像&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://twig.sensiolabs.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Twig&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或Latte &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这样的模板引擎&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;默认情况下会转义输出-如果您根据上下文（网页的HTML或Javascript部分）正确地转义了输出，则无需手动解决。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1fbca31e1fcf00aa82c38350b13da658ed711f90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;htmlspecialchars()&lt;/code&gt; function converts some predefined characters to HTML entities.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt; &lt;code&gt;htmlspecialchars()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数转换一些预定义的字符为HTML实体。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c04e51f77d61a28e30bf202c4fe2c7ce56781d2a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stripslashes()&lt;/code&gt; function removes backslashes</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所述&lt;/font&gt;&lt;/font&gt; &lt;code&gt;stripslashes()&lt;/code&gt; 函数&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数删除反斜线&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a466a86b6e913569f4fae3cede3a81561c9cc946" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trim()&lt;/code&gt; function removes whitespace and other predefined characters from both sides of a string.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;trim()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数删除空白和从字符串的两侧其他预定义字符。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="269e75117b6e759eb210dd655bddd974a81ed8da" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;only&lt;/em&gt; case where you need to actively filter data, is if you're accepting preformatted input. For example, if you let your users post HTML markup, that you plan to display on the site. However, you should be wise to avoid this at all cost, since no matter how well you filter it, it will always be a potential security hole.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您需要主动过滤数据&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;唯一&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;情况是，如果您接受预格式化的输入。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如，如果您让用户发布HTML标记，那么您计划显示在网站上。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，您应该明智地不惜一切代价避免这种情况，因为无论您对其进行多么好的过滤，它始终都是潜在的安全漏洞。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="060f5ef963fb60e92d049b7feeca81819ca54b96" translate="yes" xml:space="preserve">
          <source>The predefined characters are:</source>
          <target state="translated">预设的字符是:</target>
        </trans-unit>
        <trans-unit id="35580b6ad52c01ba4488170125c50a9e65babb9c" translate="yes" xml:space="preserve">
          <source>The process of escaping data for SQL - to prevent SQL injection - is very different from the process of escaping data for (X)HTML, to prevent XSS.</source>
          <target state="translated">对SQL进行数据转义的过程--防止SQL注入,与对(X)HTML进行数据转义的过程--防止XSS有很大的区别。</target>
        </trans-unit>
        <trans-unit id="17bf62cbc872170053df2e495c91ac3c6ac74584" translate="yes" xml:space="preserve">
          <source>The transforms you apply to data to make it safe for inclusion in an SQL statement are completely different from those you apply for inclusion in HTML are completely different from those you apply for inclusion in Javascript are completely different from those you apply for inclusion in LDIF are completely different from those you apply to inclusion in CSS are completely different from those you apply to inclusion in an Email....</source>
          <target state="translated">你应用于数据的转换以使其安全地包含在SQL语句中,与你应用于HTML中的转换完全不同,与你应用于Javascript中的转换完全不同,与你应用于LDIF中的转换完全不同,与你应用于CSS中的转换完全不同,与你应用于Email中的转换完全不同......</target>
        </trans-unit>
        <trans-unit id="1f0dcecfb20ba1d1a341edd58d72f4b5c1442285" translate="yes" xml:space="preserve">
          <source>There is the filter extension (&lt;a href=&quot;http://devolio.com/blog/archives/413-Data-Filtering-Using-PHPs-Filter-Functions-Part-one.html&quot;&gt;howto-link&lt;/a&gt;, &lt;a href=&quot;http://php.net/filter&quot;&gt;manual&lt;/a&gt;), which works pretty well with all GPC variables. It's not a magic-do-it-all thing though, you will still have to use it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有过滤器扩展名（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://devolio.com/blog/archives/413-Data-Filtering-Using-PHPs-Filter-Functions-Part-one.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;howto-link&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/filter&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;manual&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;），该&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;扩展名&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对所有GPC变量都非常有效。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;尽管这不是万能的事情，您仍然必须使用它。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1909509beba0d411634dbb1917141ebd047048c9" translate="yes" xml:space="preserve">
          <source>There's no catchall function, because there are multiple concerns to be addressed.</source>
          <target state="translated">因为有多个关注点需要解决,所以没有追赶功能。</target>
        </trans-unit>
        <trans-unit id="a47bc113b4488d293b5b9897930cc1702c2e63d0" translate="yes" xml:space="preserve">
          <source>To address the XSS issue, take a look at &lt;a href=&quot;http://www.htmlpurifier.org&quot;&gt;HTML Purifier&lt;/a&gt;. It is fairly configurable and has a decent track record.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要解决XSS问题，请看&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.htmlpurifier.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HTML Purifier&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它是相当可配置的，并且具有良好的记录。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aacd69a86e6fde2567e6d43eb5eb920ad1c6ceef" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://php.net/manual/en/ref.filter.php&quot;&gt;Filter Function&lt;/a&gt; filter_var() &amp;mdash; filters a variable with a specified filter:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/ref.filter.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;过滤器函数&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; filter_var（）&amp;mdash;使用指定的过滤器过滤变量：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e9cdfa5e79f8bf58acaa230e594bb0f90ed146e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;strip_tags()&lt;/code&gt; to filter out unwanted HTML</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;strip_tags()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;过滤掉不需要的HTML&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9e0a6e9f0cd23ea70ece92d13bc41632e1eddc80" translate="yes" xml:space="preserve">
          <source>Use Modern Versions of MySQL and PHP.</source>
          <target state="translated">使用现代版的MySQL和PHP。</target>
        </trans-unit>
        <trans-unit id="158bf109055a4391853e862d88370c6aad637ac3" translate="yes" xml:space="preserve">
          <source>Use secure charsets:</source>
          <target state="translated">使用安全字符集。</target>
        </trans-unit>
        <trans-unit id="190173fa9a0a8945467da85cad2c5cbd859c8c4d" translate="yes" xml:space="preserve">
          <source>Use single quotes (' ') around your variables inside your query.</source>
          <target state="translated">在查询中的变量周围使用单引号(' '')。</target>
        </trans-unit>
        <trans-unit id="c1d5f68a71902364f592c8951c7b28037bad3656" translate="yes" xml:space="preserve">
          <source>Use spatialized function:</source>
          <target state="translated">使用空间化函数。</target>
        </trans-unit>
        <trans-unit id="9fc1cb8178c33c027bef9fc36ce32b59e89755fe" translate="yes" xml:space="preserve">
          <source>Using prepared statements, or/and filtering with mysql_real_escape_string is definitely a must.
PHP also has filter_input built in which is a good place to start.</source>
          <target state="translated">使用准备好的语句,或者用mysql_real_escape_string进行过滤绝对是必须的。PHP还内置了filter_input,这是一个很好的开始。</target>
        </trans-unit>
        <trans-unit id="8fdec9ef6cefb7103653b6d041d1890a5352e0ed" translate="yes" xml:space="preserve">
          <source>What you are describing here is two separate issues:</source>
          <target state="translated">你在这里描述的是两个不同的问题。</target>
        </trans-unit>
        <trans-unit id="5f5018a80b300558bb5cedb9c67aeebd9041e242" translate="yes" xml:space="preserve">
          <source>What you should do, to avoid problems, is quite simple: whenever you embed a string within foreign code, you must escape it, according to the rules of that language. For example, if you embed a string in some SQL targeting MySQL, you must escape the string with MySQL's function for this purpose (&lt;code&gt;mysqli_real_escape_string&lt;/code&gt;). (Or, in case of databases, using prepared statements are a better approach, when possible.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为避免出现问题，您应该做的事情很简单：每当将字符串嵌入外部代码中时，都必须根据该语言的规则对其进行转义。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如，如果在针对MySQL的某些SQL中嵌入字符串，则必须为此使用MySQL的函数（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;mysqli_real_escape_string&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对该字符串进行转义&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（或者，对于数据库，在可能的情况下，使用预备语句是更好的方法。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a350516541472d3775090a423f6261315a4c4bfd" translate="yes" xml:space="preserve">
          <source>When you call &lt;code&gt;echo&lt;/code&gt; or &lt;code&gt;print&lt;/code&gt; to display user-supplied values, use &lt;a href=&quot;http://php.net/manual/function.htmlspecialchars.php&quot;&gt;&lt;code&gt;htmlspecialchars&lt;/code&gt;&lt;/a&gt; unless the data was properly sanitized safe and is allowed to display HTML.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当您调用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;echo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;print&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以显示用户提供的值时，请使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.htmlspecialchars.php&quot;&gt; &lt;code&gt;htmlspecialchars&lt;/code&gt; ,&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;除非对数据进行了正确的安全清理并允许显示HTML。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc255d7ae663a0144641261bf30f86bee325bb59" translate="yes" xml:space="preserve">
          <source>Write Your own validation function.</source>
          <target state="translated">写出自己的验证功能。</target>
        </trans-unit>
        <trans-unit id="63ccb8a2a4f0c1752cfec6059d40d0fef41dbbca" translate="yes" xml:space="preserve">
          <source>You always sanitize output.</source>
          <target state="translated">你总是对输出进行消毒处理。</target>
        </trans-unit>
        <trans-unit id="fc8072db5e3d12f9b4c07b3808fd4d4eac198f6f" translate="yes" xml:space="preserve">
          <source>You can read more about it here - &lt;a href=&quot;https://stackoverflow.com/questions/2964140/what-is-a-framework-what-does-it-do-why-do-we-need-a-framework&quot;&gt;What is a software framework?&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以在此处了解更多信息- &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2964140/what-is-a-framework-what-does-it-do-why-do-we-need-a-framework&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;什么是软件框架？&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="065a44c1fd533eb8f0aeec539cc40f5d54158958" translate="yes" xml:space="preserve">
          <source>You need to filter input on a whitelist -- ensure that the data matches some specification of what you expect.  Then you need to escape it before you use it, depending on the context in which you are using it.</source>
          <target state="translated">你需要在白名单上过滤输入----确保数据符合你所期望的某种规范。然后你需要在使用它之前转义,这取决于你使用它的上下文。</target>
        </trans-unit>
        <trans-unit id="76c10eb695163d405afe10a26f80e6a20b18adb9" translate="yes" xml:space="preserve">
          <source>You never sanitize input.</source>
          <target state="translated">你从来不会对输入进行消毒处理。</target>
        </trans-unit>
        <trans-unit id="05ad6cccc4873f2f7bdb9c7e3d0ccc3bf44d4353" translate="yes" xml:space="preserve">
          <source>more predefined filters</source>
          <target state="translated">更多预定义的过滤器</target>
        </trans-unit>
        <trans-unit id="d171be0ec601f7ae8915d89e367ad0f1d8d4fd21" translate="yes" xml:space="preserve">
          <source>pg_escape_string() escapes a string for querying the database. It returns an escaped string in the PostgreSQL format without quotes.</source>
          <target state="translated">pg_escape_string()转义了一个字符串,用于查询数据库。它返回一个没有引号的PostgreSQL格式的转义字符串。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
