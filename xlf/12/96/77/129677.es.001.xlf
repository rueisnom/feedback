<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/129677">
    <body>
      <group id="129677">
        <trans-unit id="2d01f839d8b2ac5a7d42b2c3b3c4a46bbae39563" translate="yes" xml:space="preserve">
          <source>1) User input should always be assumed to be bad.</source>
          <target state="translated">1)Siempre se debe suponer que las aportaciones del usuario son malas.</target>
        </trans-unit>
        <trans-unit id="2c8ae8f9b63f4f7ac9f5c7dce7513ce38bef2696" translate="yes" xml:space="preserve">
          <source>2) This is a large topic, and it depends on the context of the data being output. For HTML there are solutions such as htmlpurifier out there.
as a rule of thumb, always escape anything you output.</source>
          <target state="translated">2)Se trata de un tema muy amplio,y depende del contexto de los datos que se produzcan.Para el HTML hay soluciones como el htmlpurificador por ah√≠.Como regla general,siempre se escapa de cualquier cosa que se produzca.</target>
        </trans-unit>
        <trans-unit id="c7d6fed06fc4568a93069e256057ac434bd6dd9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://htmlpurifier.org/&quot;&gt;HTML Purifier&lt;/a&gt; has been around a long time and is still actively updated. You can use it to sanitize malicious input, while still allowing a generous &amp;amp; configurable whitelist of tags. Works great with many WYSIWYG editors, but it might be heavy for some use cases.</source>
          <target state="translated">&lt;a href=&quot;http://htmlpurifier.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HTML Purifier&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ha existido durante mucho tiempo y todav&amp;iacute;a se actualiza activamente. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede usarlo para desinfectar entradas maliciosas, al tiempo que permite una lista blanca generosa y configurable de etiquetas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Funciona muy bien con muchos editores WYSIWYG, pero puede ser pesado para algunos casos de uso.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2e30650a74842cb895defc3804044b3c89a45975" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/class.pdo.php&quot;&gt;PDO::quote()&lt;/a&gt; - places quotes around the input string (if required) and escapes special characters within the input string, using a quoting style appropriate to the underlying driver:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/class.pdo.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PDO :: quote ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : coloca comillas alrededor de la cadena de entrada (si es necesario) y escapa caracteres especiales dentro de la cadena de entrada, utilizando un estilo de comillas apropiado para el controlador subyacente:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec9d76d8c1ee5a9241fc009f20ea58bcb7f0c67b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/function.filter-input.php&quot;&gt;filter_input()&lt;/a&gt; &amp;mdash; Gets a specific external variable by name and optionally filters it:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.filter-input.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;filter_input ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - Obtiene una variable externa espec&amp;iacute;fica por nombre y opcionalmente la filtra:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="197e77be997e0d6813a86a84a97267de1a14261c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/function.json-encode.php&quot;&gt;&lt;code&gt;json_encode&lt;/code&gt;&lt;/a&gt; is a safe way to provide user-supplied values from PHP to Javascript</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.json-encode.php&quot;&gt; &lt;code&gt;json_encode&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una forma segura de proporcionar valores proporcionados por el usuario desde PHP a Javascript&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="48b6b31bd59ae8f54a87f7932bcdd65e00e4a7f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/function.mysql-real-escape-string.php&quot;&gt;&lt;s&gt;mysql_real_escape_string&lt;/s&gt;&lt;/a&gt;&lt;sup&gt;[deprecated in PHP 5.5.0, removed in PHP 7.0.0].&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.mysql-real-escape-string.php&quot;&gt;&lt;s&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mysql_real_escape_string&lt;/font&gt;&lt;/font&gt;&lt;/s&gt;&lt;/a&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; [en desuso en PHP 5.5.0, eliminado en PHP 7.0.0].&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b2e09b476d75aeaa4edbcd50b0132560f8071076" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/function.preg-match.php&quot;&gt;preg_match()&lt;/a&gt; &amp;mdash; Perform a regular expression match;</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.preg-match.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;preg_match ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - Realiza una coincidencia de expresi&amp;oacute;n regular;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a86f3f2b45de5bdd7e961b3aa1821fc6b6e464fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/mysqli.real-escape-string.php&quot;&gt;mysqli_real_escape_string&lt;/a&gt; Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection. But recommended to use Prepared Statements because they are not simply escaped strings, a statement comes up with a complete query execution plan, including which tables and indexes it would use, it is a optimized way.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/mysqli.real-escape-string.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mysqli_real_escape_string Escapan&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; caracteres especiales en una cadena para usar en una instrucci&amp;oacute;n SQL, teniendo en cuenta el conjunto de caracteres actual de la conexi&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero se recomienda usar declaraciones preparadas porque no son simplemente cadenas escapadas, una declaraci&amp;oacute;n presenta un plan completo de ejecuci&amp;oacute;n de consultas, incluidas las tablas e &amp;iacute;ndices que usar&amp;iacute;a, es una forma optimizada.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ddd94bba2acaa5a42cc343d26978aa5659998ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/pdo.prepare.php&quot;&gt;PDO Prepared Statements&lt;/a&gt;: vs MySQLi prepared statements supports more database drivers and named parameters:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/pdo.prepare.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Declaraciones preparadas de PDO&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : las &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;declaraciones preparadas&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; frente a MySQLi admiten m&amp;aacute;s controladores de bases de datos y par&amp;aacute;metros con nombre:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31087e657f115c6ae414547009d6672f96fa786f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do you call external shell commands using &lt;a href=&quot;http://php.net/manual/en/function.exec.php&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/manual/en/function.system.php&quot;&gt;&lt;code&gt;system()&lt;/code&gt;&lt;/a&gt; functions, or to the &lt;a href=&quot;http://php.net/manual/en/language.operators.execution.php&quot;&gt;&lt;code&gt;backtick&lt;/code&gt;&lt;/a&gt; operator?&lt;/strong&gt; If so, in addition to SQL Injection &amp;amp; XSS you might have an additional concern to address, &lt;em&gt;users running malicious commands on your server&lt;/em&gt;. You need to use &lt;a href=&quot;http://php.net/manual/en/function.escapeshellcmd.php&quot;&gt;&lt;code&gt;escapeshellcmd&lt;/code&gt;&lt;/a&gt; if you'd like to escape the entire command OR &lt;a href=&quot;http://php.net/manual/en/function.escapeshellarg.php&quot;&gt;&lt;code&gt;escapeshellarg&lt;/code&gt;&lt;/a&gt; to escape individual arguments.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Llama a comandos de shell externos utilizando las &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funciones &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/function.exec.php&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/function.system.php&quot;&gt; &lt;code&gt;system()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , o al &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/language.operators.execution.php&quot;&gt; &lt;code&gt;backtick&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ? &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si es as&amp;iacute;, adem&amp;aacute;s de SQL Injection y XSS, es posible que tenga una preocupaci&amp;oacute;n adicional para abordar, los &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;usuarios que ejecutan comandos maliciosos en su servidor&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/function.escapeshellcmd.php&quot;&gt; &lt;code&gt;escapeshellcmd&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usar &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;escapeshellcmd&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; si desea escapar del comando completo O &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/function.escapeshellarg.php&quot;&gt; &lt;code&gt;escapeshellarg&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para escapar de argumentos individuales.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e39478210a7c0c3ebd2e42b2e65590119a580ecc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SQL Injection&lt;/strong&gt; - Today, generally, every PHP project should be using &lt;a href=&quot;http://php.net/manual/en/pdo.prepared-statements.php&quot;&gt;prepared statements via PHP Data Objects (PDO)&lt;/a&gt; as a best practice, &lt;em&gt;preventing an error from a stray quote as well as a full-featured solution against injection&lt;/em&gt;. It's also the most flexible &amp;amp; secure way to access your database.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Inyecci&amp;oacute;n SQL&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : en la actualidad, en general, cada proyecto PHP deber&amp;iacute;a utilizar &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.prepared-statements.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;declaraciones preparadas a trav&amp;eacute;s de PHP Data Objects (PDO)&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como una pr&amp;aacute;ctica recomendada, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;evitando un error de una cita perdida, as&amp;iacute; como una soluci&amp;oacute;n completa contra la inyecci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n es la forma m&amp;aacute;s flexible y segura de acceder a su base de datos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cfd97153563bf4c922b321ccc03a153e3346ed92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XSS - Sanitize data on the way in...&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;XSS - Desinfecte los datos en el camino en ...&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc156968bc89678692b894d6a5c5e12240b94d7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XSS - Sanitize data on the way out...&lt;/strong&gt; unless you guarantee the data was properly sanitized before you add it to your database, you'll need to sanitize it before displaying it to your user, we can leverage these useful PHP functions:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;XSS: desinfecte los datos al salir ... a&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; menos que garantice que los datos se desinfectaron correctamente antes de agregarlos a su base de datos, deber&amp;aacute; desinfectarlos antes de mostrarlos a su usuario, podemos aprovechar estas &amp;uacute;tiles funciones PHP:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="068808ff0a60a263a2358801c4749089e30def64" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/mysqli.set-charset.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/mysqli.set-charset.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="46e173dc9a760384731add89dab0f2870d080331" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.construct.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.construct.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="21b30dda49f2f98580fc87a73465f1c06f270546" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.exec.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.exec.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="20f973bca827652525ece5a7191c7c65279d7e87" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/ref.pdo-mysql.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/ref.pdo-mysql.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9ed4446127d86c78b106a84a5eff4cb6ed4f956e" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;[deprecated in PHP 5.5.0, removed in PHP 7.0.0].&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[en desuso en PHP 5.5.0, eliminado en PHP 7.0.0].&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a6556046fbcfcf7aba9e2c1d496d4c414c910ce5" translate="yes" xml:space="preserve">
          <source>A better solution is to use prepared statements. The &lt;a href=&quot;http://www.php.net/pdo&quot;&gt;PDO library&lt;/a&gt; and mysqli extension support these.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una mejor soluci&amp;oacute;n es usar declaraciones preparadas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/pdo&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;biblioteca PDO&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y la extensi&amp;oacute;n mysqli son compatibles con estos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c8b4387481b8b21adbbe7392aa035865c2014c6b" translate="yes" xml:space="preserve">
          <source>A long time ago someone tried to invent a one-size fits all mechanism for escaping data and we ended up with &quot;&lt;a href=&quot;http://php.net/manual/en/security.magicquotes.php&quot;&gt;magic_quotes&lt;/a&gt;&quot; which didn't properly escape data for all output targets and resulted in different installation requiring different code to work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hace mucho tiempo, alguien trat&amp;oacute; de inventar un mecanismo &amp;uacute;nico para todos los &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/security.magicquotes.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;escapes de&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; datos y terminamos con &quot; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;magic_quotes&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot; que no escap&amp;oacute; correctamente los datos para todos los objetivos de salida y result&amp;oacute; en una instalaci&amp;oacute;n diferente que requiere un c&amp;oacute;digo diferente para funcionar.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0fc7a13401116e8243ae650fb135e8ebeb378727" translate="yes" xml:space="preserve">
          <source>A third example could be shell commands: If you are going to embed strings (such as arguments) to external commands, and call them with &lt;a href=&quot;http://php.net/manual/function.exec.php&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;, then you must use &lt;a href=&quot;http://php.net/manual/function.escapeshellcmd.php&quot;&gt;&lt;code&gt;escapeshellcmd&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://php.net/manual/function.escapeshellarg.php&quot;&gt;&lt;code&gt;escapeshellarg&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un tercer ejemplo podr&amp;iacute;a ser los comandos de shell: si va a incrustar cadenas (como argumentos) en comandos externos y llamarlos con &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.exec.php&quot;&gt; &lt;code&gt;exec&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , debe usar &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.escapeshellcmd.php&quot;&gt; &lt;code&gt;escapeshellcmd&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.escapeshellarg.php&quot;&gt; &lt;code&gt;escapeshellarg&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e5c726f106b0c67bcee919a11840ab92bf0eade3" translate="yes" xml:space="preserve">
          <source>And for database (model) layer there are ORM frameworks like Doctrine or wrappers around PDO like Nette Database.</source>
          <target state="translated">Y para la capa de base de datos (modelo)hay marcos ORM como Doctrine o envoltorios alrededor de PDO como Nette Database.</target>
        </trans-unit>
        <trans-unit id="c9330dd2e1314fe70c4190e16e416b782b01badb" translate="yes" xml:space="preserve">
          <source>And so on and so forth ...</source>
          <target state="translated">Y as√≠ sucesivamente...</target>
        </trans-unit>
        <trans-unit id="11a11a5dfe2fffbbd36948beab81434ec2fa5e02" translate="yes" xml:space="preserve">
          <source>Another example is HTML: If you embed strings within HTML markup, you must escape it with &lt;a href=&quot;http://php.net/manual/function.htmlspecialchars.php&quot;&gt;&lt;code&gt;htmlspecialchars&lt;/code&gt;&lt;/a&gt;. This means that every single &lt;code&gt;echo&lt;/code&gt; or &lt;code&gt;print&lt;/code&gt; statement should use &lt;code&gt;htmlspecialchars&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Otro ejemplo es HTML: si incrusta cadenas dentro del marcado HTML, debe escapar con &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.htmlspecialchars.php&quot;&gt; &lt;code&gt;htmlspecialchars&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto significa que cada &lt;/font&gt;&lt;/font&gt; &lt;code&gt;echo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;declaraci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;print&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; debe usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;htmlspecialchars&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77451a5a324c3f31a98538f1241ff38c93653973" translate="yes" xml:space="preserve">
          <source>As for the SQL injection attacks, make sure you check the user input, and then run it though mysql_real_escape_string(). The function won't defeat all injection attacks, though, so it is important that you check the data before dumping it into your query string.</source>
          <target state="translated">En cuanto a los ataques de inyecci√≥n SQL,aseg√∫rate de comprobar la entrada del usuario,y luego ejec√∫talo a trav√©s de mysql_real_escape_string().Sin embargo,la funci√≥n no derrotar√° todos los ataques de inyecci√≥n,por lo que es importante que compruebe los datos antes de volcarlos en su cadena de consulta.</target>
        </trans-unit>
        <trans-unit id="70f490bdcfd74f199c8c9f2ad1d532dd0d8392ed" translate="yes" xml:space="preserve">
          <source>Basic rules of thumb</source>
          <target state="translated">Reglas b√°sicas</target>
        </trans-unit>
        <trans-unit id="52e497215e568c0d8dcf18530294b4057df2fd8b" translate="yes" xml:space="preserve">
          <source>Both issues are far too big to go into in a single post, but there are lots of posts which go into more detail:</source>
          <target state="translated">Ambas cuestiones son demasiado grandes para entrar en un solo post,pero hay muchos posts que entran en m√°s detalle:</target>
        </trans-unit>
        <trans-unit id="403ca0e1883c9bdceb591d29dd9d3adb80fbe823" translate="yes" xml:space="preserve">
          <source>But of course that only cuts out one specific attack, so read all the other answers. (And yes I know that the code above isn't great, but it shows the specific defence.)</source>
          <target state="translated">Pero,por supuesto,eso s√≥lo elimina un ataque espec√≠fico,as√≠ que lee todas las dem√°s respuestas.(Y s√≠,s√© que el c√≥digo de arriba no es muy bueno,pero muestra la defensa espec√≠fica.)</target>
        </trans-unit>
        <trans-unit id="0400d8222cc4fb403356cb194eb689f467a44681" translate="yes" xml:space="preserve">
          <source>By all means &lt;a href=&quot;http://symcbean.blogspot.co.uk/2017/07/validate-input-escape-output.html&quot;&gt;validate input&lt;/a&gt; - decide whether you should accept it for further processing or tell the user it is unacceptable. But don't apply any change to representation of the data until it is about to leave PHP land.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De todos modos &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://symcbean.blogspot.co.uk/2017/07/validate-input-escape-output.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;valide la entrada&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : decida si debe aceptarla para su posterior procesamiento o decirle al usuario que es inaceptable. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero no aplique ning&amp;uacute;n cambio a la representaci&amp;oacute;n de los datos hasta que est&amp;eacute; a punto de abandonar PHP.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="893894ce0a262221f6844c710bdd9007af076015" translate="yes" xml:space="preserve">
          <source>Check out &lt;a href=&quot;https://phpdelusions.net/pdo&quot;&gt;&lt;em&gt;(The only proper) PDO tutorial&lt;/em&gt;&lt;/a&gt; for pretty much everything you need to know about PDO. (Sincere thanks to top SO contributor, @YourCommonSense, for this great resource on the subject.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Consulte el &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://phpdelusions.net/pdo&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tutorial PDO (el &amp;uacute;nico correcto)&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para obtener casi todo lo que necesita saber sobre PDO. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Un sincero agradecimiento al principal colaborador de SO, @YourCommonSense, por este gran recurso sobre el tema).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c7552a526f85c6de9290ce674e36578f5ca0cdd" translate="yes" xml:space="preserve">
          <source>Check the variable contains what you are expecting for:</source>
          <target state="translated">Comprueba que la variable contiene lo que esperas:</target>
        </trans-unit>
        <trans-unit id="e35785ef46fe91adda0bb2bc95edad42da71547c" translate="yes" xml:space="preserve">
          <source>Do not try to prevent SQL injection by sanitizing input data.</source>
          <target state="translated">No intente evitar la inyecci√≥n SQL desinfectando los datos de entrada.</target>
        </trans-unit>
        <trans-unit id="61f2c0fd1afcf789824a5f6f1258b9979dfd4d5a" translate="yes" xml:space="preserve">
          <source>Easiest way to avoid mistakes in sanitizing input and escaping data is using PHP framework like &lt;a href=&quot;http://symfony.com/&quot;&gt;Symfony&lt;/a&gt;, &lt;a href=&quot;http://nette.org/en/&quot;&gt;Nette&lt;/a&gt; etc. or part of that framework (templating engine, database layer, ORM).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La forma m&amp;aacute;s f&amp;aacute;cil de evitar errores al desinfectar la entrada y el escape de datos es utilizando un marco PHP como &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://symfony.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Symfony&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://nette.org/en/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nette&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;etc. o parte de ese marco (motor de plantillas, capa de base de datos, ORM).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9d9fbd42dcd246044f66af486685093501db482" translate="yes" xml:space="preserve">
          <source>Escape all other output with &lt;code&gt;htmlspecialchars()&lt;/code&gt; and be mindful of the 2nd and 3rd parameters here.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esc&amp;aacute;pese de todos los dem&amp;aacute;s resultados con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;htmlspecialchars()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y tenga en cuenta los par&amp;aacute;metros segundo y tercero aqu&amp;iacute;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3642b67ad1fb7b231149ce7ab92930a16d765590" translate="yes" xml:space="preserve">
          <source>Escaping output.</source>
          <target state="translated">Escapando de la salida.</target>
        </trans-unit>
        <trans-unit id="e4d3621b956946dbddbe00b105a477e193ad1d04" translate="yes" xml:space="preserve">
          <source>First of all, SQL injection is an input filtering problem, and XSS is an output escaping one - so you wouldn't even execute these two operations at the same time in the code lifecycle.</source>
          <target state="translated">En primer lugar,la inyecci√≥n SQL es un problema de filtrado de entrada,y el XSS es un problema de escape de salida,por lo que ni siquiera se ejecutar√≠an estas dos operaciones al mismo tiempo en el ciclo de vida del c√≥digo.</target>
        </trans-unit>
        <trans-unit id="ef84394fbdc42e23b3957a0093946a2c222b8bce" translate="yes" xml:space="preserve">
          <source>For SQL query, bind parameters (as with PDO) or use a driver-native escaping function for query variables (such as &lt;code&gt;mysql_real_escape_string()&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para consultas SQL, enlace par&amp;aacute;metros (como con PDO) o use una funci&amp;oacute;n de escape nativa del controlador para variables de consulta (como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;mysql_real_escape_string()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="768192e7bd1e73ea1dd2aa6047fec8f6f4a21e46" translate="yes" xml:space="preserve">
          <source>For Strings use:</source>
          <target state="translated">Para uso de las cuerdas:</target>
        </trans-unit>
        <trans-unit id="a4d5f6bc1515eba0a4f8d3895d351b699537b3e7" translate="yes" xml:space="preserve">
          <source>For really allowing HTML input with like stripped classes and/or tags depend on one of the dedicated xss validation packages. DO NOT WRITE YOUR OWN REGEXES TO PARSE HTML!</source>
          <target state="translated">Para realmente permitir la entrada de HTML con clases como las despojadas y o etiquetas dependen de uno de los paquetes de validaci√≥n xss dedicados.¬°NO ESCRIBAS TUS PROPIOS REGEXES PARA ANALIZAR EL HTML!</target>
        </trans-unit>
        <trans-unit id="5e6746a0b3a7bbcf345c1620070531cdadb865d5" translate="yes" xml:space="preserve">
          <source>Framework is automatically sanitizing input and you should't use $_POST, $_GET or $_SESSION variables directly, but through mechanism like routing, session handling etc.</source>
          <target state="translated">El marco de trabajo est√° desinfectando autom√°ticamente la entrada y no deber√≠as usar las variables $_POST,$_GET o $_SESSION directamente,sino a trav√©s de mecanismos como el enrutamiento,el manejo de la sesi√≥n,etc.</target>
        </trans-unit>
        <trans-unit id="10ae3619d0cc29cbdf1eb3a6f831f221ce9e1424" translate="yes" xml:space="preserve">
          <source>From the documentation (&lt;a href=&quot;http://php.net/manual/es/function.pg-escape-string.php&quot;&gt;http://php.net/manual/es/function.pg-escape-string.php&lt;/a&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De la documentaci&amp;oacute;n ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/es/function.pg-escape-string.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://php.net/manual/es/function.pg-escape-string.php&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="def16db71810caf6bd9b197ffe44afbd7ce9d911" translate="yes" xml:space="preserve">
          <source>How can I sanitize user input with PHP</source>
          <target state="translated">¬øC√≥mo puedo sanear la entrada del usuario con PHP</target>
        </trans-unit>
        <trans-unit id="4d7429d9588e46faadcd0180412ecb6d7f1535f7" translate="yes" xml:space="preserve">
          <source>If you are expecting an integer, use:</source>
          <target state="translated">Si espera un n√∫mero entero,√∫selo:</target>
        </trans-unit>
        <trans-unit id="bcab0c28ba6e63b65cf5c270776241bc01d79275" translate="yes" xml:space="preserve">
          <source>If you're using PostgreSQL, the input from PHP can be escaped with pg_escape_string()</source>
          <target state="translated">Si est√°s usando PostgreSQL,la entrada de PHP puede ser escapada con pg_escape_string()</target>
        </trans-unit>
        <trans-unit id="c8e4cbba33065e4ab88bb5cb466bb38d69c768cd" translate="yes" xml:space="preserve">
          <source>In other instances, where we don't want to accept HTML/Javascript at all, I've found this simple function useful (and has passed multiple audits against XSS):</source>
          <target state="translated">En otras instancias,donde no queremos aceptar HTMLJavascript en absoluto,he encontrado esta simple funci√≥n √∫til (y ha pasado m√∫ltiples auditor√≠as contra XSS):</target>
        </trans-unit>
        <trans-unit id="b49b0d26e4330e624c70c482882f858cfc3ac57d" translate="yes" xml:space="preserve">
          <source>Instead, &lt;strong&gt;do not allow data to be used in creating your SQL code&lt;/strong&gt;.  Use Prepared Statements (i.e. using parameters in a template query) that uses bound variables.  It is the only way to be guaranteed against SQL injection.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En cambio, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no permita que se usen datos para crear su c&amp;oacute;digo SQL&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Usar declaraciones preparadas (es decir, usar par&amp;aacute;metros en una consulta de plantilla) que usa variables enlazadas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es la &amp;uacute;nica forma de garantizar la inyecci&amp;oacute;n SQL.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="136b1dbfe8dbf848113a395f2caf7ef575eba377" translate="yes" xml:space="preserve">
          <source>Is there a catchall function somewhere that works well for sanitizing user input for SQL injection and XSS attacks, while still allowing certain types of HTML tags?</source>
          <target state="translated">¬øExiste una funci√≥n de &quot;catchall&quot; en alg√∫n lugar que funcione bien para sanear la entrada del usuario para la inyecci√≥n SQL y los ataques XSS,a la vez que permite ciertos tipos de etiquetas HTML?</target>
        </trans-unit>
        <trans-unit id="f471b01c59a0ecb03b402f2a0f3d8dfcdd928002" translate="yes" xml:space="preserve">
          <source>It supports a great deal of SANITIZE, VALIDATE filters.</source>
          <target state="translated">Soporta una gran cantidad de filtros de SANEAMIENTO,VALIDACI√ìN.</target>
        </trans-unit>
        <trans-unit id="199b9497f5267081e9c247dd3d8da36194200031" translate="yes" xml:space="preserve">
          <source>It's a common misconception that user input can be filtered. PHP even has a (now deprecated) &quot;feature&quot;, called &lt;a href=&quot;https://www.php.net/manual/en/security.magicquotes.php&quot;&gt;magic-quotes&lt;/a&gt;, that builds on this idea. It's nonsense. Forget about filtering (or cleaning, or whatever people call it).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es un error com&amp;uacute;n pensar que la entrada del usuario se puede filtrar. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP incluso tiene una &quot;caracter&amp;iacute;stica&quot; (ahora obsoleta), llamada &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.php.net/manual/en/security.magicquotes.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;comillas m&amp;aacute;gicas&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que se basa en esta idea. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No tiene sentido. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Olv&amp;iacute;date de filtrar (o limpiar, o como lo llamen las personas).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f4d5795ad5d4608d4c3ea9c423f6e9a975403458" translate="yes" xml:space="preserve">
          <source>Just wanted to add that on the subject of output escaping, if you use php DOMDocument to make your html output it will automatically escape in the right context. An attribute (value=&quot;&quot;) and the inner text of a &amp;lt;span&amp;gt; are not equal.
To be safe against XSS read this:
&lt;a href=&quot;https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet&quot;&gt;OWASP XSS Prevention Cheat Sheet&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Solo quer&amp;iacute;a agregar eso sobre el tema del escape de salida, si usa php DOMDocument para hacer que su salida html se escape autom&amp;aacute;ticamente en el contexto correcto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un atributo (valor = &quot;&quot;) y el texto interno de un &amp;lt;span&amp;gt; no son iguales. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para estar seguro contra XSS, lea esto: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;OWASP XSS Prevention Cheat Sheet&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="60198a33aeb248b6ffbdba60a0718b4039eeb2cf" translate="yes" xml:space="preserve">
          <source>Methods PHP output</source>
          <target state="translated">M√©todos Salida de PHP</target>
        </trans-unit>
        <trans-unit id="d2bc3bb9b800b664dcff4c90dc2c9853d5f2b77d" translate="yes" xml:space="preserve">
          <source>Methods for sanitizing user input with PHP:</source>
          <target state="translated">M√©todos para desinfectar la entrada del usuario con PHP:</target>
        </trans-unit>
        <trans-unit id="faf7a40ae2065a38d2cb46f614e9e936b1279db9" translate="yes" xml:space="preserve">
          <source>My own filter class (uses JavaScript to highlight faulty fields) can be initiated by either an ajax request or normal form post. (see the example below)</source>
          <target state="translated">Mi propia clase de filtro (usa JavaScript para resaltar los campos defectuosos)puede ser iniciada por una solicitud de ajax o por un formulario normal de correo.(ver el ejemplo a continuaci√≥n)</target>
        </trans-unit>
        <trans-unit id="10985aec5b69b93215f26c11c37ace08dd409cc9" translate="yes" xml:space="preserve">
          <source>MySQLi prepared statements:</source>
          <target state="translated">MySQLi prepar√≥ declaraciones:</target>
        </trans-unit>
        <trans-unit id="7b2e939e97014d76fc52afb9f25398e8437a57d4" translate="yes" xml:space="preserve">
          <source>Never trust user data.</source>
          <target state="translated">Nunca conf√≠e en los datos de los usuarios.</target>
        </trans-unit>
        <trans-unit id="3fc19b6eabc192274c081f4cc04768e6da1bd620" translate="yes" xml:space="preserve">
          <source>No, there is not.</source>
          <target state="translated">No,no lo hay.</target>
        </trans-unit>
        <trans-unit id="e71755ad95a991d2550e729e313f99167ec08c2c" translate="yes" xml:space="preserve">
          <source>No.  You can't generically filter data without any context of what it's for.  Sometimes you'd want to take a SQL query as input and sometimes you'd want to take HTML as input.</source>
          <target state="translated">No.No puedes filtrar gen√©ricamente los datos sin ning√∫n contexto de para qu√© sirven.A veces querr√°s tomar una consulta SQL como entrada y a veces querr√°s tomar HTML como entrada.</target>
        </trans-unit>
        <trans-unit id="cd11f10cb95b2c076fc452dbf358ace02da8cdb3" translate="yes" xml:space="preserve">
          <source>Of course, keep in mind that you need to do your sql query escaping too depending on what type of db your are using (mysql_real_escape_string() is useless for an sql server for instance). You probably want to handle this automatically at your appropriate application layer like an ORM. Also, as mentioned above: for outputting to html use the other php dedicated functions like htmlspecialchars ;)</source>
          <target state="translated">Por supuesto,ten en cuenta que tambi√©n tienes que hacer tu consulta sql escapando dependiendo del tipo de db que est√©s usando (mysql_real_escape_string()es in√∫til para un servidor sql por ejemplo).Probablemente quieras manejar esto autom√°ticamente en tu capa de aplicaci√≥n apropiada como un ORM.Tambi√©n,como se mencion√≥ anteriormente:para la salida a html use las otras funciones dedicadas a php como htmlspecialchars ;)</target>
        </trans-unit>
        <trans-unit id="6d5981c8540a76eb2029024b194b93a3efd793fc" translate="yes" xml:space="preserve">
          <source>One trick that can help in the specific circumstance where you have a page like &lt;code&gt;/mypage?id=53&lt;/code&gt; and you use the id in a WHERE clause is to ensure that id definitely is an integer, like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un truco que puede ayudar en las circunstancias espec&amp;iacute;ficas en las que tiene una p&amp;aacute;gina como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;/mypage?id=53&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y usa la identificaci&amp;oacute;n en una cl&amp;aacute;usula WHERE es asegurarse de que la identificaci&amp;oacute;n sea definitivamente un n&amp;uacute;mero entero, as&amp;iacute;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b0c10e2d4fa3143070da217cf90eb10f25bca7f8" translate="yes" xml:space="preserve">
          <source>PHP 5.2 introduced the &lt;strong&gt;filter_var&lt;/strong&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 5.2 introdujo la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;filter_var&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="81c651559f4dbe7cbc96e85543703dc1a1e80872" translate="yes" xml:space="preserve">
          <source>PHP has the new nice filter_input functions now, that for instance liberate you from finding 'the ultimate e-mail regex' now that there is a built-in FILTER_VALIDATE_EMAIL type</source>
          <target state="translated">PHP tiene ahora las nuevas y agradables funciones de entrada de filtros,que por ejemplo te liberan de encontrar 'el √∫ltimo correo electr√≥nico regex' ahora que hay un tipo de FILTER_VALIDATE_EMAIL incorporado</target>
        </trans-unit>
        <trans-unit id="171fd95c8abb9573d2081f395e524c7356473f19" translate="yes" xml:space="preserve">
          <source>Please see my website &lt;a href=&quot;http://bobby-tables.com/&quot;&gt;http://bobby-tables.com/&lt;/a&gt; for more about preventing SQL injection.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Consulte mi sitio web &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://bobby-tables.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://bobby-tables.com/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre c&amp;oacute;mo prevenir la inyecci&amp;oacute;n de SQL.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f543785f024bf51fd075ffdeb68766707018887" translate="yes" xml:space="preserve">
          <source>Safer PHP output</source>
          <target state="translated">Una salida PHP m√°s segura</target>
        </trans-unit>
        <trans-unit id="7082c859c9b7812a40a3131775791535efc835c1" translate="yes" xml:space="preserve">
          <source>Sanitizing / filtering of user input data.</source>
          <target state="translated">Filtrado desinfectante de los datos de entrada del usuario.</target>
        </trans-unit>
        <trans-unit id="4241418b71d5c671bffbb4bae7b2bb9212d30ea8" translate="yes" xml:space="preserve">
          <source>Select utf8, latin1, ascii.., dont use vulnerable charsets big5, cp932, gb2312, gbk, sjis.</source>
          <target state="translated">Selecciona utf8,latin1,ascii...,no uses los caracteres vulnerables big5,cp932,gb2312,gbk,sjis.</target>
        </trans-unit>
        <trans-unit id="2d7501cac084808741395df8299fd5787721779b" translate="yes" xml:space="preserve">
          <source>Set charset explicitly:</source>
          <target state="translated">Ponga el juego de caracteres expl√≠citamente:</target>
        </trans-unit>
        <trans-unit id="13c07eed9ebfe49ee8394c055157abca732a249c" translate="yes" xml:space="preserve">
          <source>Templating engine like &lt;a href=&quot;http://twig.sensiolabs.org/&quot;&gt;Twig&lt;/a&gt; or Latte has output escaping on by default - you don't have to solve manually if you have properly escaped your output depending on context (HTML or Javascript part of web page).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El motor de plantillas como &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://twig.sensiolabs.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Twig&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o Latte tiene escapes de salida activados de forma predeterminada: no tiene que resolver manualmente si ha escapado adecuadamente su salida dependiendo del contexto (parte HTML o Javascript de la p&amp;aacute;gina web).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1fbca31e1fcf00aa82c38350b13da658ed711f90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;htmlspecialchars()&lt;/code&gt; function converts some predefined characters to HTML entities.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;htmlspecialchars()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; convierte algunos caracteres predefinidos en entidades HTML.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c04e51f77d61a28e30bf202c4fe2c7ce56781d2a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stripslashes()&lt;/code&gt; function removes backslashes</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;stripslashes()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; elimina las barras invertidas&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a466a86b6e913569f4fae3cede3a81561c9cc946" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trim()&lt;/code&gt; function removes whitespace and other predefined characters from both sides of a string.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;trim()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; elimina espacios en blanco y otros caracteres predefinidos de ambos lados de una cadena.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="269e75117b6e759eb210dd655bddd974a81ed8da" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;only&lt;/em&gt; case where you need to actively filter data, is if you're accepting preformatted input. For example, if you let your users post HTML markup, that you plan to display on the site. However, you should be wise to avoid this at all cost, since no matter how well you filter it, it will always be a potential security hole.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;uacute;nico&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; caso en el que necesita filtrar datos de forma activa es si acepta entradas con formato previo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo, si deja que sus usuarios publiquen marcado HTML, que planea mostrar en el sitio. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, debe ser prudente para evitar esto a toda costa, ya que no importa qu&amp;eacute; tan bien lo filtre, siempre ser&amp;aacute; un agujero de seguridad potencial.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="060f5ef963fb60e92d049b7feeca81819ca54b96" translate="yes" xml:space="preserve">
          <source>The predefined characters are:</source>
          <target state="translated">Los caracteres predefinidos son:</target>
        </trans-unit>
        <trans-unit id="35580b6ad52c01ba4488170125c50a9e65babb9c" translate="yes" xml:space="preserve">
          <source>The process of escaping data for SQL - to prevent SQL injection - is very different from the process of escaping data for (X)HTML, to prevent XSS.</source>
          <target state="translated">El proceso de escape de datos para SQL-para evitar la inyecci√≥n de SQL-es muy diferente del proceso de escape de datos para (X)HTML,para evitar el XSS.</target>
        </trans-unit>
        <trans-unit id="17bf62cbc872170053df2e495c91ac3c6ac74584" translate="yes" xml:space="preserve">
          <source>The transforms you apply to data to make it safe for inclusion in an SQL statement are completely different from those you apply for inclusion in HTML are completely different from those you apply for inclusion in Javascript are completely different from those you apply for inclusion in LDIF are completely different from those you apply to inclusion in CSS are completely different from those you apply to inclusion in an Email....</source>
          <target state="translated">Las transformaciones que aplicas a los datos para hacerlos seguros para su inclusi√≥n en una declaraci√≥n SQL son completamente diferentes de las que aplicas para su inclusi√≥n en HTML son completamente diferentes de las que aplicas para su inclusi√≥n en Javascript son completamente diferentes de las que aplicas para su inclusi√≥n en LDIF son completamente diferentes de las que aplicas para su inclusi√≥n en CSS son completamente diferentes de las que aplicas para su inclusi√≥n en...</target>
        </trans-unit>
        <trans-unit id="1f0dcecfb20ba1d1a341edd58d72f4b5c1442285" translate="yes" xml:space="preserve">
          <source>There is the filter extension (&lt;a href=&quot;http://devolio.com/blog/archives/413-Data-Filtering-Using-PHPs-Filter-Functions-Part-one.html&quot;&gt;howto-link&lt;/a&gt;, &lt;a href=&quot;http://php.net/filter&quot;&gt;manual&lt;/a&gt;), which works pretty well with all GPC variables. It's not a magic-do-it-all thing though, you will still have to use it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Existe la extensi&amp;oacute;n de filtro ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://devolio.com/blog/archives/413-Data-Filtering-Using-PHPs-Filter-Functions-Part-one.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;howto-link&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/filter&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;manual&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), que funciona bastante bien con todas las variables GPC. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, no es una cosa m&amp;aacute;gica, todav&amp;iacute;a tendr&amp;aacute; que usarlo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1909509beba0d411634dbb1917141ebd047048c9" translate="yes" xml:space="preserve">
          <source>There's no catchall function, because there are multiple concerns to be addressed.</source>
          <target state="translated">No hay una funci√≥n de catchall,porque hay m√∫ltiples preocupaciones que deben ser abordadas.</target>
        </trans-unit>
        <trans-unit id="a47bc113b4488d293b5b9897930cc1702c2e63d0" translate="yes" xml:space="preserve">
          <source>To address the XSS issue, take a look at &lt;a href=&quot;http://www.htmlpurifier.org&quot;&gt;HTML Purifier&lt;/a&gt;. It is fairly configurable and has a decent track record.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para abordar el problema de XSS, eche un vistazo a &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.htmlpurifier.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HTML Purifier&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es bastante configurable y tiene un historial decente.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aacd69a86e6fde2567e6d43eb5eb920ad1c6ceef" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://php.net/manual/en/ref.filter.php&quot;&gt;Filter Function&lt;/a&gt; filter_var() &amp;mdash; filters a variable with a specified filter:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Usar &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/ref.filter.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n de filtro&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; filter_var (): filtra una variable con un filtro especificado:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e9cdfa5e79f8bf58acaa230e594bb0f90ed146e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;strip_tags()&lt;/code&gt; to filter out unwanted HTML</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;strip_tags()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para filtrar HTML no deseado&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9e0a6e9f0cd23ea70ece92d13bc41632e1eddc80" translate="yes" xml:space="preserve">
          <source>Use Modern Versions of MySQL and PHP.</source>
          <target state="translated">Utiliza las versiones modernas de MySQL y PHP.</target>
        </trans-unit>
        <trans-unit id="158bf109055a4391853e862d88370c6aad637ac3" translate="yes" xml:space="preserve">
          <source>Use secure charsets:</source>
          <target state="translated">Usen los caracteres de seguridad:</target>
        </trans-unit>
        <trans-unit id="190173fa9a0a8945467da85cad2c5cbd859c8c4d" translate="yes" xml:space="preserve">
          <source>Use single quotes (' ') around your variables inside your query.</source>
          <target state="translated">Usa comillas simples (' ')alrededor de tus variables dentro de tu consulta.</target>
        </trans-unit>
        <trans-unit id="c1d5f68a71902364f592c8951c7b28037bad3656" translate="yes" xml:space="preserve">
          <source>Use spatialized function:</source>
          <target state="translated">Usar la funci√≥n espacializada:</target>
        </trans-unit>
        <trans-unit id="9fc1cb8178c33c027bef9fc36ce32b59e89755fe" translate="yes" xml:space="preserve">
          <source>Using prepared statements, or/and filtering with mysql_real_escape_string is definitely a must.
PHP also has filter_input built in which is a good place to start.</source>
          <target state="translated">Usar declaraciones preparadas,y filtrar con mysql_real_escape_string es definitivamente una necesidad.PHP tambi√©n tiene incorporada la entrada filter_input que es un buen lugar para empezar.</target>
        </trans-unit>
        <trans-unit id="8fdec9ef6cefb7103653b6d041d1890a5352e0ed" translate="yes" xml:space="preserve">
          <source>What you are describing here is two separate issues:</source>
          <target state="translated">Lo que est√° describiendo aqu√≠ son dos asuntos separados:</target>
        </trans-unit>
        <trans-unit id="5f5018a80b300558bb5cedb9c67aeebd9041e242" translate="yes" xml:space="preserve">
          <source>What you should do, to avoid problems, is quite simple: whenever you embed a string within foreign code, you must escape it, according to the rules of that language. For example, if you embed a string in some SQL targeting MySQL, you must escape the string with MySQL's function for this purpose (&lt;code&gt;mysqli_real_escape_string&lt;/code&gt;). (Or, in case of databases, using prepared statements are a better approach, when possible.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo que debe hacer para evitar problemas es bastante simple: cada vez que incruste una cadena dentro de un c&amp;oacute;digo extranjero, debe escapar de ella, de acuerdo con las reglas de ese idioma. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo, si incrusta una cadena en alg&amp;uacute;n SQL dirigido a MySQL, debe escapar de la cadena con la funci&amp;oacute;n de MySQL para este prop&amp;oacute;sito ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;mysqli_real_escape_string&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(O, en el caso de las bases de datos, usar declaraciones preparadas es un mejor enfoque, cuando sea posible).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a350516541472d3775090a423f6261315a4c4bfd" translate="yes" xml:space="preserve">
          <source>When you call &lt;code&gt;echo&lt;/code&gt; or &lt;code&gt;print&lt;/code&gt; to display user-supplied values, use &lt;a href=&quot;http://php.net/manual/function.htmlspecialchars.php&quot;&gt;&lt;code&gt;htmlspecialchars&lt;/code&gt;&lt;/a&gt; unless the data was properly sanitized safe and is allowed to display HTML.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando llame a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;echo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;print&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para mostrar los valores proporcionados por el usuario, use &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.htmlspecialchars.php&quot;&gt; &lt;code&gt;htmlspecialchars&lt;/code&gt; a&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; menos que los datos se hayan desinfectado de forma segura y se permita mostrar HTML.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc255d7ae663a0144641261bf30f86bee325bb59" translate="yes" xml:space="preserve">
          <source>Write Your own validation function.</source>
          <target state="translated">Escriba su propia funci√≥n de validaci√≥n.</target>
        </trans-unit>
        <trans-unit id="63ccb8a2a4f0c1752cfec6059d40d0fef41dbbca" translate="yes" xml:space="preserve">
          <source>You always sanitize output.</source>
          <target state="translated">Siempre desinfectas la salida.</target>
        </trans-unit>
        <trans-unit id="fc8072db5e3d12f9b4c07b3808fd4d4eac198f6f" translate="yes" xml:space="preserve">
          <source>You can read more about it here - &lt;a href=&quot;https://stackoverflow.com/questions/2964140/what-is-a-framework-what-does-it-do-why-do-we-need-a-framework&quot;&gt;What is a software framework?&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede leer m&amp;aacute;s sobre esto aqu&amp;iacute;: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2964140/what-is-a-framework-what-does-it-do-why-do-we-need-a-framework&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Qu&amp;eacute; es un marco de software?&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="065a44c1fd533eb8f0aeec539cc40f5d54158958" translate="yes" xml:space="preserve">
          <source>You need to filter input on a whitelist -- ensure that the data matches some specification of what you expect.  Then you need to escape it before you use it, depending on the context in which you are using it.</source>
          <target state="translated">Necesitas filtrar la entrada en una lista blanca...asegurarte de que los datos coinciden con alguna especificaci√≥n de lo que esperas.Luego necesitas escapar de ella antes de usarla,dependiendo del contexto en el que la est√©s usando.</target>
        </trans-unit>
        <trans-unit id="76c10eb695163d405afe10a26f80e6a20b18adb9" translate="yes" xml:space="preserve">
          <source>You never sanitize input.</source>
          <target state="translated">Nunca desinfectas la entrada.</target>
        </trans-unit>
        <trans-unit id="05ad6cccc4873f2f7bdb9c7e3d0ccc3bf44d4353" translate="yes" xml:space="preserve">
          <source>more predefined filters</source>
          <target state="translated">m√°s filtros predefinidos</target>
        </trans-unit>
        <trans-unit id="d171be0ec601f7ae8915d89e367ad0f1d8d4fd21" translate="yes" xml:space="preserve">
          <source>pg_escape_string() escapes a string for querying the database. It returns an escaped string in the PostgreSQL format without quotes.</source>
          <target state="translated">pg_escape_string()escapa de una cadena para consultar la base de datos.Devuelve una cadena escapada en el formato PostgreSQL sin comillas.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
