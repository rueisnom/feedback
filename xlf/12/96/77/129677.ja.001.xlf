<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/129677">
    <body>
      <group id="129677">
        <trans-unit id="2d01f839d8b2ac5a7d42b2c3b3c4a46bbae39563" translate="yes" xml:space="preserve">
          <source>1) User input should always be assumed to be bad.</source>
          <target state="translated">1)ユーザーの入力は常に悪いことを前提としているはずです。</target>
        </trans-unit>
        <trans-unit id="2c8ae8f9b63f4f7ac9f5c7dce7513ce38bef2696" translate="yes" xml:space="preserve">
          <source>2) This is a large topic, and it depends on the context of the data being output. For HTML there are solutions such as htmlpurifier out there.
as a rule of thumb, always escape anything you output.</source>
          <target state="translated">2)これは大きなトピックで、出力されるデータのコンテキストに依存します。HTMLの場合は、htmlpurifierのような解決策があります。経験則として、出力するものは常にエスケープしてください。</target>
        </trans-unit>
        <trans-unit id="c7d6fed06fc4568a93069e256057ac434bd6dd9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://htmlpurifier.org/&quot;&gt;HTML Purifier&lt;/a&gt; has been around a long time and is still actively updated. You can use it to sanitize malicious input, while still allowing a generous &amp;amp; configurable whitelist of tags. Works great with many WYSIWYG editors, but it might be heavy for some use cases.</source>
          <target state="translated">&lt;a href=&quot;http://htmlpurifier.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HTML Purifier&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は古くからあり、現在も積極的に更新されています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それを使用して、タグの寛大で構成可能なホワイトリストを許可しながら、悪意のある入力をサニタイズできます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;多くのWYSIWYGエディターで問題なく動作しますが、一部のユースケースでは重くなる場合があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2e30650a74842cb895defc3804044b3c89a45975" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/class.pdo.php&quot;&gt;PDO::quote()&lt;/a&gt; - places quotes around the input string (if required) and escapes special characters within the input string, using a quoting style appropriate to the underlying driver:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/class.pdo.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PDO :: quote（）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -基になるドライバーに適した引用スタイルを使用して、入力文字列を（必要に応じて）引用符で囲み、入力文字列内の特殊文字をエスケープします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec9d76d8c1ee5a9241fc009f20ea58bcb7f0c67b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/function.filter-input.php&quot;&gt;filter_input()&lt;/a&gt; &amp;mdash; Gets a specific external variable by name and optionally filters it:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.filter-input.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;filter_input（）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;mdash;特定の外部変数を名前で取得し、オプションでそれをフィルタリングします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="197e77be997e0d6813a86a84a97267de1a14261c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/function.json-encode.php&quot;&gt;&lt;code&gt;json_encode&lt;/code&gt;&lt;/a&gt; is a safe way to provide user-supplied values from PHP to Javascript</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.json-encode.php&quot;&gt; &lt;code&gt;json_encode&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、ユーザー指定の値をPHPからJavaScriptに安全に提供する方法です&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="48b6b31bd59ae8f54a87f7932bcdd65e00e4a7f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/function.mysql-real-escape-string.php&quot;&gt;&lt;s&gt;mysql_real_escape_string&lt;/s&gt;&lt;/a&gt;&lt;sup&gt;[deprecated in PHP 5.5.0, removed in PHP 7.0.0].&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.mysql-real-escape-string.php&quot;&gt;&lt;s&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mysql_real_escape_string&lt;/font&gt;&lt;/font&gt;&lt;/s&gt;&lt;/a&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; [PHP 5.5.0で廃止、PHP 7.0.0で削除]。&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b2e09b476d75aeaa4edbcd50b0132560f8071076" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/function.preg-match.php&quot;&gt;preg_match()&lt;/a&gt; &amp;mdash; Perform a regular expression match;</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.preg-match.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;preg_match（）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;mdash;正規表現一致を実行します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a86f3f2b45de5bdd7e961b3aa1821fc6b6e464fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/mysqli.real-escape-string.php&quot;&gt;mysqli_real_escape_string&lt;/a&gt; Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection. But recommended to use Prepared Statements because they are not simply escaped strings, a statement comes up with a complete query execution plan, including which tables and indexes it would use, it is a optimized way.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/mysqli.real-escape-string.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mysqli_real_escape_string&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;接続の現在の文字セットを考慮して、SQLステートメントで使用するために文字列内の特殊文字をエスケープします。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、準備されたステートメントは単にエスケープされた文字列ではないため、ステートメントを使用することをお勧めします。ステートメントは、使用するテーブルとインデックスを含む完全なクエリ実行プランを作成します。これは最適化された方法です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ddd94bba2acaa5a42cc343d26978aa5659998ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/pdo.prepare.php&quot;&gt;PDO Prepared Statements&lt;/a&gt;: vs MySQLi prepared statements supports more database drivers and named parameters:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/pdo.prepare.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PDOの準備済みステートメント&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：vs MySQLiの準備済みステートメントは、より多くのデータベースドライバーと名前付きパラメーターをサポートしています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31087e657f115c6ae414547009d6672f96fa786f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do you call external shell commands using &lt;a href=&quot;http://php.net/manual/en/function.exec.php&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/manual/en/function.system.php&quot;&gt;&lt;code&gt;system()&lt;/code&gt;&lt;/a&gt; functions, or to the &lt;a href=&quot;http://php.net/manual/en/language.operators.execution.php&quot;&gt;&lt;code&gt;backtick&lt;/code&gt;&lt;/a&gt; operator?&lt;/strong&gt; If so, in addition to SQL Injection &amp;amp; XSS you might have an additional concern to address, &lt;em&gt;users running malicious commands on your server&lt;/em&gt;. You need to use &lt;a href=&quot;http://php.net/manual/en/function.escapeshellcmd.php&quot;&gt;&lt;code&gt;escapeshellcmd&lt;/code&gt;&lt;/a&gt; if you'd like to escape the entire command OR &lt;a href=&quot;http://php.net/manual/en/function.escapeshellarg.php&quot;&gt;&lt;code&gt;escapeshellarg&lt;/code&gt;&lt;/a&gt; to escape individual arguments.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/function.exec.php&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/function.system.php&quot;&gt; &lt;code&gt;system()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して外部シェルコマンドを呼び出します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;か&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、それとも&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/language.operators.execution.php&quot;&gt; &lt;code&gt;backtick&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オペレーターに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;か？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その場合、SQLインジェクションとXSSに加え&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て、サーバーで悪意のあるコマンドを実行しているユーザー&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に対処するという追加の懸念がある可能性があり&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたは使用する必要が&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/function.escapeshellcmd.php&quot;&gt; &lt;code&gt;escapeshellcmd&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたが全体のコマンドを脱出したい場合や、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/function.escapeshellarg.php&quot;&gt; &lt;code&gt;escapeshellarg&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;個々の引数をエスケープします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e39478210a7c0c3ebd2e42b2e65590119a580ecc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SQL Injection&lt;/strong&gt; - Today, generally, every PHP project should be using &lt;a href=&quot;http://php.net/manual/en/pdo.prepared-statements.php&quot;&gt;prepared statements via PHP Data Objects (PDO)&lt;/a&gt; as a best practice, &lt;em&gt;preventing an error from a stray quote as well as a full-featured solution against injection&lt;/em&gt;. It's also the most flexible &amp;amp; secure way to access your database.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQLインジェクション&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -今日、一般に、すべてのPHPプロジェクトは&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.prepared-statements.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHPデータオブジェクト（PDO）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;介し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;準備されたステートメントを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ベストプラクティスとして&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用する必要が&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あります&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、データベースにアクセスするための最も柔軟で安全な方法でもあります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cfd97153563bf4c922b321ccc03a153e3346ed92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XSS - Sanitize data on the way in...&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;XSS-途中でデータを無害化...&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc156968bc89678692b894d6a5c5e12240b94d7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XSS - Sanitize data on the way out...&lt;/strong&gt; unless you guarantee the data was properly sanitized before you add it to your database, you'll need to sanitize it before displaying it to your user, we can leverage these useful PHP functions:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;XSS-途中でデータをサニタイズ...&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;データベースに追加する前にデータが適切にサニタイズされることが保証されていない限り、ユーザーに表示する前にサニタイズする必要があります。これらの便利なPHP関数を利用できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="068808ff0a60a263a2358801c4749089e30def64" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/mysqli.set-charset.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/mysqli.set-charset.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="46e173dc9a760384731add89dab0f2870d080331" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.construct.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.construct.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="21b30dda49f2f98580fc87a73465f1c06f270546" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.exec.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/pdo.exec.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="20f973bca827652525ece5a7191c7c65279d7e87" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/ref.pdo-mysql.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;a href=&quot;http://php.net/manual/en/ref.pdo-mysql.php&quot;&gt;manual&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9ed4446127d86c78b106a84a5eff4cb6ed4f956e" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;[deprecated in PHP 5.5.0, removed in PHP 7.0.0].&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[PHP 5.5.0で非推奨、PHP 7.0.0で削除]。&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a6556046fbcfcf7aba9e2c1d496d4c414c910ce5" translate="yes" xml:space="preserve">
          <source>A better solution is to use prepared statements. The &lt;a href=&quot;http://www.php.net/pdo&quot;&gt;PDO library&lt;/a&gt; and mysqli extension support these.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;より良い解決策は、準備されたステートメントを使用することです。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/pdo&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PDOライブラリ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とmysqli拡張モジュールはこれらをサポートしています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c8b4387481b8b21adbbe7392aa035865c2014c6b" translate="yes" xml:space="preserve">
          <source>A long time ago someone tried to invent a one-size fits all mechanism for escaping data and we ended up with &quot;&lt;a href=&quot;http://php.net/manual/en/security.magicquotes.php&quot;&gt;magic_quotes&lt;/a&gt;&quot; which didn't properly escape data for all output targets and resulted in different installation requiring different code to work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ずっと前に、誰かがデータをエスケープするためのすべてのメカニズムに適合する単一サイズを発明しようとしたところ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、すべての出力ターゲットのデータを適切にエスケープせず、異なるインストールで動作するように異なるコードを必要と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する「&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/security.magicquotes.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;magic_quotes&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」ができました。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0fc7a13401116e8243ae650fb135e8ebeb378727" translate="yes" xml:space="preserve">
          <source>A third example could be shell commands: If you are going to embed strings (such as arguments) to external commands, and call them with &lt;a href=&quot;http://php.net/manual/function.exec.php&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;, then you must use &lt;a href=&quot;http://php.net/manual/function.escapeshellcmd.php&quot;&gt;&lt;code&gt;escapeshellcmd&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://php.net/manual/function.escapeshellarg.php&quot;&gt;&lt;code&gt;escapeshellarg&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3番目の例はシェルコマンドです。外部コマンドに文字列（引数など）を埋め込み、それらを&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.exec.php&quot;&gt; &lt;code&gt;exec&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出す&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合は、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.escapeshellcmd.php&quot;&gt; &lt;code&gt;escapeshellcmd&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.escapeshellarg.php&quot;&gt; &lt;code&gt;escapeshellarg&lt;/code&gt; を&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用する必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e5c726f106b0c67bcee919a11840ab92bf0eade3" translate="yes" xml:space="preserve">
          <source>And for database (model) layer there are ORM frameworks like Doctrine or wrappers around PDO like Nette Database.</source>
          <target state="translated">また、データベース(モデル)層には Doctrine のような ORM フレームワークや Nette Database のような PDO のラッパーがあります。</target>
        </trans-unit>
        <trans-unit id="c9330dd2e1314fe70c4190e16e416b782b01badb" translate="yes" xml:space="preserve">
          <source>And so on and so forth ...</source>
          <target state="translated">などなど・・・。</target>
        </trans-unit>
        <trans-unit id="11a11a5dfe2fffbbd36948beab81434ec2fa5e02" translate="yes" xml:space="preserve">
          <source>Another example is HTML: If you embed strings within HTML markup, you must escape it with &lt;a href=&quot;http://php.net/manual/function.htmlspecialchars.php&quot;&gt;&lt;code&gt;htmlspecialchars&lt;/code&gt;&lt;/a&gt;. This means that every single &lt;code&gt;echo&lt;/code&gt; or &lt;code&gt;print&lt;/code&gt; statement should use &lt;code&gt;htmlspecialchars&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;別の例はHTMLです。HTMLマークアップ内に文字列を埋め込む場合は、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.htmlspecialchars.php&quot;&gt; &lt;code&gt;htmlspecialchars&lt;/code&gt; で&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エスケープする必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、すべての&lt;/font&gt;&lt;/font&gt; &lt;code&gt;echo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;print&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ステートメントは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;htmlspecialchars&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77451a5a324c3f31a98538f1241ff38c93653973" translate="yes" xml:space="preserve">
          <source>As for the SQL injection attacks, make sure you check the user input, and then run it though mysql_real_escape_string(). The function won't defeat all injection attacks, though, so it is important that you check the data before dumping it into your query string.</source>
          <target state="translated">SQLインジェクション攻撃については、ユーザ入力を確認してからmysql_real_escape_string()を経由して実行するようにしましょう。しかし、この関数はすべてのインジェクション攻撃を打ち負かすことはできませんので、クエリ文字列にダンプする前にデータをチェックすることが重要です。</target>
        </trans-unit>
        <trans-unit id="70f490bdcfd74f199c8c9f2ad1d532dd0d8392ed" translate="yes" xml:space="preserve">
          <source>Basic rules of thumb</source>
          <target state="translated">親指の基本ルール</target>
        </trans-unit>
        <trans-unit id="52e497215e568c0d8dcf18530294b4057df2fd8b" translate="yes" xml:space="preserve">
          <source>Both issues are far too big to go into in a single post, but there are lots of posts which go into more detail:</source>
          <target state="translated">どちらの問題も一回の投稿では大きすぎるのですが、より詳細な内容の投稿がたくさんあります。</target>
        </trans-unit>
        <trans-unit id="403ca0e1883c9bdceb591d29dd9d3adb80fbe823" translate="yes" xml:space="preserve">
          <source>But of course that only cuts out one specific attack, so read all the other answers. (And yes I know that the code above isn't great, but it shows the specific defence.)</source>
          <target state="translated">しかし、もちろんそれは1つの特定の攻撃をカットするだけなので、他のすべての回答を読んでください。(そして、はい、私は上記のコードが素晴らしいものではないことを知っていますが、それは具体的な防御を示しています)。</target>
        </trans-unit>
        <trans-unit id="0400d8222cc4fb403356cb194eb689f467a44681" translate="yes" xml:space="preserve">
          <source>By all means &lt;a href=&quot;http://symcbean.blogspot.co.uk/2017/07/validate-input-escape-output.html&quot;&gt;validate input&lt;/a&gt; - decide whether you should accept it for further processing or tell the user it is unacceptable. But don't apply any change to representation of the data until it is about to leave PHP land.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必ず&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://symcbean.blogspot.co.uk/2017/07/validate-input-escape-output.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;入力&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;検証し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;てください-今後の処理のためにそれを受け入れるか、受け入れられないかをユーザーに伝えるかどうかを決定してください。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、PHPの土地を離れるまでは、データの表現に変更を加えないでください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="893894ce0a262221f6844c710bdd9007af076015" translate="yes" xml:space="preserve">
          <source>Check out &lt;a href=&quot;https://phpdelusions.net/pdo&quot;&gt;&lt;em&gt;(The only proper) PDO tutorial&lt;/em&gt;&lt;/a&gt; for pretty much everything you need to know about PDO. (Sincere thanks to top SO contributor, @YourCommonSense, for this great resource on the subject.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://phpdelusions.net/pdo&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（唯一の適切な）PDOチュートリアル&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チェックし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て、PDOについて知る必要があるほとんどすべてのことを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;確認してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（この件に関するこのすばらしいリソースについて、SOのトップ貢献者である@YourCommonSenseに心から感謝します。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c7552a526f85c6de9290ce674e36578f5ca0cdd" translate="yes" xml:space="preserve">
          <source>Check the variable contains what you are expecting for:</source>
          <target state="translated">変数に期待するものが含まれていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="e35785ef46fe91adda0bb2bc95edad42da71547c" translate="yes" xml:space="preserve">
          <source>Do not try to prevent SQL injection by sanitizing input data.</source>
          <target state="translated">入力データをサニタイズしてSQLインジェクションを防ごうとしないでください。</target>
        </trans-unit>
        <trans-unit id="61f2c0fd1afcf789824a5f6f1258b9979dfd4d5a" translate="yes" xml:space="preserve">
          <source>Easiest way to avoid mistakes in sanitizing input and escaping data is using PHP framework like &lt;a href=&quot;http://symfony.com/&quot;&gt;Symfony&lt;/a&gt;, &lt;a href=&quot;http://nette.org/en/&quot;&gt;Nette&lt;/a&gt; etc. or part of that framework (templating engine, database layer, ORM).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;入力のサニタイズとデータのエスケープのミスを回避する最も簡単な方法は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://symfony.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Symfony&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;や&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://nette.org/en/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nette&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHPフレームワーク&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;またはそのフレームワークの一部（テンプレートエンジン、データベースレイヤー、ORM）を使用することです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9d9fbd42dcd246044f66af486685093501db482" translate="yes" xml:space="preserve">
          <source>Escape all other output with &lt;code&gt;htmlspecialchars()&lt;/code&gt; and be mindful of the 2nd and 3rd parameters here.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;htmlspecialchars()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して他のすべての出力をエスケープし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、ここの2番目と3番目のパラメーターに注意してください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3642b67ad1fb7b231149ce7ab92930a16d765590" translate="yes" xml:space="preserve">
          <source>Escaping output.</source>
          <target state="translated">出力をエスケープします。</target>
        </trans-unit>
        <trans-unit id="e4d3621b956946dbddbe00b105a477e193ad1d04" translate="yes" xml:space="preserve">
          <source>First of all, SQL injection is an input filtering problem, and XSS is an output escaping one - so you wouldn't even execute these two operations at the same time in the code lifecycle.</source>
          <target state="translated">まず第一に、SQLインジェクションは入力フィルタリングの問題であり、XSSは出力エスケープの問題です。</target>
        </trans-unit>
        <trans-unit id="ef84394fbdc42e23b3957a0093946a2c222b8bce" translate="yes" xml:space="preserve">
          <source>For SQL query, bind parameters (as with PDO) or use a driver-native escaping function for query variables (such as &lt;code&gt;mysql_real_escape_string()&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQLクエリの場合は、パラメータをバインドするか（PDOと同様）、クエリ変数にドライバネイティブのエスケープ関数を使用します（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;mysql_real_escape_string()&lt;/code&gt; など&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="768192e7bd1e73ea1dd2aa6047fec8f6f4a21e46" translate="yes" xml:space="preserve">
          <source>For Strings use:</source>
          <target state="translated">弦楽器を使用する場合。</target>
        </trans-unit>
        <trans-unit id="a4d5f6bc1515eba0a4f8d3895d351b699537b3e7" translate="yes" xml:space="preserve">
          <source>For really allowing HTML input with like stripped classes and/or tags depend on one of the dedicated xss validation packages. DO NOT WRITE YOUR OWN REGEXES TO PARSE HTML!</source>
          <target state="translated">剥ぎ取られたクラスやタグのような HTML 入力を本当に許可するには、専用の xss 検証パッケージの一つに依存します。HTMLを解析するために独自の正規表現を書かないでください!</target>
        </trans-unit>
        <trans-unit id="5e6746a0b3a7bbcf345c1620070531cdadb865d5" translate="yes" xml:space="preserve">
          <source>Framework is automatically sanitizing input and you should't use $_POST, $_GET or $_SESSION variables directly, but through mechanism like routing, session handling etc.</source>
          <target state="translated">フレームワークは自動的に入力をサニタイズしているので、$_POST,$_GET,$_SESSION 変数を直接使うのではなく、ルーティングやセッション処理などの仕組みを使ってください。</target>
        </trans-unit>
        <trans-unit id="10ae3619d0cc29cbdf1eb3a6f831f221ce9e1424" translate="yes" xml:space="preserve">
          <source>From the documentation (&lt;a href=&quot;http://php.net/manual/es/function.pg-escape-string.php&quot;&gt;http://php.net/manual/es/function.pg-escape-string.php&lt;/a&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ドキュメントから（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/es/function.pg-escape-string.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://php.net/manual/es/function.pg-escape-string.php&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="def16db71810caf6bd9b197ffe44afbd7ce9d911" translate="yes" xml:space="preserve">
          <source>How can I sanitize user input with PHP</source>
          <target state="translated">PHPでユーザーの入力をサニタイズするには</target>
        </trans-unit>
        <trans-unit id="4d7429d9588e46faadcd0180412ecb6d7f1535f7" translate="yes" xml:space="preserve">
          <source>If you are expecting an integer, use:</source>
          <target state="translated">整数を期待している場合は、使用してください。</target>
        </trans-unit>
        <trans-unit id="bcab0c28ba6e63b65cf5c270776241bc01d79275" translate="yes" xml:space="preserve">
          <source>If you're using PostgreSQL, the input from PHP can be escaped with pg_escape_string()</source>
          <target state="translated">PostgreSQLを使用している場合、PHPからの入力はpg_escape_string()でエスケープすることができます。</target>
        </trans-unit>
        <trans-unit id="c8e4cbba33065e4ab88bb5cb466bb38d69c768cd" translate="yes" xml:space="preserve">
          <source>In other instances, where we don't want to accept HTML/Javascript at all, I've found this simple function useful (and has passed multiple audits against XSS):</source>
          <target state="translated">他にも、HTMLJavascriptを全く受け入れたくない場合には、このシンプルな機能が便利だと感じたことがあります(XSSに対する複数の監査に合格しています)。</target>
        </trans-unit>
        <trans-unit id="b49b0d26e4330e624c70c482882f858cfc3ac57d" translate="yes" xml:space="preserve">
          <source>Instead, &lt;strong&gt;do not allow data to be used in creating your SQL code&lt;/strong&gt;.  Use Prepared Statements (i.e. using parameters in a template query) that uses bound variables.  It is the only way to be guaranteed against SQL injection.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代わりに、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQLコードの作成にデータの使用を許可しないでください&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バインドされた変数を使用する準備済みステートメントを使用します（つまり、テンプレートクエリでパラメーターを使用します）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、SQLインジェクションに対して保証される唯一の方法です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="136b1dbfe8dbf848113a395f2caf7ef575eba377" translate="yes" xml:space="preserve">
          <source>Is there a catchall function somewhere that works well for sanitizing user input for SQL injection and XSS attacks, while still allowing certain types of HTML tags?</source>
          <target state="translated">特定のタイプのHTMLタグを許可しながら、SQLインジェクションやXSS攻撃のためにユーザー入力をサニタイズするためにうまく機能するキャッチオール機能はどこかにありますか?</target>
        </trans-unit>
        <trans-unit id="f471b01c59a0ecb03b402f2a0f3d8dfcdd928002" translate="yes" xml:space="preserve">
          <source>It supports a great deal of SANITIZE, VALIDATE filters.</source>
          <target state="translated">多くのSANITIZE、VALIDATEフィルターをサポートしています。</target>
        </trans-unit>
        <trans-unit id="199b9497f5267081e9c247dd3d8da36194200031" translate="yes" xml:space="preserve">
          <source>It's a common misconception that user input can be filtered. PHP even has a (now deprecated) &quot;feature&quot;, called &lt;a href=&quot;https://www.php.net/manual/en/security.magicquotes.php&quot;&gt;magic-quotes&lt;/a&gt;, that builds on this idea. It's nonsense. Forget about filtering (or cleaning, or whatever people call it).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ユーザー入力をフィルタリングできるというのはよくある誤解です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHPには、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このアイデアに基づいて作成さ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れた&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.php.net/manual/en/security.magicquotes.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;magic-quotes&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれる（現在は非推奨の）「機能」&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もあります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それはナンセンスです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィルタリング（またはクリーニング、または他の人が呼ぶもの）を忘れてください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f4d5795ad5d4608d4c3ea9c423f6e9a975403458" translate="yes" xml:space="preserve">
          <source>Just wanted to add that on the subject of output escaping, if you use php DOMDocument to make your html output it will automatically escape in the right context. An attribute (value=&quot;&quot;) and the inner text of a &amp;lt;span&amp;gt; are not equal.
To be safe against XSS read this:
&lt;a href=&quot;https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet&quot;&gt;OWASP XSS Prevention Cheat Sheet&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;php DOMDocumentを使用してhtml出力を作成すると、適切なコンテキストで自動的にエスケープされます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性（value = &quot;&quot;）と&amp;lt;span&amp;gt;の内部テキストが等しくありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;XSSに対して安全であるためにこれを読んでください： &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;OWASP XSS防止チートシート&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="60198a33aeb248b6ffbdba60a0718b4039eeb2cf" translate="yes" xml:space="preserve">
          <source>Methods PHP output</source>
          <target state="translated">メソッド PHP出力</target>
        </trans-unit>
        <trans-unit id="d2bc3bb9b800b664dcff4c90dc2c9853d5f2b77d" translate="yes" xml:space="preserve">
          <source>Methods for sanitizing user input with PHP:</source>
          <target state="translated">PHP でユーザの入力をサニタイズするためのメソッド。</target>
        </trans-unit>
        <trans-unit id="faf7a40ae2065a38d2cb46f614e9e936b1279db9" translate="yes" xml:space="preserve">
          <source>My own filter class (uses JavaScript to highlight faulty fields) can be initiated by either an ajax request or normal form post. (see the example below)</source>
          <target state="translated">私自身のフィルタークラス(JavaScriptを使用して欠陥のあるフィールドを強調表示します)は、ajaxリクエストか通常のフォーム投稿のどちらかで開始することができます。(以下の例を参照してください)</target>
        </trans-unit>
        <trans-unit id="10985aec5b69b93215f26c11c37ace08dd409cc9" translate="yes" xml:space="preserve">
          <source>MySQLi prepared statements:</source>
          <target state="translated">MySQLiが用意したステートメント。</target>
        </trans-unit>
        <trans-unit id="7b2e939e97014d76fc52afb9f25398e8437a57d4" translate="yes" xml:space="preserve">
          <source>Never trust user data.</source>
          <target state="translated">ユーザーデータは絶対に信用しないでください。</target>
        </trans-unit>
        <trans-unit id="3fc19b6eabc192274c081f4cc04768e6da1bd620" translate="yes" xml:space="preserve">
          <source>No, there is not.</source>
          <target state="translated">いや、そんなことはない。</target>
        </trans-unit>
        <trans-unit id="e71755ad95a991d2550e729e313f99167ec08c2c" translate="yes" xml:space="preserve">
          <source>No.  You can't generically filter data without any context of what it's for.  Sometimes you'd want to take a SQL query as input and sometimes you'd want to take HTML as input.</source>
          <target state="translated">何のためにデータをフィルタリングするのかというコンテキストがないと、一般的にデータをフィルタリングすることはできません。SQL クエリを入力として受け取りたい場合もあれば、HTML を入力として受け取りたい場合もあるでしょう。</target>
        </trans-unit>
        <trans-unit id="cd11f10cb95b2c076fc452dbf358ace02da8cdb3" translate="yes" xml:space="preserve">
          <source>Of course, keep in mind that you need to do your sql query escaping too depending on what type of db your are using (mysql_real_escape_string() is useless for an sql server for instance). You probably want to handle this automatically at your appropriate application layer like an ORM. Also, as mentioned above: for outputting to html use the other php dedicated functions like htmlspecialchars ;)</source>
          <target state="translated">もちろん、使用しているDBの種類によっては、SQLクエリのエスケープも必要になることを覚えておいてください(例えば、mysql_real_escape_string()はSQLサーバでは役に立たない)。おそらく、ORMのように適切なアプリケーションレイヤーで自動的に処理したいのでしょう。また、上で述べたように、html への出力には htmlspecialchars ;)のような他の php 専用の関数を使用してください。</target>
        </trans-unit>
        <trans-unit id="6d5981c8540a76eb2029024b194b93a3efd793fc" translate="yes" xml:space="preserve">
          <source>One trick that can help in the specific circumstance where you have a page like &lt;code&gt;/mypage?id=53&lt;/code&gt; and you use the id in a WHERE clause is to ensure that id definitely is an integer, like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;/mypage?id=53&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ようなページ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があり、WHERE句でIDを使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する特定の状況で役立つ1つのトリック&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、IDが整数であることを確認することです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b0c10e2d4fa3143070da217cf90eb10f25bca7f8" translate="yes" xml:space="preserve">
          <source>PHP 5.2 introduced the &lt;strong&gt;filter_var&lt;/strong&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 5.2で&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;filter_var&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;導入されました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="81c651559f4dbe7cbc96e85543703dc1a1e80872" translate="yes" xml:space="preserve">
          <source>PHP has the new nice filter_input functions now, that for instance liberate you from finding 'the ultimate e-mail regex' now that there is a built-in FILTER_VALIDATE_EMAIL type</source>
          <target state="translated">PHPには新しい素敵なfilter_input関数があり、例えば「究極の電子メール正規表現」を見つけることから解放されます。</target>
        </trans-unit>
        <trans-unit id="171fd95c8abb9573d2081f395e524c7356473f19" translate="yes" xml:space="preserve">
          <source>Please see my website &lt;a href=&quot;http://bobby-tables.com/&quot;&gt;http://bobby-tables.com/&lt;/a&gt; for more about preventing SQL injection.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQLインジェクションの防止の詳細について&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、私のWebサイト&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://bobby-tables.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://bobby-tables.com/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f543785f024bf51fd075ffdeb68766707018887" translate="yes" xml:space="preserve">
          <source>Safer PHP output</source>
          <target state="translated">より安全な PHP 出力</target>
        </trans-unit>
        <trans-unit id="7082c859c9b7812a40a3131775791535efc835c1" translate="yes" xml:space="preserve">
          <source>Sanitizing / filtering of user input data.</source>
          <target state="translated">ユーザー入力データのフィルタリングをサニタイズ</target>
        </trans-unit>
        <trans-unit id="4241418b71d5c671bffbb4bae7b2bb9212d30ea8" translate="yes" xml:space="preserve">
          <source>Select utf8, latin1, ascii.., dont use vulnerable charsets big5, cp932, gb2312, gbk, sjis.</source>
          <target state="translated">utf8,latin1,ascii...を選択し、脆弱性のある文字セット big5,cp932,gb2312,gbk,sjis を使用しないようにしてください。</target>
        </trans-unit>
        <trans-unit id="2d7501cac084808741395df8299fd5787721779b" translate="yes" xml:space="preserve">
          <source>Set charset explicitly:</source>
          <target state="translated">明示的に charset を設定します。</target>
        </trans-unit>
        <trans-unit id="13c07eed9ebfe49ee8394c055157abca732a249c" translate="yes" xml:space="preserve">
          <source>Templating engine like &lt;a href=&quot;http://twig.sensiolabs.org/&quot;&gt;Twig&lt;/a&gt; or Latte has output escaping on by default - you don't have to solve manually if you have properly escaped your output depending on context (HTML or Javascript part of web page).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://twig.sensiolabs.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Twig&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;やLatteの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ようなテンプレートエンジン&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はデフォルトで出力をエスケープします-コンテキスト（HTMLまたはWebページのJavascript部分）に応じて出力を適切にエスケープした場合、手動で解決する必要はありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1fbca31e1fcf00aa82c38350b13da658ed711f90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;htmlspecialchars()&lt;/code&gt; function converts some predefined characters to HTML entities.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;htmlspecialchars()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数は、HTMLエンティティに、いくつかの事前定義された文字を変換します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c04e51f77d61a28e30bf202c4fe2c7ce56781d2a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stripslashes()&lt;/code&gt; function removes backslashes</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;stripslashes()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数は、バックスラッシュを削除します&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a466a86b6e913569f4fae3cede3a81561c9cc946" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trim()&lt;/code&gt; function removes whitespace and other predefined characters from both sides of a string.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;trim()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数を削除し、空白文字列の両側から他の事前定義された文字。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="269e75117b6e759eb210dd655bddd974a81ed8da" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;only&lt;/em&gt; case where you need to actively filter data, is if you're accepting preformatted input. For example, if you let your users post HTML markup, that you plan to display on the site. However, you should be wise to avoid this at all cost, since no matter how well you filter it, it will always be a potential security hole.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;唯一&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたがプリフォーマット入力を受け付けている場合は、積極的にフィルタデータを必要とする場合は、です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、ユーザーにHTMLマークアップの投稿を許可した場合、そのマークアップをサイトに表示する予定です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、これをどのように適切にフィルタリングしても、常にセキュリティホールになる可能性があるため、これを絶対に回避することをお勧めします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="060f5ef963fb60e92d049b7feeca81819ca54b96" translate="yes" xml:space="preserve">
          <source>The predefined characters are:</source>
          <target state="translated">あらかじめ定義されている文字は</target>
        </trans-unit>
        <trans-unit id="35580b6ad52c01ba4488170125c50a9e65babb9c" translate="yes" xml:space="preserve">
          <source>The process of escaping data for SQL - to prevent SQL injection - is very different from the process of escaping data for (X)HTML, to prevent XSS.</source>
          <target state="translated">SQLインジェクションを防ぐためにSQLのデータをエスケープするプロセスは、XSSを防ぐために(X)HTMLのデータをエスケープするプロセスとは大きく異なります。</target>
        </trans-unit>
        <trans-unit id="17bf62cbc872170053df2e495c91ac3c6ac74584" translate="yes" xml:space="preserve">
          <source>The transforms you apply to data to make it safe for inclusion in an SQL statement are completely different from those you apply for inclusion in HTML are completely different from those you apply for inclusion in Javascript are completely different from those you apply for inclusion in LDIF are completely different from those you apply to inclusion in CSS are completely different from those you apply to inclusion in an Email....</source>
          <target state="translated">SQL文に安全に含めるためにデータに適用する変換は、HTMLに含めるために適用する変換と、Javascriptに含めるために適用する変換とでは、LDIFに含めるために適用する変換と、CSSに含めるために適用する変換とでは、メールに含めるために適用する変換とでは、全く異なります...続きを読む</target>
        </trans-unit>
        <trans-unit id="1f0dcecfb20ba1d1a341edd58d72f4b5c1442285" translate="yes" xml:space="preserve">
          <source>There is the filter extension (&lt;a href=&quot;http://devolio.com/blog/archives/413-Data-Filtering-Using-PHPs-Filter-Functions-Part-one.html&quot;&gt;howto-link&lt;/a&gt;, &lt;a href=&quot;http://php.net/filter&quot;&gt;manual&lt;/a&gt;), which works pretty well with all GPC variables. It's not a magic-do-it-all thing though, you will still have to use it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィルター拡張（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://devolio.com/blog/archives/413-Data-Filtering-Using-PHPs-Filter-Functions-Part-one.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;howto-link&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/filter&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;manual&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）があり、すべてのGPC変数で非常にうまく機能します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、それはすべてを魔法のように行うものではありません。使用する必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1909509beba0d411634dbb1917141ebd047048c9" translate="yes" xml:space="preserve">
          <source>There's no catchall function, because there are multiple concerns to be addressed.</source>
          <target state="translated">キャッチオール機能がないのは、複数の懸念事項があるからです。</target>
        </trans-unit>
        <trans-unit id="a47bc113b4488d293b5b9897930cc1702c2e63d0" translate="yes" xml:space="preserve">
          <source>To address the XSS issue, take a look at &lt;a href=&quot;http://www.htmlpurifier.org&quot;&gt;HTML Purifier&lt;/a&gt;. It is fairly configurable and has a decent track record.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;XSSの問題に対処するには、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.htmlpurifier.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HTML Purifierをご覧ください&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それはかなり構成可能で、まともな実績があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aacd69a86e6fde2567e6d43eb5eb920ad1c6ceef" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://php.net/manual/en/ref.filter.php&quot;&gt;Filter Function&lt;/a&gt; filter_var() &amp;mdash; filters a variable with a specified filter:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/ref.filter.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィルター関数&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; filter_var（）を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;mdash;指定したフィルターで変数をフィルターします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e9cdfa5e79f8bf58acaa230e594bb0f90ed146e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;strip_tags()&lt;/code&gt; to filter out unwanted HTML</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;strip_tags()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィルタに不要なHTMLアウト&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9e0a6e9f0cd23ea70ece92d13bc41632e1eddc80" translate="yes" xml:space="preserve">
          <source>Use Modern Versions of MySQL and PHP.</source>
          <target state="translated">MySQLとPHPの最新バージョンを使用します。</target>
        </trans-unit>
        <trans-unit id="158bf109055a4391853e862d88370c6aad637ac3" translate="yes" xml:space="preserve">
          <source>Use secure charsets:</source>
          <target state="translated">安全なカーセットを使用してください。</target>
        </trans-unit>
        <trans-unit id="190173fa9a0a8945467da85cad2c5cbd859c8c4d" translate="yes" xml:space="preserve">
          <source>Use single quotes (' ') around your variables inside your query.</source>
          <target state="translated">クエリ内の変数の周りにはシングルクォート (' ')を使用します。</target>
        </trans-unit>
        <trans-unit id="c1d5f68a71902364f592c8951c7b28037bad3656" translate="yes" xml:space="preserve">
          <source>Use spatialized function:</source>
          <target state="translated">空間化された関数を使用します。</target>
        </trans-unit>
        <trans-unit id="9fc1cb8178c33c027bef9fc36ce32b59e89755fe" translate="yes" xml:space="preserve">
          <source>Using prepared statements, or/and filtering with mysql_real_escape_string is definitely a must.
PHP also has filter_input built in which is a good place to start.</source>
          <target state="translated">準備された文を使用したり、mysql_real_escape_stringを使用してフィルタリングすることは絶対に必要です。PHPにはfilter_inputも組み込まれています。</target>
        </trans-unit>
        <trans-unit id="8fdec9ef6cefb7103653b6d041d1890a5352e0ed" translate="yes" xml:space="preserve">
          <source>What you are describing here is two separate issues:</source>
          <target state="translated">あなたがここで述べていることは、2つの別々の問題です。</target>
        </trans-unit>
        <trans-unit id="5f5018a80b300558bb5cedb9c67aeebd9041e242" translate="yes" xml:space="preserve">
          <source>What you should do, to avoid problems, is quite simple: whenever you embed a string within foreign code, you must escape it, according to the rules of that language. For example, if you embed a string in some SQL targeting MySQL, you must escape the string with MySQL's function for this purpose (&lt;code&gt;mysqli_real_escape_string&lt;/code&gt;). (Or, in case of databases, using prepared statements are a better approach, when possible.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;問題を回避するためにすべきことは非常に簡単です。外部コード内に文字列を埋め込むときはいつでも、その言語の規則に従って文字列をエスケープする必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、MySQLをターゲットとするSQLに文字列を埋め込む場合、この目的のためにMySQLの関数（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;mysqli_real_escape_string&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列をエスケープする必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（または、データベースの場合、可能であれば、準備済みステートメントを使用する方がより良いアプローチです。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a350516541472d3775090a423f6261315a4c4bfd" translate="yes" xml:space="preserve">
          <source>When you call &lt;code&gt;echo&lt;/code&gt; or &lt;code&gt;print&lt;/code&gt; to display user-supplied values, use &lt;a href=&quot;http://php.net/manual/function.htmlspecialchars.php&quot;&gt;&lt;code&gt;htmlspecialchars&lt;/code&gt;&lt;/a&gt; unless the data was properly sanitized safe and is allowed to display HTML.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;echo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;print&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ユーザー指定の値を表示&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するときは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、データが適切に&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/function.htmlspecialchars.php&quot;&gt; &lt;code&gt;htmlspecialchars&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れ、HTMLの表示が許可されていない限り、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;htmlspecialcharsを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc255d7ae663a0144641261bf30f86bee325bb59" translate="yes" xml:space="preserve">
          <source>Write Your own validation function.</source>
          <target state="translated">独自の検証関数を書く</target>
        </trans-unit>
        <trans-unit id="63ccb8a2a4f0c1752cfec6059d40d0fef41dbbca" translate="yes" xml:space="preserve">
          <source>You always sanitize output.</source>
          <target state="translated">いつも出力をサニタイズしていますね。</target>
        </trans-unit>
        <trans-unit id="fc8072db5e3d12f9b4c07b3808fd4d4eac198f6f" translate="yes" xml:space="preserve">
          <source>You can read more about it here - &lt;a href=&quot;https://stackoverflow.com/questions/2964140/what-is-a-framework-what-does-it-do-why-do-we-need-a-framework&quot;&gt;What is a software framework?&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細について&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2964140/what-is-a-framework-what-does-it-do-why-do-we-need-a-framework&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;こちらをご覧ください- &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ソフトウェアフレームワークとは何ですか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="065a44c1fd533eb8f0aeec539cc40f5d54158958" translate="yes" xml:space="preserve">
          <source>You need to filter input on a whitelist -- ensure that the data matches some specification of what you expect.  Then you need to escape it before you use it, depending on the context in which you are using it.</source>
          <target state="translated">入力をホワイトリストでフィルタリングする必要があります。そして、それを使用するコンテキストに応じて、それを使用する前にそれをエスケープする必要があります。</target>
        </trans-unit>
        <trans-unit id="76c10eb695163d405afe10a26f80e6a20b18adb9" translate="yes" xml:space="preserve">
          <source>You never sanitize input.</source>
          <target state="translated">入力のサニタイズは絶対にしない</target>
        </trans-unit>
        <trans-unit id="05ad6cccc4873f2f7bdb9c7e3d0ccc3bf44d4353" translate="yes" xml:space="preserve">
          <source>more predefined filters</source>
          <target state="translated">より多くの定義済みフィルタ</target>
        </trans-unit>
        <trans-unit id="d171be0ec601f7ae8915d89e367ad0f1d8d4fd21" translate="yes" xml:space="preserve">
          <source>pg_escape_string() escapes a string for querying the database. It returns an escaped string in the PostgreSQL format without quotes.</source>
          <target state="translated">pg_escape_string()は、データベースに問い合わせるために文字列をエスケープします。これは引用符を使用せずにPostgreSQL形式でエスケープされた文字列を返します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
