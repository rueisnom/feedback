<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/6827752">
    <body>
      <group id="6827752">
        <trans-unit id="c52bb2477a9cac0236f8c69a02e58e30e1dca449" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;context:component-scan&amp;gt;&lt;/code&gt; only scans &lt;code&gt;@Component&lt;/code&gt; and does not look for &lt;code&gt;@Controller&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt; and &lt;code&gt;@Repository&lt;/code&gt; in general. They are scanned because they themselves are annotated with &lt;code&gt;@Component&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;context:component-scan&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; сканирует только &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и вообще не ищет &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Они сканируются, потому что сами &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0a46bb7fbef933e5b2ac6ddf73b73c53e57521c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Autowired&lt;/code&gt; - Let Spring auto-wire other beans into your classes using @Autowired annotation.</source>
          <target state="translated">&lt;code&gt;@Autowired&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - пусть Spring автоматически &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;подключает&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; другие bean-компоненты к вашим классам, используя аннотацию @Autowired.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4bc7bd8bd6588b120c74696f648e62dc842860f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Component&lt;/code&gt; - Annotate your other components (for example REST resource classes) with a component stereotype.</source>
          <target state="translated">&lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - Аннотируйте ваши другие компоненты (например, классы ресурсов REST) ​​со стереотипом компонента.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f60b2f1e94f9c7d209679c9203afa153d9aa612a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Component&lt;/code&gt; - Annotate your other components (for example REST resource classes) with component stereotype.</source>
          <target state="translated">&lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - Аннотируйте ваши другие компоненты (например, классы ресурсов REST) ​​со стереотипом компонента.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d27eada60b5a322fd96c7024833dd0f559a9929d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Component&lt;/code&gt; = Actual Components ( Beans )</source>
          <target state="translated">&lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; = Фактические компоненты ( &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Бины&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c962e54fcc2f756b514e4c953c8635938eddef70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Component&lt;/code&gt; is a generic stereotype for any Spring-managed component. &lt;code&gt;@Repository&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt;, and &lt;code&gt;@Controller&lt;/code&gt; are specializations of &lt;code&gt;@Component&lt;/code&gt; for more specific use cases, for example, in the persistence, service, and presentation layers, respectively.</source>
          <target state="translated">&lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это общий стереотип для любого компонента, управляемого Spring. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; являются специализациями &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для более конкретных случаев использования, например, на уровнях постоянства, обслуживания и представления соответственно.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5a86102aa2acb8d184a67117632ec2f5f96e461e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Component&lt;/code&gt; is the top level generic annotation which makes the annotated bean to be scanned and available in the DI container</source>
          <target state="translated">&lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это общая аннотация верхнего уровня, которая делает аннотированный бин сканируемым и доступным в контейнере DI.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="53d51bed880db024f2154f22c00ca38294357d40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Component&lt;/code&gt;: It is a basic auto component scan annotation, it indicates annotated class is an auto scan component.</source>
          <target state="translated">&lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : это базовая аннотация автоматического сканирования компонентов, она указывает, что аннотированный класс является компонентом автоматического сканирования.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a85c783976ded2ec7bf340636fcbf94c846af9e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Controller:&lt;/code&gt; where your &lt;strong&gt;request&lt;/strong&gt;&lt;strong&gt;mapping from presentation page&lt;/strong&gt; done i.e. Presentation layer won't go to any other file it goes directly to &lt;code&gt;@Controller&lt;/code&gt; class and checks for requested path in &lt;code&gt;@RequestMapping&lt;/code&gt; annotation which written before method calls if necessary.</source>
          <target state="translated">&lt;code&gt;@Controller:&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; там, где &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;выполняется &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;сопоставление&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вашего &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;запроса &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;со страницы презентации,&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; то есть слой Presentation не переходит в какой-либо другой файл, он напрямую переходит в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;класс &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и проверяет запрошенный путь в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;аннотации &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@RequestMapping&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; которая записывается перед &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вызовом&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; метода, если это необходимо.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="42bdae02eaf700513be4523a71747e53f7a3713e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Controller&lt;/code&gt; -&amp;gt; Classes annotated with this, are intended to receive a request from the client side. The first request comes to the Dispatcher Servlet, from where it passes the request to the particular controller using the value of &lt;code&gt;@RequestMapping&lt;/code&gt; annotation.</source>
          <target state="translated">&lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&amp;gt; Классы, аннотированные этим, предназначены для получения запроса со стороны клиента. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Первый запрос поступает в сервлет Dispatcher, откуда он передает запрос определенному контроллеру, используя значение &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;аннотации &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@RequestMapping&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1e287e07020b7f5854ebd49f7b8fe81dbef2fb61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Controller&lt;/code&gt; = @Component ( Internal Annotation ) + Presentation layer Features</source>
          <target state="translated">&lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; = @Component (Внутренняя аннотация) + Особенности слоя презентации&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="51e8f89f260fc43722b23090ae1ac2abb49a46dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Controller&lt;/code&gt; beans are used by spring-mvc</source>
          <target state="translated">&lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Бобы &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Controller&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; используются &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Spring&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -MVC&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ebc68bedd3b3269aebc658ea919ace4c2ba2c5e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Controller&lt;/code&gt; is used to mark classes as Spring MVC Controller. This
annotation is just a specialized version of &lt;code&gt;@Component&lt;/code&gt; and it
allows the controller classes to be auto-detected based on classpath
scanning.</source>
          <target state="translated">&lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; используется для маркировки классов как Spring MVC Controller. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Эта аннотация является просто специализированной версией &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и позволяет автоматически определять классы контроллера на основе сканирования пути к классам.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="60acfe2763e013acff10de2e90dc737721af301d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Controller&lt;/code&gt; you can return a view in Spring web MVC.</source>
          <target state="translated">&lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вы можете вернуть представление в Spring Web MVC.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1867322fce2cf8c6945fe5c011aae47dc3614e97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Controller&lt;/code&gt;: Annotated class indicates that it is a controller component, and mainly used at the presentation layer.</source>
          <target state="translated">&lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : аннотированный класс указывает, что он является компонентом контроллера и в основном используется на уровне представления.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="755f30ff16842ff20dc3434aef8ec3f81ac01294" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Repository&lt;/code&gt; - Annotate all your DAO classes with @Repository. All your database access logic should be in DAO classes.</source>
          <target state="translated">&lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - Аннотируйте все ваши классы DAO с помощью @Repository. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вся логика доступа к вашей базе данных должна быть в классах DAO.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6435804414b2b59a17da073be0c6c40aee98bcb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Repository&lt;/code&gt; -&amp;gt; Classes annotated with this, are intended to connect with database. It can also be considered as DAO(Data Access Object) layer. This layer should be restricted to CRUD (create, retrieve, update, delete) operations only.
If any manipulation is required, data should be sent be send back to @Service layer.</source>
          <target state="translated">&lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&amp;gt; Классы, аннотированные этим, предназначены для соединения с базой данных. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Его также можно рассматривать как уровень DAO (объекта доступа к данным). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Этот уровень должен быть ограничен только операциями CRUD (создание, получение, обновление, удаление). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если требуются какие-либо манипуляции, данные должны быть отправлены обратно на уровень @Service.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f0db2ae59ef409d76fc1ebc571b3ccadeeeb808" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Repository&lt;/code&gt; = @Component ( Internal Annotation ) + Data Layer Features ( use for handling the Domain Beans )</source>
          <target state="translated">&lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; = @Component (внутренняя аннотация) + функции уровня данных (используется для обработки доменных компонентов)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75f13022996e28a8ab5fca548f247847bf7f3ca1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Repository&lt;/code&gt; annotation will add some functionality to your bean (some automatic exception translation to your bean persistence layer).</source>
          <target state="translated">&lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Аннотация &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Repository&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; добавит некоторую функциональность вашему бину (некоторая автоматическая трансляция исключений для вашего уровня персистентности бина).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="efe183c2a1873030970b25581ebc3552dca4d171" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Repository&lt;/code&gt; beans are eligible for persistence exception translation</source>
          <target state="translated">&lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; имеют право на постоянное преобразование исключений&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f44b3951a7fab8002b541c86593b0e72bbe5364" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Repository&lt;/code&gt; is specialized annotation and it brings the feature of converting all the unchecked exceptions from the DAO classes</source>
          <target state="translated">&lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это специализированная аннотация, в которой реализована возможность преобразования всех непроверенных исключений из классов DAO.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3354d3ec0c176e3f31600d85600a2011385ca78b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Repository&lt;/code&gt;: This is Persistence layer(Data Access Layer) of application which used to get data from the database. i.e. &lt;strong&gt;all the Database related operations are done by the repository.&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : это постоянный уровень (Data Access Layer) приложения, который используется для получения данных из базы данных. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;то есть &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;все операции с базой данных выполняются хранилищем.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9acd254fd2bbf9f9bc57bc5af90b23eddd3bc958" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Repository&lt;/code&gt;: You need to use this annotation within the persistence layer, this acts like database repository.</source>
          <target state="translated">&lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : вам нужно использовать эту аннотацию в слое постоянства, это действует как хранилище базы данных.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90be53f5cbdd981a8c2355b766d9fff306b6775a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@RestController&lt;/code&gt; also converts the response to &lt;code&gt;JSON/XML automatically&lt;/code&gt; as &lt;code&gt;@ResponseBody&lt;/code&gt; makes the returned objects to something that could be in the body, &lt;code&gt;e.g. JSON or XML&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@RestController&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; также &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;автоматически&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; преобразует ответ в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON/XML automatically&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; поскольку &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@ResponseBody&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; превращает возвращаемые объекты во что-то, что может находиться в теле, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;e.g. JSON or XML&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd9ce01b50aaf96a042df6119c17a292c30ebb61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Service&lt;/code&gt; - Annotate all your service classes with @Service. This layer knows the unit of work. All your business logic will be in Service classes. Generally methods of service layer are covered under transaction. You can make multiple DAO calls from service method, if one transaction fails all transactions should rollback.</source>
          <target state="translated">&lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;аннотируйте&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; все свои классы обслуживания с помощью @Service. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Этот слой знает единицу работы. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вся ваша бизнес-логика будет в классах обслуживания. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как правило, методы уровня обслуживания охватываются транзакцией. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете сделать несколько вызовов DAO из метода сервиса, если одна транзакция не удалась, все транзакции должны быть откатаны.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65f7a4157131313ba9d9c7de0c0c2ec078d920ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Service&lt;/code&gt; -&amp;gt; Classes annotated with this, are intended to manipulate data, that we receive from the client or fetch from the database. All the manipulation with data should be done in this layer.</source>
          <target state="translated">&lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&amp;gt; Классы, аннотированные этим, предназначены для манипулирования данными, которые мы получаем от клиента или выбираем из базы данных. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Все манипуляции с данными должны быть выполнены в этом слое.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="57f5d1af5bcd96d8cf4535d91fa857ae7afca44d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Service&lt;/code&gt; = @Component ( Internal Annotation ) + Service layer Features</source>
          <target state="translated">&lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; = @Component (Внутренняя аннотация) + Сервисный слой Особенности&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed4dc909a6dc9f48489b83955476a753cfb55340" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Service&lt;/code&gt; beans hold the business logic and call methods in the repository layer.</source>
          <target state="translated">&lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; содержат бизнес-логику и вызывают методы на уровне хранилища.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="17a69c480a6a788c48c3fc84d2577526d41ced15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Service&lt;/code&gt; is specialized annotation. it do not bring any new feature as of now but it clarifies the intent of the bean</source>
          <target state="translated">&lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это специализированная аннотация. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;это не приносит никакой новой функции на данный момент, но это проясняет намерение бина&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a3e80f101ac8ba58423611e9a359db720a6cddb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Service&lt;/code&gt;: All business logic is here i.e. Data related calculations and all.This annotation of business layer in which our user not directly call persistence method so it will call this method using this annotation. &lt;strong&gt;It will request @Repository as per user request&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : здесь присутствует вся бизнес-логика, то есть вычисления, связанные с данными, и все. Это аннотация бизнес-уровня, в которой наш пользователь напрямую не вызывает метод постоянства, поэтому он будет вызывать этот метод с помощью этой аннотации. &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он будет запрашивать @Repository согласно запросу пользователя&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a1c1d2514399a89419fa8c725118147960f9a19d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Service&lt;/code&gt;: It indicates annotated class is a Service component in the business layer.</source>
          <target state="translated">&lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : указывает, что аннотированный класс является компонентом Service на бизнес-уровне.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f869cdae24718975bd86c139b1a4cf4ab5f8872a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Above mentioned is one very common scenario, there are many more use cases of why to use three annotations.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Выше упоминался один очень распространенный сценарий, есть еще много вариантов использования трех аннотаций.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e271c23aaca1c5d21764465c2548e1b0ba0791c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Repository&lt;/em&gt; and &lt;em&gt;Service&lt;/em&gt; are children of &lt;em&gt;Component&lt;/em&gt; annotation. So, all of them are &lt;em&gt;Component&lt;/em&gt;. &lt;em&gt;Repository&lt;/em&gt; and &lt;em&gt;Service&lt;/em&gt; just expand it. 
How exactly?
&lt;em&gt;Service&lt;/em&gt; has only ideological difference: we use it for services. &lt;em&gt;Repository&lt;/em&gt; has particular exception handler.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Репозиторий&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Сервис&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; являются дочерними &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;компонентами&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; аннотации &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Компонента&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Итак, все они являются &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Компонентом&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Репозиторий&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Сервис&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; просто расширяют его. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как именно? &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Сервис&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; имеет только идеологическую разницу: мы используем его для сервисов. &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Репозиторий&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; имеет особый обработчик исключений.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ae222d32c4733e99013c09b00a14f25cb9fd89f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;@Controller&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;@Controller&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fe5c6f1fd0c4469ec22b1b64df1d3f9ce7148e34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;@Controller&lt;/code&gt;&lt;/strong&gt; vs &lt;strong&gt;&lt;code&gt;RestController&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; против&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;RestController&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d02dda508b6792bef5b289438aab0dae9f34a654" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;@RestController&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;@RestController&lt;/code&gt;&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="24d9897af3ded3ed27b764d17d671273337c87e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;What else?&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Что еще?&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="02b386ae3ef0df690e5ff6fbaf501f2daa6c5f59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;What&amp;rsquo;s special about @Component&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Что особенного в @Component&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3db920e461fbae37694bbd0baa0837165ffcd644" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;What&amp;rsquo;s special about @Controller?&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Что особенного в @Controller?&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7c947974b0ed3abe583c5d614ea1dae412c1bfd7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;What&amp;rsquo;s special about @Repository?&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Что особенного в @Repository?&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="44531a49d4e8b2e827b3cb7707c16eb31eb8085f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;What&amp;rsquo;s special about @Service?&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Что особенного в @Service?&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="01ccc260c2cb635c23e720d73b05ea5f97b7093a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Component&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@Component&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d71c877c3a78adec6503e4663386504304e2102d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Component&lt;/strong&gt; acts as @Bean annotation in configuration class , register bean in spring context. Also it is parent for @Service, @Repository and @Controller annotation.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Component&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; действует как аннотация @Bean в классе конфигурации, регистрирует bean в контексте весны. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Также это родитель для аннотаций @Service, @Repository и @Controller.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68a54727ad6cec624faf6b13c4382e35a8734254" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Component&lt;/strong&gt;: you annotate a class &lt;code&gt;@Component&lt;/code&gt;, it tells hibernate that it is a Bean.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Component&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : вы аннотируете класс &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , он сообщает hibernate, что это Бин.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="08d89f88959bdae44be6a1bb588f2c4224fb6221" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Controller&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@Controller&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7aa7e80f0249d623ecda3e6e3746451017dfda60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Controller&lt;/strong&gt; - acts as controller in MVC pattern. The dispatcher will scan such annotated classes for mapped methods, detecting @RequestMapping annotations.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Controller&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - действует как контроллер в шаблоне MVC. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Диспетчер будет сканировать такие аннотированные классы для сопоставленных методов, обнаруживая аннотации @RequestMapping.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30944fd2fb61d9ebcd45f8a10a490acf26a78223" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Repository&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@Repository&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d59ee6059e619bf4112380bb8ba8a318d31487a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Repository&lt;/strong&gt; - extends @Component annotation and translate all database exceptions into 
&lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/dao/DataAccessException.html&quot;&gt;DataAccessException&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Repository&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - расширяет аннотацию @Component и переводит все исключения базы данных в &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/dao/DataAccessException.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DataAccessException&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4c82a84c7e004e5dbf46fdab8620acd39f117766" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Repository&lt;/strong&gt;: you annotate a class &lt;code&gt;@Repository&lt;/code&gt;, it tells hibernate it is a DAO class and treat it as DAO class. Means it makes the unchecked exceptions (thrown from DAO methods) eligible for translation into Spring &lt;code&gt;DataAccessException&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Repository&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : вы аннотируете класс &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , он сообщает hibernate, что это класс DAO, и обрабатывает его как класс DAO. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это означает, что непроверенные исключения (генерируемые методами DAO) могут быть преобразованы в Spring &lt;/font&gt;&lt;/font&gt; &lt;code&gt;DataAccessException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="82c18cae0ef756fd2e697fe0e8a89527b3e4afbc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Repository&lt;/strong&gt;&lt;strong&gt;@Service&lt;/strong&gt; and &lt;strong&gt;@Controller&lt;/strong&gt; are serves as specialization of @Component for more specific use on that basis you can replace @Service to @Component but in this case you loose the specialization.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Repository &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Service&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Controller&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; служат специализацией @Component для более конкретного использования. На этом основании вы можете заменить @Service на @Component, но в этом случае вы потеряете специализацию.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b0d3443c7a52d182de6b0ed42e9280aef8cad71" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Service, @Controller, @Repository = {@Component + some more special functionality}&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Service, @Controller, @Repository = {@Component + еще несколько специальных функций}&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6521051becbb1d47181a14e3843c1fa624be1400" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Service&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@Service&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="215e20d4b229d51d2aeab8ffaded5b0e314136d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Service&lt;/strong&gt;, extends @Component annotation and has only naming difference.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Service&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , расширяет аннотацию @Component и имеет только разницу в именах.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b190c46f1884d04aa30c69d70b5df62cc53a9a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Service&lt;/strong&gt;: This tells hibernate it is a Service class where you will have &lt;code&gt;@Transactional&lt;/code&gt; etc Service layer annotations so hibernate treats it as a Service component.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Service&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : Это говорит hibernate, что это класс Service, где у вас будут &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;аннотации на уровне &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Transactional&lt;/code&gt; и&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; т. Д., Поэтому hibernate рассматривает его как компонент Service.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d1c0a0bda111c87bc1cbdf4a7e655e8ea734ff4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Difference between @Component, @Repository, @Controller &amp;amp; @Service annotations&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Разница между аннотациями @Component, @Repository, @Controller и @Service&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="66ac77b04336b73384ca2da9c721255689dc172c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Explanation of stereotypes :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Объяснение стереотипов:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cdb7da5140a2c9fbc61635d14ca6e792686c863c" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;&lt;em&gt;Note: If a class is already registered as a bean through any alternate method, like through &lt;code&gt;@Bean&lt;/code&gt; or through &lt;code&gt;@Component&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt; etc... annotations, then &lt;code&gt;@RequestMapping&lt;/code&gt; can be picked if the class is also annotated with &lt;code&gt;@RequestMapping&lt;/code&gt; annotation. But that's a different scenario.&lt;/em&gt;&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Примечание. Если класс уже зарегистрирован как компонент с помощью любого альтернативного метода, например, с помощью &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Bean&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; и&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; т. Д. ..., то &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@RequestMapping&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; можно выбрать, если класс также аннотирован &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;аннотацией &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@RequestMapping&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но это другой сценарий.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="0565cbb19c0f1f95a14173024327464b4109d17e" translate="yes" xml:space="preserve">
          <source>@Component &amp;ndash; generic and can be used across application.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Component - универсальный и может использоваться во всех приложениях.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c19cd435b45c7ce39cdcdaceb349ed963c2409e3" translate="yes" xml:space="preserve">
          <source>@Component in Spring</source>
          <target state="translated">@Компонент весной</target>
        </trans-unit>
        <trans-unit id="2ae1ae6a578e4e2d086f153b4357b17a600f401e" translate="yes" xml:space="preserve">
          <source>@Component is a generic stereotype for any Spring managed component.</source>
          <target state="translated">@Компонент является общим стереотипом для любого весеннего управляемого компонента.</target>
        </trans-unit>
        <trans-unit id="075ba1e63b8499e295328ae654616b3ac457ed4c" translate="yes" xml:space="preserve">
          <source>@Component is a generic stereotype for the components managed by Spring @Repository, @Service, and @Controller are @Component specializations for more specific uses:</source>
          <target state="translated">@Component является общим стереотипом для компонентов,управляемых Spring @Repository,@Service,и @Controller являются @Component специализации для более конкретного использования:</target>
        </trans-unit>
        <trans-unit id="6988be0d5c6bb12c0268a4bc1d2d64bbd996e1d7" translate="yes" xml:space="preserve">
          <source>@Component is equivalent to</source>
          <target state="translated">@Компонент эквивалентен</target>
        </trans-unit>
        <trans-unit id="e189419b60784f6f072701a0112019edf4475523" translate="yes" xml:space="preserve">
          <source>@Component, @ Repository, @ Service, @Controller:</source>
          <target state="translated">@Компонент,@Репозитарий,@Обслуживание,@Контроллер:</target>
        </trans-unit>
        <trans-unit id="8926cf25bf717ea2455a649c055241dbeb16a7c4" translate="yes" xml:space="preserve">
          <source>@Controller &amp;ndash; annotate
  classes at presentation layers level, mainly used in Spring MVC.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Controller - аннотировать классы на уровне презентаций, в основном используемые в Spring MVC.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5a3bb904e5fd4d9f31ad357d460088636f9c191b" translate="yes" xml:space="preserve">
          <source>@Controller for MVC controllers</source>
          <target state="translated">@Контроллер для контроллеров MVC</target>
        </trans-unit>
        <trans-unit id="4415d372a91efad7a310c7fe84b6c23fa2a9f96c" translate="yes" xml:space="preserve">
          <source>@Controller is specialized annotation which makes the bean MVC aware and allows the use of further annotation like &lt;code&gt;@RequestMapping&lt;/code&gt; and all such</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Controller - это специализированная аннотация, которая информирует MVC о компоненте и позволяет использовать дополнительную аннотацию, такую ​​как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@RequestMapping&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и все подобные&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="217fe57ceff049bd7161c67a27d8dcf3c690ef51" translate="yes" xml:space="preserve">
          <source>@Controller, @Service and @Repository are Specializations of @Component for specific use cases.</source>
          <target state="translated">@Контроллер,@Обслуживание и @Репозитарий являются специализациями @Компонента для конкретных случаев использования.</target>
        </trans-unit>
        <trans-unit id="1b6ecfeaf188513038146749de2ca33e4f1505ea" translate="yes" xml:space="preserve">
          <source>@Repository &amp;ndash; annotate classes at persistence layer, which will act as
  database repository.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Repository - аннотировать классы на уровне персистентности, которые будут действовать как хранилище базы данных.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="34e70a53a8400f32673bc2dbaf054dc1b5f39ea5" translate="yes" xml:space="preserve">
          <source>@Repository for persistence</source>
          <target state="translated">@Репозитарий для постоянства</target>
        </trans-unit>
        <trans-unit id="9f87cf278958424bb2ad6c92d0c7bbd86c3ecb94" translate="yes" xml:space="preserve">
          <source>@Service
  &amp;ndash; annotate classes at service layer level.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Service - аннотировать классы на уровне сервисного уровня.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f44b4afb62ac2bd44fd3a929667646726384ba94" translate="yes" xml:space="preserve">
          <source>@Service for services and transactions</source>
          <target state="translated">@Услуга для услуг и сделок</target>
        </trans-unit>
        <trans-unit id="7ba2a28134b3ca42c2c6b345eb1c4e794befe840" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;@Service&lt;/code&gt; to quote spring documentation,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; с цитатой яровой документации,&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91d02755008708aed94833e44e0aeffc9010db7e" translate="yes" xml:space="preserve">
          <source>A REPOSITORY represents all objects of a certain type as a conceptual
  set (usually emulated). It acts like a collection, except with more
  elaborate querying capability. Objects of the appropriate type are
  added and removed, and the machinery behind the REPOSITORY inserts
  them or deletes them from the database. This definition gathers a
  cohesive set of responsibilities for providing access to the roots of
  AGGREGATES from early life cycle through the end.</source>
          <target state="translated">РЕПОЗИТОРИЯ представляет все объекты определенного типа в виде концептуального набора (обычно эмулируется).Она действует как коллекция,за исключением более сложных возможностей запроса.Объекты соответствующего типа добавляются и удаляются,а механизм,стоящий за РЕПОЗИТОРИЕЙ,вставляет или удаляет их из БД.Это определение собирает целостный набор обязанностей для обеспечения доступа к корням AGGREGATES с начала жизненного цикла до конца.</target>
        </trans-unit>
        <trans-unit id="f47b388fe44e5f55543ff7ae7b6a0d924ebef100" translate="yes" xml:space="preserve">
          <source>A SERVICE is an operation offered as an interface that stands alone in
  the model, without encapsulating state, as ENTITIES and VALUE OBJECTS
  do. SERVICES are a common pattern in technical frameworks, but they
  can also apply in the domain layer. The name service emphasizes the
  relationship with other objects. Unlike ENTITIES and VALUE OBJECTS, it
  is defined purely in terms of what it can do for a client. A SERVICE
  tends to be named for an activity, rather than an entity&amp;mdash;a verb rather
  than a noun. A SERVICE can still have an abstract, intentional
  definition; it just has a different flavor than the definition of an
  object. A SERVICE should still have a defined responsibility, and that
  responsibility and the interface fulfilling it should be defined as
  part of the domain model. Operation names should come from the
  UBIQUITOUS LANGUAGE or be introduced into it. Parameters and results
  should be domain objects. SERVICES should be used judiciously and not
  allowed to strip the ENTITIES and VALUE OBJECTS of all their behavior.
  But when an operation is actually an important domain concept, a
  SERVICE forms a natural part of a MODEL-DRIVEN DESIGN. Declared in the
  model as a SERVICE, rather than as a phony object that doesn't
  actually represent anything, the standalone operation will not mislead
  anyone.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;СЕРВИС - это операция, предлагаемая в качестве интерфейса, который стоит отдельно в модели, без инкапсуляции состояния, как это делают СУЩНОСТИ и ЦЕННЫЕ ОБЪЕКТЫ. УСЛУГИ - это общая схема в технических рамках, но они также могут применяться на уровне домена. Служба имен подчеркивает отношения с другими объектами. В отличие от СУЩЕСТВ и ЦЕННЫХ ОБЪЕКТОВ, он определяется исключительно с точки зрения того, что он может сделать для клиента. СЕРВИС имеет тенденцию быть названным для деятельности, а не сущности - глагол, а не существительное. СЕРВИС все еще может иметь абстрактное, преднамеренное определение; это просто имеет другой вкус, чем определение объекта. СЕРВИС все еще должен иметь определенную ответственность, и эта ответственность и интерфейс, выполняющий его, должны быть определены как часть модели предметной области.Названия операций должны исходить из UBIQUITOUS LANGUAGE или вводиться в него. Параметры и результаты должны быть объектами домена. УСЛУГИ должны использоваться разумно и не позволять лишать СУБЪЕКТЫ и ЦЕННЫЕ ОБЪЕКТЫ всего их поведения. Но когда операция на самом деле является важной концепцией предметной области, СЕРВИС является естественной частью ДИЗАЙНА МОДЕЛИ. Объявленная в модели как СЕРВИС, а не как фальшивый объект, который на самом деле ничего не представляет, автономная операция никого не введет в заблуждение.СЕРВИС является естественной частью ДИЗАЙНА МОДЕЛИ. Объявленная в модели как СЕРВИС, а не как фальшивый объект, который на самом деле ничего не представляет, автономная операция никого не введет в заблуждение.СЕРВИС является естественной частью ДИЗАЙНА МОДЕЛИ. Объявленная в модели как СЕРВИС, а не как фальшивый объект, который на самом деле ничего не представляет, автономная операция никого не введет в заблуждение.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c8430209be1050ef9c81cf8f55d45b83d428418f" translate="yes" xml:space="preserve">
          <source>A class annotated with &quot;@Repository&quot; has a better translation and readable error handling with org.springframework.dao.DataAccessException. Ideal for implementing components that access data (DataAccessObject or DAO).</source>
          <target state="translated">Класс с аннотацией &quot;@Repository&quot; имеет лучшую переводимость и читабельную обработку ошибок с помощью org.springframework.dao.DataAccessException.Идеально подходит для реализации компонентов,имеющих доступ к данным (DataAccessObject или DAO).</target>
        </trans-unit>
        <trans-unit id="6a8649297afe73083d33548e58a5b17638fa4b53" translate="yes" xml:space="preserve">
          <source>All are the same way when you inject them, &lt;strong&gt;@Repository&lt;/strong&gt; it's an interface which apply the implementation for the Repository Pattern &lt;a href=&quot;https://stackoverflow.com/questions/5166888/repository-design-pattern&quot;&gt;Repository design pattern&lt;/a&gt;, generally it's used when you are dealing with some data store or database, and you will find that, it contains multiple ready implementation for you to handle database operations; it can be  &lt;em&gt;CrudRepository&lt;/em&gt;, &lt;em&gt;JpaRepository&lt;/em&gt; etc.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Все они одинаковы, когда вы &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;внедряете&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; их, &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Repository&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это интерфейс, который применяет реализацию шаблона &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/5166888/repository-design-pattern&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;проектирования&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Repository Pattern &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Repository&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , обычно он используется, когда вы имеете дело с каким-либо хранилищем данных или базой данных, и вы обнаружите, что он содержит несколько готовая реализация для обработки операций с базой данных; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;это может быть &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CrudRepository&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JpaRepository&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и т. д.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d5c7ff40a6cd439fca89118f4d3196bdb0da41c" translate="yes" xml:space="preserve">
          <source>An annotated class with &quot;@Controller&quot; plays a controller role in a Spring Web MVC application</source>
          <target state="translated">Аннотированный класс с &quot;@Controller&quot; играет роль контроллера в приложении Spring Web MVC.</target>
        </trans-unit>
        <trans-unit id="226f9c7ef04f761d7e503608315d9a02c54ba6ab" translate="yes" xml:space="preserve">
          <source>An annotated class with &quot;@Service&quot; plays a role in business logic services, example Facade pattern for DAO Manager (Facade) and transaction handling</source>
          <target state="translated">Аннотированный класс с надписью &quot;@Service&quot; играет роль в услугах бизнес-логики,например,шаблон фасада для менеджера DAO (Facade)и обработка транзакций.</target>
        </trans-unit>
        <trans-unit id="82eb7fb789cdca7c0796a25ea6eb54cf3fa98997" translate="yes" xml:space="preserve">
          <source>Annotate other components with @Component, for example REST Resource classes.</source>
          <target state="translated">Аннотируйте другие компоненты с помощью @Component,например,классы REST Resource.</target>
        </trans-unit>
        <trans-unit id="438148bac733e4506cfcd03045e90b60cf643030" translate="yes" xml:space="preserve">
          <source>Another thing is that you designate the components semantically to different layers.</source>
          <target state="translated">Другое дело,что вы назначаете компоненты семантически разным слоям.</target>
        </trans-unit>
        <trans-unit id="e1c8aad64854b177f2f12eacee87256f59a7539f" translate="yes" xml:space="preserve">
          <source>Apart from the fact that it's used to indicate, that it's holding the business logic, there&amp;rsquo;s nothing else noticeable in this annotation; but who knows, Spring may add some additional exceptional in future.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Помимо того факта, что он используется для обозначения того, что он содержит бизнес-логику, в этой аннотации нет ничего более заметного; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;но кто знает, весна может добавить некоторые дополнительные исключительные в будущем.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="774e1e57c082c4559eab60f3dc8b0a7778c5aacb" translate="yes" xml:space="preserve">
          <source>As many of the answers already state what these annotations are used for, we'll here focus on some minor differences among them.</source>
          <target state="translated">Поскольку во многих ответах уже указано,для чего используются эти аннотации,мы остановимся здесь на некоторых незначительных различиях между ними.</target>
        </trans-unit>
        <trans-unit id="a96409f0b3e24141f785ed6967bd54c0cee54a7a" translate="yes" xml:space="preserve">
          <source>But spring user these different annotations in different for the specific use, for example:</source>
          <target state="translated">Но пружина пользователя эти различные аннотации в различных для конкретного использования,например:</target>
        </trans-unit>
        <trans-unit id="2e7ed5de866f818fd7632c8378ac9d611c644ab0" translate="yes" xml:space="preserve">
          <source>Can &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Component.html&quot;&gt;&lt;code&gt;@Component&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Repository.html&quot;&gt;&lt;code&gt;@Repository&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Service.html&quot;&gt;&lt;code&gt;@Service&lt;/code&gt;&lt;/a&gt; annotations be used interchangeably in Spring or do they provide any particular functionality besides acting as a notation device?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Могут ли &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Component.html&quot;&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Repository.html&quot;&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Service.html&quot;&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; быть взаимозаменяемыми в Spring или они предоставляют какую-то конкретную функциональность помимо того, что выступают в роли устройства для записи?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="05959bd7bd4046316957d11cac98f16f60eec006" translate="yes" xml:space="preserve">
          <source>Controllers just do stuff like dispatching, forwarding, calling service methods etc.</source>
          <target state="translated">Контроллеры просто делают такие вещи,как отправка,переадресация,вызов методов обслуживания и т.д.</target>
        </trans-unit>
        <trans-unit id="5f1b1659d1c790ecfe93af1bc16ee886f5f8f7bd" translate="yes" xml:space="preserve">
          <source>Differences between @Component, @Repository, @Controller and @Service</source>
          <target state="translated">Различия между @компонентом,@репозиторием,@контроллером и @сервисом</target>
        </trans-unit>
        <trans-unit id="108530447972b523e2d373bdb632a25c26021ef2" translate="yes" xml:space="preserve">
          <source>Even if we interchange @Component or @Repository or @service</source>
          <target state="translated">Даже если мы обмениваемся @компонентом или @репозиторием или @сервисом.</target>
        </trans-unit>
        <trans-unit id="fb3e3dc324e182ca9b656d76a3d7ce9de027ff17" translate="yes" xml:space="preserve">
          <source>Finally the &lt;strong&gt;@Component&lt;/strong&gt;, this is the generic form for registered beans in Spring, that's spring is always looking for bean marked with @Component to be registered, then both @Service and @Repository are special cases of @Component, however the common use case for component is when you're making something purely technical not for covering direct business case! like formatting dates or handing special request serialization mechanism and so on.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Наконец, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Component&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , это обобщенная форма для зарегистрированных bean-компонентов в Spring, то есть весна всегда ищет bean-компонент, отмеченный @Component, для регистрации, тогда и @Service, и @Repository являются частными случаями @Component, однако это частый случай использования. Компонент - это когда вы делаете что-то чисто техническое, а не для прямого бизнес-кейса! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;как форматирование дат или передача специального механизма сериализации запросов и так далее.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9f0261eacd2baa531daae71e46b0f60617be49df" translate="yes" xml:space="preserve">
          <source>First point worth highlighting again is that &lt;strong&gt;with respect to scan-auto-detection and dependency injection for BeanDefinition&lt;/strong&gt; all these annotations (viz., @Component, @Service,
  @Repository, @Controller) are the same. &lt;strong&gt;We can use one in place
  of another and can still get our way around.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Еще один момент, на который стоит обратить внимание: &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;автоматическое обнаружение сканирования и внедрение зависимостей для BeanDefinition&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; все эти аннотации (а именно, @Component, @Service, @Repository, @Controller) одинаковы. &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Мы можем использовать одно вместо другого и все еще обойтись.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dae40ac0e6509431287b6fc01d6ddd4f16209179" translate="yes" xml:space="preserve">
          <source>First the &lt;strong&gt;Similarity&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Первое &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;сходство&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60d63f919d7b29919cbe50d8a11dcefc13043550" translate="yes" xml:space="preserve">
          <source>For example recently I made:</source>
          <target state="translated">Например,недавно я сделал:</target>
        </trans-unit>
        <trans-unit id="7f633a4de5a6fad5c4d8ba29d7323985965ecde0" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans-stereotype-annotations&quot;&gt;Spring Documentation&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Из &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans-stereotype-annotations&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;весенней документации&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd6033d5effd839344b23f051f6dad9c015a7e91" translate="yes" xml:space="preserve">
          <source>From the Spring source code:</source>
          <target state="translated">Из исходного кода &quot;Весны&quot;:</target>
        </trans-unit>
        <trans-unit id="c399a887e5a285d63699e02b5d8b941d0e57855a" translate="yes" xml:space="preserve">
          <source>Good enough answers are here to explain the whats-the-difference-between-component-repository-service-annotations. I would like to share the difference between &lt;code&gt;@Controller &amp;amp; @RestController&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Здесь достаточно хороших ответов, чтобы объяснить аннотации &quot;что такое разница между компонентами репозитория, сервисом&quot;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я хотел бы поделиться разницей между &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller &amp;amp; @RestController&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc7f9ea7304fd7a39962300b05ca13d8a3ae0cd5" translate="yes" xml:space="preserve">
          <source>Help developers define a better category for the competent. This categorizing may become helpful in some cases. (For example when you are using &lt;code&gt;aspect-oriented&lt;/code&gt;, these can be a good candidate for &lt;code&gt;pointcuts&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Помогите разработчикам определить лучшую категорию для грамотных. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Эта классификация может стать полезной в некоторых случаях. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Например, когда вы используете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;aspect-oriented&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , они могут быть хорошим кандидатом для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;pointcuts&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d635c1de85cee5ea3af4b392a4b9368f7868551" translate="yes" xml:space="preserve">
          <source>Here @Component is a base annotation for @Service,@Repository and @Controller annotations</source>
          <target state="translated">Здесь @Компонент представляет собой базовую аннотацию для @Обслуживания,@Репозитария и @Контроллера аннотации</target>
        </trans-unit>
        <trans-unit id="7363505f6a586aa6429740258f3dda2647d3fbc5" translate="yes" xml:space="preserve">
          <source>Here are more &lt;a href=&quot;http://howtodoinjava.com/spring/spring-core/how-to-use-spring-component-repository-service-and-controller-annotations/&quot;&gt;details&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот больше &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://howtodoinjava.com/spring/spring-core/how-to-use-spring-component-repository-service-and-controller-annotations/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;подробностей&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed3b4ac7f21763d162d61f6aa39be3864476bcb1" translate="yes" xml:space="preserve">
          <source>If we add @Repository on top of class then it tells that a class consisting persistence logic</source>
          <target state="translated">Если мы добавим @Repository поверх класса,то он скажет,что класс,состоящий из логики персистентности</target>
        </trans-unit>
        <trans-unit id="00838cb34513f47aee10b2f69acf45e84c1125a3" translate="yes" xml:space="preserve">
          <source>If we add @Service annotation then it tells that a role of class consisting business logic</source>
          <target state="translated">Если мы добавим @Service annotation,то это скажет,что роль класса,состоящего из бизнес-логики</target>
        </trans-unit>
        <trans-unit id="7465ecd9bd3b510352e72b483bfc7d63faa77863" translate="yes" xml:space="preserve">
          <source>If we add the @Component then it tells the role of class is a component class it means it is a class consisting some logic,but it
  does not tell whether a class containing a specifically business or
  persistence or controller logic so we don't use directly this
  @Component annotation</source>
          <target state="translated">Если мы добавим @Component,то он скажет,что роль класса-это класс компонентов,это значит,что это класс,состоящий из некоторой логики,но он не скажет,содержит ли класс специфическую логику бизнеса или персистентности или контроллера,поэтому мы не используем непосредственно эту @Component annotation</target>
        </trans-unit>
        <trans-unit id="a288de74244c35de7979dfbbff38f630197ec222" translate="yes" xml:space="preserve">
          <source>If we interchange their place(use &lt;code&gt;@Repository&lt;/code&gt; in place of &lt;code&gt;@Controller&lt;/code&gt;), our application will work fine.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если мы &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; местами (используйте &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Repository&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вместо &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), наше приложение будет работать нормально.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1eb25941af3c497f8a5ce8bd6f65690000953687" translate="yes" xml:space="preserve">
          <source>If you are using spring MVC, the &lt;code&gt;@RequestMapping&lt;/code&gt; can only be added to classes which are annotated by &lt;code&gt;@Controller&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы используете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@RequestMapping&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; MVC, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@RequestMapping&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; можно добавлять только к классам, аннотированным &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ebfaeb082fcf318a425dd207d5a1a54a58f44649" translate="yes" xml:space="preserve">
          <source>If you do not use the proper annotations, you may face commit exceptions overridden by rollback transactions. You will see exceptions during stress load test that is related to roll back JDBC transactions.</source>
          <target state="translated">Если вы не используете правильные аннотации,вы можете столкнуться с исключениями коммитов,перекрываемыми откатными транзакциями.Вы увидите исключения во время стресс-теста,связанного с откатом транзакций JDBC.</target>
        </trans-unit>
        <trans-unit id="99e6cddbe71afbd4fa8a1d1bba72430392222c97" translate="yes" xml:space="preserve">
          <source>If you look at domain driven design by eric evans,</source>
          <target state="translated">Если вы посмотрите на дизайн,управляемый доменом Эрика Эванса,</target>
        </trans-unit>
        <trans-unit id="2d9913d9dc88af8dacca28534e00dbbf0e041820" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;@RestController&lt;/code&gt; you cannot return a view (By using
&lt;code&gt;Viewresolver&lt;/code&gt; in Spring/Spring-Boot)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы используете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@RestController&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вы не сможете вернуть представление (с помощью &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Viewresolver&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в Spring / Spring-Boot)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8b5dacb446cf84e727c664735181a4440878cdea" translate="yes" xml:space="preserve">
          <source>Imagine if there were only one annotation @Controller, then this component will have dispatching, business logic and accessing database all mixed, so dirty code!</source>
          <target state="translated">Представьте себе,если бы была только одна аннотация @Controller,то этот компонент будет иметь диспетчеризацию,бизнес-логику и доступ к базе данных все смешанные,так что грязный код!</target>
        </trans-unit>
        <trans-unit id="9343295b80ac0e2bd6b361283d8e53172f671469" translate="yes" xml:space="preserve">
          <source>In Spring 2.0 and later, the &lt;code&gt;@Repository&lt;/code&gt; annotation is a marker for
  any class that fulfills the role or stereotype (also known as Data
  Access Object or DAO) of a repository. Among the uses of this marker
  is the automatic translation of exceptions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В Spring 2.0 и более поздних &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; аннотация &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Repository&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является маркером для любого класса, который выполняет роль или стереотип (также известный как объект доступа к данным или DAO) хранилища. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Среди применений этого маркера - автоматический перевод исключений.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8b7350be16af05d3f28297bf4fd50c42a92bb6f5" translate="yes" xml:space="preserve">
          <source>In Spring 4, latest version:</source>
          <target state="translated">Весной 4,последняя версия:</target>
        </trans-unit>
        <trans-unit id="d3f07103494a99afd3d9f5749a39ec3f45c77438" translate="yes" xml:space="preserve">
          <source>In Spring &lt;code&gt;@Component&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt;, &lt;code&gt;@Controller&lt;/code&gt;, and &lt;code&gt;@Repository&lt;/code&gt; are Stereotype annotations which are used for:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В Spring &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; являются аннотациями стереотипа, которые используются для:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e3a6348ec28746c35a4737921fc5757d9d481b7f" translate="yes" xml:space="preserve">
          <source>In addition to pointing out, that this is an &lt;em&gt;Annotation based Configuration&lt;/em&gt;, &lt;code&gt;@Repository&lt;/code&gt;&amp;rsquo;s job is to catch platform specific exceptions and re-throw them as one of Spring&amp;rsquo;s unified unchecked exception. For this, we&amp;rsquo;re provided with &lt;code&gt;PersistenceExceptionTranslationPostProcessor&lt;/code&gt;, that we are required to add in our Spring&amp;rsquo;s application context like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Помимо указания на то, что это &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;конфигурация на основе аннотаций&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; состоит в том, чтобы перехватывать специфичные для платформы исключения и повторно &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;выдавать&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; их как одно из унифицированных непроверенных исключений Spring. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для этого нам предоставляется &lt;/font&gt;&lt;/font&gt; &lt;code&gt;PersistenceExceptionTranslationPostProcessor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , который мы должны добавить в контекст приложения нашего Spring следующим образом:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="795eec8bf0eef1012cfd63fdfb85457f9c4bf930" translate="yes" xml:space="preserve">
          <source>In order to simplify this illustration, let us consider technicality by use case, These annotations are used to be injected and as I said literally &quot;&lt;em&gt;Used to be injected&lt;/em&gt;&quot; , that mean, if you know how to use &lt;strong&gt;Dependency Injection &quot;DI&quot;&lt;/strong&gt;  and you should, then you will always look for these annotations, and by annotating the classes with these &lt;strong&gt;Stereo Types&lt;/strong&gt;, you are informing the &lt;em&gt;DI&lt;/em&gt; container to scan them to be ready for Injection on other places, this is the practical target.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чтобы упростить эту иллюстрацию, давайте рассмотрим техническую специфику в зависимости от случая использования. Эти аннотации используются для инъекции, и, как я сказал буквально &amp;laquo; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Используется для инъекции&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;raquo;, это означает, что если вы знаете, как использовать &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Dependency Injection &amp;laquo;DI&amp;raquo;,&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и вы Если вы всегда будете искать эти аннотации, и, аннотируя классы этими &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;стерео-типами&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , вы информируете &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;контейнер &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DI&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; о необходимости сканировать их, чтобы они были готовы к инъекции в других местах, это практическая цель.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="990c52936055f05ac08e35c6a319e562e44f0a62" translate="yes" xml:space="preserve">
          <source>In other words, if I have a Service class and I change the annotation from &lt;code&gt;@Service&lt;/code&gt; to &lt;code&gt;@Component&lt;/code&gt;, will it still behave the same way?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Другими словами, если у меня есть класс Service и я &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; аннотацию с &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Service&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; на &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , будет ли он по-прежнему вести себя так же?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="46a399d538f354135718b8beec0576afb824eb1a" translate="yes" xml:space="preserve">
          <source>In spring framework provides some special type of annotations,called stereotype annotations.
These are following:-</source>
          <target state="translated">Весной в каркасе предусмотрен особый тип аннотаций,называемый аннотациями стереотипов.Это следующие:-</target>
        </trans-unit>
        <trans-unit id="d0288df0a0caa96be3fb1fcb410d17ac61873da0" translate="yes" xml:space="preserve">
          <source>Indicates that an annotated class is a &quot;&lt;a href=&quot;http://docs.spring.io/spring-framework/docs/2.5.x/api/org/springframework/stereotype/Component.html&quot;&gt;component&lt;/a&gt;&quot;. Such classes are
  considered as candidates for auto-detection when using
  annotation-based configuration and classpath scanning.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Указывает, что аннотированный класс является &amp;laquo; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.spring.io/spring-framework/docs/2.5.x/api/org/springframework/stereotype/Component.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;компонентом&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;raquo;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Такие классы рассматриваются как кандидаты для автоматического обнаружения при использовании конфигурации на основе аннотаций и сканирования пути к классам.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="603ae5b24635d9c9cc928a1fbbfc200b44fef9fb" translate="yes" xml:space="preserve">
          <source>Indicates that an annotated class is a &quot;Service&quot;, &lt;strong&gt;originally defined
  by Domain-Driven Design (Evans, 2003) as &quot;an operation offered as an
  interface that stands alone in the model, with no encapsulated state.&quot;&lt;/strong&gt;
  May also indicate that a class is a &quot;Business Service Facade&quot; (in the
  Core J2EE patterns sense), or something similar. This annotation is a
  general-purpose stereotype and individual teams may narrow their
  semantics and use as appropriate.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Указывает, что аннотированный класс - это &amp;laquo;Служба&amp;raquo;, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;изначально определенная Domain-Driven Design (Evans, 2003) как &amp;laquo;операция, предлагаемая в качестве интерфейса, который стоит отдельно в модели, без инкапсулированного состояния&amp;raquo;.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Может также указывать, что класс представляет собой &amp;laquo;Фасад бизнес-услуг&amp;raquo; (в смысле шаблонов Core J2EE) или что-то подобное. Эта аннотация является стереотипом общего назначения, и отдельные команды могут сузить свою семантику и использовать по мере необходимости.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1bcf44cc569a33a13c3a571a60f384e0548b094b" translate="yes" xml:space="preserve">
          <source>Indicates that an annotated class is a &quot;component&quot;. Such classes are considered as candidates for auto-detection when using annotation-based configuration and classpath scanning.</source>
          <target state="translated">Указывает,что аннотированный класс является &quot;компонентом&quot;.Такие классы рассматриваются как кандидаты на автоопределение при использовании конфигурации на основе аннотаций и сканировании по классам.</target>
        </trans-unit>
        <trans-unit id="85dfd254c334ad8fc68bd7aa1dcde048bb6a1174" translate="yes" xml:space="preserve">
          <source>It will behave the same , but one aspect is that they wont be able to catch some specific exception related to DAO instead of Repository if we use component or @ service</source>
          <target state="translated">Он будет вести себя так же,но одним из аспектов является то,что они не смогут поймать какое-то конкретное исключение,связанное с DAO,вместо Repository,если мы используем компонент или сервис @.</target>
        </trans-unit>
        <trans-unit id="6641643e8c8fb510696ea216a90e65385335b9a9" translate="yes" xml:space="preserve">
          <source>Just take a look at &lt;code&gt;@Controller&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt; and &lt;code&gt;@Repository&lt;/code&gt; annotation definitions:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Просто взгляните на &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;определения аннотаций &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="903bfafcdae2fa0d2a53b0efa2b6858af2cb9337" translate="yes" xml:space="preserve">
          <source>Let's say you want to Monitors the Activity of the DAO Layer only. You will write an Aspect (A class) class that does some logging before and after every method of your DAO is invoked, you are able to do that using AOP as you have three distinct Layers and are not mixed.</source>
          <target state="translated">Скажем,ты хочешь контролировать только деятельность слоя DAO.Вы напишете класс Aspect (A class),который делает некоторые протоколирования до и после вызова каждого метода DAO,вы можете сделать это,используя AOP,так как у вас есть три разных слоя,и они не смешиваются.</target>
        </trans-unit>
        <trans-unit id="c2629ed734c3a1b852e77ed00f1df23f518f1f94" translate="yes" xml:space="preserve">
          <source>More Detailed View</source>
          <target state="translated">Более подробный вид</target>
        </trans-unit>
        <trans-unit id="ebb845500698520391f76f33b840d9410bf39333" translate="yes" xml:space="preserve">
          <source>Now lets move to each one; first &lt;strong&gt;@Service&lt;/strong&gt;, If you are building some logic for specific business case you need to separate that in a place which will contain your business logic, this service is normal Class or you can use it as interface if you want , and it is written like this</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь давайте перейдем к каждому; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;first &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Service&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , если вы создаете некоторую логику для конкретного бизнес-кейса, вам нужно отделить ее в месте, которое будет содержать вашу бизнес-логику, этот сервис является обычным классом или вы можете использовать его как интерфейс, если хотите, и он написан так: этот&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="235ac4ca12c6e15fd070a83c68746376ccc0ff7f" translate="yes" xml:space="preserve">
          <source>Now you may ask why separate them: (I assume you know AOP-Aspect Oriented Programming)</source>
          <target state="translated">Теперь ты можешь спросить,зачем их разделять:(Я полагаю,вы знаете AOP-ориентированное программирование)</target>
        </trans-unit>
        <trans-unit id="0e49e54de73dcdad3023900189208d240b064830" translate="yes" xml:space="preserve">
          <source>One should choose a more specialised form of &lt;code&gt;@Component&lt;/code&gt; while annotating their class as this annotation may contain specific behavior going forward.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Нужно выбрать более специализированную форму &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; при аннотировании их класса, так как эта аннотация может содержать определенное поведение в будущем.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fdd116a6947fffa7da31c90c4e34c869835628f6" translate="yes" xml:space="preserve">
          <source>One thing that &lt;code&gt;@Component&lt;/code&gt; offers is that you can annotate other annotations with it, and then use them the same way as &lt;code&gt;@Service&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Одна вещь , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;которая &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; предложений является то , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;что вы можете аннотировать другие аннотаций с ним, а затем использовать их так же, как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d31650711bf9f2dafab41426e9e398c7d17c0a5a" translate="yes" xml:space="preserve">
          <source>Or does the annotation also influence the behavior and functionality of the class?</source>
          <target state="translated">Или аннотация также влияет на поведение и функциональность класса?</target>
        </trans-unit>
        <trans-unit id="a06c6eb35e880fc6c2fdd09687a380413e6a28fa" translate="yes" xml:space="preserve">
          <source>Originally answered &lt;a href=&quot;https://stackoverflow.com/questions/16051656/advantages-of-using-spring-stereotypes/16105106#16105106&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Первоначально ответил &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/16051656/advantages-of-using-spring-stereotypes/16105106#16105106&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;здесь&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6262057e07ae846d043a86d7e9fee68034d9861" translate="yes" xml:space="preserve">
          <source>Other class-level annotations may be considered as identifying a
  component as well, typically a special kind of component: e.g. the
  @Repository annotation or AspectJ's @Aspect annotation.</source>
          <target state="translated">Другие аннотации на уровне класса также могут рассматриваться как идентифицирующие компонент,обычно специальный вид компонента:например,@ аннотация репозитория или @ аннотация аспекта (AspectJ's @Aspect annotation).</target>
        </trans-unit>
        <trans-unit id="0c3bd2feae7e8a7044ad1d68132cdba2cae4dd29" translate="yes" xml:space="preserve">
          <source>Plus &lt;code&gt;@Service&lt;/code&gt; is advance of &lt;code&gt;@Component&lt;/code&gt;. Assume the bean class name is &lt;code&gt;CustomerService&lt;/code&gt;, since you did not choose XML bean configuration way so you annotated the bean with &lt;code&gt;@Component&lt;/code&gt; to indicate it as a Bean. So while getting the bean object &lt;code&gt;CustomerService cust = (CustomerService)context.getBean(&quot;customerService&quot;);&lt;/code&gt; By default, Spring will lower case the first character of the component &amp;ndash; from &amp;lsquo;CustomerService&amp;rsquo; to &amp;lsquo;customerService&amp;rsquo;. And you can retrieve this component with name &amp;lsquo;customerService&amp;rsquo;.
But if you use &lt;code&gt;@Service&lt;/code&gt; annotation for the bean class you can provide a specific bean name by</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Плюс &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это продвижение &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Предположим, что имя класса bean-компонента - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;CustomerService&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , поскольку вы не выбрали способ конфигурации bean-компонента XML, поэтому вы &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; bean-компонент &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Component,&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; чтобы указать его как Bean- &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;компонент &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. Поэтому при получении объекта bean &lt;/font&gt;&lt;/font&gt; &lt;code&gt;CustomerService cust = (CustomerService)context.getBean(&quot;customerService&quot;);&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; По умолчанию Spring будет нижний регистр первого символа компонента - от CustomerService до customerService. И вы можете получить этот компонент с именем 'customerService'. Но если вы используете &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;аннотацию &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для класса компонента, вы можете &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;указать&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; конкретное имя компонента:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="97b6f37b8647002ac0f4d19689972c444a6cc418" translate="yes" xml:space="preserve">
          <source>Purpose of each annotation:</source>
          <target state="translated">Цель каждой аннотации:</target>
        </trans-unit>
        <trans-unit id="5c33ac0525673af29e43ddf85d13630c95db59c2" translate="yes" xml:space="preserve">
          <source>Referring to &lt;code&gt;JSR-330&lt;/code&gt;, which is now supported by spring, you can only use &lt;code&gt;@Named&lt;/code&gt; to define a bean (Somehow &lt;code&gt;@Named=@Component&lt;/code&gt;). So according to this standard, there seems that there is no use to define stereotypes (like &lt;code&gt;@Repository&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt;, &lt;code&gt;@Controller&lt;/code&gt;) to categories beans.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Что касается &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSR-330&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , который теперь поддерживается &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Named&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , вы можете использовать только &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Named&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для определения компонента ( &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Somehow &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Named=@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, в соответствии с этим стандартом, кажется, что нет смысла определять стереотипы (такие как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) для компонентов категории.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="685dc316b07cd5f694d0845b3fd6ec857a538dd4" translate="yes" xml:space="preserve">
          <source>Repository are the DAOs (Data Access Objects), they access the database directly.</source>
          <target state="translated">Репозиторием являются DAO (Объекты доступа к данным),они имеют прямой доступ к базе данных.</target>
        </trans-unit>
        <trans-unit id="e147f1fe24ee57f9f37f6dc9c7383254c93bd48f" translate="yes" xml:space="preserve">
          <source>Service Hold business Logic, Calculations etc.</source>
          <target state="translated">Логика ведения бизнеса,расчеты и т.д.</target>
        </trans-unit>
        <trans-unit id="e2d186594b1e6d077235fcfdef486079382c759e" translate="yes" xml:space="preserve">
          <source>Similar to above, in the future Spring may add special functionalities for &lt;code&gt;@Service&lt;/code&gt;, &lt;code&gt;@Controller&lt;/code&gt; and &lt;code&gt;@Repository&lt;/code&gt; based on their layering conventions. Hence, it's always a good idea to respect the convention and use it in line with layers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как и выше, в будущем Spring может добавить специальные функции для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; в соответствии&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; с их соглашениями о размещении. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Следовательно, всегда полезно соблюдать соглашение и использовать его в соответствии со слоями.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="426f653b4b02591f9400e218877d98d88ef2cf85" translate="yes" xml:space="preserve">
          <source>So all classes annotated with &lt;code&gt;@ScheduledJob&lt;/code&gt; are spring beans and in addition to that are registered as quartz jobs. You just have to provide code that handles the specific annotation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, все классы, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@ScheduledJob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; являются пружинными компонентами и, в дополнение к этому, регистрируются как кварцевые задания. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вам просто нужно предоставить код, который обрабатывает конкретную аннотацию.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="94f5ef83d953e16e3fc387e0969a50cac858275e" translate="yes" xml:space="preserve">
          <source>So you can do logging of DAO  &quot;around&quot;, &quot;before&quot; or &quot;after&quot; the DAO methods. You could do that because you had a DAO in the first place. What you just achieved is &lt;strong&gt;Separation of concerns or tasks.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, вы можете вести протокол DAO &amp;laquo;вокруг&amp;raquo;, &amp;laquo;до&amp;raquo; или &amp;laquo;после&amp;raquo; методов DAO. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы могли бы сделать это, потому что у вас был DAO во-первых. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;То, что вы только что достигли, это &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;разделение проблем или задач.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1c1d2586129c5e43b746ba3d3c2d74b7668fa20f" translate="yes" xml:space="preserve">
          <source>Special type annotations are also scanned, because they themselves are annotated with &lt;code&gt;@Component&lt;/code&gt; annotation, which means they are also &lt;code&gt;@Component&lt;/code&gt;s. If we define our own custom annotation and annotate it with &lt;code&gt;@Component&lt;/code&gt;, it will also get scanned with &lt;code&gt;&amp;lt;context:component-scan&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Аннотации специальных типов также сканируются, поскольку сами они &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; аннотацией &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Component&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , что означает, что они также являются &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; s. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если мы определим нашу собственную пользовательскую аннотацию и аннотируем ее с помощью &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , она также будет сканироваться с помощью &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;context:component-scan&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13138bde579f40373313fd0ba397b74463f24bd5" translate="yes" xml:space="preserve">
          <source>Spring 2.5 introduces further stereotype annotations: &lt;code&gt;@Component&lt;/code&gt;,
  &lt;code&gt;@Service&lt;/code&gt;, and &lt;code&gt;@Controller&lt;/code&gt;. &lt;code&gt;@Component&lt;/code&gt; is a generic stereotype for any
  Spring-managed component. &lt;code&gt;@Repository&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt;, and &lt;code&gt;@Controller&lt;/code&gt; are
  specializations of &lt;code&gt;@Component&lt;/code&gt; for more specific use cases, for
  example, in the persistence, service, and presentation layers,
  respectively.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В Spring 2.5 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; дополнительные аннотации стереотипов: &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Component&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это общий стереотип для любого компонента, управляемого Spring. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; являются специализациями &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для более конкретных случаев использования, например, на уровнях постоянства, обслуживания и представления соответственно.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0d6a36819b19fd7dcb56550f70df1216a3e250f9" translate="yes" xml:space="preserve">
          <source>Spring 2.5 introduces further stereotype annotations: @Component, @Service and @Controller. @Component serves as a generic stereotype for any Spring-managed component; whereas, @Repository, @Service, and @Controller serve as specializations of @Component for more specific use cases (e.g., in the persistence, service, and presentation layers, respectively). What this means is that you can annotate your component classes with @Component, but by annotating them with @Repository, @Service, or @Controller instead, your classes are more properly suited for processing by tools or associating with aspects. For example, these stereotype annotations make ideal targets for pointcuts. Of course, it is also possible that @Repository, @Service, and @Controller may carry additional semantics in future releases of the Spring Framework. Thus, if you are making a decision between using @Component or @Service for your service layer, @Service is clearly the better choice. Similarly, as stated above, @Repository is already supported as a marker for automatic exception translation in your persistence layer.</source>
          <target state="translated">Весна 2.5 вводит дополнительные аннотации стереотипов:@Компонент,@Обслуживание и @Контроллер.@Component служит общим стереотипом для любого компонента,управляемого Spring;в то время как @Repository,@Service и @Controller служат в качестве специализации @Component для более конкретных случаев использования (например,в слоях персистентности,обслуживания и презентации соответственно).Это означает,что вы можете аннотировать свои классы компонентов с помощью @Component,но,вместо этого,аннотируя их с помощью @Repository,@Service или @Controller,ваши классы более подходят для обработки с помощью инструментов или ассоциирования с аспектами.Например,эти стереотипные аннотации делают идеальными целями для точечных ярлыков.Конечно,также возможно,что @Repository,@Service и @Controller могут нести в себе дополнительную семантику в будущих выпусках Spring Framework.Таким образом,если вы принимаете решение между использованием @компонента или @сервиса для вашего служебного уровня,@сервис,безусловно,лучший выбор.Аналогичным образом,как говорилось выше,@Repository уже поддерживается в качестве маркера для автоматического перевода исключений на уровне персистентности.</target>
        </trans-unit>
        <trans-unit id="4c8f97fe823731da56120c1a0479f249b978d9eb" translate="yes" xml:space="preserve">
          <source>Spring provides four different types of auto component scan annotations, they are &lt;code&gt;@Component&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt;, &lt;code&gt;@Repository&lt;/code&gt; and &lt;code&gt;@Controller&lt;/code&gt;. Technically, there is no difference between them, but every auto component scan annotation should be used for a special purpose and within the defined layer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Spring предоставляет четыре различных типа аннотаций автоматического сканирования компонентов: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Технически, между ними нет никакой разницы, но каждую аннотацию автоматического сканирования компонентов следует использовать для специальных целей и в пределах определенного слоя.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e47ccbf053a0ec52f68e06b21639f47966082e4" translate="yes" xml:space="preserve">
          <source>Spring provides further stereotype annotations: @Component, @Service,
  and @Controller. @Component is a generic stereotype for any
  Spring-managed component. @Repository, @Service, and @Controller are
  specializations of @Component for more specific use cases, for
  example, in the persistence, service, and presentation layers,
  respectively. Therefore, you can annotate your component classes with
  @Component, but by annotating them with @Repository, @Service, or
  @Controller instead, your classes are more properly suited for
  processing by tools or associating with aspects. For example, these
  stereotype annotations make ideal targets for pointcuts. It is also
  possible that @Repository, @Service, and @Controller may carry
  additional semantics in future releases of the Spring Framework. Thus,
  if you are choosing between using @Component or @Service for your
  service layer, @Service is clearly the better choice. Similarly, as
  stated above, @Repository is already supported as a marker for
  automatic exception translation in your persistence layer.</source>
          <target state="translated">Весна обеспечивает дополнительные аннотации стереотипов:@Компонент,@Обслуживание и @Контроллер.@Компонент-это общий стереотип для любого компонента,управляемого пружиной.@Репозитарий,@Обслуживание и @Контроллер являются специализациями @Компонента для более конкретных случаев использования,например,в слоях персистентности,обслуживания и презентации,соответственно.Поэтому можно аннотировать свои классы компонентов с помощью @Component,но,вместо этого,аннотируя их с помощью @Repository,@Service или @Controller,ваши классы более подходят для обработки с помощью инструментов или ассоциирования с аспектами.Например,эти стереотипные аннотации делают идеальными целями для точечных ярлыков.Также возможно,что @Repository,@Service и @Controller могут нести в себе дополнительную семантику в будущих выпусках Spring Framework.Таким образом,если вы выбираете между использованием @компоненты или @сервиса для вашего служебного уровня,@сервис,безусловно,лучший выбор.Аналогичным образом,как говорилось выше,@Repository уже поддерживается в качестве маркера для автоматического перевода исключений на уровне персистентности.</target>
        </trans-unit>
        <trans-unit id="2af2883cda90ae2aabcf36bb1d742fa55939ea53" translate="yes" xml:space="preserve">
          <source>Technically &lt;code&gt;@Controller&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt;, &lt;code&gt;@Repository&lt;/code&gt; are all same. All of them extends &lt;code&gt;@Component&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Технически &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; все одинаковы. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Все они расширяются &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3450da4a4365327d7d93ea1ed7f17670543838e4" translate="yes" xml:space="preserve">
          <source>That mean Service, The Controller and Repository are functionally the same.</source>
          <target state="translated">Это означает,что сервис,контроллер и репозиторий функционально идентичны.</target>
        </trans-unit>
        <trans-unit id="0229edf27680c26ff671b29e914c64208980be53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@Controller&lt;/code&gt; annotation indicates that a particular class serves the role of a controller. The &lt;code&gt;@Controller&lt;/code&gt; annotation acts as a stereotype for the annotated class, indicating its role.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; аннотации указывает на то, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;что конкретный класс играет роль контроллера. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; аннотацию выступает в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;качестве стереотипа для аннотированный класса, что &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;указывает на &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;его роль.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="533fb10976bc2fbd348b95363b3eebc5b25e7b10" translate="yes" xml:space="preserve">
          <source>The @Repository annotation is a marker for any class that fulfills the
  role or stereotype of a repository (also known as Data Access Object
  or DAO). Among the uses of this marker is the automatic translation of
  exceptions as described in Section 20.2.2, &amp;ldquo;Exception translation&amp;rdquo;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Аннотация @Repository является маркером для любого класса, который выполняет роль или стереотип репозитория (также известный как объект доступа к данным или DAO). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Среди применений этого маркера - автоматический перевод исключений, как описано в Разделе 20.2.2, &amp;laquo;Перевод исключений&amp;raquo;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="900ecd692d24a5c797f10bc27ca6905fadfb0704" translate="yes" xml:space="preserve">
          <source>The main purpose of using three different &lt;code&gt;@annotations&lt;/code&gt; is to provide better Modularity to the Enterprise application.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Основная цель использования трех различных &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@annotations&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - обеспечить лучшую модульность для приложения Enterprise.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa530228a9750a5c455b2162199e35549007bf86" translate="yes" xml:space="preserve">
          <source>The three annotations are used to separate &lt;strong&gt;&quot;Layers&quot;&lt;/strong&gt; in your application,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Три аннотации используются для разделения &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;laquo;слоев&amp;raquo;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в вашем приложении,&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4bf4bb5c5fdc69be38378fc9b78403ba1c199156" translate="yes" xml:space="preserve">
          <source>There is no difference between &lt;code&gt;@Component&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt;, &lt;code&gt;@Controller&lt;/code&gt;, &lt;code&gt;@Repository&lt;/code&gt;.
&lt;code&gt;@Component&lt;/code&gt; is the Generic annotation to represent the component of our MVC. But there will be several components as part of our MVC application like service layer components, persistence layer components and presentation layer components. So to differentiate them Spring people have given the other three annotations also.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Нет разницы между &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это общая аннотация, представляющая компонент нашего MVC. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но в составе нашего приложения MVC будет несколько компонентов, таких как компоненты уровня обслуживания, компоненты уровня постоянства и компоненты уровня представления. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, чтобы дифференцировать их, Весенние люди дали и другие три аннотации.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d40a885a98ab77cf143237e07c7ff23a62fee425" translate="yes" xml:space="preserve">
          <source>Therefore, you can annotate your component classes with &lt;code&gt;@Component&lt;/code&gt;,
  but by annotating them with &lt;code&gt;@Repository&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt;, or &lt;code&gt;@Controller&lt;/code&gt;
  instead, your classes are more properly suited for processing by tools
  or associating with aspects. For example, these stereotype annotations
  make ideal targets for pointcuts.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Поэтому вы можете аннотировать свои классы компонентов с помощью &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , но &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вместо этого, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;аннотируя их с помощью &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , ваши классы лучше подходят для обработки инструментами или связи с аспектами. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Например, эти аннотации стереотипов делают идеальные цели для pointcut.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="058eac42dd2f1563bae1c74a367ecbd5fb342e14" translate="yes" xml:space="preserve">
          <source>These are all StereoType annotations.this are usefull for the making our classes as spring beans in ioc container,</source>
          <target state="translated">Это все аннотации StereoType.это полезно для создания наших классов в качестве пружинной фасоли в контейнере ioc,</target>
        </trans-unit>
        <trans-unit id="9ea8e1c357fb5f85e91ae49d1be94f92a6e71d20" translate="yes" xml:space="preserve">
          <source>They are almost the same - all of them mean that the class is a Spring bean. &lt;code&gt;@Service&lt;/code&gt;, &lt;code&gt;@Repository&lt;/code&gt; and &lt;code&gt;@Controller&lt;/code&gt; are specialized &lt;code&gt;@Component&lt;/code&gt;s. You can choose to perform specific actions with them. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Они почти одинаковы - все они означают, что класс - это боб Spring. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; являются специализированными &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; s. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете выполнить определенные действия с ними. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Например:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de905c43b0b2db7baa533c33546ac95732270a99" translate="yes" xml:space="preserve">
          <source>This annotation is a specialized version of &lt;code&gt;@Controller&lt;/code&gt; which adds
&lt;code&gt;@Controller&lt;/code&gt; and &lt;code&gt;@ResponseBody&lt;/code&gt; annotation automatically. so we do not have to add &lt;code&gt;@ResponseBody&lt;/code&gt; to our mapping methods. That means
&lt;code&gt;@ResponseBody&lt;/code&gt; is default active.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Эта аннотация является специализированной версией &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; которая &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;@ResponseBody&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; аннотации &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Controller&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@ResponseBody&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;поэтому нам не нужно добавлять &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@ResponseBody&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в наши методы отображения. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это означает, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@ResponseBody&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; по умолчанию активен.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad914a8e008667b3f088395a61125ea2021b0679" translate="yes" xml:space="preserve">
          <source>This bean post processor adds an advisor to any bean that&amp;rsquo;s annotated with &lt;code&gt;@Repository&lt;/code&gt; so that any platform-specific exceptions are caught and then re-thrown as one of Spring&amp;rsquo;s unchecked data access exceptions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Этот &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; бина добавляет советник к любому &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;бину&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , аннотированному &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Repository,&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; так что любые специфичные для платформы исключения перехватываются, а затем снова выбрасываются как одно из неконтролируемых исключений доступа к данным в Spring.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dfd7db7acb2d6fc63a6f62d3d5b6144a16676402" translate="yes" xml:space="preserve">
          <source>This is a general-purpose stereotype annotation indicating that the class is a spring component.</source>
          <target state="translated">Это аннотация стереотипа общего назначения,указывающая на то,что класс является компонентом пружины.</target>
        </trans-unit>
        <trans-unit id="29446177a2ee21e508666cc155eefb09a624a7e7" translate="yes" xml:space="preserve">
          <source>This is to indicate that the class defines a data repository.</source>
          <target state="translated">Это означает,что класс определяет хранилище данных.</target>
        </trans-unit>
        <trans-unit id="99a7f349c5d5d0a3edcbffea295e6e3e4fdda6c3" translate="yes" xml:space="preserve">
          <source>Thus, if you are choosing between using &lt;code&gt;@Component&lt;/code&gt; or &lt;code&gt;@Service&lt;/code&gt; for
  your service layer, &lt;code&gt;@Service&lt;/code&gt; is clearly the better choice. Similarly,
  as stated above, &lt;code&gt;@Repository&lt;/code&gt; is already supported as a marker for
  automatic exception translation in your persistence layer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, если вы выбираете между использованием &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для своего уровня обслуживания, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;безусловно,&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является лучшим выбором. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Точно так же, как указано выше, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; уже поддерживается в качестве маркера для автоматического преобразования исключений в вашем слое постоянства.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a3c5bd3d66266193b40ff5b6c65f686b1bcdc89" translate="yes" xml:space="preserve">
          <source>Thus, it&amp;rsquo;s not wrong to say that &lt;code&gt;@Controller&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt; and &lt;code&gt;@Repository&lt;/code&gt; are special types of &lt;code&gt;@Component&lt;/code&gt; annotation. &lt;code&gt;&amp;lt;context:component-scan&amp;gt;&lt;/code&gt; picks them up and registers their following classes as beans, just as if they were annotated with &lt;code&gt;@Component&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, нет ничего плохого в том, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это специальные типы &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;аннотации &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;context:component-scan&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; подбирает их и регистрирует их следующие классы как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , как если бы они были аннотированы &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Component&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d69d4160a585819959849c4eab806d317481f0d" translate="yes" xml:space="preserve">
          <source>To represent persistence layer components: &lt;code&gt;@Repository&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для представления компонентов персистентного слоя: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ead03f90db54e666450ff5accb8191e98e8faf2f" translate="yes" xml:space="preserve">
          <source>To represent presentation layer components: &lt;code&gt;@Controller&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для представления компонентов уровня представления: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84f553135d1580aab45e503274f77780d545545a" translate="yes" xml:space="preserve">
          <source>To represent service layer components: &lt;code&gt;@Service&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для представления компонентов уровня обслуживания: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2000222464e633cfff2ab4ceb90805664f7f5cec" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;@Repository&lt;/code&gt; for all your stored proc DB connections</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Используйте &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для всех ваших сохраненных подключений к БД.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5c1728a39750ffa3f74da82312bfc52d8e3e74c7" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;@Service&lt;/code&gt; for all your web service type of DB connections</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Используйте &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для всех типов подключений к БД вашего веб-сервиса.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc984e733a64481ce8437080e217ab61c76e668e" translate="yes" xml:space="preserve">
          <source>Use of &lt;code&gt;@Service&lt;/code&gt; and &lt;code&gt;@Repository&lt;/code&gt; annotations are important from database connection perspective.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Использование &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;аннотаций &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; важно с точки зрения подключения к базе данных.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="395a1505737478df9357bdcff0d4b671ab87cde1" translate="yes" xml:space="preserve">
          <source>We can answer this according to java standard</source>
          <target state="translated">Мы можем ответить на этот вопрос в соответствии со стандартом java.</target>
        </trans-unit>
        <trans-unit id="512d97efffc0e0cfedd41715bd27b58f51ad13f2" translate="yes" xml:space="preserve">
          <source>We can directly use &lt;code&gt;@Component&lt;/code&gt; for each and every bean, but for better understanding and maintainability of a large application, we use &lt;code&gt;@Controller&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt;, &lt;code&gt;@Repository&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Мы можем напрямую использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для каждого компонента, но для лучшего понимания и поддержки большого приложения мы используем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="350545f8a4491c80a200eba5f89f14af6638afce" translate="yes" xml:space="preserve">
          <source>We cannot switch this annotation with any other like &lt;code&gt;@Service&lt;/code&gt; or &lt;code&gt;@Repository&lt;/code&gt;, even though they look same. 
The dispatcher scans the classes annotated with &lt;code&gt;@Controller&lt;/code&gt; and detects methods annotated with &lt;code&gt;@RequestMapping&lt;/code&gt; annotations within them. We can use &lt;code&gt;@RequestMapping&lt;/code&gt; on/in only those methods whose classes are annotated with &lt;code&gt;@Controller&lt;/code&gt; and it will &lt;strong&gt;NOT&lt;/strong&gt; work with &lt;code&gt;@Component&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt;, &lt;code&gt;@Repository&lt;/code&gt; etc...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Мы не можем поменять эту аннотацию на любую другую, такую ​​как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , даже если они выглядят одинаково. Диспетчер просматривает классы, аннотированные &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и обнаруживает методы, аннотированные &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;аннотациями &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@RequestMapping&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; внутри них. Мы можем использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@RequestMapping&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; только в тех методах, классы которых аннотированы &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и они &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;НЕ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будут &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;работать с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; и&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; т. Д. ...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="987a0f0b1f106a0619a7eb85604b381949c7a0f7" translate="yes" xml:space="preserve">
          <source>What's the difference between @Component, @Repository &amp; @Service annotations in Spring</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В чем разница между аннотациями @Component, @Repository и @Service в Spring&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cefd45d96e7811a0c9b997ad8106965b84732c2a" translate="yes" xml:space="preserve">
          <source>Why use @Repository, @Service, @Controller over @Component?
We can mark our component classes with @Component, but if instead we use the alternative that adapts to the expected functionality. Our classes are better suited to the functionality expected in each particular case.</source>
          <target state="translated">Зачем использовать @Репозитарий,@Обслуживание,@Контроллер над @Компонентом? Мы можем пометить наши классы компонентов @Component,но если вместо этого мы используем альтернативу,которая адаптируется к ожидаемой функциональности.Наши классы лучше подходят к ожидаемой функциональности в каждом конкретном случае.</target>
        </trans-unit>
        <trans-unit id="4330aa1f435a8813e33467c458b9c523669cfb79" translate="yes" xml:space="preserve">
          <source>above declared annotations are special because when we add &lt;code&gt;&amp;lt;context:component-scan&amp;gt;&lt;/code&gt; into xxx-servlet.xml file ,spring will automatically create the object of those classes which are annotated with above annotation during context creation/loading phase.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объявленные выше аннотации являются особыми, потому что когда мы добавляем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;context:component-scan&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в файл xxx-servlet.xml, Spring автоматически создает объект тех классов, которые аннотируются вышеуказанной аннотацией на этапе создания / загрузки контекста.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e564121cda727185523b754490351a631d26c406" translate="yes" xml:space="preserve">
          <source>all these annotations are type of stereo type type of annotation,the difference between these three annotations are</source>
          <target state="translated">все эти аннотации являются типом стерео-типа аннотаций,разница между этими тремя аннотациями заключается в следующем</target>
        </trans-unit>
        <trans-unit id="18f4b81d4f3a4621f6153578c2a46358cc403380" translate="yes" xml:space="preserve">
          <source>and a &lt;code&gt;Repository&lt;/code&gt; as per Eric Evans,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в соответствии с Эриком Эвансом,&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db875ee55092e2c0f3365edd019bd8c053b32ca1" translate="yes" xml:space="preserve">
          <source>and you can get the bean object by</source>
          <target state="translated">и ты можешь получить бобовый объект</target>
        </trans-unit>
        <trans-unit id="7e2fb968a45f3910e02ba7ce0b0ea0809f985cc3" translate="yes" xml:space="preserve">
          <source>for example</source>
          <target state="translated">например</target>
        </trans-unit>
        <trans-unit id="3e13d8fce6fc1b32339adca9dc15bc225249e64d" translate="yes" xml:space="preserve">
          <source>or else you can use &lt;code&gt;@Component&lt;/code&gt; for all of them.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;или же вы можете использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для всех из них.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ab2c9bc11b9d93d73219ddd793d8bd6c8060c0db" translate="yes" xml:space="preserve">
          <source>reference :- &lt;a href=&quot;https://docs.spring.io/spring/docs/3.0.0.M3/reference/html/ch04s12.html&quot;&gt;Spring Documentation - Classpath scanning, managed components and writing configurations using Java &lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ссылка: - &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.spring.io/spring/docs/3.0.0.M3/reference/html/ch04s12.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Spring Documentation - Сканирование пути к классам, управляемые компоненты и написание конфигураций с использованием Java&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ef3608f431d68a9480040ab93b4dc1c90c79240" translate="yes" xml:space="preserve">
          <source>whenever we adds the &lt;code&gt;@Service&lt;/code&gt; or &lt;code&gt;@Repositroy&lt;/code&gt; or &lt;code&gt;@Controller&lt;/code&gt; annotation by default &lt;code&gt;@Component&lt;/code&gt; annotation is going to existence on top of the class</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;всякий раз, когда мы добавляем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repositroy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; по умолчанию, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;аннотация &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будет существовать поверх класса&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
