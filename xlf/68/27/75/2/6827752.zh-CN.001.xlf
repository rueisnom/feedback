<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/6827752">
    <body>
      <group id="6827752">
        <trans-unit id="c52bb2477a9cac0236f8c69a02e58e30e1dca449" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;context:component-scan&amp;gt;&lt;/code&gt; only scans &lt;code&gt;@Component&lt;/code&gt; and does not look for &lt;code&gt;@Controller&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt; and &lt;code&gt;@Repository&lt;/code&gt; in general. They are scanned because they themselves are annotated with &lt;code&gt;@Component&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;context:component-scan&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仅扫描&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，通常不查找&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Service&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因为它们本身被&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释，所以它们被扫描&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0a46bb7fbef933e5b2ac6ddf73b73c53e57521c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Autowired&lt;/code&gt; - Let Spring auto-wire other beans into your classes using @Autowired annotation.</source>
          <target state="translated">&lt;code&gt;@Autowired&lt;/code&gt; -&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;让Spring使用@Autowired注释将其他bean自动连接到您的类中。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4bc7bd8bd6588b120c74696f648e62dc842860f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Component&lt;/code&gt; - Annotate your other components (for example REST resource classes) with a component stereotype.</source>
          <target state="translated">&lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Component-用组件&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造型&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释其他组件（例如REST资源类）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f60b2f1e94f9c7d209679c9203afa153d9aa612a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Component&lt;/code&gt; - Annotate your other components (for example REST resource classes) with component stereotype.</source>
          <target state="translated">&lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Component-使用组件&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造型&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释其他组件（例如REST资源类）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d27eada60b5a322fd96c7024833dd0f559a9929d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Component&lt;/code&gt; = Actual Components ( Beans )</source>
          <target state="translated">&lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; =实际组件（Beans）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c962e54fcc2f756b514e4c953c8635938eddef70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Component&lt;/code&gt; is a generic stereotype for any Spring-managed component. &lt;code&gt;@Repository&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt;, and &lt;code&gt;@Controller&lt;/code&gt; are specializations of &lt;code&gt;@Component&lt;/code&gt; for more specific use cases, for example, in the persistence, service, and presentation layers, respectively.</source>
          <target state="translated">&lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是任何Spring托管组件的通用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;型。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Controller&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; 的特化,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用于更具体的用例，例如分别在持久层，服务层和表示层中。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5a86102aa2acb8d184a67117632ec2f5f96e461e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Component&lt;/code&gt; is the top level generic annotation which makes the annotated bean to be scanned and available in the DI container</source>
          <target state="translated">&lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是顶级通用注释，它使被注释的Bean可以被扫描并在DI容器中可用&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="53d51bed880db024f2154f22c00ca38294357d40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Component&lt;/code&gt;: It is a basic auto component scan annotation, it indicates annotated class is an auto scan component.</source>
          <target state="translated">&lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：这是一个基本的自动组件扫描注释，它指示带注释的类是一个自动扫描组件。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a85c783976ded2ec7bf340636fcbf94c846af9e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Controller:&lt;/code&gt; where your &lt;strong&gt;request&lt;/strong&gt;&lt;strong&gt;mapping from presentation page&lt;/strong&gt; done i.e. Presentation layer won't go to any other file it goes directly to &lt;code&gt;@Controller&lt;/code&gt; class and checks for requested path in &lt;code&gt;@RequestMapping&lt;/code&gt; annotation which written before method calls if necessary.</source>
          <target state="translated">&lt;code&gt;@Controller:&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您的&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请求，&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从演示页面映射&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;即表示层做不会去直接转到任何其他文件&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类，并检查请求的路径在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@RequestMapping&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之前，如果有必要的方法调用它写注释。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="42bdae02eaf700513be4523a71747e53f7a3713e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Controller&lt;/code&gt; -&amp;gt; Classes annotated with this, are intended to receive a request from the client side. The first request comes to the Dispatcher Servlet, from where it passes the request to the particular controller using the value of &lt;code&gt;@RequestMapping&lt;/code&gt; annotation.</source>
          <target state="translated">&lt;code&gt;@Controller&lt;/code&gt; -&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;gt;带有此注释的类旨在接收来自客户端的请求。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;第一个请求到达分派器Servlet，在此它使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@RequestMapping&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;批注&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的值将请求传递给特定的控制器&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1e287e07020b7f5854ebd49f7b8fe81dbef2fb61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Controller&lt;/code&gt; = @Component ( Internal Annotation ) + Presentation layer Features</source>
          <target state="translated">&lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; = @Component（内部注释）+表示层功能&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="51e8f89f260fc43722b23090ae1ac2abb49a46dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Controller&lt;/code&gt; beans are used by spring-mvc</source>
          <target state="translated">&lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; bean由spring-mvc使用&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ebc68bedd3b3269aebc658ea919ace4c2ba2c5e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Controller&lt;/code&gt; is used to mark classes as Spring MVC Controller. This
annotation is just a specialized version of &lt;code&gt;@Component&lt;/code&gt; and it
allows the controller classes to be auto-detected based on classpath
scanning.</source>
          <target state="translated">&lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用于将类标记为Spring MVC Controller。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此注释只是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的专用版本，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它允许基于类路径扫描自动检测控制器类。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="60acfe2763e013acff10de2e90dc737721af301d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Controller&lt;/code&gt; you can return a view in Spring web MVC.</source>
          <target state="translated">&lt;code&gt;@Controller&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以在Spring Web MVC中返回视图。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1867322fce2cf8c6945fe5c011aae47dc3614e97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Controller&lt;/code&gt;: Annotated class indicates that it is a controller component, and mainly used at the presentation layer.</source>
          <target state="translated">&lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：带注释的类表明它是控制器组件，主要在表示层使用。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="755f30ff16842ff20dc3434aef8ec3f81ac01294" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Repository&lt;/code&gt; - Annotate all your DAO classes with @Repository. All your database access logic should be in DAO classes.</source>
          <target state="translated">&lt;code&gt;@Repository&lt;/code&gt; -用&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释所有DAO类。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您所有的数据库访问逻辑都应在DAO类中。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6435804414b2b59a17da073be0c6c40aee98bcb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Repository&lt;/code&gt; -&amp;gt; Classes annotated with this, are intended to connect with database. It can also be considered as DAO(Data Access Object) layer. This layer should be restricted to CRUD (create, retrieve, update, delete) operations only.
If any manipulation is required, data should be sent be send back to @Service layer.</source>
          <target state="translated">&lt;code&gt;@Repository&lt;/code&gt; -&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;gt;带有此注释的类旨在与数据库连接。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;也可以将其视为DAO（数据访问对象）层。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该层应仅限于CRUD（创建，检索，更新，删除）操作。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果需要任何操作，则应将数据发送回@Service层。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f0db2ae59ef409d76fc1ebc571b3ccadeeeb808" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Repository&lt;/code&gt; = @Component ( Internal Annotation ) + Data Layer Features ( use for handling the Domain Beans )</source>
          <target state="translated">&lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; = @Component（内部注释）+数据层功能（用于处理域Bean）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75f13022996e28a8ab5fca548f247847bf7f3ca1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Repository&lt;/code&gt; annotation will add some functionality to your bean (some automatic exception translation to your bean persistence layer).</source>
          <target state="translated">&lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;批注将为您的bean添加一些功能（一些自动异常转换到您的bean持久层）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="efe183c2a1873030970b25581ebc3552dca4d171" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Repository&lt;/code&gt; beans are eligible for persistence exception translation</source>
          <target state="translated">&lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; bean有资格进行持久性异常翻译&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f44b3951a7fab8002b541c86593b0e72bbe5364" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Repository&lt;/code&gt; is specialized annotation and it brings the feature of converting all the unchecked exceptions from the DAO classes</source>
          <target state="translated">&lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是专门的注释，它具有转换DAO类中所有未检查的异常的功能&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3354d3ec0c176e3f31600d85600a2011385ca78b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Repository&lt;/code&gt;: This is Persistence layer(Data Access Layer) of application which used to get data from the database. i.e. &lt;strong&gt;all the Database related operations are done by the repository.&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：这是应用程序的持久层（数据访问层），用于从数据库中获取数据。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;即&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有与数据库有关的操作都由存储库完成。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9acd254fd2bbf9f9bc57bc5af90b23eddd3bc958" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Repository&lt;/code&gt;: You need to use this annotation within the persistence layer, this acts like database repository.</source>
          <target state="translated">&lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：您需要在持久层中使用此批注，这就像数据库存储库。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90be53f5cbdd981a8c2355b766d9fff306b6775a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@RestController&lt;/code&gt; also converts the response to &lt;code&gt;JSON/XML automatically&lt;/code&gt; as &lt;code&gt;@ResponseBody&lt;/code&gt; makes the returned objects to something that could be in the body, &lt;code&gt;e.g. JSON or XML&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@RestController&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;还会自动将响应转换为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON/XML automatically&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@ResponseBody&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使返回的对象成为可能在体内的对象，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;e.g. JSON or XML&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd9ce01b50aaf96a042df6119c17a292c30ebb61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Service&lt;/code&gt; - Annotate all your service classes with @Service. This layer knows the unit of work. All your business logic will be in Service classes. Generally methods of service layer are covered under transaction. You can make multiple DAO calls from service method, if one transaction fails all transactions should rollback.</source>
          <target state="translated">&lt;code&gt;@Service&lt;/code&gt; -用&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释所有服务类。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该层知道工作单元。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您所有的业务逻辑都将在Service类中。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常，事务处理涵盖服务层的方法。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以从服务方法进行多个DAO调用，如果一个事务失败，则所有事务都应回滚。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65f7a4157131313ba9d9c7de0c0c2ec078d920ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Service&lt;/code&gt; -&amp;gt; Classes annotated with this, are intended to manipulate data, that we receive from the client or fetch from the database. All the manipulation with data should be done in this layer.</source>
          <target state="translated">&lt;code&gt;@Service&lt;/code&gt; -&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;gt;带有此注释的类用于处理从客户端接收或从数据库获取的数据。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有对数据的操作都应在此层中完成。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="57f5d1af5bcd96d8cf4535d91fa857ae7afca44d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Service&lt;/code&gt; = @Component ( Internal Annotation ) + Service layer Features</source>
          <target state="translated">&lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; = @Component（内部注释）+服务层功能&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed4dc909a6dc9f48489b83955476a753cfb55340" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Service&lt;/code&gt; beans hold the business logic and call methods in the repository layer.</source>
          <target state="translated">&lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; bean在存储库层中保存业务逻辑和调用方法。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="17a69c480a6a788c48c3fc84d2577526d41ced15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Service&lt;/code&gt; is specialized annotation. it do not bring any new feature as of now but it clarifies the intent of the bean</source>
          <target state="translated">&lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是专用注释。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;到目前为止，它没有带来任何新功能，但是它阐明了Bean的意图。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a3e80f101ac8ba58423611e9a359db720a6cddb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Service&lt;/code&gt;: All business logic is here i.e. Data related calculations and all.This annotation of business layer in which our user not directly call persistence method so it will call this method using this annotation. &lt;strong&gt;It will request @Repository as per user request&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：所有业务逻辑都在这里，即与数据相关的计算和所有。业务层的此批注，我们的用户没有直接调用持久性方法，因此它将使用此批注来调用此方法。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它将根据用户请求请求@Repository&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a1c1d2514399a89419fa8c725118147960f9a19d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@Service&lt;/code&gt;: It indicates annotated class is a Service component in the business layer.</source>
          <target state="translated">&lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：它指示带注释的类是业务层中的Service组件。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f869cdae24718975bd86c139b1a4cf4ab5f8872a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Above mentioned is one very common scenario, there are many more use cases of why to use three annotations.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上面提到的是一种非常常见的场景，为什么要使用三个注释的使用案例更多。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e271c23aaca1c5d21764465c2548e1b0ba0791c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Repository&lt;/em&gt; and &lt;em&gt;Service&lt;/em&gt; are children of &lt;em&gt;Component&lt;/em&gt; annotation. So, all of them are &lt;em&gt;Component&lt;/em&gt;. &lt;em&gt;Repository&lt;/em&gt; and &lt;em&gt;Service&lt;/em&gt; just expand it. 
How exactly?
&lt;em&gt;Service&lt;/em&gt; has only ideological difference: we use it for services. &lt;em&gt;Repository&lt;/em&gt; has particular exception handler.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;存储库&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;服务&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;组件&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释的子级。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，它们都是&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Component&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;存储库&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;服务&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;只是将其扩展。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;到底如何 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;服务&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;只有意识形态上的区别：我们将其用于服务。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;存储库&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;具有特定的异常处理程序。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ae222d32c4733e99013c09b00a14f25cb9fd89f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;@Controller&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;@Controller&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fe5c6f1fd0c4469ec22b1b64df1d3f9ce7148e34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;@Controller&lt;/code&gt;&lt;/strong&gt; vs &lt;strong&gt;&lt;code&gt;RestController&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; vs&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;RestController&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d02dda508b6792bef5b289438aab0dae9f34a654" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;@RestController&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;@RestController&lt;/code&gt;&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="24d9897af3ded3ed27b764d17d671273337c87e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;What else?&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;还有什么？&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="02b386ae3ef0df690e5ff6fbaf501f2daa6c5f59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;What&amp;rsquo;s special about @Component&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Component有什么特别之处&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3db920e461fbae37694bbd0baa0837165ffcd644" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;What&amp;rsquo;s special about @Controller?&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Controller有什么特别之处？&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7c947974b0ed3abe583c5d614ea1dae412c1bfd7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;What&amp;rsquo;s special about @Repository?&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Repository有什么特别之处？&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="44531a49d4e8b2e827b3cb7707c16eb31eb8085f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;What&amp;rsquo;s special about @Service?&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Service有什么特别之处？&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="01ccc260c2cb635c23e720d73b05ea5f97b7093a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Component&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@Component&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d71c877c3a78adec6503e4663386504304e2102d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Component&lt;/strong&gt; acts as @Bean annotation in configuration class , register bean in spring context. Also it is parent for @Service, @Repository and @Controller annotation.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Component&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在配置类中充当@Bean批注，在spring上下文中注册bean。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它也是@ Service，@ Repository和@Controller批注的父级。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68a54727ad6cec624faf6b13c4382e35a8734254" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Component&lt;/strong&gt;: you annotate a class &lt;code&gt;@Component&lt;/code&gt;, it tells hibernate that it is a Bean.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Component&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：注释一个类&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它告诉休眠的它是一个Bean。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="08d89f88959bdae44be6a1bb588f2c4224fb6221" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Controller&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@Controller&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7aa7e80f0249d623ecda3e6e3746451017dfda60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Controller&lt;/strong&gt; - acts as controller in MVC pattern. The dispatcher will scan such annotated classes for mapped methods, detecting @RequestMapping annotations.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Controller-充当MVC模式中的控制器。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调度程序将扫描此类带注释的类以查找映射的方法，并检测@RequestMapping注释。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30944fd2fb61d9ebcd45f8a10a490acf26a78223" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Repository&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@Repository&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d59ee6059e619bf4112380bb8ba8a318d31487a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Repository&lt;/strong&gt; - extends @Component annotation and translate all database exceptions into 
&lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/dao/DataAccessException.html&quot;&gt;DataAccessException&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Repository-&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;扩展@Component批注并将所有数据库异常转换为 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/dao/DataAccessException.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DataAccessException&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4c82a84c7e004e5dbf46fdab8620acd39f117766" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Repository&lt;/strong&gt;: you annotate a class &lt;code&gt;@Repository&lt;/code&gt;, it tells hibernate it is a DAO class and treat it as DAO class. Means it makes the unchecked exceptions (thrown from DAO methods) eligible for translation into Spring &lt;code&gt;DataAccessException&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Repository&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：注释一个类&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它告诉休眠状态它是一个DAO类，并将其视为DAO类。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;意味着它使未经检查的异常（从DAO方法抛出）可以转换为Spring &lt;/font&gt;&lt;/font&gt; &lt;code&gt;DataAccessException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="82c18cae0ef756fd2e697fe0e8a89527b3e4afbc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Repository&lt;/strong&gt;&lt;strong&gt;@Service&lt;/strong&gt; and &lt;strong&gt;@Controller&lt;/strong&gt; are serves as specialization of @Component for more specific use on that basis you can replace @Service to @Component but in this case you loose the specialization.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Repository &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Service&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Controller&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用作@Component的特殊化，在此基础上，您可以将@Service替换为@Component，但在这种情况下，您可以松散特殊化。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b0d3443c7a52d182de6b0ed42e9280aef8cad71" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Service, @Controller, @Repository = {@Component + some more special functionality}&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@ Service，@ Controller，@ Repository = {@Component +一些其他特殊功能}&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6521051becbb1d47181a14e3843c1fa624be1400" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Service&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@Service&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="215e20d4b229d51d2aeab8ffaded5b0e314136d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Service&lt;/strong&gt;, extends @Component annotation and has only naming difference.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Service&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;扩展了@Component批注，仅具有命名差异。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b190c46f1884d04aa30c69d70b5df62cc53a9a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@Service&lt;/strong&gt;: This tells hibernate it is a Service class where you will have &lt;code&gt;@Transactional&lt;/code&gt; etc Service layer annotations so hibernate treats it as a Service component.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Service&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：这告诉hibernate这是一个Service类，在其中将具有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Transactional&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;等Service层注释，因此hibernate将其视为Service组件。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d1c0a0bda111c87bc1cbdf4a7e655e8ea734ff4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Difference between @Component, @Repository, @Controller &amp;amp; @Service annotations&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@ Component，@ Repository，@ Controller和@Service批注之间的区别&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="66ac77b04336b73384ca2da9c721255689dc172c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Explanation of stereotypes :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;刻板印象的解释：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cdb7da5140a2c9fbc61635d14ca6e792686c863c" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;&lt;em&gt;Note: If a class is already registered as a bean through any alternate method, like through &lt;code&gt;@Bean&lt;/code&gt; or through &lt;code&gt;@Component&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt; etc... annotations, then &lt;code&gt;@RequestMapping&lt;/code&gt; can be picked if the class is also annotated with &lt;code&gt;@RequestMapping&lt;/code&gt; annotation. But that's a different scenario.&lt;/em&gt;&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注：如果一个类是通过任何替代方法通过已注册为一个bean，像&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Bean&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或通过&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;等...注释，然后&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@RequestMapping&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果类也与注释可挑&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@RequestMapping&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注解。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但这是另一种情况。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="0565cbb19c0f1f95a14173024327464b4109d17e" translate="yes" xml:space="preserve">
          <source>@Component &amp;ndash; generic and can be used across application.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Component &amp;ndash;通用，可以在整个应用程序中使用。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c19cd435b45c7ce39cdcdaceb349ed963c2409e3" translate="yes" xml:space="preserve">
          <source>@Component in Spring</source>
          <target state="translated">@Component in Spring</target>
        </trans-unit>
        <trans-unit id="2ae1ae6a578e4e2d086f153b4357b17a600f401e" translate="yes" xml:space="preserve">
          <source>@Component is a generic stereotype for any Spring managed component.</source>
          <target state="translated">@Component是任何Spring管理的组件的通用定型。</target>
        </trans-unit>
        <trans-unit id="075ba1e63b8499e295328ae654616b3ac457ed4c" translate="yes" xml:space="preserve">
          <source>@Component is a generic stereotype for the components managed by Spring @Repository, @Service, and @Controller are @Component specializations for more specific uses:</source>
          <target state="translated">@Component是Spring所管理的组件的通用定型,@Repository、@Service和@Controller是@Component的专用化,用于更多的特定用途。</target>
        </trans-unit>
        <trans-unit id="6988be0d5c6bb12c0268a4bc1d2d64bbd996e1d7" translate="yes" xml:space="preserve">
          <source>@Component is equivalent to</source>
          <target state="translated">@Component等同于</target>
        </trans-unit>
        <trans-unit id="e189419b60784f6f072701a0112019edf4475523" translate="yes" xml:space="preserve">
          <source>@Component, @ Repository, @ Service, @Controller:</source>
          <target state="translated">@Component,@ Repository,@ Service,@Controller:</target>
        </trans-unit>
        <trans-unit id="8926cf25bf717ea2455a649c055241dbeb16a7c4" translate="yes" xml:space="preserve">
          <source>@Controller &amp;ndash; annotate
  classes at presentation layers level, mainly used in Spring MVC.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Controller &amp;ndash;在表示层级别注释类，主要在Spring MVC中使用。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5a3bb904e5fd4d9f31ad357d460088636f9c191b" translate="yes" xml:space="preserve">
          <source>@Controller for MVC controllers</source>
          <target state="translated">用于MVC控制器的@Controller</target>
        </trans-unit>
        <trans-unit id="4415d372a91efad7a310c7fe84b6c23fa2a9f96c" translate="yes" xml:space="preserve">
          <source>@Controller is specialized annotation which makes the bean MVC aware and allows the use of further annotation like &lt;code&gt;@RequestMapping&lt;/code&gt; and all such</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Controller是专门的注释，它使Bean MVC可以&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@RequestMapping&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并允许使用进一步的注释，例如&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@RequestMapping&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和所有此类&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="217fe57ceff049bd7161c67a27d8dcf3c690ef51" translate="yes" xml:space="preserve">
          <source>@Controller, @Service and @Repository are Specializations of @Component for specific use cases.</source>
          <target state="translated">@Controller、@Service和@Repository是@Component的特殊化,用于特定用例。</target>
        </trans-unit>
        <trans-unit id="1b6ecfeaf188513038146749de2ca33e4f1505ea" translate="yes" xml:space="preserve">
          <source>@Repository &amp;ndash; annotate classes at persistence layer, which will act as
  database repository.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Repository &amp;ndash;在持久层注释类，它将充当数据库存储库。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="34e70a53a8400f32673bc2dbaf054dc1b5f39ea5" translate="yes" xml:space="preserve">
          <source>@Repository for persistence</source>
          <target state="translated">@Repository for persistence</target>
        </trans-unit>
        <trans-unit id="9f87cf278958424bb2ad6c92d0c7bbd86c3ecb94" translate="yes" xml:space="preserve">
          <source>@Service
  &amp;ndash; annotate classes at service layer level.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Service &amp;ndash;在服务层级别注释类。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f44b4afb62ac2bd44fd3a929667646726384ba94" translate="yes" xml:space="preserve">
          <source>@Service for services and transactions</source>
          <target state="translated">服务和交易的@服务</target>
        </trans-unit>
        <trans-unit id="7ba2a28134b3ca42c2c6b345eb1c4e794befe840" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;@Service&lt;/code&gt; to quote spring documentation,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;到报价春天文档，&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91d02755008708aed94833e44e0aeffc9010db7e" translate="yes" xml:space="preserve">
          <source>A REPOSITORY represents all objects of a certain type as a conceptual
  set (usually emulated). It acts like a collection, except with more
  elaborate querying capability. Objects of the appropriate type are
  added and removed, and the machinery behind the REPOSITORY inserts
  them or deletes them from the database. This definition gathers a
  cohesive set of responsibilities for providing access to the roots of
  AGGREGATES from early life cycle through the end.</source>
          <target state="translated">REPOSITORY将某一类型的所有对象作为一个概念集(通常是模拟的)表示。它的作用就像一个集合,除了具有更复杂的查询功能。适当类型的对象被添加和删除,而repository背后的机器会从数据库中插入或删除它们。这个定义收集了一套连贯的职责,从早期的生命周期到最后的AGGREGATES的根底提供访问。</target>
        </trans-unit>
        <trans-unit id="f47b388fe44e5f55543ff7ae7b6a0d924ebef100" translate="yes" xml:space="preserve">
          <source>A SERVICE is an operation offered as an interface that stands alone in
  the model, without encapsulating state, as ENTITIES and VALUE OBJECTS
  do. SERVICES are a common pattern in technical frameworks, but they
  can also apply in the domain layer. The name service emphasizes the
  relationship with other objects. Unlike ENTITIES and VALUE OBJECTS, it
  is defined purely in terms of what it can do for a client. A SERVICE
  tends to be named for an activity, rather than an entity&amp;mdash;a verb rather
  than a noun. A SERVICE can still have an abstract, intentional
  definition; it just has a different flavor than the definition of an
  object. A SERVICE should still have a defined responsibility, and that
  responsibility and the interface fulfilling it should be defined as
  part of the domain model. Operation names should come from the
  UBIQUITOUS LANGUAGE or be introduced into it. Parameters and results
  should be domain objects. SERVICES should be used judiciously and not
  allowed to strip the ENTITIES and VALUE OBJECTS of all their behavior.
  But when an operation is actually an important domain concept, a
  SERVICE forms a natural part of a MODEL-DRIVEN DESIGN. Declared in the
  model as a SERVICE, rather than as a phony object that doesn't
  actually represent anything, the standalone operation will not mislead
  anyone.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SERVICE是作为接口提供的一种操作，在模型中是独立存在的，没有像ENTITIES和VALUE OBJECTS那样封装状态。服务是技术框架中的常见模式，但它们也可以应用于领域层。名称服务强调与其他对象的关系。与ENTITIES和VALUE OBJECTS不同，它纯粹是根据对客户的作用来定义的。 SERVICE倾向于为活动而不是实体命名，是动词而不是名词。服务仍然可以有一个抽象的，有意的定义；它只是具有与对象定义不同的风格。服务仍应具有已定义的职责，并且应将职责和履行该职责的接口定义为域模型的一部分。操作名称应来自UBIQUITOUS语言或引入UBIQUITOUS语言。参数和结果应该是域对象。应谨慎使用服务，不得剥夺其所有行为的实体和值对象。但是，当操作实际上是重要的领域概念时，SERVICE构成了模型驱动设计的自然组成部分。在模型中声明为SERVICE，而不是实际上不代表任何东西的假对象，独立操作不会误导任何人。服务是模型驱动设计的自然组成部分。在模型中声明为SERVICE，而不是实际上不代表任何东西的假对象，独立操作不会误导任何人。服务是模型驱动设计的自然组成部分。在模型中声明为SERVICE，而不是实际上不代表任何东西的假对象，独立操作不会误导任何人。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c8430209be1050ef9c81cf8f55d45b83d428418f" translate="yes" xml:space="preserve">
          <source>A class annotated with &quot;@Repository&quot; has a better translation and readable error handling with org.springframework.dao.DataAccessException. Ideal for implementing components that access data (DataAccessObject or DAO).</source>
          <target state="translated">非常适合实现访问数据的组件(DataAccessObject或DAO)。</target>
        </trans-unit>
        <trans-unit id="6a8649297afe73083d33548e58a5b17638fa4b53" translate="yes" xml:space="preserve">
          <source>All are the same way when you inject them, &lt;strong&gt;@Repository&lt;/strong&gt; it's an interface which apply the implementation for the Repository Pattern &lt;a href=&quot;https://stackoverflow.com/questions/5166888/repository-design-pattern&quot;&gt;Repository design pattern&lt;/a&gt;, generally it's used when you are dealing with some data store or database, and you will find that, it contains multiple ready implementation for you to handle database operations; it can be  &lt;em&gt;CrudRepository&lt;/em&gt;, &lt;em&gt;JpaRepository&lt;/em&gt; etc.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注入它们时，所有方法都是相同的，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Repository&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是一个接口，适用于Repository Pattern &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/5166888/repository-design-pattern&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Repository设计模式的实现&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，通常在处理某些数据存储或数据库时使用，您会发现它包含多个为您处理数据库操作的现成实现；&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它可以是 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CrudRepository&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JpaRepository&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;等。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d5c7ff40a6cd439fca89118f4d3196bdb0da41c" translate="yes" xml:space="preserve">
          <source>An annotated class with &quot;@Controller&quot; plays a controller role in a Spring Web MVC application</source>
          <target state="translated">一个带&quot;@Controller &quot;的注释类在Spring Web MVC应用程序中扮演着控制器的角色。</target>
        </trans-unit>
        <trans-unit id="226f9c7ef04f761d7e503608315d9a02c54ba6ab" translate="yes" xml:space="preserve">
          <source>An annotated class with &quot;@Service&quot; plays a role in business logic services, example Facade pattern for DAO Manager (Facade) and transaction handling</source>
          <target state="translated">带有&quot;@Service &quot;的注解类在业务逻辑服务中扮演着业务逻辑服务的角色,DAO管理器(Facade)和事务处理的示例Facade模式</target>
        </trans-unit>
        <trans-unit id="82eb7fb789cdca7c0796a25ea6eb54cf3fa98997" translate="yes" xml:space="preserve">
          <source>Annotate other components with @Component, for example REST Resource classes.</source>
          <target state="translated">用@Component注释其他组件,例如REST资源类。</target>
        </trans-unit>
        <trans-unit id="438148bac733e4506cfcd03045e90b60cf643030" translate="yes" xml:space="preserve">
          <source>Another thing is that you designate the components semantically to different layers.</source>
          <target state="translated">还有一点就是,你在语义上指定了不同层的组件。</target>
        </trans-unit>
        <trans-unit id="e1c8aad64854b177f2f12eacee87256f59a7539f" translate="yes" xml:space="preserve">
          <source>Apart from the fact that it's used to indicate, that it's holding the business logic, there&amp;rsquo;s nothing else noticeable in this annotation; but who knows, Spring may add some additional exceptional in future.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;除了它用来指示它保持业务逻辑这一事实外，此注释中没有其他值得注意的东西。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是谁知道，Spring将来可能会增加一些额外的例外。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="774e1e57c082c4559eab60f3dc8b0a7778c5aacb" translate="yes" xml:space="preserve">
          <source>As many of the answers already state what these annotations are used for, we'll here focus on some minor differences among them.</source>
          <target state="translated">由于很多答案中已经说明了这些注释是用来做什么的,所以我们在这里重点介绍一下它们之间的一些细微差别。</target>
        </trans-unit>
        <trans-unit id="a96409f0b3e24141f785ed6967bd54c0cee54a7a" translate="yes" xml:space="preserve">
          <source>But spring user these different annotations in different for the specific use, for example:</source>
          <target state="translated">但弹簧用户这些不同的注解在不同的具体用途,比如说。</target>
        </trans-unit>
        <trans-unit id="2e7ed5de866f818fd7632c8378ac9d611c644ab0" translate="yes" xml:space="preserve">
          <source>Can &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Component.html&quot;&gt;&lt;code&gt;@Component&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Repository.html&quot;&gt;&lt;code&gt;@Repository&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Service.html&quot;&gt;&lt;code&gt;@Service&lt;/code&gt;&lt;/a&gt; annotations be used interchangeably in Spring or do they provide any particular functionality besides acting as a notation device?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;灿&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Component.html&quot;&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Repository.html&quot;&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Service.html&quot;&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注解来春季交替使用，还是他们提供任何特殊的功能，除了作为一个符号设备？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="05959bd7bd4046316957d11cac98f16f60eec006" translate="yes" xml:space="preserve">
          <source>Controllers just do stuff like dispatching, forwarding, calling service methods etc.</source>
          <target state="translated">控制器只是做一些事情,比如调度、转发、调用服务方法等。</target>
        </trans-unit>
        <trans-unit id="5f1b1659d1c790ecfe93af1bc16ee886f5f8f7bd" translate="yes" xml:space="preserve">
          <source>Differences between @Component, @Repository, @Controller and @Service</source>
          <target state="translated">@Component、@Repository、@Controller和@Service之间的区别</target>
        </trans-unit>
        <trans-unit id="108530447972b523e2d373bdb632a25c26021ef2" translate="yes" xml:space="preserve">
          <source>Even if we interchange @Component or @Repository or @service</source>
          <target state="translated">即使我们互换@Component或@Repository或@service,也是如此。</target>
        </trans-unit>
        <trans-unit id="fb3e3dc324e182ca9b656d76a3d7ce9de027ff17" translate="yes" xml:space="preserve">
          <source>Finally the &lt;strong&gt;@Component&lt;/strong&gt;, this is the generic form for registered beans in Spring, that's spring is always looking for bean marked with @Component to be registered, then both @Service and @Repository are special cases of @Component, however the common use case for component is when you're making something purely technical not for covering direct business case! like formatting dates or handing special request serialization mechanism and so on.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最后&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Component&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，这是Spring中已注册bean的通用形式，即Spring一直在寻找标记有@Component的bean，然后@Service和@Repository都是@Component的特例，但是是常见的用例当您制作纯粹是技术性的内容而不是涵盖直接业务案例时，就是组件！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如格式化日期或处理特殊请求序列化机制等。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9f0261eacd2baa531daae71e46b0f60617be49df" translate="yes" xml:space="preserve">
          <source>First point worth highlighting again is that &lt;strong&gt;with respect to scan-auto-detection and dependency injection for BeanDefinition&lt;/strong&gt; all these annotations (viz., @Component, @Service,
  @Repository, @Controller) are the same. &lt;strong&gt;We can use one in place
  of another and can still get our way around.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值得再次强调的第一点是，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于BeanDefinition的扫描自动检测和依赖项注入，&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有这些注释（即@ Component，@ Service，@ Repository，@ Controller）都是相同的。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们可以用一个代替另一个，并且仍然可以解决问题。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dae40ac0e6509431287b6fc01d6ddd4f16209179" translate="yes" xml:space="preserve">
          <source>First the &lt;strong&gt;Similarity&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;首先&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相似&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60d63f919d7b29919cbe50d8a11dcefc13043550" translate="yes" xml:space="preserve">
          <source>For example recently I made:</source>
          <target state="translated">比如说最近我做的。</target>
        </trans-unit>
        <trans-unit id="7f633a4de5a6fad5c4d8ba29d7323985965ecde0" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans-stereotype-annotations&quot;&gt;Spring Documentation&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans-stereotype-annotations&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Spring文档&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd6033d5effd839344b23f051f6dad9c015a7e91" translate="yes" xml:space="preserve">
          <source>From the Spring source code:</source>
          <target state="translated">从Spring的源码来看。</target>
        </trans-unit>
        <trans-unit id="c399a887e5a285d63699e02b5d8b941d0e57855a" translate="yes" xml:space="preserve">
          <source>Good enough answers are here to explain the whats-the-difference-between-component-repository-service-annotations. I would like to share the difference between &lt;code&gt;@Controller &amp;amp; @RestController&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这里有足够好的答案来解释组件存储库服务注释之间的区别。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我想分享&lt;/font&gt; &lt;code&gt;@Controller &amp;amp; @RestController&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;之间的区别&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc7f9ea7304fd7a39962300b05ca13d8a3ae0cd5" translate="yes" xml:space="preserve">
          <source>Help developers define a better category for the competent. This categorizing may become helpful in some cases. (For example when you are using &lt;code&gt;aspect-oriented&lt;/code&gt;, these can be a good candidate for &lt;code&gt;pointcuts&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;帮助开发人员为主管人员定义更好的类别。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在某些情况下，这种分类可能会有所帮助。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（例如，当您使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;aspect-oriented&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，这些可能是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;pointcuts&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的不错选择&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d635c1de85cee5ea3af4b392a4b9368f7868551" translate="yes" xml:space="preserve">
          <source>Here @Component is a base annotation for @Service,@Repository and @Controller annotations</source>
          <target state="translated">这里,@Component是@Service、@Repository和@Controller注释的基础注释。</target>
        </trans-unit>
        <trans-unit id="7363505f6a586aa6429740258f3dda2647d3fbc5" translate="yes" xml:space="preserve">
          <source>Here are more &lt;a href=&quot;http://howtodoinjava.com/spring/spring-core/how-to-use-spring-component-repository-service-and-controller-annotations/&quot;&gt;details&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这里有更多&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://howtodoinjava.com/spring/spring-core/how-to-use-spring-component-repository-service-and-controller-annotations/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;细节&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed3b4ac7f21763d162d61f6aa39be3864476bcb1" translate="yes" xml:space="preserve">
          <source>If we add @Repository on top of class then it tells that a class consisting persistence logic</source>
          <target state="translated">如果我们在类的顶部添加@Repository,那么它告诉我们一个由持久化逻辑组成的类</target>
        </trans-unit>
        <trans-unit id="00838cb34513f47aee10b2f69acf45e84c1125a3" translate="yes" xml:space="preserve">
          <source>If we add @Service annotation then it tells that a role of class consisting business logic</source>
          <target state="translated">如果我们添加@Service注解,那么它告诉我们,一个由业务逻辑组成的类的角色</target>
        </trans-unit>
        <trans-unit id="7465ecd9bd3b510352e72b483bfc7d63faa77863" translate="yes" xml:space="preserve">
          <source>If we add the @Component then it tells the role of class is a component class it means it is a class consisting some logic,but it
  does not tell whether a class containing a specifically business or
  persistence or controller logic so we don't use directly this
  @Component annotation</source>
          <target state="translated">如果我们加了@Component,那么它告诉角色类是一个组件类,这意味着它是一个由一些逻辑组成的类,但它并没有告诉我们一个类是否包含具体的业务或持久化或控制器逻辑,所以我们不直接使用这个@Component注解</target>
        </trans-unit>
        <trans-unit id="a288de74244c35de7979dfbbff38f630197ec222" translate="yes" xml:space="preserve">
          <source>If we interchange their place(use &lt;code&gt;@Repository&lt;/code&gt; in place of &lt;code&gt;@Controller&lt;/code&gt;), our application will work fine.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果我们交换它们的位置（使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代替&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;），我们的应用程序将正常运行。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1eb25941af3c497f8a5ce8bd6f65690000953687" translate="yes" xml:space="preserve">
          <source>If you are using spring MVC, the &lt;code&gt;@RequestMapping&lt;/code&gt; can only be added to classes which are annotated by &lt;code&gt;@Controller&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您使用的是Spring MVC，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;则只能将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@RequestMapping&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;添加到由&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释的类&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ebfaeb082fcf318a425dd207d5a1a54a58f44649" translate="yes" xml:space="preserve">
          <source>If you do not use the proper annotations, you may face commit exceptions overridden by rollback transactions. You will see exceptions during stress load test that is related to roll back JDBC transactions.</source>
          <target state="translated">如果你没有使用适当的注释,你可能会面临被回滚事务覆盖的提交异常。在压力负载测试期间,你会看到与回滚JDBC事务相关的异常。</target>
        </trans-unit>
        <trans-unit id="99e6cddbe71afbd4fa8a1d1bba72430392222c97" translate="yes" xml:space="preserve">
          <source>If you look at domain driven design by eric evans,</source>
          <target state="translated">如果你看一下Eric Evans的领域驱动设计。</target>
        </trans-unit>
        <trans-unit id="2d9913d9dc88af8dacca28534e00dbbf0e041820" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;@RestController&lt;/code&gt; you cannot return a view (By using
&lt;code&gt;Viewresolver&lt;/code&gt; in Spring/Spring-Boot)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@RestController&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则无法返回视图（通过&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在Spring / Spring-Boot中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Viewresolver&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8b5dacb446cf84e727c664735181a4440878cdea" translate="yes" xml:space="preserve">
          <source>Imagine if there were only one annotation @Controller, then this component will have dispatching, business logic and accessing database all mixed, so dirty code!</source>
          <target state="translated">试想一下,如果只有一个注解@Controller,那么这个组件就会有调度、业务逻辑和访问数据库的功能混杂在一起,这样的代码太脏了!这时,我们就会发现,这个组件的代码是很脏的。</target>
        </trans-unit>
        <trans-unit id="9343295b80ac0e2bd6b361283d8e53172f671469" translate="yes" xml:space="preserve">
          <source>In Spring 2.0 and later, the &lt;code&gt;@Repository&lt;/code&gt; annotation is a marker for
  any class that fulfills the role or stereotype (also known as Data
  Access Object or DAO) of a repository. Among the uses of this marker
  is the automatic translation of exceptions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在Spring 2.0和更高版本中，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;批注是满足存储库角色或构造型（也称为数据访问对象或DAO）的任何类的标记。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该标记的用途包括自动翻译例外。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8b7350be16af05d3f28297bf4fd50c42a92bb6f5" translate="yes" xml:space="preserve">
          <source>In Spring 4, latest version:</source>
          <target state="translated">在Spring 4的最新版本中,。</target>
        </trans-unit>
        <trans-unit id="d3f07103494a99afd3d9f5749a39ec3f45c77438" translate="yes" xml:space="preserve">
          <source>In Spring &lt;code&gt;@Component&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt;, &lt;code&gt;@Controller&lt;/code&gt;, and &lt;code&gt;@Repository&lt;/code&gt; are Stereotype annotations which are used for:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在Spring &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是它们用于典型化注解：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e3a6348ec28746c35a4737921fc5757d9d481b7f" translate="yes" xml:space="preserve">
          <source>In addition to pointing out, that this is an &lt;em&gt;Annotation based Configuration&lt;/em&gt;, &lt;code&gt;@Repository&lt;/code&gt;&amp;rsquo;s job is to catch platform specific exceptions and re-throw them as one of Spring&amp;rsquo;s unified unchecked exception. For this, we&amp;rsquo;re provided with &lt;code&gt;PersistenceExceptionTranslationPostProcessor&lt;/code&gt;, that we are required to add in our Spring&amp;rsquo;s application context like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;除了指出这是基于&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释的配置外&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的工作是捕获特定于平台的异常，并将它们作为Spring统一的未经检查的异常之一重新抛出。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为此，向我们提供了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;PersistenceExceptionTranslationPostProcessor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，我们需要将其添加到Spring的应用程序上下文中，如下所示：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="795eec8bf0eef1012cfd63fdfb85457f9c4bf930" translate="yes" xml:space="preserve">
          <source>In order to simplify this illustration, let us consider technicality by use case, These annotations are used to be injected and as I said literally &quot;&lt;em&gt;Used to be injected&lt;/em&gt;&quot; , that mean, if you know how to use &lt;strong&gt;Dependency Injection &quot;DI&quot;&lt;/strong&gt;  and you should, then you will always look for these annotations, and by annotating the classes with these &lt;strong&gt;Stereo Types&lt;/strong&gt;, you are informing the &lt;em&gt;DI&lt;/em&gt; container to scan them to be ready for Injection on other places, this is the practical target.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为了简化此说明，让我们按用例考虑技术性，这些注解用于注入，正如我所说的&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用于注入&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rdquo;，也就是说，如果您知道如何使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;依赖注入&amp;ldquo; DI&amp;rdquo;，&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 并且应该，那么您将始终寻找这些注释，并通过使用这些&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Stereo Types&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释这些类&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，来通知&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DI&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;容器对其进行扫描以准备在其他地方进行注入，这是实际的目标。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="990c52936055f05ac08e35c6a319e562e44f0a62" translate="yes" xml:space="preserve">
          <source>In other words, if I have a Service class and I change the annotation from &lt;code&gt;@Service&lt;/code&gt; to &lt;code&gt;@Component&lt;/code&gt;, will it still behave the same way?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;换句话说，如果我有一个Service类，并且将注释从&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更改&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它的行为是否仍将相同？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="46a399d538f354135718b8beec0576afb824eb1a" translate="yes" xml:space="preserve">
          <source>In spring framework provides some special type of annotations,called stereotype annotations.
These are following:-</source>
          <target state="translated">在spring框架中,提供了一些特殊类型的注释,称为定型注释。这些类型如下:-</target>
        </trans-unit>
        <trans-unit id="d0288df0a0caa96be3fb1fcb410d17ac61873da0" translate="yes" xml:space="preserve">
          <source>Indicates that an annotated class is a &quot;&lt;a href=&quot;http://docs.spring.io/spring-framework/docs/2.5.x/api/org/springframework/stereotype/Component.html&quot;&gt;component&lt;/a&gt;&quot;. Such classes are
  considered as candidates for auto-detection when using
  annotation-based configuration and classpath scanning.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指示带注释的类是&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.spring.io/spring-framework/docs/2.5.x/api/org/springframework/stereotype/Component.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;组件&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rdquo;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当使用基于注释的配置和类路径扫描时，此类将被视为自动检测的候选。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="603ae5b24635d9c9cc928a1fbbfc200b44fef9fb" translate="yes" xml:space="preserve">
          <source>Indicates that an annotated class is a &quot;Service&quot;, &lt;strong&gt;originally defined
  by Domain-Driven Design (Evans, 2003) as &quot;an operation offered as an
  interface that stands alone in the model, with no encapsulated state.&quot;&lt;/strong&gt;
  May also indicate that a class is a &quot;Business Service Facade&quot; (in the
  Core J2EE patterns sense), or something similar. This annotation is a
  general-purpose stereotype and individual teams may narrow their
  semantics and use as appropriate.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指示带注释的类是&amp;ldquo;服务&amp;rdquo;，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初由域驱动设计（Evans，2003）定义为&amp;ldquo;作为接口提供的操作，在模型中是独立的，没有封装状态&amp;rdquo;。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 可能还表明某个类是&amp;ldquo;业务服务门面&amp;rdquo;（就核心J2EE模式而言）或类似的内容。此注释是通用的构造型，各个团队可以缩小其语义并适当使用。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1bcf44cc569a33a13c3a571a60f384e0548b094b" translate="yes" xml:space="preserve">
          <source>Indicates that an annotated class is a &quot;component&quot;. Such classes are considered as candidates for auto-detection when using annotation-based configuration and classpath scanning.</source>
          <target state="translated">表示被注释的类是一个 &quot;组件&quot;。当使用基于注释的配置和classpath扫描时,这样的类被认为是自动检测的候选类。</target>
        </trans-unit>
        <trans-unit id="85dfd254c334ad8fc68bd7aa1dcde048bb6a1174" translate="yes" xml:space="preserve">
          <source>It will behave the same , but one aspect is that they wont be able to catch some specific exception related to DAO instead of Repository if we use component or @ service</source>
          <target state="translated">它的行为是一样的,但有一个方面是,如果我们使用组件或@服务,他们将无法捕捉到一些与DAO相关的特定异常,而不是与Repository相关的异常。</target>
        </trans-unit>
        <trans-unit id="6641643e8c8fb510696ea216a90e65385335b9a9" translate="yes" xml:space="preserve">
          <source>Just take a look at &lt;code&gt;@Controller&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt; and &lt;code&gt;@Repository&lt;/code&gt; annotation definitions:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;只需看看&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Service&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;批注定义：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="903bfafcdae2fa0d2a53b0efa2b6858af2cb9337" translate="yes" xml:space="preserve">
          <source>Let's say you want to Monitors the Activity of the DAO Layer only. You will write an Aspect (A class) class that does some logging before and after every method of your DAO is invoked, you are able to do that using AOP as you have three distinct Layers and are not mixed.</source>
          <target state="translated">假设你想只监控DAO层的活动。你将写一个Aspect(A类)类,在DAO的每个方法被调用之前和之后做一些日志记录,你可以使用AOP来实现,因为你有三个不同的Layers,而且不是混合的。</target>
        </trans-unit>
        <trans-unit id="c2629ed734c3a1b852e77ed00f1df23f518f1f94" translate="yes" xml:space="preserve">
          <source>More Detailed View</source>
          <target state="translated">更多详情请看</target>
        </trans-unit>
        <trans-unit id="ebb845500698520391f76f33b840d9410bf39333" translate="yes" xml:space="preserve">
          <source>Now lets move to each one; first &lt;strong&gt;@Service&lt;/strong&gt;, If you are building some logic for specific business case you need to separate that in a place which will contain your business logic, this service is normal Class or you can use it as interface if you want , and it is written like this</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在让我们移动到每个；&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;首先&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Service&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，如果您要为特定的业务案例构建一些逻辑，则需要在包含业务逻辑的地方将其分开，该服务是普通的Class，或者您可以根据需要将其用作接口，并且其编写方式类似于这个&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="235ac4ca12c6e15fd070a83c68746376ccc0ff7f" translate="yes" xml:space="preserve">
          <source>Now you may ask why separate them: (I assume you know AOP-Aspect Oriented Programming)</source>
          <target state="translated">现在你可能会问,为什么要把它们分开?(我想你应该知道AOP-面向未来的程序设计)</target>
        </trans-unit>
        <trans-unit id="0e49e54de73dcdad3023900189208d240b064830" translate="yes" xml:space="preserve">
          <source>One should choose a more specialised form of &lt;code&gt;@Component&lt;/code&gt; while annotating their class as this annotation may contain specific behavior going forward.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在注释其类时，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;应该选择一种更特殊的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;形式，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因为此注释可能包含特定的行为。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fdd116a6947fffa7da31c90c4e34c869835628f6" translate="yes" xml:space="preserve">
          <source>One thing that &lt;code&gt;@Component&lt;/code&gt; offers is that you can annotate other annotations with it, and then use them the same way as &lt;code&gt;@Service&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;提供的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一件事&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是，您可以用它注释其他注释，然后以与&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相同的方式使用它们&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d31650711bf9f2dafab41426e9e398c7d17c0a5a" translate="yes" xml:space="preserve">
          <source>Or does the annotation also influence the behavior and functionality of the class?</source>
          <target state="translated">还是注解也会影响到类的行为和功能?</target>
        </trans-unit>
        <trans-unit id="a06c6eb35e880fc6c2fdd09687a380413e6a28fa" translate="yes" xml:space="preserve">
          <source>Originally answered &lt;a href=&quot;https://stackoverflow.com/questions/16051656/advantages-of-using-spring-stereotypes/16105106#16105106&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原来&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/16051656/advantages-of-using-spring-stereotypes/16105106#16105106&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在这里&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;回答&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6262057e07ae846d043a86d7e9fee68034d9861" translate="yes" xml:space="preserve">
          <source>Other class-level annotations may be considered as identifying a
  component as well, typically a special kind of component: e.g. the
  @Repository annotation or AspectJ's @Aspect annotation.</source>
          <target state="translated">其他类级注释也可以被认为是识别组件,典型的是一种特殊的组件:例如@Repository注释或AspectJ的@Aspect注释。</target>
        </trans-unit>
        <trans-unit id="0c3bd2feae7e8a7044ad1d68132cdba2cae4dd29" translate="yes" xml:space="preserve">
          <source>Plus &lt;code&gt;@Service&lt;/code&gt; is advance of &lt;code&gt;@Component&lt;/code&gt;. Assume the bean class name is &lt;code&gt;CustomerService&lt;/code&gt;, since you did not choose XML bean configuration way so you annotated the bean with &lt;code&gt;@Component&lt;/code&gt; to indicate it as a Bean. So while getting the bean object &lt;code&gt;CustomerService cust = (CustomerService)context.getBean(&quot;customerService&quot;);&lt;/code&gt; By default, Spring will lower case the first character of the component &amp;ndash; from &amp;lsquo;CustomerService&amp;rsquo; to &amp;lsquo;customerService&amp;rsquo;. And you can retrieve this component with name &amp;lsquo;customerService&amp;rsquo;.
But if you use &lt;code&gt;@Service&lt;/code&gt; annotation for the bean class you can provide a specific bean name by</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;加&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进步&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。假设Bean类的名称为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;CustomerService&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，因为您没有选择XML Bean的配置方式，所以您使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释了该Bean以&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将其表示为Bean。因此，在获取bean对象&lt;/font&gt;&lt;/font&gt; &lt;code&gt;CustomerService cust = (CustomerService)context.getBean(&quot;customerService&quot;);&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;默认情况下，Spring将小写组件的第一个字符-从'CustomerService'到'customerService'。您可以使用名称&amp;ldquo; customerService&amp;rdquo;检索此组件。但是，如果&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对bean类&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;批注，则可以通过以下方式提供特定的bean名称：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="97b6f37b8647002ac0f4d19689972c444a6cc418" translate="yes" xml:space="preserve">
          <source>Purpose of each annotation:</source>
          <target state="translated">每项说明的目的:</target>
        </trans-unit>
        <trans-unit id="5c33ac0525673af29e43ddf85d13630c95db59c2" translate="yes" xml:space="preserve">
          <source>Referring to &lt;code&gt;JSR-330&lt;/code&gt;, which is now supported by spring, you can only use &lt;code&gt;@Named&lt;/code&gt; to define a bean (Somehow &lt;code&gt;@Named=@Component&lt;/code&gt;). So according to this standard, there seems that there is no use to define stereotypes (like &lt;code&gt;@Repository&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt;, &lt;code&gt;@Controller&lt;/code&gt;) to categories beans.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参考&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSR-330&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（现在受spring支持），您只能使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Named&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义一个bean（Somehow &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Named=@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所以，按照这一标准，似乎是没有用定义刻板印象（比如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）至类别豆类。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="685dc316b07cd5f694d0845b3fd6ec857a538dd4" translate="yes" xml:space="preserve">
          <source>Repository are the DAOs (Data Access Objects), they access the database directly.</source>
          <target state="translated">Repository是DAO(数据访问对象),它们直接访问数据库。</target>
        </trans-unit>
        <trans-unit id="e147f1fe24ee57f9f37f6dc9c7383254c93bd48f" translate="yes" xml:space="preserve">
          <source>Service Hold business Logic, Calculations etc.</source>
          <target state="translated">服役持有业务逻辑学、计算等。</target>
        </trans-unit>
        <trans-unit id="e2d186594b1e6d077235fcfdef486079382c759e" translate="yes" xml:space="preserve">
          <source>Similar to above, in the future Spring may add special functionalities for &lt;code&gt;@Service&lt;/code&gt;, &lt;code&gt;@Controller&lt;/code&gt; and &lt;code&gt;@Repository&lt;/code&gt; based on their layering conventions. Hence, it's always a good idea to respect the convention and use it in line with layers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与上述类似，在未来的春天可以用于增加特殊功能&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;基于其分层约定。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，遵守约定并与层配合使用始终是一个好主意。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="426f653b4b02591f9400e218877d98d88ef2cf85" translate="yes" xml:space="preserve">
          <source>So all classes annotated with &lt;code&gt;@ScheduledJob&lt;/code&gt; are spring beans and in addition to that are registered as quartz jobs. You just have to provide code that handles the specific annotation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，所有带有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@ScheduledJob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释的类&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;都是spring bean，除此之外，它们都注册为石英作业。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您只需要提供处理特定注释的代码即可。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="94f5ef83d953e16e3fc387e0969a50cac858275e" translate="yes" xml:space="preserve">
          <source>So you can do logging of DAO  &quot;around&quot;, &quot;before&quot; or &quot;after&quot; the DAO methods. You could do that because you had a DAO in the first place. What you just achieved is &lt;strong&gt;Separation of concerns or tasks.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，您可以在DAO方法&amp;ldquo;前后&amp;rdquo;，&amp;ldquo;之前&amp;rdquo;或&amp;ldquo;之后&amp;rdquo;记录DAO。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以这样做，因为首先要有一个DAO。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您刚刚实现的是&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关注点或任务分离。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1c1d2586129c5e43b746ba3d3c2d74b7668fa20f" translate="yes" xml:space="preserve">
          <source>Special type annotations are also scanned, because they themselves are annotated with &lt;code&gt;@Component&lt;/code&gt; annotation, which means they are also &lt;code&gt;@Component&lt;/code&gt;s. If we define our own custom annotation and annotate it with &lt;code&gt;@Component&lt;/code&gt;, it will also get scanned with &lt;code&gt;&amp;lt;context:component-scan&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;还扫描特殊类型的注释，因为它们本身使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释进行注释，这意味着它们也是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果我们定义自己的自定义注释并使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对其进行&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则还将使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;context:component-scan&amp;gt;&lt;/code&gt; 对其进行扫描</target>
        </trans-unit>
        <trans-unit id="13138bde579f40373313fd0ba397b74463f24bd5" translate="yes" xml:space="preserve">
          <source>Spring 2.5 introduces further stereotype annotations: &lt;code&gt;@Component&lt;/code&gt;,
  &lt;code&gt;@Service&lt;/code&gt;, and &lt;code&gt;@Controller&lt;/code&gt;. &lt;code&gt;@Component&lt;/code&gt; is a generic stereotype for any
  Spring-managed component. &lt;code&gt;@Repository&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt;, and &lt;code&gt;@Controller&lt;/code&gt; are
  specializations of &lt;code&gt;@Component&lt;/code&gt; for more specific use cases, for
  example, in the persistence, service, and presentation layers,
  respectively.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Spring 2.5引入了更多的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;型注释：&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Component&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;， &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Controller&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是任何Spring托管组件的通用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;型。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Controller&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; 的特化,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用于更具体的用例，例如分别在持久层，服务层和表示层中。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0d6a36819b19fd7dcb56550f70df1216a3e250f9" translate="yes" xml:space="preserve">
          <source>Spring 2.5 introduces further stereotype annotations: @Component, @Service and @Controller. @Component serves as a generic stereotype for any Spring-managed component; whereas, @Repository, @Service, and @Controller serve as specializations of @Component for more specific use cases (e.g., in the persistence, service, and presentation layers, respectively). What this means is that you can annotate your component classes with @Component, but by annotating them with @Repository, @Service, or @Controller instead, your classes are more properly suited for processing by tools or associating with aspects. For example, these stereotype annotations make ideal targets for pointcuts. Of course, it is also possible that @Repository, @Service, and @Controller may carry additional semantics in future releases of the Spring Framework. Thus, if you are making a decision between using @Component or @Service for your service layer, @Service is clearly the better choice. Similarly, as stated above, @Repository is already supported as a marker for automatic exception translation in your persistence layer.</source>
          <target state="translated">Spring 2.5引入了进一步的立体化注释。@Component、@Service和@Controller。@Component作为任何Spring管理的组件的通用定型;而@Repository、@Service和@Controller则作为@Component的特殊化,用于更多的特定用例(例如,分别在持久化层、服务层和展现层)。这意味着,你可以用@Component来注释你的组件类,但通过用@Repository、@Service或@Controller来注释它们,你的类更适合被工具处理或与方面关联。例如,这些定型注解可以成为点捷径的理想目标。当然,@Repository、@Service和@Controller也有可能在Spring框架的未来版本中携带额外的语义。因此,如果你要在服务层使用@Component还是@Service之间做决定,显然@Service是更好的选择。同样,如上文所述,@Repository已经被支持为你的持久化层中的自动异常转换标记。</target>
        </trans-unit>
        <trans-unit id="4c8f97fe823731da56120c1a0479f249b978d9eb" translate="yes" xml:space="preserve">
          <source>Spring provides four different types of auto component scan annotations, they are &lt;code&gt;@Component&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt;, &lt;code&gt;@Repository&lt;/code&gt; and &lt;code&gt;@Controller&lt;/code&gt;. Technically, there is no difference between them, but every auto component scan annotation should be used for a special purpose and within the defined layer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Spring提供了四种不同类型的汽车零部件扫描注释，它们是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从技术上讲，它们之间没有区别，但是每个自动组件扫描注释都应用于特定目的并在定义的层内使用。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e47ccbf053a0ec52f68e06b21639f47966082e4" translate="yes" xml:space="preserve">
          <source>Spring provides further stereotype annotations: @Component, @Service,
  and @Controller. @Component is a generic stereotype for any
  Spring-managed component. @Repository, @Service, and @Controller are
  specializations of @Component for more specific use cases, for
  example, in the persistence, service, and presentation layers,
  respectively. Therefore, you can annotate your component classes with
  @Component, but by annotating them with @Repository, @Service, or
  @Controller instead, your classes are more properly suited for
  processing by tools or associating with aspects. For example, these
  stereotype annotations make ideal targets for pointcuts. It is also
  possible that @Repository, @Service, and @Controller may carry
  additional semantics in future releases of the Spring Framework. Thus,
  if you are choosing between using @Component or @Service for your
  service layer, @Service is clearly the better choice. Similarly, as
  stated above, @Repository is already supported as a marker for
  automatic exception translation in your persistence layer.</source>
          <target state="translated">Spring提供了进一步的立体化注释。@Component,@Service,和 @Controller。@Component是用于任何Spring管理的组件的通用定型。@Repository、@Service和@Controller是@Component的特殊化,用于更多的特定用例,例如,在持久化层、服务层和展现层。因此,你可以用@Component来注解你的组件类,但通过用@Repository、@Service或@Controller来代替@Repository、@Service或@Controller来注解它们,你的类更适合被工具处理或与方面关联。例如,这些定型注解可以成为点捷径的理想目标。在Spring框架的未来版本中,@Repository、@Service和@Controller也有可能携带额外的语义。因此,如果你在服务层中选择使用@Component还是@Service,显然@Service是更好的选择。同样,如上所述,@Repository已经被支持为你的持久化层中的自动异常转换标记。</target>
        </trans-unit>
        <trans-unit id="2af2883cda90ae2aabcf36bb1d742fa55939ea53" translate="yes" xml:space="preserve">
          <source>Technically &lt;code&gt;@Controller&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt;, &lt;code&gt;@Repository&lt;/code&gt; are all same. All of them extends &lt;code&gt;@Component&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从技术上讲&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@ &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Repository&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;都是相同的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它们都扩展了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3450da4a4365327d7d93ea1ed7f17670543838e4" translate="yes" xml:space="preserve">
          <source>That mean Service, The Controller and Repository are functionally the same.</source>
          <target state="translated">这意味着Service、The Controller和Repository在功能上是一样的。</target>
        </trans-unit>
        <trans-unit id="0229edf27680c26ff671b29e914c64208980be53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@Controller&lt;/code&gt; annotation indicates that a particular class serves the role of a controller. The &lt;code&gt;@Controller&lt;/code&gt; annotation acts as a stereotype for the annotated class, indicating its role.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注解表明特定类供应控制器的作用。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释充当带注释的类&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;型，指示其作用。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="533fb10976bc2fbd348b95363b3eebc5b25e7b10" translate="yes" xml:space="preserve">
          <source>The @Repository annotation is a marker for any class that fulfills the
  role or stereotype of a repository (also known as Data Access Object
  or DAO). Among the uses of this marker is the automatic translation of
  exceptions as described in Section 20.2.2, &amp;ldquo;Exception translation&amp;rdquo;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Repository批注是实现存储库的角色或构造型的任何类（也称为数据访问对象或DAO）的标记。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如第20.2.2节&amp;ldquo;异常转换&amp;rdquo;中所述，此标记的用途是自动转换异常。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="900ecd692d24a5c797f10bc27ca6905fadfb0704" translate="yes" xml:space="preserve">
          <source>The main purpose of using three different &lt;code&gt;@annotations&lt;/code&gt; is to provide better Modularity to the Enterprise application.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用三种不同的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@annotations&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的主要目的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是为Enterprise应用程序提供更好的模块化。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa530228a9750a5c455b2162199e35549007bf86" translate="yes" xml:space="preserve">
          <source>The three annotations are used to separate &lt;strong&gt;&quot;Layers&quot;&lt;/strong&gt; in your application,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这三个注释用于&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在应用程序中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;分隔&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;层&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4bf4bb5c5fdc69be38378fc9b78403ba1c199156" translate="yes" xml:space="preserve">
          <source>There is no difference between &lt;code&gt;@Component&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt;, &lt;code&gt;@Controller&lt;/code&gt;, &lt;code&gt;@Repository&lt;/code&gt;.
&lt;code&gt;@Component&lt;/code&gt; is the Generic annotation to represent the component of our MVC. But there will be several components as part of our MVC application like service layer components, persistence layer components and presentation layer components. So to differentiate them Spring people have given the other three annotations also.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有没有什么区别&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是表示我们MVC组件的通用注释。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，作为我们MVC应用程序的一部分，将有几个组件，例如服务层组件，持久层组件和表示层组件。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，为了区分它们，Spring人们还给出了其他三个注释。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d40a885a98ab77cf143237e07c7ff23a62fee425" translate="yes" xml:space="preserve">
          <source>Therefore, you can annotate your component classes with &lt;code&gt;@Component&lt;/code&gt;,
  but by annotating them with &lt;code&gt;@Repository&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt;, or &lt;code&gt;@Controller&lt;/code&gt;
  instead, your classes are more properly suited for processing by tools
  or associating with aspects. For example, these stereotype annotations
  make ideal targets for pointcuts.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，您可以使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释组件类&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但是可以使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Controller&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释组件类，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这些&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 类更适合于通过工具进行处理或与方面相关联。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如，这些构造型注释成为切入点的理想目标。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="058eac42dd2f1563bae1c74a367ecbd5fb342e14" translate="yes" xml:space="preserve">
          <source>These are all StereoType annotations.this are usefull for the making our classes as spring beans in ioc container,</source>
          <target state="translated">这些都是StereoType的注释,这对于在ioc容器中把我们的类做成spring beans是很有用的。</target>
        </trans-unit>
        <trans-unit id="9ea8e1c357fb5f85e91ae49d1be94f92a6e71d20" translate="yes" xml:space="preserve">
          <source>They are almost the same - all of them mean that the class is a Spring bean. &lt;code&gt;@Service&lt;/code&gt;, &lt;code&gt;@Repository&lt;/code&gt; and &lt;code&gt;@Controller&lt;/code&gt; are specialized &lt;code&gt;@Component&lt;/code&gt;s. You can choose to perform specific actions with them. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它们几乎相同-所有这些都意味着该类是Spring bean。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Controller&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是专用的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以选择对它们执行特定的操作。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de905c43b0b2db7baa533c33546ac95732270a99" translate="yes" xml:space="preserve">
          <source>This annotation is a specialized version of &lt;code&gt;@Controller&lt;/code&gt; which adds
&lt;code&gt;@Controller&lt;/code&gt; and &lt;code&gt;@ResponseBody&lt;/code&gt; annotation automatically. so we do not have to add &lt;code&gt;@ResponseBody&lt;/code&gt; to our mapping methods. That means
&lt;code&gt;@ResponseBody&lt;/code&gt; is default active.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此注释是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的专用版本，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它会&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自动&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;添加 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@ResponseBody&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此我们不必&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在映射方法中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;添加&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@ResponseBody&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这意味着 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@ResponseBody&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;默认为活动状态。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad914a8e008667b3f088395a61125ea2021b0679" translate="yes" xml:space="preserve">
          <source>This bean post processor adds an advisor to any bean that&amp;rsquo;s annotated with &lt;code&gt;@Repository&lt;/code&gt; so that any platform-specific exceptions are caught and then re-thrown as one of Spring&amp;rsquo;s unchecked data access exceptions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这个bean后处理器将顾问程序添加到任何使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释的bean，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以便捕获任何特定于平台的异常，然后将它们重新抛出为Spring的未经检查的数据访问异常之一。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dfd7db7acb2d6fc63a6f62d3d5b6144a16676402" translate="yes" xml:space="preserve">
          <source>This is a general-purpose stereotype annotation indicating that the class is a spring component.</source>
          <target state="translated">这是一个通用的定型注释,表示该类是一个弹簧组件。</target>
        </trans-unit>
        <trans-unit id="29446177a2ee21e508666cc155eefb09a624a7e7" translate="yes" xml:space="preserve">
          <source>This is to indicate that the class defines a data repository.</source>
          <target state="translated">这是为了表示该类定义了一个数据存储库。</target>
        </trans-unit>
        <trans-unit id="99a7f349c5d5d0a3edcbffea295e6e3e4fdda6c3" translate="yes" xml:space="preserve">
          <source>Thus, if you are choosing between using &lt;code&gt;@Component&lt;/code&gt; or &lt;code&gt;@Service&lt;/code&gt; for
  your service layer, &lt;code&gt;@Service&lt;/code&gt; is clearly the better choice. Similarly,
  as stated above, &lt;code&gt;@Repository&lt;/code&gt; is already supported as a marker for
  automatic exception translation in your persistence layer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，如果&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在服务层&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之间进行选择&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;显然是更好的选择。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同样，如上所述，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;已被支持作为持久层中自动异常转换的标记。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a3c5bd3d66266193b40ff5b6c65f686b1bcdc89" translate="yes" xml:space="preserve">
          <source>Thus, it&amp;rsquo;s not wrong to say that &lt;code&gt;@Controller&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt; and &lt;code&gt;@Repository&lt;/code&gt; are special types of &lt;code&gt;@Component&lt;/code&gt; annotation. &lt;code&gt;&amp;lt;context:component-scan&amp;gt;&lt;/code&gt; picks them up and registers their following classes as beans, just as if they were annotated with &lt;code&gt;@Component&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，说&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Service&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;批注的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;特殊类型是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;没有错的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;context:component-scan&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;拾取它们并将其以下类注册为bean，就像它们使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进行注释一样&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d69d4160a585819959849c4eab806d317481f0d" translate="yes" xml:space="preserve">
          <source>To represent persistence layer components: &lt;code&gt;@Repository&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;表示持久层组件：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ead03f90db54e666450ff5accb8191e98e8faf2f" translate="yes" xml:space="preserve">
          <source>To represent presentation layer components: &lt;code&gt;@Controller&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;表示表示层组件：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84f553135d1580aab45e503274f77780d545545a" translate="yes" xml:space="preserve">
          <source>To represent service layer components: &lt;code&gt;@Service&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;表示服务层组件：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2000222464e633cfff2ab4ceb90805664f7f5cec" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;@Repository&lt;/code&gt; for all your stored proc DB connections</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对所有存储的proc DB连接&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5c1728a39750ffa3f74da82312bfc52d8e3e74c7" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;@Service&lt;/code&gt; for all your web service type of DB connections</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用于所有Web服务类型的数据库连接&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc984e733a64481ce8437080e217ab61c76e668e" translate="yes" xml:space="preserve">
          <source>Use of &lt;code&gt;@Service&lt;/code&gt; and &lt;code&gt;@Repository&lt;/code&gt; annotations are important from database connection perspective.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注解是从数据库连接的角度很重要。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="395a1505737478df9357bdcff0d4b671ab87cde1" translate="yes" xml:space="preserve">
          <source>We can answer this according to java standard</source>
          <target state="translated">我们可以根据java标准来回答</target>
        </trans-unit>
        <trans-unit id="512d97efffc0e0cfedd41715bd27b58f51ad13f2" translate="yes" xml:space="preserve">
          <source>We can directly use &lt;code&gt;@Component&lt;/code&gt; for each and every bean, but for better understanding and maintainability of a large application, we use &lt;code&gt;@Controller&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt;, &lt;code&gt;@Repository&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们可以直接使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于每个bean，但为了更好地理解和大型应用程序的可维护性，我们使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="350545f8a4491c80a200eba5f89f14af6638afce" translate="yes" xml:space="preserve">
          <source>We cannot switch this annotation with any other like &lt;code&gt;@Service&lt;/code&gt; or &lt;code&gt;@Repository&lt;/code&gt;, even though they look same. 
The dispatcher scans the classes annotated with &lt;code&gt;@Controller&lt;/code&gt; and detects methods annotated with &lt;code&gt;@RequestMapping&lt;/code&gt; annotations within them. We can use &lt;code&gt;@RequestMapping&lt;/code&gt; on/in only those methods whose classes are annotated with &lt;code&gt;@Controller&lt;/code&gt; and it will &lt;strong&gt;NOT&lt;/strong&gt; work with &lt;code&gt;@Component&lt;/code&gt;, &lt;code&gt;@Service&lt;/code&gt;, &lt;code&gt;@Repository&lt;/code&gt; etc...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;即使它们看起来相同，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们也无法将其与&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; 之&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类的任何其他对象切换&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。调度程序扫描用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释的类，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在其中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;检测用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@RequestMapping&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释注释的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。我们可以使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@RequestMapping&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上/只，其类注释与方法&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它会&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与工作&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;等..&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="987a0f0b1f106a0619a7eb85604b381949c7a0f7" translate="yes" xml:space="preserve">
          <source>What's the difference between @Component, @Repository &amp; @Service annotations in Spring</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Spring中的@ Component，@ Repository和@Service批注有什么区别&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cefd45d96e7811a0c9b997ad8106965b84732c2a" translate="yes" xml:space="preserve">
          <source>Why use @Repository, @Service, @Controller over @Component?
We can mark our component classes with @Component, but if instead we use the alternative that adapts to the expected functionality. Our classes are better suited to the functionality expected in each particular case.</source>
          <target state="translated">为什么要用@Repository、@Service、@Controller而不是@Component?我们可以用@Component来标记我们的组件类,但如果用@Component来代替,我们可以使用适应预期的功能。我们的类更适合于每个特定情况下的预期功能。</target>
        </trans-unit>
        <trans-unit id="4330aa1f435a8813e33467c458b9c523669cfb79" translate="yes" xml:space="preserve">
          <source>above declared annotations are special because when we add &lt;code&gt;&amp;lt;context:component-scan&amp;gt;&lt;/code&gt; into xxx-servlet.xml file ,spring will automatically create the object of those classes which are annotated with above annotation during context creation/loading phase.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上面声明的注释是特殊的，因为当我们&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在xxx-servlet.xml文件中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;添加&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;context:component-scan&amp;gt;&lt;/code&gt; 时&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，spring将在上下文创建/加载阶段自动创建那些带有以上注释的类的对象。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e564121cda727185523b754490351a631d26c406" translate="yes" xml:space="preserve">
          <source>all these annotations are type of stereo type type of annotation,the difference between these three annotations are</source>
          <target state="translated">所有这些注释都是立体类型的注释,这三种注释之间的区别是</target>
        </trans-unit>
        <trans-unit id="18f4b81d4f3a4621f6153578c2a46358cc403380" translate="yes" xml:space="preserve">
          <source>and a &lt;code&gt;Repository&lt;/code&gt; as per Eric Evans,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以及&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Eric Evans &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Repository&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db875ee55092e2c0f3365edd019bd8c053b32ca1" translate="yes" xml:space="preserve">
          <source>and you can get the bean object by</source>
          <target state="translated">而你可以通过以下方式获得Bean对象</target>
        </trans-unit>
        <trans-unit id="7e2fb968a45f3910e02ba7ce0b0ea0809f985cc3" translate="yes" xml:space="preserve">
          <source>for example</source>
          <target state="translated">比如说</target>
        </trans-unit>
        <trans-unit id="3e13d8fce6fc1b32339adca9dc15bc225249e64d" translate="yes" xml:space="preserve">
          <source>or else you can use &lt;code&gt;@Component&lt;/code&gt; for all of them.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;否则，您可以&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对所有它们&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ab2c9bc11b9d93d73219ddd793d8bd6c8060c0db" translate="yes" xml:space="preserve">
          <source>reference :- &lt;a href=&quot;https://docs.spring.io/spring/docs/3.0.0.M3/reference/html/ch04s12.html&quot;&gt;Spring Documentation - Classpath scanning, managed components and writing configurations using Java &lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参考：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.spring.io/spring/docs/3.0.0.M3/reference/html/ch04s12.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-Spring文档-类路径扫描，托管组件和使用Java编写配置&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ef3608f431d68a9480040ab93b4dc1c90c79240" translate="yes" xml:space="preserve">
          <source>whenever we adds the &lt;code&gt;@Service&lt;/code&gt; or &lt;code&gt;@Repositroy&lt;/code&gt; or &lt;code&gt;@Controller&lt;/code&gt; annotation by default &lt;code&gt;@Component&lt;/code&gt; annotation is going to existence on top of the class</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每当我们&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;默认情况下&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;添加&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Service&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Repositroy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Controller&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释时，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Component&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释将存在于类顶部&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
