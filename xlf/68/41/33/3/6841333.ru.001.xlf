<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/6841333">
    <body>
      <group id="6841333">
        <trans-unit id="bd1451938716cbc1c8094ba21225f6bd6718e890" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Java_version_history#Java_SE_6_.28December_11.2C_2006.29&quot;&gt;JDK 6&lt;/a&gt; two years ago, and in &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_version_history#Java_SE_7_.28July_28.2C_2011.29&quot;&gt;JDK 7&lt;/a&gt; just recently in &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_version_history#cite_note-131&quot;&gt;update 25&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Java_version_history#Java_SE_6_.28December_11.2C_2006.29&quot;&gt;JDK 6&lt;/a&gt; два года назад, а в &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_version_history#Java_SE_7_.28July_28.2C_2011.29&quot;&gt;JDK 7&lt;/a&gt; совсем недавно в &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_version_history#cite_note-131&quot;&gt;обновлении 25&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fe67aa701548fdd40c1b0265468a45f72b73f1df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT:&lt;/strong&gt; History has changed again...</source>
          <target state="translated">&lt;strong&gt;РЕДАКТИРОВАТЬ:&lt;/strong&gt; История снова изменилась ...</target>
        </trans-unit>
        <trans-unit id="0551d19941d120adfb039f0ae92f8a04f20e3128" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT:&lt;/strong&gt; Stop press! History changes...</source>
          <target state="translated">&lt;strong&gt;РЕДАКТИРОВАТЬ:&lt;/strong&gt; Стоп нажмите! История меняется ...</target>
        </trans-unit>
        <trans-unit id="bde921caecc04f466d2c822ea74545f52d552b7c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT:&lt;/strong&gt; To answer a question around a transition at 1900... it looks like the Java timezone implementation treats &lt;em&gt;all&lt;/em&gt; time zones as simply being in their standard time for any instant before the start of 1900 UTC:</source>
          <target state="translated">&lt;strong&gt;РЕДАКТИРОВАТЬ:&lt;/strong&gt; Чтобы ответить на вопрос о переходе в 1900 году ... похоже, что реализация часового пояса Java обрабатывает &lt;em&gt;все&lt;/em&gt; часовые пояса как просто в их стандартное время в любой момент до начала 1900 UTC:</target>
        </trans-unit>
        <trans-unit id="a97cec64d39b8eb010cdc08b8e103d0bb8477c86" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;It's better to use UTC where time doesn't change unless if needed to use non-UTC time like in display.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Лучше использовать UTC, где время не меняется, если только не нужно использовать время не UTC, как на дисплее.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d54617ac5dccf99b7c02c39453136d7473a3a634" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Java version:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Версия Java:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad49472f83852737eae406aca91cdf31a2059cf4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The output is:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Выход:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1902350e92496ff9e18c5813a36700a28a11fa42" translate="yes" xml:space="preserve">
          <source>Also, these two offsets are the same:</source>
          <target state="translated">Кроме того,эти два смещения одинаковы:</target>
        </trans-unit>
        <trans-unit id="0c0cfe54c8369a97a25846fb4b86d04a36d5e3f0" translate="yes" xml:space="preserve">
          <source>And then see that the result is:</source>
          <target state="translated">А потом посмотрим,что получится:</target>
        </trans-unit>
        <trans-unit id="858ee0b7325db3da2f9d26de1bb98beb63ac41f3" translate="yes" xml:space="preserve">
          <source>Another way to approach this is to check whether there's a transition going on. We can do this like this:</source>
          <target state="translated">Другой способ подойти к этому-проверить,происходит ли переход.Мы можем сделать это вот так:</target>
        </trans-unit>
        <trans-unit id="98e8bfb3f4d507059ac54e043de58cc5443b82ee" translate="yes" xml:space="preserve">
          <source>As explained by others, there's a time discontinuity there. There are two possible timezone offsets for &lt;code&gt;1927-12-31 23:54:08&lt;/code&gt; at &lt;code&gt;Asia/Shanghai&lt;/code&gt;, but only one offset for &lt;code&gt;1927-12-31 23:54:07&lt;/code&gt;. So, depending on which offset is used, there's either a one second difference or a 5 minutes and 53 seconds difference.</source>
          <target state="translated">Как объяснили другие, там есть временной разрыв. Существует два возможных смещения &lt;code&gt;1927-12-31 23:54:08&lt;/code&gt; для 1927-12-31 23:54:08 в &lt;code&gt;Asia/Shanghai&lt;/code&gt; , но только одно смещение для &lt;code&gt;1927-12-31 23:54:07&lt;/code&gt; . Таким образом, в зависимости от того, какое смещение используется, разница составляет либо одну секунду, либо разницу 5 и 53 секунды.</target>
        </trans-unit>
        <trans-unit id="4fc8c3099313e3b540718692a541892bd6628f60" translate="yes" xml:space="preserve">
          <source>As others said, it's a time change in 1927 in Shanghai.</source>
          <target state="translated">Как говорили другие,в 1927 году в Шанхае время изменилось.</target>
        </trans-unit>
        <trans-unit id="92ab96205c8f86e70f3ccdccb518bf64a18fd635" translate="yes" xml:space="preserve">
          <source>But there is something different about these two time changes. The latter changes continuously and the former was just a change. It didn't change back or change again by the same amount.</source>
          <target state="translated">Но есть кое-что другое в этих двух временных изменениях.Последнее меняется постоянно,и первое было просто изменением.Оно не меняется обратно и не меняется снова на ту же самую величину.</target>
        </trans-unit>
        <trans-unit id="f514b433b60960e9cff044c9d2fa1237ffb4ac2d" translate="yes" xml:space="preserve">
          <source>But these two are different:</source>
          <target state="translated">Но эти двое разные:</target>
        </trans-unit>
        <trans-unit id="e4d76851ab235c8fb1be42a6df2c235bb2b681eb" translate="yes" xml:space="preserve">
          <source>I hope this helps people handle this sort of issue once Java 8 becomes widely available, or to those using Java 7 who adopt the JSR 310 backport.</source>
          <target state="translated">Надеюсь,это поможет людям справиться с подобной проблемой после того,как Java 8 станет широко доступной,или тем,кто использует Java 7,кто принимает бэкпорт JSR 310.</target>
        </trans-unit>
        <trans-unit id="a72d9ab2a0ed8923c9ba597f62e9bc18d91da876" translate="yes" xml:space="preserve">
          <source>I mean, come on, aren't global static variables an anti-OO pattern? Nothing else is those pervasive defaults given by some rudimentary environment variables.......</source>
          <target state="translated">Да ладно,разве глобальные статические переменные не являются анти-OO шаблоном? Ничто другое не является теми повсеместными значениями по умолчанию,которые даны некоторыми рудиментарными переменными окружения.............</target>
        </trans-unit>
        <trans-unit id="066199f064ebb3cc500e664941df954942936266" translate="yes" xml:space="preserve">
          <source>I only noticed this because I'm collecting questions like this in Noda Time, in the form of &lt;a href=&quot;https://github.com/nodatime/nodatime/blob/master/src/NodaTime.Demo/StackOverflowExamples.cs#L68&quot;&gt;unit tests&lt;/a&gt;... The test has now been changed, but it just goes to show - not even historical data is safe.</source>
          <target state="translated">Я заметил это только потому, что собираю подобные вопросы в Noda Time в форме &lt;a href=&quot;https://github.com/nodatime/nodatime/blob/master/src/NodaTime.Demo/StackOverflowExamples.cs#L68&quot;&gt;модульных тестов&lt;/a&gt; ... Тест теперь изменен, но он просто показывает, что даже исторические данные не являются безопасными.</target>
        </trans-unit>
        <trans-unit id="56c48ba41119f7aa61b2ce2e8b785a8269989909" translate="yes" xml:space="preserve">
          <source>I'm sorry to say, but the time discontinuity has moved a bit in</source>
          <target state="translated">Мне жаль говорить,но перерыв во времени немного сдвинулся с мертвой точки.</target>
        </trans-unit>
        <trans-unit id="8b3d29b36e59c1a8b6737ba1d904177462d786a8" translate="yes" xml:space="preserve">
          <source>IMHO the pervasive, &lt;em&gt;implicit&lt;/em&gt; localization in Java is its single largest design flaw. It may be intended for user interfaces, but frankly, who really uses Java for user interfaces today except for some IDEs where you can basically ignore localization because programmers aren't exactly the target audience for it. You can fix it (especially on Linux servers) by:</source>
          <target state="translated">ИМХО, повсеместная, &lt;em&gt;неявная&lt;/em&gt; локализация в Java - это ее самый большой недостаток дизайна. Это может быть предназначено для пользовательских интерфейсов, но, честно говоря, кто действительно использует Java для пользовательских интерфейсов сегодня, за исключением некоторых IDE, где вы можете в основном игнорировать локализацию, потому что программисты не являются целевой аудиторией для нее. Вы можете исправить это (особенно на серверах Linux):</target>
        </trans-unit>
        <trans-unit id="7fcc1a8a527402c0f0dfeebebf4baaaacb625564" translate="yes" xml:space="preserve">
          <source>If I change the dates to times 1 second later:</source>
          <target state="translated">Если я изменю даты на 1 секунду позже:</target>
        </trans-unit>
        <trans-unit id="5111eaaf38d1db5ec766498848da9d88df7016f7" translate="yes" xml:space="preserve">
          <source>If I run the following program, which parses two date strings referencing times 1 second apart and compares them:</source>
          <target state="translated">Если я запущу следующую программу,которая разбирает две строки даты с интервалом в 1 секунду и сравнивает их:</target>
        </trans-unit>
        <trans-unit id="02c748d4978e79c37d10ac4811023a81fbcf2f28" translate="yes" xml:space="preserve">
          <source>If you can not display a date or time in UTC, always indicate the time-zone.</source>
          <target state="translated">Если вы не можете отобразить дату или время в UTC,всегда указывайте часовой пояс.</target>
        </trans-unit>
        <trans-unit id="6306f0e3ad2baf3d4413643d7578c13d53158a95" translate="yes" xml:space="preserve">
          <source>If you can not require an input date/time in UTC, require an explicitly indicated time-zone.</source>
          <target state="translated">Если вы не можете потребовать ввода даты в UTC,потребовать явно указанный часовой пояс.</target>
        </trans-unit>
        <trans-unit id="8087c7ec3c81c2fd292ffd2a9305534c6fc3d42a" translate="yes" xml:space="preserve">
          <source>If you converted to UTC, add each second, and convert to local time for display. You would go through 11:54:08 p.m. &lt;a href=&quot;http://en.wikipedia.org/wiki/Local_mean_time&quot;&gt;LMT&lt;/a&gt; - 11:59:59 p.m. LMT and then 11:54:08 p.m. &lt;a href=&quot;http://en.wikipedia.org/wiki/Central_Time_Zone_%28North_America%29&quot;&gt;CST&lt;/a&gt; - 11:59:59 p.m. CST.</source>
          <target state="translated">Если вы конвертировали в UTC, добавляйте каждую секунду и переводите в местное время для отображения. Вы должны пройти до 23:54:08 вечера &lt;a href=&quot;http://en.wikipedia.org/wiki/Local_mean_time&quot;&gt;LMT&lt;/a&gt; - 11:59:59 вечера LMT, а затем 11:54:08 вечера &lt;a href=&quot;http://en.wikipedia.org/wiki/Central_Time_Zone_%28North_America%29&quot;&gt;CST&lt;/a&gt; - 11:59:59 вечера CST.</target>
        </trans-unit>
        <trans-unit id="103136494c4c14adc48cb8f8c7ddfd0b81928581" translate="yes" xml:space="preserve">
          <source>In TZDB 2014f, the time of the change has moved to 1900-12-31, and it's now a mere 343 second change (so the time between &lt;code&gt;t&lt;/code&gt; and &lt;code&gt;t+1&lt;/code&gt; is 344 seconds, if you see what I mean).</source>
          <target state="translated">В TZDB 2014f время изменения сместилось на 1900-12-31, и теперь это всего лишь 343 секунды (так что время между &lt;code&gt;t&lt;/code&gt; и &lt;code&gt;t+1&lt;/code&gt; составляет 344 секунды, если вы понимаете, что я имею в виду).</target>
        </trans-unit>
        <trans-unit id="5e37e1acca1e0cc2f4a1ebac231a5b1558c151d8" translate="yes" xml:space="preserve">
          <source>Instead of converting each date, you can use the following code:</source>
          <target state="translated">Вместо того,чтобы преобразовывать каждую дату,можно использовать следующий код:</target>
        </trans-unit>
        <trans-unit id="b3b9e3534c00684dc4a2b06c0f3d5e8c5d38a7ab" translate="yes" xml:space="preserve">
          <source>It's a time zone change on December 31st in Shanghai.</source>
          <target state="translated">Смена часового пояса 31 декабря в Шанхае.</target>
        </trans-unit>
        <trans-unit id="75441c0e99705d8e65e4033acbeb0010a83637ba" translate="yes" xml:space="preserve">
          <source>Just another episode in the often weird and wonderful world of time zones.</source>
          <target state="translated">Просто еще один эпизод в часто странном и удивительном мире часовых поясов.</target>
        </trans-unit>
        <trans-unit id="e65efb5fa854d52f51124f878d5b88742c1710d5" translate="yes" xml:space="preserve">
          <source>Lesson to learn: avoid non-UTC times at all costs, except maybe for display.</source>
          <target state="translated">Урок,который нужно усвоить:любой ценой избегайте нестандартного времени,за исключением,возможно,показа.</target>
        </trans-unit>
        <trans-unit id="0049464ec04d018c3ecefbf1142ef34dcb8fd292" translate="yes" xml:space="preserve">
          <source>Note that the 2013a update of the timezone database moved this discontinuity a few seconds earlier, but the effect would still be observable.</source>
          <target state="translated">Обратите внимание,что обновление базы данных часовых поясов 2013a перенесло это прерывание на несколько секунд раньше,но эффект все равно будет заметен.</target>
        </trans-unit>
        <trans-unit id="9137b60d69cf6be5d93720a3b111187bc27cb03e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.timeanddate.com/worldclock/clockchange.html?n=237&amp;amp;year=1927&quot;&gt;this page&lt;/a&gt; for details of 1927 in Shanghai. Basically at midnight at the end of 1927, the clocks went back 5 minutes and 52 seconds. So &quot;1927-12-31 23:54:08&quot; actually happened twice, and it looks like Java is parsing it as the &lt;em&gt;later&lt;/em&gt; possible instant for that local date/time - hence the difference.</source>
          <target state="translated">Смотрите &lt;a href=&quot;http://www.timeanddate.com/worldclock/clockchange.html?n=237&amp;amp;year=1927&quot;&gt;эту страницу&lt;/a&gt; для деталей 1927 года в Шанхае. В основном в полночь в конце 1927 года часы вернулись на 5 минут и 52 секунды. Таким образом, &amp;laquo;1927-12-31 23:54:08&amp;raquo; действительно происходило дважды, и похоже, что Java анализирует его как более &lt;em&gt;поздний&lt;/em&gt; возможный момент для этой локальной даты / времени - отсюда и разница.</target>
        </trans-unit>
        <trans-unit id="9475c45ed435d1dcc8064230299ad9bbea971f1d" translate="yes" xml:space="preserve">
          <source>The code above produces no output on my Windows machine. So any time zone which has any offset other than its standard one at the start of 1900 will count that as a transition. TZDB itself has some data going back earlier than that, and doesn't rely on any idea of a &quot;fixed&quot; standard time (which is what &lt;code&gt;getRawOffset&lt;/code&gt; assumes to be a valid concept) so other libraries needn't introduce this artificial transition.</source>
          <target state="translated">Приведенный выше код не производит вывод на мой компьютер с Windows. Таким образом, любой часовой пояс с любым смещением, отличным от стандартного в начале 1900 года, будет считаться переходным. Сам TZDB имеет некоторые данные, возвращающиеся раньше, и не полагается на идею &amp;laquo;фиксированного&amp;raquo; стандартного времени (которое &lt;code&gt;getRawOffset&lt;/code&gt; предполагает допустимым понятием), поэтому другие библиотеки не должны вводить этот искусственный переход.</target>
        </trans-unit>
        <trans-unit id="b7100a91b9d8b1cb54cb804d21e63e3627bdd121" translate="yes" xml:space="preserve">
          <source>The moral of this strangeness is:</source>
          <target state="translated">Мораль этой странности в том:</target>
        </trans-unit>
        <trans-unit id="d63ca0e9fab08267556d100f286c945b2a64bc3d" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;java.time&lt;/code&gt; package on Java 8 let use see this more clearly, and provide tools to handle it. Given:</source>
          <target state="translated">Новый пакет &lt;code&gt;java.time&lt;/code&gt; в Java 8 позволяет использовать это более наглядно и предоставляет инструменты для его обработки. Дано:</target>
        </trans-unit>
        <trans-unit id="19a3e89ca6ba713c3583ed6c4c15800b57fd093f" translate="yes" xml:space="preserve">
          <source>The original question would no longer demonstrate quite the same behaviour, if rebuilt with version 2013a of &lt;a href=&quot;https://github.com/nodatime/nodatime/blob/master/src/NodaTime.Demo/StackOverflowExamples.cs#L68&quot;&gt;TZDB&lt;/a&gt;. In 2013a, the result would be 358 seconds, with a transition time of 23:54:03 instead of 23:54:08.</source>
          <target state="translated">Исходный вопрос больше не будет демонстрировать совершенно такое же поведение, если его перестроить с версией &lt;a href=&quot;https://github.com/nodatime/nodatime/blob/master/src/NodaTime.Demo/StackOverflowExamples.cs#L68&quot;&gt;TZDB&lt;/a&gt; 2013a. В 2013a результат будет 358 секунд с временем перехода 23:54:03 вместо 23:54:08.</target>
        </trans-unit>
        <trans-unit id="b217bce103afb1f4fb3afe8cf964a7f81122a266" translate="yes" xml:space="preserve">
          <source>The time can also mess up in other places like the US. The US has Daylight Saving Time. When the Daylight Saving Time starts the time goes forward 1 hour. But after a while the Daylight Saving Time ends, and it goes backward 1 hour back to the standard time zone. So sometimes when comparing times in the US the difference is about &lt;code&gt;3600&lt;/code&gt; seconds not 1 second.</source>
          <target state="translated">Время также может испортить в других местах, таких как США. В США есть летнее время. Когда начинается летнее время, время идет вперед на 1 час. Но через некоторое время летнее время заканчивается, и оно возвращается назад на 1 час назад к стандартному часовому поясу. Так что иногда при сравнении времени в США разница составляет около &lt;code&gt;3600&lt;/code&gt; секунд, а не 1 секунда.</target>
        </trans-unit>
        <trans-unit id="9ddd52667a83232bb1f4cef9b34b280a0bf54281" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;durationAtEarlierOffset&lt;/code&gt; will be one second, while &lt;code&gt;durationAtLaterOffset&lt;/code&gt; will be five minutes and 53 seconds.</source>
          <target state="translated">Тогда &lt;code&gt;durationAtEarlierOffset&lt;/code&gt; будет одна секунда, тогда как &lt;code&gt;durationAtLaterOffset&lt;/code&gt; будет пять минут и 53 секунды.</target>
        </trans-unit>
        <trans-unit id="19db37336bb97e1cf9c14ba0a1883e72e3897316" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;ld4-ld3&lt;/code&gt; will be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">Тогда &lt;code&gt;ld4-ld3&lt;/code&gt; будет &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4967ebc9aa4719471c06c3f53ba2a7bbe93eac0d" translate="yes" xml:space="preserve">
          <source>This is not particularly strange and has happened pretty much everywhere at one time or another as timezones were switched or changed due to political or administrative actions.</source>
          <target state="translated">Это не особенно странно и происходило практически везде в то или иное время,так как часовые пояса менялись или менялись в связи с политическими или административными действиями.</target>
        </trans-unit>
        <trans-unit id="824c06d0b3b4e8849b79ccd53ac695c0c6307a4c" translate="yes" xml:space="preserve">
          <source>This slight shift of offsets, instead of the usual one-hour daylight savings (summer time) we are used to, obscures the problem a bit.</source>
          <target state="translated">Этот небольшой сдвиг смещений,вместо привычного для нас одночасового дневного (летнего)времени,немного затушевывает проблему.</target>
        </trans-unit>
        <trans-unit id="789fc42e0f431b1a07dca884b6ca5760ba615519" translate="yes" xml:space="preserve">
          <source>This way you will be able to walk through any periods where hours or minutes happen twice.</source>
          <target state="translated">Таким образом,вы сможете пройти через любые периоды,где часы или минуты случаются дважды.</target>
        </trans-unit>
        <trans-unit id="b60de2541acc5faacd938ec0f0eba22688a97b01" translate="yes" xml:space="preserve">
          <source>To the &lt;a href=&quot;https://www.jcp.org/&quot;&gt;Java Community Process&lt;/a&gt; members I recommend:</source>
          <target state="translated">Участникам &lt;a href=&quot;https://www.jcp.org/&quot;&gt;процесса сообщества Java&lt;/a&gt; я рекомендую:</target>
        </trans-unit>
        <trans-unit id="6bd7890badd212524f07fa62eb450fca97ffbef9" translate="yes" xml:space="preserve">
          <source>Use dates and times in UTC wherever possible.</source>
          <target state="translated">Используйте даты и время по UTC везде,где это возможно.</target>
        </trans-unit>
        <trans-unit id="c2ce6e9f01ab31c91c6ec268e87f5a3e7c9631a0" translate="yes" xml:space="preserve">
          <source>When incrementing time you should convert back to UTC and then add or subtract. Use the local time only for display.</source>
          <target state="translated">При инкрементировании времени вы должны преобразовать обратно в UTC,а затем добавить или вычесть.Используйте местное время только для отображения.</target>
        </trans-unit>
        <trans-unit id="e41c0f15f4012cc34cd7401c111b10939a9f0632" translate="yes" xml:space="preserve">
          <source>When it was &lt;code&gt;23:54:07&lt;/code&gt; in Shanghai, the local standard time, but after 5 minutes and 52 seconds, it turned to the next day at &lt;code&gt;00:00:00&lt;/code&gt;, and then local standard time changed back to &lt;code&gt;23:54:08&lt;/code&gt;. So, that's why the difference between the two times is 343 seconds not 1 second, as you would have expected.</source>
          <target state="translated">Когда в Шанхае было &lt;code&gt;23:54:07&lt;/code&gt; по местному стандартному времени, но через 5 минут и 52 секунды оно перешло на следующий день в &lt;code&gt;00:00:00&lt;/code&gt; , а затем местное стандартное время изменилось на &lt;code&gt;23:54:08&lt;/code&gt; . , Вот почему разница между двумя значениями составляет 343 секунды, а не 1 секунду, как вы и ожидали.</target>
        </trans-unit>
        <trans-unit id="0c92b6b65def6ef6d62c2b2bf1cdc1784a43eefe" translate="yes" xml:space="preserve">
          <source>When local standard time was about to reach Sunday, 1. January 1928,
  00:00:00 clocks were turned backward 0:05:52 hours to Saturday, 31.
  December 1927, 23:54:08 local standard time instead</source>
          <target state="translated">Когда местное стандартное время приближалось к воскресенью,1 января 1928 года,00:00:00 часы были повернуты назад с 0:05:52 часов до субботы,31.Декабрь 1927 года,23:54:08 по местному стандартному времени.</target>
        </trans-unit>
        <trans-unit id="73d4aa31d8c6b5023622dc30633d91c8e5f478f9" translate="yes" xml:space="preserve">
          <source>Why is &lt;code&gt;ld4-ld3&lt;/code&gt; not &lt;code&gt;1&lt;/code&gt; (as I would expect from the one-second difference in the times), but &lt;code&gt;353&lt;/code&gt;?</source>
          <target state="translated">Почему &lt;code&gt;ld4-ld3&lt;/code&gt; не &lt;code&gt;1&lt;/code&gt; (как я и ожидал бы из-за разницы во времени в одну секунду), а &lt;code&gt;353&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="d2a71713da9e82099ccbad90518de1ca9e1bb60c" translate="yes" xml:space="preserve">
          <source>Why is subtracting these two times (in 1927) giving a strange result</source>
          <target state="translated">Почему вычитание этих двух раз (в 1927 году)дает странный результат.</target>
        </trans-unit>
        <trans-unit id="9fc9644ca504b8a7d6cc99d99594925a6e30ae17" translate="yes" xml:space="preserve">
          <source>You can check whether the transition is an overlap where there's more than one valid offset for that date/time or a gap where that date/time is not valid for that zone id - by using the &lt;code&gt;isOverlap()&lt;/code&gt; and &lt;code&gt;isGap()&lt;/code&gt; methods on &lt;code&gt;zot4&lt;/code&gt;.</source>
          <target state="translated">Вы можете проверить, является ли переход перекрытием, где существует более одного действительного смещения для этой даты / времени, или промежутком, когда эта дата / время недопустима для идентификатора этой зоны - с помощью &lt;code&gt;isOverlap()&lt;/code&gt; и &lt;code&gt;isGap()&lt;/code&gt; на &lt;code&gt;zot4&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="46cca3c2b359b243aaf93432f10772e5e013b14e" translate="yes" xml:space="preserve">
          <source>You can see the same problem comparing &lt;code&gt;1927-12-31 23:59:59&lt;/code&gt; with &lt;code&gt;1928-01-01 00:00:00&lt;/code&gt;, though, in this case, it is the earlier offset that produces the longer divergence, and it is the earlier date that has two possible offsets.</source>
          <target state="translated">Вы можете увидеть ту же проблему, сравнивая &lt;code&gt;1927-12-31 23:59:59&lt;/code&gt; с &lt;code&gt;1928-01-01 00:00:00&lt;/code&gt; , хотя, в данном случае, более раннее смещение приводит к большей дивергенции, и это более ранняя дата, которая имеет два возможных смещения.</target>
        </trans-unit>
        <trans-unit id="d0fc95a43660c9f95b3383aec1ea859ebd40f9a6" translate="yes" xml:space="preserve">
          <source>You've encountered a &lt;a href=&quot;http://timeanddate.com/worldclock/clockchange.html?n=237&amp;amp;year=1927&quot;&gt;local time discontinuity&lt;/a&gt;:</source>
          <target state="translated">Вы столкнулись с &lt;a href=&quot;http://timeanddate.com/worldclock/clockchange.html?n=237&amp;amp;year=1927&quot;&gt;разрывом местного времени&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="851c4419c76cc7437e9fc5b06b0d5a51f136d8c6" translate="yes" xml:space="preserve">
          <source>export LC_ALL=C TZ=UTC</source>
          <target state="translated">экспорт LC_ALL=C TZ=UTC</target>
        </trans-unit>
        <trans-unit id="894fa40b06e8625588b6dbe8fd0fdc94e07482b6" translate="yes" xml:space="preserve">
          <source>make localized methods not the default, but require the user to explicitly request localization.</source>
          <target state="translated">делать локализованные методы не по умолчанию,а требовать от пользователя явного запроса локализации.</target>
        </trans-unit>
        <trans-unit id="e39b6549994f5fbdde97320628c30d6d2b245a1a" translate="yes" xml:space="preserve">
          <source>never use localized implementations unless absolutely necessary (ie for display only)</source>
          <target state="translated">никогда не используйте локализованные реализации,если в этом нет абсолютной необходимости (т.е.только для отображения).</target>
        </trans-unit>
        <trans-unit id="6fd0469b691655f5c5d7e7cf3174ba1a2fc60148" translate="yes" xml:space="preserve">
          <source>set your system clock to UTC</source>
          <target state="translated">установи свои системные часы на UTC</target>
        </trans-unit>
        <trans-unit id="cf7886d28aed4eb23b330f782c10d18ca9ee1834" translate="yes" xml:space="preserve">
          <source>use UTF-8/UTC as the &lt;em&gt;FIXED&lt;/em&gt; default instead because that's simply the default today. There is no reason to do something else, except if you want to produce threads like this.</source>
          <target state="translated">вместо этого используйте UTF-8 / UTC в качестве &lt;em&gt;ИСПРАВЛЕННОГО&lt;/em&gt; значения по умолчанию, потому что сегодня это просто значение по умолчанию. Нет причин делать что-то еще, кроме случаев, когда вы хотите создавать такие потоки.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
