<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/68645">
    <body>
      <group id="68645">
        <trans-unit id="fb3c02b0eeef390bcce865c7e2bf9425d0a705bc" translate="yes" xml:space="preserve">
          <source>&quot;Static Variables&quot;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;정적 변수&quot;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="923c98ff322c67bbf340c4c55101c705035e55fe" translate="yes" xml:space="preserve">
          <source>(NOTE: That is, unless a class instance decides to define its own version of &lt;code&gt;_i&lt;/code&gt;! But if someone decides to do THAT, they deserve what they get, don't they???)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(참고 : 클래스 인스턴스가 자체 버전의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;_i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 정의하기로 결정하지 않는 한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;! 누군가가 그 일을하기로 결정하면 얻을 수있는 자격이 있습니까?)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fe80505db325683081cb2b8043640419938dd054" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tryIt&lt;/code&gt; class represented the regular class we need to use.</source>
          <target state="translated">&lt;code&gt;tryIt&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스는 우리가 사용해야하는 정규 클래스를 나타냅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3fcc0a40b8d044e78f2de5ebaafc54bbbd2c37c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Partial&lt;/em&gt; expected static variable behavior, i.e., syncing of the attribute between multiple instances (but &lt;strong&gt;not&lt;/strong&gt; with the class itself; see &quot;gotcha&quot; below), can be achieved by turning the class attribute into a property:</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;속성이 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아닌&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성으로 속성을 변경하면 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;부분적으로&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 예상되는 정적 변수 동작, 즉 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 자체가 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아닌&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 여러 인스턴스 간의 속성 동기화가 가능합니다 ( &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래의 &quot;gotcha&quot;참조).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee3b9876fda717b971917c803e2fa0ae98ed95f8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;REAL, ACTUAL&lt;/em&gt; Static Variables - &lt;code&gt;Test.i == x.i&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제, 실제&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 정적 변수 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Test.i == x.i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c84779c986093e3848942ecefdbf373d3303ffd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Emulating static variable behavior of other languages using a metaclass&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메타 클래스를 사용하여 다른 언어의 정적 변수 동작 에뮬레이션&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b75698168fab613d3f998ae1085b1c067132dfcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Instance variables:&lt;/strong&gt; Variables that are related and accessed by instance of a class are instance variables.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인스턴스 변수 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스 인스턴스와 관련되고 액세스되는 변수는 인스턴스 변수입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bf79b0ce0a0e731516b8ad76a434185d5ed8f5db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Static Methods:&lt;/strong&gt; Similar to variables, static methods can be accessed directly using class Name. No need to create an instance.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 메소드 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변수와 유사하게 정적 메소드는 클래스 이름을 사용하여 직접 액세스 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인스턴스를 만들 필요가 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e9355061a1a9a0a45aa77f0e192b893be52e2cbf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Static Variables :&lt;/strong&gt;
Variable declared at class level are called static variable which can be accessed directly using class name.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 변수 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스 수준에서 선언 된 변수를 정적 변수라고하며 클래스 이름을 사용하여 직접 액세스 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b455eb0ee2a7eff8964d76d06c661454f8261d0" translate="yes" xml:space="preserve">
          <source>@Blair Conrad said static variables declared inside the class definition, but not inside a method are class or &quot;static&quot; variables:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Blair Conrad는 클래스 정의 내부에 선언 된 정적 변수는 있지만 메소드 내부가 아닌 클래스 또는 &quot;정적&quot;변수는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1e02e2fa5e8076e3896f91c277496bb3aa522653" translate="yes" xml:space="preserve">
          <source>@Steve Johnson also answered regarding static methods, also documented under &quot;Built-in Functions&quot; in the Python Library Reference.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Steve Johnson은 또한 Python Library Reference의 &quot;Built-in Functions&quot;에 문서화 된 정적 메소드에 대해서도 답변했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c1becb9a9c9125f2176a9c56ed6adb9e0d76496f" translate="yes" xml:space="preserve">
          <source>@Steve Johnson has already answered regarding &lt;a href=&quot;http://web.archive.org/web/20090214211613/http://pyref.infogami.com/staticmethod&quot;&gt;static methods&lt;/a&gt;, also documented under &lt;a href=&quot;https://docs.python.org/3/library/functions.html#staticmethod&quot;&gt;&quot;Built-in Functions&quot; in the Python Library Reference&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@ 스티브 존슨은 이미 관한 응답 한 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://web.archive.org/web/20090214211613/http://pyref.infogami.com/staticmethod&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 방법&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 도 아래 문서화, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/functions.html#staticmethod&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬 라이브러리 참조에서 &quot;내장 기능&quot;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a517b8a67adfdb270dfe2e99f10d93d6f12557d" translate="yes" xml:space="preserve">
          <source>@beid also mentioned classmethod, which is similar to staticmethod. A classmethod's first argument is the class object. Example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@beid는 staticmethod와 유사한 classmethod도 언급했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 메소드의 첫 번째 인수는 클래스 객체입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a29f8a471567fa54f9038d7e7839104aeaf450ee" translate="yes" xml:space="preserve">
          <source>@beidy recommends &lt;a href=&quot;https://docs.python.org/3/library/functions.html#classmethod&quot;&gt;classmethod&lt;/a&gt;s over staticmethod, as the method then receives the class type as the first argument, but I'm still a little fuzzy on the advantages of this approach over staticmethod. If you are too, then it probably doesn't matter.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@beidy는 권장 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/functions.html#classmethod&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;classmethod&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 방법은 다음 첫 번째 인수로 클래스 유형을 수신 할 때, StaticMethod를 통해들,하지만, 난 여전히 StaticMethod를 통해이 방법의 장점에 약간 퍼지입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이 너무 있다면, 아마도 중요하지 않을 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="716445368e64a991edb17b5a46b3339d2237d8e7" translate="yes" xml:space="preserve">
          <source>A catalog of the &quot;static variables&quot; is stored in the &lt;code&gt;StaticVarMeta.statics&lt;/code&gt; attribute. All attribute requests are initially attempted to be resolved using a substitute resolution order. I have dubbed this the &quot;static resolution order&quot;, or &quot;SRO&quot;. This is done by looking for the requested attribute in the set of &quot;static variables&quot; for a given class (or its parent classes). If the attribute does not appear in the &quot;SRO&quot;, the class will fall back on the default attribute get/set/delete behavior (i.e., &quot;MRO&quot;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;정적 변수&quot;의 카탈로그는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;StaticVarMeta.statics&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;저장됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 속성 요청은 처음에 대체 해결 순서를 사용하여 해결하려고 시도합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 이것을 &quot;정적 해상도 순서&quot;또는 &quot;SRO&quot;라고 불렀다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주어진 클래스 (또는 그 상위 클래스)에 대한 &quot;정적 변수&quot;세트에서 요청 된 속성을 찾아서 수행됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;속성이 &quot;SRO&quot;에 나타나지 않으면 클래스는 기본 속성 가져 오기 / 설정 / 삭제 동작 (예 : &quot;MRO&quot;)으로 대체됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9ba0e4cf819d3aecb8e28b09b879d8c4c956e753" translate="yes" xml:space="preserve">
          <source>A metaclass is the class of a class. The default metaclass for all classes in Python (i.e., the &quot;new style&quot; classes post Python 2.3 I believe) is &lt;code&gt;type&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메타 클래스는 클래스의 클래스입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬의 모든 클래스에 대한 기본 메타 클래스 (즉, Python 2.3 이후의 &quot;새로운 스타일&quot;클래스)는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;type&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들면 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d84b5cc9c11e8fbd038457df57121eaf2a5b05a" translate="yes" xml:space="preserve">
          <source>Absolutely Yes,
  Python by itself don't have any static data member explicitly, but We can have by doing so</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;물론 그렇습니다. 파이썬 자체에는 정적 데이터 멤버가 명시 적으로 없지만, 그렇게 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b46b3d1dcf527451bdbc0461353f2ec10b9f1c26" translate="yes" xml:space="preserve">
          <source>All these objects are being added to the list &lt;code&gt;tryArr&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 모든 객체는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;tryArr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 목록에 추가됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e4f17a8594b7ae763c648f0009c79dc5399ab7e7" translate="yes" xml:space="preserve">
          <source>Although it doesn't say anything specific about static variables or methods, the &lt;a href=&quot;http://docs.python.org/tut/&quot;&gt;Python tutorial&lt;/a&gt; has some relevant information on &lt;a href=&quot;https://docs.python.org/2/tutorial/classes.html&quot;&gt;classes and class objects&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 변수 또는 메소드에 대해서는 구체적으로 언급하지 않지만 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/tut/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 자습서&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/tutorial/classes.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 및 클래스 객체&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 대한 관련 정보가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91787b9332a1283e843895baa576e5561b7f0f8e" translate="yes" xml:space="preserve">
          <source>And apply it to your own class like this (Python 3 only):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같이 자신의 클래스에 적용하십시오 (Python 3 전용).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="603ddd0924bfe8048ee6beb9057fae4e325e3a27" translate="yes" xml:space="preserve">
          <source>And class instances can change class variables</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 인스턴스는 클래스 변수를 변경할 수 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ffc90a5ac13979e4c0b805d92ef0d61ac7029375" translate="yes" xml:space="preserve">
          <source>Are static class variables possible in Python</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬에서 정적 클래스 변수가 가능합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a0ed2bafc9b01dbd74af85d75e3455632f19611" translate="yes" xml:space="preserve">
          <source>As @&lt;a href=&quot;https://stackoverflow.com/questions/68645/static-class-variables-in-python#answer-69067&quot;&gt;millerdev&lt;/a&gt; points out, this creates a class-level &lt;code&gt;i&lt;/code&gt; variable, but this is distinct from any instance-level &lt;code&gt;i&lt;/code&gt; variable, so you could have</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@ &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/68645/static-class-variables-in-python#answer-69067&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;millerdev가&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 지적했듯이 이것은 클래스 레벨 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변수를 생성하지만 이것은 인스턴스 레벨 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변수와 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;구별 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되므로&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b48d5c164190553420fa013b9a2e15d51ba80f51" translate="yes" xml:space="preserve">
          <source>As the other answers have noted, static and class methods are easily accomplished using the built-in decorators:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 답변에서 언급했듯이 정적 및 클래스 메서드는 내장 데코레이터를 사용하여 쉽게 수행 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6849c9c54c02634651dc00427dec658eb5da9ab8" translate="yes" xml:space="preserve">
          <source>As usual, the first argument to &lt;code&gt;MyMethod()&lt;/code&gt; is bound to the class instance object. In contrast, the first argument to &lt;code&gt;MyClassMethod()&lt;/code&gt; is &lt;em&gt;bound to the class object itself&lt;/em&gt; (e.g., in this case, &lt;code&gt;Test&lt;/code&gt;). For &lt;code&gt;MyStaticMethod()&lt;/code&gt;, none of the arguments are bound, and having arguments at all is optional.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;평소와 같이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyMethod()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 첫 번째 인수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 클래스 인스턴스 객체에 바인딩됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;반면에 제 인수 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyClassMethod()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 되는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 객체에 바인딩 자체&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (이 경우에, 예를 들면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;들어 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyStaticMethod()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 인수 아무도 구속하지 않고, 전혀 인수를 가지는 것은 선택 사항입니다된다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5c1e001f8d06fe61e487859615fdde64ca65b701" translate="yes" xml:space="preserve">
          <source>Below is a metaclass I have created which attempts to emulate &quot;static variable&quot; behavior of other languages. It basically works by replacing the default getter, setter, and deleter with versions which check to see if the attribute being requested is a &quot;static variable&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래는 다른 언어의 &quot;정적 변수&quot;동작을 에뮬레이션하려는 메타 클래스입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본적으로 기본 getter, setter 및 deleter를 요청되는 속성이 &quot;정적 변수&quot;인지 확인하는 버전으로 대체하여 작동합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de1e8590d73a98048d90751fc3c9ca7ee3b1a1e5" translate="yes" xml:space="preserve">
          <source>But keep in mind, a static method cannot call a non-static method in python.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 정적 메소드는 파이썬에서 비 정적 메소드를 호출 할 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="034d9c75b21b8bdab27752521c503330e9ae8145" translate="yes" xml:space="preserve">
          <source>CLASSNAME.var is static variable</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CLASSNAME.var은 정적 변수입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27f53cfc72387e2ee44e393370ad734a7a2d754b" translate="yes" xml:space="preserve">
          <source>Clearly, the member &lt;code&gt;i&lt;/code&gt; of &lt;code&gt;Test&lt;/code&gt; must be a &lt;code&gt;property&lt;/code&gt; object, which is the type of object returned from the &lt;code&gt;property&lt;/code&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;분명히 부재 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있어야 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 으로부터 리턴 된 객체의 유형 객체 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 기능.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd30f1cd4685ddb51bcfd080d74eaf11e7c00e74" translate="yes" xml:space="preserve">
          <source>For anyone using a class factory with &lt;strong&gt;python3.6&lt;/strong&gt; and up use the &lt;code&gt;nonlocal&lt;/code&gt; keyword to add it to the scope / context of the class being created like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;python3.6 이상&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 으로 클래스 팩토리를 사용하는 사람 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;nonlocal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 키워드를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하여 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성중인 클래스의 범위 / 컨텍스트에 추가하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2b54ba729e81ff9978c8fb36147cf3390572603a" translate="yes" xml:space="preserve">
          <source>For immutable static variable behavior, simply omit the &lt;code&gt;property&lt;/code&gt; setter:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;불변 정적 변수 동작의 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 설정자 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 생략하면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;됩니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f6e2ec17416b5276ca6187ea22ee603d1ffbfe2b" translate="yes" xml:space="preserve">
          <source>For static properties.. Its time you look up some python definition.. variable can always change. There are two types of them mutable and immutable.. Also, there are class attributes and instance attributes.. Nothing really like static attributes in the sense of java &amp;amp; c++</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 속성의 경우. 파이썬 정의를 검색 할 때가 있습니다. 변수는 항상 변경 될 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변경 가능하고 변경 불가능한 두 가지 유형이 있습니다. 또한 클래스 속성 및 인스턴스 속성이 있습니다. Java 및 C ++의 의미에서 정적 속성과 같은 것은 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="482ad5ff83b6ece8126bc6706f0498390e307cf8" translate="yes" xml:space="preserve">
          <source>Have a look at &lt;a href=&quot;https://stackoverflow.com/a/102062/717357&quot;&gt;this answer&lt;/a&gt; and the official docs &lt;a href=&quot;https://docs.python.org/2/howto/descriptor.html&quot;&gt;HOWTO&lt;/a&gt; for more information about descriptors.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한 번 봐 가지고 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/102062/717357&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 답변&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 공식 문서의 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/howto/descriptor.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HOWTO&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 설명자에 대한 자세한 정보를.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d33a527cb9b6867a3151aa24601ccec91f4d74c5" translate="yes" xml:space="preserve">
          <source>Here's a proof-of-concept written in Python 3 -- if any of the exact details are wrong the code can be tweaked to match just about whatever you mean by a &lt;code&gt;static variable&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 Python 3으로 작성된 개념 증명입니다. 정확한 세부 사항이 잘못된 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static variable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의미와 거의 일치하도록 코드를 조정할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc932230a709472b96d584b039369020ce7d8983" translate="yes" xml:space="preserve">
          <source>However, implementing &quot;static variables&quot; (well, &lt;em&gt;mutable&lt;/em&gt; static variables, anyway, if that's not a contradiction in terms...) is not as straight forward. As millerdev &lt;a href=&quot;https://stackoverflow.com/a/69067/2437514&quot;&gt;pointed out in his answer&lt;/a&gt;, the problem is that Python's class attributes are not truly &quot;static variables&quot;. Consider:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &quot;정적 변수&quot;(잘 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변하기&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 쉬운 가변 변수)를 구현 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 것은 간단하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;millerdev &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/69067/2437514&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가 그의 답변에서 지적했듯이&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 문제는 파이썬의 클래스 속성이 실제로 &quot;정적 변수&quot;가 아니라는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;치다:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f8a487fc6cd6a6763e809c1188898ae1fbd2b19" translate="yes" xml:space="preserve">
          <source>However, you can define your own metaclass like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 다음과 같이 자신의 메타 클래스를 정의 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7a0af7a1ab4f0bfd806d739ba81825a2c5f216bc" translate="yes" xml:space="preserve">
          <source>I present a solution to the above 'gotcha' below; however I would suggest - strenuously - that you do not try to do something like the following until - at minimum - you thoroughly understand why &lt;code&gt;assert Test.i = x.i&lt;/code&gt; causes an error.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래의 위의 'gotcha'에 대한 해결책을 제시합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 어쨌든 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assert Test.i = x.i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 오류를 일으키는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이유를 완전히 이해할 때까지 다음과 같은 일을 시도하지 말 것을 강력하게 제안 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95bb1b0d431026a4d5396f2ff19d5bf214bbf4fb" translate="yes" xml:space="preserve">
          <source>I present the (Python 3) solution below for informational purposes only. I am not endorsing it as a &quot;good solution&quot;. I have my doubts as to whether emulating the static variable behavior of other languages in Python is ever actually necessary. However, regardless as to whether it is actually useful, the below should help further understanding of how Python works.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정보 제공 목적으로 만 (Python 3) 솔루션을 제시합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 그것을 &quot;좋은 해결책&quot;으로 보증하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬에서 다른 언어의 정적 변수 동작을 에뮬레이트하는 것이 실제로 필요한지에 대한 의문이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 실제로 유용한 지 여부에 관계없이 아래는 Python의 작동 방식을 이해하는 데 도움이됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bf192665549b7bf056c69785006798c8da7ed033" translate="yes" xml:space="preserve">
          <source>INSTANCENAME.var is not static variable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;INSTANCENAME.var는 정적 변수가 아닙니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92c791c6da652ba33da92a5b7ebc0cbf7fb9fdf2" translate="yes" xml:space="preserve">
          <source>If you find the above confusing, you are most likely still thinking about it from the perspective of other languages (e.g. Java or c++). You should go study the &lt;code&gt;property&lt;/code&gt; object, about the order in which Python attributes are returned, the descriptor protocol, and the method resolution order (MRO).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 내용이 혼동 될 경우 다른 언어 (예 : Java 또는 c ++)의 관점에서 생각할 가능성이 높습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬 속성이 리턴되는 순서, 디스크립터 프로토콜 및 메소드 분석 순서 (MRO)에 대한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 오브젝트를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;연구해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a793a0b8dbc9d5cbd4f6953387ce957e43bb28e5" translate="yes" xml:space="preserve">
          <source>Immutable &quot;Static Variables&quot;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;불변의 &quot;정적 변수&quot;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5e0698c5f3aa0792d204ff6d50cac604fafda38d" translate="yes" xml:space="preserve">
          <source>In regards to this &lt;a href=&quot;https://stackoverflow.com/a/68672/717357&quot;&gt;answer&lt;/a&gt;, for a &lt;em&gt;constant&lt;/em&gt; static variable, you can use a descriptor. Here's an example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이에 관해서 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/68672/717357&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대답&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하는에 대한 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일정의&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 정적 변수, 당신은 기술자를 사용할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들면 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="23d8e625b60f08d46acca2cd6f6c70dbf987a866" translate="yes" xml:space="preserve">
          <source>Is it possible to have static class variables or methods in Python? What syntax is required to do this?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬에서 정적 클래스 변수 또는 메소드를 가질 수 있습니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이를 위해 어떤 구문이 필요합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="227728c0117a3347b1f1e4ff01ea4a621ed1c380" translate="yes" xml:space="preserve">
          <source>It is possible to have &lt;code&gt;static&lt;/code&gt; class variables, but probably not worth the effort.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스 변수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 가질 수는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있지만 노력할 가치는 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2122ce24b3105ea2e7912a3e3ce6b1dd723c9a35" translate="yes" xml:space="preserve">
          <source>Just for kicks and giggles, we could call &lt;em&gt;myInstanceMethod&lt;/em&gt; on the class by passing in an instance of the class, like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;발차 기와 킥킥 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;거리기&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 위해 클래스의 인스턴스를 전달하여 클래스에서 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;myInstanceMethod&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;호출 할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad3f82e3da3ccd456a6c0fcd7b2c4c35c05deafd" translate="yes" xml:space="preserve">
          <source>Making a variable static takes this a step further by disallowing the variable name to point to any object but that to which it currently points. (Note: this is a general software concept and not specific to Python; please see others' posts for information about implementing statics in Python).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수를 정적으로 만들면 변수 이름이 객체가 아닌 다른 객체를 가리 키지 않도록하여이 단계를 한 단계 더 진행합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(참고 : 이것은 일반적인 소프트웨어 개념이며 Python에만 국한되지는 않습니다. Python에서 정적 구현에 대한 정보는 다른 게시물을 참조하십시오).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43441a1f202581c71f8ec82052e59dfe772e9196" translate="yes" xml:space="preserve">
          <source>Many people will find this surprising. However, it should not be. If we go back and inspect our &lt;code&gt;Test&lt;/code&gt; class definition (the second version), we take note of this line:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;많은 사람들이이 놀라운 것을 발견 할 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 그렇게해서는 안됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;돌아가서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스 정의 (두 번째 버전)를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;검사 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 다음 행을 기록합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d1379f495b367651ba8de70dfe76b9a5e75999fa" translate="yes" xml:space="preserve">
          <source>Normally there aren't any assignments to these after they are created.  Note that the lookup uses &lt;code&gt;self&lt;/code&gt; because, although &lt;code&gt;label&lt;/code&gt; is static in the sense of not being associated with a &lt;em&gt;particular&lt;/em&gt; instance, the value still depends on the (class of the) instance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적으로 할당 된 할당은 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;조회에서 사용하는 주 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있지만 때문에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;label&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 연관되지 않는 의미에서 정적 인 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;특정&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 경우,이 값은 여전히 인스턴스 (클래스의)에 의존한다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="98d0b0d29eb9847e22f23f5f2fe6b2b149ab6c65" translate="yes" xml:space="preserve">
          <source>Note that technically speaking, &lt;code&gt;i&lt;/code&gt; is still not a 'static variable' at all; it is a &lt;code&gt;property&lt;/code&gt;, which is a special type of descriptor. However, the &lt;code&gt;property&lt;/code&gt; behavior is now equivalent to a (mutable) static variable synced across all class instances.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기술적으로 말하자면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 여전히 '정적 변수'가 아닙니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은이다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 기술자의 특별한 유형입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 동작은 이제 모든 클래스 인스턴스에서 동기화 된 (변경 가능) 정적 변수와 동일합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e28be6f65f9b868c62441821b4e55d9c148212b9" translate="yes" xml:space="preserve">
          <source>Note that the above methods only work with &lt;em&gt;instances&lt;/em&gt; of your class - they will &lt;strong&gt;not&lt;/strong&gt; work &lt;em&gt;when using the class itself&lt;/em&gt;. So for example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 메소드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 클래스의 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인스턴스&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서만 작동 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하며 클래스 자체를 사용할 때는&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 작동 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지 않습니다&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 :&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2aa8de918d1257f189538703f8d0a84d945f9beb" translate="yes" xml:space="preserve">
          <source>Notice how the instance variable &lt;code&gt;t.i&lt;/code&gt; got out of sync with the &quot;static&quot; class variable when the attribute &lt;code&gt;i&lt;/code&gt; was set directly on &lt;code&gt;t&lt;/code&gt;. This is because &lt;code&gt;i&lt;/code&gt; was re-bound within the &lt;code&gt;t&lt;/code&gt; namespace, which is distinct from the &lt;code&gt;Test&lt;/code&gt; namespace. If you want to change the value of a &quot;static&quot; variable, you must change it within the scope (or object) where it was originally defined. I put &quot;static&quot; in quotes because Python does not really have static variables in the sense that C++ and Java do.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;속성 &lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 &lt;/font&gt; &lt;code&gt;t&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 직접 설정 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되었을 때 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인스턴스 변수 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;t.i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 &quot;정적&quot;클래스 변수와 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어떻게 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동기화되지 않았 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는지 확인하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 때문이다 &lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 내에 다시 결합 된 &lt;/font&gt; &lt;code&gt;t&lt;/code&gt; 용&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로부터 구별되는 네임 스페이스 &lt;/font&gt; &lt;code&gt;Test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 스페이스. &quot;정적&quot;변수의 값을 변경하려면 원래 정의 된 범위 (또는 오브젝트) 내에서 변경해야합니다. 파이썬에는 C ++과 Java가하는 의미에서 정적 변수가 없기 때문에 &quot;정적&quot;을 따옴표로 묶습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b11f25deb60bcf114999baab257666e9e2348aaf" translate="yes" xml:space="preserve">
          <source>Notice that when we call the method &lt;em&gt;myInstanceMethod&lt;/em&gt;, we get an error. This is because it requires that method be called on an instance of this class. The method &lt;em&gt;myStaticMethod&lt;/em&gt; is set as a classmethod using the &lt;a href=&quot;http://www.python.org/dev/peps/pep-0318/&quot;&gt;decorator&lt;/a&gt;&lt;em&gt;@classmethod&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;myInstanceMethod&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드를 호출 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 오류가 발생합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 클래스의 인스턴스에서 메소드를 호출해야하기 때문입니다. &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;myStaticMethod&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.python.org/dev/peps/pep-0318/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;데코레이터 &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@classmethod를&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하여 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로 설정됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="04b11500326db84662ca01bae977689a11325b6b" translate="yes" xml:space="preserve">
          <source>Now I made an object for one flag (&lt;code&gt;staticFlag&lt;/code&gt;). This flag will be sent as reference to all the regular objects.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 하나의 플래그 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;staticFlag&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대한 객체를 만들었습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 플래그는 모든 일반 객체에 대한 참조로 전송됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a63fef43f83986e3b879a67e1e0bc2160f63c588" translate="yes" xml:space="preserve">
          <source>Now attempting to set the instance &lt;code&gt;i&lt;/code&gt; attribute will return an &lt;code&gt;AttributeError&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 인스턴스 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 설정하려고 시도 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 반환됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="93b9e7a0a6529c120d308e3a9afc60556aa4685a" translate="yes" xml:space="preserve">
          <source>Now you can do:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 할 수있는 일 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8143fc64259415dc4e81d9b7c8ca127e00dfb6d" translate="yes" xml:space="preserve">
          <source>One Gotcha to be Aware of</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인식해야 할 하나의 문제&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cf866e2eaf69fa7d0d427fbeb00721940a9b2ab6" translate="yes" xml:space="preserve">
          <source>One special thing to note about static properties &amp;amp; instance properties, shown in the example below:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 속성 및 인스턴스 속성에 대해 유의해야 할 사항은 아래 예와 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba96023bb3d145e2c5235de13d92f0c0bb0272ef" translate="yes" xml:space="preserve">
          <source>One very interesting point about Python's attribute lookup is that it can be used to create &quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Virtual_function&quot;&gt;virtual&lt;/a&gt; variables&quot;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬의 속성 조회에 대한 한 가지 흥미로운 점은 &quot; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Virtual_function&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가상&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변수&quot; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 만드는 데 사용될 수 있다는 것입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="385b691c1ae1c4adc4de1e88d36cc95e38a9138f" translate="yes" xml:space="preserve">
          <source>Personally I would use a classmethod whenever I needed a static method. Mainly because I get the class as an argument.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;개인적으로 정적 메소드가 필요할 때마다 클래스 메소드를 사용합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주로 클래스를 인수로 사용하기 때문입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="066c6dab07691f1f0eaca748f5bdb9aa86a40369" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://docs.python.org/3/tutorial/classes.html#class-objects&quot;&gt;what the Python tutorial has to say on the subject of classes and class objects&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/tutorial/classes.html#class-objects&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스와 클래스 객체의 주제에 대해 파이썬 튜토리얼이 무엇을 말하는지&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 보십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="19468e42d1406facfb94b682d3988e089dffb3f3" translate="yes" xml:space="preserve">
          <source>So this is probably a hack, but I've been using &lt;code&gt;eval(str)&lt;/code&gt; to obtain an static object, kind of a contradiction, in python 3.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래서 이것은 아마도 해킹 일 것입니다.하지만 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval(str)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 사용하여 파이썬 3에서 정적 객체, 일종의 모순을 얻었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5bd63a0154590f547e524ecb2acae4fec295a56" translate="yes" xml:space="preserve">
          <source>So where &lt;code&gt;object_name = 'RecordOne'&lt;/code&gt; or the class name, I call &lt;code&gt;cur_type = eval(object_name)&lt;/code&gt; and then to instantiate it you do &lt;code&gt;cur_inst = cur_type(args)&lt;/code&gt;
However before you instantiate you can call static methods from &lt;code&gt;cur_type.getName()&lt;/code&gt; for example, kind of like abstract base class implementation or whatever the goal is.  However in the backend, it's probably instantiated in python and is not truly static, because eval is returning an object....which must have been instantiated....that gives static like behavior.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어디 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;object_name = 'RecordOne'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 클래스 이름을, 나는 전화 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;cur_type = eval(object_name)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인스턴스화하고 다음을 당신이 할 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;cur_inst = cur_type(args)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 당신은 당신이에서 정적 메서드 호출 할 수 있습니다 인스턴스화 그러나 전에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;cur_type.getName()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 예 : , 추상 기본 클래스 구현 또는 목표가 무엇이든. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 백엔드에서는 아마도 파이썬으로 인스턴스화되고 실제로 정적이 아닙니다 .eval이 객체를 반환하기 때문입니다 .... 인스턴스화되어야합니다 .... 정적처럼 동작합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c67360c3d645d0aa1adb9aa2212a5a28b5ee6429" translate="yes" xml:space="preserve">
          <source>Some primitive object types like integers, floats, strings, and touples are immutable in Python. This means that the object that is referred to by a given name cannot change if it is of one of the aforementioned object types. The name can be reassigned to a different object, but the object itself may not be changed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정수, 부동 소수점, 문자열 및 첨탑과 같은 일부 기본 객체 유형은 Python에서 변경할 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이는 주어진 이름으로 참조되는 오브젝트가 위에서 언급 한 오브젝트 유형 중 하나 인 경우 변경할 수 없음을 의미합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이름을 다른 객체에 재 할당 할 수 있지만 객체 자체는 변경되지 않을 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77a636b5b4d7a2176f8e66c9c644dc845450890a" translate="yes" xml:space="preserve">
          <source>Static Variables in Class factory python3.6</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 팩토리의 정적 변수&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e09b5597dc2f831a37224a9d398246ba48bccbc" translate="yes" xml:space="preserve">
          <source>Static and Class Methods</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 및 클래스 메소드&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b62c84c2f2fc62191f6409f49fae79e49e517dac" translate="yes" xml:space="preserve">
          <source>Static methods in python are called &lt;a href=&quot;http://pyref.infogami.com/classmethod&quot;&gt;classmethod&lt;/a&gt;s. Take a look at the following code</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬의 정적 메소드를 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://pyref.infogami.com/classmethod&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드라고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 코드를 살펴보십시오&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d61c5af957ba48ad3fdcd1f8f0c5694fc586119" translate="yes" xml:space="preserve">
          <source>The best way I found is to use another class. You can create an object and then use it on other objects.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 찾은 가장 좋은 방법은 다른 클래스를 사용하는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체를 만든 다음 다른 객체에서 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ee7082972a1c7359e7d63e796387aa7119e5ed4" translate="yes" xml:space="preserve">
          <source>The line &lt;code&gt;assert Test.i == x.i&lt;/code&gt; produces an error, because the &lt;code&gt;i&lt;/code&gt; attribute of &lt;code&gt;Test&lt;/code&gt; and &lt;code&gt;x&lt;/code&gt; are two different objects.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;라인 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assert Test.i == x.i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 때문에, 오류가 발생 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 특성을 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 두 개의 다른 물체이다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e207d54f3f66c85042f2980a5480da7329c015e9" translate="yes" xml:space="preserve">
          <source>The results are</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결과는&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eac1b4cec0ba95d3ad3640cc48cca64d6cd7b1df" translate="yes" xml:space="preserve">
          <source>The static variable will now remain in sync &lt;em&gt;between all class instances&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 변수는 이제 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 클래스 인스턴스간에&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 동기화 상태를 유지 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d175dc37234724759ae8499c9d5b6dfe21cd93be" translate="yes" xml:space="preserve">
          <source>Then whenever by accident you try to initialize &lt;strong&gt;MyClass&lt;/strong&gt; you'll get an StaticClassError.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 실수로 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MyClass&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 초기화하려고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 StaticClassError가 발생합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c1c6ea2a728f72467430bc488d980b6f7812f114" translate="yes" xml:space="preserve">
          <source>There are a few gotcha's here. Carrying on from the example above:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기 몇 가지가 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 예에서 수행 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8e90448feb1fc6ffec123e4902c92e7ec30ff32" translate="yes" xml:space="preserve">
          <source>There is an Records.py file that has nothing but &lt;code&gt;class&lt;/code&gt; objects defined with static methods and constructors that save some arguments.  Then from another .py file I &lt;code&gt;import Records&lt;/code&gt; but i need to dynamically select each object and then instantiate it on demand according to the type of data being read in.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 메소드 및 일부 인수를 저장하는 생성자로 정의 된 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 오브젝트 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;만있는 Records.py 파일이 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 다른 .py 파일에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;import Records&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 오지만 각 객체를 동적으로 선택한 다음 읽고있는 데이터 유형에 따라 필요에 따라 인스턴스화해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6cff49d2685531640b47e192800596a520bba4b4" translate="yes" xml:space="preserve">
          <source>This Script Results:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 스크립트 결과 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3fa353ca1cd885e1e7f147d5db84a2d135c81e0d" translate="yes" xml:space="preserve">
          <source>This class should present the static var &lt;code&gt;__success&lt;/code&gt; (Private Static Var).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 클래스는 static var &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__success&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (Private Static Var)를 제공해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d65fc440657ccbc4dee9a6811971adeea48f8783" translate="yes" xml:space="preserve">
          <source>This is because the line &lt;code&gt;x.i = 12&lt;/code&gt; has added a new instance attribute &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt; instead of changing the value of the &lt;code&gt;Test&lt;/code&gt; class &lt;code&gt;i&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x.i = 12&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 행 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 &lt;/font&gt; &lt;code&gt;Test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스 &lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 값을 변경하는 대신 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;새 인스턴스 속성 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 추가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;했기 때문 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f12657d5e0f44beb86fc4f972388e39c5a2d9d2d" translate="yes" xml:space="preserve">
          <source>This is different from C++ and Java, but not so different from C#, where a static member can't be accessed using a reference to an instance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이는 C ++ 및 Java와 다르지만 인스턴스 참조를 사용하여 정적 멤버에 액세스 할 수없는 C #과는 다릅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="902be678ff552c86849fe57e0a62e700be4d7d62" translate="yes" xml:space="preserve">
          <source>This means before assigning the value to instance property, if we try to access the property thru' instance, the static value is used. &lt;strong&gt;Each property declared in python class always has a static slot in memory&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, 인스턴스 속성에 값을 할당하기 전에 인스턴스를 통해 속성에 액세스하려고하면 정적 값이 사용됩니다. &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬 클래스에서 선언 된 각 속성은 항상 메모리에 정적 슬롯이&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="60a2f9857f978998d130aa55e96706b01dece78d" translate="yes" xml:space="preserve">
          <source>To avoid any potential confusion, I would like to contrast static variables and immutable objects.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;잠재적 인 혼란을 피하기 위해 정적 변수와 불변의 객체를 대조하고 싶습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="03b610518887187d17eae1f71a0ced296d90826a" translate="yes" xml:space="preserve">
          <source>UPDATE: this attempt &lt;strong&gt;is really pretty awful&lt;/strong&gt;; if you insist on doing something like this (hint: please don't; Python is a very elegant language and shoe-horning it into behaving like another language is just not necessary), use the code in &lt;a href=&quot;https://stackoverflow.com/a/36216964/2437514&quot;&gt;Ethan Furman's answer&lt;/a&gt; instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;업데이트 :이 시도 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 정말 끔찍합니다&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 같은 일을 주장하는 경우 (힌트 : 제발하지 마십시오; 파이썬은 매우 우아한 언어이며 다른 언어처럼 행동하도록 구두를 휘두르는 것은 필요하지 않습니다) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대신 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/36216964/2437514&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ethan Furman의 답변에&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 코드를 사용하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="55d169eee6cbf73a55a103c97b3a8f86a14e9715" translate="yes" xml:space="preserve">
          <source>Variables declared inside the class definition, but not inside a method are class or static variables:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 정의 내부에 선언되었지만 메소드 내부에는 선언되지 않은 변수는 클래스 또는 정적 변수입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d8ffdb8173233c2c17fd3ece0ddc1db436dc5696" translate="yes" xml:space="preserve">
          <source>When define some member variable outside any member method, the variable can be either static or non-static depending on how the variable is expressed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;멤버 메소드 외부에서 일부 멤버 변수를 정의 할 때 변수는 표현식이 표현되는 방식에 따라 정적 또는 비정적일 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="57b9f463ab237084bfd30d8c5ce587fa31a4f6ec" translate="yes" xml:space="preserve">
          <source>Why use static method in pythonic sense, if it has no relation whatever to the class! If I were you, I'd either use classmethod or define the method independent from the class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스와 관련이없는 경우 정적 방법을 파이썬의 의미로 사용하십시오! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 당신이라면 classmethod를 사용하거나 클래스와 독립적으로 메소드를 정의합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e5845522a8f0889e4d26e11472d31957b0a5c67" translate="yes" xml:space="preserve">
          <source>With the example above, I made a class named &lt;code&gt;staticFlag&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 예제를 통해 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;staticFlag&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 라는 클래스를 만들었습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3fe78493a78b0db687ba5723cbd51b3331a8d2c3" translate="yes" xml:space="preserve">
          <source>Yes, definitely possible to write static variables and methods in python.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇습니다. 정적 변수와 메소드를 파이썬으로 작성할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e54fc2579c6516bf7252df36dd093f3fb20ac36f" translate="yes" xml:space="preserve">
          <source>You can also add class variables to classes on the fly</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 변수를 즉시 클래스에 추가 할 수도 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="126b723e778d0d460547d24ed9a07f26ea2c09b9" translate="yes" xml:space="preserve">
          <source>You can always raise an exception if quietly ignoring setting value (&lt;code&gt;pass&lt;/code&gt; above) is not your thing. If you're looking for a C++, Java style static class variable:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;조용히 무시 설정 값 (경우에 당신은 항상 예외를 일으킬 수 있습니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;pass&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 위) 당신의 일이 아니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C ++, Java 스타일 정적 클래스 변수를 찾고있는 경우 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8196642b30bce4710429aaf9f58f9978c4f7181b" translate="yes" xml:space="preserve">
          <source>You can use a list or a dictionary to get &quot;static behavior&quot; between instances.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;목록이나 사전을 사용하여 인스턴스간에 &quot;정적 동작&quot;을 얻을 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1016d03781823b954bc6bd1a0a7c08385615ecdd" translate="yes" xml:space="preserve">
          <source>You could also enforce a class to be static using metaclass.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메타 클래스를 사용하여 클래스를 정적으로 만들 수도 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="42dedc3b16fd40173a3154115a36ebd9bb2ba137" translate="yes" xml:space="preserve">
          <source>and in use:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 사용 중 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b3df91c008d10ff7eb93984296a3827ba8e3537e" translate="yes" xml:space="preserve">
          <source>and some tests:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 일부 테스트 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="73b8427ebc9e80db4f1373ae0d7951406a01acdc" translate="yes" xml:space="preserve">
          <source>explanation</source>
          <target state="translated">explanation</target>
        </trans-unit>
        <trans-unit id="afcb2418e5a2e1a5f3adc8ab74fc80bd4839b24d" translate="yes" xml:space="preserve">
          <source>or use a decorator</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 데코레이터를 사용하십시오&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1029d67644815d428f554e390aa966d57a0b29b8" translate="yes" xml:space="preserve">
          <source>output</source>
          <target state="translated">output</target>
        </trans-unit>
        <trans-unit id="081c88d752751c574111b5133f57fd6961ade81c" translate="yes" xml:space="preserve">
          <source>resulting in ...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 야기하는 ...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7270fb48a58802a3360289641a78eff29822ed3e" translate="yes" xml:space="preserve">
          <source>self.var inside class is not static variable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 내부의 self.var는 정적 변수가 아닙니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="94b3874dc8866a1cc7a25d0f00ac9e3e38c34bd6" translate="yes" xml:space="preserve">
          <source>var inside the class member function is not defined.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 멤버 함수 내부의 var가 정의되어 있지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
