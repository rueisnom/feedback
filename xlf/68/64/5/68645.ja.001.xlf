<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/68645">
    <body>
      <group id="68645">
        <trans-unit id="fb3c02b0eeef390bcce865c7e2bf9425d0a705bc" translate="yes" xml:space="preserve">
          <source>&quot;Static Variables&quot;</source>
          <target state="translated">&quot;静的変数</target>
        </trans-unit>
        <trans-unit id="923c98ff322c67bbf340c4c55101c705035e55fe" translate="yes" xml:space="preserve">
          <source>(NOTE: That is, unless a class instance decides to define its own version of &lt;code&gt;_i&lt;/code&gt;! But if someone decides to do THAT, they deserve what they get, don't they???)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（注：つまり、クラスインスタンスが独自のバージョンの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;_i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を定義することを決定しない限り&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;！しかし、誰かがそれを行うことを決定した場合、彼らは彼らが得るものに値するのではないでしょうか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fe80505db325683081cb2b8043640419938dd054" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tryIt&lt;/code&gt; class represented the regular class we need to use.</source>
          <target state="translated">&lt;code&gt;tryIt&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスは、使用する必要がある通常のクラスを表しています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3fcc0a40b8d044e78f2de5ebaafc54bbbd2c37c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Partial&lt;/em&gt; expected static variable behavior, i.e., syncing of the attribute between multiple instances (but &lt;strong&gt;not&lt;/strong&gt; with the class itself; see &quot;gotcha&quot; below), can be achieved by turning the class attribute into a property:</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;予想される&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;部分的&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;な静的変数の動作、つまり、複数のインスタンス間での属性の同期（ただし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、クラス自体との&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同期ではあり&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ません&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。以下の「問題」を参照）は、クラス属性をプロパティに変換することで実現できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee3b9876fda717b971917c803e2fa0ae98ed95f8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;REAL, ACTUAL&lt;/em&gt; Static Variables - &lt;code&gt;Test.i == x.i&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;REAL、&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;Test.i == x.i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的変数&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-Test.i == xi&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c84779c986093e3848942ecefdbf373d3303ffd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Emulating static variable behavior of other languages using a metaclass&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メタクラスを使用して他の言語の静的変数の動作をエミュレートする&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b75698168fab613d3f998ae1085b1c067132dfcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Instance variables:&lt;/strong&gt; Variables that are related and accessed by instance of a class are instance variables.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンス変数：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスのインスタンスによって関連付けられ、アクセスされる変数は、インスタンス変数です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bf79b0ce0a0e731516b8ad76a434185d5ed8f5db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Static Methods:&lt;/strong&gt; Similar to variables, static methods can be accessed directly using class Name. No need to create an instance.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的メソッド：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数と同様に、静的メソッドはクラス名を使用して直接アクセスできます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンスを作成する必要はありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e9355061a1a9a0a45aa77f0e192b893be52e2cbf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Static Variables :&lt;/strong&gt;
Variable declared at class level are called static variable which can be accessed directly using class name.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的変数：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; クラスレベルで宣言された変数は静的変数と呼ばれ、クラス名を使用して直接アクセスできます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b455eb0ee2a7eff8964d76d06c661454f8261d0" translate="yes" xml:space="preserve">
          <source>@Blair Conrad said static variables declared inside the class definition, but not inside a method are class or &quot;static&quot; variables:</source>
          <target state="translated">クラス定義の中で宣言された静的変数であって、メソッドの中で宣言されたものではないものは、クラス変数または「静的」変数であると @Blair Conrad 氏は述べています。</target>
        </trans-unit>
        <trans-unit id="1e02e2fa5e8076e3896f91c277496bb3aa522653" translate="yes" xml:space="preserve">
          <source>@Steve Johnson also answered regarding static methods, also documented under &quot;Built-in Functions&quot; in the Python Library Reference.</source>
          <target state="translated">また、静的メソッドについては、@Steve Johnson氏がPythonライブラリリファレンスの &quot;Built-in Functions &quot;でも解説しています。</target>
        </trans-unit>
        <trans-unit id="c1becb9a9c9125f2176a9c56ed6adb9e0d76496f" translate="yes" xml:space="preserve">
          <source>@Steve Johnson has already answered regarding &lt;a href=&quot;http://web.archive.org/web/20090214211613/http://pyref.infogami.com/staticmethod&quot;&gt;static methods&lt;/a&gt;, also documented under &lt;a href=&quot;https://docs.python.org/3/library/functions.html#staticmethod&quot;&gt;&quot;Built-in Functions&quot; in the Python Library Reference&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Steve Johnsonは、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://web.archive.org/web/20090214211613/http://pyref.infogami.com/staticmethod&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的メソッド&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に関して既に回答してい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。これ&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/functions.html#staticmethod&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、Pythonライブラリリファレンスの「組み込み関数」に&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も記載されてい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a517b8a67adfdb270dfe2e99f10d93d6f12557d" translate="yes" xml:space="preserve">
          <source>@beid also mentioned classmethod, which is similar to staticmethod. A classmethod's first argument is the class object. Example:</source>
          <target state="translated">また、@beidさんはclassmethodについても言及されていますが、これはstaticmethodと似たようなものです。classmethodの第一引数はクラスオブジェクトです。クラスメソッドの例です。</target>
        </trans-unit>
        <trans-unit id="a29f8a471567fa54f9038d7e7839104aeaf450ee" translate="yes" xml:space="preserve">
          <source>@beidy recommends &lt;a href=&quot;https://docs.python.org/3/library/functions.html#classmethod&quot;&gt;classmethod&lt;/a&gt;s over staticmethod, as the method then receives the class type as the first argument, but I'm still a little fuzzy on the advantages of this approach over staticmethod. If you are too, then it probably doesn't matter.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@beidyは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;staticmethodよりも&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/functions.html#classmethod&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;classmethodを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;お勧めし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。メソッド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は最初の引数としてクラス型を受け取るからですが、この方法のstaticmethodに対する利点についてはまだ少し曖昧です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたもそうなら、それはおそらく問題ではありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="716445368e64a991edb17b5a46b3339d2237d8e7" translate="yes" xml:space="preserve">
          <source>A catalog of the &quot;static variables&quot; is stored in the &lt;code&gt;StaticVarMeta.statics&lt;/code&gt; attribute. All attribute requests are initially attempted to be resolved using a substitute resolution order. I have dubbed this the &quot;static resolution order&quot;, or &quot;SRO&quot;. This is done by looking for the requested attribute in the set of &quot;static variables&quot; for a given class (or its parent classes). If the attribute does not appear in the &quot;SRO&quot;, the class will fall back on the default attribute get/set/delete behavior (i.e., &quot;MRO&quot;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「静的変数」のカタログは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;StaticVarMeta.statics&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;格納され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。すべての属性要求は、最初に代替の解決順序を使用して解決しようとします。これを「静的解決順序」または「SRO」と呼んでいます。これは、特定のクラス（またはその親クラス）の「静的変数」のセットで要求された属性を探すことによって行われます。属性が「SRO」に表示されない場合、クラスはデフォルトの属性の取得/設定/削除動作（つまり、「MRO」）にフォールバックします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9ba0e4cf819d3aecb8e28b09b879d8c4c956e753" translate="yes" xml:space="preserve">
          <source>A metaclass is the class of a class. The default metaclass for all classes in Python (i.e., the &quot;new style&quot; classes post Python 2.3 I believe) is &lt;code&gt;type&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メタクラスはクラスのクラスです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonのすべてのクラスのデフォルトのメタクラス（つまり、Python 2.3以降の「新しいスタイル」クラス）は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;type&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例えば：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d84b5cc9c11e8fbd038457df57121eaf2a5b05a" translate="yes" xml:space="preserve">
          <source>Absolutely Yes,
  Python by itself don't have any static data member explicitly, but We can have by doing so</source>
          <target state="translated">もちろんそうです。Python自体には静的データのメンバが明示的にはありませんが、以下のようにすることで静的データのメンバを持つことができます。</target>
        </trans-unit>
        <trans-unit id="b46b3d1dcf527451bdbc0461353f2ec10b9f1c26" translate="yes" xml:space="preserve">
          <source>All these objects are being added to the list &lt;code&gt;tryArr&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらすべてのオブジェクトは、リスト&lt;/font&gt;&lt;/font&gt; &lt;code&gt;tryArr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に追加されています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e4f17a8594b7ae763c648f0009c79dc5399ab7e7" translate="yes" xml:space="preserve">
          <source>Although it doesn't say anything specific about static variables or methods, the &lt;a href=&quot;http://docs.python.org/tut/&quot;&gt;Python tutorial&lt;/a&gt; has some relevant information on &lt;a href=&quot;https://docs.python.org/2/tutorial/classes.html&quot;&gt;classes and class objects&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的変数やメソッドについては何も述べていませんが、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/tut/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonチュートリアルに&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/tutorial/classes.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスとクラスオブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に関するいくつかの関連情報が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91787b9332a1283e843895baa576e5561b7f0f8e" translate="yes" xml:space="preserve">
          <source>And apply it to your own class like this (Python 3 only):</source>
          <target state="translated">そして、このように自分のクラスに適用します(Python 3のみ)。</target>
        </trans-unit>
        <trans-unit id="603ddd0924bfe8048ee6beb9057fae4e325e3a27" translate="yes" xml:space="preserve">
          <source>And class instances can change class variables</source>
          <target state="translated">そして、クラスインスタンスはクラス変数を変更することができます。</target>
        </trans-unit>
        <trans-unit id="ffc90a5ac13979e4c0b805d92ef0d61ac7029375" translate="yes" xml:space="preserve">
          <source>Are static class variables possible in Python</source>
          <target state="translated">Pythonで静的クラス変数は可能ですか?</target>
        </trans-unit>
        <trans-unit id="0a0ed2bafc9b01dbd74af85d75e3455632f19611" translate="yes" xml:space="preserve">
          <source>As @&lt;a href=&quot;https://stackoverflow.com/questions/68645/static-class-variables-in-python#answer-69067&quot;&gt;millerdev&lt;/a&gt; points out, this creates a class-level &lt;code&gt;i&lt;/code&gt; variable, but this is distinct from any instance-level &lt;code&gt;i&lt;/code&gt; variable, so you could have</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@ &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/68645/static-class-variables-in-python#answer-69067&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;millerdevが&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指摘するように、これはクラスレベルの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ますが、これはインスタンスレベルの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は異なる&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ので、&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b48d5c164190553420fa013b9a2e15d51ba80f51" translate="yes" xml:space="preserve">
          <source>As the other answers have noted, static and class methods are easily accomplished using the built-in decorators:</source>
          <target state="translated">他の回答でも指摘されているように、スタティックメソッドやクラスメソッドは組み込みのデコレータを使って簡単に実現できます。</target>
        </trans-unit>
        <trans-unit id="6849c9c54c02634651dc00427dec658eb5da9ab8" translate="yes" xml:space="preserve">
          <source>As usual, the first argument to &lt;code&gt;MyMethod()&lt;/code&gt; is bound to the class instance object. In contrast, the first argument to &lt;code&gt;MyClassMethod()&lt;/code&gt; is &lt;em&gt;bound to the class object itself&lt;/em&gt; (e.g., in this case, &lt;code&gt;Test&lt;/code&gt;). For &lt;code&gt;MyStaticMethod()&lt;/code&gt;, none of the arguments are bound, and having arguments at all is optional.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常どおり、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyMethod()&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初の引数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はクラスインスタンスオブジェクトにバインドされます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;対照的に、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyClassMethod()&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初の引数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、クラスオブジェクト自体&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（この場合は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）に&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バインドされています&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyStaticMethod()&lt;/code&gt; 、&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引数のどれも結合せず、全く引数を有する任意であるれます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5c1e001f8d06fe61e487859615fdde64ca65b701" translate="yes" xml:space="preserve">
          <source>Below is a metaclass I have created which attempts to emulate &quot;static variable&quot; behavior of other languages. It basically works by replacing the default getter, setter, and deleter with versions which check to see if the attribute being requested is a &quot;static variable&quot;.</source>
          <target state="translated">以下は、他の言語の &quot;static variable &quot;の動作をエミュレートするために作成したメタクラスです。基本的には、デフォルトのゲッター、セッター、削除子を、要求された属性が &quot;静的変数 &quot;であるかどうかをチェックするバージョンに置き換えることで動作します。</target>
        </trans-unit>
        <trans-unit id="de1e8590d73a98048d90751fc3c9ca7ee3b1a1e5" translate="yes" xml:space="preserve">
          <source>But keep in mind, a static method cannot call a non-static method in python.</source>
          <target state="translated">しかし、Pythonではスタティックメソッドは非スタティックメソッドを呼び出すことができないことを覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="034d9c75b21b8bdab27752521c503330e9ae8145" translate="yes" xml:space="preserve">
          <source>CLASSNAME.var is static variable</source>
          <target state="translated">CLASSNAME.varは静的変数です。</target>
        </trans-unit>
        <trans-unit id="27f53cfc72387e2ee44e393370ad734a7a2d754b" translate="yes" xml:space="preserve">
          <source>Clearly, the member &lt;code&gt;i&lt;/code&gt; of &lt;code&gt;Test&lt;/code&gt; must be a &lt;code&gt;property&lt;/code&gt; object, which is the type of object returned from the &lt;code&gt;property&lt;/code&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;明らかに、&lt;/font&gt; &lt;code&gt;Test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;のメンバー&lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt; &lt;code&gt;property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なければなりません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。これは、&lt;/font&gt; &lt;code&gt;property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から返されるオブジェクトのタイプです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd30f1cd4685ddb51bcfd080d74eaf11e7c00e74" translate="yes" xml:space="preserve">
          <source>For anyone using a class factory with &lt;strong&gt;python3.6&lt;/strong&gt; and up use the &lt;code&gt;nonlocal&lt;/code&gt; keyword to add it to the scope / context of the class being created like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;python3.6以降で&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスファクトリを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用している場合は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;nonlocal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーワードを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成されているクラスのスコープ/コンテキストに次のように追加します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="2b54ba729e81ff9978c8fb36147cf3390572603a" translate="yes" xml:space="preserve">
          <source>For immutable static variable behavior, simply omit the &lt;code&gt;property&lt;/code&gt; setter:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不変の静的変数の動作については、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;セッターを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;省略し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f6e2ec17416b5276ca6187ea22ee603d1ffbfe2b" translate="yes" xml:space="preserve">
          <source>For static properties.. Its time you look up some python definition.. variable can always change. There are two types of them mutable and immutable.. Also, there are class attributes and instance attributes.. Nothing really like static attributes in the sense of java &amp;amp; c++</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的プロパティの場合..そのときは、いくつかのpython定義を検索します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それらには、変更可能と不変の2つのタイプがあります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="482ad5ff83b6ece8126bc6706f0498390e307cf8" translate="yes" xml:space="preserve">
          <source>Have a look at &lt;a href=&quot;https://stackoverflow.com/a/102062/717357&quot;&gt;this answer&lt;/a&gt; and the official docs &lt;a href=&quot;https://docs.python.org/2/howto/descriptor.html&quot;&gt;HOWTO&lt;/a&gt; for more information about descriptors.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;見てい&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/102062/717357&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この回答&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;や公式ドキュメントの&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/howto/descriptor.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HOWTO&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;記述子の詳細については、を。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d33a527cb9b6867a3151aa24601ccec91f4d74c5" translate="yes" xml:space="preserve">
          <source>Here's a proof-of-concept written in Python 3 -- if any of the exact details are wrong the code can be tweaked to match just about whatever you mean by a &lt;code&gt;static variable&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 3で記述された概念実証は次のとおりです。正確な詳細のいずれかが間違っている場合は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;static variable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;意味するものとほぼ一致するようにコードを調整でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc932230a709472b96d584b039369020ce7d8983" translate="yes" xml:space="preserve">
          <source>However, implementing &quot;static variables&quot; (well, &lt;em&gt;mutable&lt;/em&gt; static variables, anyway, if that's not a contradiction in terms...) is not as straight forward. As millerdev &lt;a href=&quot;https://stackoverflow.com/a/69067/2437514&quot;&gt;pointed out in his answer&lt;/a&gt;, the problem is that Python's class attributes are not truly &quot;static variables&quot;. Consider:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、「静的変数」（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とにかく&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変更可能な&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的変数、つまり用語で矛盾がない場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）の実装&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、それほど単純ではありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Millerdev &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/69067/2437514&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が彼の回答&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指摘したように&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、問題はPythonのクラス属性が本当に「静的変数」ではないことです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;検討してください：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f8a487fc6cd6a6763e809c1188898ae1fbd2b19" translate="yes" xml:space="preserve">
          <source>However, you can define your own metaclass like this:</source>
          <target state="translated">しかし、このように独自のメタクラスを定義することができます。</target>
        </trans-unit>
        <trans-unit id="7a0af7a1ab4f0bfd806d739ba81825a2c5f216bc" translate="yes" xml:space="preserve">
          <source>I present a solution to the above 'gotcha' below; however I would suggest - strenuously - that you do not try to do something like the following until - at minimum - you thoroughly understand why &lt;code&gt;assert Test.i = x.i&lt;/code&gt; causes an error.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は上記の「問題」の解決策を以下に示します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、私は- &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assert Test.i = x.i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -少なくとも&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-Test.i = xi&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がエラーを引き起こす&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;理由を完全に理解するまでは、次のようなことをしないでください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95bb1b0d431026a4d5396f2ff19d5bf214bbf4fb" translate="yes" xml:space="preserve">
          <source>I present the (Python 3) solution below for informational purposes only. I am not endorsing it as a &quot;good solution&quot;. I have my doubts as to whether emulating the static variable behavior of other languages in Python is ever actually necessary. However, regardless as to whether it is actually useful, the below should help further understanding of how Python works.</source>
          <target state="translated">以下の(Python 3)ソリューションは、情報提供のみを目的としたものです。私はこれを &quot;良い解決策 &quot;として推奨しているわけではありません。他の言語の静的変数の挙動をPythonでエミュレートすることが本当に必要なのかどうかについては疑問があります。しかし、実際に役に立つかどうかに関わらず、以下の解決策はPythonの仕組みをより深く理解するのに役立つはずです。</target>
        </trans-unit>
        <trans-unit id="bf192665549b7bf056c69785006798c8da7ed033" translate="yes" xml:space="preserve">
          <source>INSTANCENAME.var is not static variable.</source>
          <target state="translated">INSTANCENAME.varは静的変数ではありません。</target>
        </trans-unit>
        <trans-unit id="92c791c6da652ba33da92a5b7ebc0cbf7fb9fdf2" translate="yes" xml:space="preserve">
          <source>If you find the above confusing, you are most likely still thinking about it from the perspective of other languages (e.g. Java or c++). You should go study the &lt;code&gt;property&lt;/code&gt; object, about the order in which Python attributes are returned, the descriptor protocol, and the method resolution order (MRO).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記の混乱を見つけた場合でも、他の言語（Javaやc ++など）の観点から考えている可能性があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python属性が返される順序、記述子プロトコル、メソッド解決順序（MRO）について&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;調べてください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a793a0b8dbc9d5cbd4f6953387ce957e43bb28e5" translate="yes" xml:space="preserve">
          <source>Immutable &quot;Static Variables&quot;</source>
          <target state="translated">不変の「静的変数</target>
        </trans-unit>
        <trans-unit id="5e0698c5f3aa0792d204ff6d50cac604fafda38d" translate="yes" xml:space="preserve">
          <source>In regards to this &lt;a href=&quot;https://stackoverflow.com/a/68672/717357&quot;&gt;answer&lt;/a&gt;, for a &lt;em&gt;constant&lt;/em&gt; static variable, you can use a descriptor. Here's an example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/68672/717357&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;回答&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に関しては&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定数の&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合、記述子を使用できます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に例を示します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="23d8e625b60f08d46acca2cd6f6c70dbf987a866" translate="yes" xml:space="preserve">
          <source>Is it possible to have static class variables or methods in Python? What syntax is required to do this?</source>
          <target state="translated">Pythonで静的なクラス変数やメソッドを持つことは可能ですか?そのためにはどのような構文が必要ですか?</target>
        </trans-unit>
        <trans-unit id="227728c0117a3347b1f1e4ff01ea4a621ed1c380" translate="yes" xml:space="preserve">
          <source>It is possible to have &lt;code&gt;static&lt;/code&gt; class variables, but probably not worth the effort.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス変数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を持つことは可能&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ですが、おそらく努力する価値はありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2122ce24b3105ea2e7912a3e3ce6b1dd723c9a35" translate="yes" xml:space="preserve">
          <source>Just for kicks and giggles, we could call &lt;em&gt;myInstanceMethod&lt;/em&gt; on the class by passing in an instance of the class, like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キックとクスクスの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ために、次のようにクラスのインスタンスを渡すことにより、クラスで&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;myInstanceMethod&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出すことができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad3f82e3da3ccd456a6c0fcd7b2c4c35c05deafd" translate="yes" xml:space="preserve">
          <source>Making a variable static takes this a step further by disallowing the variable name to point to any object but that to which it currently points. (Note: this is a general software concept and not specific to Python; please see others' posts for information about implementing statics in Python).</source>
          <target state="translated">変数を静的にすることで、変数名が現在指すオブジェクト以外のオブジェクトを指すことを禁止することで、これをさらに一歩進めます。(注意:これは一般的なソフトウェアの概念であり、Pythonに特有のものではありません。Pythonでのスタティックの実装についての情報は、他の人の投稿を参照してください)。</target>
        </trans-unit>
        <trans-unit id="43441a1f202581c71f8ec82052e59dfe772e9196" translate="yes" xml:space="preserve">
          <source>Many people will find this surprising. However, it should not be. If we go back and inspect our &lt;code&gt;Test&lt;/code&gt; class definition (the second version), we take note of this line:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;多くの人がこれを意外と感じるでしょう。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、そうであってはなりません。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスの定義（2番目のバージョン）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に戻って調べたら&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、次の行に注意してください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d1379f495b367651ba8de70dfe76b9a5e75999fa" translate="yes" xml:space="preserve">
          <source>Normally there aren't any assignments to these after they are created.  Note that the lookup uses &lt;code&gt;self&lt;/code&gt; because, although &lt;code&gt;label&lt;/code&gt; is static in the sense of not being associated with a &lt;em&gt;particular&lt;/em&gt; instance, the value still depends on the (class of the) instance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常、作成後にこれらへの割り当てはありません。&lt;/font&gt; &lt;code&gt;label&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;特定の&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に関連付けられていないという意味では静的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、値はインスタンス（のクラス）に依存する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ルックアップでは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; が&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用されることに注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="98d0b0d29eb9847e22f23f5f2fe6b2b149ab6c65" translate="yes" xml:space="preserve">
          <source>Note that technically speaking, &lt;code&gt;i&lt;/code&gt; is still not a 'static variable' at all; it is a &lt;code&gt;property&lt;/code&gt;, which is a special type of descriptor. However, the &lt;code&gt;property&lt;/code&gt; behavior is now equivalent to a (mutable) static variable synced across all class instances.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;技術的に言えば、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はまだ「静的変数」ではない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことに注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;であり、特殊なタイプの記述子です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;動作は、すべてのクラスインスタンス間で同期される（可変）静的変数と同等になりました。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e28be6f65f9b868c62441821b4e55d9c148212b9" translate="yes" xml:space="preserve">
          <source>Note that the above methods only work with &lt;em&gt;instances&lt;/em&gt; of your class - they will &lt;strong&gt;not&lt;/strong&gt; work &lt;em&gt;when using the class itself&lt;/em&gt;. So for example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記の方法でのみ動作することに注意してください&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンス&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;彼らはなります-あなたのクラスのが&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ない&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作業&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス自体を使用&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;だから例えば：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2aa8de918d1257f189538703f8d0a84d945f9beb" translate="yes" xml:space="preserve">
          <source>Notice how the instance variable &lt;code&gt;t.i&lt;/code&gt; got out of sync with the &quot;static&quot; class variable when the attribute &lt;code&gt;i&lt;/code&gt; was set directly on &lt;code&gt;t&lt;/code&gt;. This is because &lt;code&gt;i&lt;/code&gt; was re-bound within the &lt;code&gt;t&lt;/code&gt; namespace, which is distinct from the &lt;code&gt;Test&lt;/code&gt; namespace. If you want to change the value of a &quot;static&quot; variable, you must change it within the scope (or object) where it was originally defined. I put &quot;static&quot; in quotes because Python does not really have static variables in the sense that C++ and Java do.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt; &lt;code&gt;t&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;直接設定された&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ときに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、インスタンス変数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;t.i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が「静的」クラス変数と同期しなくなったことに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。これは、&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; は&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内再結合した&lt;/font&gt; &lt;code&gt;t&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;区別される名前空間、&lt;/font&gt; &lt;code&gt;Test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ネームスペース。 「静的」変数の値を変更する場合は、元々定義されていたスコープ（またはオブジェクト）内で変更する必要があります。 PythonにはC ++やJavaのように静的変数がないので、「静的」を引用符で囲みました。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b11f25deb60bcf114999baab257666e9e2348aaf" translate="yes" xml:space="preserve">
          <source>Notice that when we call the method &lt;em&gt;myInstanceMethod&lt;/em&gt;, we get an error. This is because it requires that method be called on an instance of this class. The method &lt;em&gt;myStaticMethod&lt;/em&gt; is set as a classmethod using the &lt;a href=&quot;http://www.python.org/dev/peps/pep-0318/&quot;&gt;decorator&lt;/a&gt;&lt;em&gt;@classmethod&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッド&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;myInstanceMethod&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を呼び出すと&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、エラーが発生することに注意してください。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、このクラスのインスタンスでメソッドを呼び出す必要があるためです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッド&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;myStaticMethod&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.python.org/dev/peps/pep-0318/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デコレータ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@classmethod&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用してクラスメソッドとして設定され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="04b11500326db84662ca01bae977689a11325b6b" translate="yes" xml:space="preserve">
          <source>Now I made an object for one flag (&lt;code&gt;staticFlag&lt;/code&gt;). This flag will be sent as reference to all the regular objects.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで、1つのフラグ（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;staticFlag&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトを作成しました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このフラグは、すべての通常のオブジェクトへの参照として送信されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a63fef43f83986e3b879a67e1e0bc2160f63c588" translate="yes" xml:space="preserve">
          <source>Now attempting to set the instance &lt;code&gt;i&lt;/code&gt; attribute will return an &lt;code&gt;AttributeError&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンス&lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を設定しようとする&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が返されます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="93b9e7a0a6529c120d308e3a9afc60556aa4685a" translate="yes" xml:space="preserve">
          <source>Now you can do:</source>
          <target state="translated">これでできるようになりました。</target>
        </trans-unit>
        <trans-unit id="a8143fc64259415dc4e81d9b7c8ca127e00dfb6d" translate="yes" xml:space="preserve">
          <source>One Gotcha to be Aware of</source>
          <target state="translated">気をつけるべき1つのガチャ</target>
        </trans-unit>
        <trans-unit id="cf866e2eaf69fa7d0d427fbeb00721940a9b2ab6" translate="yes" xml:space="preserve">
          <source>One special thing to note about static properties &amp;amp; instance properties, shown in the example below:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次の例に示すように、静的プロパティとインスタンスプロパティについて特筆すべき1つの点は&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba96023bb3d145e2c5235de13d92f0c0bb0272ef" translate="yes" xml:space="preserve">
          <source>One very interesting point about Python's attribute lookup is that it can be used to create &quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Virtual_function&quot;&gt;virtual&lt;/a&gt; variables&quot;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonの属性ルックアップに関する非常に興味深い点の1つは、「&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Virtual_function&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仮想&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数」の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成に使用できること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="385b691c1ae1c4adc4de1e88d36cc95e38a9138f" translate="yes" xml:space="preserve">
          <source>Personally I would use a classmethod whenever I needed a static method. Mainly because I get the class as an argument.</source>
          <target state="translated">個人的には、静的メソッドが必要なときはクラスメソッドを使います。主な理由は、引数としてクラスを取得するからです。</target>
        </trans-unit>
        <trans-unit id="066c6dab07691f1f0eaca748f5bdb9aa86a40369" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://docs.python.org/3/tutorial/classes.html#class-objects&quot;&gt;what the Python tutorial has to say on the subject of classes and class objects&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/tutorial/classes.html#class-objects&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスとクラスオブジェクトについて、Pythonチュートリアルが何を言っているかを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ご覧ください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="19468e42d1406facfb94b682d3988e089dffb3f3" translate="yes" xml:space="preserve">
          <source>So this is probably a hack, but I've been using &lt;code&gt;eval(str)&lt;/code&gt; to obtain an static object, kind of a contradiction, in python 3.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、これはおそらくハックですが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、Python 3で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval(str)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して、矛盾のような静的オブジェクトを取得しています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5bd63a0154590f547e524ecb2acae4fec295a56" translate="yes" xml:space="preserve">
          <source>So where &lt;code&gt;object_name = 'RecordOne'&lt;/code&gt; or the class name, I call &lt;code&gt;cur_type = eval(object_name)&lt;/code&gt; and then to instantiate it you do &lt;code&gt;cur_inst = cur_type(args)&lt;/code&gt;
However before you instantiate you can call static methods from &lt;code&gt;cur_type.getName()&lt;/code&gt; for example, kind of like abstract base class implementation or whatever the goal is.  However in the backend, it's probably instantiated in python and is not truly static, because eval is returning an object....which must have been instantiated....that gives static like behavior.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;だからここで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;object_name = 'RecordOne'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;またはクラス名を、私は呼ん&lt;/font&gt;&lt;/font&gt; &lt;code&gt;cur_type = eval(object_name)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それをインスタンス化し、その後に、あなた行う&lt;/font&gt;&lt;/font&gt; &lt;code&gt;cur_inst = cur_type(args)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; あなたがからの静的メソッドを呼び出すことができますインスタンスが前に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;cur_type.getName()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、抽象的な基本クラスの実装など、目的が何であれ。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、バックエンドでは、evalがオブジェクトを返しているので、おそらくpythonでインスタンス化され、真に静的ではありません。インスタンス化されている必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c67360c3d645d0aa1adb9aa2212a5a28b5ee6429" translate="yes" xml:space="preserve">
          <source>Some primitive object types like integers, floats, strings, and touples are immutable in Python. This means that the object that is referred to by a given name cannot change if it is of one of the aforementioned object types. The name can be reassigned to a different object, but the object itself may not be changed.</source>
          <target state="translated">Pythonでは、整数、浮動小数点数、文字列、カップルのようないくつかの原始的なオブジェクト型は不変です。これは、与えられた名前で参照されるオブジェクトが、前述のオブジェクト型のいずれかである場合、変更できないことを意味します。名前は別のオブジェクトに再割り当てできますが、オブジェクト自体は変更できません。</target>
        </trans-unit>
        <trans-unit id="77a636b5b4d7a2176f8e66c9c644dc845450890a" translate="yes" xml:space="preserve">
          <source>Static Variables in Class factory python3.6</source>
          <target state="translated">クラスファクトリの静的変数 python3.6</target>
        </trans-unit>
        <trans-unit id="3e09b5597dc2f831a37224a9d398246ba48bccbc" translate="yes" xml:space="preserve">
          <source>Static and Class Methods</source>
          <target state="translated">静的メソッドとクラスメソッド</target>
        </trans-unit>
        <trans-unit id="b62c84c2f2fc62191f6409f49fae79e49e517dac" translate="yes" xml:space="preserve">
          <source>Static methods in python are called &lt;a href=&quot;http://pyref.infogami.com/classmethod&quot;&gt;classmethod&lt;/a&gt;s. Take a look at the following code</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonの静的メソッドは&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://pyref.infogami.com/classmethod&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;classmethod&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次のコードを見てください&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d61c5af957ba48ad3fdcd1f8f0c5694fc586119" translate="yes" xml:space="preserve">
          <source>The best way I found is to use another class. You can create an object and then use it on other objects.</source>
          <target state="translated">私が見つけた最良の方法は、別のクラスを使うことです。オブジェクトを作成して、それを他のオブジェクトで使うことができます。</target>
        </trans-unit>
        <trans-unit id="3ee7082972a1c7359e7d63e796387aa7119e5ed4" translate="yes" xml:space="preserve">
          <source>The line &lt;code&gt;assert Test.i == x.i&lt;/code&gt; produces an error, because the &lt;code&gt;i&lt;/code&gt; attribute of &lt;code&gt;Test&lt;/code&gt; and &lt;code&gt;x&lt;/code&gt; are two different objects.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ライン&lt;/font&gt;&lt;/font&gt; &lt;code&gt;assert Test.i == x.i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あるため、エラーを生成し&lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の属性&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;及び&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 2つの異なるオブジェクトです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e207d54f3f66c85042f2980a5480da7329c015e9" translate="yes" xml:space="preserve">
          <source>The results are</source>
          <target state="translated">結果は</target>
        </trans-unit>
        <trans-unit id="eac1b4cec0ba95d3ad3640cc48cca64d6cd7b1df" translate="yes" xml:space="preserve">
          <source>The static variable will now remain in sync &lt;em&gt;between all class instances&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これで、静的変数は&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのクラスインスタンス間&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で同期したままになり&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d175dc37234724759ae8499c9d5b6dfe21cd93be" translate="yes" xml:space="preserve">
          <source>Then whenever by accident you try to initialize &lt;strong&gt;MyClass&lt;/strong&gt; you'll get an StaticClassError.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、誤って&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MyClass&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を初期化しようとすると&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、StaticClassErrorが発生します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c1c6ea2a728f72467430bc488d980b6f7812f114" translate="yes" xml:space="preserve">
          <source>There are a few gotcha's here. Carrying on from the example above:</source>
          <target state="translated">ここにはいくつかの問題があります。上の例の続きです</target>
        </trans-unit>
        <trans-unit id="a8e90448feb1fc6ffec123e4902c92e7ec30ff32" translate="yes" xml:space="preserve">
          <source>There is an Records.py file that has nothing but &lt;code&gt;class&lt;/code&gt; objects defined with static methods and constructors that save some arguments.  Then from another .py file I &lt;code&gt;import Records&lt;/code&gt; but i need to dynamically select each object and then instantiate it on demand according to the type of data being read in.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一部の引数を保存する静的メソッドとコンストラクターで定義され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;た&lt;/font&gt;&lt;/font&gt; &lt;code&gt;class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトのみ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を含むRecords.pyファイルがあり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、別の.pyファイルから&lt;/font&gt;&lt;/font&gt; &lt;code&gt;import Records&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インポートし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ますが、各オブジェクトを動的に選択し、読み込まれるデータの種類に応じてオンデマンドでインスタンス化する必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6cff49d2685531640b47e192800596a520bba4b4" translate="yes" xml:space="preserve">
          <source>This Script Results:</source>
          <target state="translated">このスクリプトの結果です。</target>
        </trans-unit>
        <trans-unit id="3fa353ca1cd885e1e7f147d5db84a2d135c81e0d" translate="yes" xml:space="preserve">
          <source>This class should present the static var &lt;code&gt;__success&lt;/code&gt; (Private Static Var).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このクラスは、静的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__success&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（プライベート静的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を提示する必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d65fc440657ccbc4dee9a6811971adeea48f8783" translate="yes" xml:space="preserve">
          <source>This is because the line &lt;code&gt;x.i = 12&lt;/code&gt; has added a new instance attribute &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt; instead of changing the value of the &lt;code&gt;Test&lt;/code&gt; class &lt;code&gt;i&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、行&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x.i = 12&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;Test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; class &lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値を変更する代わりに、&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;新しいインスタンス属性&lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;追加した&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f12657d5e0f44beb86fc4f972388e39c5a2d9d2d" translate="yes" xml:space="preserve">
          <source>This is different from C++ and Java, but not so different from C#, where a static member can't be accessed using a reference to an instance.</source>
          <target state="translated">これはC++やJavaとは違いますが、インスタンスへの参照を使って静的メンバにアクセスできないC#とはあまり違いません。</target>
        </trans-unit>
        <trans-unit id="902be678ff552c86849fe57e0a62e700be4d7d62" translate="yes" xml:space="preserve">
          <source>This means before assigning the value to instance property, if we try to access the property thru' instance, the static value is used. &lt;strong&gt;Each property declared in python class always has a static slot in memory&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、インスタンスプロパティに値を割り当てる前に、インスタンスを通じてプロパティにアクセスしようとすると、静的な値が使用されます。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonクラスで宣言された各プロパティには、常にメモリ内に静的スロットがあります&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="60a2f9857f978998d130aa55e96706b01dece78d" translate="yes" xml:space="preserve">
          <source>To avoid any potential confusion, I would like to contrast static variables and immutable objects.</source>
          <target state="translated">混乱を避けるために、静的変数と不変オブジェクトを対比させたいと思います。</target>
        </trans-unit>
        <trans-unit id="03b610518887187d17eae1f71a0ced296d90826a" translate="yes" xml:space="preserve">
          <source>UPDATE: this attempt &lt;strong&gt;is really pretty awful&lt;/strong&gt;; if you insist on doing something like this (hint: please don't; Python is a very elegant language and shoe-horning it into behaving like another language is just not necessary), use the code in &lt;a href=&quot;https://stackoverflow.com/a/36216964/2437514&quot;&gt;Ethan Furman's answer&lt;/a&gt; instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更新：この試み&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は本当にひどい&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このようなことを主張する場合（ヒント：しないでください。Pythonは非常にエレガントな言語であり、他の言語のように動作するように靴角を張る必要はありません）、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代わり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/36216964/2437514&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ethan Furmanの回答の&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コードを使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="55d169eee6cbf73a55a103c97b3a8f86a14e9715" translate="yes" xml:space="preserve">
          <source>Variables declared inside the class definition, but not inside a method are class or static variables:</source>
          <target state="translated">クラス定義内で宣言された変数であって、メソッド内で宣言された変数ではないものは、クラス変数または静的変数です。</target>
        </trans-unit>
        <trans-unit id="d8ffdb8173233c2c17fd3ece0ddc1db436dc5696" translate="yes" xml:space="preserve">
          <source>When define some member variable outside any member method, the variable can be either static or non-static depending on how the variable is expressed.</source>
          <target state="translated">メンバ・メソッドの外でメンバ変数を定義する場合、その変数の表現方法に応じて、静的または非静的のいずれかにすることができます。</target>
        </trans-unit>
        <trans-unit id="57b9f463ab237084bfd30d8c5ce587fa31a4f6ec" translate="yes" xml:space="preserve">
          <source>Why use static method in pythonic sense, if it has no relation whatever to the class! If I were you, I'd either use classmethod or define the method independent from the class.</source>
          <target state="translated">クラスとは何の関係もないのに、なぜピソニックな意味でスタティックメソッドを使うのでしょうか?私があなただったら、クラスメソッドを使うか、クラスから独立したメソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="3e5845522a8f0889e4d26e11472d31957b0a5c67" translate="yes" xml:space="preserve">
          <source>With the example above, I made a class named &lt;code&gt;staticFlag&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記の例では、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;staticFlag&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;という名前のクラスを作成しました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3fe78493a78b0db687ba5723cbd51b3331a8d2c3" translate="yes" xml:space="preserve">
          <source>Yes, definitely possible to write static variables and methods in python.</source>
          <target state="translated">はい、pythonで静的変数やメソッドを書くことは間違いなく可能です。</target>
        </trans-unit>
        <trans-unit id="e54fc2579c6516bf7252df36dd093f3fb20ac36f" translate="yes" xml:space="preserve">
          <source>You can also add class variables to classes on the fly</source>
          <target state="translated">また、その場でクラス変数をクラスに追加することもできます。</target>
        </trans-unit>
        <trans-unit id="126b723e778d0d460547d24ed9a07f26ea2c09b9" translate="yes" xml:space="preserve">
          <source>You can always raise an exception if quietly ignoring setting value (&lt;code&gt;pass&lt;/code&gt; above) is not your thing. If you're looking for a C++, Java style static class variable:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定値（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;pass&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静かに無視することが目的でない場合は、常に例外を発生させることができ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C ++、Javaスタイルの静的クラス変数を探している場合：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8196642b30bce4710429aaf9f58f9978c4f7181b" translate="yes" xml:space="preserve">
          <source>You can use a list or a dictionary to get &quot;static behavior&quot; between instances.</source>
          <target state="translated">リストや辞書を使って、インスタンス間の「静的な振る舞い」を取得することができます。</target>
        </trans-unit>
        <trans-unit id="1016d03781823b954bc6bd1a0a7c08385615ecdd" translate="yes" xml:space="preserve">
          <source>You could also enforce a class to be static using metaclass.</source>
          <target state="translated">また、メタクラスを使ってクラスを静的にするように強制することもできます。</target>
        </trans-unit>
        <trans-unit id="42dedc3b16fd40173a3154115a36ebd9bb2ba137" translate="yes" xml:space="preserve">
          <source>and in use:</source>
          <target state="translated">と使用中。</target>
        </trans-unit>
        <trans-unit id="b3df91c008d10ff7eb93984296a3827ba8e3537e" translate="yes" xml:space="preserve">
          <source>and some tests:</source>
          <target state="translated">といくつかのテストを行いました。</target>
        </trans-unit>
        <trans-unit id="73b8427ebc9e80db4f1373ae0d7951406a01acdc" translate="yes" xml:space="preserve">
          <source>explanation</source>
          <target state="translated">explanation</target>
        </trans-unit>
        <trans-unit id="afcb2418e5a2e1a5f3adc8ab74fc80bd4839b24d" translate="yes" xml:space="preserve">
          <source>or use a decorator</source>
          <target state="translated">またはデコレーターを使う</target>
        </trans-unit>
        <trans-unit id="1029d67644815d428f554e390aa966d57a0b29b8" translate="yes" xml:space="preserve">
          <source>output</source>
          <target state="translated">output</target>
        </trans-unit>
        <trans-unit id="081c88d752751c574111b5133f57fd6961ade81c" translate="yes" xml:space="preserve">
          <source>resulting in ...</source>
          <target state="translated">になる</target>
        </trans-unit>
        <trans-unit id="7270fb48a58802a3360289641a78eff29822ed3e" translate="yes" xml:space="preserve">
          <source>self.var inside class is not static variable.</source>
          <target state="translated">クラス内のself.varは静的変数ではありません。</target>
        </trans-unit>
        <trans-unit id="94b3874dc8866a1cc7a25d0f00ac9e3e38c34bd6" translate="yes" xml:space="preserve">
          <source>var inside the class member function is not defined.</source>
          <target state="translated">クラスのメンバ関数内のvarは定義されていません。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
