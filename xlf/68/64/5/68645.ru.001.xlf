<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/68645">
    <body>
      <group id="68645">
        <trans-unit id="fb3c02b0eeef390bcce865c7e2bf9425d0a705bc" translate="yes" xml:space="preserve">
          <source>&quot;Static Variables&quot;</source>
          <target state="translated">&quot;Статические переменные&quot;</target>
        </trans-unit>
        <trans-unit id="923c98ff322c67bbf340c4c55101c705035e55fe" translate="yes" xml:space="preserve">
          <source>(NOTE: That is, unless a class instance decides to define its own version of &lt;code&gt;_i&lt;/code&gt;! But if someone decides to do THAT, they deserve what they get, don't they???)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(ПРИМЕЧАНИЕ. То есть, если экземпляр класса не решит определить свою собственную версию &lt;/font&gt;&lt;/font&gt; &lt;code&gt;_i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ! Но если кто-то решит сделать ЭТО, он заслуживает того, что получает, не так ли?)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fe80505db325683081cb2b8043640419938dd054" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tryIt&lt;/code&gt; class represented the regular class we need to use.</source>
          <target state="translated">&lt;code&gt;tryIt&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Класс &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tryIt&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; представляет собой обычный класс, который нам нужно использовать.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3fcc0a40b8d044e78f2de5ebaafc54bbbd2c37c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Partial&lt;/em&gt; expected static variable behavior, i.e., syncing of the attribute between multiple instances (but &lt;strong&gt;not&lt;/strong&gt; with the class itself; see &quot;gotcha&quot; below), can be achieved by turning the class attribute into a property:</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Частичное&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ожидаемое поведение статической переменной, т. Е. Синхронизация атрибута между несколькими экземплярами (но &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;не&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; с самим классом; см. &amp;laquo;Полученная информация&amp;raquo; ниже), может быть достигнута путем превращения атрибута класса в свойство:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee3b9876fda717b971917c803e2fa0ae98ed95f8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;REAL, ACTUAL&lt;/em&gt; Static Variables - &lt;code&gt;Test.i == x.i&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;РЕАЛЬНЫЕ, АКТУАЛЬНЫЕ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; статические переменные - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Test.i == x.i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c84779c986093e3848942ecefdbf373d3303ffd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Emulating static variable behavior of other languages using a metaclass&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Эмуляция поведения статических переменных других языков с использованием метакласса&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b75698168fab613d3f998ae1085b1c067132dfcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Instance variables:&lt;/strong&gt; Variables that are related and accessed by instance of a class are instance variables.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Переменные экземпляра:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Переменные, которые связаны и доступны экземпляру класса, являются переменными экземпляра.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bf79b0ce0a0e731516b8ad76a434185d5ed8f5db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Static Methods:&lt;/strong&gt; Similar to variables, static methods can be accessed directly using class Name. No need to create an instance.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Статические методы:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Подобно переменным, статические методы могут быть доступны напрямую с помощью класса Name. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Не нужно создавать экземпляр.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e9355061a1a9a0a45aa77f0e192b893be52e2cbf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Static Variables :&lt;/strong&gt;
Variable declared at class level are called static variable which can be accessed directly using class name.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Статические переменные:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; переменные, объявленные на уровне класса, называются статическими переменными, к которым можно обращаться напрямую, используя имя класса.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b455eb0ee2a7eff8964d76d06c661454f8261d0" translate="yes" xml:space="preserve">
          <source>@Blair Conrad said static variables declared inside the class definition, but not inside a method are class or &quot;static&quot; variables:</source>
          <target state="translated">@Blair Conrad сказал,что статические переменные,объявленные внутри определения класса,но не внутри метода-это класс или &quot;статические&quot; переменные:</target>
        </trans-unit>
        <trans-unit id="1e02e2fa5e8076e3896f91c277496bb3aa522653" translate="yes" xml:space="preserve">
          <source>@Steve Johnson also answered regarding static methods, also documented under &quot;Built-in Functions&quot; in the Python Library Reference.</source>
          <target state="translated">@ Стив Джонсон также ответил на вопрос о статических методах,также задокументированных в разделе &quot;Встроенные функции&quot; в Справочнике библиотеки Python.</target>
        </trans-unit>
        <trans-unit id="c1becb9a9c9125f2176a9c56ed6adb9e0d76496f" translate="yes" xml:space="preserve">
          <source>@Steve Johnson has already answered regarding &lt;a href=&quot;http://web.archive.org/web/20090214211613/http://pyref.infogami.com/staticmethod&quot;&gt;static methods&lt;/a&gt;, also documented under &lt;a href=&quot;https://docs.python.org/3/library/functions.html#staticmethod&quot;&gt;&quot;Built-in Functions&quot; in the Python Library Reference&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Steve Johnson уже ответил о &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://web.archive.org/web/20090214211613/http://pyref.infogami.com/staticmethod&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;статических методах&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , также описанных в разделе &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/functions.html#staticmethod&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;laquo;Встроенные функции&amp;raquo; в Справочнике по библиотеке Python&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a517b8a67adfdb270dfe2e99f10d93d6f12557d" translate="yes" xml:space="preserve">
          <source>@beid also mentioned classmethod, which is similar to staticmethod. A classmethod's first argument is the class object. Example:</source>
          <target state="translated">@beid также упомянул метод одноклассников,похожий на статический метод.Первым аргументом метода класса является объект класса.Пример:</target>
        </trans-unit>
        <trans-unit id="a29f8a471567fa54f9038d7e7839104aeaf450ee" translate="yes" xml:space="preserve">
          <source>@beidy recommends &lt;a href=&quot;https://docs.python.org/3/library/functions.html#classmethod&quot;&gt;classmethod&lt;/a&gt;s over staticmethod, as the method then receives the class type as the first argument, but I'm still a little fuzzy on the advantages of this approach over staticmethod. If you are too, then it probably doesn't matter.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@beidy рекомендует использовать &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/functions.html#classmethod&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;classmethod вместо&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; staticmethod, так как метод затем получает тип класса в качестве первого аргумента, но я все еще не совсем понимаю преимущества этого подхода по сравнению со staticmethod. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы тоже, то это, вероятно, не имеет значения.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="716445368e64a991edb17b5a46b3339d2237d8e7" translate="yes" xml:space="preserve">
          <source>A catalog of the &quot;static variables&quot; is stored in the &lt;code&gt;StaticVarMeta.statics&lt;/code&gt; attribute. All attribute requests are initially attempted to be resolved using a substitute resolution order. I have dubbed this the &quot;static resolution order&quot;, or &quot;SRO&quot;. This is done by looking for the requested attribute in the set of &quot;static variables&quot; for a given class (or its parent classes). If the attribute does not appear in the &quot;SRO&quot;, the class will fall back on the default attribute get/set/delete behavior (i.e., &quot;MRO&quot;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Каталог &amp;laquo;статических переменных&amp;raquo; хранится в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;StaticVarMeta.statics&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Все запросы атрибутов первоначально пытаются разрешить, используя порядок разрешения замены. Я назвал это &amp;laquo;статическим разрешением&amp;raquo; или &amp;laquo;SRO&amp;raquo;. Это делается путем поиска запрошенного атрибута в наборе &amp;laquo;статических переменных&amp;raquo; для данного класса (или его родительских классов). Если атрибут не отображается в &amp;laquo;SRO&amp;raquo;, класс будет использовать атрибут get / set / delete по умолчанию для атрибута (т. Е. &amp;laquo;MRO&amp;raquo;).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9ba0e4cf819d3aecb8e28b09b879d8c4c956e753" translate="yes" xml:space="preserve">
          <source>A metaclass is the class of a class. The default metaclass for all classes in Python (i.e., the &quot;new style&quot; classes post Python 2.3 I believe) is &lt;code&gt;type&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Метакласс - это класс класса. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Метакласс по умолчанию для всех классов в Python (т. Е. Классы &amp;laquo;нового стиля&amp;raquo; после Python 2.3, я считаю) является &lt;/font&gt;&lt;/font&gt; &lt;code&gt;type&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Например:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d84b5cc9c11e8fbd038457df57121eaf2a5b05a" translate="yes" xml:space="preserve">
          <source>Absolutely Yes,
  Python by itself don't have any static data member explicitly, but We can have by doing so</source>
          <target state="translated">Абсолютно Да,Python сам по себе не имеет явных членов статических данных,но мы можем иметь,сделав это.</target>
        </trans-unit>
        <trans-unit id="b46b3d1dcf527451bdbc0461353f2ec10b9f1c26" translate="yes" xml:space="preserve">
          <source>All these objects are being added to the list &lt;code&gt;tryArr&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Все эти объекты добавляются в список &lt;/font&gt;&lt;/font&gt; &lt;code&gt;tryArr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e4f17a8594b7ae763c648f0009c79dc5399ab7e7" translate="yes" xml:space="preserve">
          <source>Although it doesn't say anything specific about static variables or methods, the &lt;a href=&quot;http://docs.python.org/tut/&quot;&gt;Python tutorial&lt;/a&gt; has some relevant information on &lt;a href=&quot;https://docs.python.org/2/tutorial/classes.html&quot;&gt;classes and class objects&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Хотя в нем нет ничего конкретного о статических переменных или методах, в &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/tut/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;руководстве&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; по &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; есть некоторая соответствующая информация о &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/tutorial/classes.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;классах и объектах классов&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91787b9332a1283e843895baa576e5561b7f0f8e" translate="yes" xml:space="preserve">
          <source>And apply it to your own class like this (Python 3 only):</source>
          <target state="translated">И применить его к своему классу вот так (только на Python 3):</target>
        </trans-unit>
        <trans-unit id="603ddd0924bfe8048ee6beb9057fae4e325e3a27" translate="yes" xml:space="preserve">
          <source>And class instances can change class variables</source>
          <target state="translated">А экземпляры классов могут изменять переменные класса</target>
        </trans-unit>
        <trans-unit id="ffc90a5ac13979e4c0b805d92ef0d61ac7029375" translate="yes" xml:space="preserve">
          <source>Are static class variables possible in Python</source>
          <target state="translated">Возможны ли статические переменные класса на Python</target>
        </trans-unit>
        <trans-unit id="0a0ed2bafc9b01dbd74af85d75e3455632f19611" translate="yes" xml:space="preserve">
          <source>As @&lt;a href=&quot;https://stackoverflow.com/questions/68645/static-class-variables-in-python#answer-69067&quot;&gt;millerdev&lt;/a&gt; points out, this creates a class-level &lt;code&gt;i&lt;/code&gt; variable, but this is distinct from any instance-level &lt;code&gt;i&lt;/code&gt; variable, so you could have</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;указывает &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@ &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/68645/static-class-variables-in-python#answer-69067&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;millerdev&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , это создает &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;переменную &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;уровня класса &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , но она отличается от любой &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;переменной &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;уровня экземпляра &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , так что вы можете иметь&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b48d5c164190553420fa013b9a2e15d51ba80f51" translate="yes" xml:space="preserve">
          <source>As the other answers have noted, static and class methods are easily accomplished using the built-in decorators:</source>
          <target state="translated">Как уже отмечалось в других ответах,статические и классовые методы легко выполняются с помощью встроенных декораторов:</target>
        </trans-unit>
        <trans-unit id="6849c9c54c02634651dc00427dec658eb5da9ab8" translate="yes" xml:space="preserve">
          <source>As usual, the first argument to &lt;code&gt;MyMethod()&lt;/code&gt; is bound to the class instance object. In contrast, the first argument to &lt;code&gt;MyClassMethod()&lt;/code&gt; is &lt;em&gt;bound to the class object itself&lt;/em&gt; (e.g., in this case, &lt;code&gt;Test&lt;/code&gt;). For &lt;code&gt;MyStaticMethod()&lt;/code&gt;, none of the arguments are bound, and having arguments at all is optional.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как обычно, первый аргумент &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyMethod()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; связан с объектом экземпляра класса. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В противоположность этому &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, первый аргумент &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyClassMethod()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будет &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;связан с самим объектом класса&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (например, в данном случае, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyStaticMethod()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ни один из аргументов не связан, и наличие аргументов вообще необязательно.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5c1e001f8d06fe61e487859615fdde64ca65b701" translate="yes" xml:space="preserve">
          <source>Below is a metaclass I have created which attempts to emulate &quot;static variable&quot; behavior of other languages. It basically works by replacing the default getter, setter, and deleter with versions which check to see if the attribute being requested is a &quot;static variable&quot;.</source>
          <target state="translated">Ниже приведен созданный мною метакласс,который пытается эмулировать поведение &quot;статических переменных&quot; других языков.В основном он работает путем замены стандартного getter,setter и deleter версиями,которые проверяют,является ли запрашиваемый атрибут &quot;статической переменной&quot;.</target>
        </trans-unit>
        <trans-unit id="de1e8590d73a98048d90751fc3c9ca7ee3b1a1e5" translate="yes" xml:space="preserve">
          <source>But keep in mind, a static method cannot call a non-static method in python.</source>
          <target state="translated">Но учтите,что статический метод не может вызвать нестатический метод в питоне.</target>
        </trans-unit>
        <trans-unit id="034d9c75b21b8bdab27752521c503330e9ae8145" translate="yes" xml:space="preserve">
          <source>CLASSNAME.var is static variable</source>
          <target state="translated">CLASSNAME.var является статической переменной.</target>
        </trans-unit>
        <trans-unit id="27f53cfc72387e2ee44e393370ad734a7a2d754b" translate="yes" xml:space="preserve">
          <source>Clearly, the member &lt;code&gt;i&lt;/code&gt; of &lt;code&gt;Test&lt;/code&gt; must be a &lt;code&gt;property&lt;/code&gt; object, which is the type of object returned from the &lt;code&gt;property&lt;/code&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ясно, что член &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; класса &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; должен быть &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объектом &lt;/font&gt;&lt;/font&gt; &lt;code&gt;property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , который является типом объекта, возвращаемого &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;функцией &lt;/font&gt;&lt;/font&gt; &lt;code&gt;property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd30f1cd4685ddb51bcfd080d74eaf11e7c00e74" translate="yes" xml:space="preserve">
          <source>For anyone using a class factory with &lt;strong&gt;python3.6&lt;/strong&gt; and up use the &lt;code&gt;nonlocal&lt;/code&gt; keyword to add it to the scope / context of the class being created like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для тех , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;кто с &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;помощью фабрики классов с &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;python3.6&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и выше использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;nonlocal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ключевое слово , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;чтобы добавить его в области видимости / контекст класса создаются следующим образом:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>
        </trans-unit>
        <trans-unit id="2b54ba729e81ff9978c8fb36147cf3390572603a" translate="yes" xml:space="preserve">
          <source>For immutable static variable behavior, simply omit the &lt;code&gt;property&lt;/code&gt; setter:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для поведения неизменяемой статической переменной просто опустите &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;установщик &lt;/font&gt;&lt;/font&gt; &lt;code&gt;property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f6e2ec17416b5276ca6187ea22ee603d1ffbfe2b" translate="yes" xml:space="preserve">
          <source>For static properties.. Its time you look up some python definition.. variable can always change. There are two types of them mutable and immutable.. Also, there are class attributes and instance attributes.. Nothing really like static attributes in the sense of java &amp;amp; c++</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для статических свойств ... Пришло время посмотреть какое-то определение Python. Переменная всегда может измениться. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Есть два типа: изменяемые и неизменяемые. Кроме того, есть атрибуты класса и атрибуты экземпляра. Ничто на самом деле не похоже на статические атрибуты в смысле java &amp;amp; c ++.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="482ad5ff83b6ece8126bc6706f0498390e307cf8" translate="yes" xml:space="preserve">
          <source>Have a look at &lt;a href=&quot;https://stackoverflow.com/a/102062/717357&quot;&gt;this answer&lt;/a&gt; and the official docs &lt;a href=&quot;https://docs.python.org/2/howto/descriptor.html&quot;&gt;HOWTO&lt;/a&gt; for more information about descriptors.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Посмотрите &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/102062/717357&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;этот ответ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и документацию &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/howto/descriptor.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HOWTO&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для получения дополнительной информации о дескрипторах.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d33a527cb9b6867a3151aa24601ccec91f4d74c5" translate="yes" xml:space="preserve">
          <source>Here's a proof-of-concept written in Python 3 -- if any of the exact details are wrong the code can be tweaked to match just about whatever you mean by a &lt;code&gt;static variable&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот подтверждение концепции, написанное на Python 3 - если какие-то точные детали неверны, код можно настроить так, чтобы он соответствовал практически любому значению &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static variable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc932230a709472b96d584b039369020ce7d8983" translate="yes" xml:space="preserve">
          <source>However, implementing &quot;static variables&quot; (well, &lt;em&gt;mutable&lt;/em&gt; static variables, anyway, if that's not a contradiction in terms...) is not as straight forward. As millerdev &lt;a href=&quot;https://stackoverflow.com/a/69067/2437514&quot;&gt;pointed out in his answer&lt;/a&gt;, the problem is that Python's class attributes are not truly &quot;static variables&quot;. Consider:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Однако реализация &amp;laquo;статических переменных&amp;raquo; (ну, в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;любом случае &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;изменяемых&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; статических переменных, если это не противоречие в терминах ...) не так проста. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как Миллердев &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/69067/2437514&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;указал в своем ответе&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , проблема в том, что атрибуты класса Python не являются действительно &amp;laquo;статическими переменными&amp;raquo;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Рассматривать:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f8a487fc6cd6a6763e809c1188898ae1fbd2b19" translate="yes" xml:space="preserve">
          <source>However, you can define your own metaclass like this:</source>
          <target state="translated">Однако,вы можете определить свой собственный метакласс вот так:</target>
        </trans-unit>
        <trans-unit id="7a0af7a1ab4f0bfd806d739ba81825a2c5f216bc" translate="yes" xml:space="preserve">
          <source>I present a solution to the above 'gotcha' below; however I would suggest - strenuously - that you do not try to do something like the following until - at minimum - you thoroughly understand why &lt;code&gt;assert Test.i = x.i&lt;/code&gt; causes an error.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я представляю решение вышеупомянутой &amp;laquo;ошибки&amp;raquo; ниже; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;тем не менее, я бы настоятельно рекомендовал - неукоснительно - не пытаться делать что-то вроде следующего, пока - как минимум - вы полностью не поймете, почему &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assert Test.i = x.i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вызывает ошибку.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95bb1b0d431026a4d5396f2ff19d5bf214bbf4fb" translate="yes" xml:space="preserve">
          <source>I present the (Python 3) solution below for informational purposes only. I am not endorsing it as a &quot;good solution&quot;. I have my doubts as to whether emulating the static variable behavior of other languages in Python is ever actually necessary. However, regardless as to whether it is actually useful, the below should help further understanding of how Python works.</source>
          <target state="translated">Ниже я представляю решение (Python 3)только в информационных целях.Я не одобряю его в качестве &quot;хорошего решения&quot;.У меня есть сомнения в том,что эмуляция статического поведения переменных других языков на Python когда-нибудь будет действительно необходима.Однако,независимо от того,является ли оно действительно полезным,нижеприведённое решение должно помочь более глубокому пониманию того,как работает Python.</target>
        </trans-unit>
        <trans-unit id="bf192665549b7bf056c69785006798c8da7ed033" translate="yes" xml:space="preserve">
          <source>INSTANCENAME.var is not static variable.</source>
          <target state="translated">INSTANCENAME.var не является статической переменной.</target>
        </trans-unit>
        <trans-unit id="92c791c6da652ba33da92a5b7ebc0cbf7fb9fdf2" translate="yes" xml:space="preserve">
          <source>If you find the above confusing, you are most likely still thinking about it from the perspective of other languages (e.g. Java or c++). You should go study the &lt;code&gt;property&lt;/code&gt; object, about the order in which Python attributes are returned, the descriptor protocol, and the method resolution order (MRO).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы находите вышеупомянутое в замешательстве, скорее всего, вы все еще думаете об этом с точки зрения других языков (например, Java или c ++). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вам следует изучить &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объект &lt;/font&gt;&lt;/font&gt; &lt;code&gt;property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , порядок, в котором возвращаются атрибуты Python, протокол дескриптора и порядок разрешения методов (MRO).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a793a0b8dbc9d5cbd4f6953387ce957e43bb28e5" translate="yes" xml:space="preserve">
          <source>Immutable &quot;Static Variables&quot;</source>
          <target state="translated">Неизменные &quot;Статические переменные&quot;</target>
        </trans-unit>
        <trans-unit id="5e0698c5f3aa0792d204ff6d50cac604fafda38d" translate="yes" xml:space="preserve">
          <source>In regards to this &lt;a href=&quot;https://stackoverflow.com/a/68672/717357&quot;&gt;answer&lt;/a&gt;, for a &lt;em&gt;constant&lt;/em&gt; static variable, you can use a descriptor. Here's an example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Что касается этого &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/68672/717357&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ответа&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , для &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;постоянной&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; статической переменной вы можете использовать дескриптор. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот пример:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="23d8e625b60f08d46acca2cd6f6c70dbf987a866" translate="yes" xml:space="preserve">
          <source>Is it possible to have static class variables or methods in Python? What syntax is required to do this?</source>
          <target state="translated">Возможно ли на Python наличие статических переменных или методов класса? Какой синтаксис необходим для этого?</target>
        </trans-unit>
        <trans-unit id="227728c0117a3347b1f1e4ff01ea4a621ed1c380" translate="yes" xml:space="preserve">
          <source>It is possible to have &lt;code&gt;static&lt;/code&gt; class variables, but probably not worth the effort.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Возможно иметь &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; переменные класса, но, вероятно, не стоит усилий.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2122ce24b3105ea2e7912a3e3ce6b1dd723c9a35" translate="yes" xml:space="preserve">
          <source>Just for kicks and giggles, we could call &lt;em&gt;myInstanceMethod&lt;/em&gt; on the class by passing in an instance of the class, like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Просто для &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;удовольствия&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; мы можем вызвать &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;myInstanceMethod&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для класса, передав экземпляр класса следующим образом:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad3f82e3da3ccd456a6c0fcd7b2c4c35c05deafd" translate="yes" xml:space="preserve">
          <source>Making a variable static takes this a step further by disallowing the variable name to point to any object but that to which it currently points. (Note: this is a general software concept and not specific to Python; please see others' posts for information about implementing statics in Python).</source>
          <target state="translated">Сделав переменную статической,мы сделаем еще один шаг вперед,запретив имя переменной указывать на любой объект,кроме того,на который она в данный момент указывает.(Замечание:это общая концепция программного обеспечения и не является специфичной для Python;пожалуйста,ознакомьтесь с постами других разработчиков для получения информации о реализации статики на Python).</target>
        </trans-unit>
        <trans-unit id="43441a1f202581c71f8ec82052e59dfe772e9196" translate="yes" xml:space="preserve">
          <source>Many people will find this surprising. However, it should not be. If we go back and inspect our &lt;code&gt;Test&lt;/code&gt; class definition (the second version), we take note of this line:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Многие найдут это удивительным. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Однако так не должно быть. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если мы вернемся и проверим &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;определение класса &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (вторая версия), мы обратим внимание на следующую строку:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d1379f495b367651ba8de70dfe76b9a5e75999fa" translate="yes" xml:space="preserve">
          <source>Normally there aren't any assignments to these after they are created.  Note that the lookup uses &lt;code&gt;self&lt;/code&gt; because, although &lt;code&gt;label&lt;/code&gt; is static in the sense of not being associated with a &lt;em&gt;particular&lt;/em&gt; instance, the value still depends on the (class of the) instance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обычно нет никаких назначений этим после того, как они созданы. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обратите внимание, что поиск использует &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; потому что, хотя &lt;/font&gt;&lt;/font&gt; &lt;code&gt;label&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является статической в ​​том смысле, что она не связана с &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;конкретным&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; экземпляром, значение по-прежнему зависит от экземпляра (класса).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="98d0b0d29eb9847e22f23f5f2fe6b2b149ab6c65" translate="yes" xml:space="preserve">
          <source>Note that technically speaking, &lt;code&gt;i&lt;/code&gt; is still not a 'static variable' at all; it is a &lt;code&gt;property&lt;/code&gt;, which is a special type of descriptor. However, the &lt;code&gt;property&lt;/code&gt; behavior is now equivalent to a (mutable) static variable synced across all class instances.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обратите внимание, что с технической точки зрения &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; все еще не являюсь &amp;laquo;статической переменной&amp;raquo;; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;это &lt;/font&gt;&lt;/font&gt; &lt;code&gt;property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , которое представляет собой особый тип дескриптора. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Однако &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;поведение &lt;/font&gt;&lt;/font&gt; &lt;code&gt;property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; теперь эквивалентно (изменяемой) статической переменной, синхронизированной во всех экземплярах класса.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e28be6f65f9b868c62441821b4e55d9c148212b9" translate="yes" xml:space="preserve">
          <source>Note that the above methods only work with &lt;em&gt;instances&lt;/em&gt; of your class - they will &lt;strong&gt;not&lt;/strong&gt; work &lt;em&gt;when using the class itself&lt;/em&gt;. So for example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обратите внимание, что приведенные выше методы работают только с &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;экземплярами&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вашего класса - они &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;не&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будут &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;работать &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;при использовании самого класса&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так, например:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2aa8de918d1257f189538703f8d0a84d945f9beb" translate="yes" xml:space="preserve">
          <source>Notice how the instance variable &lt;code&gt;t.i&lt;/code&gt; got out of sync with the &quot;static&quot; class variable when the attribute &lt;code&gt;i&lt;/code&gt; was set directly on &lt;code&gt;t&lt;/code&gt;. This is because &lt;code&gt;i&lt;/code&gt; was re-bound within the &lt;code&gt;t&lt;/code&gt; namespace, which is distinct from the &lt;code&gt;Test&lt;/code&gt; namespace. If you want to change the value of a &quot;static&quot; variable, you must change it within the scope (or object) where it was originally defined. I put &quot;static&quot; in quotes because Python does not really have static variables in the sense that C++ and Java do.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обратите внимание, как переменная экземпляра &lt;/font&gt;&lt;/font&gt; &lt;code&gt;t.i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вышла из синхронизации со &amp;laquo;статической&amp;raquo; переменной класса, когда атрибут &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; был установлен непосредственно на &lt;/font&gt;&lt;/font&gt; &lt;code&gt;t&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Это потому, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; был повторно связан с &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;пространством имен &lt;/font&gt;&lt;/font&gt; &lt;code&gt;t&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , которое отличается от &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;пространства имен &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Если вы хотите изменить значение &amp;laquo;статической&amp;raquo; переменной, вы должны изменить его в пределах области (или объекта), где оно было первоначально определено. Я поместил &amp;laquo;статический&amp;raquo; в кавычки, потому что Python на самом деле не имеет статических переменных в том смысле, как в C ++ и Java.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b11f25deb60bcf114999baab257666e9e2348aaf" translate="yes" xml:space="preserve">
          <source>Notice that when we call the method &lt;em&gt;myInstanceMethod&lt;/em&gt;, we get an error. This is because it requires that method be called on an instance of this class. The method &lt;em&gt;myStaticMethod&lt;/em&gt; is set as a classmethod using the &lt;a href=&quot;http://www.python.org/dev/peps/pep-0318/&quot;&gt;decorator&lt;/a&gt;&lt;em&gt;@classmethod&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обратите внимание, что когда мы вызываем метод &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;myInstanceMethod&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , мы получаем ошибку. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это потому, что он требует, чтобы метод вызывался для экземпляра этого класса. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Метод &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;myStaticMethod&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; устанавливается как &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;метод &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;класса&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; с использованием &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.python.org/dev/peps/pep-0318/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;декоратора &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@classmethod&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="04b11500326db84662ca01bae977689a11325b6b" translate="yes" xml:space="preserve">
          <source>Now I made an object for one flag (&lt;code&gt;staticFlag&lt;/code&gt;). This flag will be sent as reference to all the regular objects.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь я сделал объект для одного флага ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;staticFlag&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Этот флаг будет отправлен как ссылка на все обычные объекты.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a63fef43f83986e3b879a67e1e0bc2160f63c588" translate="yes" xml:space="preserve">
          <source>Now attempting to set the instance &lt;code&gt;i&lt;/code&gt; attribute will return an &lt;code&gt;AttributeError&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь попытка установить &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;атрибут &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;instance &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вернет &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="93b9e7a0a6529c120d308e3a9afc60556aa4685a" translate="yes" xml:space="preserve">
          <source>Now you can do:</source>
          <target state="translated">Теперь ты можешь:</target>
        </trans-unit>
        <trans-unit id="a8143fc64259415dc4e81d9b7c8ca127e00dfb6d" translate="yes" xml:space="preserve">
          <source>One Gotcha to be Aware of</source>
          <target state="translated">Один Получил,чтобы быть в курсе</target>
        </trans-unit>
        <trans-unit id="cf866e2eaf69fa7d0d427fbeb00721940a9b2ab6" translate="yes" xml:space="preserve">
          <source>One special thing to note about static properties &amp;amp; instance properties, shown in the example below:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Особое замечание о статических свойствах и свойствах экземпляра показано в примере ниже:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba96023bb3d145e2c5235de13d92f0c0bb0272ef" translate="yes" xml:space="preserve">
          <source>One very interesting point about Python's attribute lookup is that it can be used to create &quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Virtual_function&quot;&gt;virtual&lt;/a&gt; variables&quot;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Одним из очень интересных моментов в поиске атрибутов Python является то, что его можно использовать для создания &amp;laquo; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Virtual_function&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;виртуальных&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; переменных&amp;raquo;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="385b691c1ae1c4adc4de1e88d36cc95e38a9138f" translate="yes" xml:space="preserve">
          <source>Personally I would use a classmethod whenever I needed a static method. Mainly because I get the class as an argument.</source>
          <target state="translated">Лично я бы использовал метод одноклассников всякий раз,когда мне нужен был статический метод.Главным образом потому,что я получаю класс в качестве аргумента.</target>
        </trans-unit>
        <trans-unit id="066c6dab07691f1f0eaca748f5bdb9aa86a40369" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://docs.python.org/3/tutorial/classes.html#class-objects&quot;&gt;what the Python tutorial has to say on the subject of classes and class objects&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Посмотрите, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/tutorial/classes.html#class-objects&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;что в учебнике по Python говорится о предметах классов и объектов классов&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="19468e42d1406facfb94b682d3988e089dffb3f3" translate="yes" xml:space="preserve">
          <source>So this is probably a hack, but I've been using &lt;code&gt;eval(str)&lt;/code&gt; to obtain an static object, kind of a contradiction, in python 3.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так что это, вероятно, хак, но я использовал &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval(str)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для получения статического объекта, своего рода противоречие, в Python 3.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5bd63a0154590f547e524ecb2acae4fec295a56" translate="yes" xml:space="preserve">
          <source>So where &lt;code&gt;object_name = 'RecordOne'&lt;/code&gt; or the class name, I call &lt;code&gt;cur_type = eval(object_name)&lt;/code&gt; and then to instantiate it you do &lt;code&gt;cur_inst = cur_type(args)&lt;/code&gt;
However before you instantiate you can call static methods from &lt;code&gt;cur_type.getName()&lt;/code&gt; for example, kind of like abstract base class implementation or whatever the goal is.  However in the backend, it's probably instantiated in python and is not truly static, because eval is returning an object....which must have been instantiated....that gives static like behavior.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так где &lt;/font&gt;&lt;/font&gt; &lt;code&gt;object_name = 'RecordOne'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или имя класса, я называю &lt;/font&gt;&lt;/font&gt; &lt;code&gt;cur_type = eval(object_name)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , а затем создать его экземпляр вы &lt;/font&gt;&lt;/font&gt; &lt;code&gt;cur_inst = cur_type(args)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Однако , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;прежде чем экземпляр вы можете вызывать статические методы из &lt;/font&gt;&lt;/font&gt; &lt;code&gt;cur_type.getName()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , например вроде как абстрактная реализация базового класса или какая-то цель &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Однако в бэкэнде он, вероятно, создается в python и не является по-настоящему статическим, потому что eval возвращает объект ... который должен быть создан ... который дает статическое поведение.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c67360c3d645d0aa1adb9aa2212a5a28b5ee6429" translate="yes" xml:space="preserve">
          <source>Some primitive object types like integers, floats, strings, and touples are immutable in Python. This means that the object that is referred to by a given name cannot change if it is of one of the aforementioned object types. The name can be reassigned to a different object, but the object itself may not be changed.</source>
          <target state="translated">Некоторые примитивные типы объектов,такие как целые числа,плавающие,строки и туры,являются неизменными на Python.Это означает,что объект,на который ссылается данное имя,не может измениться,если он относится к одному из вышеупомянутых типов объектов.Имя может быть переназначено на другой объект,но сам объект не может быть изменён.</target>
        </trans-unit>
        <trans-unit id="77a636b5b4d7a2176f8e66c9c644dc845450890a" translate="yes" xml:space="preserve">
          <source>Static Variables in Class factory python3.6</source>
          <target state="translated">Статические переменные в классе заводской питон3.6</target>
        </trans-unit>
        <trans-unit id="3e09b5597dc2f831a37224a9d398246ba48bccbc" translate="yes" xml:space="preserve">
          <source>Static and Class Methods</source>
          <target state="translated">Статический и классовый методы</target>
        </trans-unit>
        <trans-unit id="b62c84c2f2fc62191f6409f49fae79e49e517dac" translate="yes" xml:space="preserve">
          <source>Static methods in python are called &lt;a href=&quot;http://pyref.infogami.com/classmethod&quot;&gt;classmethod&lt;/a&gt;s. Take a look at the following code</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Статические методы в python называются &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://pyref.infogami.com/classmethod&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;classmethod&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; s. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Посмотрите на следующий код&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d61c5af957ba48ad3fdcd1f8f0c5694fc586119" translate="yes" xml:space="preserve">
          <source>The best way I found is to use another class. You can create an object and then use it on other objects.</source>
          <target state="translated">Лучший способ,который я нашел,это использовать другой класс.Вы можете создать объект,а затем использовать его на других объектах.</target>
        </trans-unit>
        <trans-unit id="3ee7082972a1c7359e7d63e796387aa7119e5ed4" translate="yes" xml:space="preserve">
          <source>The line &lt;code&gt;assert Test.i == x.i&lt;/code&gt; produces an error, because the &lt;code&gt;i&lt;/code&gt; attribute of &lt;code&gt;Test&lt;/code&gt; and &lt;code&gt;x&lt;/code&gt; are two different objects.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Строка &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assert Test.i == x.i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; выдает ошибку, потому что &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;атрибут &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это два разных объекта.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e207d54f3f66c85042f2980a5480da7329c015e9" translate="yes" xml:space="preserve">
          <source>The results are</source>
          <target state="translated">В результате были получены следующие результаты</target>
        </trans-unit>
        <trans-unit id="eac1b4cec0ba95d3ad3640cc48cca64d6cd7b1df" translate="yes" xml:space="preserve">
          <source>The static variable will now remain in sync &lt;em&gt;between all class instances&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Статическая переменная теперь будет синхронизироваться &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;между всеми экземплярами класса&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d175dc37234724759ae8499c9d5b6dfe21cd93be" translate="yes" xml:space="preserve">
          <source>Then whenever by accident you try to initialize &lt;strong&gt;MyClass&lt;/strong&gt; you'll get an StaticClassError.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Тогда всякий раз, когда вы случайно попытаетесь инициализировать &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MyClass,&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вы получите StaticClassError.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c1c6ea2a728f72467430bc488d980b6f7812f114" translate="yes" xml:space="preserve">
          <source>There are a few gotcha's here. Carrying on from the example above:</source>
          <target state="translated">Тут есть парочка &quot;gotcha's&quot;.Продолжаем на примере выше:</target>
        </trans-unit>
        <trans-unit id="a8e90448feb1fc6ffec123e4902c92e7ec30ff32" translate="yes" xml:space="preserve">
          <source>There is an Records.py file that has nothing but &lt;code&gt;class&lt;/code&gt; objects defined with static methods and constructors that save some arguments.  Then from another .py file I &lt;code&gt;import Records&lt;/code&gt; but i need to dynamically select each object and then instantiate it on demand according to the type of data being read in.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Существует файл Records.py, в котором нет ничего, кроме &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объектов &lt;/font&gt;&lt;/font&gt; &lt;code&gt;class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; определенных статическими методами и конструкторами, которые сохраняют некоторые аргументы. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Затем из другого файла .py я &lt;/font&gt;&lt;/font&gt; &lt;code&gt;import Records&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; но мне нужно динамически выбрать каждый объект, а затем создать его экземпляр по требованию в соответствии с типом данных, которые считываются.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6cff49d2685531640b47e192800596a520bba4b4" translate="yes" xml:space="preserve">
          <source>This Script Results:</source>
          <target state="translated">Результаты сценария:</target>
        </trans-unit>
        <trans-unit id="3fa353ca1cd885e1e7f147d5db84a2d135c81e0d" translate="yes" xml:space="preserve">
          <source>This class should present the static var &lt;code&gt;__success&lt;/code&gt; (Private Static Var).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Этот класс должен представлять статическую &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__success&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (Private Static Var).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d65fc440657ccbc4dee9a6811971adeea48f8783" translate="yes" xml:space="preserve">
          <source>This is because the line &lt;code&gt;x.i = 12&lt;/code&gt; has added a new instance attribute &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt; instead of changing the value of the &lt;code&gt;Test&lt;/code&gt; class &lt;code&gt;i&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это связано с тем, что строка &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x.i = 12&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; добавила новый атрибут экземпляра &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вместо изменения значения &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;атрибута &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; class &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f12657d5e0f44beb86fc4f972388e39c5a2d9d2d" translate="yes" xml:space="preserve">
          <source>This is different from C++ and Java, but not so different from C#, where a static member can't be accessed using a reference to an instance.</source>
          <target state="translated">Это отличается от C++и Java,но не так отличается от C#,где статический член не может быть доступен по ссылке на экземпляр.</target>
        </trans-unit>
        <trans-unit id="902be678ff552c86849fe57e0a62e700be4d7d62" translate="yes" xml:space="preserve">
          <source>This means before assigning the value to instance property, if we try to access the property thru' instance, the static value is used. &lt;strong&gt;Each property declared in python class always has a static slot in memory&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это означает, что перед присвоением значения свойству экземпляра, если мы пытаемся получить доступ к свойству через экземпляр, используется статическое значение. &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Каждое свойство, объявленное в классе Python, всегда имеет статический слот в памяти&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="60a2f9857f978998d130aa55e96706b01dece78d" translate="yes" xml:space="preserve">
          <source>To avoid any potential confusion, I would like to contrast static variables and immutable objects.</source>
          <target state="translated">Чтобы избежать возможной путаницы,я хотел бы противопоставить статические переменные и неизменяемые объекты.</target>
        </trans-unit>
        <trans-unit id="03b610518887187d17eae1f71a0ced296d90826a" translate="yes" xml:space="preserve">
          <source>UPDATE: this attempt &lt;strong&gt;is really pretty awful&lt;/strong&gt;; if you insist on doing something like this (hint: please don't; Python is a very elegant language and shoe-horning it into behaving like another language is just not necessary), use the code in &lt;a href=&quot;https://stackoverflow.com/a/36216964/2437514&quot;&gt;Ethan Furman's answer&lt;/a&gt; instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ОБНОВЛЕНИЕ: эта попытка &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;действительно ужасна&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;если вы настаиваете на том, чтобы делать что-то вроде этого (подсказка: пожалуйста, не делайте; Python - очень элегантный язык, и вам не нужно вести себя так, как будто это другой язык), используйте &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вместо этого &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;код в &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/36216964/2437514&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ответе Итана Фурмана&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="55d169eee6cbf73a55a103c97b3a8f86a14e9715" translate="yes" xml:space="preserve">
          <source>Variables declared inside the class definition, but not inside a method are class or static variables:</source>
          <target state="translated">Переменные,объявленные внутри определения класса,но не внутри метода-это класс или статические переменные:</target>
        </trans-unit>
        <trans-unit id="d8ffdb8173233c2c17fd3ece0ddc1db436dc5696" translate="yes" xml:space="preserve">
          <source>When define some member variable outside any member method, the variable can be either static or non-static depending on how the variable is expressed.</source>
          <target state="translated">При определении некоторой членской переменной вне любого метода-членов,переменная может быть как статической,так и нестатической в зависимости от того,как она выражена.</target>
        </trans-unit>
        <trans-unit id="57b9f463ab237084bfd30d8c5ce587fa31a4f6ec" translate="yes" xml:space="preserve">
          <source>Why use static method in pythonic sense, if it has no relation whatever to the class! If I were you, I'd either use classmethod or define the method independent from the class.</source>
          <target state="translated">Зачем использовать статический метод в питоническом смысле,если он не имеет никакого отношения к классу! На вашем месте я бы либо использовал метод classmethod,либо определил бы метод независимым от класса.</target>
        </trans-unit>
        <trans-unit id="3e5845522a8f0889e4d26e11472d31957b0a5c67" translate="yes" xml:space="preserve">
          <source>With the example above, I made a class named &lt;code&gt;staticFlag&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В приведенном выше примере я создал класс с именем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;staticFlag&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3fe78493a78b0db687ba5723cbd51b3331a8d2c3" translate="yes" xml:space="preserve">
          <source>Yes, definitely possible to write static variables and methods in python.</source>
          <target state="translated">Да,определенно возможно написание статических переменных и методов на питоне.</target>
        </trans-unit>
        <trans-unit id="e54fc2579c6516bf7252df36dd093f3fb20ac36f" translate="yes" xml:space="preserve">
          <source>You can also add class variables to classes on the fly</source>
          <target state="translated">Вы также можете добавить переменные класса в классы на лету</target>
        </trans-unit>
        <trans-unit id="126b723e778d0d460547d24ed9a07f26ea2c09b9" translate="yes" xml:space="preserve">
          <source>You can always raise an exception if quietly ignoring setting value (&lt;code&gt;pass&lt;/code&gt; above) is not your thing. If you're looking for a C++, Java style static class variable:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы всегда можете вызвать исключение , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;если спокойно игнорируя значение параметра ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;pass&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; выше) не ваша вещь. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы ищете C ++, переменную статического класса в стиле Java:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8196642b30bce4710429aaf9f58f9978c4f7181b" translate="yes" xml:space="preserve">
          <source>You can use a list or a dictionary to get &quot;static behavior&quot; between instances.</source>
          <target state="translated">Вы можете использовать список или словарь,чтобы получить &quot;статичное поведение&quot; между экземплярами.</target>
        </trans-unit>
        <trans-unit id="1016d03781823b954bc6bd1a0a7c08385615ecdd" translate="yes" xml:space="preserve">
          <source>You could also enforce a class to be static using metaclass.</source>
          <target state="translated">Вы также можете заставить класс быть статическим,используя метакласс.</target>
        </trans-unit>
        <trans-unit id="42dedc3b16fd40173a3154115a36ebd9bb2ba137" translate="yes" xml:space="preserve">
          <source>and in use:</source>
          <target state="translated">и в использовании:</target>
        </trans-unit>
        <trans-unit id="b3df91c008d10ff7eb93984296a3827ba8e3537e" translate="yes" xml:space="preserve">
          <source>and some tests:</source>
          <target state="translated">и некоторые тесты:</target>
        </trans-unit>
        <trans-unit id="73b8427ebc9e80db4f1373ae0d7951406a01acdc" translate="yes" xml:space="preserve">
          <source>explanation</source>
          <target state="translated">explanation</target>
        </trans-unit>
        <trans-unit id="afcb2418e5a2e1a5f3adc8ab74fc80bd4839b24d" translate="yes" xml:space="preserve">
          <source>or use a decorator</source>
          <target state="translated">или воспользоваться услугами декоратора</target>
        </trans-unit>
        <trans-unit id="1029d67644815d428f554e390aa966d57a0b29b8" translate="yes" xml:space="preserve">
          <source>output</source>
          <target state="translated">output</target>
        </trans-unit>
        <trans-unit id="081c88d752751c574111b5133f57fd6961ade81c" translate="yes" xml:space="preserve">
          <source>resulting in ...</source>
          <target state="translated">в результате чего...</target>
        </trans-unit>
        <trans-unit id="7270fb48a58802a3360289641a78eff29822ed3e" translate="yes" xml:space="preserve">
          <source>self.var inside class is not static variable.</source>
          <target state="translated">self.var внутри класса не является статической переменной.</target>
        </trans-unit>
        <trans-unit id="94b3874dc8866a1cc7a25d0f00ac9e3e38c34bd6" translate="yes" xml:space="preserve">
          <source>var inside the class member function is not defined.</source>
          <target state="translated">var внутри функции члена класса не определен.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
