<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/901115">
    <body>
      <group id="901115">
        <trans-unit id="e0d02f69bfab290bf1f501ff1a5082d271e75385" translate="yes" xml:space="preserve">
          <source>(URI.js also &quot;fixes&quot; bad querystrings like &lt;code&gt;?&amp;amp;foo&amp;amp;&amp;amp;bar=baz&amp;amp;&lt;/code&gt; to &lt;code&gt;?foo&amp;amp;bar=baz&lt;/code&gt;)</source>
          <target state="translated">(URI.js tambi&amp;eacute;n &quot;corrige&quot; cadenas de consulta incorrectas como &lt;code&gt;?&amp;amp;foo&amp;amp;&amp;amp;bar=baz&amp;amp;&lt;/code&gt; to &lt;code&gt;?foo&amp;amp;bar=baz&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c33bf3988dc284bca985201a791bf293ac167541" translate="yes" xml:space="preserve">
          <source>...jQuery BBQ provides a full &lt;code&gt;.deparam()&lt;/code&gt; method, along with both hash state management, and fragment / query string parse and merge utility methods.</source>
          <target state="translated">... jQuery BBQ proporciona un &lt;code&gt;.deparam()&lt;/code&gt; completo .deparam () , junto con la gesti&amp;oacute;n de estado hash y los m&amp;eacute;todos de utilidad de an&amp;aacute;lisis / fusi&amp;oacute;n de cadenas de fragmentos / consultas.</target>
        </trans-unit>
        <trans-unit id="79c0e20f0a22c1356012c1d3381c34dd2e441471" translate="yes" xml:space="preserve">
          <source>...making it into an object that looks like...</source>
          <target state="translated">...convirti√©ndolo en un objeto que parece...</target>
        </trans-unit>
        <trans-unit id="11f6482ce9f388b216bfc419e445a6c77c8d7dbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://jsperf.com/querystring-with-javascript&quot;&gt;Performance test (split method against regex method)&lt;/a&gt; (&lt;a href=&quot;http://jsperf.com/&quot;&gt;jsPerf&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;http://jsperf.com/querystring-with-javascript&quot;&gt;Prueba de rendimiento (m&amp;eacute;todo dividido contra m&amp;eacute;todo regex)&lt;/a&gt; ( &lt;a href=&quot;http://jsperf.com/&quot;&gt;jsPerf&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="47be74a6372dd1484c8ce49a9b412e5d8f655945" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;IMPORTANT!&lt;/b&gt; The parameter for that function in the last line is different. It's just an example of how one can pass an arbitrary URL to it. You can use last line from Bruno's answer to parse the current URL.</source>
          <target state="translated">&lt;b&gt;&amp;iexcl;IMPORTANTE!&lt;/b&gt; El par&amp;aacute;metro para esa funci&amp;oacute;n en la &amp;uacute;ltima l&amp;iacute;nea es diferente. Es solo un ejemplo de c&amp;oacute;mo se le puede pasar una URL arbitraria. Puede usar la &amp;uacute;ltima l&amp;iacute;nea de la respuesta de Bruno para analizar la URL actual.</target>
        </trans-unit>
        <trans-unit id="d139bec92ab703c3930b72ed0bcca93c86a4a024" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/q/476436/985454&quot;&gt;&quot;null-coalescing&quot;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Logical_Operators#Short-Circuit_Evaluation&quot;&gt;short-circuit evaluation&lt;/a&gt;&lt;br/&gt;
ES6 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;Destructuring assignments&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;Arrow functions&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals#Tagged_template_literals&quot;&gt;Template strings&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/q/476436/985454&quot;&gt;&quot;nulo-coalescing&quot;&lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Logical_Operators#Short-Circuit_Evaluation&quot;&gt;evaluaci&amp;oacute;n de cortocircuito&lt;/a&gt;&lt;/em&gt; &lt;em&gt;&lt;br/&gt;&lt;/em&gt; &lt;em&gt;ES6 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;Asignaciones de&lt;/a&gt; desestructuraci&amp;oacute;n, &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;funciones de flecha&lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals#Tagged_template_literals&quot;&gt;cadenas de plantilla&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a25782e4816475a2a0901c6ec5632570b52f9639" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Or&lt;/em&gt; if you have control of the querystring and can guarantee that a value you are trying to get will never contain any URL encoded
  characters (having these in a value would be a bad idea) - you can use
  the following slightly more simplified and readable version of the 1st option:</source>
          <target state="translated">&lt;em&gt;O&lt;/em&gt; si tiene el control de la cadena de consulta y puede garantizar que un valor que intenta obtener nunca contendr&amp;aacute; caracteres codificados con URL (ser&amp;iacute;a una mala idea tenerlos en un valor): puede usar la siguiente versi&amp;oacute;n ligeramente m&amp;aacute;s simplificada y legible de la primera opci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="fcdbaa597bdf669b6d3a9aadfd0cd07941c33e3f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;To access different parts of a URL use &lt;code&gt;location.(search|hash)&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Para acceder a diferentes partes de una URL, use la &lt;code&gt;location.(search|hash)&lt;/code&gt; &lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0f83b351211abc22c16148d75edebd637f29484a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tl;dr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;tl;dr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd30aeb848f043e7bc0780ef8335c1edf1e6569c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;*!!!&lt;/strong&gt; Please note, that &lt;code&gt;decodeURIComponent(undefined)&lt;/code&gt; returns string &lt;code&gt;&quot;undefined&quot;&lt;/code&gt;. The solution lies in a simple usage of &lt;a href=&quot;https://stackoverflow.com/a/476445/985454&quot;&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;/a&gt;, which ensures that &lt;code&gt;decodeURIComponent()&lt;/code&gt; is not called on undefined values. &lt;em&gt;(See the &quot;complete solution&quot; at the top.)&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;* !!!&lt;/strong&gt; Tenga en cuenta que &lt;code&gt;decodeURIComponent(undefined)&lt;/code&gt; devuelve la cadena &lt;code&gt;&quot;undefined&quot;&lt;/code&gt; . La soluci&amp;oacute;n radica en un uso simple de &lt;a href=&quot;https://stackoverflow.com/a/476445/985454&quot;&gt; &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; &lt;/a&gt; , que garantiza que &lt;code&gt;decodeURIComponent()&lt;/code&gt; no se invoque en valores indefinidos. &lt;em&gt;(Consulte la &quot;soluci&amp;oacute;n completa&quot; en la parte superior).&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="82c314ef57c4ae062d211ee17efada8e14fe8e6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT:&lt;/strong&gt; You can use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URL&quot;&gt;URL&lt;/a&gt; interface, its quite widely adopted in almost all the new browser and if the code is going to run on an old browser you can use a &lt;a href=&quot;https://github.com/lifaon74/url-polyfill&quot;&gt;polyfill like this one&lt;/a&gt;. Here's a code example on how to use URL interface to get query parameters (aka search parameters)</source>
          <target state="translated">&lt;strong&gt;EDITAR:&lt;/strong&gt; puede usar la interfaz &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URL&quot;&gt;URL&lt;/a&gt; , est&amp;aacute; bastante ampliamente adoptada en casi todos los navegadores nuevos y si el c&amp;oacute;digo se va a ejecutar en un navegador antiguo, puede usar un &lt;a href=&quot;https://github.com/lifaon74/url-polyfill&quot;&gt;polyfill como este&lt;/a&gt; . Aqu&amp;iacute; hay un ejemplo de c&amp;oacute;digo sobre c&amp;oacute;mo usar la interfaz URL para obtener par&amp;aacute;metros de consulta (tambi&amp;eacute;n conocidos como par&amp;aacute;metros de b&amp;uacute;squeda)</target>
        </trans-unit>
        <trans-unit id="37368c978ce40b2560ff00ceca4687bf96ce3bd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Original&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Original&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ecbafbd59fd4570e44f14117a16a5c61451c4624" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Regex method&lt;/strong&gt;: 13,891 &amp;plusmn;0.85% | 90% slower</source>
          <target state="translated">&lt;strong&gt;M&amp;eacute;todo Regex&lt;/strong&gt; : 13,891 &amp;plusmn; 0.85% | 90% m&amp;aacute;s lento</target>
        </trans-unit>
        <trans-unit id="8c4b9a8b2c4a548fd785efb0cd2f4af2a0428753" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Split method&lt;/strong&gt;: 144,780 &amp;plusmn;2.17% fastest</source>
          <target state="translated">&lt;strong&gt;M&amp;eacute;todo de divisi&amp;oacute;n&lt;/strong&gt; : 144,780 &amp;plusmn; 2.17% m&amp;aacute;s r&amp;aacute;pido</target>
        </trans-unit>
        <trans-unit id="ded3fa0b81b76721beedb6dd8bacd027baf396b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Testing in Firefox 4.0 x86 on Windows Server 2008 R2 / 7 x64&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Prueba en Firefox 4.0 x86 en Windows Server 2008 R2 / 7 x64&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4ce2743b8a6431574045a5cfe76049b2e91dcb70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The code:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;El c&amp;oacute;digo:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="86ebb9137b90947e20c42d0c415e605c6404bfd8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update: Sep-2018&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Actualizaci&amp;oacute;n: Sep-2018&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9188873b53a0860b8d45c86992acf0ce33ebbec3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Usage:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="010fef2051f010223d5ab89db7012657390a7a99" translate="yes" xml:space="preserve">
          <source>?test=Hello&amp;amp;person=neek&amp;amp;person[]=jeff&amp;amp;person[]=jim&amp;amp;person[extra]=john&amp;amp;test3&amp;amp;nocache=1398914891264</source>
          <target state="translated">?test=Hello&amp;amp;person=neek&amp;amp;person[]=jeff&amp;amp;person[]=jim&amp;amp;person[extra]=john&amp;amp;test3&amp;amp;nocache=1398914891264</target>
        </trans-unit>
        <trans-unit id="534cddb6555e003cb4cf2ec54774ae6f0433e539" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://trac.webkit.org/browser/trunk/Source/WebCore/platform/URLParser.cpp&quot;&gt;reference implementation&lt;/a&gt; and a &lt;a href=&quot;https://googlechrome.github.io/samples/urlsearchparams/&quot;&gt;sample page&lt;/a&gt; are available for auditing and testing.</source>
          <target state="translated">Una &lt;a href=&quot;https://trac.webkit.org/browser/trunk/Source/WebCore/platform/URLParser.cpp&quot;&gt;implementaci&amp;oacute;n de referencia&lt;/a&gt; y una &lt;a href=&quot;https://googlechrome.github.io/samples/urlsearchparams/&quot;&gt;p&amp;aacute;gina de muestra&lt;/a&gt; est&amp;aacute;n disponibles para auditor&amp;iacute;a y pruebas.</target>
        </trans-unit>
        <trans-unit id="fb75f43caf20568ea5a54475c53588e0025cecd3" translate="yes" xml:space="preserve">
          <source>A URL like &lt;code&gt;this.htm?hello=world&amp;amp;foo=bar&lt;/code&gt; will create:</source>
          <target state="translated">Una URL como &lt;code&gt;this.htm?hello=world&amp;amp;foo=bar&lt;/code&gt; crear&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="8f5555c4a56365aa3ceeaecad41c3ccc587f60d8" translate="yes" xml:space="preserve">
          <source>A new capability would be to retrieve repeated params as following &lt;code&gt;myparam=1&amp;amp;myparam=2&lt;/code&gt;. There is not a &lt;em&gt;specification&lt;/em&gt;, however, most of the current approaches follow the generation of an array.</source>
          <target state="translated">Una nueva capacidad ser&amp;iacute;a recuperar par&amp;aacute;metros repetidos como sigue &lt;code&gt;myparam=1&amp;amp;myparam=2&lt;/code&gt; . No hay una &lt;em&gt;especificaci&amp;oacute;n&lt;/em&gt; , sin embargo, la mayor&amp;iacute;a de los enfoques actuales siguen a la generaci&amp;oacute;n de una matriz.</target>
        </trans-unit>
        <trans-unit id="ec6d389db41af6d8c6899bbe593461bce3cc1e03" translate="yes" xml:space="preserve">
          <source>A quick, &lt;strong&gt;complete solution&lt;/strong&gt;, which handles &lt;strong&gt;multivalued keys&lt;/strong&gt; and &lt;strong&gt;encoded characters&lt;/strong&gt;.</source>
          <target state="translated">Una &lt;strong&gt;soluci&amp;oacute;n&lt;/strong&gt; r&amp;aacute;pida y &lt;strong&gt;completa&lt;/strong&gt; , que maneja &lt;strong&gt;claves multivalor&lt;/strong&gt; y &lt;strong&gt;caracteres codificados&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="ae3d1e955993bf7fcabbb2a74e77168edf22f3bb" translate="yes" xml:space="preserve">
          <source>Access values by &lt;code&gt;qd.key[index]&lt;/code&gt; or &lt;code&gt;qd[key][index]&lt;/code&gt;</source>
          <target state="translated">Acceda a los valores por &lt;code&gt;qd.key[index]&lt;/code&gt; o &lt;code&gt;qd[key][index]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="800134e33649d3e10c5322da5156cfc33ce3a91e" translate="yes" xml:space="preserve">
          <source>Also, as pointed out in the comments, &lt;code&gt;;&lt;/code&gt; is a legal delimiter for &lt;code&gt;key=value&lt;/code&gt; pairs.  It would require a more complicated regex to handle &lt;code&gt;;&lt;/code&gt; or &lt;code&gt;&amp;amp;&lt;/code&gt;, which I think is unnecessary because it's rare that &lt;code&gt;;&lt;/code&gt; is used and I would say even more unlikely that both would be used.  If you need to support &lt;code&gt;;&lt;/code&gt; instead of &lt;code&gt;&amp;amp;&lt;/code&gt;, just swap them in the regex.</source>
          <target state="translated">Adem&amp;aacute;s, como se se&amp;ntilde;ala en los comentarios &lt;code&gt;;&lt;/code&gt; es un delimitador legal para pares &lt;code&gt;key=value&lt;/code&gt; . Se requerir&amp;iacute;a una expresi&amp;oacute;n regular m&amp;aacute;s complicada de manejar &lt;code&gt;;&lt;/code&gt; o &lt;code&gt;&amp;amp;&lt;/code&gt; , que creo que es innecesario porque es raro que &lt;code&gt;;&lt;/code&gt; se usa y yo dir&amp;iacute;a a&amp;uacute;n m&amp;aacute;s improbable que ambos se usen. Si necesitas apoyo &lt;code&gt;;&lt;/code&gt; en lugar de &lt;code&gt;&amp;amp;&lt;/code&gt; , simplemente c&amp;aacute;mbielos en la expresi&amp;oacute;n regular.</target>
        </trans-unit>
        <trans-unit id="9b1a5e46c3df8cde62fe9534b0b22f5e679a96f9" translate="yes" xml:space="preserve">
          <source>And this is how you can use this function assuming the URL is</source>
          <target state="translated">Y as√≠ es como puedes usar esta funci√≥n asumiendo que la URL es</target>
        </trans-unit>
        <trans-unit id="e4f0914b742d0ac7630df445c3d78b67b44b0c97" translate="yes" xml:space="preserve">
          <source>As you can see above, this version handles some measure of &quot;malformed&quot; arrays, i.e. - &lt;code&gt;person=neek&amp;amp;person[]=jeff&amp;amp;person[]=jim&lt;/code&gt; or &lt;code&gt;person=neek&amp;amp;person=jeff&amp;amp;person=jim&lt;/code&gt; as the key is identifiable and valid (at least in dotNet's &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/xsc9a449.aspx&quot;&gt;NameValueCollection.Add&lt;/a&gt;):</source>
          <target state="translated">Como puede ver arriba, esta versi&amp;oacute;n maneja algunas medidas de matrices &quot;malformadas&quot;, es decir, &lt;code&gt;person=neek&amp;amp;person[]=jeff&amp;amp;person[]=jim&lt;/code&gt; o &lt;code&gt;person=neek&amp;amp;person=jeff&amp;amp;person=jim&lt;/code&gt; ya que la clave es identificable y v&amp;aacute;lida (al menos en dotNet's &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/xsc9a449.aspx&quot;&gt;NameValueCollection.Add&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="dec8ec77346ed7b7f3ff2bbef25f1a0c8db47ed4" translate="yes" xml:space="preserve">
          <source>Because of the new HTML History API and specifically &lt;code&gt;history.pushState()&lt;/code&gt; and &lt;code&gt;history.replaceState()&lt;/code&gt;, the URL can change which will invalidate the cache of parameters and their values.</source>
          <target state="translated">Debido a la nueva API HTML History y espec&amp;iacute;ficamente &lt;code&gt;history.pushState()&lt;/code&gt; e &lt;code&gt;history.replaceState()&lt;/code&gt; , la URL puede cambiar, lo que invalidar&amp;aacute; la cach&amp;eacute; de par&amp;aacute;metros y sus valores.</target>
        </trans-unit>
        <trans-unit id="c7601f69db91e2da68e2759e88ab4423df8b842b" translate="yes" xml:space="preserve">
          <source>Best of both worlds!</source>
          <target state="translated">¬°Lo mejor de ambos mundos!</target>
        </trans-unit>
        <trans-unit id="f6ef567d34982fb629b48eb155de70a91ca42847" translate="yes" xml:space="preserve">
          <source>Call it from anywhere in the JavaScript code:</source>
          <target state="translated">Ll√°malo desde cualquier lugar del c√≥digo JavaScript:</target>
        </trans-unit>
        <trans-unit id="127bd0758aa89190daf4785aa8fd97c348d7c230" translate="yes" xml:space="preserve">
          <source>Chrome Announcement and details</source>
          <target state="translated">Chrome Anuncio y detalles</target>
        </trans-unit>
        <trans-unit id="d620b778592cbeb4a5b4ac786c6c65d353236122" translate="yes" xml:space="preserve">
          <source>Code golf:</source>
          <target state="translated">C√≥digo de golf:</target>
        </trans-unit>
        <trans-unit id="9432d6874c07d2479fb03ed9dbee612f9529e8fd" translate="yes" xml:space="preserve">
          <source>Display it!</source>
          <target state="translated">¬°Mu√©stralo!</target>
        </trans-unit>
        <trans-unit id="e3af59b16940b2e81235ebbcb74c7f1a75b7e5e5" translate="yes" xml:space="preserve">
          <source>ES2015 (ES6)</source>
          <target state="translated">ES2015 (ES6)</target>
        </trans-unit>
        <trans-unit id="7dd6c14524660a8e5e3f2fd6bd31287be3272a9e" translate="yes" xml:space="preserve">
          <source>Easiest (dummy) solution</source>
          <target state="translated">La soluci√≥n m√°s f√°cil (tonta)</target>
        </trans-unit>
        <trans-unit id="c57e24e3995bb2633119f0608031092da0dd2d9f" translate="yes" xml:space="preserve">
          <source>Edit: Adding Deparam Example:</source>
          <target state="translated">Edici√≥n:Ejemplo de adici√≥n de Deparam:</target>
        </trans-unit>
        <trans-unit id="18c8be8be42a7df2abdc4caecc8e7f222e85b9a8" translate="yes" xml:space="preserve">
          <source>Encoded characters?</source>
          <target state="translated">¬øCaracteres codificados?</target>
        </trans-unit>
        <trans-unit id="ebccf9f9cb0a1762288f48f17418ac002bad85c9" translate="yes" xml:space="preserve">
          <source>Enjoy.</source>
          <target state="translated">Enjoy.</target>
        </trans-unit>
        <trans-unit id="d926fe0cd38e03484b26bb76cf16c4faacb42966" translate="yes" xml:space="preserve">
          <source>Example querystring:</source>
          <target state="translated">Ejemplo de cadena de consulta:</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Ampliar fragmento</target>
        </trans-unit>
        <trans-unit id="42fdd8556452808645f749a3a8ccd315a6af2bb6" translate="yes" xml:space="preserve">
          <source>Firefox 44+, Opera 36+, Edge 17+, Safari 10.3+ and Chrome 49+ support the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams&quot;&gt;URLSearchParams&lt;/a&gt; API:</source>
          <target state="translated">Firefox 44+, Opera 36+, Edge 17+, Safari 10.3+ y Chrome 49+ admiten la API &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams&quot;&gt;URLSearchParams&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d9b7c07a3c5cfdfa9c5d333af605afc4ff1a78c7" translate="yes" xml:space="preserve">
          <source>Firefox Announcement and details</source>
          <target state="translated">Anuncio y detalles de Firefox</target>
        </trans-unit>
        <trans-unit id="673187c6b35ad0483874d48860fc835cb81a3f10" translate="yes" xml:space="preserve">
          <source>For a URL like &lt;code&gt;http://domain.com?param1=val1&amp;amp;param2=val2&lt;/code&gt; you can get their value later in your code as &lt;code&gt;search.param1&lt;/code&gt; and &lt;code&gt;search.param2&lt;/code&gt;.</source>
          <target state="translated">Para una URL como &lt;code&gt;http://domain.com?param1=val1&amp;amp;param2=val2&lt;/code&gt; , puede obtener su valor m&amp;aacute;s adelante en su c&amp;oacute;digo como &lt;code&gt;search.param1&lt;/code&gt; y &lt;code&gt;search.param2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5726643ceb6991d5c7b82f8641d91a3dc21160e" translate="yes" xml:space="preserve">
          <source>For more information on improvement see: &lt;a href=&quot;http://james.padolsey.com/javascript/bujs-1-getparameterbyname/&quot;&gt;http://james.padolsey.com/javascript/bujs-1-getparameterbyname/&lt;/a&gt;</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre mejoras, consulte: &lt;a href=&quot;http://james.padolsey.com/javascript/bujs-1-getparameterbyname/&quot;&gt;http://james.padolsey.com/javascript/bujs-1-getparameterbyname/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d35a0dbe25664b0c8564dcb259681703f89b719" translate="yes" xml:space="preserve">
          <source>For the query string &lt;code&gt;x=5&amp;amp;y&amp;amp;z=hello&amp;amp;x=6&lt;/code&gt; this returns the object:</source>
          <target state="translated">Para la cadena de consulta &lt;code&gt;x=5&amp;amp;y&amp;amp;z=hello&amp;amp;x=6&lt;/code&gt; esto devuelve el objeto:</target>
        </trans-unit>
        <trans-unit id="f99deb5ac65fb0c436f3dcae122f670bf5d9ffad" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLUtils/search#Get_the_value_of_a_single_search_param&quot;&gt;the MDN&lt;/a&gt;:</source>
          <target state="translated">De &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLUtils/search#Get_the_value_of_a_single_search_param&quot;&gt;la MDN&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="45672054ed2b5911b360ccdb67dac8cdb4183687" translate="yes" xml:space="preserve">
          <source>From comments</source>
          <target state="translated">De los comentarios</target>
        </trans-unit>
        <trans-unit id="4d88cc2da8e2cd7a42dedeacdd26424dc86ef5aa" translate="yes" xml:space="preserve">
          <source>Further reading: &lt;a href=&quot;http://nodejs.org/api/url.html&quot;&gt;&lt;strong&gt;URL Node.js v0.12.2 Manual &amp;amp; Documentation&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">Lecturas adicionales: &lt;a href=&quot;http://nodejs.org/api/url.html&quot;&gt;&lt;strong&gt;URL Node.js v0.12.2 Manual y documentaci&amp;oacute;n&lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d2adeea390c506ae0e2b890266a2fe434806983" translate="yes" xml:space="preserve">
          <source>Google method</source>
          <target state="translated">El m√©todo de Google</target>
        </trans-unit>
        <trans-unit id="9f297fcf463a0430a0271e161a011ae8210e5605" translate="yes" xml:space="preserve">
          <source>Handles &lt;b&gt;empty keys&lt;/b&gt; correctly.</source>
          <target state="translated">Maneja &lt;b&gt;las llaves vac&amp;iacute;as&lt;/b&gt; correctamente.</target>
        </trans-unit>
        <trans-unit id="b5551916943663f301e56840062b0bb752e1e600" translate="yes" xml:space="preserve">
          <source>Here is a fast way to get an object similar to the PHP &lt;a href=&quot;http://php.net/manual/en/reserved.variables.get.php&quot;&gt;$_GET&lt;/a&gt; array:</source>
          <target state="translated">Aqu&amp;iacute; hay una forma r&amp;aacute;pida de obtener un objeto similar a la matriz PHP &lt;a href=&quot;http://php.net/manual/en/reserved.variables.get.php&quot;&gt;$ _GET&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="122778d5e10d1916b1623e116cd8efae6700365a" translate="yes" xml:space="preserve">
          <source>Here's an extended version of Andy E's linked &quot;Handle array-style query strings&quot;-version. Fixed a bug (&lt;code&gt;?key=1&amp;amp;key[]=2&amp;amp;key[]=3&lt;/code&gt;; &lt;code&gt;1&lt;/code&gt; is lost and replaced with &lt;code&gt;[2,3]&lt;/code&gt;), made a few minor performance improvements (re-decoding of values, recalculating &quot;[&quot; position, etc.) and added a number of improvements (functionalized, support for &lt;code&gt;?key=1&amp;amp;key=2&lt;/code&gt;, support for &lt;code&gt;;&lt;/code&gt; delimiters). I left the variables annoyingly short, but added comments galore to make them readable (oh, and I reused &lt;code&gt;v&lt;/code&gt; within the local functions, sorry if that is confusing ;).</source>
          <target state="translated">Aqu&amp;iacute; hay una versi&amp;oacute;n extendida de la versi&amp;oacute;n vinculada &quot;Manejar cadenas de consulta de estilo de matriz&quot; de Andy E. Se corrigi&amp;oacute; un error ( &lt;code&gt;?key=1&amp;amp;key[]=2&amp;amp;key[]=3&lt;/code&gt; ; &lt;code&gt;1&lt;/code&gt; se pierde y se reemplaza con &lt;code&gt;[2,3]&lt;/code&gt; ), se realizaron algunas mejoras menores en el rendimiento (decodificaci&amp;oacute;n de valores, rec&amp;aacute;lculo de la posici&amp;oacute;n &quot;[&quot;, etc. .) y agreg&amp;oacute; una serie de mejoras (funcionalizado, soporte para &lt;code&gt;?key=1&amp;amp;key=2&lt;/code&gt; , soporte para &lt;code&gt;;&lt;/code&gt; delimitadores). Dej&amp;eacute; las variables molestamente cortas, pero agregu&amp;eacute; comentarios en abundancia para que fueran legibles (oh, y reutilic&amp;eacute; &lt;code&gt;v&lt;/code&gt; dentro de las funciones locales, perd&amp;oacute;n si eso es confuso;).</target>
        </trans-unit>
        <trans-unit id="132d69cbab8386e3ea447358de1a826cd93d8b77" translate="yes" xml:space="preserve">
          <source>Here's my edit to &lt;a href=&quot;https://stackoverflow.com/questions/901115/get-query-string-values-in-javascript/3855394#3855394&quot;&gt;this excellent answer&lt;/a&gt; - with added ability to parse query strings with keys without values.</source>
          <target state="translated">Aqu&amp;iacute; est&amp;aacute; mi edici&amp;oacute;n de &lt;a href=&quot;https://stackoverflow.com/questions/901115/get-query-string-values-in-javascript/3855394#3855394&quot;&gt;esta excelente respuesta&lt;/a&gt; , con la capacidad adicional de analizar cadenas de consulta con claves sin valores.</target>
        </trans-unit>
        <trans-unit id="a2f72514d5af613c8a1343fa75d1ec41c2228bf1" translate="yes" xml:space="preserve">
          <source>Here's my stab at making Andy E's excellent solution into a full fledged jQuery plugin:</source>
          <target state="translated">Aqu√≠ est√° mi intento de convertir la excelente soluci√≥n de Andy E en un completo plugin de jQuery:</target>
        </trans-unit>
        <trans-unit id="da311a8a6a1110d5a8a74129d07303d78a225d20" translate="yes" xml:space="preserve">
          <source>Here's the gist:</source>
          <target state="translated">Aqu√≠ est√° lo esencial:</target>
        </trans-unit>
        <trans-unit id="57d64c7cce2ed91ce4593b1967b05e88d8c4e52b" translate="yes" xml:space="preserve">
          <source>How can I get query string values in JavaScript</source>
          <target state="translated">¬øC√≥mo puedo obtener los valores de las cadenas de consulta en JavaScript</target>
        </trans-unit>
        <trans-unit id="073e456c905ecba1929fe8e5a12e47b31e6e1796" translate="yes" xml:space="preserve">
          <source>However, as of Nov 11, 2014, Purl is no longer maintained and the author recommends using &lt;a href=&quot;https://github.com/medialize/URI.js&quot;&gt;URI.js&lt;/a&gt; instead.  The jQuery plugin is different in that it focuses on elements - for usage with strings, just use &lt;code&gt;URI&lt;/code&gt; directly, with or without jQuery.  Similar code would look as such, fuller docs &lt;a href=&quot;http://medialize.github.io/URI.js/docs.html&quot;&gt;here&lt;/a&gt;:</source>
          <target state="translated">Sin embargo, a partir del 11 de noviembre de 2014, Purl ya no se mantiene y el autor recomienda usar &lt;a href=&quot;https://github.com/medialize/URI.js&quot;&gt;URI.js&lt;/a&gt; en su lugar. El complemento jQuery es diferente porque se centra en elementos: para usar con cadenas, solo use &lt;code&gt;URI&lt;/code&gt; directamente, con o sin jQuery. Un c&amp;oacute;digo similar se ver&amp;iacute;a como tal, documentos m&amp;aacute;s completos &lt;a href=&quot;http://medialize.github.io/URI.js/docs.html&quot;&gt;aqu&amp;iacute;&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="bd67f1c87683773cb062fb7cdf71a5ccf1913a73" translate="yes" xml:space="preserve">
          <source>I like &lt;a href=&quot;http://jquery-howto.blogspot.co.uk/2009/09/get-url-parameters-values-with-jquery.html&quot;&gt;this one&lt;/a&gt; (taken from jquery-howto.blogspot.co.uk):</source>
          <target state="translated">Me gusta &lt;a href=&quot;http://jquery-howto.blogspot.co.uk/2009/09/get-url-parameters-values-with-jquery.html&quot;&gt;este&lt;/a&gt; (tomado de jquery-howto.blogspot.co.uk):</target>
        </trans-unit>
        <trans-unit id="363bb9f49518fc8ecdacdffd5ca86ac45604b3df" translate="yes" xml:space="preserve">
          <source>I like &lt;a href=&quot;https://stackoverflow.com/a/3867610/632117&quot;&gt;Ryan Phelan's solution&lt;/a&gt;. But I don't see any point of extending jQuery for that? There is no usage of jQuery functionality.</source>
          <target state="translated">Me gusta &lt;a href=&quot;https://stackoverflow.com/a/3867610/632117&quot;&gt;la soluci&amp;oacute;n de Ryan Phelan&lt;/a&gt; . &amp;iquest;Pero no veo ning&amp;uacute;n punto de extender jQuery para eso? No se utiliza la funcionalidad jQuery.</target>
        </trans-unit>
        <trans-unit id="2ed3ababc0bcc06aaefdf15cc635cc6c6267e8ac" translate="yes" xml:space="preserve">
          <source>I modified the answer to let it parse a full query string with a hash sign also:</source>
          <target state="translated">Modifiqu√© la respuesta para que analizara una cadena de consulta completa con un signo de hach√≠s tambi√©n:</target>
        </trans-unit>
        <trans-unit id="f78977c2a64a76e65be51eb67323404b211ae0f6" translate="yes" xml:space="preserve">
          <source>I needed an object from the query string, and I hate lots of code. It may not be the most robust in the universe, but it's just a few lines of code.</source>
          <target state="translated">Necesitaba un objeto de la cadena de consulta,y odio los c√≥digos.Puede que no sea el m√°s robusto del universo,pero son s√≥lo unas pocas l√≠neas de c√≥digo.</target>
        </trans-unit>
        <trans-unit id="79c201c11a4f3050ad47703f2c293359df401745" translate="yes" xml:space="preserve">
          <source>I use a compressed version of this. I'm posting uncompressed for the novice types to better explain what's going on.</source>
          <target state="translated">Uso una versi√≥n comprimida de esto.Estoy posteando sin comprimir para que los novatos expliquen mejor lo que est√° pasando.</target>
        </trans-unit>
        <trans-unit id="fe807fc0749fd0c20c3a71dfe31c14bd36f7f7f4" translate="yes" xml:space="preserve">
          <source>I use regular expressions a lot, but not for that.</source>
          <target state="translated">Utilizo mucho las expresiones regulares,pero no para eso.</target>
        </trans-unit>
        <trans-unit id="000fb25af51395f0a84800bb15d10c9c841933b1" translate="yes" xml:space="preserve">
          <source>I was reading all the previous and more complete answers. But I think that is the simplest and faster method. You can check in this jsPerf &lt;a href=&quot;http://jsperf.com/querystring-with-javascript/9&quot;&gt;benchmark&lt;/a&gt;</source>
          <target state="translated">Estaba leyendo todas las respuestas anteriores y m&amp;aacute;s completas. Pero creo que ese es el m&amp;eacute;todo m&amp;aacute;s simple y r&amp;aacute;pido. Puede consultar este punto de &lt;a href=&quot;http://jsperf.com/querystring-with-javascript/9&quot;&gt;referencia&lt;/a&gt; jsPerf</target>
        </trans-unit>
        <trans-unit id="81709ba36cdb825aca04763013dd5dda37e07d80" translate="yes" xml:space="preserve">
          <source>I'm sure this could be optimized or done differently to work faster, but it's always worked great for what I need.</source>
          <target state="translated">Estoy seguro de que esto podr√≠a ser optimizado o hecho de manera diferente para trabajar m√°s r√°pido,pero siempre ha funcionado muy bien para lo que necesito.</target>
        </trans-unit>
        <trans-unit id="7e323860901e9b0b914295e6322a313c21df6b2a" translate="yes" xml:space="preserve">
          <source>If so, how? If not, is there a plugin which can do so?</source>
          <target state="translated">Si es as√≠,¬øc√≥mo? Si no,¬øhay alg√∫n plugin que pueda hacerlo?</target>
        </trans-unit>
        <trans-unit id="87aba79e8f11e4b4acd477862634759b75fb2167" translate="yes" xml:space="preserve">
          <source>If the querystring is empty (&lt;code&gt;location.search == &quot;&quot;&lt;/code&gt;), the result is somewhat misleading &lt;code&gt;qd == {&quot;&quot;: undefined}&lt;/code&gt;. It is suggested to check the querystring before launching the parsing function likeso:</source>
          <target state="translated">Si la cadena de consulta est&amp;aacute; vac&amp;iacute;a ( &lt;code&gt;location.search == &quot;&quot;&lt;/code&gt; ), el resultado es algo enga&amp;ntilde;oso &lt;code&gt;qd == {&quot;&quot;: undefined}&lt;/code&gt; . Se sugiere verificar la cadena de consulta antes de iniciar la funci&amp;oacute;n de an&amp;aacute;lisis likeso:</target>
        </trans-unit>
        <trans-unit id="5aca1f5b15e8c5d7b1cb2718573d533ad324f54f" translate="yes" xml:space="preserve">
          <source>If the specified key already exists in the target NameValueCollection
  instance, the specified value is added to the existing comma-separated
  list of values in the form &quot;value1,value2,value3&quot;.</source>
          <target state="translated">Si la clave especificada ya existe en la instancia de objetivo NameValueCollection,el valor especificado se a√±ade a la lista de valores existente,separada por comas,en la forma &quot;valor1,valor2,valor3&quot;.</target>
        </trans-unit>
        <trans-unit id="0d0ec74a4bd389a70f2b8e1935ba62040b6af4fd" translate="yes" xml:space="preserve">
          <source>If you are using Browserify, you can use the &lt;code&gt;url&lt;/code&gt; module from &lt;em&gt;Node.js&lt;/em&gt;:</source>
          <target state="translated">Si est&amp;aacute; usando Browserify, puede usar el m&amp;oacute;dulo &lt;code&gt;url&lt;/code&gt; de &lt;em&gt;Node.js&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="a08d83cae1fd213bd82c23598b693c45b55526ff" translate="yes" xml:space="preserve">
          <source>If you want to just use plain JavaScript, you could use...</source>
          <target state="translated">Si quieres usar un simple JavaScript,podr√≠as usar...</target>
        </trans-unit>
        <trans-unit id="6f0ffeb6654f3a7ffee450af8c3ae2d36b6c0f96" translate="yes" xml:space="preserve">
          <source>If you're doing more URL manipulation than simply parsing the querystring, you may find &lt;a href=&quot;http://medialize.github.com/URI.js/&quot;&gt;URI.js&lt;/a&gt; helpful. It is a library for manipulating URLs - and comes with all the bells and whistles. (Sorry for self-advertising here)</source>
          <target state="translated">Si est&amp;aacute; haciendo m&amp;aacute;s manipulaci&amp;oacute;n de URL que simplemente analizar la cadena de consulta, puede encontrar &amp;uacute;til &lt;a href=&quot;http://medialize.github.com/URI.js/&quot;&gt;URI.js.&lt;/a&gt; Es una biblioteca para manipular URL, y viene con todas las campanas y silbatos. (Perd&amp;oacute;n por la publicidad propia aqu&amp;iacute;)</target>
        </trans-unit>
        <trans-unit id="7996f9d8b0383e2d7a8670d2db775c6478909055" translate="yes" xml:space="preserve">
          <source>If you're using a server-side preprocessing language, you might want to use its native JSON functions to do the heavy lifting for you.  For example, in PHP you can write:</source>
          <target state="translated">Si est√°s usando un lenguaje de preprocesamiento del lado del servidor,tal vez quieras usar sus funciones nativas JSON para hacer el trabajo pesado por ti.Por ejemplo,en PHP puedes escribir:</target>
        </trans-unit>
        <trans-unit id="39c12b406e4e97742d8a76681a2e11ac2c322406" translate="yes" xml:space="preserve">
          <source>If you're using jQuery, you can use a library, such as &lt;a href=&quot;http://benalman.com/projects/jquery-bbq-plugin/&quot;&gt;jQuery BBQ: Back Button &amp;amp; Query Library&lt;/a&gt;.</source>
          <target state="translated">Si est&amp;aacute; utilizando jQuery, puede utilizar una biblioteca, como &lt;a href=&quot;http://benalman.com/projects/jquery-bbq-plugin/&quot;&gt;jQuery BBQ: Bot&amp;oacute;n de retroceso y Biblioteca de consultas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3b9f279ab9b93c15e7732d7f6d0361b677684684" translate="yes" xml:space="preserve">
          <source>Improved version of &lt;a href=&quot;https://stackoverflow.com/questions/901115/get-querystring-values-with-jquery/901144#901144&quot;&gt;Artem Barger's answer&lt;/a&gt;:</source>
          <target state="translated">Versi&amp;oacute;n mejorada de &lt;a href=&quot;https://stackoverflow.com/questions/901115/get-querystring-values-with-jquery/901144#901144&quot;&gt;la respuesta&lt;/a&gt; de Artem Barger :</target>
        </trans-unit>
        <trans-unit id="939c1360971f05361232aa1dfc51bcd0c83027a3" translate="yes" xml:space="preserve">
          <source>In the end the object &lt;code&gt;d&lt;/code&gt; is returned, handling escaping and the &lt;code&gt;+&lt;/code&gt; sign. This object is just like mine, it has the same behavior.</source>
          <target state="translated">Al final, se devuelve el objeto &lt;code&gt;d&lt;/code&gt; , manejando el escape y el signo &lt;code&gt;+&lt;/code&gt; . Este objeto es como el m&amp;iacute;o, tiene el mismo comportamiento.</target>
        </trans-unit>
        <trans-unit id="0a3a442417df5b0f3e26ff5302d80065b36fef84" translate="yes" xml:space="preserve">
          <source>Is there a plugin-less way of retrieving &lt;a href=&quot;http://en.wikipedia.org/wiki/Query_string&quot;&gt;query string&lt;/a&gt; values via jQuery (or without)?</source>
          <target state="translated">&amp;iquest;Hay alguna forma sin complemento de recuperar valores de &lt;a href=&quot;http://en.wikipedia.org/wiki/Query_string&quot;&gt;cadena de consulta a&lt;/a&gt; trav&amp;eacute;s de jQuery (o sin)?</target>
        </trans-unit>
        <trans-unit id="c942434e52be1941f81f456d259d83650c2fc586" translate="yes" xml:space="preserve">
          <source>It can be used with or without jQuery.</source>
          <target state="translated">Se puede usar con o sin jQuery.</target>
        </trans-unit>
        <trans-unit id="06449a1fc73d65df535617b5ae6f0aea504907b9" translate="yes" xml:space="preserve">
          <source>It is a simple library method that does dissection and manipulation of URL parameters. The static method has the following sub methods that can be called on the subject URL:</source>
          <target state="translated">Es un simple m√©todo de biblioteca que hace la disecci√≥n y la manipulaci√≥n de los par√°metros del URL.El m√©todo est√°tico tiene los siguientes subm√©todos que pueden ser llamados en el URL del sujeto:</target>
        </trans-unit>
        <trans-unit id="e11c918dadbe3781578fcc20c66a0f1e853ea947" translate="yes" xml:space="preserve">
          <source>It is not standardized by &lt;a href=&quot;https://www.w3.org/TR/2014/WD-url-1-20141209/#interface-urlsearchparams&quot;&gt;W3C&lt;/a&gt;, but it is a living standard by &lt;a href=&quot;https://url.spec.whatwg.org&quot;&gt;WhatWG&lt;/a&gt;.</source>
          <target state="translated">No est&amp;aacute; estandarizado por &lt;a href=&quot;https://www.w3.org/TR/2014/WD-url-1-20141209/#interface-urlsearchparams&quot;&gt;W3C&lt;/a&gt; , pero es un est&amp;aacute;ndar de vida de &lt;a href=&quot;https://url.spec.whatwg.org&quot;&gt;WhatWG&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="11cddc7dd95111cd35e184f50fed79b8c617b9c9" translate="yes" xml:space="preserve">
          <source>It is obfuscated, but it is understandable. It does not work because some variables are undefined.</source>
          <target state="translated">Est√° ofuscado,pero es comprensible.No funciona porque algunas variables no est√°n definidas.</target>
        </trans-unit>
        <trans-unit id="8e5326ea293b648dfb498c4737b71c49593fa53a" translate="yes" xml:space="preserve">
          <source>It seems &lt;a href=&quot;https://stackoverflow.com/questions/1746507/authoritative-position-of-duplicate-http-get-query-keys&quot;&gt;the jury is somewhat out&lt;/a&gt; on repeated keys as there is no spec. In this case, multiple keys are stored as an (fake)array. But do note that I &lt;strong&gt;do not&lt;/strong&gt; process values based on commas into arrays.</source>
          <target state="translated">Parece que &lt;a href=&quot;https://stackoverflow.com/questions/1746507/authoritative-position-of-duplicate-http-get-query-keys&quot;&gt;el jurado est&amp;aacute; un poco interesado&lt;/a&gt; en las teclas repetidas ya que no hay especificaciones. En este caso, se almacenan varias claves como una matriz (falsa). Pero tenga en cuenta que &lt;strong&gt;no&lt;/strong&gt; proceso valores basados ‚Äã‚Äãen comas en matrices.</target>
        </trans-unit>
        <trans-unit id="5bc0d0c64bbf99b1a4ec89d5518cf19ec4b55828" translate="yes" xml:space="preserve">
          <source>It seems easier and more efficient to me to read the query string once in my application, and build an object from all the key/value pairs like:</source>
          <target state="translated">Me parece m√°s f√°cil y eficiente leer la cadena de consulta una vez en mi aplicaci√≥n,y construir un objeto a partir de todos los pares de valores clave como:</target>
        </trans-unit>
        <trans-unit id="0d9e0072af909d8f1dbe2a8be04403380e6913da" translate="yes" xml:space="preserve">
          <source>It will handle the following querystring...</source>
          <target state="translated">Se encargar√° de la siguiente cadena de preguntas...</target>
        </trans-unit>
        <trans-unit id="e57f582326a196e279b0369debf208ce142e0c47" translate="yes" xml:space="preserve">
          <source>Just added that capability also while adding in  the return statement</source>
          <target state="translated">Acabo de agregar esa capacidad tambi√©n mientras agregaba la declaraci√≥n de retorno</target>
        </trans-unit>
        <trans-unit id="5e57982a4f0bbf6468c5fe9a3ecd05a947ccd049" translate="yes" xml:space="preserve">
          <source>Just another recommendation. The plugin &lt;em&gt;&lt;a href=&quot;https://github.com/allmarkedup/jQuery-URL-Parser&quot;&gt;Purl&lt;/a&gt;&lt;/em&gt; allows to retrieve all parts of URL, including anchor, host, etc.</source>
          <target state="translated">Solo otra recomendaci&amp;oacute;n. El complemento &lt;em&gt;&lt;a href=&quot;https://github.com/allmarkedup/jQuery-URL-Parser&quot;&gt;Purl&lt;/a&gt;&lt;/em&gt; permite recuperar todas las partes de la URL, incluido el ancla, el host, etc.</target>
        </trans-unit>
        <trans-unit id="39775219f019850e5b5d67c91544fdf0f2873408" translate="yes" xml:space="preserve">
          <source>Just call &lt;code&gt;var langval = $.urlParam('lang');&lt;/code&gt;, and you've got it.</source>
          <target state="translated">Simplemente llame a &lt;code&gt;var langval = $.urlParam('lang');&lt;/code&gt; y lo tienes</target>
        </trans-unit>
        <trans-unit id="f7157d509275674f6d5ecbec37fbd08893a281d2" translate="yes" xml:space="preserve">
          <source>Just use two &lt;strong&gt;splits&lt;/strong&gt;:</source>
          <target state="translated">Solo usa dos &lt;strong&gt;divisiones&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="f207b9e49068d57e814e520cfce9889714432e57" translate="yes" xml:space="preserve">
          <source>Keep it simple in plain JavaScript code:</source>
          <target state="translated">Mant√©ngalo simple en un c√≥digo JavaScript simple:</target>
        </trans-unit>
        <trans-unit id="41d3f0ba4eb4a4f6a8f2357e3f45a9724879b4b6" translate="yes" xml:space="preserve">
          <source>Much simpler!</source>
          <target state="translated">¬°Mucho m√°s simple!</target>
        </trans-unit>
        <trans-unit id="c31c16bf28a87dd39c0cc7ceabf8f26f194b95d5" translate="yes" xml:space="preserve">
          <source>Multi-lined:</source>
          <target state="translated">Multi-lined:</target>
        </trans-unit>
        <trans-unit id="7a470436b960c7bdafbae4ddd2230b6507d78309" translate="yes" xml:space="preserve">
          <source>Multi-valued keys</source>
          <target state="translated">Claves multivaluadas</target>
        </trans-unit>
        <trans-unit id="1a2c48fe1b52e0d77aca5bf7ab544676b4a8ef74" translate="yes" xml:space="preserve">
          <source>My method as a &lt;strong&gt;jQuery plugin&lt;/strong&gt;</source>
          <target state="translated">Mi m&amp;eacute;todo como un &lt;strong&gt;complemento jQuery&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ffe0cab36ad398551d537199d563d31ff53d5e3b" translate="yes" xml:space="preserve">
          <source>NOTE: The function is case-sensitive. If you prefer case-insensitive parameter name, &lt;a href=&quot;https://stackoverflow.com/questions/3939715/case-insensitive-regex-in-javascript&quot;&gt;add 'i' modifier to RegExp&lt;/a&gt;</source>
          <target state="translated">NOTA: La funci&amp;oacute;n distingue entre may&amp;uacute;sculas y min&amp;uacute;sculas. Si prefiere el nombre del par&amp;aacute;metro que no distingue entre may&amp;uacute;sculas y min&amp;uacute;sculas, &lt;a href=&quot;https://stackoverflow.com/questions/3939715/case-insensitive-regex-in-javascript&quot;&gt;agregue el modificador 'i' a RegExp&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e342d9ceee97455375446a33c725d14171eb5e6e" translate="yes" xml:space="preserve">
          <source>Note: If a parameter is present several times (&lt;code&gt;?foo=lorem&amp;amp;foo=ipsum&lt;/code&gt;), you will get the first value (&lt;code&gt;lorem&lt;/code&gt;). There is no standard about this and usages vary, see for example this question: &lt;a href=&quot;https://stackoverflow.com/questions/1746507/authoritative-position-of-duplicate-http-get-query-keys&quot;&gt;Authoritative position of duplicate HTTP GET query keys&lt;/a&gt;.</source>
          <target state="translated">Nota: Si un par&amp;aacute;metro est&amp;aacute; presente varias veces ( &lt;code&gt;?foo=lorem&amp;amp;foo=ipsum&lt;/code&gt; ), obtendr&amp;aacute; el primer valor ( &lt;code&gt;lorem&lt;/code&gt; ). No hay un est&amp;aacute;ndar sobre esto y los usos var&amp;iacute;an, consulte, por ejemplo, esta pregunta: &lt;a href=&quot;https://stackoverflow.com/questions/1746507/authoritative-position-of-duplicate-http-get-query-keys&quot;&gt;Posici&amp;oacute;n autorizada de claves de consulta HTTP GET duplicadas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="43c7a3ea7253466a37057cb8334c7958806eb6df" translate="yes" xml:space="preserve">
          <source>Now returns &lt;b&gt;arrays&lt;/b&gt; instead.</source>
          <target state="translated">Ahora devuelve &lt;b&gt;matrices en su&lt;/b&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="c2471f4da04fb01da16baeda4a33cd4ee040e3f0" translate="yes" xml:space="preserve">
          <source>Now you can find the updated gist:</source>
          <target state="translated">Ahora puedes encontrar lo esencial actualizado:</target>
        </trans-unit>
        <trans-unit id="3c9422d5c4a86cebd5de145afc04796575bbd229" translate="yes" xml:space="preserve">
          <source>On my Mac: &lt;code&gt;test.htm?i=can&amp;amp;has=cheezburger&lt;/code&gt; displays</source>
          <target state="translated">En mi Mac: &lt;code&gt;test.htm?i=can&amp;amp;has=cheezburger&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="537ef0f2a672534b79397686a0f2fa1d74fc14bd" translate="yes" xml:space="preserve">
          <source>On the other hand, I like the built-in function in Google Chrome: window.location.getParameter.</source>
          <target state="translated">Por otro lado,me gusta la funci√≥n incorporada en Google Chrome:window.location.getParameter.</target>
        </trans-unit>
        <trans-unit id="c052a09c90643f5d3c0aaba27402c7eb0eada351" translate="yes" xml:space="preserve">
          <source>Opera Announcement and details</source>
          <target state="translated">Anuncio y detalles de la √≥pera</target>
        </trans-unit>
        <trans-unit id="cca8e52d510a96977a45bd9f72c787c66c876e61" translate="yes" xml:space="preserve">
          <source>Or of course on any URL:</source>
          <target state="translated">O,por supuesto,en cualquier URL:</target>
        </trans-unit>
        <trans-unit id="10f363b735c302f44ed620411c0930ff6b35fe62" translate="yes" xml:space="preserve">
          <source>Overrides &lt;b&gt;multi-keys&lt;/b&gt; with &lt;b&gt;last&lt;/b&gt; value found.</source>
          <target state="translated">Invalida &lt;b&gt;las teclas m&amp;uacute;ltiples&lt;/b&gt; con el &lt;b&gt;&amp;uacute;ltimo&lt;/b&gt; valor encontrado.</target>
        </trans-unit>
        <trans-unit id="7557ddf49eda41f29918181441555cb4d277e0a3" translate="yes" xml:space="preserve">
          <source>Preparation code: methods declaration</source>
          <target state="translated">C√≥digo de preparaci√≥n:declaraci√≥n de m√©todos</target>
        </trans-unit>
        <trans-unit id="3c53c636d12f95e9beeb95725e1c43c7ac0031f3" translate="yes" xml:space="preserve">
          <source>Read more... about the Vanilla JavaScript solution.</source>
          <target state="translated">Lea m√°s...sobre la soluci√≥n de JavaScript de Vainilla.</target>
        </trans-unit>
        <trans-unit id="4752dd2f39ea7d253016f5d35abab9eaeb1d3de4" translate="yes" xml:space="preserve">
          <source>Regex test code</source>
          <target state="translated">C√≥digo de prueba Regex</target>
        </trans-unit>
        <trans-unit id="bd4afc0073cac79bf136f8e1d922b83f76e969ad" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="translated">Result:</target>
        </trans-unit>
        <trans-unit id="9be8504a8f678e5d59f7566150005d5cb3768376" translate="yes" xml:space="preserve">
          <source>Roshambo jQuery method wasn't taking care of decode URL</source>
          <target state="translated">El m√©todo jQuery de Roshambo no se ocupaba de decodificar la URL</target>
        </trans-unit>
        <trans-unit id="8bb4d1b06e6b852b3d6f7e8520515eddd31556bc" translate="yes" xml:space="preserve">
          <source>Roshambo on snipplr.com has a simple script to achieve this described in &lt;em&gt;&lt;a href=&quot;http://snipplr.com/view/26662/get-url-parameters-with-jquery--improved/&quot;&gt;Get URL Parameters with jQuery | Improved&lt;/a&gt;&lt;/em&gt;. With his script you also easily get to pull out just the parameters you want.</source>
          <target state="translated">Roshambo en snipplr.com tiene un script simple para lograr esto descrito en &lt;em&gt;&lt;a href=&quot;http://snipplr.com/view/26662/get-url-parameters-with-jquery--improved/&quot;&gt;Obtener par&amp;aacute;metros de URL con jQuery |&lt;/a&gt;&lt;/em&gt; &lt;em&gt;Mejorado&lt;/em&gt; Con su script, tambi&amp;eacute;n puede extraer f&amp;aacute;cilmente los par&amp;aacute;metros que desee.</target>
        </trans-unit>
        <trans-unit id="08ac9fbbc9dc3ce88122248070ff14cced35c8d0" translate="yes" xml:space="preserve">
          <source>Simple key check &lt;code&gt;(item in dict) ? dict.item.push(val) : dict.item = [val]&lt;/code&gt;</source>
          <target state="translated">&amp;iquest;Verificaci&amp;oacute;n de clave simple &lt;code&gt;(item in dict) ? dict.item.push(val) : dict.item = [val]&lt;/code&gt; dict.item.push (val): dict.item = [val]</target>
        </trans-unit>
        <trans-unit id="8aa02fb18be713e7da4cba6773249b7b4dff0f2d" translate="yes" xml:space="preserve">
          <source>So if the URL/query string was &lt;code&gt;xyz.com/index.html?lang=de&lt;/code&gt;.</source>
          <target state="translated">Entonces, si la cadena de URL / consulta era &lt;code&gt;xyz.com/index.html?lang=de&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27c01f6d15e1f792a4740307f0513b452fa04ff4" translate="yes" xml:space="preserve">
          <source>So if you know you won't run into Rup's counter-case, this wins. Otherwise, regexp.</source>
          <target state="translated">As√≠ que si sabes que no te topar√°s con el contra-caso de Rup,esto gana.De lo contrario,regexp.</target>
        </trans-unit>
        <trans-unit id="8436af2669db42bebb74a68489289c5b91e668ca" translate="yes" xml:space="preserve">
          <source>So what exactly changed? With url &lt;code&gt;http://sb.com/reg/step1?param=&lt;/code&gt; results will be same. But with url &lt;code&gt;http://sb.com/reg/step1?param&lt;/code&gt; Bruno's solution returns an object without keys, while mine returns an object with key &lt;code&gt;param&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; value.</source>
          <target state="translated">Entonces, &amp;iquest;qu&amp;eacute; cambi&amp;oacute; exactamente? Con la url &lt;code&gt;http://sb.com/reg/step1?param=&lt;/code&gt; los resultados ser&amp;aacute;n los mismos. Pero con la url &lt;code&gt;http://sb.com/reg/step1?param&lt;/code&gt; , la soluci&amp;oacute;n de Bruno devuelve un objeto sin claves, mientras que el m&amp;iacute;o devuelve un objeto con &lt;code&gt;param&lt;/code&gt; clave y valor &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9759c5e93ea70521574ed63522a86d62feb12cfd" translate="yes" xml:space="preserve">
          <source>So why not to use this? Okay, other browsers don't have. So let's create this function if it does not exist:</source>
          <target state="translated">Entonces,¬øpor qu√© no usar esto? Vale,otros navegadores no tienen.As√≠ que vamos a crear esta funci√≥n si no existe:</target>
        </trans-unit>
        <trans-unit id="a0f08300b4e6c071a2da3c87dc7c8ab283896891" translate="yes" xml:space="preserve">
          <source>So, this is the approach to manage it:</source>
          <target state="translated">Por lo tanto,este es el enfoque para manejarlo:</target>
        </trans-unit>
        <trans-unit id="275598542ca0a399c37db60c2c8233f7564d0237" translate="yes" xml:space="preserve">
          <source>Some of the solutions posted here are inefficient. Repeating the regular expression search every time the script needs to access a parameter is completely unnecessary, one single function to split up the parameters into an associative-array style object is enough. If you're not working with the HTML 5 History API, this is only necessary once per page load.  The other suggestions here also fail to decode the URL correctly.</source>
          <target state="translated">Algunas de las soluciones publicadas aqu√≠ son ineficientes.Repetir la b√∫squeda de expresiones regulares cada vez que el script necesita acceder a un par√°metro es completamente innecesario,una sola funci√≥n para dividir los par√°metros en un objeto de estilo asociativo-arreglado es suficiente.Si no est√° trabajando con el API de Historia de HTML 5,esto s√≥lo es necesario una vez por cada carga de la p√°gina.Las otras sugerencias aqu√≠ tambi√©n fallan al decodificar la URL correctamente.</target>
        </trans-unit>
        <trans-unit id="62669f1c0f3a400a1cdf3d2361e05585135d5429" translate="yes" xml:space="preserve">
          <source>Split test code</source>
          <target state="translated">C√≥digo de prueba dividido</target>
        </trans-unit>
        <trans-unit id="cae4ef2c7ff69f37950b90d84019dc33390b37e0" translate="yes" xml:space="preserve">
          <source>Tearing Google's code I found the method they use: &lt;code&gt;getUrlParameters&lt;/code&gt;</source>
          <target state="translated">Al romper el c&amp;oacute;digo de Google, encontr&amp;eacute; el m&amp;eacute;todo que usan: &lt;code&gt;getUrlParameters&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49c72239751b2e412597c78b117d3a3b7483ac0c" translate="yes" xml:space="preserve">
          <source>The problem with the top answer on that question is that it's not-supported parameters placed after #, but sometimes it's needed to get this value also.</source>
          <target state="translated">El problema con la respuesta superior de esa pregunta es que no son par√°metros soportados colocados despu√©s de #,pero a veces es necesario para obtener este valor tambi√©n.</target>
        </trans-unit>
        <trans-unit id="869d833f9b3336891a11a67fcd142e1caac2f566" translate="yes" xml:space="preserve">
          <source>The syntax is:</source>
          <target state="translated">La sintaxis es:</target>
        </trans-unit>
        <trans-unit id="cf7022789844fe203ac43cfc1a2b12c5aefad738" translate="yes" xml:space="preserve">
          <source>Then just get your parameters from the query string.</source>
          <target state="translated">Entonces,s√≥lo consigue tus par√°metros de la cadena de consulta.</target>
        </trans-unit>
        <trans-unit id="638840f34b22b5ae9b66bd9c24c447b9e15dd740" translate="yes" xml:space="preserve">
          <source>There is a google-suggested &lt;strong&gt;&lt;a href=&quot;https://github.com/WebReflection/url-search-params&quot;&gt;URLSearchParams polyfill&lt;/a&gt;&lt;/strong&gt; for the stable versions of IE.</source>
          <target state="translated">Existe un &lt;strong&gt;&lt;a href=&quot;https://github.com/WebReflection/url-search-params&quot;&gt;polyfill URLSearchParams&lt;/a&gt;&lt;/strong&gt; sugerido por &lt;strong&gt;Google&lt;/strong&gt; para las versiones estables de IE.</target>
        </trans-unit>
        <trans-unit id="e886cc5a12cf11b6338ae8af68acdfe43fdead94" translate="yes" xml:space="preserve">
          <source>These are all great answers, but I needed something a bit more robust, and thought you all might like to have what I created.</source>
          <target state="translated">Todas estas son grandes respuestas,pero necesitaba algo un poco m√°s robusto,y pens√© que a todos ustedes les gustar√≠a tener lo que he creado.</target>
        </trans-unit>
        <trans-unit id="a843b1bdd4230f8b19e0d45e0269d3d8533abf96" translate="yes" xml:space="preserve">
          <source>They start to look for parameters on the url from &lt;code&gt;?&lt;/code&gt; and also from the hash &lt;code&gt;#&lt;/code&gt;. Then for each parameter they split in the equal sign &lt;code&gt;b[f][p](&quot;=&quot;)&lt;/code&gt; (which looks like &lt;code&gt;indexOf&lt;/code&gt;, they use the position of the char to get the key/value). Having it split they check whether the parameter has a value or not, if it has then they store the value of &lt;code&gt;d&lt;/code&gt;, otherwise they just continue.</source>
          <target state="translated">&amp;iquest;Comienzan a buscar par&amp;aacute;metros en la url desde &lt;code&gt;?&lt;/code&gt; y tambi&amp;eacute;n del hash &lt;code&gt;#&lt;/code&gt; . Luego, para cada par&amp;aacute;metro, se dividen en el signo igual &lt;code&gt;b[f][p](&quot;=&quot;)&lt;/code&gt; (que parece &lt;code&gt;indexOf&lt;/code&gt; , usan la posici&amp;oacute;n del car&amp;aacute;cter para obtener la clave / valor). Al dividirlo, comprueban si el par&amp;aacute;metro tiene un valor o no; si lo tiene, almacenan el valor de &lt;code&gt;d&lt;/code&gt; ; de lo contrario, simplemente contin&amp;uacute;an.</target>
        </trans-unit>
        <trans-unit id="e5f177b7dc70f30062b86a2e4b48e1574fe4fe3b" translate="yes" xml:space="preserve">
          <source>This could easily be improved upon to handle array-style query strings too.  An example of this is &lt;a href=&quot;http://jsbin.com/adali3/2&quot;&gt;here&lt;/a&gt;, but since array-style parameters aren't defined in &lt;a href=&quot;http://tools.ietf.org/html/rfc3986&quot;&gt;RFC 3986&lt;/a&gt; I won't pollute this answer with the source code. &lt;a href=&quot;https://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript/23401756#23401756&quot;&gt;For those interested in a &quot;polluted&quot; version, look at campbeln's answer below&lt;/a&gt;.</source>
          <target state="translated">Esto podr&amp;iacute;a mejorarse f&amp;aacute;cilmente para manejar cadenas de consulta de estilo matriz tambi&amp;eacute;n. &lt;a href=&quot;http://jsbin.com/adali3/2&quot;&gt;Aqu&amp;iacute;&lt;/a&gt; hay un ejemplo de esto, pero como los par&amp;aacute;metros de estilo de matriz no est&amp;aacute;n definidos en &lt;a href=&quot;http://tools.ietf.org/html/rfc3986&quot;&gt;RFC 3986&lt;/a&gt; , no contaminar&amp;eacute; esta respuesta con el c&amp;oacute;digo fuente. &lt;a href=&quot;https://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript/23401756#23401756&quot;&gt;Para aquellos interesados ‚Äã‚Äãen una versi&amp;oacute;n &quot;contaminada&quot;, mire la respuesta de Campbeln a continuaci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="785fbe088ab7b929831fb85238315c9b070e6dd2" translate="yes" xml:space="preserve">
          <source>This function is more or less from Ryan Phelan, but it is wrapped differently: clear name and no dependencies of other javascript libraries. &lt;a href=&quot;http://sharepointkunskap.wordpress.com/2012/01/11/get-url-parameters-with-javascript/&quot;&gt;More about this function on my blog&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n es m&amp;aacute;s o menos de Ryan Phelan, pero est&amp;aacute; envuelta de manera diferente: nombre claro y sin dependencias de otras bibliotecas javascript. &lt;a href=&quot;http://sharepointkunskap.wordpress.com/2012/01/11/get-url-parameters-with-javascript/&quot;&gt;M&amp;aacute;s sobre esta funci&amp;oacute;n en mi blog&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="70ce98195ff8aa37fd7abebc93e808753cb4ebbd" translate="yes" xml:space="preserve">
          <source>This is a function I created a while back and I'm quite happy with. It is not case sensitive - which is handy. Also, if the requested QS doesn't exist, it just returns an empty string.</source>
          <target state="translated">Esta es una funci√≥n que cre√© hace un tiempo y con la que estoy bastante contento.No distingue entre may√∫sculas y min√∫sculas,lo cual es muy √∫til.Adem√°s,si la EQ solicitada no existe,s√≥lo devuelve una cadena vac√≠a.</target>
        </trans-unit>
        <trans-unit id="880f4163a15c8a19d4b57d0b69c2302c39bea48a" translate="yes" xml:space="preserve">
          <source>This is an update based on the new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams&quot;&gt;URLSearchParams specs&lt;/a&gt; to achieve the same result more succinctly. See answer titled &quot;&lt;a href=&quot;https://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript/901144#12151322&quot;&gt;URLSearchParams&lt;/a&gt;&quot; below.</source>
          <target state="translated">Esta es una actualizaci&amp;oacute;n basada en las nuevas &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams&quot;&gt;especificaciones URLSearchParams&lt;/a&gt; para lograr el mismo resultado de manera m&amp;aacute;s sucinta. Consulte la respuesta titulada &quot; &lt;a href=&quot;https://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript/901144#12151322&quot;&gt;URLSearchParams&lt;/a&gt; &quot; a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b9db0bc0a8c58c3017b8ec738697d3bd06ce2780" translate="yes" xml:space="preserve">
          <source>This version will update its internal cache of parameters each time the history changes.</source>
          <target state="translated">Esta versi√≥n actualizar√° su cach√© interno de par√°metros cada vez que cambie el historial.</target>
        </trans-unit>
        <trans-unit id="0e7fc00961b74dd24ca9653ed04641900be663c2" translate="yes" xml:space="preserve">
          <source>To solve the problem in Rup's comment, add a conditional split by changing the first line to the two below. But absolute accuracy means it's now slower than regexp (see &lt;a href=&quot;http://jsperf.com/querystring-with-javascript/10&quot;&gt;jsPerf&lt;/a&gt;).</source>
          <target state="translated">Para resolver el problema en el comentario de Rup, agregue una divisi&amp;oacute;n condicional cambiando la primera l&amp;iacute;nea a las dos siguientes. Pero la precisi&amp;oacute;n absoluta significa que ahora es m&amp;aacute;s lento que regexp (ver &lt;a href=&quot;http://jsperf.com/querystring-with-javascript/10&quot;&gt;jsPerf&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="47b23b39759a1908e680a0a3b5cb3c99d6de735e" translate="yes" xml:space="preserve">
          <source>UPDATED</source>
          <target state="translated">UPDATED</target>
        </trans-unit>
        <trans-unit id="b19e8d66e7f004e226c44a75766dadab7d09911a" translate="yes" xml:space="preserve">
          <source>URLSearchParams</source>
          <target state="translated">URLSearchParams</target>
        </trans-unit>
        <trans-unit id="5a8cd4a189f53053616ff5571c7cf39afe0885c1" translate="yes" xml:space="preserve">
          <source>UZBEKJON has a great blog post on this as well, &lt;em&gt;&lt;a href=&quot;http://jquery-howto.blogspot.com/2009/09/get-url-parameters-values-with-jquery.html&quot;&gt;Get URL parameters &amp;amp; values with jQuery&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">UZBEKJON tambi&amp;eacute;n tiene una gran publicaci&amp;oacute;n de blog sobre esto, obtenga &lt;em&gt;&lt;a href=&quot;http://jquery-howto.blogspot.com/2009/09/get-url-parameters-values-with-jquery.html&quot;&gt;par&amp;aacute;metros y valores de URL con jQuery&lt;/a&gt;&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="b93fb7a6a3be201a9ffddb0c9abd27f858aee537" translate="yes" xml:space="preserve">
          <source>Usage is very simple and cool:</source>
          <target state="translated">El uso es muy simple y genial:</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="392df2a166f2f52393355ae22d0307f078b54728" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;decodeURIComponent()&lt;/code&gt; for the second &lt;em&gt;or both&lt;/em&gt; splits.</source>
          <target state="translated">Use &lt;code&gt;decodeURIComponent()&lt;/code&gt; para la segunda &lt;em&gt;o ambas&lt;/em&gt; divisiones.</target>
        </trans-unit>
        <trans-unit id="ff3e16b2ce3562cdd238525776f9c4ebc2eef93c" translate="yes" xml:space="preserve">
          <source>We've just released &lt;a href=&quot;https://github.com/stretchr/arg.js&quot;&gt;arg.js&lt;/a&gt;, a project aimed at solving this problem once and for all.  It's traditionally been so difficult but now you can do:</source>
          <target state="translated">Acabamos de lanzar &lt;a href=&quot;https://github.com/stretchr/arg.js&quot;&gt;arg.js&lt;/a&gt; , un proyecto destinado a resolver este problema de una vez por todas. Tradicionalmente ha sido muy dif&amp;iacute;cil, pero ahora puedes hacer:</target>
        </trans-unit>
        <trans-unit id="c3804ffce841dd1b7f21366c2ef0fdde6c5bf130" translate="yes" xml:space="preserve">
          <source>What is all this code...</source>
          <target state="translated">¬øQu√© es todo este c√≥digo...</target>
        </trans-unit>
        <trans-unit id="e49acedde6c2da878b9e79c1a9d7df57c479b9c3" translate="yes" xml:space="preserve">
          <source>With an URL like &lt;code&gt;?topic=123&amp;amp;name=query+string&lt;/code&gt;, the following will return:</source>
          <target state="translated">Con una URL como &lt;code&gt;?topic=123&amp;amp;name=query+string&lt;/code&gt; , se devolver&amp;aacute; lo siguiente:</target>
        </trans-unit>
        <trans-unit id="0c0a59fb074de0fc1fd7cee2f49870f337cc9102" translate="yes" xml:space="preserve">
          <source>Without jQuery</source>
          <target state="translated">Sin jQuery</target>
        </trans-unit>
        <trans-unit id="3ae633fca7fc3cfcefb10e9095e623c1e577d05b" translate="yes" xml:space="preserve">
          <source>Works great for me.</source>
          <target state="translated">Funciona muy bien para m√≠.</target>
        </trans-unit>
        <trans-unit id="dffd535ef0186fa22439ec59e86712413ad1b9a1" translate="yes" xml:space="preserve">
          <source>You can also use URLSearchParams for it, here's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams#Example&quot;&gt;an example from MDN&lt;/a&gt; to do it with URLSearchParams:</source>
          <target state="translated">Tambi&amp;eacute;n puede usar URLSearchParams para ello, aqu&amp;iacute; hay &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams#Example&quot;&gt;un ejemplo de MDN&lt;/a&gt; para hacerlo con URLSearchParams:</target>
        </trans-unit>
        <trans-unit id="4ede7842007a910025b46477a4c81da92b054e8c" translate="yes" xml:space="preserve">
          <source>You can get params also using a shorthand &lt;code&gt;.searchParams&lt;/code&gt; property on the URL object, like this:</source>
          <target state="translated">Tambi&amp;eacute;n puede obtener par&amp;aacute;metros utilizando una propiedad abreviada &lt;code&gt;.searchParams&lt;/code&gt; en el objeto URL, como esta:</target>
        </trans-unit>
        <trans-unit id="bec4d2ce8c312b81ed4ea34a1fa6877786b84da0" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams#Browser_compatibility&quot;&gt;URLSearchParams&lt;/a&gt; which is simple and has &lt;a href=&quot;https://caniuse.com/#feat=urlsearchparams&quot;&gt;decent (but not complete) browser support&lt;/a&gt;.</source>
          <target state="translated">Puede usar &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams#Browser_compatibility&quot;&gt;URLSearchParams,&lt;/a&gt; que es simple y tiene &lt;a href=&quot;https://caniuse.com/#feat=urlsearchparams&quot;&gt;un soporte de navegador decente (pero no completo)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5a2e5e1b0d7dd97f755e9e72aa22014f827c6086" translate="yes" xml:space="preserve">
          <source>You can use it on &lt;code&gt;location&lt;/code&gt;:</source>
          <target state="translated">Puedes usarlo en la &lt;code&gt;location&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="95636b19872bae2965f8a7b844f3b33edcc8ab4d" translate="yes" xml:space="preserve">
          <source>You don't need jQuery for that purpose. You can use just some pure JavaScript:</source>
          <target state="translated">No necesitas a jQuery para ese prop√≥sito.Puedes usar s√≥lo un poco de puro JavaScript:</target>
        </trans-unit>
        <trans-unit id="a4deb33adf10380e08f4a933d326aeb7a6b90323" translate="yes" xml:space="preserve">
          <source>You read/set parameters through the &lt;code&gt;get(KEY)&lt;/code&gt;, &lt;code&gt;set(KEY, VALUE)&lt;/code&gt;, &lt;code&gt;append(KEY, VALUE)&lt;/code&gt; API. You can also iterate over all values &lt;code&gt;for (let p of params) {}&lt;/code&gt;.</source>
          <target state="translated">Usted lee / establece los par&amp;aacute;metros a trav&amp;eacute;s de la API &lt;code&gt;get(KEY)&lt;/code&gt; , &lt;code&gt;set(KEY, VALUE)&lt;/code&gt; , &lt;code&gt;append(KEY, VALUE)&lt;/code&gt; . Tambi&amp;eacute;n puede iterar sobre todos los valores &lt;code&gt;for (let p of params) {}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="838bd1bcefa13f29010a286f1eadbaf9c144650a" translate="yes" xml:space="preserve">
          <source>and if you care about the difference between &lt;code&gt;?query=true&lt;/code&gt; and &lt;code&gt;#hash=true&lt;/code&gt; then you can use the &lt;code&gt;Arg.query()&lt;/code&gt; and &lt;code&gt;Arg.hash()&lt;/code&gt; methods.</source>
          <target state="translated">y si le importa la diferencia entre &lt;code&gt;?query=true&lt;/code&gt; y &lt;code&gt;#hash=true&lt;/code&gt; , puede usar los &lt;code&gt;Arg.query()&lt;/code&gt; y &lt;code&gt;Arg.hash()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d063002e0b1cd2adbddcbf212619985781f96479" translate="yes" xml:space="preserve">
          <source>getHash</source>
          <target state="translated">getHash</target>
        </trans-unit>
        <trans-unit id="be7ccc1402c4ef7b03a97cb983978c3793e26812" translate="yes" xml:space="preserve">
          <source>getHost</source>
          <target state="translated">getHost</target>
        </trans-unit>
        <trans-unit id="b5a5fe44454826c283f4f56097f59524379aa727" translate="yes" xml:space="preserve">
          <source>getParam</source>
          <target state="translated">getParam</target>
        </trans-unit>
        <trans-unit id="403e8e0a2033d5412408c1b64b782d5f1c1d95be" translate="yes" xml:space="preserve">
          <source>getParams</source>
          <target state="translated">getParams</target>
        </trans-unit>
        <trans-unit id="bc119b82b82560bad5a3f6cf69db9444b34ebfb6" translate="yes" xml:space="preserve">
          <source>getPath</source>
          <target state="translated">getPath</target>
        </trans-unit>
        <trans-unit id="3bd6d0bd1635786a7175c813be113edac076e2e1" translate="yes" xml:space="preserve">
          <source>getQuery</source>
          <target state="translated">getQuery</target>
        </trans-unit>
        <trans-unit id="3fd57351e3f02a8a8053535c9bdee5b0fa524726" translate="yes" xml:space="preserve">
          <source>hasParam</source>
          <target state="translated">hasParam</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="e325bd97642094b3751758dabdc4840b6401c0ea" translate="yes" xml:space="preserve">
          <source>or getting the whole lot:</source>
          <target state="translated">o conseguir todo el lote:</target>
        </trans-unit>
        <trans-unit id="97a8e0547c911e89290749777617372f2ee2216a" translate="yes" xml:space="preserve">
          <source>removeParam</source>
          <target state="translated">removeParam</target>
        </trans-unit>
        <trans-unit id="2a01642660f3da69300df25564329261a463dac4" translate="yes" xml:space="preserve">
          <source>setHash</source>
          <target state="translated">setHash</target>
        </trans-unit>
        <trans-unit id="8abd850531e327fb74f340d4cef8d080c94e5580" translate="yes" xml:space="preserve">
          <source>setParam</source>
          <target state="translated">setParam</target>
        </trans-unit>
        <trans-unit id="b2407cb2215024ae653dbf5a158744f770da9e61" translate="yes" xml:space="preserve">
          <source>to convert your querystring into a map:</source>
          <target state="translated">para convertir su cadena de consulta en un mapa:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
