<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/845021">
    <body>
      <group id="845021">
        <trans-unit id="000667d5ad5fb974f5c4f9d52b4e9390786ec3e5" translate="yes" xml:space="preserve">
          <source>(3) Another option is to use an editor that checks for errors when you type, such as &lt;a href=&quot;http://www.nusphere.com/products/phped.htm&quot;&gt;PhpEd&lt;/a&gt;. PhpEd also comes with a debugger which can provide more detailed information. (The PhpEd debugger is very similar to xdebug and integrates directly into the editor so you use 1 program to do everything.)</source>
          <target state="translated">（3）別のオプションは、入力時にエラーをチェックするエディター（ &lt;a href=&quot;http://www.nusphere.com/products/phped.htm&quot;&gt;PhpEd&lt;/a&gt;など）を使用することです。 PhpEdには、より詳細な情報を提供できるデバッガーも付属しています。 （PhpEdデバッガーはxdebugと非常によく似ており、エディターに直接統合されているため、1つのプログラムを使用してすべてを実行できます。）</target>
        </trans-unit>
        <trans-unit id="8979a770026319a788ff890b274dd2f556627d79" translate="yes" xml:space="preserve">
          <source>2 entries in &lt;a href=&quot;https://stackoverflow.com/questions/8684609/dude-wheres-my-php-ini&quot;&gt;php.ini&lt;/a&gt; dictate the output of errors:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/8684609/dude-wheres-my-php-ini&quot;&gt;php.iniの&lt;/a&gt; 2つのエントリがエラーの出力を指示します。</target>
        </trans-unit>
        <trans-unit id="d47ccc087d603d4066d67db4bed0563afcbee79f" translate="yes" xml:space="preserve">
          <source>3 other items: (1) You can check the error log file as it will have all of the errors (unless logging has been disabled). (2) Adding the following 2 lines will help you debug errors that are not syntax errors:</source>
          <target state="translated">他にも3つの項目があります。(1)エラーログファイルにはすべてのエラーが記録されているので、確認してみてください(ログの記録が無効になっていない限り)。(2)以下の2行を追加すると、構文エラーではないエラーのデバッグに役立ちます。</target>
        </trans-unit>
        <trans-unit id="3b650a40684aa637c3e97068a4565f81b0de8fc6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.firephp.org/&quot;&gt;FirePHP&lt;/a&gt; can be useful as well.</source>
          <target state="translated">&lt;a href=&quot;http://www.firephp.org/&quot;&gt;FirePHP&lt;/a&gt;も役立ちます。</target>
        </trans-unit>
        <trans-unit id="824a1613059d1de633e867f4395d599471e01981" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E_STRICT&lt;/code&gt; will notify you about deprecated functions and give you recommendations about the best methods to do certain tasks.</source>
          <target state="translated">&lt;code&gt;E_STRICT&lt;/code&gt; は、廃止された関数について通知し、特定のタスクを実行するための最適な方法に関する推奨事項を提供します。</target>
        </trans-unit>
        <trans-unit id="4962ce975371ee8a6fdc6d56e203a26bc58f9297" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;display_errors&lt;/code&gt;&lt;sup&gt;&lt;em&gt;Docs&lt;/em&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;display_errors&lt;/code&gt;&lt;sup&gt;&lt;em&gt;Docs&lt;/em&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f08cc6579fe57a84d382e8a3e22e7fdca58722ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error_reporting()&lt;/code&gt;&lt;sup&gt;&lt;em&gt;Docs&lt;/em&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;error_reporting()&lt;/code&gt;&lt;sup&gt;&lt;em&gt;Docs&lt;/em&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="10db3461ae2208605532747995b7874109bdd96b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error_reporting&lt;/code&gt; (as of PHP 5.3) is set by default to &lt;code&gt;E_ALL &amp;amp; ~E_NOTICE &amp;amp; ~E_STRICT &amp;amp; ~E_DEPRECATED&lt;/code&gt; (meaning, everything is shown except for notices, strict standards and deprecation notices). When in doubt, set it to &lt;code&gt;E_ALL&lt;/code&gt; to display &lt;strong&gt;all&lt;/strong&gt; the errors. &lt;strong&gt;Check&lt;/strong&gt;!</source>
          <target state="translated">&lt;code&gt;error_reporting&lt;/code&gt; （PHP 5.3以降）は、デフォルトで &lt;code&gt;E_ALL &amp;amp; ~E_NOTICE &amp;amp; ~E_STRICT &amp;amp; ~E_DEPRECATED&lt;/code&gt; 設定されています（つまり、通知、厳密な標準、非推奨の通知を除いてすべてが表示されます）。 疑わしい場合は、 &lt;code&gt;E_ALL&lt;/code&gt; に設定して&lt;strong&gt;すべて&lt;/strong&gt;のエラーを表示します。 &lt;strong&gt;チェック&lt;/strong&gt; ！</target>
        </trans-unit>
        <trans-unit id="6bad12bb7673aea046495e8cbaf873beba0e5048" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://il1.php.net/manual/en/errorfunc.configuration.php#ini.display-errors&quot;&gt;&lt;code&gt;display_errors&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://il1.php.net/manual/en/errorfunc.configuration.php#ini.display-errors&quot;&gt;&lt;code&gt;display_errors&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39197825927d63cab65298806aa643e34a8895a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://il1.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;&lt;code&gt;error_reporting&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://il1.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;&lt;code&gt;error_reporting&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="88f86d5c6e5f13c4c8d2867a7ab8748525a2a9b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edited to show APPLICATON_LIVE&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;APPLICATON_LIVEを表示するように編集されました&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab64e3ffb03675f19f4b8e8121dbc948857e5c6e" translate="yes" xml:space="preserve">
          <source>Also make sure that &lt;code&gt;display_errors&lt;/code&gt; is enabled in php.ini. If your PHP version is older than 5.2.4, set it to &lt;code&gt;On&lt;/code&gt;:</source>
          <target state="translated">また、php.iniで &lt;code&gt;display_errors&lt;/code&gt; が有効になっていることを確認してください。 PHPのバージョンが5.2.4より古い場合は、それを &lt;code&gt;On&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="a037e4fe827fe8a23ffe37216d63adccb2799fff" translate="yes" xml:space="preserve">
          <source>Also see the following links</source>
          <target state="translated">また、以下のリンクもご覧ください。</target>
        </trans-unit>
        <trans-unit id="927fcf32471ccd6b493be2064f428c7d12964787" translate="yes" xml:space="preserve">
          <source>Also useful errors are often directed to the browser, but as they are not valid html they are not displayed.</source>
          <target state="translated">また、有用なエラーはブラウザに向けられていることが多いのですが、有効なhtmlではないため表示されません。</target>
        </trans-unit>
        <trans-unit id="d1296529b5ed6712f6c128416ef61c1a33f0c2da" translate="yes" xml:space="preserve">
          <source>And turn on display errors in php.ini</source>
          <target state="translated">そして、php.iniのエラー表示をオンにします。</target>
        </trans-unit>
        <trans-unit id="194e0c88d2255dcb9015b6129b945c9295c1f656" translate="yes" xml:space="preserve">
          <source>Another way to use debugger tools like &lt;a href=&quot;http://xdebug.org&quot;&gt;xdebug&lt;/a&gt; in your IDE.</source>
          <target state="translated">IDEで&lt;a href=&quot;http://xdebug.org&quot;&gt;xdebug&lt;/a&gt;などのデバッガーツールを使用する別の方法。</target>
        </trans-unit>
        <trans-unit id="baf5f87cd9350fc4740a54555ea415a3bfdd2894" translate="yes" xml:space="preserve">
          <source>Any errors that happen before the script runs won't be caught, but for 99% of errors that I make, that's not an issue.</source>
          <target state="translated">スクリプトが実行される前に発生したエラーは捕捉されませんが、私が行うエラーの99%については、それは問題ではありません。</target>
        </trans-unit>
        <trans-unit id="0899623c9f433c6458ebae877977e701304e8431" translate="yes" xml:space="preserve">
          <source>As pointed out by other contributors, these are switched off by default for security reasons. As a useful tip - when you're setting up your site it's handy to do a switch for your different environments so that these errors are ON by default in your local and development environments. This can be achieved with the following code (ideally in your index.php or config file so this is active from the start):</source>
          <target state="translated">他の投稿者が指摘しているように、これらのエラーはセキュリティ上の理由からデフォルトではオフになっています。便利なヒントとして-サイトを設定する際に、異なる環境用にスイッチを入れておくと便利です。これは以下のコードで行うことができます (理想的には index.php または設定ファイルの中で、最初から有効にしておくこと)。</target>
        </trans-unit>
        <trans-unit id="00e83727914c0bfec8a32e8834f128ce29a5b67d" translate="yes" xml:space="preserve">
          <source>Aside from error_reporting and the display_errors ini setting, you can get SYNTAX errors from your web server's log files. When I'm developing PHP I load my development system's web server logs into my editor. Whenever I test a page and get a blank screen, the log file goes stale and my editor asks if I want to reload it. When I do, I jump to the bottom and there is the syntax error. For example:</source>
          <target state="translated">error_reportingとdisplay_errors iniの設定は別として、WebサーバーのログファイルからSYNTAXエラーを取得することができます。PHP を開発しているときは、開発システムのウェブサーバのログをエディタに読み込みます。ページをテストしていて何もない画面が表示されると、ログファイルが古くなり、エディタが再読み込みするかどうか尋ねてきます。そうすると、下の方にジャンプして、構文エラーが出てきます。例えば</target>
        </trans-unit>
        <trans-unit id="9016f8fa0673ecae7e175c7acdf140dbcb214407" translate="yes" xml:space="preserve">
          <source>Best ways to write following two lines on the top of script to get all errors messages:</source>
          <target state="translated">すべてのエラーメッセージを取得するために、スクリプトの先頭に次の2行を記述するための最良の方法。</target>
        </trans-unit>
        <trans-unit id="06fd786ab06b06a56d03d90ef7cec41de864d307" translate="yes" xml:space="preserve">
          <source>Cartman's &lt;a href=&quot;http://www.ibm.com/developerworks/library/os-debug/&quot;&gt;link&lt;/a&gt; is also very good: &lt;a href=&quot;http://www.ibm.com/developerworks/library/os-debug/&quot;&gt;http://www.ibm.com/developerworks/library/os-debug/&lt;/a&gt;</source>
          <target state="translated">カートマンの&lt;a href=&quot;http://www.ibm.com/developerworks/library/os-debug/&quot;&gt;リンク&lt;/a&gt;もとても良いです： &lt;a href=&quot;http://www.ibm.com/developerworks/library/os-debug/&quot;&gt;http&lt;/a&gt; : //www.ibm.com/developerworks/library/os-debug/</target>
        </trans-unit>
        <trans-unit id="088fe6e05a009eab70d33e01d350757c52b7080d" translate="yes" xml:space="preserve">
          <source>Change the uncommented line to:</source>
          <target state="translated">コメントされていない行を変更します。</target>
        </trans-unit>
        <trans-unit id="49ba95e817f1722e6018eeb432982c7a68f77523" translate="yes" xml:space="preserve">
          <source>Dunno if it will help, but here is a piece of my standard config file for php projects.  I tend not to depend too much on the apache configs even on my own server.</source>
          <target state="translated">参考になるかどうかわかりませんが、ここに私のphpプロジェクト用の標準設定ファイルの一部があります。私は自分のサーバでさえ、あまり apache の設定に依存しない傾向があります。</target>
        </trans-unit>
        <trans-unit id="fdbc811f2332e96f5a073dd9c355b6967109df6a" translate="yes" xml:space="preserve">
          <source>Error Reporting (PHP The Right Way.)</source>
          <target state="translated">エラー報告 (PHP の正しい使い方)</target>
        </trans-unit>
        <trans-unit id="1a1d9477fdb966f717fb5443dbf5a52c31fa3398" translate="yes" xml:space="preserve">
          <source>Error logs</source>
          <target state="translated">エラーログ</target>
        </trans-unit>
        <trans-unit id="ab5a12aa3975f80180d6f619c6047a511f15cbad" translate="yes" xml:space="preserve">
          <source>Errors and warnings usually appear in &lt;code&gt;....\logs\php_error.log&lt;/code&gt; or &lt;code&gt;....\logs\apache_error.log&lt;/code&gt; depending on your php.ini settings.</source>
          <target state="translated">エラーと警告は通常、php.iniの設定に応じて &lt;code&gt;....\logs\php_error.log&lt;/code&gt; または &lt;code&gt;....\logs\apache_error.log&lt;/code&gt; に表示されます。</target>
        </trans-unit>
        <trans-unit id="ced98bb62a3553173fbdbbd5d664ff120c14119a" translate="yes" xml:space="preserve">
          <source>For quick, hands-on troubleshooting I normally suggest here on SO:</source>
          <target state="translated">手っ取り早く、ハンズオンでトラブルシューティングをするために、私は普段からSOのここをお勧めしています。</target>
        </trans-unit>
        <trans-unit id="45827f05b1909966d6852d6f6cf42747bfbc9aec" translate="yes" xml:space="preserve">
          <source>For syntax errors, you need to enable error display in the php.ini. By default these are turned off because you don't want a &quot;customer&quot; seeing the error messages. &lt;a href=&quot;http://php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;Check this page&lt;/a&gt; in the PHP documentation for information on the 2 directives: &lt;code&gt;error_reporting&lt;/code&gt; and &lt;code&gt;display_errors&lt;/code&gt;. &lt;code&gt;display_errors&lt;/code&gt; is probably the one you want to change. If you can't modify the php.ini, you can also add the following lines to an .htaccess file:</source>
          <target state="translated">構文エラーの場合、php.iniでエラー表示を有効にする必要があります。 エラーメッセージが「顧客」に表示されないようにするため、デフォルトではこれらはオフになっています。 2つのディレクティブ &lt;code&gt;error_reporting&lt;/code&gt; および &lt;code&gt;display_errors&lt;/code&gt; については、PHPドキュメントの&lt;a href=&quot;http://php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;このページ&lt;/a&gt;を確認してください 。 &lt;code&gt;display_errors&lt;/code&gt; はおそらく変更したいものです。 php.iniを変更できない場合は、次の行を.htaccessファイルに追加することもできます。</target>
        </trans-unit>
        <trans-unit id="a339b156f58763a4d284c97b33428bbfe71a35cc" translate="yes" xml:space="preserve">
          <source>For those who use nginx and have a white screen even for file with &lt;code&gt;&amp;lt;?php echo 123;&lt;/code&gt;. In my case I didn't have this required option for PHP in nginx config file:</source>
          <target state="translated">nginxを使用していて、 &lt;code&gt;&amp;lt;?php echo 123;&lt;/code&gt; のファイルでも画面が白い場合 。 私の場合、nginx設定ファイルにPHPのこの必須オプションがありませんでした：</target>
        </trans-unit>
        <trans-unit id="ba3e52e7c090e0d5ff4c536883b04fc113dc943b" translate="yes" xml:space="preserve">
          <source>How can I get useful error messages in PHP</source>
          <target state="translated">PHPで有用なエラーメッセージを取得するには</target>
        </trans-unit>
        <trans-unit id="df3b2b3f84177e0892eb00eb5bd42b45eb0b5df6" translate="yes" xml:space="preserve">
          <source>How to always avoid WSOD in development</source>
          <target state="translated">開発中のWSODを常に回避する方法</target>
        </trans-unit>
        <trans-unit id="61b9d95d90ccdff940a75e9065aa1f99b0b2bc00" translate="yes" xml:space="preserve">
          <source>How to find your (php.ini) loaded configuration files</source>
          <target state="translated">読み込んだ(php.ini)設定ファイルを見つける方法</target>
        </trans-unit>
        <trans-unit id="79bdbcc9276139fe08dc9ac1bd522209c76dc567" translate="yes" xml:space="preserve">
          <source>However, in &lt;strong&gt;development&lt;/strong&gt;, it should be set to &lt;code&gt;On&lt;/code&gt;, so that errors get displayed. &lt;strong&gt;Check&lt;/strong&gt;!</source>
          <target state="translated">ただし、 &lt;strong&gt;開発&lt;/strong&gt;時には、エラーが表示されるように &lt;code&gt;On&lt;/code&gt; に設定する必要があります。 &lt;strong&gt;チェック&lt;/strong&gt; ！</target>
        </trans-unit>
        <trans-unit id="5db1f20caf6c8d0ae8c89cedc79dc074c63f75cd" translate="yes" xml:space="preserve">
          <source>I never have the disappearing error problem, so perhaps something here will give you an idea.</source>
          <target state="translated">私はエラーが消える問題を抱えたことがないので、もしかしたらここに何かヒントがあるかもしれません。</target>
        </trans-unit>
        <trans-unit id="627e026ad8063bb3ef19097d80c7fd8825890a27" translate="yes" xml:space="preserve">
          <source>I recommend &lt;a href=&quot;https://tracy.nette.org/en/&quot;&gt;Nette Tracy&lt;/a&gt; for better visualization of errors and exceptions in PHP:</source>
          <target state="translated">PHPのエラーと例外をよりよく視覚化するには、 &lt;a href=&quot;https://tracy.nette.org/en/&quot;&gt;Nette Tracy&lt;/a&gt;をお勧めします。</target>
        </trans-unit>
        <trans-unit id="c898240643f514060cec2c1b728f1cddcd140516" translate="yes" xml:space="preserve">
          <source>I still get a blank page/500 error!</source>
          <target state="translated">未だに白紙のページ500のエラーが出ます!</target>
        </trans-unit>
        <trans-unit id="c77160fb539564af95d4099b98d186484b156c92" translate="yes" xml:space="preserve">
          <source>I'm always using this syntax at the very top of the php script.</source>
          <target state="translated">私はいつもphpスクリプトの一番上にこの構文を使っています。</target>
        </trans-unit>
        <trans-unit id="3da20b137d03b45b0a1e6507b4b2cab8b4944242" translate="yes" xml:space="preserve">
          <source>If you are super cool, you might try:</source>
          <target state="translated">超かっこいい人はやってみるといいかもしれません。</target>
        </trans-unit>
        <trans-unit id="9560ac8c9e1965f91b59c6c44b82ef284f5a54fd" translate="yes" xml:space="preserve">
          <source>If you don't want notices, but you find other message types helpful, try excluding notices:</source>
          <target state="translated">通知は不要だが、他のメッセージタイプが便利だと思う場合は、通知を除外してみてください。</target>
        </trans-unit>
        <trans-unit id="9764b14b82ca6fc8959fdd51d6c858505b99472a" translate="yes" xml:space="preserve">
          <source>If you have access to php.ini, you can find it under the &lt;strong&gt;&lt;a href=&quot;http://il1.php.net/manual/en/errorfunc.configuration.php#ini.error-log&quot;&gt;&lt;code&gt;error_log&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; entry.</source>
          <target state="translated">php.iniにアクセスできる場合は、 &lt;strong&gt;&lt;a href=&quot;http://il1.php.net/manual/en/errorfunc.configuration.php#ini.error-log&quot;&gt; &lt;code&gt;error_log&lt;/code&gt; &lt;/a&gt;&lt;/strong&gt;エントリの下にあります。</target>
        </trans-unit>
        <trans-unit id="0d6a46c021568ceb3409781111dfbb3ececcbd04" translate="yes" xml:space="preserve">
          <source>If you see &lt;code&gt;(none)&lt;/code&gt; instead of the file, that means you don't have a php.ini in &lt;strong&gt;Configuration File (php.ini) Path&lt;/strong&gt;. So you can &lt;a href=&quot;https://raw.githubusercontent.com/php/php-src/master/php.ini-development&quot;&gt;download the stock php.ini bundled with PHP from here&lt;/a&gt; and copy that to your configuration file path as php.ini then make sure your php user has sufficient permissions to read from that file. You'll need to restart httpd or php-fpm to load it in. Remember, this is the &lt;em&gt;development&lt;/em&gt; php.ini file that comes bundled with the PHP source. So please don't use it in production!</source>
          <target state="translated">ファイルの代わりに &lt;code&gt;(none)&lt;/code&gt; が表示される場合は、 &lt;strong&gt;構成ファイル（php.ini）パスに&lt;/strong&gt; php.iniがないことを意味します。 したがって&lt;a href=&quot;https://raw.githubusercontent.com/php/php-src/master/php.ini-development&quot;&gt;、PHPにバンドルされている標準のphp.iniをここからダウンロードし、php.ini&lt;/a&gt;として構成ファイルのパスにコピーして、phpユーザーがそのファイルから読み取るための十分な権限を持っていることを確認します。 ロードするには、httpdまたはphp-fpmを再起動する必要があります。これは、PHPソースにバンドルされている&lt;em&gt;開発用の&lt;/em&gt; php.iniファイルです。 ですので、本番環境では使用しないでください！</target>
        </trans-unit>
        <trans-unit id="8edc77eac4752cb77b98cc73eade7bbbf16689fc" translate="yes" xml:space="preserve">
          <source>If your version is 5.2.4 or newer, use:</source>
          <target state="translated">お使いのバージョンが5.2.4以降の場合は、使用してください。</target>
        </trans-unit>
        <trans-unit id="3251ac02cc5dcbe3a075b11d3b16748f2e902a57" translate="yes" xml:space="preserve">
          <source>In &lt;strong&gt;production&lt;/strong&gt;, &lt;code&gt;display_errors&lt;/code&gt; is usually set to &lt;code&gt;Off&lt;/code&gt; (Which is a good thing, because error display in production sites is generally not desirable!).</source>
          <target state="translated">&lt;strong&gt;本番&lt;/strong&gt; &lt;code&gt;display_errors&lt;/code&gt; は、 display_errorsは通常 &lt;code&gt;Off&lt;/code&gt; に設定されています （通常、本番サイトでのエラー表示は望ましくないため、これは良いことです）。</target>
        </trans-unit>
        <trans-unit id="8f3c0c30365dbe02446005e079e1d77d88f6694b" translate="yes" xml:space="preserve">
          <source>In addition, PHP by default logs errors. In shared hosting, it may be in a dedicated folder or on the same folder as the offending script.</source>
          <target state="translated">また、デフォルトではPHPはエラーのログを記録します。共有ホスティングでは、専用のフォルダにあるか、問題のあるスクリプトと同じフォルダにあるかもしれません。</target>
        </trans-unit>
        <trans-unit id="ed60f2b23097a85457cff1b707b7765eeace405b" translate="yes" xml:space="preserve">
          <source>In addition, you can get more detailed information with &lt;a href=&quot;https://xdebug.org&quot;&gt;xdebug&lt;/a&gt;.</source>
          <target state="translated">さらに、 &lt;a href=&quot;https://xdebug.org&quot;&gt;xdebugを使用&lt;/a&gt;すると、より詳細な情報を取得できます。</target>
        </trans-unit>
        <trans-unit id="44580b5c6d85e27b6a0702153e1553c80b4c45df" translate="yes" xml:space="preserve">
          <source>In the desired script, we can alter the php.ini entries in runtime! Meaning, it'll run when the script runs! Sweet!</source>
          <target state="translated">目的のスクリプトでは、実行時にphp.iniエントリを変更することができます! つまり、スクリプトが実行されたときに実行されます! スウィート!</target>
        </trans-unit>
        <trans-unit id="9039263d97e0f2b61a6533426121d36d9f405821" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;http://xdebug.org/&quot;&gt;Xdebug&lt;/a&gt; and enable remote-debugging with your IDE.</source>
          <target state="translated">&lt;a href=&quot;http://xdebug.org/&quot;&gt;Xdebug&lt;/a&gt;をインストールし、IDEでリモートデバッグを有効にします。</target>
        </trans-unit>
        <trans-unit id="2f6a05c444f4c0ae4948744702d5be4b3cf8f63a" translate="yes" xml:space="preserve">
          <source>Is there a way to get PHP to produce a useful error message, like Java does?</source>
          <target state="translated">JavaのようにPHPが有用なエラーメッセージを表示する方法はありますか?</target>
        </trans-unit>
        <trans-unit id="5f764d756324516e31a767cbcbdff7a7affb8c0a" translate="yes" xml:space="preserve">
          <source>It is possible to register an hook to make the last error or warning visible.</source>
          <target state="translated">最後のエラーや警告を見えるようにするフックを登録することができます。</target>
        </trans-unit>
        <trans-unit id="a3d7a17c4f2cd6ac4579c97c32c2a5413e3ad139" translate="yes" xml:space="preserve">
          <source>It is very difficult to figure out what went wrong. I end up commenting out code, entering &quot;echo&quot; statements everywhere, etc. trying to narrow down the problem. But there surely must be a better way, right?</source>
          <target state="translated">何が間違っていたのかを把握するのは非常に難しいです。結局、コードをコメントアウトしたり、「エコー」文をあちこちに入力したりして、問題を絞り込もうとしてしまいます。でも、きっともっと良い方法があるはずですよね?</target>
        </trans-unit>
        <trans-unit id="4af250e53790728e3c45814af41f320b45d3d4e5" translate="yes" xml:space="preserve">
          <source>It's important to recognize that a syntax error or parse error happens during the &lt;strong&gt;compile&lt;/strong&gt; or &lt;strong&gt;parsing&lt;/strong&gt; step, which means that PHP will bail before it's even had a chance to execute any of your code. So if you are modifying PHP's &lt;code&gt;display_errors&lt;/code&gt; configuration during runtime, (this includes anything from using &lt;code&gt;ini_set&lt;/code&gt; in your code to using .htaccess, which is a runtime configuration file) then only the default &lt;strong&gt;loaded configuration settings&lt;/strong&gt; are in play.</source>
          <target state="translated">構文エラーまたは解析エラーが&lt;strong&gt;コンパイル&lt;/strong&gt;または&lt;strong&gt;解析&lt;/strong&gt;ステップ中に発生することを認識することが重要です。つまり、コードを実行する前にPHPがベイルします。 したがって、ランタイム中にPHPの &lt;code&gt;display_errors&lt;/code&gt; 構成を変更する場合（これには、コードでの &lt;code&gt;ini_set&lt;/code&gt; の使用から、ランタイム構成ファイルである.htaccessの使用まですべてが含まれます）、デフォルトで&lt;strong&gt;ロードされた構成設定&lt;/strong&gt;のみが機能します。</target>
        </trans-unit>
        <trans-unit id="bc605b345d731af358b05040d0a4ab1d8eeb33b8" translate="yes" xml:space="preserve">
          <source>Just don't do this in production</source>
          <target state="translated">本番ではやらないでください</target>
        </trans-unit>
        <trans-unit id="bec2b1604d6464337fea25af1419bae2d67ce674" translate="yes" xml:space="preserve">
          <source>Loaded configuration is either your loaded &lt;code&gt;php.ini&lt;/code&gt; file or your &lt;code&gt;apache.conf&lt;/code&gt; or &lt;code&gt;httpd.conf&lt;/code&gt; or virtualhost file. Those files are only read once during the startup stage (when you first start apache httpd or php-fpm, for example) and only overridden by runtime configuration changes. Making sure that &lt;code&gt;display_errors = 1&lt;/code&gt; and &lt;code&gt;error_reporting = -1&lt;/code&gt; in your loaded configuration file ensures that you will never see a &lt;em&gt;WSOD&lt;/em&gt; regardless of syntax or parse error that occur before a runtime change like &lt;code&gt;ini_set('display_errors', 1);&lt;/code&gt; or &lt;code&gt;error_reporting(E_ALL);&lt;/code&gt; can take place.</source>
          <target state="translated">ロードされた構成は、ロードされた &lt;code&gt;php.ini&lt;/code&gt; ファイル、 &lt;code&gt;apache.conf&lt;/code&gt; 、 &lt;code&gt;httpd.conf&lt;/code&gt; 、またはvirtualhostファイルのいずれかです。 これらのファイルは、起動段階（たとえば、Apache httpdまたはphp-fpmを最初に起動するとき）に一度だけ読み取られ、実行時の構成変更によってのみ上書きされます。 ロードされた構成ファイルで &lt;code&gt;display_errors = 1&lt;/code&gt; および &lt;code&gt;error_reporting = -1&lt;/code&gt; であることを確認すると、 &lt;em&gt;ini_set&lt;/em&gt; &lt;code&gt;ini_set('display_errors', 1);&lt;/code&gt; ようなランタイム変更の前に発生する構文または解析エラーに関係なく、 &lt;em&gt;WSODが表示され&lt;/em&gt;なくなります。 または &lt;code&gt;error_reporting(E_ALL);&lt;/code&gt; 起こることができます。</target>
        </trans-unit>
        <trans-unit id="e3e5212e5a92daec8dccfeb8745d73641b97651c" translate="yes" xml:space="preserve">
          <source>Many people (and stock installations of PHP) will use a production-ini file that has &lt;code&gt;display_errors&lt;/code&gt; turned off by default, which typically results in this same frustration you've experienced here. Because PHP already has it turned off when it starts up, then encounters a syntax or parse error, and bails with nothing to output. You expect that your &lt;code&gt;ini_set('display_errors',1);&lt;/code&gt; at the top of your PHP script should have avoided that, but it won't matter if PHP can't parse your code because it will never have reached the runtime.</source>
          <target state="translated">多くの人々（およびPHPのストックインストール）は、デフォルトで &lt;code&gt;display_errors&lt;/code&gt; がオフになっているproduction-iniファイルを使用します。これにより、通常、ここで経験したのと同じ不満が生じます。 PHPは起動時にすでにオフになっているため、構文エラーまたは解析エラーが発生し、何も出力されずにベイルされます。 あなたはあなたの &lt;code&gt;ini_set('display_errors',1);&lt;/code&gt; PHPスクリプトの先頭ではこれを回避する必要がありますが、ランタイムに到達することはないため、PHPがコードを解析できなくても問題ありません。</target>
        </trans-unit>
        <trans-unit id="6da94903833ec10e3de076141d406d0170387629" translate="yes" xml:space="preserve">
          <source>Next things to consider:</source>
          <target state="translated">次に考えるべきこと。</target>
        </trans-unit>
        <trans-unit id="4b297cee879938b6ead7c2ca7debd24e5cba51e0" translate="yes" xml:space="preserve">
          <source>On the top of the page choose a parameter</source>
          <target state="translated">ページの上部でパラメータを選択します。</target>
        </trans-unit>
        <trans-unit id="4e3f52417637c190ecdcdfefc08a4763e172aab6" translate="yes" xml:space="preserve">
          <source>PHP Configuration</source>
          <target state="translated">PHPの設定</target>
        </trans-unit>
        <trans-unit id="1bcf88d09d1108ee1894bbc86ee3b570aebc392b" translate="yes" xml:space="preserve">
          <source>PHP provides some of better ways to know the developers why and where their piece of code is getting the errors, so by knowing those errors developers can make their code better in many ways.</source>
          <target state="translated">PHPは、開発者がコードの一部がなぜ、どこでエラーを取得しているのかを知るためのより良い方法をいくつか提供しています。</target>
        </trans-unit>
        <trans-unit id="92c49df3ca88ba63b047f4421a339f367a52cdb8" translate="yes" xml:space="preserve">
          <source>Predefined Constants&lt;sup&gt;&lt;em&gt;Docs&lt;/em&gt;&lt;/sup&gt;</source>
          <target state="translated">定義済み定数&lt;sup&gt;&lt;em&gt;ドキュメント&lt;/em&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="fe8506a6fa8b28ed29002cda43c1f8fae4b4dda6" translate="yes" xml:space="preserve">
          <source>Quite often I will try and run a PHP script and just get a blank screen back. No error message; just an empty screen. The cause might have been a simple syntax error (wrong bracket, missing semicolon), or a failed function call, or something else entirely.</source>
          <target state="translated">PHPスクリプトを実行しようとすると、何も表示されない画面が返ってくることがよくあります。エラーメッセージはなく、ただ空の画面が返ってくるだけです。原因は単純な構文エラー(括弧が間違っていたり、セミコロンがなかったり)や関数の呼び出しに失敗したこと、あるいは全く別の何かかもしれません。</target>
        </trans-unit>
        <trans-unit id="1582600625fd381ca554979f70e7434d87fa5103" translate="yes" xml:space="preserve">
          <source>Runtime configuration</source>
          <target state="translated">ランタイム設定</target>
        </trans-unit>
        <trans-unit id="9f20bbe5444f4acef66b0bb3d6122aff69b0d6f1" translate="yes" xml:space="preserve">
          <source>Search for display_errors in that file. There should be only 3 instances, of which 2 are commented.</source>
          <target state="translated">そのファイルの中から display_errors を検索します。インスタンスは3つだけで、そのうち2つはコメントされているはずです。</target>
        </trans-unit>
        <trans-unit id="33c8797984ac0ddda87988fe6d96a96fae7f458d" translate="yes" xml:space="preserve">
          <source>See as well:</source>
          <target state="translated">こちらもご覧ください。</target>
        </trans-unit>
        <trans-unit id="65d326c501ed59ff7ee343dd45966ea4e922c60d" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;&quot;tail -f&lt;/code&gt;&quot; your log files and when you get a blank screen use IEs &quot;view&quot; -&amp;gt; &quot;source&quot; menu options to view the raw output.</source>
          <target state="translated">したがって、ログファイルを &lt;code&gt;&quot;tail -f&lt;/code&gt; &quot;し、空白の画面が表示されたら、IEの[view]-&amp;gt; [source]メニューオプションを使用して、生の出力を表示します。</target>
        </trans-unit>
        <trans-unit id="cb0009d9755165dbf459a4513dcdaa976ab28dcf" translate="yes" xml:space="preserve">
          <source>That means that the script hadn't even run! That usually happens when you have a syntax error!</source>
          <target state="translated">これはスクリプトが実行されていないことを意味します。これは通常、構文エラーが発生したときに起こります!</target>
        </trans-unit>
        <trans-unit id="4db907dd05e30396d082522fc9e8102ad9e6ed5a" translate="yes" xml:space="preserve">
          <source>That's a shame. Usually shared hosts do not allow the alteration of their php.ini file, and so, that option is sadly unavailable. But fear not! We have &lt;a href=&quot;https://www.php.net/manual/en/configuration.file.per-user.php&quot;&gt;other options&lt;/a&gt;!</source>
          <target state="translated">残念です。 通常、共有ホストはphp.iniファイルの変更を許可しないため、残念ながらそのオプションは利用できません。 しかし恐れるな！ &lt;a href=&quot;https://www.php.net/manual/en/configuration.file.per-user.php&quot;&gt;他のオプションがあります&lt;/a&gt; ！</target>
        </trans-unit>
        <trans-unit id="a9d775ffdad4778a4d18d688f6264b36ab4f90a1" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;ERRORS&amp;rdquo; are the most useful things for the developers to know their mistakes and resolved them  to make the system working perfect.</source>
          <target state="translated">「エラー」は、開発者が間違いを知り、システムを完璧に機能させるために解決するために最も役立つものです。</target>
        </trans-unit>
        <trans-unit id="bbc65359f4d1db5a67cfe6f7a9734b2dac40888f" translate="yes" xml:space="preserve">
          <source>The following code should display all errors:</source>
          <target state="translated">以下のコードは、すべてのエラーを表示する必要があります。</target>
        </trans-unit>
        <trans-unit id="e17b6273e59875f5c501010360839469d54fb3a7" translate="yes" xml:space="preserve">
          <source>The following enables all errors:</source>
          <target state="translated">以下のように、すべてのエラーを有効にします。</target>
        </trans-unit>
        <trans-unit id="14795fa657fff3ab676b9f599cadac1852a8b32f" translate="yes" xml:space="preserve">
          <source>The only way to generate a blank page with this code is when you have a error in the shutdown handler. I copied and pasted this from my own cms without testing it, but I am sure it works.</source>
          <target state="translated">このコードで空白のページを生成する唯一の方法は、シャットダウンハンドラでエラーが発生した場合です。これをテストせずに自分のcmsからコピー&amp;ペーストしましたが、動作することは間違いありません。</target>
        </trans-unit>
        <trans-unit id="8d30291c15a21902cc8c0ad2d8aa2c32f3c8129a" translate="yes" xml:space="preserve">
          <source>The settings outlined here display all errors, notices and warnings, including strict ones, regardless which PHP version.</source>
          <target state="translated">ここで概説した設定は、PHP のバージョンに関係なく、厳密なものも含めてすべてのエラー、通知、警告を表示します。</target>
        </trans-unit>
        <trans-unit id="54f4810c1fda3a351cadfd870b580c789d3f6239" translate="yes" xml:space="preserve">
          <source>The two key lines you need to get useful errors out of PHP are:</source>
          <target state="translated">PHPから有用なエラーを引き出すために必要な2つのキーとなる行を紹介します。</target>
        </trans-unit>
        <trans-unit id="3abd2eec0dbc2a26c312cd8314142073ade0ea6f" translate="yes" xml:space="preserve">
          <source>Then point your browser there and look at &lt;strong&gt;Loaded Configuration File&lt;/strong&gt; and &lt;strong&gt;Additional .ini files parsed&lt;/strong&gt;, which are usually at the top of your &lt;code&gt;phpinfo()&lt;/code&gt; and will include the absolute path to all your loaded configuration files.</source>
          <target state="translated">次に、ブラウザーをそこに &lt;code&gt;phpinfo()&lt;/code&gt; 、読み込まれた構成ファイルと&lt;strong&gt;解析された追加の.iniファイルを確認します&lt;/strong&gt; 。これらは通常、 phpinfo（）の上部にあり、読み込まれたすべての構成ファイルへの絶対パスが含まれます。</target>
        </trans-unit>
        <trans-unit id="f6c1ac09610b398a1345f2ed3185e46efd01e2f0" translate="yes" xml:space="preserve">
          <source>There is a really useful extension called &quot;&lt;a href=&quot;http://www.xdebug.org/&quot;&gt;xdebug&lt;/a&gt;&quot; that will make your reports much nicer as well.</source>
          <target state="translated">「 &lt;a href=&quot;http://www.xdebug.org/&quot;&gt;xdebug&lt;/a&gt; 」と呼ばれる本当に便利な拡張機能があり、レポートをより優れたものにします。</target>
        </trans-unit>
        <trans-unit id="d04f6ff36788bd03c4c2255aa9ca6609e0bafc73" translate="yes" xml:space="preserve">
          <source>These two lines will do the same effect as altering the php.ini entries as above! Awesome!</source>
          <target state="translated">この2つの行は、上記のphp.iniエントリを変更するのと同じ効果があります! すごいですね!</target>
        </trans-unit>
        <trans-unit id="3b564a1f16832eda861b6a3fe05f49b70114dc47" translate="yes" xml:space="preserve">
          <source>This causes even minimal warnings to show up. And, just in case:</source>
          <target state="translated">これにより、最小限の警告でも表示されるようになります。また、念のために</target>
        </trans-unit>
        <trans-unit id="c2ce4e30af1f04330a48d5556ae65b3a8ccdaace" translate="yes" xml:space="preserve">
          <source>This is a problem of loaded vs. runtime configuration</source>
          <target state="translated">これはロードとランタイムの設定の問題です。</target>
        </trans-unit>
        <trans-unit id="0ae9ce68cd6014832e7f28335493d96b5fac6875" translate="yes" xml:space="preserve">
          <source>This option wasn't in fastcgi_params file, so PHP didn't work and there wasn't any errors in logs.</source>
          <target state="translated">このオプションはfastcgi_paramsファイルにはなかったので、PHPは動作せず、ログにもエラーは出ませんでした。</target>
        </trans-unit>
        <trans-unit id="9155b9d6fa9c745cae05814627ec47cd05ba91ab" translate="yes" xml:space="preserve">
          <source>This overrides the default settings in php.ini, which just make PHP report the errors to the log.</source>
          <target state="translated">これはphp.iniのデフォルト設定を上書きするもので、PHPがエラーをログに報告するだけのものです。</target>
        </trans-unit>
        <trans-unit id="8f1e61eb75d9e96a25d5cd5e8adfbb5693672b8d" translate="yes" xml:space="preserve">
          <source>This really is the best way to avoid a WSOD in development. Anyone suggesting that you put &lt;code&gt;ini_set('display_errors', 1);&lt;/code&gt; or &lt;code&gt;error_reporting(E_ALL);&lt;/code&gt; at the top of your PHP script or using .htaccess like you did here, is not going to help you avoid a WSOD when a syntax or parse error occurs (like in your case here) if your loaded configuration file has &lt;code&gt;display_errors&lt;/code&gt; turned off.</source>
          <target state="translated">これは、開発中にWSODを回避するための最良の方法です。 あなたが &lt;code&gt;ini_set('display_errors', 1);&lt;/code&gt; または &lt;code&gt;error_reporting(E_ALL);&lt;/code&gt; ここで行ったように、PHPスクリプトの先頭で、または.htaccessを使用しても、ロードされた構成ファイルで &lt;code&gt;display_errors&lt;/code&gt; がオフになっている場合、構文または解析エラー（この場合のように）が発生したときにWSODを回避できません。</target>
        </trans-unit>
        <trans-unit id="39dd3935120dd9dd1154ef211a92e37551033bd8" translate="yes" xml:space="preserve">
          <source>This will only display errors when you are running locally. It also gives you the test_server variable to use in other places where appropriate.</source>
          <target state="translated">これはローカルで実行しているときだけエラーを表示します。また、適切な場所で他の場所で使用するための test_server 変数を提供します。</target>
        </trans-unit>
        <trans-unit id="65ab76da6397c8ec0fd7bb569a025aa2a2cb804d" translate="yes" xml:space="preserve">
          <source>To avoid a WSOD you want to make sure that your &lt;strong&gt;loaded configuration file&lt;/strong&gt; has &lt;code&gt;display_errors&lt;/code&gt; on and &lt;code&gt;error_reporting&lt;/code&gt; set to &lt;code&gt;-1&lt;/code&gt; (&lt;em&gt;this is the equivalent E_ALL because it ensures all bits are turned on regardless of which version of PHP you're running&lt;/em&gt;). Don't hardcode the constant value of E_ALL, because that value is subject to change between different versions of PHP.</source>
          <target state="translated">WSODを回避するには、 &lt;strong&gt;ロードされた構成ファイルの&lt;/strong&gt; &lt;code&gt;display_errors&lt;/code&gt; がオンで、 &lt;code&gt;error_reporting&lt;/code&gt; が &lt;code&gt;-1&lt;/code&gt; に設定されていることを確認する必要があります（ &lt;em&gt;これは、実行しているPHPのバージョンに関係なくすべてのビットが確実にオンになるため、同等のE_ALLです&lt;/em&gt; ）。 E_ALLの定数値をハードコーディングしないでください。その値は、PHPの異なるバージョン間で変更される可能性があるためです。</target>
        </trans-unit>
        <trans-unit id="0d15bdd270e3dca92d0b8d8a43d6c0df48d8e75f" translate="yes" xml:space="preserve">
          <source>To locate your loaded configuration file(s) just create a new PHP file with only the following code...</source>
          <target state="translated">読み込んだ設定ファイルを見つけるには、次のコードだけで新しいPHPファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="4bf89fba694f12f70921c2c3e0ef2be5f13fdc1e" translate="yes" xml:space="preserve">
          <source>To persist this and make it confortale, you can edit your php.ini file. It is usually stored in &lt;code&gt;/etc/php.ini&lt;/code&gt; or &lt;code&gt;/etc/php/php.ini&lt;/code&gt;, but more local &lt;code&gt;php.ini&lt;/code&gt;'s may overwrite it, depending on your hosting provider's setup guidelines. Check a &lt;code&gt;phpinfo()&lt;/code&gt; file for &lt;code&gt;Loaded Configuration File&lt;/code&gt; at the top, to be sure which one gets loaded last.</source>
          <target state="translated">これを永続化して快適にするために、php.iniファイルを編集できます。 通常は &lt;code&gt;/etc/php.ini&lt;/code&gt; または &lt;code&gt;/etc/php/php.ini&lt;/code&gt; に保存されますが、ホスティングプロバイダーの設定ガイドラインによっては、よりローカルな &lt;code&gt;php.ini&lt;/code&gt; で上書きされる場合があります。 一番上の &lt;code&gt;phpinfo()&lt;/code&gt; ファイルで読み込まれた &lt;code&gt;Loaded Configuration File&lt;/code&gt; を確認し、最後に読み込まれたファイルを確認します。</target>
        </trans-unit>
        <trans-unit id="1b4ddd69d86a929b2c1b2d537d39ef3c7a8cdf45" translate="yes" xml:space="preserve">
          <source>To turn on full error reporting, add this to your script:</source>
          <target state="translated">完全なエラー報告を有効にするには、これをスクリプトに追加します。</target>
        </trans-unit>
        <trans-unit id="68d52c48a1d9d1e3352fa73dd1d8b6ed0e82b67f" translate="yes" xml:space="preserve">
          <source>Whoa whoa! No check! I can't change my php.ini!</source>
          <target state="translated">おっとおっと!チェックがない! php.iniが変更できない!</target>
        </trans-unit>
        <trans-unit id="9c17a3c015adb8e4d473ad5aac4a7d5e1d5f1828" translate="yes" xml:space="preserve">
          <source>Will force the display of errors. This should be turned off in production servers, but not when you're developing.</source>
          <target state="translated">エラーを強制的に表示します。これは本番サーバではオフにすべきですが、開発中の場合はオフにしないでください。</target>
        </trans-unit>
        <trans-unit id="30b3001c9eb29bd85100baf4b8b132447f6950d5" translate="yes" xml:space="preserve">
          <source>With syntax errors, the script doesn't even get to runtime. It fails at &lt;strong&gt;compile time&lt;/strong&gt;, meaning that it'll use the values in php.ini, which if you hadn't changed, may not allow the display of errors.</source>
          <target state="translated">構文エラーがあると、スクリプトはランタイムに到達しません。 &lt;strong&gt;コンパイル時&lt;/strong&gt;に失敗し&lt;strong&gt;ます&lt;/strong&gt; 。つまり、php.iniの値を使用します。変更していない場合、エラーが表示されない可能性があります。</target>
        </trans-unit>
        <trans-unit id="6197da377c3a4ce61967bcd76a4a178a9add3c89" translate="yes" xml:space="preserve">
          <source>You can enable full error reporting (including notices and strict messages). Some people find this too verbose, but it's worth a try. Set &lt;code&gt;error_reporting&lt;/code&gt; to &lt;code&gt;E_ALL | E_STRICT&lt;/code&gt; in your php.ini.</source>
          <target state="translated">完全なエラー報告（通知と厳格なメッセージを含む）を有効にすることができます。 これは冗長すぎると感じる人もいますが、試してみる価値はあります。 &lt;code&gt;error_reporting&lt;/code&gt; を &lt;code&gt;E_ALL | E_STRICT&lt;/code&gt; 設定します 。 php.iniのE_STRICT 。</target>
        </trans-unit>
        <trans-unit id="503b4fff5f74f45a96e0bb126683ec9142d534bb" translate="yes" xml:space="preserve">
          <source>You can include the following lines in the file you want to debug:</source>
          <target state="translated">デバッグしたいファイルには、以下の行を含めることができます。</target>
        </trans-unit>
        <trans-unit id="c642b0954ec97622bfe5dfcb1b2819dbddb488a1" translate="yes" xml:space="preserve">
          <source>You can register your own &lt;a href=&quot;http://de.php.net/manual/en/function.set-error-handler.php&quot;&gt;error handler&lt;/a&gt; in PHP. Dumping all errors to a file might help you in these obscure cases, for example. Note that your function will get called, no matter what your current &lt;a href=&quot;http://de.php.net/manual/en/function.error-reporting.php&quot;&gt;error_reporting&lt;/a&gt; is set to. Very basic example:</source>
          <target state="translated">独自の&lt;a href=&quot;http://de.php.net/manual/en/function.set-error-handler.php&quot;&gt;エラーハンドラー&lt;/a&gt;をPHPに登録できます。 たとえば、これらのあいまいなケースでは、すべてのエラーをファイルにダンプすると役立つ場合があります。 現在の&lt;a href=&quot;http://de.php.net/manual/en/function.error-reporting.php&quot;&gt;error_reporting&lt;/a&gt;が何に設定されていても、関数が呼び出されることに注意してください。 非常に基本的な例：</target>
        </trans-unit>
        <trans-unit id="49b55142a2f8ebc65c698785c207813be633887d" translate="yes" xml:space="preserve">
          <source>You may want to consider using the value of E_ALL (as mentioned by Gumbo) for your version of PHP for &lt;code&gt;error_reporting&lt;/code&gt; to get all of the errors. &lt;a href=&quot;http://docs.php.net/manual/en/errorfunc.constants.php&quot;&gt;more info&lt;/a&gt;</source>
          <target state="translated">すべてのエラーを取得するために、 &lt;code&gt;error_reporting&lt;/code&gt; にPHPのバージョンにE_ALL（Gumboで言及されている）の値を使用することを検討してください。 &lt;a href=&quot;http://docs.php.net/manual/en/errorfunc.constants.php&quot;&gt;より詳しい情報&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1ab7e57a30ef1253dade8e387f30e211dafa916" translate="yes" xml:space="preserve">
          <source>You might also want to try PHPStorm as your code editor.  It will find many PHP and other syntax errors right as you are typing in the editor.</source>
          <target state="translated">コードエディタとしてPHPStormを試してみるのもいいかもしれません。これは、エディタに入力している最中にPHPやその他の構文エラーをたくさん見つけてくれます。</target>
        </trans-unit>
        <trans-unit id="573a4b5c25fef2b0e1cc76ccc565c5ec27cbb15e" translate="yes" xml:space="preserve">
          <source>adding this code to the beginning of you index.php will help you debug the problems.</source>
          <target state="translated">このコードをindex.phpの先頭に追加すると、問題のデバッグに役立ちます。</target>
        </trans-unit>
        <trans-unit id="b70976026c34061e894b3a32c76ba45e0e1104c1" translate="yes" xml:space="preserve">
          <source>if you are a ubuntu user then goto your terminal and run this command</source>
          <target state="translated">もしあなたがubuntuユーザーならば、ターミナルで次のコマンドを実行してください。</target>
        </trans-unit>
        <trans-unit id="fb8dcf51bed4c54d2b82c41ca229705144fc0a68" translate="yes" xml:space="preserve">
          <source>open your php.ini, 
make sure it's set to:</source>
          <target state="translated">php.iniを開き、設定されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="a4a91b4507467427d313becded698375a2ccd5cc" translate="yes" xml:space="preserve">
          <source>restart your server.</source>
          <target state="translated">サーバーを再起動してください。</target>
        </trans-unit>
        <trans-unit id="b4ffd2786eb0d1a61a53441e3104a3ae472b6101" translate="yes" xml:space="preserve">
          <source>to be put at the beginning of the script that is under trouble-shooting. This is not perfect, the perfect variant is that you also enable that in the &lt;code&gt;php.ini&lt;/code&gt; and that you log the errors in PHP to catch syntax and startup errors.</source>
          <target state="translated">トラブルシューティング中のスクリプトの最初に配置されます。 これは完璧ではありません。完璧なバリアントは、 &lt;code&gt;php.ini&lt;/code&gt; でも有効にし、PHPのエラーをログに記録して、構文エラーと起動エラーをキャッチすることです。</target>
        </trans-unit>
        <trans-unit id="890fc8789c9be30910f84bd905ee49374e7cd808" translate="yes" xml:space="preserve">
          <source>where it will display recent 50 errors. 
There is a error file &lt;code&gt;error.log&lt;/code&gt; for apache2 which logs all the errors.</source>
          <target state="translated">最近の50個のエラーが表示されます。 すべてのエラーを記録するapache2のエラーファイル &lt;code&gt;error.log&lt;/code&gt; があります。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
