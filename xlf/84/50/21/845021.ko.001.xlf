<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/845021">
    <body>
      <group id="845021">
        <trans-unit id="000667d5ad5fb974f5c4f9d52b4e9390786ec3e5" translate="yes" xml:space="preserve">
          <source>(3) Another option is to use an editor that checks for errors when you type, such as &lt;a href=&quot;http://www.nusphere.com/products/phped.htm&quot;&gt;PhpEd&lt;/a&gt;. PhpEd also comes with a debugger which can provide more detailed information. (The PhpEd debugger is very similar to xdebug and integrates directly into the editor so you use 1 program to do everything.)</source>
          <target state="translated">(3) 다른 옵션은 입력 할 때 &lt;a href=&quot;http://www.nusphere.com/products/phped.htm&quot;&gt;PhpEd&lt;/a&gt; 와 같은 오류를 확인하는 편집기를 사용하는 것 입니다. PhpEd에는 더 자세한 정보를 제공 할 수있는 디버거도 제공됩니다. PhpEd 디버거는 xdebug와 매우 유사하며 편집기에 직접 통합되므로 하나의 프로그램을 사용하여 모든 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8979a770026319a788ff890b274dd2f556627d79" translate="yes" xml:space="preserve">
          <source>2 entries in &lt;a href=&quot;https://stackoverflow.com/questions/8684609/dude-wheres-my-php-ini&quot;&gt;php.ini&lt;/a&gt; dictate the output of errors:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/8684609/dude-wheres-my-php-ini&quot;&gt;php.ini의&lt;/a&gt; 2 개의 항목은 오류 출력을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d47ccc087d603d4066d67db4bed0563afcbee79f" translate="yes" xml:space="preserve">
          <source>3 other items: (1) You can check the error log file as it will have all of the errors (unless logging has been disabled). (2) Adding the following 2 lines will help you debug errors that are not syntax errors:</source>
          <target state="translated">3 가지 다른 항목 : (1) 오류가 기록되지 않은 경우를 제외하고 모든 오류가 발생하므로 오류 로그 파일을 확인할 수 있습니다. (2) 다음 두 줄을 추가하면 구문 오류가 아닌 오류를 디버깅하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="3b650a40684aa637c3e97068a4565f81b0de8fc6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.firephp.org/&quot;&gt;FirePHP&lt;/a&gt; can be useful as well.</source>
          <target state="translated">&lt;a href=&quot;http://www.firephp.org/&quot;&gt;FirePHP&lt;/a&gt; 도 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="824a1613059d1de633e867f4395d599471e01981" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E_STRICT&lt;/code&gt; will notify you about deprecated functions and give you recommendations about the best methods to do certain tasks.</source>
          <target state="translated">&lt;code&gt;E_STRICT&lt;/code&gt; 는 더 이상 사용되지 않는 기능에 대해 알리고 특정 작업을 수행하는 가장 좋은 방법에 대한 권장 사항을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4962ce975371ee8a6fdc6d56e203a26bc58f9297" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;display_errors&lt;/code&gt;&lt;sup&gt;&lt;em&gt;Docs&lt;/em&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;display_errors&lt;/code&gt;&lt;sup&gt;&lt;em&gt;Docs&lt;/em&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f08cc6579fe57a84d382e8a3e22e7fdca58722ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error_reporting()&lt;/code&gt;&lt;sup&gt;&lt;em&gt;Docs&lt;/em&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;error_reporting()&lt;/code&gt;&lt;sup&gt;&lt;em&gt;Docs&lt;/em&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="10db3461ae2208605532747995b7874109bdd96b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error_reporting&lt;/code&gt; (as of PHP 5.3) is set by default to &lt;code&gt;E_ALL &amp;amp; ~E_NOTICE &amp;amp; ~E_STRICT &amp;amp; ~E_DEPRECATED&lt;/code&gt; (meaning, everything is shown except for notices, strict standards and deprecation notices). When in doubt, set it to &lt;code&gt;E_ALL&lt;/code&gt; to display &lt;strong&gt;all&lt;/strong&gt; the errors. &lt;strong&gt;Check&lt;/strong&gt;!</source>
          <target state="translated">&lt;code&gt;error_reporting&lt;/code&gt; (PHP 5.3 현재)은 기본적으로 &lt;code&gt;E_ALL &amp;amp; ~E_NOTICE &amp;amp; ~E_STRICT &amp;amp; ~E_DEPRECATED&lt;/code&gt; (즉, 통지, 엄격한 표준 및 사용 중단 통지를 제외한 모든 것이 표시됨). &lt;code&gt;E_ALL&lt;/code&gt; 하지 않은 경우 &lt;strong&gt;모든&lt;/strong&gt; 오류를 표시하려면 E_ALL 로 설정하십시오. &lt;strong&gt;확인하세요&lt;/strong&gt; !</target>
        </trans-unit>
        <trans-unit id="6bad12bb7673aea046495e8cbaf873beba0e5048" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://il1.php.net/manual/en/errorfunc.configuration.php#ini.display-errors&quot;&gt;&lt;code&gt;display_errors&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://il1.php.net/manual/en/errorfunc.configuration.php#ini.display-errors&quot;&gt;&lt;code&gt;display_errors&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39197825927d63cab65298806aa643e34a8895a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://il1.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;&lt;code&gt;error_reporting&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://il1.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;&lt;code&gt;error_reporting&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="88f86d5c6e5f13c4c8d2867a7ab8748525a2a9b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edited to show APPLICATON_LIVE&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;APPLICATON_LIVE를 표시하도록 수정되었습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab64e3ffb03675f19f4b8e8121dbc948857e5c6e" translate="yes" xml:space="preserve">
          <source>Also make sure that &lt;code&gt;display_errors&lt;/code&gt; is enabled in php.ini. If your PHP version is older than 5.2.4, set it to &lt;code&gt;On&lt;/code&gt;:</source>
          <target state="translated">또한 php.ini에서 &lt;code&gt;display_errors&lt;/code&gt; 가 활성화되어 있는지 확인하십시오. PHP 버전이 5.2.4보다 오래된 경우 &lt;code&gt;On&lt;/code&gt; 으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="a037e4fe827fe8a23ffe37216d63adccb2799fff" translate="yes" xml:space="preserve">
          <source>Also see the following links</source>
          <target state="translated">다음 링크도 참조하십시오</target>
        </trans-unit>
        <trans-unit id="927fcf32471ccd6b493be2064f428c7d12964787" translate="yes" xml:space="preserve">
          <source>Also useful errors are often directed to the browser, but as they are not valid html they are not displayed.</source>
          <target state="translated">또한 유용한 오류는 종종 브라우저로 전송되지만 유효한 HTML이 아니기 때문에 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d1296529b5ed6712f6c128416ef61c1a33f0c2da" translate="yes" xml:space="preserve">
          <source>And turn on display errors in php.ini</source>
          <target state="translated">php.ini에서 디스플레이 오류를 켭니다.</target>
        </trans-unit>
        <trans-unit id="194e0c88d2255dcb9015b6129b945c9295c1f656" translate="yes" xml:space="preserve">
          <source>Another way to use debugger tools like &lt;a href=&quot;http://xdebug.org&quot;&gt;xdebug&lt;/a&gt; in your IDE.</source>
          <target state="translated">IDE에서 &lt;a href=&quot;http://xdebug.org&quot;&gt;xdebug&lt;/a&gt; 와 같은 디버거 도구를 사용하는 또 다른 방법입니다.</target>
        </trans-unit>
        <trans-unit id="baf5f87cd9350fc4740a54555ea415a3bfdd2894" translate="yes" xml:space="preserve">
          <source>Any errors that happen before the script runs won't be caught, but for 99% of errors that I make, that's not an issue.</source>
          <target state="translated">스크립트가 실행되기 전에 발생하는 오류는 포착되지 않지만 99 %의 오류에 대해서는 문제가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0899623c9f433c6458ebae877977e701304e8431" translate="yes" xml:space="preserve">
          <source>As pointed out by other contributors, these are switched off by default for security reasons. As a useful tip - when you're setting up your site it's handy to do a switch for your different environments so that these errors are ON by default in your local and development environments. This can be achieved with the following code (ideally in your index.php or config file so this is active from the start):</source>
          <target state="translated">다른 기고자들이 지적한 것처럼 보안상의 이유로 기본적으로 꺼져 있습니다. 유용한 팁-사이트를 설정할 때 로컬 및 개발 환경에서 이러한 오류가 기본적으로 설정되도록 다른 환경에 맞게 전환하는 것이 편리합니다. 이것은 다음 코드 (이상적으로 index.php 또는 구성 파일에 있으므로 시작부터 활성화 됨)를 사용하여 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00e83727914c0bfec8a32e8834f128ce29a5b67d" translate="yes" xml:space="preserve">
          <source>Aside from error_reporting and the display_errors ini setting, you can get SYNTAX errors from your web server's log files. When I'm developing PHP I load my development system's web server logs into my editor. Whenever I test a page and get a blank screen, the log file goes stale and my editor asks if I want to reload it. When I do, I jump to the bottom and there is the syntax error. For example:</source>
          <target state="translated">error_reporting 및 display_errors ini 설정 외에도 웹 서버의 로그 파일에서 SYNTAX 오류를 얻을 수 있습니다. PHP를 개발할 때 개발 시스템의 웹 서버 로그를 편집기에로드합니다. 페이지를 테스트하고 빈 화면이 표시 될 때마다 로그 파일이 오래되고 편집자가 다시로드할지 묻습니다. 내가 할 때, 나는 맨 아래로 건너 뛰고 구문 오류가 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9016f8fa0673ecae7e175c7acdf140dbcb214407" translate="yes" xml:space="preserve">
          <source>Best ways to write following two lines on the top of script to get all errors messages:</source>
          <target state="translated">모든 오류 메시지를 얻기 위해 스크립트 상단에 다음 두 줄을 쓰는 가장 좋은 방법 :</target>
        </trans-unit>
        <trans-unit id="06fd786ab06b06a56d03d90ef7cec41de864d307" translate="yes" xml:space="preserve">
          <source>Cartman's &lt;a href=&quot;http://www.ibm.com/developerworks/library/os-debug/&quot;&gt;link&lt;/a&gt; is also very good: &lt;a href=&quot;http://www.ibm.com/developerworks/library/os-debug/&quot;&gt;http://www.ibm.com/developerworks/library/os-debug/&lt;/a&gt;</source>
          <target state="translated">Cartman의 &lt;a href=&quot;http://www.ibm.com/developerworks/library/os-debug/&quot;&gt;링크&lt;/a&gt; 도 매우 좋습니다 : &lt;a href=&quot;http://www.ibm.com/developerworks/library/os-debug/&quot;&gt;http://www.ibm.com/developerworks/library/os-debug/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="088fe6e05a009eab70d33e01d350757c52b7080d" translate="yes" xml:space="preserve">
          <source>Change the uncommented line to:</source>
          <target state="translated">주석 처리되지 않은 행을 다음과 같이 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="49ba95e817f1722e6018eeb432982c7a68f77523" translate="yes" xml:space="preserve">
          <source>Dunno if it will help, but here is a piece of my standard config file for php projects.  I tend not to depend too much on the apache configs even on my own server.</source>
          <target state="translated">도움이된다면 Dunno, 그러나 여기 PHP 프로젝트를위한 표준 구성 파일이 있습니다. 내 서버에서도 아파치 구성에 너무 의존하지 않는 경향이 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdbc811f2332e96f5a073dd9c355b6967109df6a" translate="yes" xml:space="preserve">
          <source>Error Reporting (PHP The Right Way.)</source>
          <target state="translated">오류보고 (PHP 올바른 방법)</target>
        </trans-unit>
        <trans-unit id="1a1d9477fdb966f717fb5443dbf5a52c31fa3398" translate="yes" xml:space="preserve">
          <source>Error logs</source>
          <target state="translated">오류 로그</target>
        </trans-unit>
        <trans-unit id="ab5a12aa3975f80180d6f619c6047a511f15cbad" translate="yes" xml:space="preserve">
          <source>Errors and warnings usually appear in &lt;code&gt;....\logs\php_error.log&lt;/code&gt; or &lt;code&gt;....\logs\apache_error.log&lt;/code&gt; depending on your php.ini settings.</source>
          <target state="translated">오류 및 경고는 일반적으로 php.ini 설정에 따라 &lt;code&gt;....\logs\php_error.log&lt;/code&gt; 또는 &lt;code&gt;....\logs\apache_error.log&lt;/code&gt; 에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="ced98bb62a3553173fbdbbd5d664ff120c14119a" translate="yes" xml:space="preserve">
          <source>For quick, hands-on troubleshooting I normally suggest here on SO:</source>
          <target state="translated">빠른 실습 문제 해결을 위해 일반적으로 여기에 제안합니다.</target>
        </trans-unit>
        <trans-unit id="45827f05b1909966d6852d6f6cf42747bfbc9aec" translate="yes" xml:space="preserve">
          <source>For syntax errors, you need to enable error display in the php.ini. By default these are turned off because you don't want a &quot;customer&quot; seeing the error messages. &lt;a href=&quot;http://php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;Check this page&lt;/a&gt; in the PHP documentation for information on the 2 directives: &lt;code&gt;error_reporting&lt;/code&gt; and &lt;code&gt;display_errors&lt;/code&gt;. &lt;code&gt;display_errors&lt;/code&gt; is probably the one you want to change. If you can't modify the php.ini, you can also add the following lines to an .htaccess file:</source>
          <target state="translated">구문 오류의 경우 php.ini에서 오류 표시를 활성화해야합니다. 오류 메시지가 표시되는 &quot;고객&quot;을 원하지 않기 때문에 기본적으로이 기능은 해제되어 있습니다. &lt;code&gt;error_reporting&lt;/code&gt; 및 &lt;code&gt;display_errors&lt;/code&gt; 두 지시문에 대한 정보는 PHP 문서 &lt;a href=&quot;http://php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;에서이 페이지&lt;/a&gt; 를 확인하십시오 . &lt;code&gt;display_errors&lt;/code&gt; 는 아마도 변경하려는 것입니다. php.ini를 수정할 수 없다면, .htaccess 파일에 다음 줄을 추가 할 수도 있습니다 :</target>
        </trans-unit>
        <trans-unit id="a339b156f58763a4d284c97b33428bbfe71a35cc" translate="yes" xml:space="preserve">
          <source>For those who use nginx and have a white screen even for file with &lt;code&gt;&amp;lt;?php echo 123;&lt;/code&gt;. In my case I didn't have this required option for PHP in nginx config file:</source>
          <target state="translated">nginx를 사용하고 &lt;code&gt;&amp;lt;?php echo 123;&lt;/code&gt; . 내 경우에는 nginx 구성 파일에 PHP에 필요한 옵션이 없습니다.</target>
        </trans-unit>
        <trans-unit id="ba3e52e7c090e0d5ff4c536883b04fc113dc943b" translate="yes" xml:space="preserve">
          <source>How can I get useful error messages in PHP</source>
          <target state="translated">PHP에서 유용한 오류 메시지를 얻는 방법</target>
        </trans-unit>
        <trans-unit id="df3b2b3f84177e0892eb00eb5bd42b45eb0b5df6" translate="yes" xml:space="preserve">
          <source>How to always avoid WSOD in development</source>
          <target state="translated">개발시 항상 WSOD를 피하는 방법</target>
        </trans-unit>
        <trans-unit id="61b9d95d90ccdff940a75e9065aa1f99b0b2bc00" translate="yes" xml:space="preserve">
          <source>How to find your (php.ini) loaded configuration files</source>
          <target state="translated">(php.ini)로드 구성 파일을 찾는 방법</target>
        </trans-unit>
        <trans-unit id="79bdbcc9276139fe08dc9ac1bd522209c76dc567" translate="yes" xml:space="preserve">
          <source>However, in &lt;strong&gt;development&lt;/strong&gt;, it should be set to &lt;code&gt;On&lt;/code&gt;, so that errors get displayed. &lt;strong&gt;Check&lt;/strong&gt;!</source>
          <target state="translated">그러나 &lt;strong&gt;개발시&lt;/strong&gt; 오류가 표시되도록 설정해야합니다. &lt;strong&gt;확인하세요&lt;/strong&gt; !</target>
        </trans-unit>
        <trans-unit id="5db1f20caf6c8d0ae8c89cedc79dc074c63f75cd" translate="yes" xml:space="preserve">
          <source>I never have the disappearing error problem, so perhaps something here will give you an idea.</source>
          <target state="translated">나는 사라지는 오류 문제가 없으므로 여기에 뭔가가 당신에게 아이디어를 줄 것입니다.</target>
        </trans-unit>
        <trans-unit id="627e026ad8063bb3ef19097d80c7fd8825890a27" translate="yes" xml:space="preserve">
          <source>I recommend &lt;a href=&quot;https://tracy.nette.org/en/&quot;&gt;Nette Tracy&lt;/a&gt; for better visualization of errors and exceptions in PHP:</source>
          <target state="translated">PHP에서 오류 및 예외를 더 잘 시각화하려면 &lt;a href=&quot;https://tracy.nette.org/en/&quot;&gt;Nette Tracy&lt;/a&gt; 를 권장합니다.</target>
        </trans-unit>
        <trans-unit id="c898240643f514060cec2c1b728f1cddcd140516" translate="yes" xml:space="preserve">
          <source>I still get a blank page/500 error!</source>
          <target state="translated">여전히 빈 페이지 / 500 오류가 발생합니다!</target>
        </trans-unit>
        <trans-unit id="c77160fb539564af95d4099b98d186484b156c92" translate="yes" xml:space="preserve">
          <source>I'm always using this syntax at the very top of the php script.</source>
          <target state="translated">나는 항상 PHP 스크립트의 맨 위에이 구문을 사용하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="3da20b137d03b45b0a1e6507b4b2cab8b4944242" translate="yes" xml:space="preserve">
          <source>If you are super cool, you might try:</source>
          <target state="translated">당신이 매우 시원하다면, 시도해 볼 수 있습니다</target>
        </trans-unit>
        <trans-unit id="9560ac8c9e1965f91b59c6c44b82ef284f5a54fd" translate="yes" xml:space="preserve">
          <source>If you don't want notices, but you find other message types helpful, try excluding notices:</source>
          <target state="translated">통지를 원하지 않지만 다른 메시지 유형이 도움이되는 경우 통지를 제외하십시오.</target>
        </trans-unit>
        <trans-unit id="9764b14b82ca6fc8959fdd51d6c858505b99472a" translate="yes" xml:space="preserve">
          <source>If you have access to php.ini, you can find it under the &lt;strong&gt;&lt;a href=&quot;http://il1.php.net/manual/en/errorfunc.configuration.php#ini.error-log&quot;&gt;&lt;code&gt;error_log&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; entry.</source>
          <target state="translated">php.ini에 액세스 할 수 있으면 &lt;strong&gt;&lt;a href=&quot;http://il1.php.net/manual/en/errorfunc.configuration.php#ini.error-log&quot;&gt; &lt;code&gt;error_log&lt;/code&gt; &lt;/a&gt;&lt;/strong&gt; 항목에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d6a46c021568ceb3409781111dfbb3ececcbd04" translate="yes" xml:space="preserve">
          <source>If you see &lt;code&gt;(none)&lt;/code&gt; instead of the file, that means you don't have a php.ini in &lt;strong&gt;Configuration File (php.ini) Path&lt;/strong&gt;. So you can &lt;a href=&quot;https://raw.githubusercontent.com/php/php-src/master/php.ini-development&quot;&gt;download the stock php.ini bundled with PHP from here&lt;/a&gt; and copy that to your configuration file path as php.ini then make sure your php user has sufficient permissions to read from that file. You'll need to restart httpd or php-fpm to load it in. Remember, this is the &lt;em&gt;development&lt;/em&gt; php.ini file that comes bundled with the PHP source. So please don't use it in production!</source>
          <target state="translated">파일 대신 &lt;code&gt;(none)&lt;/code&gt; 이 표시되면 &lt;strong&gt;구성 파일 (php.ini) 경로에&lt;/strong&gt; php.ini가없는 것입니다. &lt;a href=&quot;https://raw.githubusercontent.com/php/php-src/master/php.ini-development&quot;&gt;PHP에서 번들로 제공되는 php.ini&lt;/a&gt; 파일을 여기에서 다운로드하여 php.ini와 같이 구성 파일 경로에 복사 한 다음 PHP 사용자가 해당 파일에서 읽을 수있는 충분한 권한을 가지고 있는지 확인하십시오. httpd 또는 php-fpm을 다시 시작하여로드해야합니다.이 파일은 PHP 소스와 함께 제공되는 &lt;em&gt;개발&lt;/em&gt; php.ini 파일입니다. 생산에 사용하지 마십시오!</target>
        </trans-unit>
        <trans-unit id="8edc77eac4752cb77b98cc73eade7bbbf16689fc" translate="yes" xml:space="preserve">
          <source>If your version is 5.2.4 or newer, use:</source>
          <target state="translated">버전이 5.2.4 이상인 경우 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3251ac02cc5dcbe3a075b11d3b16748f2e902a57" translate="yes" xml:space="preserve">
          <source>In &lt;strong&gt;production&lt;/strong&gt;, &lt;code&gt;display_errors&lt;/code&gt; is usually set to &lt;code&gt;Off&lt;/code&gt; (Which is a good thing, because error display in production sites is generally not desirable!).</source>
          <target state="translated">&lt;strong&gt;production&lt;/strong&gt; 에서 &lt;code&gt;display_errors&lt;/code&gt; 는 일반적으로 &lt;code&gt;Off&lt;/code&gt; 로 설정됩니다 (생산 사이트의 오류 표시는 일반적으로 바람직하지 않기 때문에 좋은 것입니다).</target>
        </trans-unit>
        <trans-unit id="8f3c0c30365dbe02446005e079e1d77d88f6694b" translate="yes" xml:space="preserve">
          <source>In addition, PHP by default logs errors. In shared hosting, it may be in a dedicated folder or on the same folder as the offending script.</source>
          <target state="translated">또한 PHP는 기본적으로 오류를 기록합니다. 공유 호스팅에서는 전용 폴더 또는 문제가되는 스크립트와 같은 폴더에있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed60f2b23097a85457cff1b707b7765eeace405b" translate="yes" xml:space="preserve">
          <source>In addition, you can get more detailed information with &lt;a href=&quot;https://xdebug.org&quot;&gt;xdebug&lt;/a&gt;.</source>
          <target state="translated">또한 &lt;a href=&quot;https://xdebug.org&quot;&gt;xdebug를 사용&lt;/a&gt; 하여 자세한 정보를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="44580b5c6d85e27b6a0702153e1553c80b4c45df" translate="yes" xml:space="preserve">
          <source>In the desired script, we can alter the php.ini entries in runtime! Meaning, it'll run when the script runs! Sweet!</source>
          <target state="translated">원하는 스크립트에서 런타임에 php.ini 항목을 변경할 수 있습니다! 즉, 스크립트가 실행될 때 실행됩니다! 단!</target>
        </trans-unit>
        <trans-unit id="9039263d97e0f2b61a6533426121d36d9f405821" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;http://xdebug.org/&quot;&gt;Xdebug&lt;/a&gt; and enable remote-debugging with your IDE.</source>
          <target state="translated">&lt;a href=&quot;http://xdebug.org/&quot;&gt;Xdebug를&lt;/a&gt; 설치하고 IDE에서 원격 디버깅을 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="2f6a05c444f4c0ae4948744702d5be4b3cf8f63a" translate="yes" xml:space="preserve">
          <source>Is there a way to get PHP to produce a useful error message, like Java does?</source>
          <target state="translated">Java처럼 PHP가 유용한 오류 메시지를 생성하도록하는 방법이 있습니까?</target>
        </trans-unit>
        <trans-unit id="5f764d756324516e31a767cbcbdff7a7affb8c0a" translate="yes" xml:space="preserve">
          <source>It is possible to register an hook to make the last error or warning visible.</source>
          <target state="translated">마지막 오류 또는 경고를 표시하기 위해 후크를 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3d7a17c4f2cd6ac4579c97c32c2a5413e3ad139" translate="yes" xml:space="preserve">
          <source>It is very difficult to figure out what went wrong. I end up commenting out code, entering &quot;echo&quot; statements everywhere, etc. trying to narrow down the problem. But there surely must be a better way, right?</source>
          <target state="translated">무엇이 잘못되었는지 알아내는 것은 매우 어렵습니다. 코드를 주석 처리하고, 어디서나 &quot;echo&quot;문장을 입력하는 등 문제를 좁히려 고합니다. 그러나 더 좋은 방법이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="4af250e53790728e3c45814af41f320b45d3d4e5" translate="yes" xml:space="preserve">
          <source>It's important to recognize that a syntax error or parse error happens during the &lt;strong&gt;compile&lt;/strong&gt; or &lt;strong&gt;parsing&lt;/strong&gt; step, which means that PHP will bail before it's even had a chance to execute any of your code. So if you are modifying PHP's &lt;code&gt;display_errors&lt;/code&gt; configuration during runtime, (this includes anything from using &lt;code&gt;ini_set&lt;/code&gt; in your code to using .htaccess, which is a runtime configuration file) then only the default &lt;strong&gt;loaded configuration settings&lt;/strong&gt; are in play.</source>
          <target state="translated">&lt;strong&gt;컴파일&lt;/strong&gt; 또는 &lt;strong&gt;구문 분석&lt;/strong&gt; 단계에서 구문 오류 또는 구문 분석 오류가 발생한다는 것을 인식하는 것이 중요합니다. 즉, PHP가 코드를 실행할 기회를 갖기 전에 PHP가 종료됩니다. 따라서 런타임 동안 PHP의 &lt;code&gt;display_errors&lt;/code&gt; 구성을 수정하는 경우 (코드에 &lt;code&gt;ini_set&lt;/code&gt; 사용에서 런타임 구성 파일 인 .htaccess 사용에 이르기까지) 기본 &lt;strong&gt;로드 된 구성 설정&lt;/strong&gt; 만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bc605b345d731af358b05040d0a4ab1d8eeb33b8" translate="yes" xml:space="preserve">
          <source>Just don't do this in production</source>
          <target state="translated">프로덕션에서이 작업을 수행하지 마십시오</target>
        </trans-unit>
        <trans-unit id="bec2b1604d6464337fea25af1419bae2d67ce674" translate="yes" xml:space="preserve">
          <source>Loaded configuration is either your loaded &lt;code&gt;php.ini&lt;/code&gt; file or your &lt;code&gt;apache.conf&lt;/code&gt; or &lt;code&gt;httpd.conf&lt;/code&gt; or virtualhost file. Those files are only read once during the startup stage (when you first start apache httpd or php-fpm, for example) and only overridden by runtime configuration changes. Making sure that &lt;code&gt;display_errors = 1&lt;/code&gt; and &lt;code&gt;error_reporting = -1&lt;/code&gt; in your loaded configuration file ensures that you will never see a &lt;em&gt;WSOD&lt;/em&gt; regardless of syntax or parse error that occur before a runtime change like &lt;code&gt;ini_set('display_errors', 1);&lt;/code&gt; or &lt;code&gt;error_reporting(E_ALL);&lt;/code&gt; can take place.</source>
          <target state="translated">로드 된 &lt;code&gt;apache.conf&lt;/code&gt; 로드 된 &lt;code&gt;php.ini&lt;/code&gt; 파일 또는 apache.conf 또는 &lt;code&gt;httpd.conf&lt;/code&gt; 또는 가상 호스트 파일입니다. 이러한 파일은 시작 단계 (예 : 아파치 httpd 또는 php-fpm을 처음 시작할 때) 동안 한 번만 읽으며 런타임 구성 변경으로 재정의됩니다. 로드 된 구성 파일에서 &lt;code&gt;display_errors = 1&lt;/code&gt; 및 &lt;code&gt;error_reporting = -1&lt;/code&gt; 을 확인하면 &lt;code&gt;ini_set('display_errors', 1);&lt;/code&gt; 과 같이 런타임 변경 전에 발생하는 구문 또는 구문 분석 오류에 관계없이 &lt;em&gt;WSOD&lt;/em&gt; 가 표시되지 않습니다 . 또는 &lt;code&gt;error_reporting(E_ALL);&lt;/code&gt; 일어날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3e5212e5a92daec8dccfeb8745d73641b97651c" translate="yes" xml:space="preserve">
          <source>Many people (and stock installations of PHP) will use a production-ini file that has &lt;code&gt;display_errors&lt;/code&gt; turned off by default, which typically results in this same frustration you've experienced here. Because PHP already has it turned off when it starts up, then encounters a syntax or parse error, and bails with nothing to output. You expect that your &lt;code&gt;ini_set('display_errors',1);&lt;/code&gt; at the top of your PHP script should have avoided that, but it won't matter if PHP can't parse your code because it will never have reached the runtime.</source>
          <target state="translated">많은 사람들 (및 PHP의 주식 설치)은 &lt;code&gt;display_errors&lt;/code&gt; 가 기본적으로 꺼져있는 production-ini 파일을 사용합니다. 이는 일반적으로 여기에서 경험 한 것과 같은 좌절을 초래합니다. PHP는 시작할 때 이미 꺼져 있기 때문에 구문 또는 구문 분석 오류가 발생하여 출력 할 내용이 없습니다. &lt;code&gt;ini_set('display_errors',1);&lt;/code&gt; PHP 스크립트 맨 위에는 피해야하지만 런타임에 도달하지 않았기 때문에 PHP가 코드를 구문 분석 할 수없는 경우에는 중요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6da94903833ec10e3de076141d406d0170387629" translate="yes" xml:space="preserve">
          <source>Next things to consider:</source>
          <target state="translated">고려해야 할 다음 사항 :</target>
        </trans-unit>
        <trans-unit id="4b297cee879938b6ead7c2ca7debd24e5cba51e0" translate="yes" xml:space="preserve">
          <source>On the top of the page choose a parameter</source>
          <target state="translated">페이지 상단에서 매개 변수를 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="4e3f52417637c190ecdcdfefc08a4763e172aab6" translate="yes" xml:space="preserve">
          <source>PHP Configuration</source>
          <target state="translated">PHP 설정</target>
        </trans-unit>
        <trans-unit id="1bcf88d09d1108ee1894bbc86ee3b570aebc392b" translate="yes" xml:space="preserve">
          <source>PHP provides some of better ways to know the developers why and where their piece of code is getting the errors, so by knowing those errors developers can make their code better in many ways.</source>
          <target state="translated">PHP는 개발자가 코드 부분에서 오류가 발생하는 이유와 위치를 알 수있는 더 나은 방법을 제공하므로 이러한 오류를 알면 개발자가 여러 가지 방법으로 코드를 개선 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92c49df3ca88ba63b047f4421a339f367a52cdb8" translate="yes" xml:space="preserve">
          <source>Predefined Constants&lt;sup&gt;&lt;em&gt;Docs&lt;/em&gt;&lt;/sup&gt;</source>
          <target state="translated">미리 정의 된 상수 &lt;sup&gt;&lt;em&gt;문서&lt;/em&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="fe8506a6fa8b28ed29002cda43c1f8fae4b4dda6" translate="yes" xml:space="preserve">
          <source>Quite often I will try and run a PHP script and just get a blank screen back. No error message; just an empty screen. The cause might have been a simple syntax error (wrong bracket, missing semicolon), or a failed function call, or something else entirely.</source>
          <target state="translated">나는 종종 PHP 스크립트를 시도하고 실행하고 빈 화면을 다시 얻습니다. 오류 메시지가 없습니다. 빈 화면입니다. 원인은 단순한 구문 오류 (잘못된 대괄호, 세미콜론 누락) 또는 함수 호출 실패 또는 기타 다른 것일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1582600625fd381ca554979f70e7434d87fa5103" translate="yes" xml:space="preserve">
          <source>Runtime configuration</source>
          <target state="translated">런타임 구성</target>
        </trans-unit>
        <trans-unit id="9f20bbe5444f4acef66b0bb3d6122aff69b0d6f1" translate="yes" xml:space="preserve">
          <source>Search for display_errors in that file. There should be only 3 instances, of which 2 are commented.</source>
          <target state="translated">해당 파일에서 display_errors를 검색하십시오. 3 개의 인스턴스 만 있어야하며 그 중 2 개는 주석 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="33c8797984ac0ddda87988fe6d96a96fae7f458d" translate="yes" xml:space="preserve">
          <source>See as well:</source>
          <target state="translated">또한보십시오 :</target>
        </trans-unit>
        <trans-unit id="65d326c501ed59ff7ee343dd45966ea4e922c60d" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;&quot;tail -f&lt;/code&gt;&quot; your log files and when you get a blank screen use IEs &quot;view&quot; -&amp;gt; &quot;source&quot; menu options to view the raw output.</source>
          <target state="translated">따라서 &lt;code&gt;&quot;tail -f&lt;/code&gt; &quot;로그 파일과 빈 화면이 표시되면 IE &quot;view&quot;-&amp;gt; &quot;source&quot;메뉴 옵션을 사용하여 원시 출력을보십시오.</target>
        </trans-unit>
        <trans-unit id="cb0009d9755165dbf459a4513dcdaa976ab28dcf" translate="yes" xml:space="preserve">
          <source>That means that the script hadn't even run! That usually happens when you have a syntax error!</source>
          <target state="translated">그것은 스크립트가 실행되지 않았 음을 의미합니다! 일반적으로 구문 오류가있을 때 발생합니다!</target>
        </trans-unit>
        <trans-unit id="4db907dd05e30396d082522fc9e8102ad9e6ed5a" translate="yes" xml:space="preserve">
          <source>That's a shame. Usually shared hosts do not allow the alteration of their php.ini file, and so, that option is sadly unavailable. But fear not! We have &lt;a href=&quot;https://www.php.net/manual/en/configuration.file.per-user.php&quot;&gt;other options&lt;/a&gt;!</source>
          <target state="translated">부끄러운 일입니다. 일반적으로 공유 호스트는 php.ini 파일을 변경할 수 없으므로 해당 옵션을 사용할 수 없습니다. 그러나 두려워하지 마십시오! 우리는 &lt;a href=&quot;https://www.php.net/manual/en/configuration.file.per-user.php&quot;&gt;다른 옵션이 있습니다&lt;/a&gt; !</target>
        </trans-unit>
        <trans-unit id="a9d775ffdad4778a4d18d688f6264b36ab4f90a1" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;ERRORS&amp;rdquo; are the most useful things for the developers to know their mistakes and resolved them  to make the system working perfect.</source>
          <target state="translated">&amp;ldquo;오류&amp;rdquo;는 개발자가 실수를 알고 시스템이 완벽하게 작동하도록 오류를 해결하는 데 가장 유용한 것입니다.</target>
        </trans-unit>
        <trans-unit id="bbc65359f4d1db5a67cfe6f7a9734b2dac40888f" translate="yes" xml:space="preserve">
          <source>The following code should display all errors:</source>
          <target state="translated">다음 코드는 모든 오류를 표시해야합니다.</target>
        </trans-unit>
        <trans-unit id="e17b6273e59875f5c501010360839469d54fb3a7" translate="yes" xml:space="preserve">
          <source>The following enables all errors:</source>
          <target state="translated">다음은 모든 오류를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="14795fa657fff3ab676b9f599cadac1852a8b32f" translate="yes" xml:space="preserve">
          <source>The only way to generate a blank page with this code is when you have a error in the shutdown handler. I copied and pasted this from my own cms without testing it, but I am sure it works.</source>
          <target state="translated">이 코드로 빈 페이지를 생성하는 유일한 방법은 종료 처리기에 오류가있는 경우입니다. 나는 그것을 테스트하지 않고 내 자신의 cms에서 이것을 복사하여 붙여 넣었지만 작동한다고 확신합니다.</target>
        </trans-unit>
        <trans-unit id="8d30291c15a21902cc8c0ad2d8aa2c32f3c8129a" translate="yes" xml:space="preserve">
          <source>The settings outlined here display all errors, notices and warnings, including strict ones, regardless which PHP version.</source>
          <target state="translated">여기에 설명 된 설정은 어떤 PHP 버전에 관계없이 엄격한 오류를 포함한 모든 오류,주의 사항 및 경고를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="54f4810c1fda3a351cadfd870b580c789d3f6239" translate="yes" xml:space="preserve">
          <source>The two key lines you need to get useful errors out of PHP are:</source>
          <target state="translated">PHP에서 유용한 오류를 얻는 데 필요한 두 가지 주요 라인은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3abd2eec0dbc2a26c312cd8314142073ade0ea6f" translate="yes" xml:space="preserve">
          <source>Then point your browser there and look at &lt;strong&gt;Loaded Configuration File&lt;/strong&gt; and &lt;strong&gt;Additional .ini files parsed&lt;/strong&gt;, which are usually at the top of your &lt;code&gt;phpinfo()&lt;/code&gt; and will include the absolute path to all your loaded configuration files.</source>
          <target state="translated">그런 다음 브라우저를 가리키고 &lt;strong&gt;Loaded Configuration File&lt;/strong&gt; 및 &lt;strong&gt;Additional .ini 파일을&lt;/strong&gt; 살펴보십시오. 일반적으로 &lt;code&gt;phpinfo()&lt;/code&gt; 의 맨 위에 있으며로드 된 모든 구성 파일의 절대 경로가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="f6c1ac09610b398a1345f2ed3185e46efd01e2f0" translate="yes" xml:space="preserve">
          <source>There is a really useful extension called &quot;&lt;a href=&quot;http://www.xdebug.org/&quot;&gt;xdebug&lt;/a&gt;&quot; that will make your reports much nicer as well.</source>
          <target state="translated">&quot; &lt;a href=&quot;http://www.xdebug.org/&quot;&gt;xdebug&lt;/a&gt; &quot;라는 정말 유용한 확장 기능이있어 보고서를 훨씬 멋지게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d04f6ff36788bd03c4c2255aa9ca6609e0bafc73" translate="yes" xml:space="preserve">
          <source>These two lines will do the same effect as altering the php.ini entries as above! Awesome!</source>
          <target state="translated">이 두 줄은 위와 같이 php.ini 항목을 변경하는 것과 동일한 효과를 나타냅니다! 대박!</target>
        </trans-unit>
        <trans-unit id="3b564a1f16832eda861b6a3fe05f49b70114dc47" translate="yes" xml:space="preserve">
          <source>This causes even minimal warnings to show up. And, just in case:</source>
          <target state="translated">이로 인해 최소한의 경고 만 표시됩니다. 그리고 만일을 위해서 :</target>
        </trans-unit>
        <trans-unit id="c2ce4e30af1f04330a48d5556ae65b3a8ccdaace" translate="yes" xml:space="preserve">
          <source>This is a problem of loaded vs. runtime configuration</source>
          <target state="translated">이것은로드 된 구성과 런타임 구성의 문제입니다.</target>
        </trans-unit>
        <trans-unit id="0ae9ce68cd6014832e7f28335493d96b5fac6875" translate="yes" xml:space="preserve">
          <source>This option wasn't in fastcgi_params file, so PHP didn't work and there wasn't any errors in logs.</source>
          <target state="translated">이 옵션은 fastcgi_params 파일에 없었으므로 PHP가 작동하지 않고 로그에 오류가 없었습니다.</target>
        </trans-unit>
        <trans-unit id="9155b9d6fa9c745cae05814627ec47cd05ba91ab" translate="yes" xml:space="preserve">
          <source>This overrides the default settings in php.ini, which just make PHP report the errors to the log.</source>
          <target state="translated">이것은 php.ini의 기본 설정보다 우선합니다. PHP는 오류를 로그에보고합니다.</target>
        </trans-unit>
        <trans-unit id="8f1e61eb75d9e96a25d5cd5e8adfbb5693672b8d" translate="yes" xml:space="preserve">
          <source>This really is the best way to avoid a WSOD in development. Anyone suggesting that you put &lt;code&gt;ini_set('display_errors', 1);&lt;/code&gt; or &lt;code&gt;error_reporting(E_ALL);&lt;/code&gt; at the top of your PHP script or using .htaccess like you did here, is not going to help you avoid a WSOD when a syntax or parse error occurs (like in your case here) if your loaded configuration file has &lt;code&gt;display_errors&lt;/code&gt; turned off.</source>
          <target state="translated">이것이 실제로 개발에서 WSOD를 피하는 가장 좋은 방법입니다. &lt;code&gt;ini_set('display_errors', 1);&lt;/code&gt; 또는 &lt;code&gt;error_reporting(E_ALL);&lt;/code&gt; 로드 된 구성 파일에 &lt;code&gt;display_errors&lt;/code&gt; 가 꺼져 있으면 구문 또는 구문 분석 오류가 발생할 때 (여기에서와 같이) PHP 스크립트 상단이나 .htaccess를 사용하는 것은 WSOD를 피하는 데 도움이되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="39dd3935120dd9dd1154ef211a92e37551033bd8" translate="yes" xml:space="preserve">
          <source>This will only display errors when you are running locally. It also gives you the test_server variable to use in other places where appropriate.</source>
          <target state="translated">로컬로 실행할 때만 오류가 표시됩니다. 또한 적절한 곳에서 사용할 test_server 변수를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="65ab76da6397c8ec0fd7bb569a025aa2a2cb804d" translate="yes" xml:space="preserve">
          <source>To avoid a WSOD you want to make sure that your &lt;strong&gt;loaded configuration file&lt;/strong&gt; has &lt;code&gt;display_errors&lt;/code&gt; on and &lt;code&gt;error_reporting&lt;/code&gt; set to &lt;code&gt;-1&lt;/code&gt; (&lt;em&gt;this is the equivalent E_ALL because it ensures all bits are turned on regardless of which version of PHP you're running&lt;/em&gt;). Don't hardcode the constant value of E_ALL, because that value is subject to change between different versions of PHP.</source>
          <target state="translated">WSOD를 피하려면 &lt;strong&gt;로드 된 구성 파일&lt;/strong&gt; 에 &lt;code&gt;display_errors&lt;/code&gt; on 및 &lt;code&gt;error_reporting&lt;/code&gt; &lt;em&gt;이&lt;/em&gt; &lt;code&gt;-1&lt;/code&gt; 로 설정되어 있는지 확인하십시오 ( &lt;em&gt;실행중인 PHP 버전에 관계없이 모든 비트가 켜지도록하기 때문에 E_ALL과 동일합니다&lt;/em&gt; ). E_ALL의 상수 값을 하드 코딩하지 마십시오.이 값은 다른 버전의 PHP간에 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d15bdd270e3dca92d0b8d8a43d6c0df48d8e75f" translate="yes" xml:space="preserve">
          <source>To locate your loaded configuration file(s) just create a new PHP file with only the following code...</source>
          <target state="translated">로드 된 구성 파일을 찾으려면 다음 코드 만 사용하여 새 PHP 파일을 만드십시오.</target>
        </trans-unit>
        <trans-unit id="4bf89fba694f12f70921c2c3e0ef2be5f13fdc1e" translate="yes" xml:space="preserve">
          <source>To persist this and make it confortale, you can edit your php.ini file. It is usually stored in &lt;code&gt;/etc/php.ini&lt;/code&gt; or &lt;code&gt;/etc/php/php.ini&lt;/code&gt;, but more local &lt;code&gt;php.ini&lt;/code&gt;'s may overwrite it, depending on your hosting provider's setup guidelines. Check a &lt;code&gt;phpinfo()&lt;/code&gt; file for &lt;code&gt;Loaded Configuration File&lt;/code&gt; at the top, to be sure which one gets loaded last.</source>
          <target state="translated">이것을 유지하고 간결하게 만들기 위해 php.ini 파일을 편집 할 수 있습니다. 일반적으로 &lt;code&gt;/etc/php.ini&lt;/code&gt; 또는 &lt;code&gt;/etc/php/php.ini&lt;/code&gt; 에 저장되지만 호스팅 제공 업체의 설정 지침에 따라 더 많은 로컬 &lt;code&gt;php.ini&lt;/code&gt; 가 덮어 쓸 수 있습니다. &lt;code&gt;phpinfo()&lt;/code&gt; 파일에서 맨 위에 &lt;code&gt;Loaded Configuration File&lt;/code&gt; 이 있는지 확인하여 어떤 파일 이 마지막으로로드되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="1b4ddd69d86a929b2c1b2d537d39ef3c7a8cdf45" translate="yes" xml:space="preserve">
          <source>To turn on full error reporting, add this to your script:</source>
          <target state="translated">전체 오류보고를 켜려면이를 스크립트에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="68d52c48a1d9d1e3352fa73dd1d8b6ed0e82b67f" translate="yes" xml:space="preserve">
          <source>Whoa whoa! No check! I can't change my php.ini!</source>
          <target state="translated">우와 우와! 확인 안함! 내 php.ini를 변경할 수 없습니다!</target>
        </trans-unit>
        <trans-unit id="9c17a3c015adb8e4d473ad5aac4a7d5e1d5f1828" translate="yes" xml:space="preserve">
          <source>Will force the display of errors. This should be turned off in production servers, but not when you're developing.</source>
          <target state="translated">오류를 강제로 표시합니다. 프로덕션 서버에서는이 기능을 해제해야하지만 개발 중에는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="30b3001c9eb29bd85100baf4b8b132447f6950d5" translate="yes" xml:space="preserve">
          <source>With syntax errors, the script doesn't even get to runtime. It fails at &lt;strong&gt;compile time&lt;/strong&gt;, meaning that it'll use the values in php.ini, which if you hadn't changed, may not allow the display of errors.</source>
          <target state="translated">구문 오류로 인해 스크립트가 런타임에 도달하지도 않습니다. &lt;strong&gt;컴파일 타임에&lt;/strong&gt; 실패합니다. 즉, 변경하지 않은 경우 오류 표시를 허용하지 않을 수있는 php.ini의 값을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6197da377c3a4ce61967bcd76a4a178a9add3c89" translate="yes" xml:space="preserve">
          <source>You can enable full error reporting (including notices and strict messages). Some people find this too verbose, but it's worth a try. Set &lt;code&gt;error_reporting&lt;/code&gt; to &lt;code&gt;E_ALL | E_STRICT&lt;/code&gt; in your php.ini.</source>
          <target state="translated">전체 오류보고 (알림 및 엄격한 메시지 포함)를 활성화 할 수 있습니다. 어떤 사람들은 이것이 너무 장황하다고 생각하지만 시도해 볼 가치가 있습니다. &lt;code&gt;error_reporting&lt;/code&gt; 을 &lt;code&gt;E_ALL | E_STRICT&lt;/code&gt; php.ini의 E_STRICT</target>
        </trans-unit>
        <trans-unit id="503b4fff5f74f45a96e0bb126683ec9142d534bb" translate="yes" xml:space="preserve">
          <source>You can include the following lines in the file you want to debug:</source>
          <target state="translated">디버깅하려는 파일에 다음 줄을 포함시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c642b0954ec97622bfe5dfcb1b2819dbddb488a1" translate="yes" xml:space="preserve">
          <source>You can register your own &lt;a href=&quot;http://de.php.net/manual/en/function.set-error-handler.php&quot;&gt;error handler&lt;/a&gt; in PHP. Dumping all errors to a file might help you in these obscure cases, for example. Note that your function will get called, no matter what your current &lt;a href=&quot;http://de.php.net/manual/en/function.error-reporting.php&quot;&gt;error_reporting&lt;/a&gt; is set to. Very basic example:</source>
          <target state="translated">PHP에서 자체 &lt;a href=&quot;http://de.php.net/manual/en/function.set-error-handler.php&quot;&gt;오류 처리기&lt;/a&gt; 를 등록 할 수 있습니다. 예를 들어, 모든 오류를 파일에 덤프하면 이러한 모호한 경우에 도움이 될 수 있습니다. 현재 &lt;a href=&quot;http://de.php.net/manual/en/function.error-reporting.php&quot;&gt;error_reporting&lt;/a&gt; 이 무엇으로 설정되어 있는지에 관계없이 함수가 호출됩니다. 매우 기본적인 예 :</target>
        </trans-unit>
        <trans-unit id="49b55142a2f8ebc65c698785c207813be633887d" translate="yes" xml:space="preserve">
          <source>You may want to consider using the value of E_ALL (as mentioned by Gumbo) for your version of PHP for &lt;code&gt;error_reporting&lt;/code&gt; to get all of the errors. &lt;a href=&quot;http://docs.php.net/manual/en/errorfunc.constants.php&quot;&gt;more info&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;error_reporting&lt;/code&gt; 에서 모든 오류를 얻기 위해 PHP 버전에 E_ALL 값 (Gumbo에서 언급 한대로)을 사용하는 것이 좋습니다. &lt;a href=&quot;http://docs.php.net/manual/en/errorfunc.constants.php&quot;&gt;더 많은 정보&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1ab7e57a30ef1253dade8e387f30e211dafa916" translate="yes" xml:space="preserve">
          <source>You might also want to try PHPStorm as your code editor.  It will find many PHP and other syntax errors right as you are typing in the editor.</source>
          <target state="translated">PHPStorm을 코드 편집기로 사용해 볼 수도 있습니다. 편집기에 입력하는 즉시 많은 PHP 및 기타 구문 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="573a4b5c25fef2b0e1cc76ccc565c5ec27cbb15e" translate="yes" xml:space="preserve">
          <source>adding this code to the beginning of you index.php will help you debug the problems.</source>
          <target state="translated">index.php의 시작 부분에이 코드를 추가하면 문제를 디버깅하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="b70976026c34061e894b3a32c76ba45e0e1104c1" translate="yes" xml:space="preserve">
          <source>if you are a ubuntu user then goto your terminal and run this command</source>
          <target state="translated">우분투 사용자 인 경우 터미널로 이동 하여이 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="fb8dcf51bed4c54d2b82c41ca229705144fc0a68" translate="yes" xml:space="preserve">
          <source>open your php.ini, 
make sure it's set to:</source>
          <target state="translated">php.ini를 열고 다음과 같이 설정되어 있는지 확인하십시오 :</target>
        </trans-unit>
        <trans-unit id="a4a91b4507467427d313becded698375a2ccd5cc" translate="yes" xml:space="preserve">
          <source>restart your server.</source>
          <target state="translated">서버를 다시 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="b4ffd2786eb0d1a61a53441e3104a3ae472b6101" translate="yes" xml:space="preserve">
          <source>to be put at the beginning of the script that is under trouble-shooting. This is not perfect, the perfect variant is that you also enable that in the &lt;code&gt;php.ini&lt;/code&gt; and that you log the errors in PHP to catch syntax and startup errors.</source>
          <target state="translated">문제가 발생한 스크립트의 시작 부분에 배치해야합니다. 이것은 완벽하지 않습니다. 완벽한 변형은 &lt;code&gt;php.ini&lt;/code&gt; 에서 활성화하고 구문 및 시작 오류를 포착하기 위해 PHP에서 오류를 기록한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="890fc8789c9be30910f84bd905ee49374e7cd808" translate="yes" xml:space="preserve">
          <source>where it will display recent 50 errors. 
There is a error file &lt;code&gt;error.log&lt;/code&gt; for apache2 which logs all the errors.</source>
          <target state="translated">최근 50 개의 오류가 표시됩니다. 모든 오류를 기록하는 apache2에 대한 &lt;code&gt;error.log&lt;/code&gt; 오류 파일이 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
