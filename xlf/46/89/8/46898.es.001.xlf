<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/46898">
    <body>
      <group id="46898">
        <trans-unit id="d30462a41bd01ccebda2cf58a3b8353e1b7840fd" translate="yes" xml:space="preserve">
          <source>0 (#:0):0, 1 (#:1):1, 2 (#:2):2, 3 (#:3):3, 4 (#:4):4, 5 (#:5):5, 6 (#:6):6, 7 (#:7):7, 8 (#:8):8, 9 (#:9):9, 10 (#:10):10,</source>
          <target state="translated">0 (#:0):0,1 (#:1):1,2 (#:2):2,3 (#:3):3,4 (#:4):4,5 (#:5):5,6 (#:6):6,7 (#:7):7,8 (#:8):8,9 (#:9):9,10 (#:10):10,</target>
        </trans-unit>
        <trans-unit id="2ddf1133bc32496871045e6d597d4d6a1dc1e8da" translate="yes" xml:space="preserve">
          <source>0 : 0, 1 : 1, 2 : 2, 3 : 3, 4 : 4, 5 : 5, 6 : 6, 7 : 7, 8 : 8, 9 : 9, 10 : 10,</source>
          <target state="translated">0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,10:10,</target>
        </trans-unit>
        <trans-unit id="40f71110f1c6d89a83d5d74998a6bae84cb0eac9" translate="yes" xml:space="preserve">
          <source>1.) Iterate through the &lt;a href=&quot;http://java.sun.com/j2se/1.5.0/docs/api/java/util/Map.html#keySet%28%29&quot;&gt;&lt;code&gt;keys -&amp;gt; keySet()&lt;/code&gt;&lt;/a&gt; of the map:</source>
          <target state="translated">1.) Iterar a trav&amp;eacute;s de las &lt;a href=&quot;http://java.sun.com/j2se/1.5.0/docs/api/java/util/Map.html#keySet%28%29&quot;&gt; &lt;code&gt;keys -&amp;gt; keySet()&lt;/code&gt; &lt;/a&gt; del mapa:</target>
        </trans-unit>
        <trans-unit id="b434c39c68821bc91a36a5d79143911b1685346e" translate="yes" xml:space="preserve">
          <source>10 (#=10):10, 9 (#=9):9, 8 (#=8):8, 7 (#=7):7, 6 (#=6):6, 5 (#=5):5, 4 (#=4):4, 3 (#=3):3, 2 (#=2):2, 1 (#=1):1, 0 (#=0):0,</source>
          <target state="translated">10 (#=10):10,9 (#=9):9,8 (#=8):8,7 (#=7):7,6 (#=6):6,5 (#=5):5,4 (#=4):4,3 (#=3):3,2 (#=2):2,1 (#=1):1,0 (#=0):0,</target>
        </trans-unit>
        <trans-unit id="07e7842ae451e8b223fddd46806bc2418f4d8622" translate="yes" xml:space="preserve">
          <source>10 : 10, 9 : 9, 8 : 8, 7 : 7, 6 : 6, 5 : 5, 4 : 4, 3 : 3, 2 : 2, 1 : 1, 0 : 0,</source>
          <target state="translated">10:10,9:9,8:8,7:7,6:6,5:5,4:4,3:3,2:2,1:1,0:0,</target>
        </trans-unit>
        <trans-unit id="76c3ebd56308a64015138e37e4c85af5080783a3" translate="yes" xml:space="preserve">
          <source>2.) Iterate through the &lt;a href=&quot;http://java.sun.com/j2se/1.5.0/docs/api/java/util/Map.html#values%28%29&quot;&gt;&lt;code&gt;values -&amp;gt; values()&lt;/code&gt;&lt;/a&gt; of the map:</source>
          <target state="translated">2.) Iterar a trav&amp;eacute;s de los &lt;a href=&quot;http://java.sun.com/j2se/1.5.0/docs/api/java/util/Map.html#values%28%29&quot;&gt; &lt;code&gt;values -&amp;gt; values()&lt;/code&gt; &lt;/a&gt; del mapa:</target>
        </trans-unit>
        <trans-unit id="a3bbdbbb036debbd91e9605d4745f68dd12997a6" translate="yes" xml:space="preserve">
          <source>3.) Iterate through the &lt;a href=&quot;http://java.sun.com/j2se/1.5.0/docs/api/java/util/Map.html#entrySet%28%29&quot;&gt;&lt;code&gt;both -&amp;gt; entrySet()&lt;/code&gt;&lt;/a&gt; of the map:</source>
          <target state="translated">3.) Iterar a trav&amp;eacute;s de &lt;a href=&quot;http://java.sun.com/j2se/1.5.0/docs/api/java/util/Map.html#entrySet%28%29&quot;&gt; &lt;code&gt;both -&amp;gt; entrySet()&lt;/code&gt; &lt;/a&gt; del mapa:</target>
        </trans-unit>
        <trans-unit id="0bdeeaef0187d00458632d3659a4402cd79e9934" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/questions/46898/how-to-efficiently-iterate-over-each-entry-in-a-map/46908#46908&quot;&gt;@ScArcher2 has the more elegant Java 1.5 syntax&lt;/a&gt;. In 1.4, I would do something like this:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/46898/how-to-efficiently-iterate-over-each-entry-in-a-map/46908#46908&quot;&gt;@ ScArcher2 tiene la sintaxis Java 1.5 m&amp;aacute;s elegante&lt;/a&gt; . En 1.4, har&amp;iacute;a algo como esto:</target>
        </trans-unit>
        <trans-unit id="78fd64c50744c65d102273e78ce957c849ebbeff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HashMap&lt;/code&gt; is the canonical map implementation and doesn't make guarantees (or though it should not change order if no mutating operation are performed on it). &lt;code&gt;SortedMap&lt;/code&gt; will return entries based on the natural ordering of the keys, or a &lt;code&gt;Comparator&lt;/code&gt;, if provided. &lt;code&gt;LinkedHashMap&lt;/code&gt; will either return entries in insertion-order or access-order depending upon how it has been constructed. &lt;code&gt;EnumMap&lt;/code&gt; returns entries in natural order of keys.</source>
          <target state="translated">&lt;code&gt;HashMap&lt;/code&gt; es la implementaci&amp;oacute;n del mapa can&amp;oacute;nico y no ofrece garant&amp;iacute;as (o aunque no deber&amp;iacute;a cambiar el orden si no se realiza ninguna operaci&amp;oacute;n de mutaci&amp;oacute;n). &lt;code&gt;SortedMap&lt;/code&gt; devolver&amp;aacute; entradas seg&amp;uacute;n el orden natural de las claves, o un &lt;code&gt;Comparator&lt;/code&gt; , si se proporciona. &lt;code&gt;LinkedHashMap&lt;/code&gt; devolver&amp;aacute; entradas en orden de inserci&amp;oacute;n u orden de acceso dependiendo de c&amp;oacute;mo se haya construido. &lt;code&gt;EnumMap&lt;/code&gt; devuelve entradas en el orden natural de las claves.</target>
        </trans-unit>
        <trans-unit id="df9e23213522feb0f851809e192dbba0cd4ef337" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NavigableMap&lt;/code&gt; interface</source>
          <target state="translated">Interfaz &lt;code&gt;NavigableMap&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b8061c26823755d99e280ad254f9a7a64a9225cb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;50 milliseconds&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;50 milisegundos&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f1f2a23cfa6ed0be46057a39259af74d813bd4b6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;75 milliseconds&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;75 milisegundos&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7551ebfccb1284552c4ac29e34b7aecc41ed5dfe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;76 milliseconds&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;76 milisegundos&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="87d7a5349b3fd394b840fd8e8315f40c28028239" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;How to iterate over the entries of a Map&lt;/em&gt; - @ScArcher2 has &lt;a href=&quot;https://stackoverflow.com/a/46908/1851302&quot;&gt;answered&lt;/a&gt; that perfectly.</source>
          <target state="translated">&lt;em&gt;C&amp;oacute;mo iterar sobre las entradas de un mapa&lt;/em&gt; : @ ScArcher2 lo ha &lt;a href=&quot;https://stackoverflow.com/a/46908/1851302&quot;&gt;respondido&lt;/a&gt; perfectamente.</target>
        </trans-unit>
        <trans-unit id="8c8940fb37dfcfef05c009e102fb571f8441ea00" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;If you want to write a conditional for lambda you can write it like this:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Si desea escribir un condicional para lambda, puede escribirlo as&amp;iacute;:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1a34520f314ded34eb3cacb1a2590ee9c9299821" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Moreover, there are 3 difference ways to Iterate Through a HashMap. They are as below&lt;/em&gt;_</source>
          <target state="translated">&lt;em&gt;Adem&amp;aacute;s, hay 3 formas diferentes de iterar a trav&amp;eacute;s de un HashMap.&lt;/em&gt; &lt;em&gt;Son como abajo&lt;/em&gt; _</target>
        </trans-unit>
        <trans-unit id="ff6cb7605a078a3bfb48c2579c0969790a6fed46" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;What is the order of iteration&lt;/em&gt; - if you are just using &lt;code&gt;Map&lt;/code&gt;, then strictly speaking, there are &lt;strong&gt;no ordering guarantees&lt;/strong&gt;.  So you shouldn't really rely on the ordering given by any implementation.  However, the &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt;&lt;code&gt;SortedMap&lt;/code&gt;&lt;/a&gt; interface extends &lt;code&gt;Map&lt;/code&gt; and provides exactly what you are looking for - implementations will aways give a consistent sort order.</source>
          <target state="translated">&lt;em&gt;&amp;iquest;Cu&amp;aacute;l es el orden de iteraci&amp;oacute;n&lt;/em&gt; ? Si solo est&amp;aacute; utilizando &lt;code&gt;Map&lt;/code&gt; , estrictamente hablando, no &lt;strong&gt;hay garant&amp;iacute;as de pedido&lt;/strong&gt; . Por lo tanto, no debe confiar realmente en el orden dado por ninguna implementaci&amp;oacute;n. Sin embargo, la interfaz &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html&quot;&gt; &lt;code&gt;SortedMap&lt;/code&gt; &lt;/a&gt; extiende &lt;code&gt;Map&lt;/code&gt; y proporciona exactamente lo que est&amp;aacute; buscando: las implementaciones siempre dar&amp;aacute;n un orden de clasificaci&amp;oacute;n consistente.</target>
        </trans-unit>
        <trans-unit id="7b9f49f0624beecc76e4c400005cc314c104082e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;(Update: I think this is no longer true.&lt;/strong&gt;) Note, &lt;code&gt;IdentityHashMap&lt;/code&gt;&lt;code&gt;entrySet&lt;/code&gt; iterator currently has a peculiar implementation which returns the same &lt;code&gt;Map.Entry&lt;/code&gt; instance for every item in the &lt;code&gt;entrySet&lt;/code&gt;! However, every time a new the iterator advances the &lt;code&gt;Map.Entry&lt;/code&gt; is updated.</source>
          <target state="translated">&lt;strong&gt;(Actualizaci&amp;oacute;n: creo que esto ya no es cierto&lt;/strong&gt; ) &lt;strong&gt;.&lt;/strong&gt; Tenga en &lt;code&gt;entrySet&lt;/code&gt; iterador de &lt;code&gt;IdentityHashMap&lt;/code&gt; entrySet actualmente tiene una implementaci&amp;oacute;n peculiar que devuelve la misma instancia de &lt;code&gt;Map.Entry&lt;/code&gt; para cada elemento en el &lt;code&gt;entrySet&lt;/code&gt; . Sin embargo, cada vez que un nuevo iterador avanza el &lt;code&gt;Map.Entry&lt;/code&gt; se actualiza.</target>
        </trans-unit>
        <trans-unit id="4b08e1ea1a9950c8944da65f4d98ac8bce434bec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1) Using &lt;code&gt;entrySet()&lt;/code&gt; in for each loop&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;1) Usando &lt;code&gt;entrySet()&lt;/code&gt; en cada bucle&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef4f8dcdb2b42abc6c11a4507ae8f995723b6a25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2) Using &lt;code&gt;keySet()&lt;/code&gt; in for each loop&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;2) Usando &lt;code&gt;keySet()&lt;/code&gt; en cada bucle&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ce455fc72a7bee227dd834267207040b1408afb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;3) Using &lt;code&gt;entrySet()&lt;/code&gt; and iterator&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;3) Usando &lt;code&gt;entrySet()&lt;/code&gt; e iterador&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f68c4111f1efcd5940165c5462abd76292ca5156" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;4) Using &lt;code&gt;keySet()&lt;/code&gt; and iterator&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;4) Usando &lt;code&gt;keySet()&lt;/code&gt; e iterador&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="01ab40a6cbbbd4ccc44c8cf3e70babf4c8d349fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/NavigableMap.html&quot;&gt;&lt;code&gt;NavigableMap&lt;/code&gt;&lt;/a&gt; is another useful extension&lt;/strong&gt; - this is a &lt;code&gt;SortedMap&lt;/code&gt; with additional methods for finding entries by their ordered position in the key set.  So potentially this can remove the need for iterating in the first place - you might be able to find the specific &lt;code&gt;entry&lt;/code&gt; you are after using the &lt;code&gt;higherEntry&lt;/code&gt;, &lt;code&gt;lowerEntry&lt;/code&gt;, &lt;code&gt;ceilingEntry&lt;/code&gt;, or &lt;code&gt;floorEntry&lt;/code&gt; methods.  The &lt;code&gt;descendingMap&lt;/code&gt; method even gives you an explicit method of &lt;strong&gt;reversing the traversal order&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/NavigableMap.html&quot;&gt; &lt;code&gt;NavigableMap&lt;/code&gt; &lt;/a&gt; es otra extensi&amp;oacute;n &amp;uacute;til&lt;/strong&gt; : se trata de un &lt;code&gt;SortedMap&lt;/code&gt; con m&amp;eacute;todos adicionales para buscar entradas por su posici&amp;oacute;n ordenada en el conjunto de claves. Entonces, potencialmente esto puede eliminar la necesidad de iterar en primer lugar: es posible que pueda encontrar la &lt;code&gt;entry&lt;/code&gt; espec&amp;iacute;fica que est&amp;aacute; buscando despu&amp;eacute;s de usar los &lt;code&gt;higherEntry&lt;/code&gt; , &lt;code&gt;lowerEntry&lt;/code&gt; , &lt;code&gt;ceilingEntry&lt;/code&gt; o &lt;code&gt;floorEntry&lt;/code&gt; . El m&amp;eacute;todo &lt;code&gt;descendingMap&lt;/code&gt; incluso le ofrece un m&amp;eacute;todo expl&amp;iacute;cito para &lt;strong&gt;invertir el orden transversal&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b0bdd3f912a52ada1dd392cd4ff14c74d0be6fcc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;forEachOrdered&lt;/code&gt; vs &lt;code&gt;forEach&lt;/code&gt; with streams ?&lt;/strong&gt;
The &lt;code&gt;forEach&lt;/code&gt; does not follow encounter order (if defined) and is inherently non-deterministic in nature where as the &lt;code&gt;forEachOrdered&lt;/code&gt; does. So &lt;code&gt;forEach&lt;/code&gt; does not guarantee that the order would be kept. Also check &lt;a href=&quot;https://stackoverflow.com/questions/32797579/foreach-vs-foreachordered-in-java-8-stream&quot;&gt;this&lt;/a&gt; for more.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;forEachOrdered&lt;/code&gt; vs &lt;code&gt;forEach&lt;/code&gt; with streams?&lt;/strong&gt; &lt;code&gt;forEach&lt;/code&gt; no sigue el orden de encuentro (si est&amp;aacute; definido) y es inherentemente de naturaleza no determinista, como lo hace &lt;code&gt;forEachOrdered&lt;/code&gt; . Por &lt;code&gt;forEach&lt;/code&gt; tanto, forEach no garantiza que se mantenga el pedido. Tambi&amp;eacute;n verifique &lt;a href=&quot;https://stackoverflow.com/questions/32797579/foreach-vs-foreachordered-in-java-8-stream&quot;&gt;esto&lt;/a&gt; para m&amp;aacute;s.</target>
        </trans-unit>
        <trans-unit id="22c727b2a9f2723354a008790444a6d3c6f5ce17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;An effective iterative solution over a Map is a 'for each' loop from Java 5 through Java 7. Here it is:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Una soluci&amp;oacute;n iterativa efectiva sobre un mapa es un bucle 'para cada' de Java 5 a Java 7. Aqu&amp;iacute; est&amp;aacute;:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4c3c99f01f82e3dd15f6dea31f73807e5a330c16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;From Java 8 you can use a lambda expression to iterate over a Map. It is an enhanced 'forEach'&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Desde Java 8 puede usar una expresi&amp;oacute;n lambda para iterar sobre un Mapa.&lt;/strong&gt; &lt;strong&gt;Es un 'forEach' mejorado&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8266e1e95a5d91ff447f8d45a4314d7d0606da42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Iterate over entries (Using forEach and Streams):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Iterar sobre entradas (Usar para cada uno y Streams):&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4ef22017e708698482a126b2fe682a8f6d486473" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Iterate over keys:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Iterar sobre las teclas:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cf9bdb43bd1b0449f7175e791319748eebbd91f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Iterate over values:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Iterar sobre valores:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b958957df67e5e3894ae54fdec131a5fab7b7758" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Java 8:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Java 8:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c4ac5345e9dfeab6eedab1bed3634a2d61b232bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Lambda&lt;/strong&gt; Expression Java 8</source>
          <target state="translated">&lt;strong&gt;Lambda&lt;/strong&gt; Expression Java 8</target>
        </trans-unit>
        <trans-unit id="cb33563a72610ed34b6b91ac165e4604be35ec62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; I am a committer for Eclipse Collections.</source>
          <target state="translated">&lt;strong&gt;Nota:&lt;/strong&gt; Soy un committer para Eclipse Collections.</target>
        </trans-unit>
        <trans-unit id="4eaa4758fc373a92b0951b602e363208503de373" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Perfomance tests&lt;/strong&gt; (mode = AverageTime, system = Windows&amp;nbsp;8.1 64-bit, Intel i7-4790 3.60 GHz, 16&amp;nbsp;GB)</source>
          <target state="translated">&lt;strong&gt;Pruebas de rendimiento&lt;/strong&gt; (modo = Tiempo promedio, sistema = Windows 8.1 de 64 bits, Intel i7-4790 3.60 GHz, 16 GB)</target>
        </trans-unit>
        <trans-unit id="0a648cd0606cca5d79438d4f156e8c36af2fbb7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;UPDATE&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a2c64a759bdeec979cf1625cb2640fed35b8352" translate="yes" xml:space="preserve">
          <source>All tests are on &lt;a href=&quot;https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/5.0-other-examples/src/main/java/other_examples/IterateThroughHashMapTest.java&quot;&gt;GitHub&lt;/a&gt;.</source>
          <target state="translated">Todas las pruebas est&amp;aacute;n en &lt;a href=&quot;https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/5.0-other-examples/src/main/java/other_examples/IterateThroughHashMapTest.java&quot;&gt;GitHub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e62b6b46bd13f4fdff912caff47e1c5ab9468154" translate="yes" xml:space="preserve">
          <source>Also one can use &lt;strong&gt;Spliterator&lt;/strong&gt; for the same.</source>
          <target state="translated">Tambi&amp;eacute;n se puede usar &lt;strong&gt;Spliterator&lt;/strong&gt; para lo mismo.</target>
        </trans-unit>
        <trans-unit id="d4a128155fdd1ff9b255b50be54783cd11c5ad9a" translate="yes" xml:space="preserve">
          <source>And yes, the order will depend on the implementation - as well as (possibly) the order of insertion and other hard-to-control factors.</source>
          <target state="translated">Y sí,el orden dependerá de la aplicación,así como (posiblemente)el orden de inserción y otros factores difíciles de controlar.</target>
        </trans-unit>
        <trans-unit id="1987a85346ebed06208fda36057d3abf53a7dac9" translate="yes" xml:space="preserve">
          <source>Below is the sample code that I tried using &lt;strong&gt;Lambda Expression&lt;/strong&gt;. This stuff is so cool. Must try.</source>
          <target state="translated">A continuaci&amp;oacute;n se muestra el c&amp;oacute;digo de muestra que prob&amp;eacute; usando &lt;strong&gt;Lambda Expression&lt;/strong&gt; . Esto es genial. Deber&amp;iacute;as intentar.</target>
        </trans-unit>
        <trans-unit id="0091670d7a16db16eebf59a5b133fa1d4fcd9465" translate="yes" xml:space="preserve">
          <source>Both of these considerations are covered in the graphic table above.</source>
          <target state="translated">Ambas consideraciones se tratan en la tabla gráfica de arriba.</target>
        </trans-unit>
        <trans-unit id="837ca224c76bb8e31244cbe08276255126afae2e" translate="yes" xml:space="preserve">
          <source>Concurrency. If you are manipulating the map across threads, you must use an implementation that supports concurrency. Or wrap the map with &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#synchronizedMap(java.util.Map)&quot;&gt;&lt;code&gt;Collections::synchronizedMap&lt;/code&gt;&lt;/a&gt; (less preferable).</source>
          <target state="translated">Concurrencia. Si est&amp;aacute; manipulando el mapa a trav&amp;eacute;s de subprocesos, debe usar una implementaci&amp;oacute;n que admita concurrencia. O ajuste el mapa con &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#synchronizedMap(java.util.Map)&quot;&gt; &lt;code&gt;Collections::synchronizedMap&lt;/code&gt; &lt;/a&gt; (menos preferible).</target>
        </trans-unit>
        <trans-unit id="a7a59840fd712513666eaaab628bba060fffd164" translate="yes" xml:space="preserve">
          <source>Custom order</source>
          <target state="translated">Pedido a medida</target>
        </trans-unit>
        <trans-unit id="688d350fb8020500a3a5be3e3b008424818af135" translate="yes" xml:space="preserve">
          <source>Different implementations of &lt;code&gt;Map&lt;/code&gt; maintain different ordering of the key-value pairs.</source>
          <target state="translated">Las diferentes implementaciones de &lt;code&gt;Map&lt;/code&gt; mantienen un orden diferente de los pares clave-valor.</target>
        </trans-unit>
        <trans-unit id="7c4c9d6bd088dbbd8d4fa9483665571f6a073ca9" translate="yes" xml:space="preserve">
          <source>Easy-peasy!</source>
          <target state="translated">Easy-peasy!</target>
        </trans-unit>
        <trans-unit id="4959fdef810c5bd96c8690ab36e2ce54b0823aaf" translate="yes" xml:space="preserve">
          <source>Enum-definition order</source>
          <target state="translated">Orden de definición de enumeración</target>
        </trans-unit>
        <trans-unit id="27a91e453073eb90ef706eff0718c26b5d331956" translate="yes" xml:space="preserve">
          <source>Example of using iterator and generics:</source>
          <target state="translated">Ejemplo de uso del iterador y los genéricos:</target>
        </trans-unit>
        <trans-unit id="dedaf2462a308ba9703f6ecfa549331ea9c670df" translate="yes" xml:space="preserve">
          <source>FYI, you can also use &lt;code&gt;map.keySet()&lt;/code&gt; and &lt;code&gt;map.values()&lt;/code&gt; if you're only interested in keys/values of the map and not the other.</source>
          <target state="translated">Para su informaci&amp;oacute;n, tambi&amp;eacute;n puede usar &lt;code&gt;map.keySet()&lt;/code&gt; y &lt;code&gt;map.values()&lt;/code&gt; si solo est&amp;aacute; interesado en las claves / valores del mapa y no en el otro.</target>
        </trans-unit>
        <trans-unit id="56136984733171a2679dc40bd33baad71f4c3786" translate="yes" xml:space="preserve">
          <source>For a map with 10000 elements,  score 37.606 is the best</source>
          <target state="translated">Para un mapa con 10.000 elementos,la puntuación de 37,606 es la mejor</target>
        </trans-unit>
        <trans-unit id="a5c0d4e335042175498e0ebf6327fd535efec693" translate="yes" xml:space="preserve">
          <source>For a map with 100000 elements,  score 1184.767 is the best</source>
          <target state="translated">Para un mapa con 100000 elementos,la puntuación de 1184.767 es la mejor</target>
        </trans-unit>
        <trans-unit id="c1de52942477197f09659d082fa1f4b07b8f1bd4" translate="yes" xml:space="preserve">
          <source>For a small map (100 elements), score 0.308 is the best</source>
          <target state="translated">Para un mapa pequeño (100 elementos),la puntuación de 0,308 es la mejor</target>
        </trans-unit>
        <trans-unit id="7c1760d6bcb4b3d1af55825b8f0c542185f248bd" translate="yes" xml:space="preserve">
          <source>For more information, follow &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html&quot;&gt;this&lt;/a&gt;.</source>
          <target state="translated">Para m&amp;aacute;s informaci&amp;oacute;n, sigue &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html&quot;&gt;esto&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fa0445de7e6bc5d4ad795d112414a663bfe8f9b3" translate="yes" xml:space="preserve">
          <source>Graphs (performance tests depending on map size)</source>
          <target state="translated">Gráficos (pruebas de rendimiento según el tamaño del mapa)</target>
        </trans-unit>
        <trans-unit id="bf9babdab1657af8a0b764ba2e4045ed70ec5482" translate="yes" xml:space="preserve">
          <source>HashMap (1):</source>
          <target state="translated">HashMap (1):</target>
        </trans-unit>
        <trans-unit id="8b2a0ebe1a9c40551264d3a2911adb4c9595e1ae" translate="yes" xml:space="preserve">
          <source>HashMap (2):</source>
          <target state="translated">HashMap (2):</target>
        </trans-unit>
        <trans-unit id="ae33e1c12dd25e01506d37831a6c63b1eed254c7" translate="yes" xml:space="preserve">
          <source>Here is comparison of their performances for a common data set stored in map by storing a million key value pairs in map and will iterate over map.</source>
          <target state="translated">Aquí está la comparación de sus rendimientos para un conjunto de datos comunes almacenados en el mapa al almacenar un millón de pares de valores clave en el mapa e iterar sobre el mapa.</target>
        </trans-unit>
        <trans-unit id="2944fefd1e8c80dfefdf09ccf6789028fa2e370d" translate="yes" xml:space="preserve">
          <source>How do I efficiently iterate over each entry in a Java Map</source>
          <target state="translated">¿Cómo puedo iterar eficientemente sobre cada entrada en un mapa Java</target>
        </trans-unit>
        <trans-unit id="8c44dd09a51d3d7e7030ada02609d672731914d5" translate="yes" xml:space="preserve">
          <source>I have referred &lt;a href=&quot;http://howtodoinjava.com/2013/04/01/performance-comparison-of-different-ways-to-iterate-over-hashmap/&quot;&gt;&lt;code&gt;this link&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">He referido &lt;a href=&quot;http://howtodoinjava.com/2013/04/01/performance-comparison-of-different-ways-to-iterate-over-hashmap/&quot;&gt; &lt;code&gt;this link&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9c86089bda3ea538b5612baeee4089a884b97993" translate="yes" xml:space="preserve">
          <source>If I have an object implementing the &lt;code&gt;Map&lt;/code&gt; interface in Java and I wish to iterate over every pair contained within it,  what is the most efficient way of going through the map?</source>
          <target state="translated">Si tengo un objeto que implementa la interfaz &lt;code&gt;Map&lt;/code&gt; en Java y deseo iterar sobre cada par que contiene, &amp;iquest;cu&amp;aacute;l es la forma m&amp;aacute;s eficiente de recorrer el mapa?</target>
        </trans-unit>
        <trans-unit id="7041d241864f2b22ad51ff33422107bb1546c0c8" translate="yes" xml:space="preserve">
          <source>If I have an object implementing the Map interface in Java and I wish to iterate over every pair contained within it, what is the most efficient way of going through the map?</source>
          <target state="translated">Si tengo un objeto que implementa la interfaz del mapa en Java y deseo iterar sobre cada par contenido en él,¿cuál es la forma más eficiente de recorrer el mapa?</target>
        </trans-unit>
        <trans-unit id="79fa69f9b9f2bab1a018ec5832646f7d9c599a86" translate="yes" xml:space="preserve">
          <source>If efficiency of looping the keys is a priority for your app, then choose a &lt;code&gt;Map&lt;/code&gt; implementation that maintains the keys in your desired order.</source>
          <target state="translated">Si la eficiencia del bucle de las claves es una prioridad para su aplicaci&amp;oacute;n, elija una implementaci&amp;oacute;n de &lt;code&gt;Map&lt;/code&gt; a que mantenga las claves en el orden deseado.</target>
        </trans-unit>
        <trans-unit id="6411814b84ed759c763447c4612e9d83026c997c" translate="yes" xml:space="preserve">
          <source>If you are using an enum such as &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/DayOfWeek.html&quot;&gt;&lt;code&gt;DayOfWeek&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/Month.html&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; as your keys, use the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/EnumMap.html&quot;&gt;&lt;code&gt;EnumMap&lt;/code&gt;&lt;/a&gt; class. Not only is this class &lt;em&gt;highly&lt;/em&gt; optimized to use very little memory and run very fast, it maintains your pairs in the order defined by the enum. For &lt;code&gt;DayOfWeek&lt;/code&gt;, for example, the key of &lt;code&gt;DayOfWeek.MONDAY&lt;/code&gt; will be first found when iterated, and the key of &lt;code&gt;DayOfWeek.SUNDAY&lt;/code&gt; will be last.</source>
          <target state="translated">Si est&amp;aacute; utilizando una enumeraci&amp;oacute;n como &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/DayOfWeek.html&quot;&gt; &lt;code&gt;DayOfWeek&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/Month.html&quot;&gt; &lt;code&gt;Month&lt;/code&gt; &lt;/a&gt; como sus claves, use la clase &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/EnumMap.html&quot;&gt; &lt;code&gt;EnumMap&lt;/code&gt; &lt;/a&gt; . Esta clase no solo est&amp;aacute; &lt;em&gt;altamente&lt;/em&gt; optimizada para usar muy poca memoria y ejecutarse muy r&amp;aacute;pido, sino que mantiene sus pares en el orden definido por la enumeraci&amp;oacute;n. Para &lt;code&gt;DayOfWeek&lt;/code&gt; , por ejemplo, la clave de &lt;code&gt;DayOfWeek.MONDAY&lt;/code&gt; se encontrar&amp;aacute; por primera vez cuando se itera, y la clave de &lt;code&gt;DayOfWeek.SUNDAY&lt;/code&gt; ser&amp;aacute; la &amp;uacute;ltima.</target>
        </trans-unit>
        <trans-unit id="23cd9f2b5ed48db7c1117c31ae3a319fe97b4847" translate="yes" xml:space="preserve">
          <source>If you have a generic untyped Map you can use:</source>
          <target state="translated">Si tienes un mapa genérico sin teclear que puedes usar:</target>
        </trans-unit>
        <trans-unit id="166cf4f9ea1423792bbb034bfbd9a29a1294960d" translate="yes" xml:space="preserve">
          <source>If you want a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Map.html&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; that keeps its pairs arranged by the &amp;ldquo;natural order&amp;rdquo; of the key, use &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/TreeMap.html&quot;&gt;&lt;code&gt;TreeMap&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html&quot;&gt;&lt;code&gt;ConcurrentSkipListMap&lt;/code&gt;&lt;/a&gt;. The term &amp;ldquo;natural order&amp;rdquo; means the class of the keys implements &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Comparable.html&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;. The value returned by the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Comparable.html#compareTo(T)&quot;&gt;&lt;code&gt;compareTo&lt;/code&gt;&lt;/a&gt; method is used for comparison in sorting.</source>
          <target state="translated">Si desea un &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Map.html&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; que mantenga sus pares ordenados por el &quot;orden natural&quot; de la clave, use &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/TreeMap.html&quot;&gt; &lt;code&gt;TreeMap&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html&quot;&gt; &lt;code&gt;ConcurrentSkipListMap&lt;/code&gt; &lt;/a&gt; . El t&amp;eacute;rmino &quot;orden natural&quot; significa la clase de los implementos de claves &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Comparable.html&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt; . El valor devuelto por el m&amp;eacute;todo &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Comparable.html#compareTo(T)&quot;&gt; &lt;code&gt;compareTo&lt;/code&gt; &lt;/a&gt; se utiliza para la comparaci&amp;oacute;n en la clasificaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="529bd36b670d6dd0399407ab228c35de68313ff8" translate="yes" xml:space="preserve">
          <source>If you want the pairs of your map to be kept in their original order in which you inserted them into the map, use &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/LinkedHashMap.html&quot;&gt;&lt;code&gt;LinkedHashMap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si desea que los pares de su mapa se mantengan en su orden original en el que los insert&amp;oacute; en el mapa, use &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/LinkedHashMap.html&quot;&gt; &lt;code&gt;LinkedHashMap&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7129ac34e2982430511674b7df7b084da57783b2" translate="yes" xml:space="preserve">
          <source>If you want to specify a custom sorting routine for your keys to be used in maintaining a sorted order, pass a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Comparator.html&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; implementation appropriate to the class of your keys. Use either &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/TreeMap.html&quot;&gt;&lt;code&gt;TreeMap&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html&quot;&gt;&lt;code&gt;ConcurrentSkipListMap&lt;/code&gt;&lt;/a&gt;, passing your &lt;code&gt;Comparator&lt;/code&gt;.</source>
          <target state="translated">Si desea especificar una rutina de clasificaci&amp;oacute;n personalizada para que sus claves se usen para mantener un orden ordenado, pase una implementaci&amp;oacute;n de &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Comparator.html&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt; apropiada para la clase de sus claves. Use &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/TreeMap.html&quot;&gt; &lt;code&gt;TreeMap&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html&quot;&gt; &lt;code&gt;ConcurrentSkipListMap&lt;/code&gt; &lt;/a&gt; , pasando su &lt;code&gt;Comparator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9315bf2cae9009ab8354820e1d5393ff67c46162" translate="yes" xml:space="preserve">
          <source>In Java 1.8 (Java 8) this has become lot easier by using &lt;strong&gt;forEach&lt;/strong&gt; method from Aggregate operations(&lt;strong&gt;Stream operations&lt;/strong&gt;) that looks similar to iterators from &lt;strong&gt;Iterable&lt;/strong&gt; Interface.</source>
          <target state="translated">En Java 1.8 (Java 8) esto se ha vuelto mucho m&amp;aacute;s f&amp;aacute;cil mediante el uso de &lt;strong&gt;cada&lt;/strong&gt; m&amp;eacute;todo de las operaciones de agregado ( &lt;strong&gt;operaciones de flujo&lt;/strong&gt; ) que se parece a los iteradores de la interfaz &lt;strong&gt;Iterable&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="35888f9edee70791965f52086d548982634b5327" translate="yes" xml:space="preserve">
          <source>In Java 8 you can do it clean and fast using the new lambdas features:</source>
          <target state="translated">En Java 8 puedes hacerlo limpio y rápido usando las nuevas características de las lambdas:</target>
        </trans-unit>
        <trans-unit id="d053ebfab1b4bad3db6c15f6e3252be1b563d13e" translate="yes" xml:space="preserve">
          <source>In Map one can Iteration over &lt;code&gt;keys&lt;/code&gt; and/or &lt;code&gt;values&lt;/code&gt; and/or &lt;code&gt;both (e.g., entrySet)&lt;/code&gt;  depends on one's interested in_ Like:</source>
          <target state="translated">En el mapa, se puede iterar sobre las &lt;code&gt;keys&lt;/code&gt; y / o &lt;code&gt;values&lt;/code&gt; y / o &lt;code&gt;both (e.g., entrySet)&lt;/code&gt; depende de la persona interesada en_ Me gusta:</target>
        </trans-unit>
        <trans-unit id="fc677eb8c592126da1f730119c25b473d0885049" translate="yes" xml:space="preserve">
          <source>In an idiosyncratic implementation, it might make some difference whether you use &lt;code&gt;map.keySet()&lt;/code&gt;, &lt;code&gt;map.entrySet()&lt;/code&gt; or something else. But I can't think of a reason why anyone would write it like that. Most likely it makes no difference to performance what you do.</source>
          <target state="translated">En una implementaci&amp;oacute;n idiosincr&amp;aacute;sica, puede hacer alguna diferencia si usa &lt;code&gt;map.keySet()&lt;/code&gt; , &lt;code&gt;map.entrySet()&lt;/code&gt; o algo m&amp;aacute;s. Pero no puedo pensar en una raz&amp;oacute;n por la que alguien lo escribir&amp;iacute;a as&amp;iacute;. Lo m&amp;aacute;s probable es que no influya en el rendimiento lo que haces.</target>
        </trans-unit>
        <trans-unit id="473fd68b5588936170d01e9b550860d05cf2d9c8" translate="yes" xml:space="preserve">
          <source>In choosing a &lt;code&gt;Map&lt;/code&gt; implementation, also consider:</source>
          <target state="translated">Al elegir una implementaci&amp;oacute;n de &lt;code&gt;Map&lt;/code&gt; a , tambi&amp;eacute;n considere:</target>
        </trans-unit>
        <trans-unit id="c24842ac42e680dc877680a2f5d56059350889d8" translate="yes" xml:space="preserve">
          <source>In theory, the most efficient way will depend on which implementation of Map. The official way to do this is to call &lt;code&gt;map.entrySet()&lt;/code&gt;, which returns a set of &lt;code&gt;Map.Entry&lt;/code&gt;, each of which contains a key and a value (&lt;code&gt;entry.getKey()&lt;/code&gt; and &lt;code&gt;entry.getValue()&lt;/code&gt;).</source>
          <target state="translated">En teor&amp;iacute;a, la forma m&amp;aacute;s eficiente depender&amp;aacute; de la implementaci&amp;oacute;n de Map. La forma oficial de hacer esto es llamar a &lt;code&gt;map.entrySet()&lt;/code&gt; , que devuelve un conjunto de &lt;code&gt;Map.Entry&lt;/code&gt; , cada uno de los cuales contiene una clave y un valor ( &lt;code&gt;entry.getKey()&lt;/code&gt; y &lt;code&gt;entry.getValue()&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="aef18bcaa1a6078d0596df965e6f06bff342eebb" translate="yes" xml:space="preserve">
          <source>Including documentation links to Oracle Docs.
For more on &lt;strong&gt;Lambda&lt;/strong&gt; go to this &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html&quot;&gt;link&lt;/a&gt; and must read &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/collections/streams/&quot;&gt;Aggregate Operations&lt;/a&gt; and for Spliterator go to this &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Spliterator.html&quot;&gt;link&lt;/a&gt;.</source>
          <target state="translated">Incluyendo enlaces de documentaci&amp;oacute;n a Oracle Docs. Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre &lt;strong&gt;Lambda,&lt;/strong&gt; vaya a este &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html&quot;&gt;enlace&lt;/a&gt; y debe leer &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/collections/streams/&quot;&gt;Operaciones agregadas&lt;/a&gt; y para Spliterator, vaya a este &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Spliterator.html&quot;&gt;enlace&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c287a1bbff0a047aa1cc86cd23da90c9abec2a7c" translate="yes" xml:space="preserve">
          <source>Java 8</source>
          <target state="translated">Java 8</target>
        </trans-unit>
        <trans-unit id="1a24293b0fdd436ea326a582b3900c6277396743" translate="yes" xml:space="preserve">
          <source>Just copy paste below statement to your code and rename the &lt;strong&gt;HashMap&lt;/strong&gt; variable from &lt;strong&gt;hm&lt;/strong&gt; to your HashMap variable to print out key-value pair.</source>
          <target state="translated">Simplemente copie la declaraci&amp;oacute;n pegar debajo de su c&amp;oacute;digo y cambie el nombre de la variable &lt;strong&gt;HashMap&lt;/strong&gt; de &lt;strong&gt;hm&lt;/strong&gt; a su variable HashMap para imprimir el par clave-valor.</target>
        </trans-unit>
        <trans-unit id="db5c42f3ae489e1d2055785ca9044320a3138887" translate="yes" xml:space="preserve">
          <source>LinkedHashMap (1):</source>
          <target state="translated">LinkedHashMap (1):</target>
        </trans-unit>
        <trans-unit id="73f20d040d451199d93293d63622c81c896ec906" translate="yes" xml:space="preserve">
          <source>LinkedHashMap (2):</source>
          <target state="translated">LinkedHashMap (2):</target>
        </trans-unit>
        <trans-unit id="81595b19783c5714a55f00459b2855988e0e079e" translate="yes" xml:space="preserve">
          <source>Most compact with Java 8:</source>
          <target state="translated">La más compacta con Java 8:</target>
        </trans-unit>
        <trans-unit id="2f2c621cb10233dbf9ece2193f2f19a3f155495a" translate="yes" xml:space="preserve">
          <source>NULLs. Some implementations forbid/accept a NULL as key and/or value.</source>
          <target state="translated">Nulos.Algunas implementaciones prohíben aceptar un NULL como clave o valor.</target>
        </trans-unit>
        <trans-unit id="f504a9f397b7b30ca39f0ef1407b932940292f78" translate="yes" xml:space="preserve">
          <source>Natural order</source>
          <target state="translated">Orden natural</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="00fcdda14949d42c1610edfba9ca80d41d59564f" translate="yes" xml:space="preserve">
          <source>Or:</source>
          <target state="translated">Or:</target>
        </trans-unit>
        <trans-unit id="58431d2cb2f2a436e30d687d47551e6350d00b91" translate="yes" xml:space="preserve">
          <source>Original insertion order</source>
          <target state="translated">Orden de inserción original</target>
        </trans-unit>
        <trans-unit id="67ea52f1a7ae74f014909d25b0bddf410e9fbbb3" translate="yes" xml:space="preserve">
          <source>Other considerations</source>
          <target state="translated">Otras consideraciones</target>
        </trans-unit>
        <trans-unit id="0b379a43d717dba06857b0da94da11fa13a38e2f" translate="yes" xml:space="preserve">
          <source>See this table I created summarizing the various &lt;code&gt;Map&lt;/code&gt; implementations bundled with Java 11. Specifically, notice the &lt;em&gt;iteration order&lt;/em&gt; column. Click/tap to zoom.</source>
          <target state="translated">Vea esta tabla que cre&amp;eacute; resumiendo las diversas implementaciones de &lt;code&gt;Map&lt;/code&gt; incluidas con Java 11. Espec&amp;iacute;ficamente, observe la columna de &lt;em&gt;orden de iteraci&amp;oacute;n&lt;/em&gt; . Haga clic / toque para ampliar.</target>
        </trans-unit>
        <trans-unit id="4595ac23a27791fe7fbe0d4d4c43740979d75813" translate="yes" xml:space="preserve">
          <source>Some &lt;code&gt;Map&lt;/code&gt; implementations promise a certain iteration order, others do not.</source>
          <target state="translated">Algunas implementaciones de &lt;code&gt;Map&lt;/code&gt; prometen un cierto orden de iteraci&amp;oacute;n, otras no.</target>
        </trans-unit>
        <trans-unit id="44ea68cf30e14f2ddc12c26d6ae286ba0a85cc9c" translate="yes" xml:space="preserve">
          <source>Suppose you have one Map like:</source>
          <target state="translated">Supongamos que tienes un mapa como:</target>
        </trans-unit>
        <trans-unit id="8c5fb6a3a0e3368214ec978de8a33e83c0fd6ed4" translate="yes" xml:space="preserve">
          <source>Table (perfomance tests depending on map size)</source>
          <target state="translated">Tabla (pruebas de rendimiento según el tamaño del mapa)</target>
        </trans-unit>
        <trans-unit id="f9f6bd1eb290901a88aeb60726443ff7d66c84d2" translate="yes" xml:space="preserve">
          <source>The advantage with streams is they can be parallelized easily in case we want to. We simply need to use &lt;code&gt;parallelStream()&lt;/code&gt; in place of &lt;code&gt;stream()&lt;/code&gt; above.</source>
          <target state="translated">La ventaja de las transmisiones es que pueden paralelizarse f&amp;aacute;cilmente en caso de que lo deseemos. Simplemente necesitamos usar &lt;code&gt;parallelStream()&lt;/code&gt; en lugar de &lt;code&gt;stream()&lt;/code&gt; arriba.</target>
        </trans-unit>
        <trans-unit id="dbc9eb3726815146c387b80d2f2f63f5ddb55da3" translate="yes" xml:space="preserve">
          <source>The code below shows iteration through LinkedHashMap and normal HashMap (example). You will see difference in the order:</source>
          <target state="translated">El siguiente código muestra la iteración a través de LinkedHashMap y HashMap normal (ejemplo).Verás la diferencia en el orden:</target>
        </trans-unit>
        <trans-unit id="e52b25a08f2a02df03a2dfe2046b8da6d3756b34" translate="yes" xml:space="preserve">
          <source>The correct way to do this is to use the accepted answer as it is the most efficient. I find the following code looks a bit cleaner.</source>
          <target state="translated">La forma correcta de hacerlo es usar la respuesta aceptada ya que es la más eficiente.Encuentro que el siguiente código parece un poco más limpio.</target>
        </trans-unit>
        <trans-unit id="40692755bf402ab70ec2f1031f4cdb1100ed8d13" translate="yes" xml:space="preserve">
          <source>The older &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/SortedMap.html&quot;&gt;&lt;code&gt;SortedMap&lt;/code&gt;&lt;/a&gt; interface is effectively supplanted by the newer &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/NavigableMap.html&quot;&gt;&lt;code&gt;NavigableMap&lt;/code&gt;&lt;/a&gt; interface. But you may find 3rd-party implementations implementing the older interface only.</source>
          <target state="translated">La interfaz m&amp;aacute;s antigua de &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/SortedMap.html&quot;&gt; &lt;code&gt;SortedMap&lt;/code&gt; &lt;/a&gt; es suplantada efectivamente por la nueva interfaz &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/NavigableMap.html&quot;&gt; &lt;code&gt;NavigableMap&lt;/code&gt; &lt;/a&gt; . Pero puede encontrar implementaciones de terceros que implementan solo la interfaz anterior.</target>
        </trans-unit>
        <trans-unit id="f4598b67765b6de694c769bc44b167a07f3ddbda" translate="yes" xml:space="preserve">
          <source>The ordering will always depend on the specific map implementation.
Using Java&amp;nbsp;8 you can use either of these:</source>
          <target state="translated">El orden siempre depender&amp;aacute; de la implementaci&amp;oacute;n espec&amp;iacute;fica del mapa. Usando Java 8 puede usar cualquiera de estos:</target>
        </trans-unit>
        <trans-unit id="bb0c23da405fcd789494b9eeb5a645b5955b59c8" translate="yes" xml:space="preserve">
          <source>The result will be the same (same order). The entrySet backed by the map so you are getting the same order. The second one is handy as it allows you to use lambdas, e.g. if you want only to print only Integer objects that are greater than 5:</source>
          <target state="translated">El resultado será el mismo (mismo orden).La entradaSet respaldada por el mapa,así que se obtiene el mismo orden.La segunda es muy útil ya que te permite usar lambdas,por ejemplo si quieres imprimir sólo objetos enteros que sean mayores de 5:</target>
        </trans-unit>
        <trans-unit id="9bbc8868f5a914986cb34d081536fd74a7785d90" translate="yes" xml:space="preserve">
          <source>The type of &lt;code&gt;k&lt;/code&gt; and &lt;code&gt;v&lt;/code&gt; will be inferred by the compiler and there is no need to use &lt;code&gt;Map.Entry&lt;/code&gt; anymore.</source>
          <target state="translated">El compilador &lt;code&gt;Map.Entry&lt;/code&gt; tipo de &lt;code&gt;k&lt;/code&gt; y &lt;code&gt;v&lt;/code&gt; y ya no es necesario usar Map.Entry .</target>
        </trans-unit>
        <trans-unit id="f90f64e5ecb7bd2bb1395d60d9486cc542f43710" translate="yes" xml:space="preserve">
          <source>Then you can do something like the below to iterate over map elements.</source>
          <target state="translated">Entonces puedes hacer algo como lo siguiente para iterar sobre los elementos del mapa.</target>
        </trans-unit>
        <trans-unit id="bbfb9fdec90164bf482004ec9ff49df454fa2660" translate="yes" xml:space="preserve">
          <source>There are a lot of ways to do this. Below is a few simple steps:</source>
          <target state="translated">Hay muchas maneras de hacer esto.A continuación,algunos pasos sencillos:</target>
        </trans-unit>
        <trans-unit id="45fc9393135cf25ad84bcc71ef5e748db800c55d" translate="yes" xml:space="preserve">
          <source>There are several ways to iterate over map.</source>
          <target state="translated">Hay varias maneras de iterar sobre el mapa.</target>
        </trans-unit>
        <trans-unit id="8a85b761dfc0b6d7c4853d436ef0b85c865f89b6" translate="yes" xml:space="preserve">
          <source>This is a two part question:</source>
          <target state="translated">Esta es una pregunta de dos partes:</target>
        </trans-unit>
        <trans-unit id="b96a5d51c7d4e75b147cac932f1df8154b606b4e" translate="yes" xml:space="preserve">
          <source>To summarize the other answers and combine them with what I know, I found 10 main ways to do this (see below). Also, I wrote some performance tests (see results below). For example, if we want to find the sum of all of the keys and values of a map, we can write:</source>
          <target state="translated">Para resumir las otras respuestas y combinarlas con lo que sé,encontré 10 formas principales de hacerlo (ver abajo).Además,escribí algunas pruebas de rendimiento (ver resultados más abajo).Por ejemplo,si queremos encontrar la suma de todas las claves y valores de un mapa,podemos escribir:</target>
        </trans-unit>
        <trans-unit id="eea8e2fbfdadecffc34ccb60883d55b390d62628" translate="yes" xml:space="preserve">
          <source>Try this with Java 1.4:</source>
          <target state="translated">Pruebe esto con Java 1.4:</target>
        </trans-unit>
        <trans-unit id="3e692e2cdce8ba138bff14befa18b3272b620418" translate="yes" xml:space="preserve">
          <source>Two of those implement the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/NavigableMap.html&quot;&gt;&lt;code&gt;NavigableMap&lt;/code&gt;&lt;/a&gt; interface: &lt;code&gt;TreeMap&lt;/code&gt; &amp;amp; &lt;code&gt;ConcurrentSkipListMap&lt;/code&gt;.</source>
          <target state="translated">Dos de ellos implementan la interfaz &lt;code&gt;TreeMap&lt;/code&gt; : TreeMap y &lt;code&gt;ConcurrentSkipListMap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0814b143955158188c01052f3ceb5ba0f4bf1a4c" translate="yes" xml:space="preserve">
          <source>Typical code for iterating over a map is:</source>
          <target state="translated">El código típico para iterar sobre un mapa es:</target>
        </trans-unit>
        <trans-unit id="b0e1da2614eac9ef96d91f4a14fda3c203ed934e" translate="yes" xml:space="preserve">
          <source>Use Java 8:</source>
          <target state="translated">Usa Java 8:</target>
        </trans-unit>
        <trans-unit id="633b42502a5c51154b31c24409538f2cf25201f7" translate="yes" xml:space="preserve">
          <source>Using &lt;strong&gt;IterableMap&lt;/strong&gt; of &lt;code&gt;Apache Collections&lt;/code&gt;</source>
          <target state="translated">Usando &lt;strong&gt;IterableMap&lt;/strong&gt; of &lt;code&gt;Apache Collections&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5e6ec89e4a5b8a80f2496e8cf6a0a4081c374aab" translate="yes" xml:space="preserve">
          <source>Using &lt;strong&gt;MutableMap&lt;/strong&gt; of Eclipse (CS) collections</source>
          <target state="translated">Uso de &lt;strong&gt;colecciones MutableMap&lt;/strong&gt; de Eclipse (CS)</target>
        </trans-unit>
        <trans-unit id="b54a5fdfbc9ecf10962725149d2d419b3abbb3f0" translate="yes" xml:space="preserve">
          <source>Using &lt;strong&gt;for&lt;/strong&gt; and &lt;strong&gt;Map.Entry&lt;/strong&gt;</source>
          <target state="translated">Usando &lt;strong&gt;para&lt;/strong&gt; y &lt;strong&gt;Map.Entry&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eba2f7e5a0ff9fa992e5f7680f4ac9e7a9c58aea" translate="yes" xml:space="preserve">
          <source>Using &lt;strong&gt;forEach&lt;/strong&gt; from Java 8</source>
          <target state="translated">Usando &lt;strong&gt;forEach&lt;/strong&gt; desde Java 8</target>
        </trans-unit>
        <trans-unit id="a545ca6c32cca8a0529723e65006632305936d38" translate="yes" xml:space="preserve">
          <source>Using &lt;strong&gt;foreach&lt;/strong&gt; and &lt;strong&gt;Map.Entry&lt;/strong&gt;</source>
          <target state="translated">Usando &lt;strong&gt;foreach&lt;/strong&gt; y &lt;strong&gt;Map.Entry&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="485ee3eaf55ad9e70f346bcb0862491cf0ee98ee" translate="yes" xml:space="preserve">
          <source>Using &lt;strong&gt;iterator&lt;/strong&gt; and &lt;strong&gt;Map.Entry&lt;/strong&gt;</source>
          <target state="translated">Usando &lt;strong&gt;iterador&lt;/strong&gt; y &lt;strong&gt;Map.Entry&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7cc9935ec102d94e6a964ac34ff58f749b4af47d" translate="yes" xml:space="preserve">
          <source>Using &lt;strong&gt;keySet&lt;/strong&gt; and &lt;strong&gt;foreach&lt;/strong&gt;</source>
          <target state="translated">Usando &lt;strong&gt;keySet&lt;/strong&gt; y &lt;strong&gt;foreach&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="88e9bb2e701d85507ea9e8debd7b4fbd4ad3778c" translate="yes" xml:space="preserve">
          <source>Using &lt;strong&gt;keySet&lt;/strong&gt; and &lt;strong&gt;iterator&lt;/strong&gt;</source>
          <target state="translated">Usando &lt;strong&gt;keySet&lt;/strong&gt; e &lt;strong&gt;iterator&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="36dae4ef0cd75cfeb8ecebf9eba9a9a61d11f34e" translate="yes" xml:space="preserve">
          <source>Using the Java 8 &lt;strong&gt;Stream API parallel&lt;/strong&gt;</source>
          <target state="translated">Usando el Java 8 &lt;strong&gt;Stream API paralelo&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5caf9ed2a72d6f4ecbca766fb5691949d6216417" translate="yes" xml:space="preserve">
          <source>Using the Java 8 &lt;strong&gt;Stream API&lt;/strong&gt;</source>
          <target state="translated">Usando la &lt;strong&gt;API&lt;/strong&gt; Java 8 &lt;strong&gt;Stream&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eafcfcc9f356a37cd9ee651b3aa678c42fcbcb9e" translate="yes" xml:space="preserve">
          <source>We have got &lt;code&gt;forEach&lt;/code&gt; method that accepts a &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html&quot;&gt;lambda expression&lt;/a&gt;. We have also got &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html&quot;&gt;stream&lt;/a&gt; APIs. Consider a map:</source>
          <target state="translated">Tenemos para &lt;code&gt;forEach&lt;/code&gt; m&amp;eacute;todo que acepta una &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html&quot;&gt;expresi&amp;oacute;n lambda&lt;/a&gt; . Tambi&amp;eacute;n tenemos API de &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html&quot;&gt;transmisi&amp;oacute;n&lt;/a&gt; . Considere un mapa:</target>
        </trans-unit>
        <trans-unit id="d798e0a7eca0befff8709b5ebe731b0fa73ec725" translate="yes" xml:space="preserve">
          <source>Will the ordering of elements depend on the specific map implementation that I have for the interface?</source>
          <target state="translated">¿Dependerá el orden de los elementos de la implementación del mapa específico que tengo para la interfaz?</target>
        </trans-unit>
        <trans-unit id="017762b012dd7225113538796ddba61ae61e2c5a" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; (formerly &lt;a href=&quot;https://github.com/goldmansachs/gs-collections&quot;&gt;GS Collections&lt;/a&gt;), you would use the forEachKeyValue method on the &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/eclipse-collections-api/src/main/java/org/eclipse/collections/api/map/MapIterable.java&quot;&gt;MapIterable&lt;/a&gt; interface, which is inherited by the MutableMap and ImmutableMap interfaces and their implementations.</source>
          <target state="translated">Con &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; (anteriormente &lt;a href=&quot;https://github.com/goldmansachs/gs-collections&quot;&gt;GS Collections&lt;/a&gt; ), usar&amp;iacute;a el m&amp;eacute;todo forEachKeyValue en la interfaz &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/eclipse-collections-api/src/main/java/org/eclipse/collections/api/map/MapIterable.java&quot;&gt;MapIterable&lt;/a&gt; , que heredan las interfaces MutableMap e ImmutableMap y sus implementaciones.</target>
        </trans-unit>
        <trans-unit id="306de5f65025cadf9565e4afbdf42027db4cb2dc" translate="yes" xml:space="preserve">
          <source>With &lt;strong&gt;Java 8&lt;/strong&gt;</source>
          <target state="translated">Con &lt;strong&gt;Java 8&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4699cd9129494ddc388093886dfdad742d8561b2" translate="yes" xml:space="preserve">
          <source>With Java 8 lambda syntax, you can write the code as follows:</source>
          <target state="translated">Con la sintaxis lambda de Java 8,puedes escribir el código de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="b84aef87a2bc298b8e63f4075a8e2f44a93fdcfb" translate="yes" xml:space="preserve">
          <source>Yes, absolutely.</source>
          <target state="translated">Sí,por supuesto.</target>
        </trans-unit>
        <trans-unit id="cae53b76e40d2202c18f68f4690b03274ac40cb7" translate="yes" xml:space="preserve">
          <source>Yes, the order depends on the specific Map implementation.</source>
          <target state="translated">Sí,el orden depende de la implementación específica del mapa.</target>
        </trans-unit>
        <trans-unit id="daf91a238253e2d658f686a2323d495a7c1aa9a8" translate="yes" xml:space="preserve">
          <source>You can do it using generics:</source>
          <target state="translated">Puedes hacerlo usando genéricos:</target>
        </trans-unit>
        <trans-unit id="c8f6998bce11971227c73926226c4fc1e993e492" translate="yes" xml:space="preserve">
          <source>You can see there are &lt;strong&gt;four &lt;code&gt;Map&lt;/code&gt; implementations maintaining an order&lt;/strong&gt;:</source>
          <target state="translated">Puede ver que hay &lt;strong&gt;cuatro implementaciones de &lt;code&gt;Map&lt;/code&gt; mantienen un orden&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="1cbe0c6bd90ebdac70a867735970ee3858618266" translate="yes" xml:space="preserve">
          <source>You can use lambda expressions:</source>
          <target state="translated">Puedes usar expresiones lambda:</target>
        </trans-unit>
        <trans-unit id="bd68512ae08ef0e4cfbba091825597ceb90fe6f4" translate="yes" xml:space="preserve">
          <source>[edit] I wrote &lt;code&gt;valueSet()&lt;/code&gt; originally but of course &lt;code&gt;entrySet()&lt;/code&gt; is actually the answer.</source>
          <target state="translated">[editar] Escrib&amp;iacute; &lt;code&gt;valueSet()&lt;/code&gt; originalmente pero, por supuesto, &lt;code&gt;entrySet()&lt;/code&gt; es en realidad la respuesta.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
