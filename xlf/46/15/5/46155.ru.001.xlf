<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/46155">
    <body>
      <group id="46155">
        <trans-unit id="c9900fcc65e0be104350f210414eee5f116eb87e" translate="yes" xml:space="preserve">
          <source>(...) We get a more practical implementation of RFC 2822 if we omit the syntax using double quotes and square brackets. &lt;strong&gt;It will still match 99.99% of all email addresses in actual use today.&lt;/strong&gt;</source>
          <target state="translated">(...) Мы получим более практическую реализацию RFC 2822, если мы опустим синтаксис, используя двойные кавычки и квадратные скобки. &lt;strong&gt;Он по-прежнему будет соответствовать 99,99% всех адресов электронной почты, которые используются сегодня.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c3b5d01380b8c1dcd1ad280a061ed69f2c78d5f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://jsfiddle.net/edwinthomas25/z6wev5L0/&quot;&gt;jsFiddle&lt;/a&gt; link</source>
          <target state="translated">ссылка &lt;a href=&quot;http://jsfiddle.net/edwinthomas25/z6wev5L0/&quot;&gt;jsFiddle&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f7e3850e125c7d3d2a1bbc2bf2b4ebdd7602be0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Email_address#Examples&quot;&gt;https://en.wikipedia.org/wiki/Email_address#Examples&lt;/a&gt;&lt;a href=&quot;https://fr.wikipedia.org/wiki/Adresse_%C3%A9lectronique#Syntaxe_exacte&quot;&gt;https://fr.wikipedia.org/wiki/Adresse_%C3%A9lectronique#Syntaxe_exacte&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Email_address#Examples&quot;&gt;https://en.wikipedia.org/wiki/Email_address#Examples&lt;/a&gt;&lt;a href=&quot;https://fr.wikipedia.org/wiki/Adresse_%C3%A9lectronique#Syntaxe_exacte&quot;&gt;https://fr.wikipedia.org/wiki/Adresse_%C3%A9lectronique#Syntaxe_exacte&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94e288bc4d1208f43d25800c6e81d3a8aaa47e2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(str.length - lastDotPos) &amp;gt; 2&lt;/code&gt;: There should be enough characters after the last dot to form a two-character domain. I'm not sure if the brackets are necessary.</source>
          <target state="translated">&lt;code&gt;(str.length - lastDotPos) &amp;gt; 2&lt;/code&gt; : После последней точки должно быть достаточно символов для формирования двухсимвольного домена. Я не уверен, что скобки необходимы.</target>
        </trans-unit>
        <trans-unit id="c7c111c87df1234659dafe02d39a5fdee62a97df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lastAtPos &amp;gt; 0&lt;/code&gt;: There should be something (the email username) before the last &lt;code&gt;@&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lastAtPos &amp;gt; 0&lt;/code&gt; : должно быть что-то (имя пользователя электронной почты) перед последним &lt;code&gt;@&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55cff3e34b43920049bec68d26cb1f95f215d6a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lastAtPos &amp;lt; lastDotPos&lt;/code&gt;: Last &lt;code&gt;@&lt;/code&gt; should be before last &lt;code&gt;.&lt;/code&gt; since &lt;code&gt;@&lt;/code&gt; cannot be part of server name (as far as I know).</source>
          <target state="translated">&lt;code&gt;lastAtPos &amp;lt; lastDotPos&lt;/code&gt; : Last &lt;code&gt;@&lt;/code&gt; должен быть перед последним &lt;code&gt;.&lt;/code&gt; поскольку &lt;code&gt;@&lt;/code&gt; не может быть частью имени сервера (насколько я знаю).</target>
        </trans-unit>
        <trans-unit id="490240bf90511707d51003d6b0ecd29b5fd5debb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lastDotPos &amp;gt; 2&lt;/code&gt;: There should be at least three characters before the last dot, for example &lt;code&gt;a@b.com&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lastDotPos &amp;gt; 2&lt;/code&gt; : перед последней точкой должно быть не менее трех символов, например &lt;code&gt;a@b.com&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e95ecb104fc6f6f4f0c446d297e10333260e7b04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;str.indexOf('@@') == -1&lt;/code&gt;: There should be no &lt;code&gt;@@&lt;/code&gt; in the address. Even if &lt;code&gt;@&lt;/code&gt; appears as the last character in email username, it has to be quoted so &lt;code&gt;&quot;&lt;/code&gt; would be between that &lt;code&gt;@&lt;/code&gt; and the last &lt;code&gt;@&lt;/code&gt; in the address.</source>
          <target state="translated">&lt;code&gt;str.indexOf('@@') == -1&lt;/code&gt; : в адресе не должно быть &lt;code&gt;@@&lt;/code&gt; . Даже если &lt;code&gt;@&lt;/code&gt; появляется в качестве последнего символа в имени пользователя электронной почты, его нужно заключить в кавычки, чтобы &lt;code&gt;&quot;&lt;/code&gt; было между этим &lt;code&gt;@&lt;/code&gt; и последним &lt;code&gt;@&lt;/code&gt; в адресе.</target>
        </trans-unit>
        <trans-unit id="b2f448975c7d7ce0ade29f009045a250ffef3285" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1- Validation of email format:&lt;/strong&gt; Making sure if the email complies with the format and pattern of emails in RFC 5322 and if the TLD actually exists. A list of all valid TLDs can be found &lt;a href=&quot;http://data.iana.org/TLD/tlds-alpha-by-domain.txt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;1- Проверка формата электронной почты:&lt;/strong&gt; Убедитесь, что электронная почта соответствует формату и шаблону электронных писем в RFC 5322 и действительно ли существует TLD. Список всех действительных TLD можно найти &lt;a href=&quot;http://data.iana.org/TLD/tlds-alpha-by-domain.txt&quot;&gt;здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="72aebd76d57cb550e303461fb57ba140a793cfc6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2- Making sure the email actually exists:&lt;/strong&gt; For doing this, &lt;strong&gt;the only option&lt;/strong&gt; is &lt;a href=&quot;https://davidcel.is/posts/stop-validating-email-addresses-with-regex/#just-send-them-an-email-already&quot;&gt;to send the users an email&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;2. Убедитесь, что электронная почта действительно существует.&lt;/strong&gt; Для этого &lt;strong&gt;единственной возможностью&lt;/strong&gt; является &lt;a href=&quot;https://davidcel.is/posts/stop-validating-email-addresses-with-regex/#just-send-them-an-email-already&quot;&gt;отправка пользователям электронной почты&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="abd92687b99044b4eddf773d671c4667439b4622" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Note&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="f633af6eb48c9e0b8af0d18976d74129ba756046" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Show this test : &lt;a href=&quot;https://regex101.com/r/LHJ9gU/1&quot;&gt;https://regex101.com/r/LHJ9gU/1&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Показать этот тест: &lt;a href=&quot;https://regex101.com/r/LHJ9gU/1&quot;&gt;https://regex101.com/r/LHJ9gU/1&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2d5ce6846b7eb2409986c51bc4a515382a776cc6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Wikipedia standard mail syntax :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Википедия стандартный почтовый синтаксис:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="297c8518f856cbda751268ce424749e63f0c28d1" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;Emphasis mine&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;Акцент мой&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="8fe50eb48ca2b3e732cca1bc24539853528194c5" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;valid e-mail address&lt;/strong&gt; is a string that matches the &lt;code&gt;email&lt;/code&gt; production of the following ABNF, the character set for which is Unicode.</source>
          <target state="translated">&lt;strong&gt;Допустимый адрес электронной почты&lt;/strong&gt; - это строка, которая соответствует &lt;code&gt;email&lt;/code&gt; для следующего ABNF, набор символов для которого - Unicode.</target>
        </trans-unit>
        <trans-unit id="d8812909686aedb08074742b5f572064a6720486" translate="yes" xml:space="preserve">
          <source>A further change you could make is to allow any two-letter country code top level domain, and only specific generic top level domains. &lt;strong&gt;This regex filters dummy email addresses like &lt;code&gt;asdf@adsf.adsf&lt;/code&gt;&lt;/strong&gt;. You &lt;strong&gt;will need to update it as new top-level domains are added&lt;/strong&gt;.</source>
          <target state="translated">Еще одно изменение, которое вы можете внести, - разрешить использование любого двухбуквенного домена верхнего уровня с кодом страны и только определенных общих доменов верхнего уровня. &lt;strong&gt;Это регулярное выражение фильтрует фиктивные адреса электронной почты, такие как &lt;code&gt;asdf@adsf.adsf&lt;/code&gt; &lt;/strong&gt; . Вам &lt;strong&gt;нужно будет обновить его по мере добавления новых доменов верхнего уровня&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="7923e3b47cb736d7dab4697baaade704b4e85a49" translate="yes" xml:space="preserve">
          <source>A good practice is to validate your data on the client, but double-check the validation on the server. With this in mind, you can simply check whether a string looks like a valid email address on the client and perform the strict check on the server.</source>
          <target state="translated">Хорошей практикой является проверка ваших данных на клиенте,но перепроверьте проверку на сервере.Помня об этом,вы можете просто проверить,похожа ли строка на действительный адрес электронной почты на клиенте,и выполнить строгую проверку на сервере.</target>
        </trans-unit>
        <trans-unit id="b2671ec3f0126e4d02b72ab3a1bade3235b1b574" translate="yes" xml:space="preserve">
          <source>A solution that does not check the existence of the TLD is incomplete.</source>
          <target state="translated">Решение,которое не проверяет существование ДВУ,является неполным.</target>
        </trans-unit>
        <trans-unit id="2645882e0c71d880bc16972169f19a2b50019df8" translate="yes" xml:space="preserve">
          <source>All email addresses contain an 'at' (i.e. @) symbol. Test that necessary condition:</source>
          <target state="translated">Все адреса электронной почты содержат символ 'at' (т.е.@).Проверьте это необходимое условие:</target>
        </trans-unit>
        <trans-unit id="3ba11e47b63968b8537457a8e7dcb585e385cc7c" translate="yes" xml:space="preserve">
          <source>Almost all answers to this questions suggest using Regex to validate emails addresses. I think Regex is only good for a rudimentary validation. It seems that the checking validation of email addresses is actually two separate problems:</source>
          <target state="translated">Почти все ответы на эти вопросы предполагают использование Regex для подтверждения адресов электронной почты.Я думаю,что Регекс хорош только для рудиментарной проверки.Похоже,что проверка валидации адресов электронной почты на самом деле является двумя отдельными проблемами:</target>
        </trans-unit>
        <trans-unit id="3e1a0cf7cfe603c9a4a7d9df75f3f7cc159c581a" translate="yes" xml:space="preserve">
          <source>And you can see the result in &lt;a href=&quot;http://regexr.com/3dnsr&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">И вы можете увидеть результат &lt;a href=&quot;http://regexr.com/3dnsr&quot;&gt;здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e26b13a81cb76e8dc9e53aad0fcb3cbbd55af273" translate="yes" xml:space="preserve">
          <source>Apparently, that's it:</source>
          <target state="translated">Очевидно,это все:</target>
        </trans-unit>
        <trans-unit id="7be7eff5fcaa57b778137a6635105c0ed343ce92" translate="yes" xml:space="preserve">
          <source>But keep in mind that one should not rely only upon JavaScript validation. JavaScript can easily be disabled. This should be validated on the server side as well.</source>
          <target state="translated">Но имейте в виду,что не следует полагаться только на JavaScript валидацию.JavaScript можно легко отключить.Это должно быть проверено и на стороне сервера.</target>
        </trans-unit>
        <trans-unit id="b68bf870b6ac941897eabd25f10774762e5c319f" translate="yes" xml:space="preserve">
          <source>But, of course, that's ignoring internationalization.</source>
          <target state="translated">Но,конечно,это игнорирование интернационализации.</target>
        </trans-unit>
        <trans-unit id="598cce1cb437a7291b550485e277d93fa9c3231b" translate="yes" xml:space="preserve">
          <source>Correct validation of email address in compliance with the RFCs is not something that can be achieved with a one-liner regular expression. An article with the best solution I've found in PHP is &lt;em&gt;&lt;a href=&quot;http://www.dominicsayers.com/isemail/&quot;&gt;What is a valid email address?&lt;/a&gt;&lt;/em&gt;. Obviously, it has been ported to Java. &lt;strike&gt;I think the function is too complex to be ported and used in JavaScript.&lt;/strike&gt; JavaScript/node.js port: &lt;a href=&quot;https://www.npmjs.com/package/email-addresses&quot;&gt;https://www.npmjs.com/package/email-addresses&lt;/a&gt;.</source>
          <target state="translated">Корректная проверка адреса электронной почты в соответствии с RFC не может быть достигнута с помощью регулярного выражения с одной строкой. Статья с лучшим решением, которое я нашел в PHP: &amp;laquo; &lt;em&gt;&lt;a href=&quot;http://www.dominicsayers.com/isemail/&quot;&gt;Что такое действующий адрес электронной почты?&lt;/a&gt;&lt;/em&gt; , Очевидно, он был портирован на Java. &lt;strike&gt;Я думаю, что функция слишком сложна для переноса и использования в JavaScript.&lt;/strike&gt; Порт JavaScript / node.js: &lt;a href=&quot;https://www.npmjs.com/package/email-addresses&quot;&gt;https://www.npmjs.com/package/email-addresses&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a09d8fe71d819660f00ffa7e97f5581804bd696d" translate="yes" xml:space="preserve">
          <source>Do this:</source>
          <target state="translated">Сделай это:</target>
        </trans-unit>
        <trans-unit id="05c3b1a94746d3fccfe85d46d421da2c58a21981" translate="yes" xml:space="preserve">
          <source>Don't bother with anything more complicated. Even if you could perfectly determine whether an email is RFC-syntactically valid, that wouldn't tell you whether it belongs to the person who supplied it. That's what really matters.</source>
          <target state="translated">Не утруждай себя ничем более сложным.Даже если бы вы могли в совершенстве определить,является ли письмо RFC-синтаксическим,это не сказало бы вам,принадлежит ли оно тому,кто его отправил.Вот что действительно важно.</target>
        </trans-unit>
        <trans-unit id="ed80d0ac1ad5c36583371929851e98f77ee4bd86" translate="yes" xml:space="preserve">
          <source>Else you can use &lt;a href=&quot;http://en.wikipedia.org/wiki/JQuery&quot;&gt;jQuery&lt;/a&gt;. Inside rules define:</source>
          <target state="translated">Еще вы можете использовать &lt;a href=&quot;http://en.wikipedia.org/wiki/JQuery&quot;&gt;jQuery&lt;/a&gt; . Внутренние правила определяют:</target>
        </trans-unit>
        <trans-unit id="5409b5439879adf5c9d1c5dade0e2314ed41c540" translate="yes" xml:space="preserve">
          <source>Example JavaScript function:</source>
          <target state="translated">Пример функции JavaScript:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Расширить фрагмент</target>
        </trans-unit>
        <trans-unit id="844a18267f7570ccd804466117309648571134db" translate="yes" xml:space="preserve">
          <source>Explanation:</source>
          <target state="translated">Explanation:</target>
        </trans-unit>
        <trans-unit id="8868cfeb157de5566f026a1ba1a73030eace2f77" translate="yes" xml:space="preserve">
          <source>For example, although the address &lt;code&gt;example@example.ccc&lt;/code&gt; will pass the regex, it is not a valid email, because &lt;code&gt;ccc&lt;/code&gt; is not a top-level domain by IANA.</source>
          <target state="translated">Например, хотя адрес &lt;code&gt;example@example.ccc&lt;/code&gt; будет проходить через регулярное выражение, он не является действительным адресом электронной почты, поскольку &lt;code&gt;ccc&lt;/code&gt; не является доменом верхнего уровня IANA.</target>
        </trans-unit>
        <trans-unit id="f64a17670388386ceaa9ed07df87ed6ee552e122" translate="yes" xml:space="preserve">
          <source>From the &lt;a href=&quot;http://www.w3.org/TR/html5/forms.html#valid-e-mail-address&quot;&gt;HTML5 spec&lt;/a&gt;:</source>
          <target state="translated">Из &lt;a href=&quot;http://www.w3.org/TR/html5/forms.html#valid-e-mail-address&quot;&gt;спецификации HTML5&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="8b7362a21449731075ab0568d5243407a17a9201" translate="yes" xml:space="preserve">
          <source>HTML5 itself has email validation. If your browser supports HTML5 then you can use the following code.</source>
          <target state="translated">Сам HTML5 имеет подтверждение по электронной почте.Если ваш браузер поддерживает HTML5,то вы можете использовать следующий код.</target>
        </trans-unit>
        <trans-unit id="3c5d991566a0444b653b62f3a726e4cbfa2ea911" translate="yes" xml:space="preserve">
          <source>Here is a very good discussion about using regular expressions to validate email addresses; &quot;&lt;a href=&quot;http://fightingforalostcause.net/misc/2006/compare-email-regex.php&quot;&gt;Comparing E-mail Address Validating Regular Expressions&lt;/a&gt;&quot;</source>
          <target state="translated">Вот очень хорошая дискуссия об использовании регулярных выражений для проверки адресов электронной почты; &amp;laquo; &lt;a href=&quot;http://fightingforalostcause.net/misc/2006/compare-email-regex.php&quot;&gt;Сравнение адреса электронной почты, проверяющего регулярные выражения&lt;/a&gt; &amp;raquo;</target>
        </trans-unit>
        <trans-unit id="d1cdbf2dd912f5611f94b61c4454aa6be4060872" translate="yes" xml:space="preserve">
          <source>Here is the current top expression, that is JavaScript compatible, for reference purposes:</source>
          <target state="translated">Вот текущее верхнее выражение,совместимое с JavaScript,для справочных целей:</target>
        </trans-unit>
        <trans-unit id="55eaa6630852df71584d8d2c86bd087264a8b11c" translate="yes" xml:space="preserve">
          <source>Here's an &lt;a href=&quot;http://tools.ietf.org/html/rfc22&quot;&gt;RFC22&lt;/a&gt; regular expression for emails:</source>
          <target state="translated">Вот регулярное выражение &lt;a href=&quot;http://tools.ietf.org/html/rfc22&quot;&gt;RFC22&lt;/a&gt; для электронных писем:</target>
        </trans-unit>
        <trans-unit id="d736275ef39d215814e56f8d44f47eb889f757a2" translate="yes" xml:space="preserve">
          <source>Here's an example of it being used in JavaScript (with the case insensitive flag &lt;code&gt;i&lt;/code&gt; at the end).</source>
          <target state="translated">Вот пример его использования в JavaScript (с нечувствительным к регистру флагом &lt;code&gt;i&lt;/code&gt; в конце).</target>
        </trans-unit>
        <trans-unit id="c9732739a8fa3aa580bff2f06e5dd97f04136a72" translate="yes" xml:space="preserve">
          <source>Here's an example of the above in action:</source>
          <target state="translated">Вот пример вышеизложенного в действии:</target>
        </trans-unit>
        <trans-unit id="01c3718f65d977f8cd82fb726cefca178b261fbf" translate="yes" xml:space="preserve">
          <source>Here's the JavaScript function I use to check if a string looks like a valid mail address:</source>
          <target state="translated">Вот функция JavaScript,которую я использую для проверки того,выглядит ли строка как действительный почтовый адрес:</target>
        </trans-unit>
        <trans-unit id="a4119d32b8e5f26b12cdc6b955694a7dcc855ea3" translate="yes" xml:space="preserve">
          <source>Here's the example of regular expresion that accepts unicode:</source>
          <target state="translated">Вот пример регулярной экспрессии,которая принимает юникод:</target>
        </trans-unit>
        <trans-unit id="9b207348e5f8be6ff4ddfc15b025a7b3adf609d1" translate="yes" xml:space="preserve">
          <source>How to validate an email address in JavaScript</source>
          <target state="translated">Как подтвердить адрес электронной почты на JavaScript</target>
        </trans-unit>
        <trans-unit id="0a1508da59f3e193ff6ad730178c89b7035e88ba" translate="yes" xml:space="preserve">
          <source>I have found this to be the best solution:</source>
          <target state="translated">Я нашел это лучшее решение:</target>
        </trans-unit>
        <trans-unit id="bc3f6146702ab3d562c01bfa05025b507e479858" translate="yes" xml:space="preserve">
          <source>I'm really looking forward to solve this problem.
So I modified email validation regular expression above</source>
          <target state="translated">Я очень хочу решить эту проблему.Поэтому я изменил регулярное выражение проверки электронной почты выше</target>
        </trans-unit>
        <trans-unit id="a248e3c0f90d17a4614d8a626dbd5b50035fec7a" translate="yes" xml:space="preserve">
          <source>I've put together an example in the fiddle &lt;a href=&quot;http://jsfiddle.net/boldewyn/2b6d5/&quot;&gt;http://jsfiddle.net/boldewyn/2b6d5/&lt;/a&gt;. Combined with feature detection and the bare-bones validation from &lt;a href=&quot;https://stackoverflow.com/a/9204568/324094&quot;&gt;Squirtle's Answer&lt;/a&gt;, it frees you from the regular expression massacre and does not bork on old browsers.</source>
          <target state="translated">Я собрал пример в скрипке &lt;a href=&quot;http://jsfiddle.net/boldewyn/2b6d5/&quot;&gt;http://jsfiddle.net/boldewyn/2b6d5/&lt;/a&gt; . В сочетании с обнаружением функций и простой проверкой Squirtle &lt;a href=&quot;https://stackoverflow.com/a/9204568/324094&quot;&gt;'s Answer&lt;/a&gt; он освобождает вас от расправы с регулярными выражениями и не работает в старых браузерах.</target>
        </trans-unit>
        <trans-unit id="d188ab7a43c60291a59eaf6d495c2bf08eaa1e06" translate="yes" xml:space="preserve">
          <source>I've slightly modified &lt;a href=&quot;https://stackoverflow.com/a/48800/4832311&quot;&gt;Jaymon's answer&lt;/a&gt; for people who want really simple validation in the form of:</source>
          <target state="translated">Я немного изменил &lt;a href=&quot;https://stackoverflow.com/a/48800/4832311&quot;&gt;ответ Джеймона&lt;/a&gt; для людей, которые хотят действительно простой проверки в виде:</target>
        </trans-unit>
        <trans-unit id="315db90cf313699f7ac0f7eae75e11e0348020d6" translate="yes" xml:space="preserve">
          <source>In contrast to &lt;em&gt;squirtle&lt;/em&gt;, here is a complex solution, but it does a mighty fine job of validating emails properly:</source>
          <target state="translated">В отличие от &lt;em&gt;Squirtle&lt;/em&gt; , здесь есть сложное решение, но оно отлично справляется с проверкой электронной почты:</target>
        </trans-unit>
        <trans-unit id="1993773f9359f09e2b2ca1d4dfc92ca22cf0598b" translate="yes" xml:space="preserve">
          <source>In modern browsers you can build on top of @Sushil's answer with pure JavaScript and the &lt;a href=&quot;http://en.wikipedia.org/wiki/Document_Object_Model&quot;&gt;DOM&lt;/a&gt;:</source>
          <target state="translated">В современных браузерах вы можете опираться на ответ @ Sushil с помощью чистого JavaScript и &lt;a href=&quot;http://en.wikipedia.org/wiki/Document_Object_Model&quot;&gt;DOM&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="bc006f7ff05133b272e5b578dbdd5f956c986749" translate="yes" xml:space="preserve">
          <source>In short, however, the only way to be absolutely, positively sure that what the user entered is in fact an email is to actually send an email and see what happens. Other than that it's all just guesses.</source>
          <target state="translated">Короче говоря,однако,единственный способ быть абсолютно уверенным в том,что то,что пользователь ввел,на самом деле является электронным письмом,это отправить электронное письмо и посмотреть,что произойдет.Кроме того,это все лишь догадки.</target>
        </trans-unit>
        <trans-unit id="347af515eb75a3a68eafcbe4972692356a8313b5" translate="yes" xml:space="preserve">
          <source>Instead of new &lt;code&gt;RegExp&lt;/code&gt;, just try writing the &lt;code&gt;regexp&lt;/code&gt; out like this:</source>
          <target state="translated">Вместо нового &lt;code&gt;RegExp&lt;/code&gt; , просто попробуйте написать &lt;code&gt;regexp&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="9148998183a2fd2d6f858d4387b1b15dbe4f562a" translate="yes" xml:space="preserve">
          <source>Is there a regular expression to validate an email address in JavaScript?</source>
          <target state="translated">Существует ли регулярное выражение для проверки адреса электронной почты в JavaScript?</target>
        </trans-unit>
        <trans-unit id="5c7df193a907d0300211071328cac09439891293" translate="yes" xml:space="preserve">
          <source>It allows the following formats:</source>
          <target state="translated">Это позволяет использовать следующие форматы:</target>
        </trans-unit>
        <trans-unit id="a99b489816040651aa2d1fd871c66978d3772b83" translate="yes" xml:space="preserve">
          <source>It usually catches the most obvious errors that the user makes and assures that the form is mostly right, which is what JavaScript validation is all about.</source>
          <target state="translated">Обычно он ловит самые очевидные ошибки,которые делает пользователь,и уверяет,что форма в основном правильная,что и есть то,что JavaScript валидация.</target>
        </trans-unit>
        <trans-unit id="714d1728ca370ac5f7d7ab12a787c823095501a4" translate="yes" xml:space="preserve">
          <source>It's clearly versatile and allows the all-important international characters, while still enforcing the basic anything@anything.anything format. It will block spaces which are technically allowed by RFC, but they are so rare that I'm happy to do this.</source>
          <target state="translated">Он явно универсален и позволяет использовать все важные международные символы,при этом соблюдая основной формат anything@anything.anything.Он будет блокировать пробелы,которые технически разрешены RFC,но они настолько редки,что я с удовольствием это сделаю.</target>
        </trans-unit>
        <trans-unit id="c6c2d56e6e9e295b27bec153395a14c0aa7220fe" translate="yes" xml:space="preserve">
          <source>It's hard to get an email validator 100% correct. The only real way to get it correct would be to send a test email to the account. That said, there are a few basic checks that can help make sure that you're getting something reasonable.</source>
          <target state="translated">Сложно получить валидатор электронной почты на 100% верный.Единственный реальный способ получить его корректность-это отправить тестовое электронное письмо в аккаунт.Тем не менее,есть несколько основных проверок,которые могут помочь убедиться,что вы получаете что-то разумное.</target>
        </trans-unit>
        <trans-unit id="f8411e7c9328a36b4cbb59bb9fec5b52faa58933" translate="yes" xml:space="preserve">
          <source>JavaScript can match a regular expression:</source>
          <target state="translated">JavaScript может соответствовать регулярному выражению:</target>
        </trans-unit>
        <trans-unit id="462f80793e03276bd6ae7f412a16f5c7dab9a1c7" translate="yes" xml:space="preserve">
          <source>Just for completeness, &lt;a href=&quot;http://www.regular-expressions.info/email.html&quot;&gt;here you have another RFC 2822 compliant regex&lt;/a&gt;</source>
          <target state="translated">Просто для полноты, &lt;a href=&quot;http://www.regular-expressions.info/email.html&quot;&gt;здесь у вас есть еще одно регулярное выражение в соответствии с RFC 2822&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19a532c8bc61c311f583455c80ffe37067bbc9bb" translate="yes" xml:space="preserve">
          <source>Modified</source>
          <target state="translated">Modified</target>
        </trans-unit>
        <trans-unit id="43b887329c39991ed9342ff2808e53e763031ba1" translate="yes" xml:space="preserve">
          <source>More info: &lt;a href=&quot;http://www.regular-expressions.info/email.html&quot;&gt;http://www.regular-expressions.info/email.html&lt;/a&gt;</source>
          <target state="translated">Дополнительная информация: &lt;a href=&quot;http://www.regular-expressions.info/email.html&quot;&gt;http://www.regular-expressions.info/email.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76276228f6a79582360d144c94d0e6a56cd45f09" translate="yes" xml:space="preserve">
          <source>My knowledge of &lt;a href=&quot;http://en.wikipedia.org/wiki/Regular_expression&quot;&gt;regular expressions&lt;/a&gt; is not that good. That's why I check the general syntax with a simple regular expression first and check more specific options with other functions afterwards. This may not be not the best technical solution, but this way I'm way more flexible and faster.</source>
          <target state="translated">Мои знания &lt;a href=&quot;http://en.wikipedia.org/wiki/Regular_expression&quot;&gt;регулярных выражений&lt;/a&gt; не так хороши. Вот почему я сначала проверяю общий синтаксис с помощью простого регулярного выражения, а затем проверяю более конкретные параметры с другими функциями. Возможно, это не лучшее техническое решение, но таким образом я стал более гибким и быстрым.</target>
        </trans-unit>
        <trans-unit id="55fe3dadfccb59bf35ba0495e729e2f066123820" translate="yes" xml:space="preserve">
          <source>Now since you can only cover 90% of the cases, write something like:</source>
          <target state="translated">Теперь,когда ты можешь покрыть только 90% случаев,напиши что-нибудь вроде этого:</target>
        </trans-unit>
        <trans-unit id="83cc9c6ad80b66e95f932227fdb6532df66d4148" translate="yes" xml:space="preserve">
          <source>Often when storing email addresses in the database I make them lowercase and, in practice, regexs can usually be marked case insensitive. In those cases this is slightly shorter:</source>
          <target state="translated">Часто при хранении адресов электронной почты в базе данных я делаю их строчными,а на практике регексы обычно могут быть помечены как нечувствительные к регистру.В таких случаях это немного короче:</target>
        </trans-unit>
        <trans-unit id="c0a8060f3b1102da85ef318544468f24221e6515" translate="yes" xml:space="preserve">
          <source>Original</source>
          <target state="translated">Original</target>
        </trans-unit>
        <trans-unit id="a70eee5dd9722ceee12b43905700a9eadb6e7b6e" translate="yes" xml:space="preserve">
          <source>Regex for validating email address</source>
          <target state="translated">Регекс для подтверждения адреса электронной почты</target>
        </trans-unit>
        <trans-unit id="82f6a0d73051b421407fc4a9df3d93285e7f9585" translate="yes" xml:space="preserve">
          <source>Regex update 2018! try this</source>
          <target state="translated">Регекс-обновление 2018! Попробуйте это</target>
        </trans-unit>
        <trans-unit id="9696f8b9a85d838f4f9eed88d0e6759d6f674fbf" translate="yes" xml:space="preserve">
          <source>Second, check to make sure that a period comes after the &lt;code&gt;@&lt;/code&gt; sign, and make sure that there are characters between the &lt;code&gt;@&lt;/code&gt;s and periods.</source>
          <target state="translated">Во-вторых, убедитесь, что точка стоит после знака &lt;code&gt;@&lt;/code&gt; , и убедитесь, что между символами &lt;code&gt;@&lt;/code&gt; и точками есть символы.</target>
        </trans-unit>
        <trans-unit id="a55492e77609ea34ff33de5ed0aaf5c9ff5c7e90" translate="yes" xml:space="preserve">
          <source>Simply check out if the entered email address is valid or not using HTML.</source>
          <target state="translated">Просто проверьте,действителен ли введенный адрес электронной почты или не используется HTML.</target>
        </trans-unit>
        <trans-unit id="ccbd8edc536e38c01c66151bde97d343991d5964" translate="yes" xml:space="preserve">
          <source>So even when following official standards, there are still trade-offs to be made. &lt;strong&gt;&lt;em&gt;Don't blindly copy regular expressions from online libraries or discussion forums. Always test them on your own data and with your own applications.&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">Таким образом, даже при соблюдении официальных стандартов все же приходится идти на компромиссы. &lt;strong&gt;&lt;em&gt;Не копируйте вслепую регулярные выражения из онлайн-библиотек или дискуссионных форумов.&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;Всегда проверяйте их на ваших собственных данных и с вашими собственными приложениями.&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1838964c9b448ad5c03e2b47885618f97f813137" translate="yes" xml:space="preserve">
          <source>Some things to improve:</source>
          <target state="translated">Некоторые вещи нужно улучшить:</target>
        </trans-unit>
        <trans-unit id="1518ae57cfe2ed8a133afc03011cb0263227ca7b" translate="yes" xml:space="preserve">
          <source>Taken from &lt;a href=&quot;http://fightingforalostcause.net/misc/2006/compare-email-regex.php&quot;&gt;http://fightingforalostcause.net/misc/2006/compare-email-regex.php&lt;/a&gt; on Oct 1 '10.</source>
          <target state="translated">Взято с &lt;a href=&quot;http://fightingforalostcause.net/misc/2006/compare-email-regex.php&quot;&gt;http://fightingforalostcause.net/misc/2006/compare-email-regex.php&lt;/a&gt; 1 октября 2010 года.</target>
        </trans-unit>
        <trans-unit id="b6fb1c04bf21f84884bce0fe4918114f74c0cab0" translate="yes" xml:space="preserve">
          <source>Technically some emails can include quotes in the section before the &lt;code&gt;@&lt;/code&gt; symbol with escape characters inside the quotes (so your email user can be obnoxious and contain stuff like &lt;code&gt;@&lt;/code&gt; and &lt;code&gt;&quot;...&quot;&lt;/code&gt; as long as it's written in quotes). NOBODY DOES THIS EVER! It's obsolete. But, it IS included in the true &lt;a href=&quot;https://www.ietf.org/rfc/rfc2822.txt&quot;&gt;RFC 2822&lt;/a&gt; standard, and omitted here.</source>
          <target state="translated">Технически, некоторые электронные письма могут содержать кавычки в разделе перед символом &lt;code&gt;@&lt;/code&gt; с escape-символами внутри кавычек (так что ваш пользователь электронной почты может быть противным и содержать такие вещи, как &lt;code&gt;@&lt;/code&gt; и &lt;code&gt;&quot;...&quot;&lt;/code&gt; , если он написан в кавычках). ЭТО НИКОГДА НЕ ДЕЛАЕТ! Это устарело. Но он включен в настоящий стандарт &lt;a href=&quot;https://www.ietf.org/rfc/rfc2822.txt&quot;&gt;RFC 2822&lt;/a&gt; и здесь опущен.</target>
        </trans-unit>
        <trans-unit id="2c42e1dbf8f30a22743d35f41dec49ad83dcbd78" translate="yes" xml:space="preserve">
          <source>The following JavaScript- and Perl-compatible regular expression is an implementation of the above definition.</source>
          <target state="translated">Следующее JavaScript-и Perl-совместимое регулярное выражение является реализацией приведенного выше определения.</target>
        </trans-unit>
        <trans-unit id="acf10a9a6c9b7ded0b17a3c178b673c5a6b22d4e" translate="yes" xml:space="preserve">
          <source>The most common errors I've come across are spaces (especially at the beginning and end) and occasionally a double dot.</source>
          <target state="translated">Самые распространенные ошибки,с которыми я сталкивался,это пробелы (особенно в начале и в конце),а иногда и двойная точка.</target>
        </trans-unit>
        <trans-unit id="e575176116c75b6cd106b88dfa99d3c160478169" translate="yes" xml:space="preserve">
          <source>The official standard is known as &lt;a href=&quot;https://tools.ietf.org/html/rfc2822#section-3.4.1&quot;&gt;RFC 2822&lt;/a&gt;. It describes the syntax that valid email addresses must adhere to. You can (&lt;strong&gt;but you shouldn't&lt;/strong&gt; &amp;mdash; &lt;a href=&quot;http://www.regular-expressions.info/email.html&quot;&gt;read on&lt;/a&gt;) implement it with this regular expression:</source>
          <target state="translated">Официальный стандарт известен как &lt;a href=&quot;https://tools.ietf.org/html/rfc2822#section-3.4.1&quot;&gt;RFC 2822&lt;/a&gt; . Он описывает синтаксис, которому должны соответствовать действительные адреса электронной почты. Вы можете ( &lt;strong&gt;но не должны&lt;/strong&gt; &lt;a href=&quot;http://www.regular-expressions.info/email.html&quot;&gt;читать дальше&lt;/a&gt; ) реализовать это с помощью этого регулярного выражения:</target>
        </trans-unit>
        <trans-unit id="941d12bdf6866507609a342766f852faec160c1e" translate="yes" xml:space="preserve">
          <source>The regular expression provided by Microsoft within &lt;a href=&quot;http://en.wikipedia.org/wiki/ASP.NET_MVC_Framework&quot;&gt;ASP.NET MVC&lt;/a&gt; is</source>
          <target state="translated">Регулярное выражение, предоставляемое Microsoft в &lt;a href=&quot;http://en.wikipedia.org/wiki/ASP.NET_MVC_Framework&quot;&gt;ASP.NET MVC&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="45144d24f561ff5e2946df80fc43f503ab825e60" translate="yes" xml:space="preserve">
          <source>The regular expression:</source>
          <target state="translated">Регулярное выражение:</target>
        </trans-unit>
        <trans-unit id="16042eba1725f6c0d572cb3c8443990439ce36bb" translate="yes" xml:space="preserve">
          <source>The world needs simpler code...</source>
          <target state="translated">Миру нужен более простой код...</target>
        </trans-unit>
        <trans-unit id="94032b10ee1f8d5a97f30f3c782c842eb909e10a" translate="yes" xml:space="preserve">
          <source>There isn't any need to write a function for validation.</source>
          <target state="translated">Нет необходимости писать функцию для проверки.</target>
        </trans-unit>
        <trans-unit id="4653e258277090cf523691e460e7e53ec60cf120" translate="yes" xml:space="preserve">
          <source>There's something you have to understand the second you decide to use a regular expression to validate emails: &lt;a href=&quot;http://ex-parrot.com/~pdw/Mail-RFC822-Address.html&quot;&gt;It's probably not a good idea&lt;/a&gt;. Once you have come to terms with that, there are many implementations out there that can get you halfway there, &lt;a href=&quot;http://www.regular-expressions.info/email.html&quot;&gt;this article sums them up nicely.&lt;/a&gt;</source>
          <target state="translated">Есть кое-что, что вы должны понять, как только вы решите использовать регулярное выражение для проверки писем: &lt;a href=&quot;http://ex-parrot.com/~pdw/Mail-RFC822-Address.html&quot;&gt;это, вероятно, не очень хорошая идея&lt;/a&gt; . Как только вы примиритесь с этим, есть много реализаций, которые могут помочь вам на полпути, &lt;a href=&quot;http://www.regular-expressions.info/email.html&quot;&gt;эта статья подытоживает их.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="630e1ebe59de2ebe03b87070aee8483c90aca2e4" translate="yes" xml:space="preserve">
          <source>This is how &lt;a href=&quot;https://github.com/chriso/validator.js&quot;&gt;node-validator&lt;/a&gt; does it:</source>
          <target state="translated">Вот как это делает &lt;a href=&quot;https://github.com/chriso/validator.js&quot;&gt;узел-валидатор&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="e923b31f669b92caf8faf75409dfa855b536d9c3" translate="yes" xml:space="preserve">
          <source>This is the correct RFC822 version.</source>
          <target state="translated">Это правильная версия RFC822.</target>
        </trans-unit>
        <trans-unit id="98135052de405526350db1b89c86c41136ccf880" translate="yes" xml:space="preserve">
          <source>This requirement is a &lt;a href=&quot;http://www.w3.org/TR/html5/introduction.html#willful-violation&quot;&gt;willful violation&lt;/a&gt; of RFC 5322, which defines a syntax for e-mail addresses that is simultaneously too strict (before the &quot;@&quot; character), too vague (after the &quot;@&quot; character), and too lax (allowing comments, whitespace characters, and quoted strings in manners unfamiliar to most users) to be of practical use here.</source>
          <target state="translated">Это требование является &lt;a href=&quot;http://www.w3.org/TR/html5/introduction.html#willful-violation&quot;&gt;преднамеренным нарушением&lt;/a&gt; RFC 5322, который определяет синтаксис для адресов электронной почты, который является одновременно слишком строгим (до символа &amp;laquo;@&amp;raquo;), слишком расплывчатым (после символа &amp;laquo;@&amp;raquo;) и слишком слабым (допускает комментарии , пробельные символы и строки в кавычках способами, незнакомыми большинству пользователей) для практического использования здесь.</target>
        </trans-unit>
        <trans-unit id="48569f5e4634aefd2b80beb29b7935143c8e99ad" translate="yes" xml:space="preserve">
          <source>This was stolen from &lt;a href=&quot;http://codesnippets.joyent.com/posts/show/1917&quot;&gt;http://codesnippets.joyent.com/posts/show/1917&lt;/a&gt;</source>
          <target state="translated">Это было украдено с &lt;a href=&quot;http://codesnippets.joyent.com/posts/show/1917&quot;&gt;http://codesnippets.joyent.com/posts/show/1917&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72bc65d3fc80e4c4bca49e2352036074e3d2e1fd" translate="yes" xml:space="preserve">
          <source>To test that, send a validation message.</source>
          <target state="translated">Чтобы проверить это,отправьте сообщение о проверке.</target>
        </trans-unit>
        <trans-unit id="280b7af2c0707f401085e67adc9102c8145b601f" translate="yes" xml:space="preserve">
          <source>Use like so:</source>
          <target state="translated">Используй так:</target>
        </trans-unit>
        <trans-unit id="d07fe7db1c7da2a64b448acb9bf6362ec1ad00db" translate="yes" xml:space="preserve">
          <source>Use this code inside your validator function:</source>
          <target state="translated">Используйте этот код внутри вашей функции валидатора:</target>
        </trans-unit>
        <trans-unit id="57073d762acf8b6ec0f1442441f428af780cc6e5" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;http://en.wikipedia.org/wiki/Regular_expression&quot;&gt;regular expressions&lt;/a&gt; is probably the best way. You can see a bunch of tests &lt;a href=&quot;http://jsfiddle.net/ghvj4gy9/embedded/result,js/&quot;&gt;here&lt;/a&gt; (taken from &lt;a href=&quot;https://cs.chromium.org/chromium/src/third_party/blink/web_tests/fast/forms/resources/ValidityState-typeMismatch-email.js?q=ValidityState-typeMismatch-email.js&amp;amp;sq=package:chromium&amp;amp;dr&quot;&gt;chromium&lt;/a&gt;)</source>
          <target state="translated">Использование &lt;a href=&quot;http://en.wikipedia.org/wiki/Regular_expression&quot;&gt;регулярных выражений&lt;/a&gt; , вероятно, лучший способ. Вы можете увидеть кучу тестов &lt;a href=&quot;http://jsfiddle.net/ghvj4gy9/embedded/result,js/&quot;&gt;здесь&lt;/a&gt; (взяты из &lt;a href=&quot;https://cs.chromium.org/chromium/src/third_party/blink/web_tests/fast/forms/resources/ValidityState-typeMismatch-email.js?q=ValidityState-typeMismatch-email.js&amp;amp;sq=package:chromium&amp;amp;dr&quot;&gt;хрома&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="b9e8f0aa49270c5886db87d3f533dcbfba02090e" translate="yes" xml:space="preserve">
          <source>Which I post here in case it's flawed - though it's always been perfect for my needs.</source>
          <target state="translated">Который я размещаю здесь на случай,если он испорчен-хотя он всегда был идеально подходит для моих нужд.</target>
        </trans-unit>
        <trans-unit id="ca6567da36e820bab2c3f907ddc5877f381c711d" translate="yes" xml:space="preserve">
          <source>Why?  &lt;strong&gt;It's based on &lt;a href=&quot;https://www.ietf.org/rfc/rfc2822.txt&quot;&gt;RFC 2822&lt;/a&gt;&lt;/strong&gt;, which is a standard ALL email addresses MUST adhere to.  And I'm not sure why you'd bother with something &quot;simpler&quot;... you're gonna copy and paste it anyway ;)</source>
          <target state="translated">Почему? &lt;strong&gt;Он основан на &lt;a href=&quot;https://www.ietf.org/rfc/rfc2822.txt&quot;&gt;RFC 2822&lt;/a&gt;&lt;/strong&gt; , который является стандартным ВСЕМ адресам электронной почты, которые ДОЛЖНЫ придерживаться. И я не уверен, почему вы возитесь с чем-то &amp;laquo;более простым&amp;raquo; ... вы все равно скопируете и вставите его;)</target>
        </trans-unit>
        <trans-unit id="5e1bff561da6219badfcaad8cb451347e48e4246" translate="yes" xml:space="preserve">
          <source>Wow, there are lots of complexity here. If all you want to do is just catch the most obvious syntax errors, I would do something like this:</source>
          <target state="translated">Ух ты,здесь много сложностей.Если все,что вы хотите сделать,это просто поймать самые очевидные синтаксические ошибки,я бы сделал что-то вроде этого:</target>
        </trans-unit>
        <trans-unit id="97b604f9ee54aee64d0bc1a6ff444c9f6b9302b7" translate="yes" xml:space="preserve">
          <source>You can refine it. For instance, 'aaa@' is valid. But overall you get the gist. And don't get carried away... A simple 90% solution is better than 100% solution that does not work.</source>
          <target state="translated">Ты можешь его усовершенствовать.Например,'aaa@' действителен.Но в целом вы получаете суть.И не увлекайся...Простое 90% решение лучше,чем 100% решение,которое не работает.</target>
        </trans-unit>
        <trans-unit id="f3ea2dc3cd08e78009685d0096abc89812a523e9" translate="yes" xml:space="preserve">
          <source>You should not use regular expressions to validate an input string to check if it's an email. It's too complicated and would not cover all the cases.</source>
          <target state="translated">Не следует использовать регулярные выражения для проверки правильности вводимой строки,чтобы проверить,не является ли она электронным письмом.Это слишком сложно и не покрывает все случаи.</target>
        </trans-unit>
        <trans-unit id="7dd4057835b8dc1717f15922fc3cc2257c048d1e" translate="yes" xml:space="preserve">
          <source>more info &lt;a href=&quot;https://git.io/vhEfc&quot;&gt;https://git.io/vhEfc&lt;/a&gt;</source>
          <target state="translated">больше информации &lt;a href=&quot;https://git.io/vhEfc&quot;&gt;https://git.io/vhEfc&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6e11122ef5af8d566438931e8c2ffc049747762" translate="yes" xml:space="preserve">
          <source>to pass the examples in &lt;a href=&quot;https://en.wikipedia.org/wiki/Email_address#cite_note-20/syntax&quot;&gt;Wikipedia Email Address&lt;/a&gt;.</source>
          <target state="translated">передать примеры в &lt;a href=&quot;https://en.wikipedia.org/wiki/Email_address#cite_note-20/syntax&quot;&gt;адрес электронной почты Википедии&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d0462cbe40aaaa8c3f944bec1e809689cec9b0a3" translate="yes" xml:space="preserve">
          <source>typscript version complete</source>
          <target state="translated">полная версия типскрипта</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
