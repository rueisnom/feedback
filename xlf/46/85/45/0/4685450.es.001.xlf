<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/4685450">
    <body>
      <group id="4685450">
        <trans-unit id="83ca03fe1d75fd5700c66a6a6778846449f04e8a" translate="yes" xml:space="preserve">
          <source>(1/3) means Integer division, thats why you can not get decimal value from this division. To solve this problem use:</source>
          <target state="translated">(13)significa división entera,por eso no se puede obtener el valor decimal de esta división.Para resolver este problema usa:</target>
        </trans-unit>
        <trans-unit id="13c829a0c029b2c71efa88015d62a1dd72a6c964" translate="yes" xml:space="preserve">
          <source>1 and 3 are integer contants and so Java does an integer division which's result is 0. If you want to write double constants you have to write &lt;code&gt;1.0&lt;/code&gt; and &lt;code&gt;3.0&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1 y 3 son contenidos enteros, por lo que Java hace una divisi&amp;oacute;n entera cuyo resultado es 0. Si desea escribir constantes dobles, debe escribir &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1.0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;3.0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8df4aafa92d4d5d1c73fa0da94152dd40999b4f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1/3&lt;/code&gt; uses integer division as both sides are integers.</source>
          <target state="translated">&lt;code&gt;1/3&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usa la divisi&amp;oacute;n de enteros ya que ambos lados son enteros.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="baaa2c0e143279b27b6dacba2736c772a9f50631" translate="yes" xml:space="preserve">
          <source>A simple working example is enough to prove this</source>
          <target state="translated">Un simple ejemplo de trabajo es suficiente para probar esto</target>
        </trans-unit>
        <trans-unit id="1a4542f0a184a792bac13618252f332080fe9d26" translate="yes" xml:space="preserve">
          <source>A small example using Eclipse to show that even an addition of two &lt;code&gt;short&lt;/code&gt;s will not be that easy :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un peque&amp;ntilde;o ejemplo usando Eclipse para mostrar que incluso una adici&amp;oacute;n de dos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;short&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no ser&amp;aacute; tan f&amp;aacute;cil:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c3e4ecd4d1599993fa5cfb874445271c0d3b1d1" translate="yes" xml:space="preserve">
          <source>Also, note that if &lt;em&gt;both&lt;/em&gt; operands (numbers) are given as floats; 3.0 and 1.0, or even just the &lt;em&gt;first&lt;/em&gt;, then floating-point arithmetic is used, giving you &lt;code&gt;0.333...&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s, tenga en cuenta que si &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ambos&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; operandos (n&amp;uacute;meros) se dan como flotantes; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3.0 y 1.0, o incluso s&amp;oacute;lo el &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;primero&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y luego aritm&amp;eacute;tica de punto flotante se utiliza, d&amp;aacute;ndole &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0.333...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1143ef123ba581b8c839b0f8b8144caa503a97d8" translate="yes" xml:space="preserve">
          <source>An operation on only integers casts the result of the operation to an integer.</source>
          <target state="translated">Una operación sólo sobre números enteros arroja el resultado de la operación a un número entero.</target>
        </trans-unit>
        <trans-unit id="9223e3823771b04837acdd363cbe975ad8fe3823" translate="yes" xml:space="preserve">
          <source>And an example is always the best way to translate the JLS ;)</source>
          <target state="translated">Y un ejemplo es siempre la mejor manera de traducir el JLS ;)</target>
        </trans-unit>
        <trans-unit id="22e5f7c582f7be1e686b0e2be36e78dd98f3c769" translate="yes" xml:space="preserve">
          <source>And the mix of both integer and floating value result in floating values as said</source>
          <target state="translated">Y la mezcla de ambos valores,entero y flotante,resulta en valores flotantes como se dice</target>
        </trans-unit>
        <trans-unit id="bcbbefc3b17aaa55178f2b37a98feaf58eeb1f57" translate="yes" xml:space="preserve">
          <source>As @Noldorin says, if both operators are integers, then integer division is used.</source>
          <target state="translated">Como dice @Noldorin,si ambos operadores son enteros,entonces se usa la división de enteros.</target>
        </trans-unit>
        <trans-unit id="5ca4b084d70132b40628c1a9143cfa7ea2dedfd9" translate="yes" xml:space="preserve">
          <source>Because it treats 1 and 3 as integers, therefore rounding the result down to 0, so that it is an integer.</source>
          <target state="translated">Porque trata el 1 y el 3 como números enteros,por lo que redondea el resultado a 0,de modo que es un número entero.</target>
        </trans-unit>
        <trans-unit id="bb74650a926444040d1c9d20cd4a5500051c1a91" translate="yes" xml:space="preserve">
          <source>Because you are doing integer division.</source>
          <target state="translated">Porque estás haciendo la división entera.</target>
        </trans-unit>
        <trans-unit id="7d9db168fd46b5f8fe90b3a22923d78c7f00525d" translate="yes" xml:space="preserve">
          <source>Do &quot;double g=1.0/3.0;&quot; instead.</source>
          <target state="translated">Haz &quot;doble g=1.03.0;&quot; en su lugar.</target>
        </trans-unit>
        <trans-unit id="0d60db3234e5f1f5bedd14078c53a9cc2b4916fd" translate="yes" xml:space="preserve">
          <source>Explicitly cast it as a &lt;code&gt;double&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Expl&amp;iacute;citamente, &amp;eacute;chalo como un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9649ad598ebdf718b10a574595a9779f4122280f" translate="yes" xml:space="preserve">
          <source>I was writing this code:</source>
          <target state="translated">Estaba escribiendo este código:</target>
        </trans-unit>
        <trans-unit id="02acf376ecf4e8a1e8780ab95e6458f91b302cb3" translate="yes" xml:space="preserve">
          <source>If an integer operator other than a shift operator has at least one operand of type long, then the operation is carried out using 64-bit precision, and the result of the numerical operator is of type long. If the other operand is not long, it is first widened (&amp;sect;5.1.5) to type long by numeric promotion (&amp;sect;5.6).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si un operador entero distinto de un operador de desplazamiento tiene al menos un operando de tipo largo, entonces la operaci&amp;oacute;n se lleva a cabo utilizando una precisi&amp;oacute;n de 64 bits, y el resultado del operador num&amp;eacute;rico es de tipo largo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si el otro operando no es largo, primero se ampl&amp;iacute;a (&amp;sect;5.1.5) para escribir largo por promoci&amp;oacute;n num&amp;eacute;rica (&amp;sect;5.6).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6659ebd94fd13557758032fd513924ea95c18d19" translate="yes" xml:space="preserve">
          <source>If any of the operators is a &lt;code&gt;double&lt;/code&gt; / &lt;code&gt;float&lt;/code&gt;, then floating point arithmetic will take place. But you'll have the same problem if you do that:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si alguno de los operadores es un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , entonces tendr&amp;aacute; lugar la aritm&amp;eacute;tica de coma flotante. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero tendr&amp;aacute; el mismo problema si hace eso:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a44e7cf64c00b99c313e2186a2ad12f9d35c1859" translate="yes" xml:space="preserve">
          <source>If at least one of the operands to a binary operator is of floating-point type, then the operation is a floating-point operation, even if the other is integral.</source>
          <target state="translated">Si al menos uno de los operandos de un operador binario es de tipo flotante,entonces la operación es de tipo flotante,aunque el otro sea integral.</target>
        </trans-unit>
        <trans-unit id="1912977f1a23feb378ee1cc1c4f7b85f1b3154cc" translate="yes" xml:space="preserve">
          <source>If at least one of the operands to a numerical operator is of type double, then the operation is carried out using 64-bit floating-point arithmetic, and the result of the numerical operator is a value of type double. If the other operand is not a double, it is first widened (&amp;sect;5.1.5) to type double by numeric promotion (&amp;sect;5.6).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si al menos uno de los operandos para un operador num&amp;eacute;rico es de tipo doble, la operaci&amp;oacute;n se lleva a cabo utilizando aritm&amp;eacute;tica de coma flotante de 64 bits, y el resultado del operador num&amp;eacute;rico es un valor de tipo doble. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si el otro operando no es un doble, primero se ampl&amp;iacute;a (&amp;sect;5.1.5) para escribir doble por promoci&amp;oacute;n num&amp;eacute;rica (&amp;sect;5.6).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac207176f1ec0d1ea3289e36c937789f122ab63a" translate="yes" xml:space="preserve">
          <source>If you are entering the values in the source code like your question, you can do &lt;code&gt;1.0/3&lt;/code&gt; ; the &lt;code&gt;1.0&lt;/code&gt; is a double.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si est&amp;aacute; ingresando los valores en el c&amp;oacute;digo fuente como su pregunta, puede hacer &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1.0/3&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1.0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es un doble.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b525e811bebced061ac54941549a25c265305b1" translate="yes" xml:space="preserve">
          <source>If you get the values from elsewhere you can use &lt;code&gt;(double)&lt;/code&gt; to turn the &lt;code&gt;int&lt;/code&gt; into a &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si obtiene los valores de otra parte, puede usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(double)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para convertir el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c10a02c5e562f1743931b0cd366509bbf63d02ab" translate="yes" xml:space="preserve">
          <source>Int division: Why is the result of 1/3 == 0</source>
          <target state="translated">División Int:¿Por qué el resultado de 13 ==0</target>
        </trans-unit>
        <trans-unit id="ca04b4f1a8e2cc2530097763117db9931074bfbf" translate="yes" xml:space="preserve">
          <source>Integer division of course returns the true result of division rounded towards zero. The result of &lt;code&gt;0.333...&lt;/code&gt; is thus rounded down to 0 here. (Note that the processor doesn't actually do any rounding, but you can think of it that way still.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La divisi&amp;oacute;n entera, por supuesto, devuelve el verdadero resultado de la divisi&amp;oacute;n redondeada hacia cero. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El resultado de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0.333...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se redondea a 0 aqu&amp;iacute;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Tenga en cuenta que el procesador en realidad no hace ning&amp;uacute;n redondeo, pero a&amp;uacute;n puede pensar de esa manera).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6056d6e76d06d0b7afb26f897c2aea54bbf5f4d5" translate="yes" xml:space="preserve">
          <source>Integer division returns integer.</source>
          <target state="translated">La división de números enteros devuelve números enteros.</target>
        </trans-unit>
        <trans-unit id="d70689be0d673ab3445c0f4feac5357d190a49ce" translate="yes" xml:space="preserve">
          <source>It varies on the implementation of the language, but Wikipedia has a fairly comprehensive view, and it does talk about &lt;em&gt;coercion&lt;/em&gt; as well, which is a pivotal piece of information in answering your question.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Var&amp;iacute;a en la implementaci&amp;oacute;n del lenguaje, pero Wikipedia tiene una visi&amp;oacute;n bastante completa, y tambi&amp;eacute;n habla de &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;coerci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que es una pieza fundamental de informaci&amp;oacute;n para responder a su pregunta.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7ea08ecb3ff21245e7bb142ddbf5ff505c088de3" translate="yes" xml:space="preserve">
          <source>Make the 1 a float and float division will be used</source>
          <target state="translated">Haga el 1 un flotador y se usará la división de flotadores</target>
        </trans-unit>
        <trans-unit id="2fe180da70dacdf0d443850765aa127e70804db5" translate="yes" xml:space="preserve">
          <source>Many others have failed to point out the real issue:</source>
          <target state="translated">Muchos otros han fallado en señalar el verdadero problema:</target>
        </trans-unit>
        <trans-unit id="ce6de639a624113b95619c443727d5aea0411e5c" translate="yes" xml:space="preserve">
          <source>Otherwise, the operation is carried out using 32-bit precision, and the result of the numerical operator is of type int. If either operand is not an int, it is first widened to type int by numeric promotion.</source>
          <target state="translated">En caso contrario,la operación se realiza con una precisión de 32 bits,y el resultado del operador numérico es de tipo int.Si alguno de los dos operandos no es de tipo int,se amplía primero al tipo int por promoción numérica.</target>
        </trans-unit>
        <trans-unit id="2ba0e99615b1c2f1613afb960553161ad439c871" translate="yes" xml:space="preserve">
          <source>Since both 1 and 3 are ints the result not rounded but it's truncated. So you ignore fractions and take only wholes.</source>
          <target state="translated">Como tanto el 1 como el 3 son ints el resultado no se redondea pero se trunca.Así que ignoras las fracciones y tomas sólo los enteros.</target>
        </trans-unit>
        <trans-unit id="26ee0116802893428267b1411cf5865b29204217" translate="yes" xml:space="preserve">
          <source>So the promotion is done on the float into double.</source>
          <target state="translated">Así que el ascenso se hace en la carroza en doble.</target>
        </trans-unit>
        <trans-unit id="11f08e7c2d459a55e571efc95d1c2edf5a5b6b75" translate="yes" xml:space="preserve">
          <source>The conversion in JAVA is quite simple but need some understanding. As explain in the JLS for &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se7/html/jls-4.html#jls-4.2.2&quot;&gt;integer operations&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La conversi&amp;oacute;n en JAVA es bastante simple pero necesita algo de comprensi&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como se explica en el JLS para &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se7/html/jls-4.html#jls-4.2.2&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operaciones enteras&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aba50470714af541b304d1e5e82c1355529b6d65" translate="yes" xml:space="preserve">
          <source>The easiest solution is to just do this</source>
          <target state="translated">La solución más fácil es hacer esto</target>
        </trans-unit>
        <trans-unit id="3090daf4ca83afab5f975a1f7e0eb26344ed3e8a" translate="yes" xml:space="preserve">
          <source>The reason is that there is an implicit cast done here, this will be execute like</source>
          <target state="translated">La razón es que hay un molde implícito hecho aquí,esto se ejecutará como</target>
        </trans-unit>
        <trans-unit id="3427b7fbcbd6e06e628aa69019da17abe74c0e38" translate="yes" xml:space="preserve">
          <source>The result 0.33333333 can't be represented as an integer, therefore only the integer part (0) is assigned to the result.</source>
          <target state="translated">El resultado 0,33333333 no puede representarse como un número entero,por lo que sólo se asigna al resultado la parte entera (0).</target>
        </trans-unit>
        <trans-unit id="3065fa5b0532d0e7ef52e52c4209f5ac5df04424" translate="yes" xml:space="preserve">
          <source>The result is 0.  Why is this, and how do I solve this problem?</source>
          <target state="translated">El resultado es 0.¿Por qué es esto,y cómo resuelvo este problema?</target>
        </trans-unit>
        <trans-unit id="4e64f426b0b16a2a23db646072e12487dbf88850" translate="yes" xml:space="preserve">
          <source>The same is true for the &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se7/html/jls-4.html#jls-4.2.4&quot;&gt;floating point operators&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo mismo es cierto para los &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se7/html/jls-4.html#jls-4.2.4&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operadores de coma flotante.&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="420cc97c08d9c438f98e694692133d3478355dad" translate="yes" xml:space="preserve">
          <source>The two operands (1 and 3) are integers, therefore integer arithmetic (division here) is used. Declaring the result variable as double just causes an implicit conversion to occur &lt;em&gt;after division&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los dos operandos (1 y 3) son enteros, por lo tanto, se usa la aritm&amp;eacute;tica de enteros (divisi&amp;oacute;n aqu&amp;iacute;). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Declarar la variable de resultado como doble solo provoca una conversi&amp;oacute;n impl&amp;iacute;cita &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;despu&amp;eacute;s de la divisi&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="803de18271304fb6e19ec706acf7f3de52210ee6" translate="yes" xml:space="preserve">
          <source>This happens because Java uses the integer division operation for &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;3&lt;/code&gt; since you entered them as integer constants.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto sucede porque Java usa la operaci&amp;oacute;n de divisi&amp;oacute;n de enteros para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;3&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ya que los ingres&amp;oacute; como constantes de enteros.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee937d585a122ea68cde4973bc7f6ef2a27e1adf" translate="yes" xml:space="preserve">
          <source>This is true for binary operators but not for &quot;Assignment Operators&quot; like &lt;code&gt;+=&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto es cierto para operadores binarios pero no para &quot;Operadores de asignaci&amp;oacute;n&quot; como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;+=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ecc9f98093e956f83e2ab0b3748d0c4f56c49e99" translate="yes" xml:space="preserve">
          <source>This necessarily means that floating point results, that &lt;em&gt;could&lt;/em&gt; be displayed as an integer, will be truncated (lop off the decimal part).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto necesariamente significa que los resultados de coma flotante, que &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;podr&amp;iacute;an&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; mostrarse como un n&amp;uacute;mero entero, se truncar&amp;aacute;n (cortar&amp;aacute;n la parte decimal).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f08a97169145dbed19b0b2891d63008699f7f5e" translate="yes" xml:space="preserve">
          <source>This will required a casting with a possible loss of precision.</source>
          <target state="translated">Esto requerirá un molde con una posible pérdida de precisión.</target>
        </trans-unit>
        <trans-unit id="0d8c4f27b990643d95d356ded253b0a6acce4258" translate="yes" xml:space="preserve">
          <source>To avoid this have at least one of your numbers 1 or 3 as a decimal form 1.0 and/or 3.0.</source>
          <target state="translated">Para evitar esto tenga al menos uno de sus números 1 o 3 como forma decimal 1.0 y o 3.0.</target>
        </trans-unit>
        <trans-unit id="c6f5e7a4d7efd21c714c2f91db7d03636dc2b386" translate="yes" xml:space="preserve">
          <source>To get the result you are looking for, explicitly tell java that the numbers are doubles like so:</source>
          <target state="translated">Para obtener el resultado que buscas,dile explícitamente a Java que los números son dobles así:</target>
        </trans-unit>
        <trans-unit id="200267f03d21574410e2a83bbc223379c81ffdc5" translate="yes" xml:space="preserve">
          <source>Try this out:</source>
          <target state="translated">Pruebe esto:</target>
        </trans-unit>
        <trans-unit id="3d561848dfb0d7f3352a95784b002f858486f82d" translate="yes" xml:space="preserve">
          <source>What is &lt;em&gt;casting&lt;/em&gt; (typecasting / type conversion) you ask?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Qu&amp;eacute; es el &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;casting&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (conversi&amp;oacute;n de tipo / conversi&amp;oacute;n de tipo) que preguntas?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="055d69208ae9f5b6064381d001547001c72d24f4" translate="yes" xml:space="preserve">
          <source>What this does, since you didn't enter 1.0 / 3.0, is let you manually convert it to data type double since Java assumed it was Integer division, and it would do it even if it meant narrowing the conversion. This is what is called a cast operator.</source>
          <target state="translated">Lo que hace esto,ya que no introdujo 1.0 3.0,es dejar que lo convierta manualmente a tipo de datos doble ya que Java asumió que era una división entera,y lo haría incluso si significara reducir la conversión.Esto es lo que se llama un operador de reparto.</target>
        </trans-unit>
        <trans-unit id="a730dbf200cd4355694ac1815494422c542fbc30" translate="yes" xml:space="preserve">
          <source>You need at least one of them to be &lt;code&gt;float&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Necesita al menos uno de ellos para ser &lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="ebd9deca7a1dfee62f7034faa7be6bb751eaf571" translate="yes" xml:space="preserve">
          <source>you should use</source>
          <target state="translated">deberías usar</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
