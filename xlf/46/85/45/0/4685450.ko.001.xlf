<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/4685450">
    <body>
      <group id="4685450">
        <trans-unit id="83ca03fe1d75fd5700c66a6a6778846449f04e8a" translate="yes" xml:space="preserve">
          <source>(1/3) means Integer division, thats why you can not get decimal value from this division. To solve this problem use:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(1/3)은 정수 나누기를 의미하므로이 나누기에서 십진수 값을 얻을 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 문제를 해결하려면 다음을 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="13c829a0c029b2c71efa88015d62a1dd72a6c964" translate="yes" xml:space="preserve">
          <source>1 and 3 are integer contants and so Java does an integer division which's result is 0. If you want to write double constants you have to write &lt;code&gt;1.0&lt;/code&gt; and &lt;code&gt;3.0&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1과 3은 정수 상수이므로 Java는 정수 나누기를 수행합니다. 결과는 0입니다. 이중 상수를 쓰려면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1.0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;3.0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 써야 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8df4aafa92d4d5d1c73fa0da94152dd40999b4f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1/3&lt;/code&gt; uses integer division as both sides are integers.</source>
          <target state="translated">&lt;code&gt;1/3&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 양쪽이 정수이므로 정수 나누기를 사용합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="baaa2c0e143279b27b6dacba2736c772a9f50631" translate="yes" xml:space="preserve">
          <source>A simple working example is enough to prove this</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;간단한 작업 예제로 이것을 증명하기에 충분합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a4542f0a184a792bac13618252f332080fe9d26" translate="yes" xml:space="preserve">
          <source>A small example using Eclipse to show that even an addition of two &lt;code&gt;short&lt;/code&gt;s will not be that easy :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 가지의 심지어 또한 보여 Eclipse를 사용하여 작은 예를 들어 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;short&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; S는 쉽지 않을 것입니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c3e4ecd4d1599993fa5cfb874445271c0d3b1d1" translate="yes" xml:space="preserve">
          <source>Also, note that if &lt;em&gt;both&lt;/em&gt; operands (numbers) are given as floats; 3.0 and 1.0, or even just the &lt;em&gt;first&lt;/em&gt;, then floating-point arithmetic is used, giving you &lt;code&gt;0.333...&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 피연산자 (숫자)가 부동 소수점으로 제공 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되는 경우에도 유의하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3.0과 1.0 또는 심지어 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 조차도 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;부동 소수점 산술이 사용되어 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0.333...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 제공합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1143ef123ba581b8c839b0f8b8144caa503a97d8" translate="yes" xml:space="preserve">
          <source>An operation on only integers casts the result of the operation to an integer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정수에 대한 연산은 연산 결과를 정수로 캐스트합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9223e3823771b04837acdd363cbe975ad8fe3823" translate="yes" xml:space="preserve">
          <source>And an example is always the best way to translate the JLS ;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 예제는 항상 JLS를 번역하는 가장 좋은 방법입니다.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="22e5f7c582f7be1e686b0e2be36e78dd98f3c769" translate="yes" xml:space="preserve">
          <source>And the mix of both integer and floating value result in floating values as said</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 정수와 부동 값을 혼합하면 부동 값이 나타납니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bcbbefc3b17aaa55178f2b37a98feaf58eeb1f57" translate="yes" xml:space="preserve">
          <source>As @Noldorin says, if both operators are integers, then integer division is used.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Noldorin이 말했듯이 두 연산자가 모두 정수이면 정수 나누기가 사용됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5ca4b084d70132b40628c1a9143cfa7ea2dedfd9" translate="yes" xml:space="preserve">
          <source>Because it treats 1 and 3 as integers, therefore rounding the result down to 0, so that it is an integer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1과 3을 정수로 취급하므로 결과를 0으로 반올림하여 정수가되도록합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bb74650a926444040d1c9d20cd4a5500051c1a91" translate="yes" xml:space="preserve">
          <source>Because you are doing integer division.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정수 나누기를하고 있기 때문입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d9db168fd46b5f8fe90b3a22923d78c7f00525d" translate="yes" xml:space="preserve">
          <source>Do &quot;double g=1.0/3.0;&quot; instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;double g = 1.0 / 3.0;&quot; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대신에.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0d60db3234e5f1f5bedd14078c53a9cc2b4916fd" translate="yes" xml:space="preserve">
          <source>Explicitly cast it as a &lt;code&gt;double&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;명시 적으로 &lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 으로 캐스팅&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9649ad598ebdf718b10a574595a9779f4122280f" translate="yes" xml:space="preserve">
          <source>I was writing this code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는이 코드를 작성했다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="02acf376ecf4e8a1e8780ab95e6458f91b302cb3" translate="yes" xml:space="preserve">
          <source>If an integer operator other than a shift operator has at least one operand of type long, then the operation is carried out using 64-bit precision, and the result of the numerical operator is of type long. If the other operand is not long, it is first widened (&amp;sect;5.1.5) to type long by numeric promotion (&amp;sect;5.6).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;시프트 연산자 이외의 정수 연산자에 long 유형의 피연산자가 하나 이상 있으면 연산은 64 비트 정밀도를 사용하여 수행되며 숫자 연산자의 결과는 long 유형입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 피연산자가 길지 않은 경우 먼저 숫자 승격 (5.6)으로 long을 입력하도록 확장됩니다 (&amp;sect;5.1.5).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6659ebd94fd13557758032fd513924ea95c18d19" translate="yes" xml:space="preserve">
          <source>If any of the operators is a &lt;code&gt;double&lt;/code&gt; / &lt;code&gt;float&lt;/code&gt;, then floating point arithmetic will take place. But you'll have the same problem if you do that:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;연산자가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인 경우 부동 소수점 산술이 수행됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 그렇게하면 동일한 문제가 발생합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a44e7cf64c00b99c313e2186a2ad12f9d35c1859" translate="yes" xml:space="preserve">
          <source>If at least one of the operands to a binary operator is of floating-point type, then the operation is a floating-point operation, even if the other is integral.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2 진 연산자에 대한 피연산자 중 하나 이상이 부동 소수점 유형 인 경우, 다른 하나가 정수인 경우에도 연산은 부동 소수점 연산입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1912977f1a23feb378ee1cc1c4f7b85f1b3154cc" translate="yes" xml:space="preserve">
          <source>If at least one of the operands to a numerical operator is of type double, then the operation is carried out using 64-bit floating-point arithmetic, and the result of the numerical operator is a value of type double. If the other operand is not a double, it is first widened (&amp;sect;5.1.5) to type double by numeric promotion (&amp;sect;5.6).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;숫자 연산자에 대한 피연산자 중 하나 이상이 double 유형 인 경우 64 비트 부동 소수점 산술을 사용하여 연산이 수행되고 숫자 연산자의 결과는 double 유형의 값입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 피연산자가 double이 아닌 경우 먼저 숫자 승격 (5.6)으로 double을 입력하도록 확장됩니다 (&amp;sect;5.1.5).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac207176f1ec0d1ea3289e36c937789f122ab63a" translate="yes" xml:space="preserve">
          <source>If you are entering the values in the source code like your question, you can do &lt;code&gt;1.0/3&lt;/code&gt; ; the &lt;code&gt;1.0&lt;/code&gt; is a double.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;질문과 같이 소스 코드에 값을 입력하는 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1.0/3&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 수행 할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1.0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 배이다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b525e811bebced061ac54941549a25c265305b1" translate="yes" xml:space="preserve">
          <source>If you get the values from elsewhere you can use &lt;code&gt;(double)&lt;/code&gt; to turn the &lt;code&gt;int&lt;/code&gt; into a &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 곳에서 값을 얻는 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(double)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;바꿀 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c10a02c5e562f1743931b0cd366509bbf63d02ab" translate="yes" xml:space="preserve">
          <source>Int division: Why is the result of 1/3 == 0</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정수 나누기 : 왜 1/3 = 0의 결과입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ca04b4f1a8e2cc2530097763117db9931074bfbf" translate="yes" xml:space="preserve">
          <source>Integer division of course returns the true result of division rounded towards zero. The result of &lt;code&gt;0.333...&lt;/code&gt; is thus rounded down to 0 here. (Note that the processor doesn't actually do any rounding, but you can think of it that way still.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정수 나누기는 물론 0으로 반올림 된 나눗셈의 실제 결과를 반환합니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0.333...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 결과는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 0으로 내림됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(프로세서는 실제로 반올림을 수행하지 않지만 여전히 그렇게 생각할 수 있습니다.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6056d6e76d06d0b7afb26f897c2aea54bbf5f4d5" translate="yes" xml:space="preserve">
          <source>Integer division returns integer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정수 나누기는 정수를 반환합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d70689be0d673ab3445c0f4feac5357d190a49ce" translate="yes" xml:space="preserve">
          <source>It varies on the implementation of the language, but Wikipedia has a fairly comprehensive view, and it does talk about &lt;em&gt;coercion&lt;/em&gt; as well, which is a pivotal piece of information in answering your question.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;언어의 구현에 따라 다르지만 Wikipedia는 상당히 포괄적 인 견해를 가지고 있으며 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;강요&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 대해서도 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이야기 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. 이는 질문에 대답하는 데 중요한 정보입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7ea08ecb3ff21245e7bb142ddbf5ff505c088de3" translate="yes" xml:space="preserve">
          <source>Make the 1 a float and float division will be used</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1을 부동 및 부동 소수점으로 만듭니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2fe180da70dacdf0d443850765aa127e70804db5" translate="yes" xml:space="preserve">
          <source>Many others have failed to point out the real issue:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 많은 사람들이 실제 문제를 지적하지 못했습니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce6de639a624113b95619c443727d5aea0411e5c" translate="yes" xml:space="preserve">
          <source>Otherwise, the operation is carried out using 32-bit precision, and the result of the numerical operator is of type int. If either operand is not an int, it is first widened to type int by numeric promotion.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇지 않으면 32 비트 정밀도를 사용하여 연산이 수행되고 숫자 연산자의 결과는 int 유형입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;피연산자가 int가 아닌 경우 먼저 숫자 승격에 의해 int를 입력하도록 확장됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ba0e99615b1c2f1613afb960553161ad439c871" translate="yes" xml:space="preserve">
          <source>Since both 1 and 3 are ints the result not rounded but it's truncated. So you ignore fractions and take only wholes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1과 3은 모두 정수이므로 결과는 반올림되지 않지만 잘립니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 분수를 무시하고 전체 만 취합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26ee0116802893428267b1411cf5865b29204217" translate="yes" xml:space="preserve">
          <source>So the promotion is done on the float into double.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 프로모션은 두 배로 진행됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="11f08e7c2d459a55e571efc95d1c2edf5a5b6b75" translate="yes" xml:space="preserve">
          <source>The conversion in JAVA is quite simple but need some understanding. As explain in the JLS for &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se7/html/jls-4.html#jls-4.2.2&quot;&gt;integer operations&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JAVA에서의 변환은 매우 간단하지만 약간의 이해가 필요합니다. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se7/html/jls-4.html#jls-4.2.2&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정수 연산&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 대한 JLS에서 설명하는 것처럼 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aba50470714af541b304d1e5e82c1355529b6d65" translate="yes" xml:space="preserve">
          <source>The easiest solution is to just do this</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가장 쉬운 해결책은이 작업을 수행하는 것입니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3090daf4ca83afab5f975a1f7e0eb26344ed3e8a" translate="yes" xml:space="preserve">
          <source>The reason is that there is an implicit cast done here, this will be execute like</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그 이유는 여기에 묵시적 캐스트가 있기 때문에 다음과 같이 실행됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3427b7fbcbd6e06e628aa69019da17abe74c0e38" translate="yes" xml:space="preserve">
          <source>The result 0.33333333 can't be represented as an integer, therefore only the integer part (0) is assigned to the result.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결과 0.33333333은 정수로 표시 될 수 없으므로 정수 부분 (0) 만 결과에 지정됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3065fa5b0532d0e7ef52e52c4209f5ac5df04424" translate="yes" xml:space="preserve">
          <source>The result is 0.  Why is this, and how do I solve this problem?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결과는 0입니다. 이것이 왜,이 문제를 어떻게 해결합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e64f426b0b16a2a23db646072e12487dbf88850" translate="yes" xml:space="preserve">
          <source>The same is true for the &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se7/html/jls-4.html#jls-4.2.4&quot;&gt;floating point operators&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se7/html/jls-4.html#jls-4.2.4&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;부동 소수점 연산자도&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 마찬가지입니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="420cc97c08d9c438f98e694692133d3478355dad" translate="yes" xml:space="preserve">
          <source>The two operands (1 and 3) are integers, therefore integer arithmetic (division here) is used. Declaring the result variable as double just causes an implicit conversion to occur &lt;em&gt;after division&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 피연산자 (1 및 3)는 정수이므로 정수 산술 (여기서 나누기)이 사용됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결과 변수를 double로 선언하면 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나누기 후에&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 암시 적 변환이 발생합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="803de18271304fb6e19ec706acf7f3de52210ee6" translate="yes" xml:space="preserve">
          <source>This happens because Java uses the integer division operation for &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;3&lt;/code&gt; since you entered them as integer constants.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정수 상수로 입력 한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;3&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대해 정수 나누기 연산을 사용하기 때문에 발생합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee937d585a122ea68cde4973bc7f6ef2a27e1adf" translate="yes" xml:space="preserve">
          <source>This is true for binary operators but not for &quot;Assignment Operators&quot; like &lt;code&gt;+=&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이진 연산자에는 해당되지만 &lt;/font&gt; &lt;code&gt;+=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 같은 &quot;지정 연산자&quot;에는 해당되지 않습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ecc9f98093e956f83e2ab0b3748d0c4f56c49e99" translate="yes" xml:space="preserve">
          <source>This necessarily means that floating point results, that &lt;em&gt;could&lt;/em&gt; be displayed as an integer, will be truncated (lop off the decimal part).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정수로 표시 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;될 수&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;부동 소수점 결과 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가 잘 리게 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;됨을 의미합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(소수점에서 벗어남).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f08a97169145dbed19b0b2891d63008699f7f5e" translate="yes" xml:space="preserve">
          <source>This will required a casting with a possible loss of precision.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 정밀도 손실 가능성이있는 캐스팅이 필요합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0d8c4f27b990643d95d356ded253b0a6acce4258" translate="yes" xml:space="preserve">
          <source>To avoid this have at least one of your numbers 1 or 3 as a decimal form 1.0 and/or 3.0.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이를 피하려면 숫자 1 또는 3 중 하나 이상을 10 진수 형식 1.0 및 / 또는 3.0으로 지정하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c6f5e7a4d7efd21c714c2f91db7d03636dc2b386" translate="yes" xml:space="preserve">
          <source>To get the result you are looking for, explicitly tell java that the numbers are doubles like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;찾고있는 결과를 얻으려면 숫자가 두 배가된다는 것을 명시 적으로 java에게 알려주십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="200267f03d21574410e2a83bbc223379c81ffdc5" translate="yes" xml:space="preserve">
          <source>Try this out:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것을 시도하십시오 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3d561848dfb0d7f3352a95784b002f858486f82d" translate="yes" xml:space="preserve">
          <source>What is &lt;em&gt;casting&lt;/em&gt; (typecasting / type conversion) you ask?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;캐스팅&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (타입 캐스팅 / 타입 변환) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이란 무엇입니까 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="055d69208ae9f5b6064381d001547001c72d24f4" translate="yes" xml:space="preserve">
          <source>What this does, since you didn't enter 1.0 / 3.0, is let you manually convert it to data type double since Java assumed it was Integer division, and it would do it even if it meant narrowing the conversion. This is what is called a cast operator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1.0 / 3.0을 입력하지 않았기 때문에 Java가 정수 나누기로 가정했기 때문에 데이터 유형 double로 수동으로 변환 할 수 있으며 변환 범위를 좁히더라도 의미가 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 캐스트 연산자입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a730dbf200cd4355694ac1815494422c542fbc30" translate="yes" xml:space="preserve">
          <source>You need at least one of them to be &lt;code&gt;float&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;float&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 중 하나 이상이 필요합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="ebd9deca7a1dfee62f7034faa7be6bb751eaf571" translate="yes" xml:space="preserve">
          <source>you should use</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 사용해야합니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
