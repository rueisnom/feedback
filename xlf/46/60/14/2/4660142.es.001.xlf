<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/4660142">
    <body>
      <group id="4660142">
        <trans-unit id="9396f5058c8dfed94f5b53595720fed9df43bfa6" translate="yes" xml:space="preserve">
          <source>&quot;Button2&quot; resides on a &lt;code&gt;Panel&lt;/code&gt;</source>
          <target state="translated">&quot;Button2&quot; reside en un &lt;code&gt;Panel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db5a5b1d9a6c5f4c860c37395021bbd5362fafa2" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;&lt;strong&gt;&lt;em&gt;NullReferenceException&lt;/em&gt;&lt;/strong&gt;&amp;rsquo; also occurs when we forget to instantiate a reference type.</source>
          <target state="translated">' &lt;strong&gt;&lt;em&gt;NullReferenceException&lt;/em&gt;&lt;/strong&gt; ' tambi&amp;eacute;n ocurre cuando olvidamos instanciar un tipo de referencia.</target>
        </trans-unit>
        <trans-unit id="dcee1b5e3a8c625c5a9735ca8c8ec5d25be46495" translate="yes" xml:space="preserve">
          <source>(Another reason for non-using unsafe code unless you need it, by the way)</source>
          <target state="translated">(Otra razón para no usar el código inseguro a menos que lo necesites,por cierto)</target>
        </trans-unit>
        <trans-unit id="673f15918a55d1f2ddf729938db9ca922559f3ca" translate="yes" xml:space="preserve">
          <source>.NET collections (of which there are many varieties - Lists, Dictionary, etc.) must also be instantiated or created.</source>
          <target state="translated">Las colecciones .NET (de las cuales hay muchas variedades-Listas,Diccionario,etc.)también deben ser instanciadas o creadas.</target>
        </trans-unit>
        <trans-unit id="c04d4ae82bc72a4bd980abe754c0c8da8a6d3e11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/a/11244949/5407188&quot;&gt;Simon Mourier gave this example&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/11244949/5407188&quot;&gt;Simon Mourier dio este ejemplo&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="96e9ca8abbe2f8b39135700b77c31732f2dac12b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AndAlso&lt;/code&gt; is important. Subsequent tests will not be performed once the first &lt;code&gt;False&lt;/code&gt; condition is encountered. This allows the code to safely 'drill' into the object(s) one 'level' at a time, evaluating &lt;code&gt;myFoo.Bar&lt;/code&gt; only after (and if) &lt;code&gt;myFoo&lt;/code&gt; is determined to be valid. Object chains or paths can get quite long when coding complex objects:</source>
          <target state="translated">&lt;code&gt;AndAlso&lt;/code&gt; es importante. Las pruebas posteriores no se realizar&amp;aacute;n una vez que se encuentre la primera condici&amp;oacute;n &lt;code&gt;False&lt;/code&gt; . Esto permite que el c&amp;oacute;digo 'se desplace' de forma segura en el (los) objeto (s) un 'nivel' a la vez, evaluando &lt;code&gt;myFoo.Bar&lt;/code&gt; solo despu&amp;eacute;s (y si) se determina que &lt;code&gt;myFoo&lt;/code&gt; es v&amp;aacute;lido. Las cadenas o rutas de objetos pueden ser bastante largas al codificar objetos complejos:</target>
        </trans-unit>
        <trans-unit id="aa6c4cd32e971c86b94f356d10264f19fc10c956" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C#&lt;/code&gt; has an &quot;unsafe&quot; mode which is, as the name implies, extremely dangerous because the normal safety mechanisms which provide memory safety and type safety are not enforced. &lt;strong&gt;You should not be writing unsafe code unless you have a thorough and deep understanding of how memory works&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;C#&lt;/code&gt; tiene un modo &quot;inseguro&quot; que, como su nombre lo indica, es extremadamente peligroso porque no se aplican los mecanismos de seguridad normales que proporcionan seguridad de memoria y de tipo. &lt;strong&gt;No debe escribir c&amp;oacute;digo inseguro a menos que tenga un conocimiento profundo y profundo de c&amp;oacute;mo funciona la memoria&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="7bd3d214087af937aaa899e455d518fc953c1f01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C#&lt;/code&gt; supports &quot;iterator blocks&quot; (called &quot;generators&quot; in some other popular languages).  Null dereference exceptions can be particularly tricky to debug in iterator blocks because of deferred execution:</source>
          <target state="translated">&lt;code&gt;C#&lt;/code&gt; admite &quot;bloques iteradores&quot; (llamados &quot;generadores&quot; en algunos otros lenguajes populares). Las excepciones de anulaci&amp;oacute;n de referencia pueden ser particularmente dif&amp;iacute;ciles de depurar en bloques iteradores debido a la ejecuci&amp;oacute;n diferida:</target>
        </trans-unit>
        <trans-unit id="b65a828172fbdbfca98814450da810920765da6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Fill&lt;/code&gt; is a function returning the number of &lt;code&gt;Rows&lt;/code&gt; affected which can also be tested:</source>
          <target state="translated">&lt;code&gt;Fill&lt;/code&gt; es una funci&amp;oacute;n que devuelve el n&amp;uacute;mero de &lt;code&gt;Rows&lt;/code&gt; afectadas que tambi&amp;eacute;n se pueden probar:</target>
        </trans-unit>
        <trans-unit id="29fd8c9bf04ffae44443b4d6b120d8e689bf6af6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FirstOrDefault&lt;/code&gt; returns the first item or the default value, which is &lt;code&gt;Nothing&lt;/code&gt; for reference types and never &lt;code&gt;DBNull&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;FirstOrDefault&lt;/code&gt; devuelve el primer elemento o el valor predeterminado, que es &lt;code&gt;Nothing&lt;/code&gt; para los tipos de referencia y nunca &lt;code&gt;DBNull&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="dc1f250a72423388fb398e4efb0f2038c0f0e84a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NotNull&amp;lt;T&amp;gt;&lt;/code&gt; is implicitly cast to and from &lt;code&gt;T&lt;/code&gt; so you can use it just about anywhere you need it. For example, you can pass a &lt;code&gt;Person&lt;/code&gt; object to a method that takes a &lt;code&gt;NotNull&amp;lt;Person&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;NotNull&amp;lt;T&amp;gt;&lt;/code&gt; est&amp;aacute; impl&amp;iacute;citamente emitido hacia y desde &lt;code&gt;T&lt;/code&gt; para que pueda usarlo en cualquier lugar donde lo necesite. Por ejemplo, puede pasar un objeto &lt;code&gt;Person&lt;/code&gt; a un m&amp;eacute;todo que toma un &lt;code&gt;NotNull&amp;lt;Person&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="65aa590b67401c4fef80a64a246bc794d6e41210" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WPF&lt;/code&gt; controls are created during the call to &lt;code&gt;InitializeComponent&lt;/code&gt; in the order they appear in the visual tree.  A &lt;code&gt;NullReferenceException&lt;/code&gt; will be raised in the case of early-created controls with event handlers, etc. , that fire during &lt;code&gt;InitializeComponent&lt;/code&gt; which reference late-created controls.</source>
          <target state="translated">&lt;code&gt;WPF&lt;/code&gt; controles WPF se crean durante la llamada a &lt;code&gt;InitializeComponent&lt;/code&gt; en el orden en que aparecen en el &amp;aacute;rbol visual. Se generar&amp;aacute; una &lt;code&gt;NullReferenceException&lt;/code&gt; en el caso de los controles creados anteriormente con controladores de eventos, etc., que se activan durante &lt;code&gt;InitializeComponent&lt;/code&gt; que hace referencia a los controles creados recientemente.</target>
        </trans-unit>
        <trans-unit id="250ae2f1196236ab82456278c60d302569df1d86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foreach&lt;/code&gt; throws when you try to iterate null collection. Usually caused by unexpected &lt;code&gt;null&lt;/code&gt; result from methods that return collections.</source>
          <target state="translated">&lt;code&gt;foreach&lt;/code&gt; lanza cuando intenta iterar una colecci&amp;oacute;n nula. Generalmente causado por un resultado &lt;code&gt;null&lt;/code&gt; inesperado de m&amp;eacute;todos que devuelven colecciones.</target>
        </trans-unit>
        <trans-unit id="e6b825efa75e489e263e621391b24d1af984c6b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt; can have different meanings:</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; puede tener diferentes significados:</target>
        </trans-unit>
        <trans-unit id="a96f0fc9fadca9ec24ec9a32f5951496d8252794" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&amp;ldquo;Hey wait, that member has no values so it can&amp;rsquo;t perform the task which you are handing it over.&amp;rdquo;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&quot;Oye, espera, ese miembro no tiene valores, por lo que no puede realizar la tarea que le est&amp;aacute;s entregando&quot;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="de7fbf64ea77b998421c892cac8cea0e19d55573" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The arrays and collections cannot be initialized this way.&lt;/em&gt; This initialization code will run &lt;em&gt;before&lt;/em&gt; the constructor creates the &lt;code&gt;Form&lt;/code&gt; or the &lt;code&gt;Controls&lt;/code&gt;. As a result:</source>
          <target state="translated">&lt;em&gt;Las matrices y colecciones no se pueden inicializar de esta manera.&lt;/em&gt; Este c&amp;oacute;digo de inicializaci&amp;oacute;n se ejecutar&amp;aacute; &lt;em&gt;antes de que&lt;/em&gt; el constructor cree el &lt;code&gt;Form&lt;/code&gt; o los &lt;code&gt;Controls&lt;/code&gt; . Como resultado:</target>
        </trans-unit>
        <trans-unit id="c46586bc5c89bdef6d4b1e03c01b4dd0ec5d4806" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Built-in like Nullable?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&amp;iquest;Incorporado como Nullable?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="75800f606b4d1c6ba12f783ca4570bf7ff6448ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Check arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Verificar argumentos&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0c09c6f450bd3f06e6cd9a53cf34fa6d2204595f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Combine with Extension&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Combinar con extensi&amp;oacute;n&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5c53baf9a2776f02becbdc77ff91727f9331686" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 1&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 1&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9982a3d97a9090ed22f6a37e2cf0f2ae71f563db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 2&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 2&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7846c489294df2d5060a36081cb8e8043018b8e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 3&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 3&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="850a808c9ba0be28dfd19e88b1b1677f0e685ba5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example: Array of class objects&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo: matriz de objetos de clase&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a0832c4cbf43ec158d395216191b77095c211750" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Missing the &lt;code&gt;New&lt;/code&gt; operator is the #1 cause of &lt;code&gt;NullReference Exceptions&lt;/code&gt;&lt;/strong&gt; seen in the Stack&amp;nbsp; Overflow questions reviewed.</source>
          <target state="translated">&lt;strong&gt;La falta del &lt;code&gt;New&lt;/code&gt; operador es la causa n. &amp;deg; 1 de las &lt;code&gt;NullReference Exceptions&lt;/code&gt; de referencia nula&lt;/strong&gt; observadas en las preguntas de desbordamiento de pila revisadas.</target>
        </trans-unit>
        <trans-unit id="65dcf051b0f8d4d6b70a92dd10d98dbbb05e7cdd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Note:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="72d3ff5e8673cda37c5affb24969d0778d496d93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; that accessing it via &lt;code&gt;a.Value&lt;/code&gt; throws an &lt;code&gt;InvalidOperationException&lt;/code&gt; instead of a &lt;code&gt;NullReferenceException&lt;/code&gt; if &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; - you should do the check beforehand, i.e. if you have another on-nullable variable &lt;code&gt;int b;&lt;/code&gt; then you should do assignments like &lt;code&gt;if (a.HasValue) { b = a.Value; }&lt;/code&gt; or shorter &lt;code&gt;if (a != null) { b = a; }&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Tenga en cuenta&lt;/strong&gt; que el acceso a trav&amp;eacute;s de &lt;code&gt;a.Value&lt;/code&gt; arroja una &lt;code&gt;InvalidOperationException&lt;/code&gt; en lugar de una &lt;code&gt;NullReferenceException&lt;/code&gt; si &lt;code&gt;a&lt;/code&gt; es &lt;code&gt;null&lt;/code&gt; ; debe hacer la verificaci&amp;oacute;n de antemano, es decir, si tiene otra variable en nulo &lt;code&gt;int b;&lt;/code&gt; entonces debe hacer asignaciones como &lt;code&gt;if (a.HasValue) { b = a.Value; }&lt;/code&gt; } o m&amp;aacute;s corto &lt;code&gt;if (a != null) { b = a; }&lt;/code&gt; } .</target>
        </trans-unit>
        <trans-unit id="9d2ecfee61125d9d0e8d312294babd37f799e11c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; this applies to any and all control and component references making these illegal where they are:</source>
          <target state="translated">&lt;strong&gt;Tenga en cuenta que&lt;/strong&gt; esto se aplica a todas y cada una de las referencias de control y componentes que las hacen ilegales donde est&amp;aacute;n:</target>
        </trans-unit>
        <trans-unit id="fa53a7cd617380a4fd41905587ebe1ed03bfd709" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Partial Remedy&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Remedio parcial&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b45cb9af41d027f3c66db6de15f935162538c51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Plain Code Solution&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Soluci&amp;oacute;n de c&amp;oacute;digo simple&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c266b17f2c6ab7e2c85ed00ba5d7beabc25b959e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason&lt;/strong&gt;
I am still not sure about the reason. But whenever any of the entity class will extend System.Web.UI.Page this error occurs.</source>
          <target state="translated">&lt;strong&gt;Motivo&lt;/strong&gt; Todav&amp;iacute;a no estoy seguro del motivo. Pero cada vez que cualquiera de la clase de entidad extender&amp;aacute; System.Web.UI.Page, se produce este error.</target>
        </trans-unit>
        <trans-unit id="a268ab5a5be194c793236306a7663da71dfa4d72" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reference types (these ones must be checked):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Tipos de referencia (estos deben ser verificados):&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="87d7c3eb34164ea52ebb8bc8dd28ee4033a68905" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related Language Feature&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Caracter&amp;iacute;stica relacionada del lenguaje&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f132283beed6a6da06cca0d2093c020e2034387" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Remedy&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="00798c0e0efa455834c71c3500c45ed823e69637" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TL;DR:&lt;/strong&gt; Try using &lt;code&gt;Html.Partial&lt;/code&gt; instead of &lt;code&gt;Renderpage&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;TL; DR:&lt;/strong&gt; intente usar &lt;code&gt;Html.Partial&lt;/code&gt; en lugar de &lt;code&gt;Renderpage&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb06fe911bd525f50ffb0ed996518a64e1313f34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is basically is a Null reference exception&lt;/strong&gt;. As &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.nullreferenceexception(v=vs.110).aspx&quot;&gt;Microsoft&lt;/a&gt; states-</source>
          <target state="translated">&lt;strong&gt;Esto es b&amp;aacute;sicamente una excepci&amp;oacute;n de referencia nula&lt;/strong&gt; . Como dice &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.nullreferenceexception(v=vs.110).aspx&quot;&gt;Microsoft&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1aa4d335741197b3563f86a40f2c97a83f320da3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE:&lt;/strong&gt; It is worth mentioning that the term was coined by Bertrand Meyer &lt;a href=&quot;https://www.eiffel.com/values/design-by-contract/&quot;&gt;in connection with his design of the Eiffel programming language&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;ACTUALIZACI&amp;Oacute;N:&lt;/strong&gt; Vale la pena mencionar que el t&amp;eacute;rmino fue acu&amp;ntilde;ado por Bertrand Meyer &lt;a href=&quot;https://www.eiffel.com/values/design-by-contract/&quot;&gt;en relaci&amp;oacute;n con su dise&amp;ntilde;o del lenguaje de programaci&amp;oacute;n Eiffel&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0181926e0a4573b951577d60df9ca7c39553610c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update C#8.0, 2019: Nullable reference types&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Actualizaci&amp;oacute;n C # 8.0, 2019: tipos de referencia anulables&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="72b28d75192ac7fb08e2f8d3a79cec1a52ea9e34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use Tools&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Usar herramientas&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c87f2201b452dcaacc0b8af07815a06349212165" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Value types (you can simply ignore these ones):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Tipos de valor (simplemente puede ignorar estos):&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e6d4f708a4dc9fe6716ce23566f161236c78feea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What can you do about it?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&amp;iquest;Qu&amp;eacute; puedes hacer al respecto?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8caed790388a2aa0b4f38d928f3144b76a25e1b" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;1&lt;/sup&gt;  If Break on Throws is too aggressive and the debugger stops on an NPE in the .NET or 3rd-party library, &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/038tzxdw.aspx&quot;&gt;Break on User-Unhandled&lt;/a&gt; can be used to limit the exceptions caught. Additionally, VS2012 introduces &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/dn457346.aspx&quot;&gt;Just My Code&lt;/a&gt; which I recommend enabling as well.</source>
          <target state="translated">&lt;sup&gt;1&lt;/sup&gt; Si Break on Throws es demasiado agresivo y el depurador se detiene en un NPE en la biblioteca .NET o de terceros, se puede usar &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/038tzxdw.aspx&quot;&gt;Break on User-Unledled&lt;/a&gt; para limitar las excepciones detectadas. Adem&amp;aacute;s, VS2012 presenta &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/dn457346.aspx&quot;&gt;Just My Code,&lt;/a&gt; que tambi&amp;eacute;n recomiendo habilitar.</target>
        </trans-unit>
        <trans-unit id="cf4e02ba110e4be0ec3bfb627b852463f12d2845" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MsgBox&lt;/code&gt; in the Catch which displays &lt;code&gt;Error while...&lt;/code&gt; will be of little help. This method also leads to &lt;em&gt;very bad&lt;/em&gt; Stack&amp;nbsp; Overflow questions, because you can't describe the actual exception, the object involved or even the line of code where it happens.</source>
          <target state="translated">Un &lt;code&gt;MsgBox&lt;/code&gt; en Catch que muestre &lt;code&gt;Error while...&lt;/code&gt; ser&amp;aacute; de poca ayuda. Este m&amp;eacute;todo tambi&amp;eacute;n lleva a preguntas &lt;em&gt;muy malas de&lt;/em&gt; desbordamiento de pila, porque no puede describir la excepci&amp;oacute;n real, el objeto involucrado o incluso la l&amp;iacute;nea de c&amp;oacute;digo donde sucede.</target>
        </trans-unit>
        <trans-unit id="ba104c53b06fc122661823449802aea76782c8e0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NullReferenceException&lt;/code&gt; is thrown when we are trying to access Properties of a null object or when a string value becomes empty and we are trying to access string methods.</source>
          <target state="translated">Se produce una &lt;code&gt;NullReferenceException&lt;/code&gt; cuando intentamos acceder a las propiedades de un objeto nulo o cuando un valor de cadena se vac&amp;iacute;a y estamos intentando acceder a m&amp;eacute;todos de cadena.</target>
        </trans-unit>
        <trans-unit id="aa5b3e9455e644e78a417418f58466e0a5a103cd" translate="yes" xml:space="preserve">
          <source>A NullReferenceException exception is thrown when you try to access a
  member of a type whose value is null.</source>
          <target state="translated">Una excepción de NullReferenceException se lanza cuando se intenta acceder a un miembro de un tipo cuyo valor es nulo.</target>
        </trans-unit>
        <trans-unit id="f8ff26f3ebffad79c215bd07bdac08f78eb5f7da" translate="yes" xml:space="preserve">
          <source>A badly implemented Try/Catch can hide where the problem is and result in new ones:</source>
          <target state="translated">Un TryCatch mal implementado puede ocultar dónde está el problema y dar lugar a otros nuevos:</target>
        </trans-unit>
        <trans-unit id="6d4ec18cde40fd73c38c9b684b0330cd485bb285" translate="yes" xml:space="preserve">
          <source>A common oversight is a class which uses a collection &lt;code&gt;Type&lt;/code&gt;:</source>
          <target state="translated">Un descuido com&amp;uacute;n es una clase que usa un &lt;code&gt;Type&lt;/code&gt; colecci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="d9cf0a18f606a29539af3e0ce3af33a36d691ebb" translate="yes" xml:space="preserve">
          <source>A more &quot;formal&quot; way of preventing such error conditions &lt;em&gt;while developing&lt;/em&gt; is applying &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Design_by_contract&quot;&gt;design by contract&lt;/a&gt;&lt;/em&gt; in your code. This means you need to set class &lt;em&gt;invariants&lt;/em&gt;, and/or even function/method &lt;em&gt;preconditions&lt;/em&gt; and &lt;em&gt;postconditions&lt;/em&gt; on your system, while developing.</source>
          <target state="translated">Una forma m&amp;aacute;s &quot;formal&quot; de prevenir tales condiciones de error &lt;em&gt;durante el desarrollo&lt;/em&gt; es aplicar el &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Design_by_contract&quot;&gt;dise&amp;ntilde;o por contrato&lt;/a&gt;&lt;/em&gt; en su c&amp;oacute;digo. Esto significa que necesita establecer &lt;em&gt;invariantes de&lt;/em&gt; clase y / o incluso &lt;em&gt;precondiciones&lt;/em&gt; y &lt;em&gt;postcondiciones de&lt;/em&gt; funci&amp;oacute;n / m&amp;eacute;todo en su sistema, mientras se desarrolla.</target>
        </trans-unit>
        <trans-unit id="eebbb33808aa207e49bada59a5125167df24f614" translate="yes" xml:space="preserve">
          <source>A note on null dereferences in unsafe code</source>
          <target state="translated">Una nota sobre las dereferencias nulas en código inseguro</target>
        </trans-unit>
        <trans-unit id="8dafbafccce845b67afeb7b01438fe1945ef8d44" translate="yes" xml:space="preserve">
          <source>A nullable reference type is noted using the same syntax as nullable value types: a &lt;code&gt;?&lt;/code&gt; is appended to the type of the variable.</source>
          <target state="translated">Se observa un tipo de referencia anulable utilizando la misma sintaxis que los tipos de valores anulables: a &lt;code&gt;?&lt;/code&gt; se agrega al tipo de la variable.</target>
        </trans-unit>
        <trans-unit id="6c02c614bce01e1bf2b2913bce9723ce07012a79" translate="yes" xml:space="preserve">
          <source>A typo is a problem here: &lt;code&gt;Employees&lt;/code&gt; vs &lt;code&gt;Employee&lt;/code&gt;. There was no &lt;code&gt;DataTable&lt;/code&gt; named &quot;Employee&quot; created, so a &lt;code&gt;NullReferenceException&lt;/code&gt; results trying to access it. Another potential problem is assuming there will be &lt;code&gt;Items&lt;/code&gt; which may not be so when the SQL includes a WHERE clause.</source>
          <target state="translated">Un error tipogr&amp;aacute;fico es un problema aqu&amp;iacute;: &lt;code&gt;Employees&lt;/code&gt; vs &lt;code&gt;Employee&lt;/code&gt; . No se cre&amp;oacute; ninguna &lt;code&gt;DataTable&lt;/code&gt; llamada &quot;Empleado&quot;, por lo que se produce una &lt;code&gt;NullReferenceException&lt;/code&gt; intentar acceder a ella. Otro problema potencial es asumir que habr&amp;aacute; &lt;code&gt;Items&lt;/code&gt; que pueden no serlo cuando el SQL incluye una cl&amp;aacute;usula WHERE.</target>
        </trans-unit>
        <trans-unit id="f6a5c83300e66ad46127b977adb89a522156c686" translate="yes" xml:space="preserve">
          <source>ASP.NET MVC empty view models</source>
          <target state="translated">ASP.NET MVC empty view models</target>
        </trans-unit>
        <trans-unit id="80c38c96a03773866e5a09fd7dd429a0be9d8b8b" translate="yes" xml:space="preserve">
          <source>ASP.NET Page Life cycle:</source>
          <target state="translated">Página ASP.NET Ciclo de vida:</target>
        </trans-unit>
        <trans-unit id="3f5c6dc0c3d2cadb4509844c76624cbfb304e229" translate="yes" xml:space="preserve">
          <source>ASP.NET Session Values</source>
          <target state="translated">Valores de la sesión de ASP.NET</target>
        </trans-unit>
        <trans-unit id="940be3748f3da7281fcd8700b0e3178729d37f82" translate="yes" xml:space="preserve">
          <source>Access Levels in Visual Basic</source>
          <target state="translated">Niveles de acceso en Visual Basic</target>
        </trans-unit>
        <trans-unit id="b85c4bdae0c350f5711f14487cc734ddd712d0bb" translate="yes" xml:space="preserve">
          <source>Add a RigidBody to your object with AddComponent &amp;gt; Physics &amp;gt; Rigidbody</source>
          <target state="translated">Agregue un RigidBody a su objeto con AddComponent&amp;gt; F&amp;iacute;sica&amp;gt; Rigidbody</target>
        </trans-unit>
        <trans-unit id="3c06a5e5b3bffeb1ffe32764c5df1d75e8641b16" translate="yes" xml:space="preserve">
          <source>Adding a case when the class name for entity used in entity framework is same as class name for a web form code-behind file.</source>
          <target state="translated">Añadir un caso en el que el nombre de la clase para la entidad utilizada en el marco de la entidad es el mismo que el nombre de la clase para un archivo de código de formulario web.</target>
        </trans-unit>
        <trans-unit id="64da57dde1ffb2a7b141dfc69a64073197586ac7" translate="yes" xml:space="preserve">
          <source>Alternatively, design by contract can be applied using &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Assertion_%28software_development%29&quot;&gt;assertions&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">Alternativamente, el dise&amp;ntilde;o por contrato se puede aplicar utilizando &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Assertion_%28software_development%29&quot;&gt;aserciones&lt;/a&gt;&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="b7effb34e016a409606b0e15fd08ec8c4497e3b4" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use &lt;code&gt;(ComboBox5.SelectedItem IsNot Nothing) AndAlso...&lt;/code&gt;</source>
          <target state="translated">Alternativamente, puede usar &lt;code&gt;(ComboBox5.SelectedItem IsNot Nothing) AndAlso...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5666d3ec19bdd1846f3f244409d303ff8154592b" translate="yes" xml:space="preserve">
          <source>Although I have a feeling it was because Visual Studio was misreading the ampersands and brackets.</source>
          <target state="translated">Aunque tengo el presentimiento de que fue porque Visual Studio estaba malinterpretando los amperios y los soportes.</target>
        </trans-unit>
        <trans-unit id="9fd253c7dc5c61cba35ce66730957de70d270eee" translate="yes" xml:space="preserve">
          <source>Always initialize your objects before you try to do anything with them.</source>
          <target state="translated">Siempre inicialice sus objetos antes de intentar hacer algo con ellos.</target>
        </trans-unit>
        <trans-unit id="3b6e8a6740e24bceb43df548fef899179aae1d8a" translate="yes" xml:space="preserve">
          <source>Among other things, this code does not anticipate that the user may not have selected something in one or more UI controls.  &lt;code&gt;ListBox1.SelectedItem&lt;/code&gt; may well be &lt;code&gt;Nothing&lt;/code&gt;, so &lt;code&gt;ListBox1.SelectedItem.ToString&lt;/code&gt; will result in an NRE.</source>
          <target state="translated">Entre otras cosas, este c&amp;oacute;digo no anticipa que el usuario no haya seleccionado algo en uno o m&amp;aacute;s controles de IU. &lt;code&gt;ListBox1.SelectedItem&lt;/code&gt; puede ser &lt;code&gt;Nothing&lt;/code&gt; , por lo que &lt;code&gt;ListBox1.SelectedItem.ToString&lt;/code&gt; dar&amp;aacute; como resultado una NRE.</target>
        </trans-unit>
        <trans-unit id="88a4f159e8121bbcda704144caf67fd92f8461ea" translate="yes" xml:space="preserve">
          <source>An empty &lt;code&gt;Catch&lt;/code&gt; block is the devil's playground. This OP was baffled why he was getting an NRE in the &lt;code&gt;Finally&lt;/code&gt; block. In other situations, an empty &lt;code&gt;Catch&lt;/code&gt; may result in something else much further downstream going haywire and cause you to spend time looking at the wrong things in the wrong place for the problem. (The &quot;silent exception&quot; described above provides the same entertainment value.)</source>
          <target state="translated">Un bloque de &lt;code&gt;Catch&lt;/code&gt; vac&amp;iacute;o es el patio de recreo del diablo. Este OP estaba desconcertado por qu&amp;eacute; estaba obteniendo una NRE en el bloque &lt;code&gt;Finally&lt;/code&gt; . En otras situaciones, una &lt;code&gt;Catch&lt;/code&gt; vac&amp;iacute;a puede dar lugar a que algo mucho m&amp;aacute;s lejos se vuelva loco y hacer que pierda tiempo buscando las cosas incorrectas en el lugar equivocado para el problema. (La &quot;excepci&amp;oacute;n silenciosa&quot; descrita anteriormente proporciona el mismo valor de entretenimiento).</target>
        </trans-unit>
        <trans-unit id="9157a41acb7ec9a4b1beccee4b4d84c91c8fa2d2" translate="yes" xml:space="preserve">
          <source>An example of this exception being thrown is: When you are trying to check something, that is null.</source>
          <target state="translated">Un ejemplo de esta excepción que se lanza es:Cuando se intenta comprobar algo,eso es nulo.</target>
        </trans-unit>
        <trans-unit id="a1ec28efc8675e603132b97526fc40e135d46f85" translate="yes" xml:space="preserve">
          <source>And here is an example of how it could be used:</source>
          <target state="translated">Y aquí hay un ejemplo de cómo podría ser utilizado:</target>
        </trans-unit>
        <trans-unit id="e727d2eac2d0a071ac7dcfe039aef6ace695286e" translate="yes" xml:space="preserve">
          <source>And it worked.</source>
          <target state="translated">Y funcionó.</target>
        </trans-unit>
        <trans-unit id="324e44de5ebb6296d39aa1bfc28925673b0c6b21" translate="yes" xml:space="preserve">
          <source>Another case where &lt;code&gt;NullReferenceExceptions&lt;/code&gt; can happen is the (incorrect) use of the &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/as&quot;&gt;&lt;code&gt;as&lt;/code&gt; operator&lt;/a&gt;:</source>
          <target state="translated">Otro caso en el que puede ocurrir &lt;code&gt;NullReferenceExceptions&lt;/code&gt; es el uso (incorrecto) del &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/as&quot;&gt;operador &lt;code&gt;as&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="faf985078920eb0c5453270c90bdc97bdefa6713" translate="yes" xml:space="preserve">
          <source>Another general case where one might receive this exception involves mocking classes during unit testing. Regardless of the mocking framework being used, you must ensure that all appropriate levels of the class hierarchy are properly mocked. In particular, all properties of &lt;code&gt;HttpContext&lt;/code&gt; which are referenced by the code under test must be mocked.</source>
          <target state="translated">Otro caso general en el que uno podr&amp;iacute;a recibir esta excepci&amp;oacute;n implica burlarse de clases durante las pruebas unitarias. Independientemente del marco de simulaci&amp;oacute;n que se utilice, debe asegurarse de que todos los niveles apropiados de la jerarqu&amp;iacute;a de clases se burlen correctamente. En particular, se deben burlar todas las propiedades de &lt;code&gt;HttpContext&lt;/code&gt; a las que hace referencia el c&amp;oacute;digo bajo prueba.</target>
        </trans-unit>
        <trans-unit id="defecdb8e8875605297d57b7667ccb8e2cd0b5be" translate="yes" xml:space="preserve">
          <source>Another scenario is when you cast a null object into a &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/value-types&quot;&gt;value type&lt;/a&gt;. For example, the code below:</source>
          <target state="translated">Otro escenario es cuando convierte un objeto nulo en un &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/value-types&quot;&gt;tipo de valor&lt;/a&gt; . Por ejemplo, el siguiente c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="translated">Array</target>
        </trans-unit>
        <trans-unit id="66865b7becb2eab1937b4ac3fd0252b0e3a5b1a9" translate="yes" xml:space="preserve">
          <source>Array Elements</source>
          <target state="translated">Elementos de la matriz</target>
        </trans-unit>
        <trans-unit id="b90cc9bfd23567a2ff5ba1f00e7c63ca6da8755e" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="translated">Arrays</target>
        </trans-unit>
        <trans-unit id="b6fa4a287953008cbde69102b90389d57d42adc5" translate="yes" xml:space="preserve">
          <source>Arrays in Visual Basic</source>
          <target state="translated">Los arreglos en Visual Basic</target>
        </trans-unit>
        <trans-unit id="d1699665973226819efc1a3192672777466c31f6" translate="yes" xml:space="preserve">
          <source>Arrays must also be instantiated:</source>
          <target state="translated">Los arreglos también deben ser instanciados:</target>
        </trans-unit>
        <trans-unit id="38bc53bbadc56c1c1c3af2a66bca49127ec6ded9" translate="yes" xml:space="preserve">
          <source>As before, the &lt;code&gt;ds&lt;/code&gt; Dataset object was declared, but an instance was never created. The &lt;code&gt;DataAdapter&lt;/code&gt; will fill an existing &lt;code&gt;DataSet&lt;/code&gt;, not create one. In this case, since &lt;code&gt;ds&lt;/code&gt; is a local variable, &lt;em&gt;the IDE warns you&lt;/em&gt; that this might happen:</source>
          <target state="translated">Como antes, se declar&amp;oacute; el objeto &lt;code&gt;ds&lt;/code&gt; Dataset, pero nunca se cre&amp;oacute; una instancia. El &lt;code&gt;DataAdapter&lt;/code&gt; llenar&amp;aacute; un &lt;code&gt;DataSet&lt;/code&gt; existente, no crear&amp;aacute; uno. En este caso, dado que &lt;code&gt;ds&lt;/code&gt; es una variable local, &lt;em&gt;el IDE le advierte&lt;/em&gt; que esto podr&amp;iacute;a suceder:</target>
        </trans-unit>
        <trans-unit id="a8225bf15fe959f426e87bc59fb66f54584b8477" translate="yes" xml:space="preserve">
          <source>As before, this is incorrect:</source>
          <target state="translated">Como antes,esto es incorrecto:</target>
        </trans-unit>
        <trans-unit id="34d0293b6d44a69f8098139a2697ae8c8c463b8c" translate="yes" xml:space="preserve">
          <source>As before, you can test for Nothing, then for a specific value:</source>
          <target state="translated">Como antes,puedes hacer la prueba de la Nada,y luego la de un valor específico:</target>
        </trans-unit>
        <trans-unit id="8c8719c108394130c727bec7ba9f10b86c8bcb74" translate="yes" xml:space="preserve">
          <source>As seen in the above code, the statement 
&lt;strong&gt;Student s&lt;/strong&gt; - only declares the variable of type Student, note that the Student class is not instantiated at this point.
Hence, when the statement &lt;strong&gt;s.GetFullName()&lt;/strong&gt; gets executed, it will throw the NullReferenceException.</source>
          <target state="translated">Como se ve en el c&amp;oacute;digo anterior, la declaraci&amp;oacute;n &lt;strong&gt;Student s&lt;/strong&gt; - solo declara la variable de tipo Student, tenga en cuenta que la clase Student no se instancia en este punto. Por lo tanto, cuando se ejecuta la instrucci&amp;oacute;n &lt;strong&gt;s.GetFullName ()&lt;/strong&gt; , arrojar&amp;aacute; la NullReferenceException.</target>
        </trans-unit>
        <trans-unit id="0238c2f1a73f80203ea54ce74e1fa5c52ec85a2b" translate="yes" xml:space="preserve">
          <source>As you can see above as with nullable you would access the underlying value through the &lt;code&gt;Value&lt;/code&gt; property. Alternatively, you can use an explicit or implicit cast, you can see an example with the return value below:</source>
          <target state="translated">Como puede ver arriba, como con nullable, acceder&amp;iacute;a al valor subyacente a trav&amp;eacute;s de la propiedad &lt;code&gt;Value&lt;/code&gt; . Alternativamente, puede usar una conversi&amp;oacute;n expl&amp;iacute;cita o impl&amp;iacute;cita, puede ver un ejemplo con el valor de retorno a continuaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="55898edce8a3dc771bf65a61dd6c66bcff4e10b3" translate="yes" xml:space="preserve">
          <source>Assume that you have a class named Student.</source>
          <target state="translated">Asume que tienes una clase llamada Estudiante.</target>
        </trans-unit>
        <trans-unit id="be34f295e410696ad2a87bdbe307bddd6ac8d2e7" translate="yes" xml:space="preserve">
          <source>Basic Meaning</source>
          <target state="translated">Significado básico</target>
        </trans-unit>
        <trans-unit id="f2896aad58b9a8eecc0ba25ee5c59866bcde93ab" translate="yes" xml:space="preserve">
          <source>Be aware that regardless of the scenario, the cause is always the same in .NET:</source>
          <target state="translated">Tenga en cuenta que independientemente del escenario,la causa es siempre la misma en .NET:</target>
        </trans-unit>
        <trans-unit id="4b8773ed0bc20f439c181fd5242b7f12bd9a63f5" translate="yes" xml:space="preserve">
          <source>Both a null pointer and a null reference in &lt;code&gt;C#&lt;/code&gt; are internally represented as the number zero, and so any attempt to dereference it into its corresponding memory storage causes the operating system to produce an error. The .NET runtime then detects this error and turns it into the null dereference exception.</source>
          <target state="translated">Tanto un puntero nulo como una referencia nula en &lt;code&gt;C#&lt;/code&gt; se representan internamente como el n&amp;uacute;mero cero, por lo que cualquier intento de desreferenciarlo en su almacenamiento de memoria correspondiente hace que el sistema operativo produzca un error. El tiempo de ejecuci&amp;oacute;n .NET luego detecta este error y lo convierte en la excepci&amp;oacute;n de anulaci&amp;oacute;n de referencia nula.</target>
        </trans-unit>
        <trans-unit id="80ab619b17d9355ace0bbedb905733aed5398463" translate="yes" xml:space="preserve">
          <source>Bottom Line</source>
          <target state="translated">En resumen...</target>
        </trans-unit>
        <trans-unit id="21a8752f2df54d656b09cd2a499cb3a3403ec7ca" translate="yes" xml:space="preserve">
          <source>Breakpoints</source>
          <target state="translated">Breakpoints</target>
        </trans-unit>
        <trans-unit id="86d14f9a7de18ff1120d5c17aa3bb8490cf58228" translate="yes" xml:space="preserve">
          <source>But I was able to run the application with no problems with this &quot;error&quot;. I was able to get rid of the error by changing the structure of the &lt;code&gt;foreach&lt;/code&gt; loop to look like this:</source>
          <target state="translated">Pero pude ejecutar la aplicaci&amp;oacute;n sin problemas con este &quot;error&quot;. Pude deshacerme del error cambiando la estructura del bucle &lt;code&gt;foreach&lt;/code&gt; para que se vea as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="342f568362575e92cb6067d8461a39a6a40941c4" translate="yes" xml:space="preserve">
          <source>But if you set &quot;property X must never have a null value&quot; as method precondition, then you can prevent the scenario described before:</source>
          <target state="translated">Pero si se establece &quot;la propiedad X nunca debe tener un valor nulo&quot; como condición previa del método,entonces se puede evitar el escenario descrito anteriormente:</target>
        </trans-unit>
        <trans-unit id="8e174293e71614f4dcd5e8efa21b20f2c2ea09dd" translate="yes" xml:space="preserve">
          <source>By doing that and making PostSharp part of your build process &lt;code&gt;obj&lt;/code&gt; will be checked for null at runtime. See: &lt;a href=&quot;http://www.postsharp.net/blog/post/Validating-parameters-field-and-properties-in-PostSharp-3&quot;&gt;PostSharp null check&lt;/a&gt;</source>
          <target state="translated">Al hacer eso y hacer que PostSharp sea parte de su proceso de compilaci&amp;oacute;n, &lt;code&gt;obj&lt;/code&gt; se comprobar&amp;aacute; como nulo en tiempo de ejecuci&amp;oacute;n. Ver: &lt;a href=&quot;http://www.postsharp.net/blog/post/Validating-parameters-field-and-properties-in-PostSharp-3&quot;&gt;verificaci&amp;oacute;n nula PostSharp&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64c2e10dbbbf9ef720a7c8d02d4aa8e8cf77773e" translate="yes" xml:space="preserve">
          <source>By finding by name I mean some framework allow you to FIndObjects using strings and the code might look like this: &lt;strong&gt;FindObject(&quot;ObjectName&quot;);&lt;/strong&gt;</source>
          <target state="translated">Al buscar por nombre me refiero a que alg&amp;uacute;n marco le permite FIndObjects usando cadenas y el c&amp;oacute;digo podr&amp;iacute;a verse as&amp;iacute;: &lt;strong&gt;FindObject (&quot;ObjectName&quot;);&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a9d2fbdf206c06f82b8ff7b2a9385b7bc273f6c" translate="yes" xml:space="preserve">
          <source>By following the program flow this way, you can find the location where the instance should not be null, and why it isn't properly set.</source>
          <target state="translated">Siguiendo el flujo del programa de esta manera,puedes encontrar la ubicación donde la instancia no debería ser nula,y por qué no está correctamente establecida.</target>
        </trans-unit>
        <trans-unit id="0af3e909e29bebca060f842d0113445956bb71a3" translate="yes" xml:space="preserve">
          <source>By writing a null check like this you prevent the null dereference, but you move the null argument exception to the point of the &lt;em&gt;iteration&lt;/em&gt;, not to the point of the &lt;em&gt;call&lt;/em&gt;, and that is &lt;em&gt;very confusing to debug&lt;/em&gt;.</source>
          <target state="translated">Al escribir un cheque nulo como este, evita la desreferencia nula, pero mueve la excepci&amp;oacute;n de argumento nulo al punto de la &lt;em&gt;iteraci&amp;oacute;n&lt;/em&gt; , no al punto de la &lt;em&gt;llamada&lt;/em&gt; , y eso es &lt;em&gt;muy confuso para depurar&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="910e894dcb9055a378eccef35ef795771f7bb251" translate="yes" xml:space="preserve">
          <source>C# 6.0 introduced the &quot;null-conditional operator&quot; that helps with this a little. With this feature, you can reference nested objects and if any one of them is &lt;code&gt;null&lt;/code&gt; the whole expression returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">C # 6.0 introdujo el &quot;operador nulo-condicional&quot; que ayuda un poco con esto. Con esta caracter&amp;iacute;stica, puede hacer referencia a objetos anidados y si alguno de ellos es &lt;code&gt;null&lt;/code&gt; la expresi&amp;oacute;n completa devuelve &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06971ac0fe2094d0b96705ec2de4ff7f4c00141d" translate="yes" xml:space="preserve">
          <source>C# has a nice shorthand for &lt;code&gt;Nullable&amp;lt;T&amp;gt;&lt;/code&gt;, you can make something nullable by putting a question mark after the type like so &lt;code&gt;int?&lt;/code&gt;.</source>
          <target state="translated">C # tiene una buena abreviatura para &lt;code&gt;Nullable&amp;lt;T&amp;gt;&lt;/code&gt; , puede hacer que algo sea anulable poniendo un signo de interrogaci&amp;oacute;n despu&amp;eacute;s del tipo como &lt;code&gt;int?&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d4cb34a5ed28713ba6e8d1854e778ef083e674d" translate="yes" xml:space="preserve">
          <source>C#8.0 introduces &lt;strong&gt;nullable reference types&lt;/strong&gt; and &lt;strong&gt;non-nullable reference types&lt;/strong&gt;. So only nullable reference types must be checked to avoid a &lt;strong&gt;NullReferenceException&lt;/strong&gt;.</source>
          <target state="translated">C # 8.0 introduce &lt;strong&gt;tipos de referencia anulables&lt;/strong&gt; y &lt;strong&gt;tipos de referencia&lt;/strong&gt; &lt;strong&gt;no anulables&lt;/strong&gt; . Por lo tanto, solo se deben verificar los tipos de referencia anulables para evitar una &lt;strong&gt;excepci&amp;oacute;n NullReferenceException&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="8dc39f8dd9c9e597efd5512af193d73bcc466778" translate="yes" xml:space="preserve">
          <source>Cast with &lt;code&gt;as&lt;/code&gt;</source>
          <target state="translated">Fundido con &lt;code&gt;as&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da4e05c5dc0d067c4057445c2673b31a895c9b01" translate="yes" xml:space="preserve">
          <source>Changing the order of the declarations in the &lt;code&gt;XAML&lt;/code&gt; (i.e., listing &lt;code&gt;label1&lt;/code&gt; before &lt;code&gt;comboBox1&lt;/code&gt;, ignoring issues of design philosophy, would at least resolve the &lt;code&gt;NullReferenceException&lt;/code&gt; here.</source>
          <target state="translated">Cambiar el orden de las declaraciones en el &lt;code&gt;XAML&lt;/code&gt; (es decir, enumerar &lt;code&gt;label1&lt;/code&gt; antes de &lt;code&gt;comboBox1&lt;/code&gt; , ignorar los problemas de la filosof&amp;iacute;a de dise&amp;ntilde;o, al menos resolver&amp;iacute;a la &lt;code&gt;NullReferenceException&lt;/code&gt; aqu&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="f13d71f0e899fe3b305b742c14c426e502ee6355" translate="yes" xml:space="preserve">
          <source>Class Objects / Creating an Instance</source>
          <target state="translated">Objetos de clase que crean una instancia</target>
        </trans-unit>
        <trans-unit id="a6748432889326a79c007d1ba17c6c7cd3373670" translate="yes" xml:space="preserve">
          <source>Collection/List/Dictionary</source>
          <target state="translated">Collection/List/Dictionary</target>
        </trans-unit>
        <trans-unit id="ac972fde3be5ca3a4dcab0cc67b75680615eb722" translate="yes" xml:space="preserve">
          <source>Combine &lt;code&gt;NotNull&amp;lt;T&amp;gt;&lt;/code&gt; with an extension method and you can cover even more situations. Here is an example of what the extension method can look like:</source>
          <target state="translated">Combine &lt;code&gt;NotNull&amp;lt;T&amp;gt;&lt;/code&gt; con un m&amp;eacute;todo de extensi&amp;oacute;n y podr&amp;aacute; abarcar a&amp;uacute;n m&amp;aacute;s situaciones. Aqu&amp;iacute; hay un ejemplo de c&amp;oacute;mo puede verse el m&amp;eacute;todo de extensi&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="223c2967787ab7e442128765b6827c843685a817" translate="yes" xml:space="preserve">
          <source>Compiler for the above code raises an error that variable &lt;strong&gt;obj&lt;/strong&gt; is unassigned which signifies that our variable has null values or nothing. Compiler for the above code raises an error that variable &lt;strong&gt;obj&lt;/strong&gt; is unassigned which signifies that our variable has null values or nothing.</source>
          <target state="translated">El compilador para el c&amp;oacute;digo anterior genera un error de que la variable &lt;strong&gt;obj&lt;/strong&gt; no est&amp;aacute; asignada, lo que significa que nuestra variable tiene valores nulos o nada. El compilador para el c&amp;oacute;digo anterior genera un error de que la variable &lt;strong&gt;obj&lt;/strong&gt; no est&amp;aacute; asignada, lo que significa que nuestra variable tiene valores nulos o nada.</target>
        </trans-unit>
        <trans-unit id="bee75ca77f753e4846b455441733f6641c4bf287" translate="yes" xml:space="preserve">
          <source>Controls</source>
          <target state="translated">Controls</target>
        </trans-unit>
        <trans-unit id="1ca5b6d459cb7e4e8503007684404f6a2c26c9c9" translate="yes" xml:space="preserve">
          <source>DBNull is not the same as Nothing</source>
          <target state="translated">DBNull no es lo mismo que Nada</target>
        </trans-unit>
        <trans-unit id="428b235126d11ccf77cf5d994238ed0919097855" translate="yes" xml:space="preserve">
          <source>Data Provider Objects</source>
          <target state="translated">Objetos proveedores de datos</target>
        </trans-unit>
        <trans-unit id="5568339e9f5e145b4c2866450e19d8cc65b1f7d3" translate="yes" xml:space="preserve">
          <source>Debug and let the debugger break... It will directly take you to the variable that is broken... Now your task is to simply fix this.. Using the &lt;strong&gt;new&lt;/strong&gt; keyword in the appropriate place.</source>
          <target state="translated">Depura y deja que el depurador se rompa ... Te llevar&amp;aacute; directamente a la variable que est&amp;aacute; rota ... Ahora tu tarea es simplemente solucionar esto ... Usando la &lt;strong&gt;nueva&lt;/strong&gt; palabra clave en el lugar apropiado.</target>
        </trans-unit>
        <trans-unit id="6f0b5050efbdbd9b4e9f63b62af3e9fede37125c" translate="yes" xml:space="preserve">
          <source>Debugger: For developers, we have the big weapon of Debugging with us. If have we face NullReferenceException during the development face we can use the debugger to get to the source of the exception.</source>
          <target state="translated">Depurador:Para los desarrolladores,tenemos la gran arma de la depuración con nosotros.Si nos hemos enfrentado a la NullReferenceException durante la fase de desarrollo podemos usar el depurador para llegar al origen de la excepción.</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="36fd56a44db41a6f009807b50cd27bc9943148b1" translate="yes" xml:space="preserve">
          <source>Debugging showed the model was Null inside MyOtherView. Until I changed it to:</source>
          <target state="translated">La depuración mostró que el modelo era Nulo dentro de MyOtherView.Hasta que lo cambié a:</target>
        </trans-unit>
        <trans-unit id="f2bef4698e9e93b03fbe4d5bae9a889cb96e1075" translate="yes" xml:space="preserve">
          <source>Don't ignore compiler warnings (ever) and use &lt;code&gt;Option Strict On&lt;/code&gt; (always).</source>
          <target state="translated">No ignore las advertencias del compilador (nunca) y use &lt;code&gt;Option Strict On&lt;/code&gt; (siempre).</target>
        </trans-unit>
        <trans-unit id="a116c71d483a8e062649940a075d035fe0d15e1c" translate="yes" xml:space="preserve">
          <source>Don't use empty Try/Catch blocks - let the code crash so you can a) identify the cause b) identify the location and c) apply a proper remedy.  Try/Catch blocks are not intended to hide exceptions from the person uniquely qualified to fix them - the developer.</source>
          <target state="translated">No uses bloques TryCatch vacíos-deja que el código se bloquee para que puedas a)identificar la causa b)identificar la ubicación y c)aplicar un remedio adecuado.Los bloques TryCatch no están pensados para ocultar las excepciones a la persona especialmente capacitada para arreglarlas-el desarrollador.</target>
        </trans-unit>
        <trans-unit id="d7f04facb7d4fb7422ce98a991d56e72f4d24f7c" translate="yes" xml:space="preserve">
          <source>Edge case #1: concurrent access to a Dictionary</source>
          <target state="translated">Caso límite #1:acceso simultáneo a un diccionario</target>
        </trans-unit>
        <trans-unit id="e3ea50cc0b7f4be81be2362bf41478f7130a1285" translate="yes" xml:space="preserve">
          <source>Edge case #2: unsafe code</source>
          <target state="translated">Caso límite #2:código inseguro</target>
        </trans-unit>
        <trans-unit id="6a6853d6e749e4d5b00c4b8d872d66e337db122a" translate="yes" xml:space="preserve">
          <source>Either procedure will result in an NRE, because &lt;code&gt;barList&lt;/code&gt; is only declared, not instantiated. Creating an instance of &lt;code&gt;Foo&lt;/code&gt; will not also create an instance of the internal &lt;code&gt;barList&lt;/code&gt;. It may have been the intent to do this in the constructor:</source>
          <target state="translated">Cualquiera de los procedimientos dar&amp;aacute; como resultado una NRE, porque la lista de &lt;code&gt;barList&lt;/code&gt; solo se declara, no se instancia. Crear una instancia de &lt;code&gt;Foo&lt;/code&gt; no crear&amp;aacute; tambi&amp;eacute;n una instancia de la &lt;code&gt;barList&lt;/code&gt; interna. Puede haber sido la intenci&amp;oacute;n de hacer esto en el constructor:</target>
        </trans-unit>
        <trans-unit id="46f567c4dcc5486e4285b45b12d7a9a6e106f7ff" translate="yes" xml:space="preserve">
          <source>Enjoy and have fun making games!</source>
          <target state="translated">¡Disfruta y diviértete haciendo juegos!</target>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="2ede17026a66f2bb53f3b6978daa3529c4d3bc25" translate="yes" xml:space="preserve">
          <source>Ex:</source>
          <target state="translated">Ex:</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="7b7d48ea7b3b293c238f8dc4cd94aa16d688011e" translate="yes" xml:space="preserve">
          <source>Example 2 &amp;mdash; Beware of the NewRow</source>
          <target state="translated">Ejemplo 2 - Cuidado con el NewRow</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="deec6b3c379dce2b6012e423f46c379377857030" translate="yes" xml:space="preserve">
          <source>Examples and Remedies</source>
          <target state="translated">Ejemplos y remedios</target>
        </trans-unit>
        <trans-unit id="489c7f142f084f70e38f635ba7b9b348e5d129a5" translate="yes" xml:space="preserve">
          <source>Exception handling: One of the important ways of managing this exception. Using simple try-catch-finally blocks we can control this exception and also maintain a log of it. This can be very useful when your application is on production stage.</source>
          <target state="translated">Manejo de excepciones:Una de las formas importantes de manejar esta excepción.Usando simples bloques de prueba y captura podemos controlar esta excepción y también mantener un registro de la misma.Esto puede ser muy útil cuando su aplicación está en fase de producción.</target>
        </trans-unit>
        <trans-unit id="863e0b11b844698fd5b45fe2becd1c066657e73f" translate="yes" xml:space="preserve">
          <source>Explicit Checking: We should adhere to the tradition of checking the objects, properties, methods, arrays, and collections whether they are null. This can be simply implemented using conditional statements like if-else if-else etc.</source>
          <target state="translated">Comprobación explícita:Debemos adherirnos a la tradición de comprobar los objetos,propiedades,métodos,conjuntos y colecciones si son nulos.Esto puede ser implementado simplemente usando declaraciones condicionales como if-else if-else etc.</target>
        </trans-unit>
        <trans-unit id="109df3f9e4f70aee4ff4534f310fc794f8dc97d8" translate="yes" xml:space="preserve">
          <source>Explicitly check for &lt;code&gt;null&lt;/code&gt; and ignore null values.</source>
          <target state="translated">Verifique expl&amp;iacute;citamente si hay valores &lt;code&gt;null&lt;/code&gt; e ignore los valores nulos.</target>
        </trans-unit>
        <trans-unit id="31543b579bc99ae672e332aadbdf4f54893ffe8c" translate="yes" xml:space="preserve">
          <source>Explicitly check for &lt;code&gt;null&lt;/code&gt; and provide a default value.</source>
          <target state="translated">Verifique expl&amp;iacute;citamente &lt;code&gt;null&lt;/code&gt; y proporcione un valor predeterminado.</target>
        </trans-unit>
        <trans-unit id="be6cb31f6768070d27ac716dcf02c1e5b5d94512" translate="yes" xml:space="preserve">
          <source>Explicitly check for &lt;code&gt;null&lt;/code&gt; from method calls and throw a custom exception.</source>
          <target state="translated">Verifique expl&amp;iacute;citamente el &lt;code&gt;null&lt;/code&gt; de las llamadas al m&amp;eacute;todo y arroje una excepci&amp;oacute;n personalizada.</target>
        </trans-unit>
        <trans-unit id="376a5f377acf229980dec162e286875baba55137" translate="yes" xml:space="preserve">
          <source>Finding The Cause</source>
          <target state="translated">Encontrar la causa</target>
        </trans-unit>
        <trans-unit id="036893902b168b7c15417cf8b62f2cd292a4a2cd" translate="yes" xml:space="preserve">
          <source>First, make sure that the correct error is going to be caught - see
&lt;a href=&quot;https://stackoverflow.com/questions/4475464/&quot;&gt;How do I allow breaking on 'System.NullReferenceException' in VS2010?&lt;/a&gt;&lt;em&gt;Note&lt;sup&gt;1&lt;/sup&gt;&lt;/em&gt;</source>
          <target state="translated">Primero, aseg&amp;uacute;rese de detectar el error correcto: consulte &lt;a href=&quot;https://stackoverflow.com/questions/4475464/&quot;&gt;&amp;iquest;C&amp;oacute;mo permito romper en 'System.NullReferenceException' en VS2010?&lt;/a&gt; &lt;em&gt;Nota &lt;sup&gt;1&lt;/sup&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2a9bb411b345b451f4de56294a2e04b8bb44acd7" translate="yes" xml:space="preserve">
          <source>Floating-point types</source>
          <target state="translated">Tipos de punto flotante</target>
        </trans-unit>
        <trans-unit id="c3b57bba0c6478be6c3878f4976f8768bd6104c1" translate="yes" xml:space="preserve">
          <source>For More details : &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/null-conditional-operators&quot;&gt;Null-conditional Operators&lt;/a&gt;</source>
          <target state="translated">Para m&amp;aacute;s detalles: &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/null-conditional-operators&quot;&gt;Operadores condicional nulo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d625573dda6be4c24b311020c3d5caa8ee0507c" translate="yes" xml:space="preserve">
          <source>For discussion have a look at &lt;a href=&quot;https://stackoverflow.com/questions/17136455/nullreferenceexception-in-dbcontext-savechanges&quot;&gt;NullReferenceException in DbContext.saveChanges()&lt;/a&gt;</source>
          <target state="translated">Para discusi&amp;oacute;n, eche un vistazo a &lt;a href=&quot;https://stackoverflow.com/questions/17136455/nullreferenceexception-in-dbcontext-savechanges&quot;&gt;NullReferenceException en DbContext.saveChanges ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88fa3152aa1a080052016562134c18cdbc4e0603" translate="yes" xml:space="preserve">
          <source>For example :</source>
          <target state="translated">Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="21d6357b4a277981b9a66afc8fcee08849d0a240" translate="yes" xml:space="preserve">
          <source>For example, methods can check the different arguments to see if they are null and throw an &lt;code&gt;ArgumentNullException&lt;/code&gt;, an exception obviously created for this exact purpose.</source>
          <target state="translated">Por ejemplo, los m&amp;eacute;todos pueden verificar los diferentes argumentos para ver si son nulos y lanzar una excepci&amp;oacute;n &lt;code&gt;ArgumentNullException&lt;/code&gt; , una excepci&amp;oacute;n obviamente creada para este prop&amp;oacute;sito exacto.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="ea87f510412c7e56ffdecaf29378fffd0b2ac212" translate="yes" xml:space="preserve">
          <source>For instance,
in the following line the only code that &lt;em&gt;can&lt;/em&gt; cause the exception is if &lt;code&gt;myString&lt;/code&gt; evaluates to null. This can be verified by looking at the &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa290869(v=vs.71).aspx&quot;&gt;Watch Window&lt;/a&gt; or running expressions in the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/f177hahy.aspx&quot;&gt;Immediate Window&lt;/a&gt;.</source>
          <target state="translated">Por ejemplo, en la siguiente l&amp;iacute;nea, el &amp;uacute;nico c&amp;oacute;digo que &lt;em&gt;puede&lt;/em&gt; causar la excepci&amp;oacute;n es si &lt;code&gt;myString&lt;/code&gt; se eval&amp;uacute;a como nulo. Esto se puede verificar mirando la &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa290869(v=vs.71).aspx&quot;&gt;Ventana de Observaci&amp;oacute;n&lt;/a&gt; o ejecutando expresiones en la &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/f177hahy.aspx&quot;&gt;Ventana Inmediata&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d3ab9060f75e800aa736a6c6d4a9d5f39e13be8b" translate="yes" xml:space="preserve">
          <source>For me the reason was that I had rename the file and old file was still open.</source>
          <target state="translated">Para mí la razón era que había cambiado el nombre del archivo y el viejo archivo seguía abierto.</target>
        </trans-unit>
        <trans-unit id="ae336d2485d45668cf4b510dc35f9a49b357aa3b" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/6sh2ey19(v=vs.110).aspx&quot;&gt;&lt;code&gt;List(Of T)&lt;/code&gt; Class&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/6sh2ey19(v=vs.110).aspx&quot;&gt; &lt;code&gt;List(Of T)&lt;/code&gt; Clase&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3cadad1fb936cd59a173ee4ad751226d192504b1" translate="yes" xml:space="preserve">
          <source>For more information, see:</source>
          <target state="translated">Para más información,véase:</target>
        </trans-unit>
        <trans-unit id="4b6396c3009607565ca4b596f1d3cfe993427c34" translate="yes" xml:space="preserve">
          <source>For the sake of completeness DataContext class</source>
          <target state="translated">Para completar la clase de DataContext...</target>
        </trans-unit>
        <trans-unit id="f241b5f4ab6b5874d32e0e2ef564edcc65cde7d2" translate="yes" xml:space="preserve">
          <source>For this cause, &lt;em&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/dd264808%28v=vs.110%29.aspx&quot;&gt;Code Contracts&lt;/a&gt;&lt;/em&gt; project exists for .NET applications.</source>
          <target state="translated">Por esta causa, el proyecto de &lt;em&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/dd264808%28v=vs.110%29.aspx&quot;&gt;contratos de c&amp;oacute;digo&lt;/a&gt;&lt;/em&gt; existe para aplicaciones .NET.</target>
        </trans-unit>
        <trans-unit id="6cfbd5392a130ba8fc377b758d8e7cdc4f1a9d51" translate="yes" xml:space="preserve">
          <source>For your reference I made the code above available on GitHub, you can find it at:</source>
          <target state="translated">Para su referencia,he puesto el código de arriba a disposición de GitHub,lo puede encontrar en:</target>
        </trans-unit>
        <trans-unit id="c4a1d4b8ee2b3e9ff148b30c5b4c8d7bb468ba9c" translate="yes" xml:space="preserve">
          <source>Function Returning Nothing</source>
          <target state="translated">La función no devuelve nada</target>
        </trans-unit>
        <trans-unit id="bda3e991f9ccd7f64923695508d53cbd3f8354a4" translate="yes" xml:space="preserve">
          <source>Further Notes: If you want unity to add a component to your object and you might have forgotten to add one, you can type &lt;code&gt;[RequireComponent(typeof(RigidBody))]&lt;/code&gt; above your class declaration (the space below all of your usings).</source>
          <target state="translated">Notas adicionales: Si desea la unidad para agregar un componente a su objeto y puede haber olvidado agregar uno, puede escribir &lt;code&gt;[RequireComponent(typeof(RigidBody))]&lt;/code&gt; arriba de su declaraci&amp;oacute;n de clase (el espacio debajo de todos sus usos).</target>
        </trans-unit>
        <trans-unit id="6ba86cf22af12011257223c782b9c2388170dce0" translate="yes" xml:space="preserve">
          <source>Furthermore, the reason I didn't have &lt;code&gt;Html.Partial&lt;/code&gt; to begin with was because Visual Studio &lt;strong&gt;sometimes&lt;/strong&gt; throws error-looking squiggly lines under &lt;code&gt;Html.Partial&lt;/code&gt; if it's inside a differently constructed &lt;code&gt;foreach&lt;/code&gt; loop, even though it's not really an error:</source>
          <target state="translated">Adem&amp;aacute;s, la raz&amp;oacute;n por la que no ten&amp;iacute;a &lt;code&gt;Html.Partial&lt;/code&gt; para empezar era porque Visual Studio a &lt;strong&gt;veces&lt;/strong&gt; arroja l&amp;iacute;neas &lt;code&gt;Html.Partial&lt;/code&gt; con aspecto de error debajo de Html.Partial si est&amp;aacute; dentro de un bucle &lt;code&gt;foreach&lt;/code&gt; construido de manera diferente, aunque en realidad no es un error:</target>
        </trans-unit>
        <trans-unit id="ff7613e54fc90271b8a71da3dfd9a50e5acd96c2" translate="yes" xml:space="preserve">
          <source>Generic</source>
          <target state="translated">Generic</target>
        </trans-unit>
        <trans-unit id="84ae2f625a61a0ac0cabba1b58ebdefb9ccdd612" translate="yes" xml:space="preserve">
          <source>Generic dictionaries in .NET are not thread-safe and they &lt;em&gt;sometimes&lt;/em&gt; might throw a &lt;code&gt;NullReference&lt;/code&gt; or even (more frequent) a &lt;code&gt;KeyNotFoundException&lt;/code&gt; when you try to access a key from two concurrent threads. The exception is quite misleading in this case.</source>
          <target state="translated">Los diccionarios gen&amp;eacute;ricos en .NET no son seguros para subprocesos y a &lt;em&gt;veces&lt;/em&gt; pueden arrojar una &lt;code&gt;NullReference&lt;/code&gt; o incluso (m&amp;aacute;s frecuente) una &lt;code&gt;KeyNotFoundException&lt;/code&gt; cuando intenta acceder a una clave desde dos subprocesos simult&amp;aacute;neos. La excepci&amp;oacute;n es bastante enga&amp;ntilde;osa en este caso.</target>
        </trans-unit>
        <trans-unit id="5442e2b64fa09764b9f593867e59a97292c84059" translate="yes" xml:space="preserve">
          <source>GitHub</source>
          <target state="translated">GitHub</target>
        </trans-unit>
        <trans-unit id="d0a42f917789ed1adb6c6963e61a12fd3ef2255b" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;comboBox1&lt;/code&gt; is created before &lt;code&gt;label1&lt;/code&gt;. If &lt;code&gt;comboBox1_SelectionChanged&lt;/code&gt; attempts to reference `label1, it will not yet have been created.</source>
          <target state="translated">Aqu&amp;iacute; se crea &lt;code&gt;label1&lt;/code&gt; antes de label1 . Si &lt;code&gt;comboBox1_SelectionChanged&lt;/code&gt; intenta hacer referencia a `label1, a&amp;uacute;n no se habr&amp;aacute; creado.</target>
        </trans-unit>
        <trans-unit id="5bb2ae17924e2d50220fe232232b8dca78bd0287" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;Book&lt;/code&gt; and &lt;code&gt;Car&lt;/code&gt; are incompatible types; a &lt;code&gt;Car&lt;/code&gt; cannot be converted/cast to a &lt;code&gt;Book&lt;/code&gt;.  When this cast fails, &lt;code&gt;as&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;.  Using &lt;code&gt;mybook&lt;/code&gt; after this causes a &lt;code&gt;NullReferenceException&lt;/code&gt;.</source>
          <target state="translated">Aqu&amp;iacute;, &lt;code&gt;Book&lt;/code&gt; y &lt;code&gt;Car&lt;/code&gt; son tipos incompatibles; un &lt;code&gt;Car&lt;/code&gt; no puede convertirse / lanzarse en un &lt;code&gt;Book&lt;/code&gt; . Cuando este lanzamiento falla, &lt;code&gt;as&lt;/code&gt; devuelve &lt;code&gt;null&lt;/code&gt; . Usar &lt;code&gt;mybook&lt;/code&gt; despu&amp;eacute;s de esto provoca una &lt;code&gt;NullReferenceException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0cfc5e03a074b5ff497538e30726ab43dd9c052" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;SelectedDate&lt;/code&gt; is in fact a property - of &lt;code&gt;DateTime&lt;/code&gt; type - of the &lt;code&gt;Calendar&lt;/code&gt; Web Control type, and the binding could perfectly return something null. The implicit ASP.NET Generator will create a piece of code that will be equivalent to the cast code above. And this will raise a &lt;code&gt;NullReferenceException&lt;/code&gt; that is quite difficult to spot, because it lies in ASP.NET generated code which compiles fine...</source>
          <target state="translated">Aqu&amp;iacute;, &lt;code&gt;SelectedDate&lt;/code&gt; es, de hecho, una propiedad, del tipo &lt;code&gt;DateTime&lt;/code&gt; ,del tipo &lt;code&gt;Calendar&lt;/code&gt; Web Control, y el enlace podr&amp;iacute;a devolver perfectamente algo nulo. El Generador ASP.NET impl&amp;iacute;cito crear&amp;aacute; un fragmento de c&amp;oacute;digo que ser&amp;aacute; equivalente al c&amp;oacute;digo de transmisi&amp;oacute;n anterior. Y esto generar&amp;aacute; una &lt;code&gt;NullReferenceException&lt;/code&gt; que es bastante dif&amp;iacute;cil de detectar, ya que se encuentra en el c&amp;oacute;digo generado por ASP.NET que compila bien ...</target>
        </trans-unit>
        <trans-unit id="ed1e9256d7edb2bcff5e3eaa417639f1f18c564e" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;myWebBrowser&lt;/code&gt; or &lt;code&gt;Document&lt;/code&gt; could be Nothing or the &lt;code&gt;formfld1&lt;/code&gt; element may not exist.</source>
          <target state="translated">Aqu&amp;iacute;, &lt;code&gt;myWebBrowser&lt;/code&gt; o &lt;code&gt;Document&lt;/code&gt; podr&amp;iacute;a ser Nothing o el elemento &lt;code&gt;formfld1&lt;/code&gt; puede no existir.</target>
        </trans-unit>
        <trans-unit id="2320c69a11432eba5e88d70d8ffa3f27efc00ca3" translate="yes" xml:space="preserve">
          <source>Hope this helps too!</source>
          <target state="translated">¡Espero que esto también ayude!</target>
        </trans-unit>
        <trans-unit id="0ae3600ced7e6090a5b25d1e38293c3e4c119186" translate="yes" xml:space="preserve">
          <source>How can it be avoided?</source>
          <target state="translated">¿Cómo se puede evitar?</target>
        </trans-unit>
        <trans-unit id="289dd28c102f868db09f817b7b706b35bc135e71" translate="yes" xml:space="preserve">
          <source>How do you find the source of a &lt;code&gt;NullReferenceException&lt;/code&gt;? Apart from looking at the exception itself, which will be thrown exactly at the location where it occurs, the general rules of debugging in Visual Studio apply: place strategic breakpoints and &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/esta7c62.aspx&quot;&gt;inspect your variables&lt;/a&gt;, either by hovering the mouse over their names, opening a (Quick)Watch window or using the various debugging panels like Locals and Autos.</source>
          <target state="translated">&amp;iquest;C&amp;oacute;mo encuentra la fuente de una &lt;code&gt;NullReferenceException&lt;/code&gt; ? Adem&amp;aacute;s de mirar la excepci&amp;oacute;n en s&amp;iacute;, que se lanzar&amp;aacute; exactamente en el lugar donde ocurre, se aplican las reglas generales de depuraci&amp;oacute;n en Visual Studio: coloque puntos de interrupci&amp;oacute;n estrat&amp;eacute;gicos e &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/esta7c62.aspx&quot;&gt;inspeccione sus variables&lt;/a&gt; , ya sea colocando el mouse sobre sus nombres, abriendo un ( R&amp;aacute;pido) Mire la ventana o use los diversos paneles de depuraci&amp;oacute;n como Locales y Autos.</target>
        </trans-unit>
        <trans-unit id="c9076ca26af1e797ee780559308ab39c1861f589" translate="yes" xml:space="preserve">
          <source>I have a different perspective to answering this. This sort of answers &lt;strong&gt;&quot;what else can I do to avoid it?&lt;/strong&gt;&quot;</source>
          <target state="translated">Tengo una perspectiva diferente para responder esto. Este tipo de respuestas &lt;strong&gt;&quot;&amp;iquest;qu&amp;eacute; m&amp;aacute;s puedo hacer para evitarlo?&lt;/strong&gt; &quot;</target>
        </trans-unit>
        <trans-unit id="4b181a81f82b32a1fdd472eb539bf0016ed99f5f" translate="yes" xml:space="preserve">
          <source>I have some code and when it executes, it throws a &lt;code&gt;NullReferenceException&lt;/code&gt;, saying:</source>
          <target state="translated">Tengo un c&amp;oacute;digo y cuando se ejecuta, arroja una &lt;code&gt;NullReferenceException&lt;/code&gt; , que dice:</target>
        </trans-unit>
        <trans-unit id="039ba9acfb4e759d3a5ed8951d9aef9d9682bea4" translate="yes" xml:space="preserve">
          <source>I was getting &lt;code&gt;Object reference not set to an instance of an object&lt;/code&gt; when I tried to render a View within a View by sending it a Model, like this:</source>
          <target state="translated">&lt;code&gt;Object reference not set to an instance of an object&lt;/code&gt; cuando intent&amp;eacute; representar una vista dentro de una vista envi&amp;aacute;ndole un modelo, como este:</target>
        </trans-unit>
        <trans-unit id="cdd8f575833c363a288e4e756f1a133957aee9ea" translate="yes" xml:space="preserve">
          <source>I'll be using a RigidBody variable as an example.</source>
          <target state="translated">Usaré una variable de Cuerpo Rígido como ejemplo.</target>
        </trans-unit>
        <trans-unit id="fd9aa298728dbdb009eb67b0148c8d2d45bb648a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;dgvBooks&lt;/code&gt; has &lt;code&gt;AutoGenerateColumns = True&lt;/code&gt;, it will create the columns, but it does not name them, so the above code fails when it references them by name.</source>
          <target state="translated">Si &lt;code&gt;dgvBooks&lt;/code&gt; tiene &lt;code&gt;AutoGenerateColumns = True&lt;/code&gt; , crear&amp;aacute; las columnas, pero no las nombrar&amp;aacute;, por lo que el c&amp;oacute;digo anterior falla cuando hace referencia a ellas por nombre.</target>
        </trans-unit>
        <trans-unit id="bb92213da41ab10c3a7c561c6d6e69a25df9059f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;whatever&lt;/code&gt; results in &lt;code&gt;null&lt;/code&gt; then &lt;code&gt;MakeFrob&lt;/code&gt; will throw.  Now, you might think that the right thing to do is this:</source>
          <target state="translated">Si &lt;code&gt;whatever&lt;/code&gt; resulte en &lt;code&gt;null&lt;/code&gt; , &lt;code&gt;MakeFrob&lt;/code&gt; lo lanzar&amp;aacute;. Ahora, podr&amp;iacute;a pensar que lo correcto es esto:</target>
        </trans-unit>
        <trans-unit id="c31841110ff2a43d84d3c54ced95f988e30ba219" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;CheckBox&lt;/code&gt; with &lt;code&gt;chkName&lt;/code&gt; can't be found (or exists in a &lt;code&gt;GroupBox&lt;/code&gt;), then &lt;code&gt;chk&lt;/code&gt; will be Nothing and be attempting to reference any property will result in an exception.</source>
          <target state="translated">Si no se puede encontrar un &lt;code&gt;CheckBox&lt;/code&gt; con &lt;code&gt;chkName&lt;/code&gt; (o existe en un &lt;code&gt;GroupBox&lt;/code&gt; ), entonces &lt;code&gt;chk&lt;/code&gt; ser&amp;aacute; Nothing e intentar hacer referencia a cualquier propiedad dar&amp;aacute; como resultado una excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="56b8e5facbdd4848585ce4e50ddd17e21345d1f4" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;NullReferenceException&lt;/code&gt; is thrown by &lt;code&gt;unsafe&lt;/code&gt; code, you might look at your pointer variables, and check them for &lt;code&gt;IntPtr.Zero&lt;/code&gt; or something. Which is the same thing (&quot;null pointer exception&quot;), but in unsafe code, variables are often cast to value-types/arrays, etc., and you bang your head against the wall, wondering how a value-type can throw this exception.</source>
          <target state="translated">Si un c&amp;oacute;digo &lt;code&gt;unsafe&lt;/code&gt; &lt;code&gt;IntPtr.Zero&lt;/code&gt; una excepci&amp;oacute;n &lt;code&gt;NullReferenceException&lt;/code&gt; , puede mirar sus variables de puntero y verificarlas para IntPtr.Zero o algo as&amp;iacute;. Lo que es lo mismo (&quot;excepci&amp;oacute;n de puntero nulo&quot;), pero en el c&amp;oacute;digo inseguro, las variables a menudo se convierten en tipos / matrices de valores, etc., y te golpeas la cabeza contra la pared, pregunt&amp;aacute;ndote c&amp;oacute;mo un tipo de valor puede arrojar esto excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3ba69a96020f6c1697e9f0b564be8a369771f477" translate="yes" xml:space="preserve">
          <source>If it is caused on some &lt;strong&gt;database&lt;/strong&gt; commands because the object isn't present then all you need to do is do a null check and handle it:</source>
          <target state="translated">Si se produce en algunos comandos de la &lt;strong&gt;base de datos&lt;/strong&gt; porque el objeto no est&amp;aacute; presente, entonces todo lo que necesita hacer es hacer una verificaci&amp;oacute;n nula y manejarlo:</target>
        </trans-unit>
        <trans-unit id="a0fc7e5c19cd4824faca0c76683d3494b34dba43" translate="yes" xml:space="preserve">
          <source>If one is getting this message during saving or compiling the build, just close all the files and then open any file to compile and save.</source>
          <target state="translated">Si uno recibe este mensaje durante el guardado o la compilación de la construcción,simplemente cierre todos los archivos y luego abra cualquier archivo para compilar y guardar.</target>
        </trans-unit>
        <trans-unit id="0b56c362f306a958689a4fcd2922fb1cfb57868c" translate="yes" xml:space="preserve">
          <source>If ref1 or ref2 or ref3 is null, then you'll get a &lt;code&gt;NullReferenceException&lt;/code&gt;. If you want to solve the problem, then find out which one is null by rewriting the expression to its simpler equivalent:</source>
          <target state="translated">Si ref1 o ref2 o ref3 es nulo, obtendr&amp;aacute; una &lt;code&gt;NullReferenceException&lt;/code&gt; . Si desea resolver el problema, descubra cu&amp;aacute;l es nulo reescribiendo la expresi&amp;oacute;n a su equivalente m&amp;aacute;s simple:</target>
        </trans-unit>
        <trans-unit id="1e7a62c30a52478b4caee9f5d2f2740eae4bcb26" translate="yes" xml:space="preserve">
          <source>If the exception occurs when referencing a property of &lt;code&gt;@Model&lt;/code&gt; in an &lt;code&gt;ASP.NET MVC View&lt;/code&gt;, you need to understand that the &lt;code&gt;Model&lt;/code&gt; gets set in your action method, when you &lt;code&gt;return&lt;/code&gt; a view. When you return an empty model (or model property) from your controller, the exception occurs when the views access it:</source>
          <target state="translated">Si la excepci&amp;oacute;n ocurre cuando se hace referencia a una propiedad de &lt;code&gt;@Model&lt;/code&gt; en una &lt;code&gt;ASP.NET MVC View&lt;/code&gt; , debe comprender que el &lt;code&gt;Model&lt;/code&gt; se establece en su m&amp;eacute;todo de acci&amp;oacute;n, cuando &lt;code&gt;return&lt;/code&gt; una vista. Cuando devuelve un modelo vac&amp;iacute;o (o propiedad de modelo) desde su controlador, la excepci&amp;oacute;n ocurre cuando las vistas acceden a &amp;eacute;l:</target>
        </trans-unit>
        <trans-unit id="a383d31e09e21027128bda7cc84f8a8c4c8d65f8" translate="yes" xml:space="preserve">
          <source>If the person does not have a title, this will throw an exception because it is trying to call &lt;code&gt;ToUpper&lt;/code&gt; on a property with a null value.</source>
          <target state="translated">Si la persona no tiene un t&amp;iacute;tulo, esto generar&amp;aacute; una excepci&amp;oacute;n porque est&amp;aacute; intentando llamar a &lt;code&gt;ToUpper&lt;/code&gt; en una propiedad con un valor nulo.</target>
        </trans-unit>
        <trans-unit id="5cf3aeda57ef955ddb285e14c6996f8c139ee9bf" translate="yes" xml:space="preserve">
          <source>If we consider common scenarios where this exception can be thrown, accessing properties withing object at the top.</source>
          <target state="translated">Si consideramos los escenarios comunes donde esta excepción puede ser lanzada,accediendo a las propiedades con el objeto en la parte superior.</target>
        </trans-unit>
        <trans-unit id="bd4df3cabfb26db423d61513abb17ea9d42bbc71" translate="yes" xml:space="preserve">
          <source>If you are debugging with Just My Code enabled, the behavior is slightly different. With Just My Code enabled, the debugger ignores first-chance common language runtime (CLR) exceptions that are thrown outside of My Code and do not pass through My Code</source>
          <target state="translated">Si estás depurando con Sólo mi código activado,el comportamiento es ligeramente diferente.Con Sólo mi código activado,el depurador ignora las excepciones de tiempo de ejecución de lenguaje común (CLR)que se lanzan fuera de Mi código y no pasan a través de Mi código.</target>
        </trans-unit>
        <trans-unit id="5d011199f17f1b3224336bf477779ff919919146" translate="yes" xml:space="preserve">
          <source>If you are expecting the type conversion to always succeed (ie. you know what the object should be ahead of time), then you should use a cast:</source>
          <target state="translated">Si esperas que la conversión de tipos siempre tenga éxito (es decir,sabes de antemano cuál debe ser el objeto),entonces debes usar un molde:</target>
        </trans-unit>
        <trans-unit id="db5359f7b5259b8f8194c263074c45fca315ff8a" translate="yes" xml:space="preserve">
          <source>If you are unsure of the type, but you want to &lt;em&gt;try&lt;/em&gt; to use it as a specific type, then use &lt;code&gt;as&lt;/code&gt;:</source>
          <target state="translated">Si no est&amp;aacute; seguro del tipo, pero desea &lt;em&gt;intentar&lt;/em&gt; usarlo como un tipo espec&amp;iacute;fico, use &lt;code&gt;as&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1c923dbbe26d09b3ec56dc6968714cd47b9bf93d" translate="yes" xml:space="preserve">
          <source>If you are working with unsafe code and you get a null dereference exception, just be aware that the offending pointer need not be null. It can be any location in the lowest page, and this exception will be produced.</source>
          <target state="translated">Si estás trabajando con un código inseguro y obtienes una excepción de dereferencia nula,sólo ten en cuenta que el puntero ofensivo no tiene por qué ser nulo.Puede estar en cualquier lugar de la página más baja,y esta excepción se producirá.</target>
        </trans-unit>
        <trans-unit id="9eee74fa45beb820853095727a40c22279c9d0bc" translate="yes" xml:space="preserve">
          <source>If you do use a &lt;code&gt;For n&lt;/code&gt; loop, modify the row count or use &lt;code&gt;Exit For&lt;/code&gt; when &lt;code&gt;IsNewRow&lt;/code&gt; is true.</source>
          <target state="translated">Si usa un bucle &lt;code&gt;For n&lt;/code&gt; , modifique el recuento de filas o use &lt;code&gt;Exit For&lt;/code&gt; cuando &lt;code&gt;IsNewRow&lt;/code&gt; sea ​​verdadero.</target>
        </trans-unit>
        <trans-unit id="e09bc8a6a4e58664c4a3a3793f96ba758d2f4e9b" translate="yes" xml:space="preserve">
          <source>If you examine the reference source for &lt;code&gt;LINQ&lt;/code&gt; to Objects you will see that this technique is used throughout. It is slightly more clunky to write, but it makes debugging nullity errors much easier.  &lt;strong&gt;Optimize your code for the convenience of the caller, not the convenience of the author&lt;/strong&gt;.</source>
          <target state="translated">Si examina la fuente de referencia para &lt;code&gt;LINQ&lt;/code&gt; to Objects, ver&amp;aacute; que esta t&amp;eacute;cnica se utiliza en todo momento. Es un poco m&amp;aacute;s torpe escribir, pero hace que la depuraci&amp;oacute;n de errores de nulidad sea mucho m&amp;aacute;s f&amp;aacute;cil. &lt;strong&gt;Optimice su c&amp;oacute;digo para la conveniencia de la persona que llama, no para la conveniencia del autor&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="e93bb8e62bdb0cbe375e02bcdd4025ed3a5280b6" translate="yes" xml:space="preserve">
          <source>If you expect the reference sometimes to be null, you can check for it being &lt;code&gt;null&lt;/code&gt; before accessing instance members:</source>
          <target state="translated">Si espera que la referencia a veces sea nula, puede verificar que sea &lt;code&gt;null&lt;/code&gt; antes de acceder a los miembros de la instancia:</target>
        </trans-unit>
        <trans-unit id="954ae9f52d37b1ad255f61190a8a7c1d85bef3ef" translate="yes" xml:space="preserve">
          <source>If you have not initialized a reference type, and you want to set or read one of its properties, it will throw a &lt;strong&gt;NullReferenceException&lt;/strong&gt;.</source>
          <target state="translated">Si no ha inicializado un tipo de referencia y desea establecer o leer una de sus propiedades, arrojar&amp;aacute; una &lt;strong&gt;NullReferenceException&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="c9b75db38115a136957814e589aeeb2dac83db23" translate="yes" xml:space="preserve">
          <source>If you want to avoid the child (Person) null reference, you could initialize it in the parent (Book) object's constructor.</source>
          <target state="translated">Si quieres evitar la referencia nula del hijo (Persona),podrías inicializarlo en el constructor del objeto padre (Libro).</target>
        </trans-unit>
        <trans-unit id="7672c7bfcdb17d75fe7dfc75005f4c60663395f1" translate="yes" xml:space="preserve">
          <source>If you want to find out where the reference is or isn't set, right-click its name and select &quot;Find All References&quot;. You can then place a breakpoint at every found location and run your program with the debugger attached. Every time the debugger breaks on such a breakpoint, you need to determine whether you expect the reference to be non-null, inspect the variable, and verify that it points to an instance when you expect it to.</source>
          <target state="translated">Si quiere saber dónde está o no la referencia,haga clic con el botón derecho del ratón en su nombre y seleccione &quot;Buscar todas las referencias&quot;.A continuación,puede colocar un punto de interrupción en cada ubicación encontrada y ejecutar su programa con el depurador adjunto.Cada vez que el depurador se rompe en un punto de ruptura de este tipo,debe determinar si espera que la referencia no sea nula,inspeccionar la variable y verificar que apunte a una instancia cuando lo espera.</target>
        </trans-unit>
        <trans-unit id="124ed7dc2efaa392800e559d8512faa6fddfc4a6" translate="yes" xml:space="preserve">
          <source>If you're not sure whether the object is null, check it with &lt;code&gt;object == null&lt;/code&gt;.</source>
          <target state="translated">Si no est&amp;aacute; seguro de si el objeto es nulo, verif&amp;iacute;quelo con &lt;code&gt;object == null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9d87c823bab4a6a3c23f4fa35b0ab3165ebc81e" translate="yes" xml:space="preserve">
          <source>Imagine that &lt;code&gt;country&lt;/code&gt; is an object of type &lt;code&gt;Country&lt;/code&gt; that has a property called &lt;code&gt;State&lt;/code&gt; and so on. If &lt;code&gt;country&lt;/code&gt;, &lt;code&gt;State&lt;/code&gt;, &lt;code&gt;County&lt;/code&gt;, or &lt;code&gt;City&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; then &lt;code&gt;address will be&lt;/code&gt;null&lt;code&gt;. Therefore you only have to check whether&lt;/code&gt;address&lt;code&gt;is&lt;/code&gt;null`.</source>
          <target state="translated">Imagine que el &lt;code&gt;country&lt;/code&gt; es un objeto de tipo &lt;code&gt;Country&lt;/code&gt; que tiene una propiedad llamada &lt;code&gt;State&lt;/code&gt; etc. Si el &lt;code&gt;country&lt;/code&gt; , &lt;code&gt;State&lt;/code&gt; , &lt;code&gt;County&lt;/code&gt; o &lt;code&gt;City&lt;/code&gt; es &lt;code&gt;null&lt;/code&gt; , la &lt;code&gt;address will be&lt;/code&gt; nula &lt;code&gt;. Therefore you only have to check whether&lt;/code&gt; Por lo tanto, solo tiene que verificar si la direcci&amp;oacute;n &lt;code&gt;is&lt;/code&gt; nula`.</target>
        </trans-unit>
        <trans-unit id="d8dc338b100fb641765e4200d2b3f89eb5c8d59d" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;C# 5&lt;/code&gt; and below, this can be guarded with:</source>
          <target state="translated">En &lt;code&gt;C# 5&lt;/code&gt; y abajo, esto se puede proteger con:</target>
        </trans-unit>
        <trans-unit id="d9af0d957316871a93fd8ae5a5c0570ecd645f0d" translate="yes" xml:space="preserve">
          <source>In Visual Studio this is usually easy thanks to the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/sc65sadd.aspx&quot;&gt;Visual Studio Debugger&lt;/a&gt;.</source>
          <target state="translated">En Visual Studio, esto suele ser f&amp;aacute;cil gracias al &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/sc65sadd.aspx&quot;&gt;Visual Studio Debugger&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="442f25764599824025c21fd67a95683d7a1d4d49" translate="yes" xml:space="preserve">
          <source>In comparison to an ArgumentNullException which is typically thrown as a defensive measure if a method expects that what is being passed to it is not null.</source>
          <target state="translated">En comparación con un ArgumentoNuloExcepción que es típicamente lanzado como una medida defensiva si un método espera que lo que se le pasa no es nulo.</target>
        </trans-unit>
        <trans-unit id="0d6fbd94de7bcc900b19537b5bb326c45d6c0504" translate="yes" xml:space="preserve">
          <source>In general, you should use a cast or &lt;code&gt;as&lt;/code&gt;, as follows:</source>
          <target state="translated">En general, debe usar un yeso o &lt;code&gt;as&lt;/code&gt; , de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="a745bf8342a8ec9dc29ec2f0e55b1f294b6ff60a" translate="yes" xml:space="preserve">
          <source>In more advanced cases, such as the following, you'll need to use one of the techniques above (Watch or Immediate Windows) to inspect the expressions to determine if &lt;code&gt;str1&lt;/code&gt; was null or if &lt;code&gt;str2&lt;/code&gt; was null.</source>
          <target state="translated">En casos m&amp;aacute;s avanzados, como el siguiente, deber&amp;aacute; usar una de las t&amp;eacute;cnicas anteriores (Watch o Windows Inmediato) para inspeccionar las expresiones para determinar si &lt;code&gt;str1&lt;/code&gt; era nulo o si &lt;code&gt;str2&lt;/code&gt; era nulo.</target>
        </trans-unit>
        <trans-unit id="6c2d2f16f8b1cfa8d5861b4766e0faaf22391a45" translate="yes" xml:space="preserve">
          <source>In short, &lt;em&gt;class invariants&lt;/em&gt; ensure that there will be some constraints in your class that will not get violated in normal use (and therefore, the class will &lt;em&gt;not&lt;/em&gt; get in an inconsistent state). &lt;em&gt;Preconditions&lt;/em&gt; mean that data given as input to a function/method must follow some constraints set and &lt;strong&gt;never&lt;/strong&gt; violate them, and &lt;em&gt;postconditions&lt;/em&gt; mean that a function/method output must follow the set constraints again without ever violating them.
Contract conditions should &lt;strong&gt;never&lt;/strong&gt; be violated during execution of a bug-free program, therefore design by contract is checked in practice in debug mode, while being &lt;em&gt;disabled in releases&lt;/em&gt;, to maximize the developed system performance.</source>
          <target state="translated">En resumen, &lt;em&gt;los invariantes de clase&lt;/em&gt; aseguran que habr&amp;aacute; algunas restricciones en su clase que no ser&amp;aacute;n violadas en el uso normal (y, por lo tanto, la clase &lt;em&gt;no&lt;/em&gt; entrar&amp;aacute; en un estado inconsistente). &lt;em&gt;Las condiciones previas&lt;/em&gt; significan que los datos proporcionados como entrada para una funci&amp;oacute;n / m&amp;eacute;todo deben seguir algunas restricciones establecidas y &lt;strong&gt;nunca&lt;/strong&gt; violarlas, y las condiciones &lt;em&gt;posteriores&lt;/em&gt; significan que una salida de funci&amp;oacute;n / m&amp;eacute;todo debe seguir las restricciones establecidas nuevamente sin violarlas nunca. Las condiciones del contrato &lt;strong&gt;nunca&lt;/strong&gt; deben violarse durante la ejecuci&amp;oacute;n de un programa libre de errores, por lo tanto, el dise&amp;ntilde;o por contrato se verifica en la pr&amp;aacute;ctica en modo de depuraci&amp;oacute;n, mientras se &lt;em&gt;desactiva en las versiones&lt;/em&gt; , para maximizar el rendimiento del sistema desarrollado.</target>
        </trans-unit>
        <trans-unit id="ee86d3f393a29644b6be92e8be9ec8a1afe52114" translate="yes" xml:space="preserve">
          <source>In the other direction, a &lt;strong&gt;&lt;em&gt;boxing&lt;/em&gt;&lt;/strong&gt; conversion &lt;em&gt;from&lt;/em&gt; a &lt;code&gt;Nullable&amp;lt;&amp;gt;&lt;/code&gt; which has &lt;code&gt;HasValue&lt;/code&gt; equal to &lt;code&gt;false&lt;/code&gt;&lt;em&gt;to&lt;/em&gt; a reference type, can give a &lt;code&gt;null&lt;/code&gt; reference which can then later lead to a &lt;code&gt;NullReferenceException&lt;/code&gt;. The classic example is:</source>
          <target state="translated">En la otra direcci&amp;oacute;n, una conversi&amp;oacute;n de &lt;strong&gt;&lt;em&gt;boxeo&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;de&lt;/em&gt; un &lt;code&gt;Nullable&amp;lt;&amp;gt;&lt;/code&gt; que tiene un valor de &lt;code&gt;HasValue&lt;/code&gt; igual a &lt;code&gt;false&lt;/code&gt; &lt;em&gt;a&lt;/em&gt; un tipo de referencia, puede dar una referencia &lt;code&gt;null&lt;/code&gt; que luego puede conducir a una &lt;code&gt;NullReferenceException&lt;/code&gt; . El ejemplo cl&amp;aacute;sico es:</target>
        </trans-unit>
        <trans-unit id="7a5a670646192c2904df37f98794bc286c1f51c1" translate="yes" xml:space="preserve">
          <source>In unsafe mode, you should be aware of two important facts:</source>
          <target state="translated">En el modo inseguro,debe ser consciente de dos hechos importantes:</target>
        </trans-unit>
        <trans-unit id="3be7faaf917ec1e75bc105ac00cd45db1f27d22a" translate="yes" xml:space="preserve">
          <source>In-built method: System methods such as GetValueOrDefault(),IsNullOrWhiteSpace() and IsNullorEmpty()  checks for nulls and assign the default value if there is a null value.</source>
          <target state="translated">Método incorporado:Los métodos del sistema como GetValueOrDefault(),IsNullOrWhiteSpace()e IsNullorEmpty()comprueban si hay nulos y asignan el valor por defecto si hay un valor nulo.</target>
        </trans-unit>
        <trans-unit id="8cbe1b61604257c69eb792f97e93456c4cc68afc" translate="yes" xml:space="preserve">
          <source>Indirect</source>
          <target state="translated">Indirect</target>
        </trans-unit>
        <trans-unit id="414415dac9332746c5ff97ecdc8a7f74c2f17f06" translate="yes" xml:space="preserve">
          <source>Initialize the settings collection in the form's &lt;code&gt;Load&lt;/code&gt; event handler, if/when needed:</source>
          <target state="translated">Inicialice la colecci&amp;oacute;n de configuraciones en el controlador de eventos &lt;code&gt;Load&lt;/code&gt; del formulario, si es necesario:</target>
        </trans-unit>
        <trans-unit id="234d47467506fc9f47ee7950fcdb7bb2ae54365b" translate="yes" xml:space="preserve">
          <source>Integral types</source>
          <target state="translated">Tipos integrales</target>
        </trans-unit>
        <trans-unit id="c3341d58f2612c2f24999b64faed81efad614d89" translate="yes" xml:space="preserve">
          <source>Interestingly, none of the answers on this page mention the two edge cases, hope no one minds if I add them:</source>
          <target state="translated">Curiosamente,ninguna de las respuestas de esta página menciona los dos casos extremos,espero que a nadie le importe si los añado:</target>
        </trans-unit>
        <trans-unit id="01bd706ed0b9c186751dc7af37426b554a904934" translate="yes" xml:space="preserve">
          <source>Introduced in &lt;code&gt;C# 8&lt;/code&gt; there null context's and nullable reference types perform static analysis on variables and provides a compiler warning if a value can be potentially null or have been set to null. The nullable reference types allows types to be explicitly allowed to be null.</source>
          <target state="translated">Introducido en &lt;code&gt;C# 8&lt;/code&gt; contexto nulo y los tipos de referencia anulables realizan un an&amp;aacute;lisis est&amp;aacute;tico de las variables y proporciona una advertencia del compilador si un valor puede ser potencialmente nulo o se ha establecido en nulo. Los tipos de referencia anulables permiten que los tipos sean expl&amp;iacute;citamente nulos.</target>
        </trans-unit>
        <trans-unit id="cbf6007ad3f8db48b2caa744d94cf086e082dc37" translate="yes" xml:space="preserve">
          <source>It also arises when we forget to instantiate our objects. Using methods, properties, collections etc. which can return or set null values can also be the cause of this exception.</source>
          <target state="translated">También surge cuando olvidamos instanciar nuestros objetos.El uso de métodos,propiedades,colecciones,etc.que pueden devolver o establecer valores nulos también puede ser la causa de esta excepción.</target>
        </trans-unit>
        <trans-unit id="6f40b22d84245ca604cc84dc6eef8a46a3df02af" translate="yes" xml:space="preserve">
          <source>It is curious that VB does not provide a warning, but the remedy is to &lt;strong&gt;declare&lt;/strong&gt; the containers at the form level, but &lt;strong&gt;initialize&lt;/strong&gt; them in form load event handler when the controls &lt;strong&gt;do&lt;/strong&gt; exist. This can be done in &lt;code&gt;Sub New&lt;/code&gt; as long as your code is after the &lt;code&gt;InitializeComponent&lt;/code&gt; call:</source>
          <target state="translated">Es curioso que VB no proporcione una advertencia, pero el remedio es &lt;strong&gt;declarar&lt;/strong&gt; los contenedores a nivel de formulario, pero &lt;strong&gt;inicializarlos&lt;/strong&gt; en el controlador de eventos de carga de formulario cuando existan los controles. Esto se puede hacer en &lt;code&gt;Sub New&lt;/code&gt; siempre que su c&amp;oacute;digo sea posterior a la llamada &lt;code&gt;InitializeComponent&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2eef644af3700e5795f998539dd59e2e7c297244" translate="yes" xml:space="preserve">
          <source>It is not possible to reference anything 'downstream' of a &lt;code&gt;null&lt;/code&gt; object.  This also applies to controls:</source>
          <target state="translated">No es posible hacer referencia a nada 'aguas abajo' de un objeto &lt;code&gt;null&lt;/code&gt; . Esto tambi&amp;eacute;n se aplica a los controles:</target>
        </trans-unit>
        <trans-unit id="83c9a2a6f0cded3da8a2fd23d1724756e8709640" translate="yes" xml:space="preserve">
          <source>It means that the variable in question is pointed at nothing. I could generate this like so:</source>
          <target state="translated">Significa que la variable en cuestión no apunta a nada.Podría generar esto así:</target>
        </trans-unit>
        <trans-unit id="725b5851f8a7590790831cee0a9a54440c5e452d" translate="yes" xml:space="preserve">
          <source>It means your code used an object reference variable that was set to null (i.e. it did not reference an actual object instance).</source>
          <target state="translated">Significa que su código utilizó una variable de referencia de objeto que se fijó en nulo (es decir,no hizo referencia a una instancia de objeto real).</target>
        </trans-unit>
        <trans-unit id="0c813d120a6e5cc67f6c6bde99d1fd2ca0b51cc2" translate="yes" xml:space="preserve">
          <source>It will throw a &lt;code&gt;NullReferenceException&lt;/code&gt; on the cast. It seems quite obvious in the above sample, but this can happen in more &quot;late-binding&quot; intricate scenarios where the null object has been returned from some code you don't own, and the cast is for example generated by some automatic system.</source>
          <target state="translated">&lt;code&gt;NullReferenceException&lt;/code&gt; una NullReferenceException en el elenco. Parece bastante obvio en el ejemplo anterior, pero esto puede suceder en escenarios m&amp;aacute;s intrincados de &quot;enlace tard&amp;iacute;o&quot; en los que el objeto nulo ha sido devuelto por alg&amp;uacute;n c&amp;oacute;digo que no es de su propiedad, y el reparto es generado, por ejemplo, por alg&amp;uacute;n sistema autom&amp;aacute;tico.</target>
        </trans-unit>
        <trans-unit id="8179843545ce209e8ee908f48e63197ddb2508a8" translate="yes" xml:space="preserve">
          <source>It would be nice if C# had something like the &lt;code&gt;NotNull&amp;lt;T&amp;gt;&lt;/code&gt; struct above and had a similar shorthand, maybe the exclamation point (!) so that you could write something like: &lt;code&gt;public void WriteName(Person! person)&lt;/code&gt;.</source>
          <target state="translated">Ser&amp;iacute;a bueno que C # tuviera algo como la &lt;code&gt;NotNull&amp;lt;T&amp;gt;&lt;/code&gt; anterior y tuviera una taquigraf&amp;iacute;a similar, tal vez el signo de exclamaci&amp;oacute;n (!) Para que pueda escribir algo como: &lt;code&gt;public void WriteName(Person! person)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="955b6d8394cf76a1d4fe4f8e7ef177275da55c14" translate="yes" xml:space="preserve">
          <source>It's a great feature, but it gives you less information. It doesn't make it obvious which of the 4 is null.</source>
          <target state="translated">Es una gran característica,pero te da menos información.No hace obvio cuál de los 4 es nulo.</target>
        </trans-unit>
        <trans-unit id="4bf150ddb62d4d1939db3d1e25f12fdd47b0ee5f" translate="yes" xml:space="preserve">
          <source>It's used to test for null before performing a member access (?.) or index (?[) operation.</source>
          <target state="translated">Se utiliza para comprobar la nulidad antes de realizar una operación de acceso (?.)o de indexación (?[).</target>
        </trans-unit>
        <trans-unit id="71c8a217f58ff5fc0e4a7d04b09748b7f1e8da29" translate="yes" xml:space="preserve">
          <source>Jagged Arrays</source>
          <target state="translated">Arreglos dentados</target>
        </trans-unit>
        <trans-unit id="4de379f88b7ef46e6cfa5de6e9908e85f89cf4f0" translate="yes" xml:space="preserve">
          <source>JetBrains' Resharper tool will identify every place in your code that has the possibility of a null reference error, allowing you to put in a null check. This error is the number one source of bugs, IMHO.</source>
          <target state="translated">La herramienta Resharper de JetBrains identificará cada lugar de su código que tenga la posibilidad de un error de referencia nulo,permitiéndole hacer una comprobación nula.Este error es la fuente número uno de errores,IMHO.</target>
        </trans-unit>
        <trans-unit id="b2802386a0546365a801bdc9dc6dc071b11d5be6" translate="yes" xml:space="preserve">
          <source>Key Points</source>
          <target state="translated">Puntos clave</target>
        </trans-unit>
        <trans-unit id="8ee0e49c20d5b975cccff63b65f6a1467d4f272c" translate="yes" xml:space="preserve">
          <source>LINQ &lt;code&gt;FirstOrDefault()&lt;/code&gt; and &lt;code&gt;SingleOrDefault()&lt;/code&gt;</source>
          <target state="translated">LINQ &lt;code&gt;FirstOrDefault()&lt;/code&gt; y &lt;code&gt;SingleOrDefault()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="99356ca7906555a2f4c7dc97649a8efa6dbd0212" translate="yes" xml:space="preserve">
          <source>Like anything else, &lt;code&gt;null&lt;/code&gt; gets passed around. If it is &lt;code&gt;null&lt;/code&gt;&lt;em&gt;in&lt;/em&gt; method &quot;A&quot;, it could be that method &quot;B&quot; passed a &lt;code&gt;null&lt;/code&gt;&lt;em&gt;to&lt;/em&gt; method &quot;A&quot;.</source>
          <target state="translated">Como cualquier otra cosa, se pasa &lt;code&gt;null&lt;/code&gt; . Si es &lt;code&gt;null&lt;/code&gt; &lt;em&gt;en el&lt;/em&gt; m&amp;eacute;todo &quot;A&quot;, podr&amp;iacute;a ser que el m&amp;eacute;todo &quot;B&quot; pas&amp;oacute; un &lt;code&gt;null&lt;/code&gt; &lt;em&gt;al&lt;/em&gt; m&amp;eacute;todo &quot;A&quot;.</target>
        </trans-unit>
        <trans-unit id="aa96796b70166a01da429a974a3cc400dff498a8" translate="yes" xml:space="preserve">
          <source>Likewise, for arrays you can use &lt;code&gt;?[i]&lt;/code&gt; as follows:</source>
          <target state="translated">Del mismo modo, para las matrices puede usar &lt;code&gt;?[i]&lt;/code&gt; siguiente manera:</target>
        </trans-unit>
        <trans-unit id="5fd395238ed01cc167eb08a83b289717b17ed72a" translate="yes" xml:space="preserve">
          <source>Lists and Collection will simply be empty</source>
          <target state="translated">Las listas y la colección simplemente estarán vacías</target>
        </trans-unit>
        <trans-unit id="b89d28bc5880c1090375f320e5a1517ea528fb46" translate="yes" xml:space="preserve">
          <source>Lists and Collections</source>
          <target state="translated">Listas y colecciones</target>
        </trans-unit>
        <trans-unit id="8ed2e69395a71ce749a19137034071d7ce924763" translate="yes" xml:space="preserve">
          <source>Literally the easiest way to fix a NullReferenceExeption has two ways.
If you have a GameObject for example with a script attached and a variable named rb (rigidbody) this variable will start null when you start your game.</source>
          <target state="translated">Literalmente,la forma más fácil de arreglar una Exepción de Referencia Nula tiene dos maneras.Si tienes un GameObject por ejemplo con un script adjunto y una variable llamada rb (rigidbody)esta variable comenzará nula cuando empieces el juego.</target>
        </trans-unit>
        <trans-unit id="c42ff2b214ede29fd88c31705a2e471ec3556484" translate="yes" xml:space="preserve">
          <source>MSDN NullReference Exception</source>
          <target state="translated">Excepción de referencia nula de MSDN</target>
        </trans-unit>
        <trans-unit id="7ad8fdfe61e4454ef02db660ac35ba0748c9aa9d" translate="yes" xml:space="preserve">
          <source>MSDN: Best Practices for Exceptions</source>
          <target state="translated">MSDN:Mejores prácticas para las excepciones</target>
        </trans-unit>
        <trans-unit id="1799c9265044c387d0f81f0d8e6ab1b39fd3f4f5" translate="yes" xml:space="preserve">
          <source>MSDN: How to: Use the Try/Catch Block to Catch Exceptions</source>
          <target state="translated">MSDN:Cómo:Usar el bloque TryCatch para capturar excepciones</target>
        </trans-unit>
        <trans-unit id="78736f095b06c11f959a9bd8d826202e6b13baf7" translate="yes" xml:space="preserve">
          <source>Memory is virtualized in &lt;code&gt;Windows&lt;/code&gt;; each process gets a virtual memory space of many &quot;pages&quot; of memory that are tracked by the operating system. Each page of memory has flags set on it which determine how it may be used: read from, written to, executed, and so on.  The &lt;em&gt;lowest&lt;/em&gt; page is marked as &quot;produce an error if ever used in any way&quot;.</source>
          <target state="translated">La memoria est&amp;aacute; virtualizada en &lt;code&gt;Windows&lt;/code&gt; ; cada proceso obtiene un espacio de memoria virtual de muchas &quot;p&amp;aacute;ginas&quot; de memoria que son rastreadas por el sistema operativo. Cada p&amp;aacute;gina de memoria tiene marcas establecidas que determinan c&amp;oacute;mo se puede usar: leer, escribir, ejecutar, etc. La p&amp;aacute;gina &lt;em&gt;m&amp;aacute;s baja&lt;/em&gt; est&amp;aacute; marcada como &quot;producir un error si alguna vez se usa de alguna manera&quot;.</target>
        </trans-unit>
        <trans-unit id="e23cc54bff3a3a5d37dc37dc1662948bf36648f0" translate="yes" xml:space="preserve">
          <source>Methods call you expect to return an instance can return &lt;code&gt;null&lt;/code&gt;, for example when the object being sought cannot be found. You can choose to return a default value when this is the case:</source>
          <target state="translated">Los m&amp;eacute;todos de llamada que espera devolver una instancia pueden devolver &lt;code&gt;null&lt;/code&gt; , por ejemplo, cuando no se puede encontrar el objeto que se busca. Puede elegir devolver un valor predeterminado cuando este es el caso:</target>
        </trans-unit>
        <trans-unit id="f2f65c39e9befac556a2ece0db1de4b0c904147b" translate="yes" xml:space="preserve">
          <source>More Specifically</source>
          <target state="translated">Más específicamente</target>
        </trans-unit>
        <trans-unit id="1f2886a5d0eb58ab959b4b21d407f74a59989572" translate="yes" xml:space="preserve">
          <source>More information is in &lt;em&gt;&lt;a href=&quot;https://www.dotnetperls.com/nullreferenceexception&quot;&gt;C# NullReferenceException and Null Parameter&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">M&amp;aacute;s informaci&amp;oacute;n est&amp;aacute; en &lt;em&gt;&lt;a href=&quot;https://www.dotnetperls.com/nullreferenceexception&quot;&gt;C # NullReferenceException y Null Parameter&lt;/a&gt;&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="73d48e92ee90db3568c1d31a50c956aadebdfbd8" translate="yes" xml:space="preserve">
          <source>More realistic example - select nodes from XML document. Will throw if nodes are not found but initial debugging shows that all properties valid:</source>
          <target state="translated">Un ejemplo más realista:seleccionar nodos del documento XML.Se lanzará si no se encuentran nodos pero la depuración inicial muestra que todas las propiedades son válidas:</target>
        </trans-unit>
        <trans-unit id="f76899831263fd9799a64690d3ad0afc9100b2a4" translate="yes" xml:space="preserve">
          <source>My.Settings (StringCollection)</source>
          <target state="translated">My.Settings (StringCollection)</target>
        </trans-unit>
        <trans-unit id="41db439be65a63d22d9384237a7b090f77634c41" translate="yes" xml:space="preserve">
          <source>Name the columns manually, or reference by index:</source>
          <target state="translated">Nombrar las columnas manualmente,o la referencia por el índice:</target>
        </trans-unit>
        <trans-unit id="f73fd087219997abb0b2070a7f8b9006bc9c6c3b" translate="yes" xml:space="preserve">
          <source>Nested Collection Initializers</source>
          <target state="translated">Iniciadores de la colección anidada</target>
        </trans-unit>
        <trans-unit id="c2ffcf7dcaf6a0db61f66aee4b7d2a32b5b706ba" translate="yes" xml:space="preserve">
          <source>Nested Object Initializers</source>
          <target state="translated">Inicializadores de objetos anidados</target>
        </trans-unit>
        <trans-unit id="a9f6f220ca6e10feac65da97285e903dcd7c03df" translate="yes" xml:space="preserve">
          <source>New Operator</source>
          <target state="translated">Nuevo operador</target>
        </trans-unit>
        <trans-unit id="594a0ab4e25b09bd873763aa42a8cfaed596e74c" translate="yes" xml:space="preserve">
          <source>Note: &lt;strong&gt;Do not&lt;/strong&gt; use &lt;code&gt;Dim&lt;/code&gt; again in a procedure, including the constructor (&lt;code&gt;Sub New&lt;/code&gt;):</source>
          <target state="translated">Nota: &lt;strong&gt;No&lt;/strong&gt; use &lt;code&gt;Dim&lt;/code&gt; nuevamente en un procedimiento, incluido el constructor ( &lt;code&gt;Sub New&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="b0c7d1634f143651ccf0114e6c5ffff2ff4f10cd" translate="yes" xml:space="preserve">
          <source>Note: Beginning with VS 2010, when initializing a local array using a literal and &lt;code&gt;Option Infer&lt;/code&gt;, the &lt;code&gt;As &amp;lt;Type&amp;gt;&lt;/code&gt; and &lt;code&gt;New&lt;/code&gt; elements are optional:</source>
          <target state="translated">Nota: a partir de VS 2010, cuando se inicializa una matriz local utilizando un literal y una &lt;code&gt;Option Infer&lt;/code&gt; , los elementos &lt;code&gt;As &amp;lt;Type&amp;gt;&lt;/code&gt; y &lt;code&gt;New&lt;/code&gt; son opcionales:</target>
        </trans-unit>
        <trans-unit id="378b211edf065e14fb27dcd1e7e1b744600ccaae" translate="yes" xml:space="preserve">
          <source>Now the title variable will be null instead of throwing an exception. C# 6 introduces a shorter syntax for this:</source>
          <target state="translated">Ahora la variable del título será nula en lugar de lanzar una excepción.C#6 introduce una sintaxis más corta para esto:</target>
        </trans-unit>
        <trans-unit id="0e05b2f6e48a9c2172676721b07aa9534ae7f3f2" translate="yes" xml:space="preserve">
          <source>Now you are accessing this prop1 in some other class just like below:</source>
          <target state="translated">Ahora estás accediendo a esta prop1 en alguna otra clase como la de abajo:</target>
        </trans-unit>
        <trans-unit id="baac228f016bc4ccca30fd630c5ff646abbf3f89" translate="yes" xml:space="preserve">
          <source>Now, consider another class where you are trying to retrieve the student's full name.</source>
          <target state="translated">Ahora,considere otra clase en la que intente recuperar el nombre completo del estudiante.</target>
        </trans-unit>
        <trans-unit id="4850e4da722f36fec8d78291c92be908f1969d5e" translate="yes" xml:space="preserve">
          <source>Now, when I try to print the length of the string &lt;strong&gt;str&lt;/strong&gt;, I do get &lt;em&gt;An unhandled exception of type &amp;lsquo;System.NullReferenceException&amp;rsquo; occurred&lt;/em&gt; message because member &lt;strong&gt;str&lt;/strong&gt; is pointing to null and there can&amp;rsquo;t be any length of null.</source>
          <target state="translated">Ahora, cuando intento imprimir la longitud de la cadena &lt;strong&gt;str&lt;/strong&gt; , recibo &lt;em&gt;un&lt;/em&gt; mensaje &lt;em&gt;de excepci&amp;oacute;n no controlada del tipo 'System.NullReferenceException'&lt;/em&gt; porque la &lt;strong&gt;cadena&lt;/strong&gt; miembro apunta a nulo y no puede haber ninguna longitud nula.</target>
        </trans-unit>
        <trans-unit id="eafd17582b015c89f4f72513d53f759c4bde2b05" translate="yes" xml:space="preserve">
          <source>Now, when the NullReferenceException is thrown (or unhandled) the debugger will stop (remember the rule set above?) on the line on which the exception occurred. Sometimes the error will be easy to spot.</source>
          <target state="translated">Ahora,cuando la excepción de la referencia nula es lanzada (o desatendida)el depurador se detendrá (¿recuerda la regla establecida anteriormente?)en la línea en la que se produjo la excepción.A veces el error será fácil de detectar.</target>
        </trans-unit>
        <trans-unit id="318279d9fb722f810e6e3f50b545a9a0404b55c6" translate="yes" xml:space="preserve">
          <source>Null operators: Null Coalescing operator and null conditional operators can also be used in handy while setting values to objects, variables, properties and fields.</source>
          <target state="translated">Operadores nulos:El operador nulo de coalescencia y los operadores nulo condicional también pueden utilizarse de forma práctica mientras se establecen los valores de los objetos,las variables,las propiedades y los campos.</target>
        </trans-unit>
        <trans-unit id="2eb936c96dfd3a82cf681dcf1e453a56150f03fb" translate="yes" xml:space="preserve">
          <source>NullReference Exception &amp;mdash; Visual Basic</source>
          <target state="translated">Excepci&amp;oacute;n de referencia nula - Visual Basic</target>
        </trans-unit>
        <trans-unit id="108a53e72c1b0456c7d04a8155e32546371f242d" translate="yes" xml:space="preserve">
          <source>NullReferenceException arises due to our fault for not checking the object&amp;rsquo;s value. We often leave the object values unchecked in the code development.</source>
          <target state="translated">NullReferenceException surge debido a nuestra falla por no verificar el valor del objeto. A menudo dejamos los valores del objeto sin marcar en el desarrollo del c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="b5713cc5880d61c8ee4043a97acf6d784d345341" translate="yes" xml:space="preserve">
          <source>NullReferenceException or Object reference not set to an instance of an object occurs when an object of the class you are trying to use is not instantiated.
For example:</source>
          <target state="translated">NullReferenceException o Referencia de objeto no establecida a una instancia de un objeto ocurre cuando un objeto de la clase que se intenta utilizar no está instanciado.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="498d55bb5d750bf94a55e680251545631183f0ad" translate="yes" xml:space="preserve">
          <source>NullReferenceException won't occur if we are using Value type members.</source>
          <target state="translated">La excepción de la Referencia Nula no ocurrirá si estamos usando miembros del tipo Valor.</target>
        </trans-unit>
        <trans-unit id="d74de684582cb87f5abe203c6987280191b1e915" translate="yes" xml:space="preserve">
          <source>Numeric types</source>
          <target state="translated">Tipos numéricos</target>
        </trans-unit>
        <trans-unit id="3390ab1994cf8aa916e3506c4916e33bb1871966" translate="yes" xml:space="preserve">
          <source>Object Paths / Nested</source>
          <target state="translated">Los caminos de los objetos anidados</target>
        </trans-unit>
        <trans-unit id="dfefbee8fa51c19a77377fdc99c6d1e91ac2ebb8" translate="yes" xml:space="preserve">
          <source>Object reference not set to an instance of an object.</source>
          <target state="translated">La referencia al objeto no se fija en una instancia de un objeto.</target>
        </trans-unit>
        <trans-unit id="ffdbed86f65d9327dc3308e8c7e0ebc6a5dd365d" translate="yes" xml:space="preserve">
          <source>Object variables which are &lt;strong&gt;uninitialized&lt;/strong&gt; and hence &lt;strong&gt;point to nothing.&lt;/strong&gt; In this case, if you access properties or methods of such objects, it causes a &lt;code&gt;NullReferenceException&lt;/code&gt;.</source>
          <target state="translated">Variables de objeto que &lt;strong&gt;no&lt;/strong&gt; est&amp;aacute;n &lt;strong&gt;inicializadas&lt;/strong&gt; y, por lo tanto, no &lt;strong&gt;apuntan a nada.&lt;/strong&gt; En este caso, si accede a las propiedades o m&amp;eacute;todos de dichos objetos, se produce una &lt;code&gt;NullReferenceException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f9388be3a14ac2bf1c68c14b6f7c7b0ba00f598" translate="yes" xml:space="preserve">
          <source>Of course, you &lt;em&gt;still&lt;/em&gt; have to check &lt;code&gt;title&lt;/code&gt; for null or use the null condition operator together with the null coalescing operator (&lt;code&gt;??&lt;/code&gt;) to supply a default value:</source>
          <target state="translated">Por supuesto, &lt;em&gt;a&amp;uacute;n&lt;/em&gt; debe verificar el &lt;code&gt;title&lt;/code&gt; para nulo o usar el operador de condici&amp;oacute;n nula junto con el operador de fusi&amp;oacute;n nulo ( &lt;code&gt;??&lt;/code&gt; ) para proporcionar un valor predeterminado:</target>
        </trans-unit>
        <trans-unit id="fa4b5d0f97e6455028a59f1925e67775d0a3150f" translate="yes" xml:space="preserve">
          <source>On the matter of &lt;strong&gt;&quot;what should I do about it&quot;&lt;/strong&gt;, there can be many answers.</source>
          <target state="translated">En cuanto a &lt;strong&gt;&quot;qu&amp;eacute; debo hacer al respecto&quot;&lt;/strong&gt; , puede haber muchas respuestas.</target>
        </trans-unit>
        <trans-unit id="3d646273973e4205570d72f3076fd5fc36ee3360" translate="yes" xml:space="preserve">
          <source>Once &lt;em&gt;where&lt;/em&gt; the exception is throw has been located, it's usually trivial to reason backwards to find out where the null value was [incorrectly] introduced --</source>
          <target state="translated">Una vez &lt;em&gt;que&lt;/em&gt; se ha localizado la excepci&amp;oacute;n, generalmente es trivial razonar hacia atr&amp;aacute;s para descubrir d&amp;oacute;nde se introdujo [incorrectamente] el valor nulo:</target>
        </trans-unit>
        <trans-unit id="2a462199e4fdd6a0af25f3adcac4accc6d33e906" translate="yes" xml:space="preserve">
          <source>Once you know what and where the problem is, it is usually fairly easy to fix and faster than posting a new question.</source>
          <target state="translated">Una vez que sabes cuál es el problema y dónde está,suele ser bastante fácil de arreglar y más rápido que publicar una nueva pregunta.</target>
        </trans-unit>
        <trans-unit id="ae6cb7569ada63bc2d3e163016b98bc806afea38" translate="yes" xml:space="preserve">
          <source>One example of this is this simple ASP.NET binding fragment with the Calendar control:</source>
          <target state="translated">Un ejemplo de esto es este simple fragmento de unión ASP.NET con el control del Calendario:</target>
        </trans-unit>
        <trans-unit id="79a8436face2b533d827001515951269d4bfb9b3" translate="yes" xml:space="preserve">
          <source>Only reference types, as the name is suggesting, can hold references or point literally to nothing (or 'null'). Whereas value types always contain a value.</source>
          <target state="translated">Sólo los tipos de referencia,como sugiere el nombre,pueden contener referencias o no apuntan literalmente a nada (o &quot;nulo&quot;).Mientras que los tipos de valores siempre contienen un valor.</target>
        </trans-unit>
        <trans-unit id="025911f6c7d528b21a46faf9fcb9c34232aa12fe" translate="yes" xml:space="preserve">
          <source>Option Infer Statement</source>
          <target state="translated">Declaración de Inferencia de Opción</target>
        </trans-unit>
        <trans-unit id="f179578c51c822eb1fb66acea0ac9ffb6979808e" translate="yes" xml:space="preserve">
          <source>Or you can always code your own approach using plain old code. For example here is a struct that you can use to catch null references. It's modeled after the same concept as &lt;code&gt;Nullable&amp;lt;T&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">O siempre puede codificar su propio enfoque utilizando un c&amp;oacute;digo antiguo simple. Por ejemplo, aqu&amp;iacute; hay una estructura que puede usar para capturar referencias nulas. Est&amp;aacute; modelado seg&amp;uacute;n el mismo concepto que &lt;code&gt;Nullable&amp;lt;T&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1b22ef513641d8af3ca046740205bbee48335bff" translate="yes" xml:space="preserve">
          <source>Or you can even use it when the method just returns &lt;code&gt;T&lt;/code&gt; (in this case &lt;code&gt;Person&lt;/code&gt;) by doing a cast. For example, the following code would just like the code above:</source>
          <target state="translated">O incluso puede usarlo cuando el m&amp;eacute;todo solo devuelve &lt;code&gt;T&lt;/code&gt; (en este caso &lt;code&gt;Person&lt;/code&gt; a ) haciendo un lanzamiento. Por ejemplo, al siguiente c&amp;oacute;digo le gustar&amp;iacute;a el c&amp;oacute;digo anterior:</target>
        </trans-unit>
        <trans-unit id="c9a30ba5e221a0e082315c528b339ab02883ea86" translate="yes" xml:space="preserve">
          <source>Otherwise, the variable name will be assigned the value of the p.Spouse.FirstName.</source>
          <target state="translated">De lo contrario,al nombre de la variable se le asignará el valor del p.Nombre del cónyuge.</target>
        </trans-unit>
        <trans-unit id="350349ce41ad9ae3414e0ee6f0cc9d8fdd70adfe" translate="yes" xml:space="preserve">
          <source>Poorly Implemented Try/Catch</source>
          <target state="translated">Mal implementado TryCatch</target>
        </trans-unit>
        <trans-unit id="cf56bb150b35de64b7d13c5c15cc44a04165e6c6" translate="yes" xml:space="preserve">
          <source>Possibly, other code prematurely invalidated an object still in use</source>
          <target state="translated">Posiblemente,otro código invalidó prematuramente un objeto todavía en uso</target>
        </trans-unit>
        <trans-unit id="49dadac90d9e655d655da0a9465c937e3e41e55d" translate="yes" xml:space="preserve">
          <source>Range Variable (Indirect/Deferred)</source>
          <target state="translated">Variable de alcance (IndirectaDiferida)</target>
        </trans-unit>
        <trans-unit id="7bbbd80923d138130436a31cdb61e2a69e969c03" translate="yes" xml:space="preserve">
          <source>Rather than indirect references by name using the form's &lt;code&gt;Controls&lt;/code&gt; collection, use the control reference:</source>
          <target state="translated">En lugar de referencias indirectas por nombre usando la colecci&amp;oacute;n de &lt;code&gt;Controls&lt;/code&gt; del formulario, use la referencia de control:</target>
        </trans-unit>
        <trans-unit id="517a0d09eeac328a5dcd1752d817bf8b7bd38630" translate="yes" xml:space="preserve">
          <source>Referencing array elements later will result in an NRE. If you do this in &lt;code&gt;Form_Load&lt;/code&gt;, due to an odd bug, the IDE &lt;em&gt;may not&lt;/em&gt; report the exception when it happens. The exception will pop up &lt;em&gt;later&lt;/em&gt; when your code tries to use the array. This &quot;silent exception&quot; is &lt;a href=&quot;https://stackoverflow.com/a/4934010/1070452&quot;&gt;detailed in this post&lt;/a&gt;. For our purposes, the key is that when something catastrophic happens while creating a form (&lt;code&gt;Sub New&lt;/code&gt; or &lt;code&gt;Form Load&lt;/code&gt; event), exceptions may go unreported, the code exits the procedure and just displays the form.</source>
          <target state="translated">Hacer referencia a elementos de la matriz m&amp;aacute;s adelante dar&amp;aacute; como resultado una NRE. Si hace esto en &lt;code&gt;Form_Load&lt;/code&gt; , debido a un error extra&amp;ntilde;o, el IDE &lt;em&gt;puede no&lt;/em&gt; informar la excepci&amp;oacute;n cuando ocurra. La excepci&amp;oacute;n aparecer&amp;aacute; m&amp;aacute;s &lt;em&gt;tarde&lt;/em&gt; cuando su c&amp;oacute;digo intente usar la matriz. Esta &quot;excepci&amp;oacute;n silenciosa&quot; se &lt;a href=&quot;https://stackoverflow.com/a/4934010/1070452&quot;&gt;detalla en esta publicaci&amp;oacute;n&lt;/a&gt; . Para nuestros prop&amp;oacute;sitos, la clave es que cuando ocurre algo catastr&amp;oacute;fico al crear un formulario (evento &lt;code&gt;Sub New&lt;/code&gt; o &lt;code&gt;Form Load&lt;/code&gt; ), las excepciones pueden no informarse, el c&amp;oacute;digo sale del procedimiento y solo muestra el formulario.</target>
        </trans-unit>
        <trans-unit id="d7961680dc43f2fb54210f44d5d5893f415a97ea" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;Exit Function&lt;/code&gt; in the function with &lt;code&gt;Return bList&lt;/code&gt;. Returning an &lt;em&gt;empty&lt;/em&gt;&lt;code&gt;List&lt;/code&gt; is not the same as returning &lt;code&gt;Nothing&lt;/code&gt;. If there is a chance that a returned object can be &lt;code&gt;Nothing&lt;/code&gt;, test before using it:</source>
          <target state="translated">Reemplace la &lt;code&gt;Exit Function&lt;/code&gt; en la funci&amp;oacute;n con &lt;code&gt;Return bList&lt;/code&gt; . Devolver una &lt;code&gt;List&lt;/code&gt; a &lt;em&gt;vac&amp;iacute;a&lt;/em&gt; no es lo mismo que devolver &lt;code&gt;Nothing&lt;/code&gt; . Si existe la posibilidad de que un objeto devuelto pueda ser &lt;code&gt;Nothing&lt;/code&gt; , pruebe antes de usarlo:</target>
        </trans-unit>
        <trans-unit id="e09009f0be2bc5dc475d39c72cbad2457332d844" translate="yes" xml:space="preserve">
          <source>Scope in Visual Basic</source>
          <target state="translated">Alcance en Visual Basic</target>
        </trans-unit>
        <trans-unit id="ec36826e04a6ea83960855360f7576fa1a70dea9" translate="yes" xml:space="preserve">
          <source>See &quot;&lt;a href=&quot;https://stackoverflow.com/questions/19314340/nullreferenceexception-thrown-when-testing-custom-authorizationattribute&quot;&gt;NullReferenceException thrown when testing custom AuthorizationAttribute&lt;/a&gt;&quot; for a somewhat verbose example.</source>
          <target state="translated">Consulte &quot; &lt;a href=&quot;https://stackoverflow.com/questions/19314340/nullreferenceexception-thrown-when-testing-custom-authorizationattribute&quot;&gt;NullReferenceException lanzada al probar AuthorizationAttribute personalizado&lt;/a&gt; &quot; para obtener un ejemplo algo detallado.</target>
        </trans-unit>
        <trans-unit id="dee0432b1dfd3821074c0b47888585c85bdf5bb0" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Data.DataTable(v=vs.110).aspx&quot;&gt;DataTable Class&lt;/a&gt;.</source>
          <target state="translated">Ver tambi&amp;eacute;n la &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Data.DataTable(v=vs.110).aspx&quot;&gt;clase DataTable&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="371a87eafb4de078ff674d69a5a89c186532eb49" translate="yes" xml:space="preserve">
          <source>See also:</source>
          <target state="translated">Ver también:</target>
        </trans-unit>
        <trans-unit id="b81624007a72ba2076c9759224672d60d8e74940" translate="yes" xml:space="preserve">
          <source>Since VB is managing Settings for you, it is reasonable to expect it to initialize the collection. It will, but only if you have previously added an initial entry to the collection (in the Settings editor). Since the collection is (apparently) initialized when an item is added, it remains &lt;code&gt;Nothing&lt;/code&gt; when there are no items in the Settings editor to add.</source>
          <target state="translated">Dado que VB administra la configuraci&amp;oacute;n por usted, es razonable esperar que inicialice la recopilaci&amp;oacute;n. Lo har&amp;aacute;, pero solo si ha agregado previamente una entrada inicial a la colecci&amp;oacute;n (en el editor de Configuraci&amp;oacute;n). Dado que la colecci&amp;oacute;n se inicializa (aparentemente) cuando se agrega un elemento, permanece como &lt;code&gt;Nothing&lt;/code&gt; cuando no hay elementos en el editor de Configuraci&amp;oacute;n para agregar.</target>
        </trans-unit>
        <trans-unit id="5e1ee4902767b648a32002c3f0eac6e8212d4c61" translate="yes" xml:space="preserve">
          <source>Since no other code in your &lt;code&gt;Sub New&lt;/code&gt; or &lt;code&gt;Form Load&lt;/code&gt; event will run after the NRE, &lt;em&gt;a great many other things&lt;/em&gt; can be left uninitialized.</source>
          <target state="translated">Dado que ning&amp;uacute;n otro c&amp;oacute;digo en su evento &lt;code&gt;Sub New&lt;/code&gt; o &lt;code&gt;Form Load&lt;/code&gt; se ejecutar&amp;aacute; despu&amp;eacute;s del NRE, &lt;em&gt;muchas otras cosas&lt;/em&gt; pueden dejarse sin inicializar.</target>
        </trans-unit>
        <trans-unit id="169ef3e9a5e6d08f8ec9f775f25ef7ca8fe0ba80" translate="yes" xml:space="preserve">
          <source>Since the problem is an object reference which is &lt;code&gt;Nothing&lt;/code&gt;, the answer is to examine them to find out which one. Then determine why it is not initialized. Hold the mouse over the various variables and Visual Studio (VS) will show their values - the culprit will be &lt;code&gt;Nothing&lt;/code&gt;.</source>
          <target state="translated">Dado que el problema es una referencia de objeto que no es &lt;code&gt;Nothing&lt;/code&gt; , la respuesta es examinarlos para averiguar cu&amp;aacute;l. Luego determine por qu&amp;eacute; no se inicializa. Mantenga el mouse sobre las diversas variables y Visual Studio (VS) mostrar&amp;aacute; sus valores; el culpable ser&amp;aacute; &lt;code&gt;Nothing&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5af1e9a2d60a99283e7a7af80fb60c02d4755e0" translate="yes" xml:space="preserve">
          <source>Since this uses one table, using &lt;code&gt;Tables(0)&lt;/code&gt; will avoid spelling errors.  Examining &lt;code&gt;Rows.Count&lt;/code&gt; can also help:</source>
          <target state="translated">Como esto usa una tabla, el uso de &lt;code&gt;Tables(0)&lt;/code&gt; evitar&amp;aacute; errores ortogr&amp;aacute;ficos. Examinar &lt;code&gt;Rows.Count&lt;/code&gt; tambi&amp;eacute;n puede ayudar:</target>
        </trans-unit>
        <trans-unit id="5fb8e569fb6ed72a6dffcc33b03fceee972649a2" translate="yes" xml:space="preserve">
          <source>So how to tackle this:</source>
          <target state="translated">Entonces,¿cómo abordar esto?</target>
        </trans-unit>
        <trans-unit id="0af6f84e1abe20a8c228b77e487571323c47990e" translate="yes" xml:space="preserve">
          <source>So, as a practice we should always use null check, before accessing properties in such objects (specially in generic)</source>
          <target state="translated">Por lo tanto,como práctica deberíamos usar siempre el control nulo,antes de acceder a las propiedades en tales objetos (especialmente en genéricos)</target>
        </trans-unit>
        <trans-unit id="728a2ccae6943f95d4a0778979a96e78b85be334" translate="yes" xml:space="preserve">
          <source>So, if you're dealing with &lt;strong&gt;value types&lt;/strong&gt;, NullReferenceExceptions can &lt;strong&gt;not&lt;/strong&gt; occur. Though you need to keep alert when dealing with &lt;strong&gt;reference types&lt;/strong&gt;!</source>
          <target state="translated">Por lo tanto, si se trata de &lt;strong&gt;tipos de valores&lt;/strong&gt; , NullReferenceExceptions &lt;strong&gt;no&lt;/strong&gt; puede ocurrir. &amp;iexcl;Aunque debe mantenerse alerta al tratar con &lt;strong&gt;tipos de referencia&lt;/strong&gt; !</target>
        </trans-unit>
        <trans-unit id="3fef728484bb42f677ee7c22d16e57e13b623b0b" translate="yes" xml:space="preserve">
          <source>Some common scenarios where the exception can be thrown:</source>
          <target state="translated">Algunos escenarios comunes donde la excepción puede ser lanzada:</target>
        </trans-unit>
        <trans-unit id="270f67be70dbe22b11e82aa389399daab08d5ed7" translate="yes" xml:space="preserve">
          <source>Something which your code assumed would initialize an object, did not</source>
          <target state="translated">Algo que su código asumió que inicializaría un objeto,no</target>
        </trans-unit>
        <trans-unit id="d79169ce047a865f22ceedf2f516d3f6a8bd12b3" translate="yes" xml:space="preserve">
          <source>Something you assumed would perform flawlessly to return an initialized object to your code, did not.</source>
          <target state="translated">Algo que usted asumió que funcionaría perfectamente para devolver un objeto inicializado a su código,no lo hizo.</target>
        </trans-unit>
        <trans-unit id="7b881a3646ad1ece01b3005831c5797e83c52c23" translate="yes" xml:space="preserve">
          <source>Sometimes the boxing happens in another way. For example with this non-generic extension method:</source>
          <target state="translated">A veces el boxeo ocurre de otra manera.Por ejemplo,con este método de extensión no genérico:</target>
        </trans-unit>
        <trans-unit id="c8202db459212644c10dde57d8e4df666ce482d5" translate="yes" xml:space="preserve">
          <source>Special techniques for debugging and fixing null derefs in iterators</source>
          <target state="translated">Técnicas especiales de depuración y fijación de nulos derefs en los iteradores</target>
        </trans-unit>
        <trans-unit id="0fbbe68dcced5d9fa19046eaf6118ab8f81482e2" translate="yes" xml:space="preserve">
          <source>Specifically, in &lt;code&gt;HttpContext.Current.User.Identity.Name&lt;/code&gt;, the &lt;code&gt;HttpContext.Current&lt;/code&gt; could be null, or the &lt;code&gt;User&lt;/code&gt; property could be null, or the &lt;code&gt;Identity&lt;/code&gt; property could be null.</source>
          <target state="translated">Espec&amp;iacute;ficamente, en &lt;code&gt;HttpContext.Current.User.Identity.Name&lt;/code&gt; , &lt;code&gt;HttpContext.Current&lt;/code&gt; podr&amp;iacute;a ser nulo, o la propiedad &lt;code&gt;User&lt;/code&gt; podr&amp;iacute;a ser nula, o la propiedad &lt;code&gt;Identity&lt;/code&gt; podr&amp;iacute;a ser nula.</target>
        </trans-unit>
        <trans-unit id="f5dea8e13e62a3f32c925f340dc736efda53d43f" translate="yes" xml:space="preserve">
          <source>Suppose I have a class and member method in it. I have not instantiated my class but only named my class. Now if I try to use the method, the compiler will throw an error or issue a warning (depending on the compiler).</source>
          <target state="translated">Supongamos que tengo un método de clase y miembro en él.No he instanciado a mi clase,sino que sólo le he puesto nombre a mi clase.Ahora,si trato de usar el método,el compilador arrojará un error o emitirá una advertencia (dependiendo del compilador).</target>
        </trans-unit>
        <trans-unit id="a9bfffacd695cafe387b5dba29e8a53f54d17c9a" translate="yes" xml:space="preserve">
          <source>Suppose you have a web form Contact.aspx whose codebehind class is Contact and you have an entity name Contact.</source>
          <target state="translated">Supongamos que tienes un formulario web Contact.aspx cuya clase de código es Contact y tienes un nombre de entidad Contact.</target>
        </trans-unit>
        <trans-unit id="a32dcf6bc661323f00cb04b17bca14992a13218c" translate="yes" xml:space="preserve">
          <source>System.NullReferenceException: Object reference not set to an instance
  of an object. at Program.Main()</source>
          <target state="translated">Sistema.Excepción de referencia nula:Referencia de objeto no establecida en una instancia de un objeto.en Program.Main()</target>
        </trans-unit>
        <trans-unit id="61b52702efd8978d72bc6dd4556000b0c5302229" translate="yes" xml:space="preserve">
          <source>Take the time required to understand the cause of the exception. Inspect for null expressions. Inspect the previous expressions which could have resulted in such null expressions. Add &lt;a href=&quot;https://docs.microsoft.com/en-us/previous-versions/visualstudio/visual-studio-2008/ktf38f66(v=vs.90)&quot;&gt;breakpoints&lt;/a&gt; and step through the program as appropriate. &lt;em&gt;Use the debugger.&lt;/em&gt;</source>
          <target state="translated">T&amp;oacute;mese el tiempo necesario para comprender la causa de la excepci&amp;oacute;n. Inspeccione las expresiones nulas. Inspeccione las expresiones anteriores que podr&amp;iacute;an haber resultado en tales expresiones nulas. Agregue &lt;a href=&quot;https://docs.microsoft.com/en-us/previous-versions/visualstudio/visual-studio-2008/ktf38f66(v=vs.90)&quot;&gt;puntos de interrupci&amp;oacute;n&lt;/a&gt; y avance por el programa seg&amp;uacute;n corresponda. &lt;em&gt;Usa el depurador.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="96355bac807e2bf7c816f87187a186dfb05609b3" translate="yes" xml:space="preserve">
          <source>That is, make a private helper method that has the iterator block logic, and a public surface method that does the null check and returns the iterator.  Now when &lt;code&gt;GetFrobs&lt;/code&gt; is called, the null check happens immediately, and then &lt;code&gt;GetFrobsForReal&lt;/code&gt; executes when the sequence is iterated.</source>
          <target state="translated">Es decir, cree un m&amp;eacute;todo auxiliar privado que tenga la l&amp;oacute;gica de bloqueo del iterador y un m&amp;eacute;todo de superficie p&amp;uacute;blica que haga la comprobaci&amp;oacute;n nula y devuelva el iterador. Ahora, cuando se llama a &lt;code&gt;GetFrobs&lt;/code&gt; , la comprobaci&amp;oacute;n nula ocurre inmediatamente y luego &lt;code&gt;GetFrobsForReal&lt;/code&gt; se ejecuta cuando se itera la secuencia.</target>
        </trans-unit>
        <trans-unit id="c98e5a07997fb98921d015b9962a6fe887151a12" translate="yes" xml:space="preserve">
          <source>That means if any member which doesn&amp;rsquo;t hold any value and we are making that member to perform certain task then the system will undoubtedly toss a message and say-</source>
          <target state="translated">Eso significa que si cualquier miembro que no tiene ning&amp;uacute;n valor y estamos haciendo que ese miembro realice cierta tarea, el sistema arrojar&amp;aacute; indudablemente un mensaje y dir&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="cd6b57e6915e732c6a3454d47a45928771b568d1" translate="yes" xml:space="preserve">
          <source>That will throw the error because while I've declared the variable &quot;&lt;code&gt;connection&lt;/code&gt;&quot;, it's not pointed to anything. When I try to call the member &quot;&lt;code&gt;Open&lt;/code&gt;&quot;, there's no reference for it to resolve, and it will throw the error.</source>
          <target state="translated">Eso arrojar&amp;aacute; el error porque si bien he declarado la variable &quot; &lt;code&gt;connection&lt;/code&gt; &quot;, no apunta a nada. Cuando intento llamar al miembro &quot; &lt;code&gt;Open&lt;/code&gt; &quot;, no hay referencia para resolverlo y arrojar&amp;aacute; el error.</target>
        </trans-unit>
        <trans-unit id="af16544bdee6b293bf4ee765cfb10b13b80b318a" translate="yes" xml:space="preserve">
          <source>That's why dereferencing both a null pointer and a null reference produces the same exception.</source>
          <target state="translated">Por eso la derivación de un puntero nulo y una referencia nula produce la misma excepción.</target>
        </trans-unit>
        <trans-unit id="832f18980c9adec58ccfc7eafce613c988307af0" translate="yes" xml:space="preserve">
          <source>The .NET runtime will throw a NullReferenceException when you attempt to perform an action on something which hasn't been instantiated i.e. the code above.</source>
          <target state="translated">El tiempo de ejecución .NET lanzará una NullReferenceException cuando intente realizar una acción sobre algo que no haya sido instanciado,es decir,el código anterior.</target>
        </trans-unit>
        <trans-unit id="26534d5f78e239955916af7b305fc5b41ba2ea2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataAdapter&lt;/code&gt; will provide &lt;code&gt;TableNames&lt;/code&gt; as shown in the previous example, but it does not parse names from the SQL or database table. As a result, &lt;code&gt;ds.Tables(&quot;TICKET_RESERVATION&quot;)&lt;/code&gt; references a non-existent table.</source>
          <target state="translated">&lt;code&gt;DataAdapter&lt;/code&gt; proporcionar&amp;aacute; &lt;code&gt;TableNames&lt;/code&gt; como se muestra en el ejemplo anterior, pero no analiza los nombres de la tabla SQL o de la base de datos. Como resultado, &lt;code&gt;ds.Tables(&quot;TICKET_RESERVATION&quot;)&lt;/code&gt; referencia a una tabla inexistente.</target>
        </trans-unit>
        <trans-unit id="4e757d5d15663001bb33deeec07e2827ba5bd3a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IsDBNull&lt;/code&gt; function is used to test if a &lt;em&gt;value&lt;/em&gt; equals &lt;code&gt;System.DBNull&lt;/code&gt;:  &lt;a href=&quot;https://docs.microsoft.com/en-us/previous-versions/visualstudio/visual-studio-2008/tckcces5(v=vs.90)&quot;&gt;From MSDN:&lt;/a&gt;</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;IsDBNull&lt;/code&gt; se usa para probar si un &lt;em&gt;valor&lt;/em&gt; es igual a &lt;code&gt;System.DBNull&lt;/code&gt; : &lt;a href=&quot;https://docs.microsoft.com/en-us/previous-versions/visualstudio/visual-studio-2008/tckcces5(v=vs.90)&quot;&gt;desde MSDN:&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b413c4771f93ecdb1da4953c33951691d69e4d43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;New&lt;/code&gt; operator can often be used to create the instance when you declare it:</source>
          <target state="translated">El operador &lt;code&gt;New&lt;/code&gt; menudo se puede usar para crear la instancia cuando la declaras:</target>
        </trans-unit>
        <trans-unit id="40dbae9f26db30254b9c9f1a9df041f25f4ae4cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NullReference Exception&lt;/code&gt; for &lt;strong&gt;Visual Basic&lt;/strong&gt; is no different from the one in &lt;strong&gt;C#&lt;/strong&gt;. After all, they are both reporting the same exception defined in the .NET Framework which they both use. Causes unique to Visual Basic are rare (perhaps only one).</source>
          <target state="translated">La &lt;code&gt;NullReference Exception&lt;/code&gt; para &lt;strong&gt;Visual Basic&lt;/strong&gt; no es diferente de la de &lt;strong&gt;C #&lt;/strong&gt; . Despu&amp;eacute;s de todo, ambos informan la misma excepci&amp;oacute;n definida en .NET Framework que ambos usan. Las causas exclusivas de Visual Basic son raras (quiz&amp;aacute;s solo una).</target>
        </trans-unit>
        <trans-unit id="20d435cc2ffcce4a30d45f389b288f97cfa9298a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;new Person&lt;/code&gt; only creates an instance of &lt;code&gt;Person&lt;/code&gt;, but the &lt;code&gt;Books&lt;/code&gt; collection is still &lt;code&gt;null&lt;/code&gt;. The collection &lt;code&gt;Initializer&lt;/code&gt; syntax does not create a collection
for &lt;code&gt;p1.Books&lt;/code&gt;, it only translates to the &lt;code&gt;p1.Books.Add(...)&lt;/code&gt; statements.</source>
          <target state="translated">La &lt;code&gt;new Person&lt;/code&gt; solo crea una instancia de &lt;code&gt;Person&lt;/code&gt; , pero la colecci&amp;oacute;n de &lt;code&gt;Books&lt;/code&gt; sigue siendo &lt;code&gt;null&lt;/code&gt; . La sintaxis de &lt;code&gt;Initializer&lt;/code&gt; de la colecci&amp;oacute;n no crea una colecci&amp;oacute;n para &lt;code&gt;p1.Books&lt;/code&gt; , solo se traduce en las &lt;code&gt;p1.Books.Add(...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0b42fc2efda212a3943ac23d1a88e3d1f5590dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;runtime&lt;/code&gt; throwing a &lt;code&gt;NullReferenceException&lt;/code&gt;&lt;strong&gt;always&lt;/strong&gt; means the same thing: you are trying to use a reference, and the reference is not initialized (or it was &lt;em&gt;once&lt;/em&gt; initialized, but is &lt;em&gt;no longer&lt;/em&gt; initialized).</source>
          <target state="translated">El &lt;code&gt;runtime&lt;/code&gt; arroja una &lt;code&gt;NullReferenceException&lt;/code&gt; &lt;strong&gt;siempre&lt;/strong&gt; significa lo mismo: est&amp;aacute; tratando de usar una referencia, y la referencia no se inicializa (o se inicializ&amp;oacute; &lt;em&gt;una vez&lt;/em&gt; , pero &lt;em&gt;ya no se&lt;/em&gt; inicializa).</target>
        </trans-unit>
        <trans-unit id="49a69af3cb15571971e9fd0f2918ddd41cf47307" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;somevar&lt;/code&gt; assignment will result in an immediate NRE because Nothing doesn't have a &lt;code&gt;.Text&lt;/code&gt; property</source>
          <target state="translated">La asignaci&amp;oacute;n de &lt;code&gt;somevar&lt;/code&gt; dar&amp;aacute; como resultado una NRE inmediata porque Nothing no tiene una propiedad &lt;code&gt;.Text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d5d5590cc424a0742ec3b68941443b7a51567cc" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Remedy&lt;/strong&gt; is the same, reference the table by index:</source>
          <target state="translated">El &lt;strong&gt;remedio&lt;/strong&gt; es el mismo, consulte la tabla por &amp;iacute;ndice:</target>
        </trans-unit>
        <trans-unit id="3040c6289873dac88d88f00dfa3143d8958589ea" translate="yes" xml:space="preserve">
          <source>The Array will contain five elements of Nothing</source>
          <target state="translated">La matriz contendrá cinco elementos de Nada</target>
        </trans-unit>
        <trans-unit id="27ceb372d3a055414ac4ebce858ea4ad711a0987" translate="yes" xml:space="preserve">
          <source>The DGV has a few quirks seen periodically:</source>
          <target state="translated">El DGV tiene algunas peculiaridades que se ven periódicamente:</target>
        </trans-unit>
        <trans-unit id="c70e919024ee1fab6a7f20fb2647ea7464472447" translate="yes" xml:space="preserve">
          <source>The DataGridView</source>
          <target state="translated">El DataGridView</target>
        </trans-unit>
        <trans-unit id="ef89f949d60a7ce3ba16474314cece6c25c1b417" translate="yes" xml:space="preserve">
          <source>The System.DBNull value indicates that the Object represents missing or non-existent data. DBNull is not the same as Nothing, which indicates that a variable has not yet been initialized.</source>
          <target state="translated">El valor System.DBNull indica que el Objeto representa datos que faltan o no existen.DBNull no es lo mismo que Nada,lo que indica que una variable aún no ha sido inicializada.</target>
        </trans-unit>
        <trans-unit id="3fab983167187e8d3c1de769d9fd8889b4da2253" translate="yes" xml:space="preserve">
          <source>The above code shows simple string which is assigned with a &lt;strong&gt;null&lt;/strong&gt; value.</source>
          <target state="translated">El c&amp;oacute;digo anterior muestra una cadena simple que se asigna con un valor &lt;strong&gt;nulo&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="17d03251d7278b73c29dd924064c9cb221dda373" translate="yes" xml:space="preserve">
          <source>The array code may not be out of the woods yet. Any controls which are in a container control (like a &lt;code&gt;GroupBox&lt;/code&gt; or &lt;code&gt;Panel&lt;/code&gt;) will not be found in &lt;code&gt;Me.Controls&lt;/code&gt;; they will be in the Controls collection of that Panel or GroupBox. Nor will a control be returned when the control name is misspelled (&lt;code&gt;&quot;TeStBox2&quot;&lt;/code&gt;). In such cases, &lt;code&gt;Nothing&lt;/code&gt; will again be stored in those array elements and an NRE will result when you attempt to reference it.</source>
          <target state="translated">Es posible que el c&amp;oacute;digo de matriz a&amp;uacute;n no est&amp;eacute; fuera de peligro. Los controles que est&amp;aacute;n en un control de contenedor (como &lt;code&gt;GroupBox&lt;/code&gt; o &lt;code&gt;Panel&lt;/code&gt; ) no se encontrar&amp;aacute;n en &lt;code&gt;Me.Controls&lt;/code&gt; ; estar&amp;aacute;n en la colecci&amp;oacute;n de Controles de ese Panel o GroupBox. Tampoco se devolver&amp;aacute; un control cuando el nombre del control est&amp;eacute; mal escrito ( &lt;code&gt;&quot;TeStBox2&quot;&lt;/code&gt; ). En tales casos, &lt;code&gt;Nothing&lt;/code&gt; volver&amp;aacute; a almacenarse en esos elementos de la matriz y aparecer&amp;aacute; un NRE cuando intente hacer referencia a &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="9152dbff2da4b545031d214da21c705228394a13" translate="yes" xml:space="preserve">
          <source>The array has been created, but the &lt;code&gt;Foo&lt;/code&gt; objects in it have not.</source>
          <target state="translated">La matriz se ha creado, pero los objetos &lt;code&gt;Foo&lt;/code&gt; que contiene no.</target>
        </trans-unit>
        <trans-unit id="503f97cf7bd74b54164bcdafbce1e18337fefeac" translate="yes" xml:space="preserve">
          <source>The code is only testing &lt;code&gt;Items&lt;/code&gt; while both &lt;code&gt;myFoo&lt;/code&gt; and &lt;code&gt;Bar&lt;/code&gt; may also be Nothing. The &lt;strong&gt;remedy&lt;/strong&gt; is to test the entire chain or path of objects one at a time:</source>
          <target state="translated">El c&amp;oacute;digo solo prueba &lt;code&gt;Items&lt;/code&gt; mientras que &lt;code&gt;myFoo&lt;/code&gt; y &lt;code&gt;Bar&lt;/code&gt; tambi&amp;eacute;n pueden ser Nothing. El &lt;strong&gt;remedio&lt;/strong&gt; es probar la cadena o ruta completa de los objetos, uno a la vez:</target>
        </trans-unit>
        <trans-unit id="463bfd62c8f05004461fb5a31b8995846405c429" translate="yes" xml:space="preserve">
          <source>The constructor for the &lt;code&gt;ArgumentNullException&lt;/code&gt; even takes the name of the parameter and a message as arguments so you can tell the developer exactly what the problem is.</source>
          <target state="translated">El constructor de &lt;code&gt;ArgumentNullException&lt;/code&gt; incluso toma el nombre del par&amp;aacute;metro y un mensaje como argumentos para que pueda decirle al desarrollador exactamente cu&amp;aacute;l es el problema.</target>
        </trans-unit>
        <trans-unit id="3316f1a701fde7c120bf71968a77f55f36491fce" translate="yes" xml:space="preserve">
          <source>The correct fix is:</source>
          <target state="translated">La solución correcta es:</target>
        </trans-unit>
        <trans-unit id="1294e0c3d65f0d8b731cd2b09629341a194dc6ce" translate="yes" xml:space="preserve">
          <source>The data Type and array size are inferred from the data being assigned. Class/Module level declarations still require &lt;code&gt;As &amp;lt;Type&amp;gt;&lt;/code&gt; with &lt;code&gt;Option Strict&lt;/code&gt;:</source>
          <target state="translated">El tipo de datos y el tama&amp;ntilde;o de la matriz se infieren de los datos que se asignan. Las declaraciones de nivel de clase / m&amp;oacute;dulo a&amp;uacute;n requieren &lt;code&gt;As &amp;lt;Type&amp;gt;&lt;/code&gt; con &lt;code&gt;Option Strict&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0a67859648408e02bf57b5242710673d9d105f41" translate="yes" xml:space="preserve">
          <source>The developer is &lt;strong&gt;using &lt;code&gt;null&lt;/code&gt; intentionally to indicate there is no meaningful value available.&lt;/strong&gt; Note that C# has the concept of nullable datatypes for variables (like database tables can have nullable fields) - you can assign &lt;code&gt;null&lt;/code&gt; to them to indicate there is no value stored in it, for example &lt;code&gt;int? a = null;&lt;/code&gt; where the question mark indicates it is allowed to store null in variable &lt;code&gt;a&lt;/code&gt;. You can check that either with &lt;code&gt;if (a.HasValue) {...}&lt;/code&gt; or with &lt;code&gt;if (a==null) {...}&lt;/code&gt;. Nullable variables, like &lt;code&gt;a&lt;/code&gt; this example, allow to access the value via &lt;code&gt;a.Value&lt;/code&gt; explicitly, or just as normal via &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">El desarrollador est&amp;aacute; &lt;strong&gt;usando &lt;code&gt;null&lt;/code&gt; intencionalmente para indicar que no hay un valor significativo disponible.&lt;/strong&gt; Tenga en cuenta que C # tiene el concepto de tipos de datos anulables para variables (como las tablas de la base de datos pueden tener campos anulables); puede asignarles valores &lt;code&gt;null&lt;/code&gt; para indicar que no hay ning&amp;uacute;n valor almacenado en &amp;eacute;l, por ejemplo, &lt;code&gt;int? a = null;&lt;/code&gt; a = nulo; donde el signo de interrogaci&amp;oacute;n indica que est&amp;aacute; permitido almacenar nulo en la variable &lt;code&gt;a&lt;/code&gt; . Puede verificar eso con &lt;code&gt;if (a.HasValue) {...}&lt;/code&gt; o con &lt;code&gt;if (a==null) {...}&lt;/code&gt; . Las variables anulables, como este ejemplo, permiten acceder al valor a trav&amp;eacute;s de &lt;code&gt;a.Value&lt;/code&gt; expl&amp;iacute;citamente, o de la misma manera a trav&amp;eacute;s de &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45a964d78da459f6bbd37b8cd232d3a6efef6380" translate="yes" xml:space="preserve">
          <source>The error line &quot;Object reference not set to an instance of an object.
&quot; states that you have not assigned instance object to a object reference and still you are accessing properies/methods of that object.</source>
          <target state="translated">La línea de error &quot;Referencia de objeto no establecida en una instancia de un objeto&quot;.&quot; afirma que no ha asignado el objeto de la instancia a una referencia de objeto y aún así está accediendo a los métodos de propiedad de ese objeto.</target>
        </trans-unit>
        <trans-unit id="a400e3953b7fb9b7c815f1ce88a4ab2b01f595e6" translate="yes" xml:space="preserve">
          <source>The error occurs when both the entity and codebehind class are in same namespace.
To fix this, rename the entity class or the codebehind class for Contact.aspx.</source>
          <target state="translated">El error se produce cuando tanto la entidad como la clase de código están en el mismo espacio de nombres.Para solucionarlo,renombre la clase de entidad o la clase codebehind para Contact.aspx.</target>
        </trans-unit>
        <trans-unit id="895203d5cc7b55ecb7ef70317a104cba1837e261" translate="yes" xml:space="preserve">
          <source>The examples (from Stack&amp;nbsp; Overflow posts) do not always show the best way to do something in the first place.</source>
          <target state="translated">Los ejemplos (de las publicaciones de Stack Overflow) no siempre muestran la mejor manera de hacer algo en primer lugar.</target>
        </trans-unit>
        <trans-unit id="d1d89f5634b915a9e16a0aaaf5998b7a175005a7" translate="yes" xml:space="preserve">
          <source>The exception error is:</source>
          <target state="translated">El error de excepción es:</target>
        </trans-unit>
        <trans-unit id="4dabb60bda5cb5e73ecf06dcad355e8e1b245e9c" translate="yes" xml:space="preserve">
          <source>The exception itself says that something is being referred but whose value is not being set. So this denotes that it only occurs while using reference types as Value types are non-nullable.</source>
          <target state="translated">La propia excepción dice que se está refiriendo a algo pero cuyo valor no se está fijando.Por lo tanto,esto denota que sólo ocurre cuando se utilizan tipos de referencia ya que los tipos de valor no son anulables.</target>
        </trans-unit>
        <trans-unit id="06815801582cc6befb5ef98b61f02e87744088ac" translate="yes" xml:space="preserve">
          <source>The hardest one .. if the &lt;strong&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Garbage_collection_%28computer_science%29&quot;&gt;GC&lt;/a&gt;&lt;/strong&gt; collected the object already... This generally occurs if you are trying to find an object using strings... That is, finding it by name of the object then it may happen that the GC might already cleaned it up... This is hard to find and will become quite a problem... A better way to tackle this is do null checks wherever necessary during the development process. This will save you a lot of time.</source>
          <target state="translated">El m&amp;aacute;s dif&amp;iacute;cil ... si el &lt;strong&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Garbage_collection_%28computer_science%29&quot;&gt;GC ya&lt;/a&gt;&lt;/strong&gt; recolect&amp;oacute; el objeto ... Esto generalmente ocurre si est&amp;aacute; tratando de encontrar un objeto usando cadenas ... Es decir, si lo encuentra por el nombre del objeto, puede suceder que el GC ya pueda lo limpi&amp;oacute; ... Esto es dif&amp;iacute;cil de encontrar y se convertir&amp;aacute; en un gran problema ... Una mejor manera de abordar esto es hacer verificaciones nulas siempre que sea necesario durante el proceso de desarrollo. Esto te ahorrara mucho tiempo.</target>
        </trans-unit>
        <trans-unit id="6fe9c46a1f96250f3a78f255ee7a539166e5eefe" translate="yes" xml:space="preserve">
          <source>The message &lt;em&gt;&quot;Object not set to an instance of Object&quot;&lt;/em&gt; means you are trying to use an object which has not been initialized. This boils down to one of these:</source>
          <target state="translated">El mensaje &lt;em&gt;&quot;Objeto no establecido en una instancia de Objeto&quot;&lt;/em&gt; significa que est&amp;aacute; intentando utilizar un objeto que no se ha inicializado. Esto se reduce a uno de estos:</target>
        </trans-unit>
        <trans-unit id="7e3ca54b85861772b0461d9717c527d72a64967f" translate="yes" xml:space="preserve">
          <source>The nested collection &lt;code&gt;Initializers&lt;/code&gt; behave the same:</source>
          <target state="translated">Los &lt;code&gt;Initializers&lt;/code&gt; colecci&amp;oacute;n anidada se comportan igual:</target>
        </trans-unit>
        <trans-unit id="90aa4a0c7a11c901e2c17878dabdd430757e21cc" translate="yes" xml:space="preserve">
          <source>The nullable annotation context and nullable warning context can be set for a project using the &lt;code&gt;Nullable&lt;/code&gt; element in your &lt;code&gt;csproj&lt;/code&gt; file. This element configures how the compiler interprets the nullability of types and what warnings are generated. Valid settings are:</source>
          <target state="translated">El contexto de anulaci&amp;oacute;n anulable y el contexto de advertencia anulable se pueden configurar para un proyecto utilizando el elemento &lt;code&gt;Nullable&lt;/code&gt; en su archivo &lt;code&gt;csproj&lt;/code&gt; . Este elemento configura c&amp;oacute;mo el compilador interpreta la nulabilidad de los tipos y qu&amp;eacute; advertencias se generan. Las configuraciones v&amp;aacute;lidas son:</target>
        </trans-unit>
        <trans-unit id="a10b33de1b42bbbc51b19833cb2f573dc939676f" translate="yes" xml:space="preserve">
          <source>The plain versions &lt;code&gt;First()&lt;/code&gt; and &lt;code&gt;Single()&lt;/code&gt; throw exceptions when there is nothing. The &quot;OrDefault&quot; versions return null in that case. So be aware of that.</source>
          <target state="translated">Las versiones simples &lt;code&gt;First()&lt;/code&gt; y &lt;code&gt;Single()&lt;/code&gt; lanzan excepciones cuando no hay nada. Las versiones &quot;OrDefault&quot; devuelven nulo en ese caso. As&amp;iacute; que ten cuidado con eso.</target>
        </trans-unit>
        <trans-unit id="ca0d4b830b1ca78cc1cd2b85b0b059562a5a92dc" translate="yes" xml:space="preserve">
          <source>The problem is that &lt;code&gt;Dim&lt;/code&gt; does not create a CashRegister &lt;em&gt;object&lt;/em&gt;; it only declares a variable named &lt;code&gt;reg&lt;/code&gt; of that Type. &lt;em&gt;Declaring&lt;/em&gt; an object variable and creating an &lt;em&gt;instance&lt;/em&gt; are two different things.</source>
          <target state="translated">El problema es que &lt;code&gt;Dim&lt;/code&gt; no crea un &lt;em&gt;objeto&lt;/em&gt; CashRegister; solo declara una variable llamada &lt;code&gt;reg&lt;/code&gt; de ese tipo. &lt;em&gt;Declarar&lt;/em&gt; una variable de objeto y crear una &lt;em&gt;instancia&lt;/em&gt; son dos cosas diferentes.</target>
        </trans-unit>
        <trans-unit id="f57a9af331b2b384f5e9bbf25e52891735f99da4" translate="yes" xml:space="preserve">
          <source>The rest of this article goes into more detail and shows mistakes that many programmers often make which can lead to a &lt;code&gt;NullReferenceException&lt;/code&gt;.</source>
          <target state="translated">El resto de este art&amp;iacute;culo entra en m&amp;aacute;s detalles y muestra errores que muchos programadores suelen cometer que pueden conducir a una &lt;code&gt;NullReferenceException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d27e02a7560754b5c14948489cc1146ab300619d" translate="yes" xml:space="preserve">
          <source>The result is that the name will be null when p is null or when p.Spouse is null.</source>
          <target state="translated">El resultado es que el nombre será nulo cuando p es nulo o cuando p.Cónyuge es nulo.</target>
        </trans-unit>
        <trans-unit id="09d1d7d139d2f9ffa7cf279ad2ecc6cf210c00d2" translate="yes" xml:space="preserve">
          <source>The same applies to nested object initializers:</source>
          <target state="translated">Lo mismo se aplica a los inicializadores de objetos anidados:</target>
        </trans-unit>
        <trans-unit id="ed30a1778fd31736e38acd0c7306ed44aa097108" translate="yes" xml:space="preserve">
          <source>The shorthand to providing a default value when a &lt;code&gt;null&lt;/code&gt; is encountered:</source>
          <target state="translated">La forma abreviada de proporcionar un valor predeterminado cuando se encuentra un valor &lt;code&gt;null&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f4ffd808ec7172797ede1dca01b5953fc219db01" translate="yes" xml:space="preserve">
          <source>Then either &lt;a href=&quot;https://blogs.msdn.microsoft.com/zainnab/2010/11/01/start-debugging-vs-start-without-debugging/&quot;&gt;&lt;em&gt;Start with Debugging (F5)&lt;/em&gt;&lt;/a&gt; or &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/3s68z0b3.aspx&quot;&gt;&lt;em&gt;Attach [the VS Debugger] to Running Process&lt;/em&gt;&lt;/a&gt;. On occasion it may be useful to use &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.diagnostics.debugger.break(v=vs.110).aspx&quot;&gt;&lt;code&gt;Debugger.Break&lt;/code&gt;&lt;/a&gt;, which will prompt to launch the debugger.</source>
          <target state="translated">Luego, &lt;a href=&quot;https://blogs.msdn.microsoft.com/zainnab/2010/11/01/start-debugging-vs-start-without-debugging/&quot;&gt;&lt;em&gt;comience con la depuraci&amp;oacute;n (F5)&lt;/em&gt;&lt;/a&gt; o &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/3s68z0b3.aspx&quot;&gt;&lt;em&gt;adjunte [el depurador VS] al proceso en ejecuci&amp;oacute;n&lt;/em&gt;&lt;/a&gt; . En ocasiones puede ser &amp;uacute;til usar &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.diagnostics.debugger.break(v=vs.110).aspx&quot;&gt; &lt;code&gt;Debugger.Break&lt;/code&gt; &lt;/a&gt; , que le pedir&amp;aacute; que inicie el depurador.</target>
        </trans-unit>
        <trans-unit id="9cf2c6701fe17f333948c2b1849db6510ba64ad5" translate="yes" xml:space="preserve">
          <source>Then following code will throw a NullReferenceException when you call context.SaveChanges()</source>
          <target state="translated">El siguiente código arrojará una excepción de referencia nula cuando llame a context.SaveChanges()</target>
        </trans-unit>
        <trans-unit id="7838ef23cdbcdcb9c6a670f31c478d1f79518c71" translate="yes" xml:space="preserve">
          <source>Then go into your script and type &lt;code&gt;rb = GetComponent&amp;lt;Rigidbody&amp;gt;();&lt;/code&gt;</source>
          <target state="translated">Luego vaya a su script y escriba &lt;code&gt;rb = GetComponent&amp;lt;Rigidbody&amp;gt;();&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ad41fc4e6ef8e0d250fac274fb58d4f833539aab" translate="yes" xml:space="preserve">
          <source>There are also several libraries that can help. &quot;Resharper&quot; for example can provide you with warnings while you are writing code, especially if you use their attribute: &lt;a href=&quot;https://www.jetbrains.com/resharper/help/Reference__Code_Annotation_Attributes.html#NotNullAttribute&quot;&gt;NotNullAttribute&lt;/a&gt;</source>
          <target state="translated">Tambi&amp;eacute;n hay varias bibliotecas que pueden ayudar. &quot;Resharper&quot;, por ejemplo, puede proporcionarle advertencias mientras escribe c&amp;oacute;digo, especialmente si usa su atributo: &lt;a href=&quot;https://www.jetbrains.com/resharper/help/Reference__Code_Annotation_Attributes.html#NotNullAttribute&quot;&gt;NotNullAttribute&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cbf732334378829eb2b72400cdd33b94ea5d2586" translate="yes" xml:space="preserve">
          <source>There are many good answers already here. You can also check more detailed description with examples on my &lt;a href=&quot;https://www.mistercode.net/2017/07/09/object-reference-not-set-to-an-instance-of-an-object/&quot;&gt;blog&lt;/a&gt;.</source>
          <target state="translated">Ya hay muchas buenas respuestas aqu&amp;iacute;. Tambi&amp;eacute;n puede consultar una descripci&amp;oacute;n m&amp;aacute;s detallada con ejemplos en mi &lt;a href=&quot;https://www.mistercode.net/2017/07/09/object-reference-not-set-to-an-instance-of-an-object/&quot;&gt;blog&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="214fa86f68ca654e757c3e720dc78f2dd2fc2749" translate="yes" xml:space="preserve">
          <source>There are various ways and methods to avoid this renowned exception:</source>
          <target state="translated">Hay varias maneras y métodos para evitar esta renombrada excepción:</target>
        </trans-unit>
        <trans-unit id="be839701a8b58386dc83c43578a529bbcc452e47" translate="yes" xml:space="preserve">
          <source>There is a lot of good answers here explaining what a null reference is and how to debug it. But there is very little on how to prevent the issue or at least make it easier to catch.</source>
          <target state="translated">Hay muchas buenas respuestas aquí que explican qué es una referencia nula y cómo depurarla.Pero hay muy poco sobre cómo prevenir el problema o al menos hacerlo más fácil de detectar.</target>
        </trans-unit>
        <trans-unit id="7dbc715d0df7bdf0cd07c3dbe5ecb31f64abf37a" translate="yes" xml:space="preserve">
          <source>There is an extra comma in the SQL (after 'mailaddress') which results in an exception at &lt;code&gt;.ExecuteReader&lt;/code&gt;. After the &lt;code&gt;Catch&lt;/code&gt; does nothing, &lt;code&gt;Finally&lt;/code&gt; tries to perform clean up, but since you cannot &lt;code&gt;Close&lt;/code&gt; a null &lt;code&gt;DataReader&lt;/code&gt; object, a brand new &lt;code&gt;NullReferenceException&lt;/code&gt; results.</source>
          <target state="translated">Hay una coma adicional en el SQL (despu&amp;eacute;s de 'mailaddress') que da como resultado una excepci&amp;oacute;n en &lt;code&gt;.ExecuteReader&lt;/code&gt; . Despu&amp;eacute;s de que &lt;code&gt;Catch&lt;/code&gt; no haga nada, &lt;code&gt;Finally&lt;/code&gt; intenta realizar la limpieza, pero como no puede &lt;code&gt;Close&lt;/code&gt; un objeto &lt;code&gt;DataReader&lt;/code&gt; nulo, se obtiene una nueva &lt;code&gt;NullReferenceException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee30cd268c28ea93084f9a9c56e3288e8f18511d" translate="yes" xml:space="preserve">
          <source>There's &quot;Microsoft Code Contracts&quot; where you use syntax like &lt;code&gt;Contract.Requires(obj != null)&lt;/code&gt; which gives you runtime and compile checking: &lt;a href=&quot;http://www.codeproject.com/Articles/103779/Introducing-Code-Contracts&quot;&gt;Introducing Code Contracts&lt;/a&gt;.</source>
          <target state="translated">Hay &quot;Contratos de c&amp;oacute;digo de Microsoft&quot; donde usa una sintaxis como &lt;code&gt;Contract.Requires(obj != null)&lt;/code&gt; que le brinda tiempo de ejecuci&amp;oacute;n y verificaci&amp;oacute;n de compilaci&amp;oacute;n: &lt;a href=&quot;http://www.codeproject.com/Articles/103779/Introducing-Code-Contracts&quot;&gt;Introducci&amp;oacute;n de contratos de c&amp;oacute;digo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4586f5d6a7aef8d40083704fd4255e79f766656f" translate="yes" xml:space="preserve">
          <source>There's also &quot;PostSharp&quot; which will allow you to just use attributes like this:</source>
          <target state="translated">También está el &quot;PostSharp&quot; que te permitirá usar atributos como este:</target>
        </trans-unit>
        <trans-unit id="35e0b1c03698b5fbfb3417627f45417f72e5c0bb" translate="yes" xml:space="preserve">
          <source>These cases arise because of the special rules the runtime uses when boxing &lt;code&gt;Nullable&amp;lt;&amp;gt;&lt;/code&gt; instances.</source>
          <target state="translated">Estos casos surgen debido a las reglas especiales que el tiempo de ejecuci&amp;oacute;n usa cuando se encajonan instancias &lt;code&gt;Nullable&amp;lt;&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c521d1475010ead5d72d575d5eea6c50ec89923" translate="yes" xml:space="preserve">
          <source>These should be easy to find now that you know what you are looking for:</source>
          <target state="translated">Estos deberían ser fáciles de encontrar ahora que sabes lo que estás buscando:</target>
        </trans-unit>
        <trans-unit id="4bee35f92a41df1996281dd9bff320d1429a02b9" translate="yes" xml:space="preserve">
          <source>This answer will use Visual Basic terms, syntax, and context. The examples used come from a large number of past Stack&amp;nbsp; Overflow questions. This is to maximize relevance by using the &lt;em&gt;kinds&lt;/em&gt; of situations often seen in posts. A bit more explanation is also provided for those who might need it. An example similar to yours is &lt;em&gt;very&lt;/em&gt; likely listed here.</source>
          <target state="translated">Esta respuesta usar&amp;aacute; t&amp;eacute;rminos, sintaxis y contexto de Visual Basic. Los ejemplos utilizados provienen de una gran cantidad de preguntas anteriores de Stack Overflow. Esto es para maximizar la relevancia mediante el uso de los &lt;em&gt;tipos&lt;/em&gt; de situaciones que a menudo se ven en las publicaciones. Tambi&amp;eacute;n se proporciona un poco m&amp;aacute;s de explicaci&amp;oacute;n para aquellos que lo necesiten. Un ejemplo similar al suyo es &lt;em&gt;muy&lt;/em&gt; probable que aparezca aqu&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="43191fd8397e396ff48392d8f06628560c113ac6" translate="yes" xml:space="preserve">
          <source>This array has only been declared, not created. There are several ways to initialize an array:</source>
          <target state="translated">Esta matriz sólo ha sido declarada,no creada.Hay varias maneras de inicializar una matriz:</target>
        </trans-unit>
        <trans-unit id="eebc527ad8416d09fe4ecd5b2aa132e7cea81190" translate="yes" xml:space="preserve">
          <source>This can be solved by following the convention to prefix fields with an underscore:</source>
          <target state="translated">Esto puede resolverse siguiendo la convención de prefijar los campos con un guión bajo:</target>
        </trans-unit>
        <trans-unit id="801881e44b7fc86f8a4310a9936bccc2fea2500b" translate="yes" xml:space="preserve">
          <source>This doesn't throw an &lt;code&gt;InvalidCastException&lt;/code&gt; but returns a &lt;code&gt;null&lt;/code&gt; when the cast fails (and when &lt;code&gt;someObject&lt;/code&gt; is itself null). So be aware of that.</source>
          <target state="translated">Esto no arroja una &lt;code&gt;InvalidCastException&lt;/code&gt; sino que devuelve un &lt;code&gt;null&lt;/code&gt; cuando falla la &lt;code&gt;someObject&lt;/code&gt; (y cuando someObject es nulo). As&amp;iacute; que ten cuidado con eso.</target>
        </trans-unit>
        <trans-unit id="8fef908ebbf6aa8923a642c4bd0b4053bc545790" translate="yes" xml:space="preserve">
          <source>This is a case of an object not being created as expected, but also demonstrates the counter usefulness of an empty &lt;code&gt;Catch&lt;/code&gt;.</source>
          <target state="translated">Este es un caso de un objeto que no se crea como se esperaba, pero tambi&amp;eacute;n demuestra la utilidad del contador de un &lt;code&gt;Catch&lt;/code&gt; vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="4e0fb87a39ead3f4c4ab6bccc75cb03367823f34" translate="yes" xml:space="preserve">
          <source>This is a case where the IDE will warn you that '&lt;em&gt;not all paths return a value and a &lt;code&gt;NullReferenceException&lt;/code&gt; may result&lt;/em&gt;'. You can suppress the warning, by replacing &lt;code&gt;Exit Function&lt;/code&gt; with &lt;code&gt;Return Nothing&lt;/code&gt;, but that does not solve the problem. Anything which tries to use the return when &lt;code&gt;someCondition = False&lt;/code&gt; will result in an NRE:</source>
          <target state="translated">Este es un caso en el que el IDE le advertir&amp;aacute; que &quot; &lt;em&gt;no todas las rutas devuelven un valor y puede producirse una &lt;code&gt;NullReferenceException&lt;/code&gt; &lt;/em&gt; &quot;. Puede suprimir la advertencia, reemplazando &lt;code&gt;Exit Function&lt;/code&gt; con &lt;code&gt;Return Nothing&lt;/code&gt; , pero eso no resuelve el problema. Cualquier cosa que intente usar el retorno cuando &lt;code&gt;someCondition = False&lt;/code&gt; dar&amp;aacute; como resultado una NRE:</target>
        </trans-unit>
        <trans-unit id="0b561450c1d02029fb3ee4e5c3a3347ea45692b7" translate="yes" xml:space="preserve">
          <source>This is a fairly common way to get an NRE. In C#, depending on how it is coded, the IDE will report that &lt;code&gt;Controls&lt;/code&gt; does not exist in the current context, or &quot;cannot reference non-static member&quot;. So, to some extent, this is a VB-only situation. It is also complex because it can result in a failure cascade.</source>
          <target state="translated">Esta es una forma bastante com&amp;uacute;n de obtener una NRE. En C #, dependiendo de c&amp;oacute;mo est&amp;eacute; codificado, el IDE informar&amp;aacute; que los &lt;code&gt;Controls&lt;/code&gt; no existen en el contexto actual o que &quot;no pueden hacer referencia a miembros no est&amp;aacute;ticos&quot;. Entonces, hasta cierto punto, esta es una situaci&amp;oacute;n de solo VB. Tambi&amp;eacute;n es complejo porque puede provocar una cascada de fallas.</target>
        </trans-unit>
        <trans-unit id="187877ad8cb14ddcbabe75238a1bb7a9668c909a" translate="yes" xml:space="preserve">
          <source>This is also sometimes called the safe navigation or Elvis (after its shape) operator. If the expression on the left side of the operator is null, then the right side will not be evaluated, and null is returned instead. That means cases like this:</source>
          <target state="translated">A veces también se le llama el operador de navegación segura o Elvis (por su forma).Si la expresión en el lado izquierdo del operador es nula,entonces el lado derecho no será evaluado,y en su lugar se devuelve nulo.Eso significa casos como este:</target>
        </trans-unit>
        <trans-unit id="aa9ada07655b54e9494b58d5ce6297b70d859bb3" translate="yes" xml:space="preserve">
          <source>This is concept-based: there is no code for you to paste into your project. It is intended to help you understand what causes a &lt;code&gt;NullReferenceException&lt;/code&gt; (NRE), how to find it, how to fix it, and how to avoid it. An NRE can be caused many ways so this is unlikely to be your sole encounter.</source>
          <target state="translated">Esto est&amp;aacute; basado en el concepto: no hay c&amp;oacute;digo para pegar en su proyecto. Su objetivo es ayudarlo a comprender qu&amp;eacute; causa una &lt;code&gt;NullReferenceException&lt;/code&gt; (NRE), c&amp;oacute;mo encontrarla, c&amp;oacute;mo solucionarla y c&amp;oacute;mo evitarla. Una NRE puede ser causada de muchas maneras, por lo que es poco probable que sea su &amp;uacute;nico encuentro.</target>
        </trans-unit>
        <trans-unit id="888280c788011247e567ae3ed361d10e659b622d" translate="yes" xml:space="preserve">
          <source>This is why you get a NullReferenceExeption because the computer does not have data stored in that variable.</source>
          <target state="translated">Por eso se obtiene una excepción de NullReferenceExeption porque el ordenador no tiene datos almacenados en esa variable.</target>
        </trans-unit>
        <trans-unit id="21425312feec06d5937e5aa46a43ef71033a5a70" translate="yes" xml:space="preserve">
          <source>This line of code works best under your &lt;code&gt;Start()&lt;/code&gt; or &lt;code&gt;Awake()&lt;/code&gt; functions.</source>
          <target state="translated">Esta l&amp;iacute;nea de c&amp;oacute;digo funciona mejor bajo sus funciones &lt;code&gt;Start()&lt;/code&gt; o &lt;code&gt;Awake()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc1bf227c2a95d116418fc9c84ba8def88bc060c" translate="yes" xml:space="preserve">
          <source>This means the reference is &lt;code&gt;null&lt;/code&gt;, and you cannot access members (such as methods) through a &lt;code&gt;null&lt;/code&gt; reference. The simplest case:</source>
          <target state="translated">Esto significa que la referencia es &lt;code&gt;null&lt;/code&gt; y no puede acceder a los miembros (como los m&amp;eacute;todos) a trav&amp;eacute;s de una referencia &lt;code&gt;null&lt;/code&gt; . El caso m&amp;aacute;s simple:</target>
        </trans-unit>
        <trans-unit id="77e6e4ba966d107a04d5daf44a984b939a965789" translate="yes" xml:space="preserve">
          <source>This reduces the number of null checks you have to do in some cases. The syntax is to put a question mark before each dot. Take the following code for example:</source>
          <target state="translated">Esto reduce el número de controles nulos que tienes que hacer en algunos casos.La sintaxis es poner un signo de interrogación antes de cada punto.Tome el siguiente código por ejemplo:</target>
        </trans-unit>
        <trans-unit id="c0315d79171243f81b079786418630b61bc73573" translate="yes" xml:space="preserve">
          <source>This translates to</source>
          <target state="translated">Esto se traduce en</target>
        </trans-unit>
        <trans-unit id="bed843e1a4ee572be6dff42169c3a5deee5b21c5" translate="yes" xml:space="preserve">
          <source>This way, you can avoid &lt;code&gt;NullReferenceException&lt;/code&gt; cases that are results of violation of the constraints set. For example, if you use an object property &lt;code&gt;X&lt;/code&gt; in a class and later try to invoke one of its methods and &lt;code&gt;X&lt;/code&gt; has a null value, then this will lead to &lt;code&gt;NullReferenceException&lt;/code&gt;:</source>
          <target state="translated">De esta manera, puede evitar los casos de &lt;code&gt;NullReferenceException&lt;/code&gt; que son el resultado de la violaci&amp;oacute;n del conjunto de restricciones. Por ejemplo, si usa una propiedad de objeto &lt;code&gt;X&lt;/code&gt; en una clase y luego intenta invocar uno de sus m&amp;eacute;todos y &lt;code&gt;X&lt;/code&gt; tiene un valor nulo, esto conducir&amp;aacute; a &lt;code&gt;NullReferenceException&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ca62aa267e13467726859928ccd74cc220dd2bbb" translate="yes" xml:space="preserve">
          <source>This will create a &lt;em&gt;local&lt;/em&gt; variable, &lt;code&gt;reg&lt;/code&gt;, which exists only in that context (sub). The &lt;code&gt;reg&lt;/code&gt; variable with module level &lt;code&gt;Scope&lt;/code&gt; which you will use everywhere else remains &lt;code&gt;Nothing&lt;/code&gt;.</source>
          <target state="translated">Esto crear&amp;aacute; una variable &lt;em&gt;local&lt;/em&gt; , &lt;code&gt;reg&lt;/code&gt; , que existe solo en ese contexto (sub). La variable &lt;code&gt;reg&lt;/code&gt; con &lt;code&gt;Scope&lt;/code&gt; de nivel de m&amp;oacute;dulo que usar&amp;aacute; en cualquier otro lugar sigue siendo &lt;code&gt;Nothing&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9886256ed1be06c975b72d5406cf9d7e42cde50b" translate="yes" xml:space="preserve">
          <source>This will do the following: If &lt;code&gt;myIntArray&lt;/code&gt; is null, the expression returns null and you can safely check it. If it contains an array, it will do the same as:
&lt;code&gt;elem = myIntArray[i];&lt;/code&gt; and returns the &lt;code&gt;i&amp;lt;sup&amp;gt;th&amp;lt;/sup&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">Esto har&amp;aacute; lo siguiente: Si &lt;code&gt;myIntArray&lt;/code&gt; es nulo, la expresi&amp;oacute;n devuelve nulo y puede verificarlo con seguridad. Si contiene una matriz, har&amp;aacute; lo mismo que: &lt;code&gt;elem = myIntArray[i];&lt;/code&gt; y devuelve el elemento &lt;code&gt;i&amp;lt;sup&amp;gt;th&amp;lt;/sup&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1db062d19edd3aad36fceee9160e7c1852968c5e" translate="yes" xml:space="preserve">
          <source>This will result in the title variable being &lt;code&gt;null&lt;/code&gt;, and the call to &lt;code&gt;ToUpper&lt;/code&gt; is not made if &lt;code&gt;person.Title&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Esto dar&amp;aacute; como resultado que la variable de t&amp;iacute;tulo sea &lt;code&gt;null&lt;/code&gt; y que la llamada a &lt;code&gt;ToUpper&lt;/code&gt; no se realice si &lt;code&gt;person.Title&lt;/code&gt; es &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="037853ac976e876cd13f3318e4f680cf26902d26" translate="yes" xml:space="preserve">
          <source>This will throw a &lt;code&gt;NullReferenceException&lt;/code&gt; at the second line because you can't call the instance method &lt;code&gt;ToUpper()&lt;/code&gt; on a &lt;code&gt;string&lt;/code&gt; reference pointing to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Esto arrojar&amp;aacute; una &lt;code&gt;NullReferenceException&lt;/code&gt; en la segunda l&amp;iacute;nea porque no puede llamar al m&amp;eacute;todo de instancia &lt;code&gt;ToUpper()&lt;/code&gt; en una referencia de &lt;code&gt;string&lt;/code&gt; apunta a &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4adf93e86d1600f5a1f1d298afde221268eccfe7" translate="yes" xml:space="preserve">
          <source>Though this check &lt;a href=&quot;https://stackoverflow.com/questions/3021538/debug-assert-appears-in-release-mode&quot;&gt;will not end up in your release build&lt;/a&gt;, causing it to throw the &lt;code&gt;NullReferenceException&lt;/code&gt; again when &lt;code&gt;book == null&lt;/code&gt; at runtime in release mode.</source>
          <target state="translated">Aunque esta comprobaci&amp;oacute;n &lt;a href=&quot;https://stackoverflow.com/questions/3021538/debug-assert-appears-in-release-mode&quot;&gt;no terminar&amp;aacute; en su versi&amp;oacute;n de lanzamiento&lt;/a&gt; , lo que har&amp;aacute; que arroje la &lt;code&gt;NullReferenceException&lt;/code&gt; nuevamente cuando &lt;code&gt;book == null&lt;/code&gt; en tiempo de ejecuci&amp;oacute;n en modo de lanzamiento.</target>
        </trans-unit>
        <trans-unit id="fe4569d04b34db2feeacd18b55f433f11ceeaa79" translate="yes" xml:space="preserve">
          <source>To avoid this error:</source>
          <target state="translated">Para evitar este error:</target>
        </trans-unit>
        <trans-unit id="b862da83d643fa0302757d37468767ad8e9ac824" translate="yes" xml:space="preserve">
          <source>To be clear, &lt;code&gt;Dim&lt;/code&gt; (or &lt;code&gt;Private&lt;/code&gt;) only &lt;em&gt;declares&lt;/em&gt; a variable and its &lt;code&gt;Type&lt;/code&gt;.   The &lt;em&gt;Scope&lt;/em&gt; of the variable - whether it exists for the entire module/class or is local to a procedure - is determined by &lt;em&gt;where&lt;/em&gt; it is declared. &lt;code&gt;Private | Friend | Public&lt;/code&gt; defines the access level, not &lt;em&gt;Scope&lt;/em&gt;.</source>
          <target state="translated">Para ser claros, &lt;code&gt;Dim&lt;/code&gt; (o &lt;code&gt;Private&lt;/code&gt; ) solo &lt;em&gt;declara&lt;/em&gt; una variable y su &lt;code&gt;Type&lt;/code&gt; . El &lt;em&gt;alcance&lt;/em&gt; de la variable, ya sea que exista para todo el m&amp;oacute;dulo / clase o sea local para un procedimiento, se determina por el lugar &lt;em&gt;donde&lt;/em&gt; se declara. &lt;code&gt;Private | Friend | Public&lt;/code&gt; Amigo | P&amp;uacute;blico define el nivel de acceso, no el &lt;em&gt;alcance&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="5ccb716ef7518f5e4cae9d82dbbb0fdfc28ad185" translate="yes" xml:space="preserve">
          <source>To fix this you have to instantiate (assign object to reference of that class).</source>
          <target state="translated">Para arreglar esto hay que instanciar (asignar el objeto a la referencia de esa clase).</target>
        </trans-unit>
        <trans-unit id="cfce5bc74512f792b40d3fd4bb577d39ad331d72" translate="yes" xml:space="preserve">
          <source>To fully understand why a NullReferenceException is thrown, it is important to know the difference between &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/value-types&quot;&gt;value types&lt;/a&gt; and [reference types][3].</source>
          <target state="translated">Para comprender completamente por qu&amp;eacute; se produce una NullReferenceException, es importante conocer la diferencia entre los &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/value-types&quot;&gt;tipos de valor&lt;/a&gt; y [tipos de referencia] [3].</target>
        </trans-unit>
        <trans-unit id="442fc389bbb8b0ecba07a137178cc20263b9b7c4" translate="yes" xml:space="preserve">
          <source>To prevent the error, objects that could be null should be tested for null before being used.</source>
          <target state="translated">Para evitar el error,los objetos que podrían ser nulos deben ser probados para ser nulos antes de ser utilizados.</target>
        </trans-unit>
        <trans-unit id="2fc08c6abe8c008843158c3dfc2b4819d97175ce" translate="yes" xml:space="preserve">
          <source>To understand why that is, it helps to understand how .NET produces null dereference exceptions in the first place. (These details apply to .NET running on Windows; other operating systems use similar mechanisms.)</source>
          <target state="translated">Para entender por qué es así,ayuda a entender cómo el .NET produce excepciones de dereferencia nula en primer lugar.(Estos detalles se aplican al .NET que se ejecuta en Windows;otros sistemas operativos utilizan mecanismos similares).</target>
        </trans-unit>
        <trans-unit id="1c409f99322562874653d2f8a0ab2c648ed33f45" translate="yes" xml:space="preserve">
          <source>Typically, the &lt;code&gt;Settings&lt;/code&gt; collection will only need to be initialized the first time the application runs. An alternate remedy is to add an initial value to your collection in &lt;strong&gt;Project -&amp;gt; Settings | FooBars&lt;/strong&gt;, save the project, then remove the fake value.</source>
          <target state="translated">Por lo general, la colecci&amp;oacute;n de &lt;code&gt;Settings&lt;/code&gt; solo deber&amp;aacute; inicializarse la primera vez que se ejecute la aplicaci&amp;oacute;n. Una soluci&amp;oacute;n alternativa es agregar un valor inicial a su colecci&amp;oacute;n en &lt;strong&gt;Proyecto -&amp;gt; Configuraci&amp;oacute;n |&lt;/strong&gt; &lt;strong&gt;FooBars&lt;/strong&gt; , guarde el proyecto, luego elimine el valor falso.</target>
        </trans-unit>
        <trans-unit id="516c8eebca6e87f940176b1effe4b60b6c0ea266" translate="yes" xml:space="preserve">
          <source>Typically, the simplest remedy is used.</source>
          <target state="translated">Normalmente,se utiliza el remedio más simple.</target>
        </trans-unit>
        <trans-unit id="44ae451f7b7bc5e89c459fa403f51f895a24e5e5" translate="yes" xml:space="preserve">
          <source>UI Controls</source>
          <target state="translated">Controles de UI</target>
        </trans-unit>
        <trans-unit id="0367a9753f91933f52263dc3499b7fad896e44c1" translate="yes" xml:space="preserve">
          <source>Under certain circumstances, trying to use an item from &lt;code&gt;My.Settings&lt;/code&gt; which is a &lt;code&gt;StringCollection&lt;/code&gt; can result in a NullReference the first time you use it. The solution is the same, but not as obvious. Consider:</source>
          <target state="translated">En determinadas circunstancias, intentar usar un elemento de &lt;code&gt;My.Settings&lt;/code&gt; que es una &lt;code&gt;StringCollection&lt;/code&gt; puede generar una NullReference la primera vez que la use. La soluci&amp;oacute;n es la misma, pero no tan obvia. Considerar:</target>
        </trans-unit>
        <trans-unit id="5fd5faf037f6a68b87421df3d131d2dc06cf5ac5" translate="yes" xml:space="preserve">
          <source>Unhandled Exception:</source>
          <target state="translated">Excepción no manejada:</target>
        </trans-unit>
        <trans-unit id="13d1de28b167068f1cf58b6d8b42d1a864bfb7e4" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Debug.Assert&lt;/code&gt; if a value should never be &lt;code&gt;null&lt;/code&gt;, to catch the problem earlier than the exception occurs.</source>
          <target state="translated">Utilice &lt;code&gt;Debug.Assert&lt;/code&gt; si un valor nunca debe ser &lt;code&gt;null&lt;/code&gt; , para detectar el problema antes de que ocurra la excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="382f02f764a14908cf7b8365adec70912d5701d9" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;GetValueOrDefault()&lt;/code&gt; for &lt;code&gt;nullable&lt;/code&gt; value types to provide a default value when they are &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Use &lt;code&gt;GetValueOrDefault()&lt;/code&gt; para &lt;code&gt;nullable&lt;/code&gt; tipos de valores anulables para proporcionar un valor predeterminado cuando son &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2998b45c318d095c3e4535a7950d83516d58ebb7" translate="yes" xml:space="preserve">
          <source>Use a &lt;code&gt;For/Each&lt;/code&gt; loop and test the &lt;code&gt;IsNewRow&lt;/code&gt; property to determine if it is that last row. This works whether &lt;code&gt;AllowUserToAddRows&lt;/code&gt; is true or not:</source>
          <target state="translated">Use un bucle &lt;code&gt;For/Each&lt;/code&gt; y pruebe la propiedad &lt;code&gt;IsNewRow&lt;/code&gt; para determinar si es esa &amp;uacute;ltima fila. Esto funciona si &lt;code&gt;AllowUserToAddRows&lt;/code&gt; es verdadero o no:</target>
        </trans-unit>
        <trans-unit id="1b21080b0c77e9baa935891138a35678155ae048" translate="yes" xml:space="preserve">
          <source>Use null context (available in C# 8):</source>
          <target state="translated">Utilice el contexto nulo (disponible en C#8):</target>
        </trans-unit>
        <trans-unit id="3c02b72e67d50c9e6e8df127d3c4c8b5ee96c2af" translate="yes" xml:space="preserve">
          <source>Use the null coalescing operator: &lt;code&gt;??&lt;/code&gt; [C#] or &lt;code&gt;If()&lt;/code&gt; [VB].</source>
          <target state="translated">Utilice el operador de fusi&amp;oacute;n nulo: &lt;code&gt;??&lt;/code&gt; [C #] o &lt;code&gt;If()&lt;/code&gt; [VB].</target>
        </trans-unit>
        <trans-unit id="eceb840fe473d205bb79bbfbe6842b028ab9de50" translate="yes" xml:space="preserve">
          <source>Use the null condition operator: &lt;code&gt;?.&lt;/code&gt; or &lt;code&gt;?[x]&lt;/code&gt; for arrays (available in C# 6 and VB.NET 14):</source>
          <target state="translated">Utilice el operador de condici&amp;oacute;n nula: &lt;code&gt;?.&lt;/code&gt; o &lt;code&gt;?[x]&lt;/code&gt; para matrices (disponible en C # 6 y VB.NET 14):</target>
        </trans-unit>
        <trans-unit id="e34781ddb98c0b7bad26d07124e848d7dc5380d0" translate="yes" xml:space="preserve">
          <source>User defined structs</source>
          <target state="translated">Estructuras definidas por el usuario</target>
        </trans-unit>
        <trans-unit id="4c9bf9d75e9c5172e3585c1c3082c6d25bacf2fa" translate="yes" xml:space="preserve">
          <source>Using a &lt;code&gt;List(Of T)&lt;/code&gt; will make it quite difficult to have an element without a valid object:</source>
          <target state="translated">Usar una &lt;code&gt;List(Of T)&lt;/code&gt; har&amp;aacute; que sea bastante dif&amp;iacute;cil tener un elemento sin un objeto v&amp;aacute;lido:</target>
        </trans-unit>
        <trans-unit id="e0cf661777181bb5bf4bab3c932185766cf29b18" translate="yes" xml:space="preserve">
          <source>Validate data before using it (also use &lt;code&gt;Option Strict&lt;/code&gt; and SQL parameters):</source>
          <target state="translated">Valide los datos antes de usarlos (tambi&amp;eacute;n use los par&amp;aacute;metros &lt;code&gt;Option Strict&lt;/code&gt; y SQL):</target>
        </trans-unit>
        <trans-unit id="3b3c5424e9429ade50d2ed4719daf8a5ef46e7c7" translate="yes" xml:space="preserve">
          <source>Value Types and Reference Types</source>
          <target state="translated">Tipos de valor y tipos de referencia</target>
        </trans-unit>
        <trans-unit id="b7d9a51e2fb5186d4548644a10a85dfb83b90aff" translate="yes" xml:space="preserve">
          <source>Visual Basic Forms</source>
          <target state="translated">Formas básicas visuales</target>
        </trans-unit>
        <trans-unit id="914f780030704154b3755eefa6c85d3acdf3b1c7" translate="yes" xml:space="preserve">
          <source>Visual Basic tries to make the process clear repeatedly using &lt;strong&gt;&lt;code&gt;New&lt;/code&gt;&lt;/strong&gt;: Using the &lt;strong&gt;&lt;code&gt;New&lt;/code&gt;&lt;/strong&gt; Operator creates a &lt;strong&gt;new&lt;/strong&gt; object and calls &lt;strong&gt;&lt;code&gt;Sub New&lt;/code&gt;&lt;/strong&gt; -- the constructor -- where your object can perform any other initialization.</source>
          <target state="translated">Visual Basic intenta aclarar el proceso repetidamente usando &lt;strong&gt; &lt;code&gt;New&lt;/code&gt; &lt;/strong&gt; : el uso del &lt;strong&gt; &lt;code&gt;New&lt;/code&gt; &lt;/strong&gt; Operator crea un &lt;strong&gt;nuevo&lt;/strong&gt; objeto y llama a &lt;strong&gt; &lt;code&gt;Sub New&lt;/code&gt; &lt;/strong&gt; , el constructor, donde su objeto puede realizar cualquier otra inicializaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4356f5b2bed387a822b4773e00b955c30fb15382" translate="yes" xml:space="preserve">
          <source>WPF Control Creation Order and Events</source>
          <target state="translated">Orden de creación de control de WPF y eventos</target>
        </trans-unit>
        <trans-unit id="865749e3cc387179c321ac3469aa809ca6ea641d" translate="yes" xml:space="preserve">
          <source>Ways to Avoid</source>
          <target state="translated">Formas de evitar</target>
        </trans-unit>
        <trans-unit id="b50ff997c836b3bf135585b592d9922fb8daa6c5" translate="yes" xml:space="preserve">
          <source>We can add data really easily actually in a few ways:</source>
          <target state="translated">Podemos añadir datos muy fácilmente,en realidad de varias maneras:</target>
        </trans-unit>
        <trans-unit id="171db29c0e9a7d26b4e0c78fa029495735b943f5" translate="yes" xml:space="preserve">
          <source>Well, in simple terms:</source>
          <target state="translated">Bueno,en términos simples:</target>
        </trans-unit>
        <trans-unit id="54f0454febe335028ebb7ac67e60ee8639c8bb01" translate="yes" xml:space="preserve">
          <source>What about the second point? Dereferencing &lt;em&gt;any&lt;/em&gt; invalid pointer that falls in the lowest page of virtual memory causes the same operating system error, and thereby the same exception.</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; pasa con el segundo punto? Anular la referencia a &lt;em&gt;cualquier&lt;/em&gt; puntero no v&amp;aacute;lido que se encuentre en la p&amp;aacute;gina m&amp;aacute;s baja de la memoria virtual provoca el mismo error del sistema operativo y, por lo tanto, la misma excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a57d36dd7547d0d01d63f5a0dca33743ac6b0190" translate="yes" xml:space="preserve">
          <source>What does that mean?</source>
          <target state="translated">¿Qué significa eso?</target>
        </trans-unit>
        <trans-unit id="dfc9e4324fb08b6a8f17d724cf8c6155af43dd1b" translate="yes" xml:space="preserve">
          <source>What does this mean, and what can I do to fix this error?</source>
          <target state="translated">¿Qué significa esto,y qué puedo hacer para arreglar este error?</target>
        </trans-unit>
        <trans-unit id="682501e35814b10bb49bcce3a8138d93e7237565" translate="yes" xml:space="preserve">
          <source>What is a NullReferenceException, and how do I fix it</source>
          <target state="translated">¿Qué es una excepción de referencia nula y cómo la arreglo?</target>
        </trans-unit>
        <trans-unit id="2b175120120a58af183c09ae1970097e643335ca" translate="yes" xml:space="preserve">
          <source>What is the cause?</source>
          <target state="translated">¿Cuál es la causa?</target>
        </trans-unit>
        <trans-unit id="4d05bb2729110f107617bc429ecb0bc63e601752" translate="yes" xml:space="preserve">
          <source>When a property of a null object accessed:</source>
          <target state="translated">Cuando se accede a una propiedad de un objeto nulo:</target>
        </trans-unit>
        <trans-unit id="24ee47a5b48927d93ac97774fc77bc2a3836d6a2" translate="yes" xml:space="preserve">
          <source>When a string method of an empty string accessed:</source>
          <target state="translated">Cuando un método de cadena de una cadena vacía accedió:</target>
        </trans-unit>
        <trans-unit id="0d8ca3f12ffd0492f759832995654e7110254f83" translate="yes" xml:space="preserve">
          <source>When declared as a module/class level variable, as appears to be the case with &lt;code&gt;con&lt;/code&gt;, the compiler can't know if the object was created by an upstream procedure. Do not ignore warnings.</source>
          <target state="translated">Cuando se declara como una variable de nivel de m&amp;oacute;dulo / clase, como parece ser el caso con &lt;code&gt;con&lt;/code&gt; , el compilador no puede saber si el objeto fue creado por un procedimiento ascendente. No ignore las advertencias.</target>
        </trans-unit>
        <trans-unit id="efc21187e8ea71d0502b9553436531ff09010739" translate="yes" xml:space="preserve">
          <source>When it is only appropriate to create the instance later:</source>
          <target state="translated">Cuando sólo es apropiado crear la instancia más tarde:</target>
        </trans-unit>
        <trans-unit id="e320e6e3ad0e90936d129472db697d3b8b8d6e80" translate="yes" xml:space="preserve">
          <source>When working &lt;strong&gt;across different layers&lt;/strong&gt;, for example in an MVC application, a controller needs services to call business operations. In such scenarios &lt;strong&gt;Dependency Injection Container&lt;/strong&gt; can be used to initialize the services to avoid the &lt;strong&gt;NullReferenceException&lt;/strong&gt;. So that means you don't need to worry about checking for null and just call the services from the controller as though they will always to available (and initialized) as either a singleton or a prototype.</source>
          <target state="translated">Cuando se trabaja &lt;strong&gt;en diferentes capas&lt;/strong&gt; , por ejemplo, en una aplicaci&amp;oacute;n MVC, un controlador necesita servicios para llamar a las operaciones comerciales. En tales escenarios, el &lt;strong&gt;Contenedor de inyecci&amp;oacute;n de dependencias&lt;/strong&gt; se puede utilizar para inicializar los servicios para evitar la &lt;strong&gt;NullReferenceException&lt;/strong&gt; . Eso significa que no necesita preocuparse por verificar nulos y simplemente llamar a los servicios desde el controlador como si siempre estuvieran disponibles (e inicializados) como un singleton o un prototipo.</target>
        </trans-unit>
        <trans-unit id="dba90f1005ef6b9743a2d890263f4e1876834da6" translate="yes" xml:space="preserve">
          <source>When you know during development that a method maybe can, but never should return &lt;code&gt;null&lt;/code&gt;, you can use &lt;code&gt;Debug.Assert()&lt;/code&gt; to break as soon as possible when it does occur:</source>
          <target state="translated">Cuando sabe durante el desarrollo que un m&amp;eacute;todo puede, pero nunca debe volver &lt;code&gt;null&lt;/code&gt; , puede usar &lt;code&gt;Debug.Assert()&lt;/code&gt; para que se rompa lo antes posible cuando ocurra:</target>
        </trans-unit>
        <trans-unit id="1492aaa2d900e272a66ec2ee7932c7c567523b15" translate="yes" xml:space="preserve">
          <source>When your &lt;code&gt;DataGridView&lt;/code&gt; has &lt;code&gt;AllowUserToAddRows&lt;/code&gt; as &lt;code&gt;True&lt;/code&gt; (the default), the &lt;code&gt;Cells&lt;/code&gt; in the blank/new row at the bottom will all contain &lt;code&gt;Nothing&lt;/code&gt;.  Most attempts to use the contents (for example, &lt;code&gt;ToString&lt;/code&gt;) will result in an NRE.</source>
          <target state="translated">Cuando su &lt;code&gt;DataGridView&lt;/code&gt; tiene &lt;code&gt;AllowUserToAddRows&lt;/code&gt; como &lt;code&gt;True&lt;/code&gt; (el valor predeterminado), las &lt;code&gt;Cells&lt;/code&gt; en la fila en blanco / nueva en la parte inferior no contendr&amp;aacute;n &lt;code&gt;Nothing&lt;/code&gt; . La mayor&amp;iacute;a de los intentos de usar el contenido (por ejemplo, &lt;code&gt;ToString&lt;/code&gt; ) dar&amp;aacute; como resultado una NRE.</target>
        </trans-unit>
        <trans-unit id="cdb948906225c5be7dabe665fe3268f2aa7f7d1b" translate="yes" xml:space="preserve">
          <source>While &lt;em&gt;what&lt;/em&gt; causes a &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.nullreferenceexception(v=vs.110).aspx&quot;&gt;NullReferenceExceptions&lt;/a&gt; and approaches to &lt;em&gt;avoid/fix&lt;/em&gt; such an exception have been addressed in other answers, what many programmers haven't learned yet is how to independently &lt;em&gt;debug&lt;/em&gt; such exceptions during development.</source>
          <target state="translated">Si bien &lt;em&gt;lo que&lt;/em&gt; causa un &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.nullreferenceexception(v=vs.110).aspx&quot;&gt;NullReferenceExceptions&lt;/a&gt; y los enfoques para &lt;em&gt;evitar / corregir&lt;/em&gt; dicha excepci&amp;oacute;n se han abordado en otras respuestas, lo que muchos programadores a&amp;uacute;n no han aprendido es c&amp;oacute;mo &lt;em&gt;depurar de&lt;/em&gt; forma independiente dichas excepciones durante el desarrollo.</target>
        </trans-unit>
        <trans-unit id="448dc745cee8454cb3051219a2b24ea7029e0795" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;new&lt;/code&gt; keyword is used, it only creates a new instance of &lt;code&gt;Book&lt;/code&gt;, but not a new instance of &lt;code&gt;Person&lt;/code&gt;, so the &lt;code&gt;Author&lt;/code&gt; the property is still &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Mientras se usa la &lt;code&gt;new&lt;/code&gt; palabra clave, solo crea una nueva instancia de &lt;code&gt;Book&lt;/code&gt; , pero no una nueva instancia de &lt;code&gt;Person&lt;/code&gt; a , por lo que el &lt;code&gt;Author&lt;/code&gt; la propiedad a&amp;uacute;n es &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d52f9ee0d5e0aa5f23d1b3b5d8e4d2e56fca0930" translate="yes" xml:space="preserve">
          <source>Why does this make sense?  Well, suppose we have a struct containing two ints, and an unmanaged pointer equal to null. If we attempt to dereference the second int in the struct, the &lt;code&gt;CLR&lt;/code&gt; will not attempt to access the storage at location zero; it will access the storage at location four. But logically this is a null dereference because we are getting to that address &lt;em&gt;via&lt;/em&gt; the null.</source>
          <target state="translated">&amp;iquest;Por qu&amp;eacute; esto tiene sentido? Bueno, supongamos que tenemos una estructura que contiene dos entradas y un puntero no administrado igual a nulo. Si intentamos desreferenciar el segundo int en la estructura, el &lt;code&gt;CLR&lt;/code&gt; no intentar&amp;aacute; acceder al almacenamiento en la ubicaci&amp;oacute;n cero; acceder&amp;aacute; al almacenamiento en la ubicaci&amp;oacute;n cuatro. Pero l&amp;oacute;gicamente, esta es una anulaci&amp;oacute;n de referencia nula porque estamos llegando a esa direcci&amp;oacute;n a &lt;em&gt;trav&amp;eacute;s de&lt;/em&gt; la nula.</target>
        </trans-unit>
        <trans-unit id="e5b3e5b5a3ce438cfd892d68ca821da56bd33f46" translate="yes" xml:space="preserve">
          <source>Why is this wrong?  Because the iterator block does not actually &lt;em&gt;run&lt;/em&gt; until the &lt;code&gt;foreach&lt;/code&gt;!  The call to &lt;code&gt;GetFrobs&lt;/code&gt; simply returns an object which &lt;em&gt;when iterated&lt;/em&gt; will run the iterator block.</source>
          <target state="translated">&amp;iquest;Por qu&amp;eacute; est&amp;aacute; mal esto? &amp;iexcl;Porque el bloque iterador no se &lt;em&gt;ejecuta&lt;/em&gt; hasta el &lt;code&gt;foreach&lt;/code&gt; ! La llamada a &lt;code&gt;GetFrobs&lt;/code&gt; simplemente devuelve un objeto que, &lt;em&gt;cuando se itera&lt;/em&gt; , ejecutar&amp;aacute; el bloque iterador.</target>
        </trans-unit>
        <trans-unit id="dd8f068ecfc9cc04c00494e69ae5f6e0960b7ae7" translate="yes" xml:space="preserve">
          <source>Why it occurs?</source>
          <target state="translated">¿Por qué ocurre?</target>
        </trans-unit>
        <trans-unit id="cce1faca008b524ebe3411e4a56c2cb194dc1b42" translate="yes" xml:space="preserve">
          <source>Working with databases presents many opportunities for a NullReference because there can be many objects (&lt;code&gt;Command&lt;/code&gt;, &lt;code&gt;Connection&lt;/code&gt;, &lt;code&gt;Transaction&lt;/code&gt;, &lt;code&gt;Dataset&lt;/code&gt;, &lt;code&gt;DataTable&lt;/code&gt;, &lt;code&gt;DataRows&lt;/code&gt;....) in use at once.  &lt;strong&gt;Note:&lt;/strong&gt; It does not matter which data provider you are using -- MySQL, SQL Server, OleDB, etc. -- the &lt;em&gt;concepts&lt;/em&gt; are the same.</source>
          <target state="translated">Trabajar con bases de datos presenta muchas oportunidades para una referencia nula porque puede haber muchos objetos ( &lt;code&gt;Command&lt;/code&gt; , &lt;code&gt;Connection&lt;/code&gt; , &lt;code&gt;Transaction&lt;/code&gt; , &lt;code&gt;Dataset&lt;/code&gt; , &lt;code&gt;DataRows&lt;/code&gt; datos , filas de datos ...) en uso a la vez. &lt;strong&gt;Nota:&lt;/strong&gt; No importa qu&amp;eacute; proveedor de datos est&amp;eacute; utilizando (MySQL, SQL Server, OleDB, etc.), los &lt;em&gt;conceptos&lt;/em&gt; son los mismos.</target>
        </trans-unit>
        <trans-unit id="723856ede778551d9c785472d51c2f7fcbb54d7d" translate="yes" xml:space="preserve">
          <source>You are trying to access an object that isn't created or currently not in memory.</source>
          <target state="translated">Está tratando de acceder a un objeto que no está creado o que actualmente no está en la memoria.</target>
        </trans-unit>
        <trans-unit id="8aa880592f3584b0eb7955f587d23cf9a9b8e76b" translate="yes" xml:space="preserve">
          <source>You are trying to use a reference variable whose value is &lt;code&gt;Nothing&lt;/code&gt;/&lt;code&gt;null&lt;/code&gt;.  When the value is &lt;code&gt;Nothing&lt;/code&gt;/&lt;code&gt;null&lt;/code&gt; for the reference variable, that means it is not actually holding a reference to an instance of any object that exists on the heap.</source>
          <target state="translated">Est&amp;aacute; intentando utilizar una variable de referencia cuyo valor es &lt;code&gt;Nothing&lt;/code&gt; / &lt;code&gt;null&lt;/code&gt; . Cuando el valor es &lt;code&gt;Nothing&lt;/code&gt; / &lt;code&gt;null&lt;/code&gt; para la variable de referencia, eso significa que en realidad no contiene una referencia a una instancia de ning&amp;uacute;n objeto que exista en el mont&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4b4d5b042ee1470a88bab9f1d60f9144e6f609fc" translate="yes" xml:space="preserve">
          <source>You are trying to use something that is &lt;code&gt;null&lt;/code&gt; (or &lt;code&gt;Nothing&lt;/code&gt; in VB.NET). This means you either set it to &lt;code&gt;null&lt;/code&gt;, or you never set it to anything at all.</source>
          <target state="translated">Est&amp;aacute; intentando utilizar algo que es &lt;code&gt;null&lt;/code&gt; (o &lt;code&gt;Nothing&lt;/code&gt; en VB.NET). Esto significa que lo configuras como &lt;code&gt;null&lt;/code&gt; o que nunca lo configuras para nada.</target>
        </trans-unit>
        <trans-unit id="a4b2a4f8cb9ff198b895cb45c6d69095f67060ba" translate="yes" xml:space="preserve">
          <source>You are using the object that contains the null value reference. So it's giving a null exception. In the example the string value is null and when checking its length, the exception occurred.</source>
          <target state="translated">Está utilizando el objeto que contiene la referencia de valor nulo.Así que está dando una excepción nula.En el ejemplo,el valor de la cadena es nulo y al comprobar su longitud,se produjo la excepción.</target>
        </trans-unit>
        <trans-unit id="c6e71d37b17fa53433b0f7d95131ec2c8f8e5dcd" translate="yes" xml:space="preserve">
          <source>You can add a component programmatically and assign the variable at the same time with one line of code: &lt;code&gt;rb = AddComponent&amp;lt;RigidBody&amp;gt;();&lt;/code&gt;</source>
          <target state="translated">Puede agregar un componente mediante programaci&amp;oacute;n y asignar la variable al mismo tiempo con una l&amp;iacute;nea de c&amp;oacute;digo: &lt;code&gt;rb = AddComponent&amp;lt;RigidBody&amp;gt;();&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8c38e20677037c680c41cdbbd3a874a5b75b4783" translate="yes" xml:space="preserve">
          <source>You can also throw a custom exception, only to catch it in the calling code:</source>
          <target state="translated">También puede lanzar una excepción personalizada,sólo para atraparla en el código de llamada:</target>
        </trans-unit>
        <trans-unit id="17ea64ffa695b740770485aaba63974913381c9a" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;Locals Window&lt;/code&gt; (&lt;strong&gt;Debug -&amp;gt; Windows -&amp;gt; Locals&lt;/strong&gt;) to examine your objects.</source>
          <target state="translated">Tambi&amp;eacute;n puede usar la &lt;code&gt;Locals Window&lt;/code&gt; ( &lt;strong&gt;Depuraci&amp;oacute;n -&amp;gt; Windows -&amp;gt; Locales&lt;/strong&gt; ) para examinar sus objetos.</target>
        </trans-unit>
        <trans-unit id="12a1a3c92ffa52e6b050bf7546290b5e6ce658b2" translate="yes" xml:space="preserve">
          <source>You can fix NullReferenceException in a clean way using Null-conditional Operators in c#6 and write less code to handle null checks.</source>
          <target state="translated">Puedes arreglar NullReferenceException de forma limpia usando Operadores Null-condicional en c#6 y escribir menos código para manejar los cheques nulos.</target>
        </trans-unit>
        <trans-unit id="2edd59e412b940b382162755da24e3b3a55a1a98" translate="yes" xml:space="preserve">
          <source>You can simply avoid this by checking if the variable is not null:</source>
          <target state="translated">Puedes evitarlo simplemente comprobando si la variable no es nula:</target>
        </trans-unit>
        <trans-unit id="d1588e2df3c8e2e5e50543e8a09e318c3ac852eb" translate="yes" xml:space="preserve">
          <source>You either never assigned something to the variable, never created an instance of the value assigned to the variable, or you set the variable equal to &lt;code&gt;Nothing&lt;/code&gt;/&lt;code&gt;null&lt;/code&gt; manually, or you called a function that set the variable to &lt;code&gt;Nothing&lt;/code&gt;/&lt;code&gt;null&lt;/code&gt; for you.</source>
          <target state="translated">Nunca asign&amp;oacute; algo a la variable, nunca cre&amp;oacute; una instancia del valor asignado a la variable, o configur&amp;oacute; la variable igual a &lt;code&gt;Nothing&lt;/code&gt; / &lt;code&gt;null&lt;/code&gt; manualmente, o llam&amp;oacute; a una funci&amp;oacute;n que configur&amp;oacute; la variable a &lt;code&gt;Nothing&lt;/code&gt; / &lt;code&gt;null&lt;/code&gt; para usted.</target>
        </trans-unit>
        <trans-unit id="f66228601ed3724d69b717ec6fe23f27ca71e042" translate="yes" xml:space="preserve">
          <source>You get the same exception for the same reason - &lt;code&gt;myList&lt;/code&gt; was only declared, but no instance created. The remedy is the same:</source>
          <target state="translated">Obtiene la misma excepci&amp;oacute;n por el mismo motivo: &lt;code&gt;myList&lt;/code&gt; solo se declar&amp;oacute;, pero no se cre&amp;oacute; ninguna instancia. El remedio es el mismo:</target>
        </trans-unit>
        <trans-unit id="7d96029677307b05bf0beda9a46b585a9c96a9a3" translate="yes" xml:space="preserve">
          <source>You probably forgot the &lt;code&gt;New&lt;/code&gt; operator.</source>
          <target state="translated">Probablemente olvidaste el &lt;code&gt;New&lt;/code&gt; operador.</target>
        </trans-unit>
        <trans-unit id="9889cfa340b5a188c4545454aa3970b650ff6a92" translate="yes" xml:space="preserve">
          <source>You should also remove any Try/Catch blocks from the relevant code, especially ones where there is nothing in the Catch block. This will cause your code to crash when it tries to use an object which is &lt;code&gt;Nothing&lt;/code&gt;. &lt;strong&gt;This is what you want&lt;/strong&gt; because it will identify the exact &lt;em&gt;location&lt;/em&gt; of the problem, and allow you to identify the object causing it.</source>
          <target state="translated">Tambi&amp;eacute;n debe eliminar los bloques Try / Catch del c&amp;oacute;digo relevante, especialmente aquellos en los que no hay nada en el bloque Catch. Esto har&amp;aacute; que su c&amp;oacute;digo se bloquee cuando intente usar un objeto que es &lt;code&gt;Nothing&lt;/code&gt; . &lt;strong&gt;Esto es lo que desea&lt;/strong&gt; porque identificar&amp;aacute; la &lt;em&gt;ubicaci&amp;oacute;n&lt;/em&gt; exacta del problema y le permitir&amp;aacute; identificar el objeto que lo caus&amp;oacute;.</target>
        </trans-unit>
        <trans-unit id="7cf85e9877af0174191657bf941763d81f747650" translate="yes" xml:space="preserve">
          <source>You would use very similar to the same way you would use &lt;code&gt;Nullable&amp;lt;T&amp;gt;&lt;/code&gt;, except with the goal of accomplishing exactly the opposite - to not allow &lt;code&gt;null&lt;/code&gt;. Here are some examples:</source>
          <target state="translated">&lt;code&gt;Nullable&amp;lt;T&amp;gt;&lt;/code&gt; forma muy similar a la que usar&amp;iacute;a Nullable &amp;lt;T&amp;gt; , excepto con el objetivo de lograr exactamente lo contrario: no permitir &lt;code&gt;null&lt;/code&gt; . Aqu&amp;iacute; hay unos ejemplos:</target>
        </trans-unit>
        <trans-unit id="1cc0e4045b9e917b4e600760083043c55ca6aa29" translate="yes" xml:space="preserve">
          <source>Your code &lt;em&gt;declared&lt;/em&gt; an object variable, but it did not &lt;em&gt;initialize&lt;/em&gt; it (create an instance or '&lt;em&gt;instantiate&lt;/em&gt;' it)</source>
          <target state="translated">Su c&amp;oacute;digo &lt;em&gt;declar&amp;oacute;&lt;/em&gt; una variable de objeto, pero no la &lt;em&gt;inicializ&amp;oacute;&lt;/em&gt; (cree una instancia o la ' &lt;em&gt;instanciar&amp;aacute;&lt;/em&gt; ')</target>
        </trans-unit>
        <trans-unit id="1835adb6d4755dbbf56a8c76ede96fd8258bbc9c" translate="yes" xml:space="preserve">
          <source>above line throws error because reference of class myClass is declared but not instantiated or an instance of object is not assigned to referecne of that class.</source>
          <target state="translated">sobre la línea arroja un error porque la referencia de la clase myClass es declarada pero no instanciada o una instancia de objeto no es asignada a la referencia de esa clase.</target>
        </trans-unit>
        <trans-unit id="163efa6e9cc8a00507230d1f61d9db3d11ab97db" translate="yes" xml:space="preserve">
          <source>and Contact entity class. Sometimes entity classes are partial classes so that you can extend them in other files too.</source>
          <target state="translated">y clase de entidad de contacto.A veces las clases de entidad son clases parciales para que puedas extenderlas en otros archivos también.</target>
        </trans-unit>
        <trans-unit id="5039d155a71c0a5f7a2b2654ad49cb7ee47a8980" translate="yes" xml:space="preserve">
          <source>bool</source>
          <target state="translated">bool</target>
        </trans-unit>
        <trans-unit id="45932d6fa98f39c5cd3f08cd951d8dc70fc5f7de" translate="yes" xml:space="preserve">
          <source>decimal</source>
          <target state="translated">decimal</target>
        </trans-unit>
        <trans-unit id="f7852992c275998df7dbb34bd4a576549f4622aa" translate="yes" xml:space="preserve">
          <source>dereferencing a null &lt;strong&gt;pointer&lt;/strong&gt; produces the same exception as dereferencing a null &lt;strong&gt;reference&lt;/strong&gt;</source>
          <target state="translated">desreferenciar un &lt;strong&gt;puntero&lt;/strong&gt; nulo produce la misma excepci&amp;oacute;n que desreferenciar una &lt;strong&gt;referencia&lt;/strong&gt; nula</target>
        </trans-unit>
        <trans-unit id="7b2e6f52aa2a81fb92f818a3436c6758ad33c8a3" translate="yes" xml:space="preserve">
          <source>dereferencing an invalid non-null pointer &lt;strong&gt;can&lt;/strong&gt; produce that exception
in some circumstances</source>
          <target state="translated">desreferenciar un puntero no nulo no v&amp;aacute;lido &lt;strong&gt;puede&lt;/strong&gt; producir esa excepci&amp;oacute;n en algunas circunstancias</target>
        </trans-unit>
        <trans-unit id="b5031a46dd38e909839b52a146a7969402061271" translate="yes" xml:space="preserve">
          <source>disable: The nullable annotation context is disabled. The nullable warning context is disabled. Variables of a reference type are oblivious, just like earlier versions of C#. All nullability warnings are disabled.</source>
          <target state="translated">desactivar:El contexto de la anotación nula está desactivado.El contexto de la anotación nula está desactivado.Las variables de un tipo de referencia son olvidadas,al igual que las versiones anteriores de C#.Todas las advertencias de anulabilidad están deshabilitadas.</target>
        </trans-unit>
        <trans-unit id="5452220584f9d82eacc9d4b64b556c642aa95fe3" translate="yes" xml:space="preserve">
          <source>dynamic</source>
          <target state="translated">dynamic</target>
        </trans-unit>
        <trans-unit id="707ee2e80d8a348ed040077b064ae8b11ce87533" translate="yes" xml:space="preserve">
          <source>enable: The nullable annotation context is enabled. The nullable warning context is enabled. Variables of a reference type, string for example, are non-nullable. All nullability warnings are enabled.</source>
          <target state="translated">...habilitar..:Se habilita el contexto de anotación nula.El contexto de la anotación anulable está habilitado.Las variables de un tipo de referencia,cadena por ejemplo,no son anulables.Todos los avisos de anulación están habilitados.</target>
        </trans-unit>
        <trans-unit id="f93306a0064ddaa9f3c518dfda6d24b1659b5141" translate="yes" xml:space="preserve">
          <source>for example: let say you have a class called myClass and it contains one property prop1.</source>
          <target state="translated">por ejemplo:digamos que tienes una clase llamada myClass y que contiene una propiedad prop1.</target>
        </trans-unit>
        <trans-unit id="4d3e8614703ea126434cc11d59e3c7a70c66d624" translate="yes" xml:space="preserve">
          <source>foreach</source>
          <target state="translated">foreach</target>
        </trans-unit>
        <trans-unit id="23ec53a4c09cf5266253f2e3ee5c91b8b4eb9045" translate="yes" xml:space="preserve">
          <source>in here , if address is null , then you will get NullReferenceException.</source>
          <target state="translated">aquí,si la dirección es nula,entonces obtendrás NullReferenceException.</target>
        </trans-unit>
        <trans-unit id="18ab6ac7001b131bc4dc74bd619c612205dff372" translate="yes" xml:space="preserve">
          <source>is equivalent to:</source>
          <target state="translated">es equivalente a:</target>
        </trans-unit>
        <trans-unit id="1615307cc4523f183e777df67f168c86908e8007" translate="yes" xml:space="preserve">
          <source>object</source>
          <target state="translated">object</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="1d02abd73c8fc5445c71c4fbe24bc25707ea3d7a" translate="yes" xml:space="preserve">
          <source>public class Form1
{
    private Customer customer;</source>
          <target state="translated">clase pública Formulario1{cliente privado;</target>
        </trans-unit>
        <trans-unit id="c133b31de2d5fc69bf6862d425df4a2337f78d3d" translate="yes" xml:space="preserve">
          <source>safeonly: The nullable annotation context is enabled. The nullable warning context is safeonly. Variables of a reference type are nonnullable. All safety nullability warnings are enabled.</source>
          <target state="translated">sólo con seguridad:El contexto de la anotación nula está activado.El contexto de la anotación anulable sólo es seguro.Las variables de un tipo de referencia no son anulables.Todas las advertencias de anulabilidad de seguridad están habilitadas.</target>
        </trans-unit>
        <trans-unit id="3a061cb7a56d7292f241332c224fcac2f287af0a" translate="yes" xml:space="preserve">
          <source>safeonlywarnings: The nullable annotation context is disabled. The nullable warning context is safeonly.
    Variables of a reference type are oblivious. All safety nullability warnings are enabled.</source>
          <target state="translated">advertencias de safeonly:El contexto de la anotación nula está desactivado.El contexto de la anotación nula es safeonly.Las variables de un tipo de referencia son olvidadas.Todas las advertencias de anulabilidad de seguridad están habilitadas.</target>
        </trans-unit>
        <trans-unit id="ecb252044b5ea0f679ee78ec1a12904739e2904d" translate="yes" xml:space="preserve">
          <source>string</source>
          <target state="translated">string</target>
        </trans-unit>
        <trans-unit id="2abda58ce57dab947ad0b74eb5487833707a6213" translate="yes" xml:space="preserve">
          <source>the following code will be problematic:</source>
          <target state="translated">el siguiente código será problemático:</target>
        </trans-unit>
        <trans-unit id="43a38bb2effe5dc812d40a39ec117e6b0fd8f1fc" translate="yes" xml:space="preserve">
          <source>warnings: The nullable annotation context is disabled. The nullable warning context is enabled. Variables of a reference type are oblivious. All nullability warnings are enabled.</source>
          <target state="translated">advertencias:El contexto de la anotación nula está desactivado.El contexto de advertencia de anulación está habilitado.Las variables de un tipo de referencia son olvidadas.Todos los avisos de anulabilidad están habilitados.</target>
        </trans-unit>
        <trans-unit id="365054ee499f3b2258d3a22f7fa3f931704bc717" translate="yes" xml:space="preserve">
          <source>where an &lt;strong&gt;&lt;em&gt;unboxing&lt;/em&gt;&lt;/strong&gt; conversion (cast) &lt;em&gt;from&lt;/em&gt;&lt;code&gt;object&lt;/code&gt; (or from one of the classes &lt;code&gt;System.ValueType&lt;/code&gt; or &lt;code&gt;System.Enum&lt;/code&gt;, or from an interface type) &lt;em&gt;to&lt;/em&gt; a value type (other than &lt;code&gt;Nullable&amp;lt;&amp;gt;&lt;/code&gt;) in itself gives the &lt;code&gt;NullReferenceException&lt;/code&gt;.</source>
          <target state="translated">donde una conversi&amp;oacute;n de &lt;strong&gt;&lt;em&gt;unboxing&lt;/em&gt;&lt;/strong&gt; (conversi&amp;oacute;n) &lt;em&gt;del&lt;/em&gt; &lt;code&gt;object&lt;/code&gt; (o de una de las clases &lt;code&gt;System.ValueType&lt;/code&gt; o &lt;code&gt;System.Enum&lt;/code&gt; , o de un tipo de interfaz) &lt;em&gt;a&lt;/em&gt; un tipo de valor (que no sea &lt;code&gt;Nullable&amp;lt;&amp;gt;&lt;/code&gt; ) en s&amp;iacute; mismo da la &lt;code&gt;NullReferenceException&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
