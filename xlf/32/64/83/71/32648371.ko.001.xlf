<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/32648371">
    <body>
      <group id="32648371">
        <trans-unit id="172b6e8ac9aeebfe54faf7b9ee176a7b5a481210" translate="yes" xml:space="preserve">
          <source>(where &lt;code&gt;$dbh&lt;/code&gt; is the name of your PDO instance variable) or - better - add this parameter as a &lt;a href=&quot;https://phpdelusions.net/pdo_examples/connect_to_mysql#example&quot;&gt;connection option&lt;/a&gt;. After that all database errors will be translated into PDO exceptions which, if left alone, would act just as regular PHP errors.</source>
          <target state="translated">(여기서 &lt;code&gt;$dbh&lt;/code&gt; 는 PDO 인스턴스 변수의 이름입니다) 또는이 매개 변수를 &lt;a href=&quot;https://phpdelusions.net/pdo_examples/connect_to_mysql#example&quot;&gt;연결 옵션&lt;/a&gt; 으로 추가하는 것이 좋습니다. 그 후 모든 데이터베이스 오류는 PDO 예외로 변환되며, PDO 예외는 단독으로 남겨두면 일반적인 PHP 오류처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="9a73f4641c5fec6450f5068a07dc4a5ad8129e95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;P.S.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;P.S.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c121f5ad9380cc7f9bc94aa4fda7c43163681f5" translate="yes" xml:space="preserve">
          <source>After getting the error message, you have to read and comprehend it. It sounds too obvious, but learners often overlook the &lt;em&gt;meaning&lt;/em&gt; of the error message. Yet most of time it explains the problem pretty straightforward:</source>
          <target state="translated">오류 메시지가 나타난 후에는이를 읽고 이해해야합니다. 너무 분명하게 들리지만 학습자들은 종종 오류 메시지의 &lt;em&gt;의미&lt;/em&gt; 를 간과합니다. 그러나 대부분의 경우 문제를 매우 간단하게 설명합니다.</target>
        </trans-unit>
        <trans-unit id="ee8ce5c7c6def65b37330b23635552f31050ee9d" translate="yes" xml:space="preserve">
          <source>Also note that despite the common delusion, &lt;a href=&quot;https://phpdelusions.net/pdo#errors&quot;&gt;no try-catch have to be used for the error reporting&lt;/a&gt;. PHP will report you PDO errors already, and in a way better form. An uncaught exception is very good for development, yet if you want to show a customized error page, still don't use try catch for this, but just &lt;a href=&quot;https://phpdelusions.net/articles/error_reporting&quot;&gt;set custom error handler&lt;/a&gt;. In a nutshell, you don't have to treat PDO errors as something special but regard them as any other error in your code.</source>
          <target state="translated">또한 일반적인 망상에도 불구하고 &lt;a href=&quot;https://phpdelusions.net/pdo#errors&quot;&gt;오류보고에 try-catch를 사용할 필요가 없습니다&lt;/a&gt; . PHP는 이미 PDO 오류를보고하고 더 좋은 형태로보고합니다. 잡히지 않은 예외는 개발에 매우 ​​유용하지만, 사용자 정의 된 오류 페이지를 표시하려면 try catch를 사용하지 말고 &lt;a href=&quot;https://phpdelusions.net/articles/error_reporting&quot;&gt;사용자 정의 오류 처리기를 설정하십시오&lt;/a&gt; . 간단히 말해서 PDO 오류를 특별한 것으로 취급 할 필요는 없지만 코드에서 다른 오류로 간주하십시오.</target>
        </trans-unit>
        <trans-unit id="cd66620eebd36a817790fa22165cbb9be05fdfcc" translate="yes" xml:space="preserve">
          <source>Every time a query fails, MySQL has an error message that &lt;strong&gt;explains the reason&lt;/strong&gt;. Unfortunately, by default such errors are not transferred to PHP, and all you have is a silence or a cryptic error message mentioned above.  Hence it is very important to configure PHP and PDO to report you MySQL errors. And once you get the error message, it will be a no-brainer to fix the issue.</source>
          <target state="translated">쿼리가 실패 할 때마다 MySQL &lt;strong&gt;에 이유&lt;/strong&gt; 를 &lt;strong&gt;설명&lt;/strong&gt; 하는 오류 메시지가 표시됩니다. 불행히도, 기본적으로 이러한 오류는 PHP로 전송되지 않으며 위에서 언급 한 침묵 또는 암호 오류 메시지 만 있으면됩니다. 따라서 MySQL 오류를보고하도록 PHP 및 PDO를 구성하는 것이 매우 중요합니다. 오류 메시지가 표시되면 문제를 해결하는 데 어려움이 없습니다.</target>
        </trans-unit>
        <trans-unit id="758b6dd3603f0c21dd25c2b941196696b61c9805" translate="yes" xml:space="preserve">
          <source>In order to get the detailed information about the problem, either put the following line in your code right after connect</source>
          <target state="translated">문제에 대한 자세한 정보를 얻으려면 연결 직후 코드에 다음 줄을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="646d44c038e011bb6364d127d8d5d3982eaadfa5" translate="yes" xml:space="preserve">
          <source>My PDO Statement doesn't work</source>
          <target state="translated">PDO 명세서가 작동하지 않습니다</target>
        </trans-unit>
        <trans-unit id="e0a21cebb8af676432f67281f2abc9c5d07a35e4" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;error_reporting&lt;/code&gt; should be set to &lt;code&gt;E_ALL&lt;/code&gt; all the time.</source>
          <target state="translated">&lt;code&gt;error_reporting&lt;/code&gt; 은 항상 &lt;code&gt;E_ALL&lt;/code&gt; 로 설정되어야합니다.</target>
        </trans-unit>
        <trans-unit id="63845bc44ba288e599d0b4b8bcff72d0ee91e714" translate="yes" xml:space="preserve">
          <source>Note that in order to see PDO errors, you have to be able to see PHP errors in general. To do so, you have to configure PHP depends on the site environment:</source>
          <target state="translated">PDO 오류를 보려면 일반적으로 PHP 오류를 볼 수 있어야합니다. 이렇게하려면 사이트 환경에 따라 PHP를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="659233729afa33ae7f3e5cfe0ab55aec11b048ec" translate="yes" xml:space="preserve">
          <source>Or, if it says there is an error in the SQL syntax, then you have to examine your SQL. And the problem spot is right &lt;strong&gt;before&lt;/strong&gt; the query part cited in the error message.</source>
          <target state="translated">또는 SQL 구문에 오류가 있다고 표시되면 SQL을 검사해야합니다. 그리고 문제 지점은 오류 메시지에 인용 된 쿼리 부분 바로 &lt;strong&gt;앞에&lt;/strong&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="06d5e9d42df7d13dc03fd63d11982708489d53ef" translate="yes" xml:space="preserve">
          <source>Say, if it says that a particular table doesn't exist, you have to check spelling, typos, letter case. Also you have to make sure that your PHP script connects to a correct database</source>
          <target state="translated">특정 테이블이 존재하지 않는다면 철자, 오타, 대소 문자를 확인해야합니다. 또한 PHP 스크립트가 올바른 데이터베이스에 연결되어 있는지 확인해야합니다</target>
        </trans-unit>
        <trans-unit id="24523283bbd994b0b023cfc56fd81ba29d5f1774" translate="yes" xml:space="preserve">
          <source>Sometimes there is no error but no results either. Then it means, &lt;em&gt;there is no data to match your criteria&lt;/em&gt;. So you have to admit this fact, even if you can swear the data and the criteria are all right. They are not. You have to check them again. I've got an article that can help in this matter, &lt;a href=&quot;https://phpdelusions.net/pdo/mcve&quot;&gt;How to debug database interaction with PDO&lt;/a&gt;. Just follow this instruction step by step and either have your problem solved or have an answerable question for Stack Overflow.</source>
          <target state="translated">때로는 오류는 없지만 결과는 없습니다. 그러면 &lt;em&gt;기준과 일치하는 데이터가 없다는&lt;/em&gt; 의미입니다. 따라서 데이터를 맹세하고 기준이 괜찮 더라도이 사실을 인정해야합니다. 그들은 아닙니다. 다시 확인해야합니다. 이 문제에 도움이되는 기사 인 &lt;a href=&quot;https://phpdelusions.net/pdo/mcve&quot;&gt;PDO와 데이터베이스 상호 작용을 디버깅하는 방법&lt;/a&gt; 이 있습니다. 이 지침을 단계별로 따르고 문제를 해결하거나 스택 오버플로에 대한 대답이 궁금합니다.</target>
        </trans-unit>
        <trans-unit id="cd265775f8bdab9a4b6c211e7cec38ec762b8c63" translate="yes" xml:space="preserve">
          <source>Sometimes your PDO code produces an error like &lt;code&gt;Call to a member function execute()&lt;/code&gt; or similar. Or even without any error but the query doesn't work all the same. It means that your query failed to execute.</source>
          <target state="translated">때때로 PDO 코드는 &lt;code&gt;Call to a member function execute()&lt;/code&gt; 또는 이와 유사한 호출 과 같은 오류를 생성합니다. 또는 오류가 없어도 쿼리가 모두 동일하게 작동하지 않습니다. 이는 쿼리 실행에 실패했음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="cfcc554060813f9f4e0b7a7e61b914dab273648b" translate="yes" xml:space="preserve">
          <source>There is a very small chance that in case of some specific error an exception won't be thrown. If your &lt;code&gt;query()&lt;/code&gt;/&lt;code&gt;prepare()&lt;/code&gt; or &lt;code&gt;execute()&lt;/code&gt; call returns &lt;code&gt;false&lt;/code&gt; but there is no exception, check the &lt;code&gt;PDO::errorInfo()&lt;/code&gt; like this,</source>
          <target state="translated">특정 오류가 발생하면 예외가 발생하지 않을 가능성이 매우 적습니다. &lt;code&gt;query()&lt;/code&gt; / &lt;code&gt;prepare()&lt;/code&gt; 또는 &lt;code&gt;execute()&lt;/code&gt; 호출이 &lt;code&gt;false&lt;/code&gt; 를 리턴하지만 예외가없는 경우 다음과 같이 &lt;code&gt;PDO::errorInfo()&lt;/code&gt; 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a493b6693ea8286eb7889311e90dfe1f6a661f71" translate="yes" xml:space="preserve">
          <source>This is my PHP sql statement and it's returning false while var dumping</source>
          <target state="translated">이것은 내 PHP SQL 문이며 var 덤프 중 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9ab9a1a3757ac47cd57b5cf2b6c90c43bae94d6b" translate="yes" xml:space="preserve">
          <source>You have to also &lt;em&gt;trust&lt;/em&gt; the error message. If it says that number of tokens doesn't match the number of bound variables then it &lt;em&gt;is&lt;/em&gt; so. Same goes for absent tables or columns. Given the choice, whether it's your own mistake or the error message is wrong, always stick to the former. Again it sounds condescending, but hundreds of questions on this very site prove this advice extremely useful.</source>
          <target state="translated">또한 오류 메시지를 &lt;em&gt;신뢰&lt;/em&gt; 해야합니다. 토큰의 수가 바인딩 된 변수의 수와 일치하지 않으면 그렇게됩니다. 테이블이나 열이없는 경우에도 마찬가지입니다. 선택의 여지가 있다면, 자신의 실수이든 오류 메시지 든 잘못된 것이 든 항상 전자를 고수하십시오. 다시 말하지만이 사이트에는 수백 가지의 질문이있어이 조언이 매우 유용하다는 것을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c56d2e641b0c30d84c907cc8b24dbbdff11bc76" translate="yes" xml:space="preserve">
          <source>on a &lt;strong&gt;development&lt;/strong&gt; server it is very handy to have errors right on the screen, for which displaying errors have to be turned on:</source>
          <target state="translated">&lt;strong&gt;개발&lt;/strong&gt; 서버에서는 화면에 오류를 표시하는 것이 매우 편리하며 표시 오류를 켜야합니다.</target>
        </trans-unit>
        <trans-unit id="97699b1a7d8893d430466479ae0ee1920e39fda0" translate="yes" xml:space="preserve">
          <source>while on a &lt;strong&gt;live&lt;/strong&gt; site, all errors have to be &lt;strong&gt;logged, but never shown&lt;/strong&gt; to the client. For this, configure PHP this way:</source>
          <target state="translated">&lt;strong&gt;라이브&lt;/strong&gt; 사이트에서는 모든 오류를 &lt;strong&gt;기록&lt;/strong&gt; 해야 &lt;strong&gt;하지만&lt;/strong&gt; 클라이언트에는 &lt;strong&gt;표시되지 않습니다&lt;/strong&gt; . 이를 위해 다음과 같이 PHP를 구성하십시오.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
