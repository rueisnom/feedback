<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/325933">
    <body>
      <group id="325933">
        <trans-unit id="be1c5755a4473bf69cefc91e58fb9a6384ad8af3" translate="yes" xml:space="preserve">
          <source>(Green is the current interval, blue blocks are valid intervals, red ones are overlapping intervals).</source>
          <target state="translated">緑は現在の間隔、青は有効な間隔、赤は重複する間隔)。</target>
        </trans-unit>
        <trans-unit id="9c6fe8ab47a43ba0cf830b93268616f0da065e7b" translate="yes" xml:space="preserve">
          <source>(If one range is neither completely after the other,</source>
          <target state="translated">(一方の範囲が他方の後に完全にどちらでもない場合。</target>
        </trans-unit>
        <trans-unit id="14c4e9d5962ad9f7b5705b9185b00196e6da3dc3" translate="yes" xml:space="preserve">
          <source>(StartA &amp;lt; EndB) and (EndA &amp;gt; StartB)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（StartA &amp;lt;EndB）および（EndA&amp;gt; StartB）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8cd90cae7281d3cbb6621e8f0e04d04da0027c7b" translate="yes" xml:space="preserve">
          <source>(StartA &amp;lt;= EndB)  and  (EndA &amp;gt;= StartB)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（StartA &amp;lt;= EndB）および（EndA&amp;gt; = StartB）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d53646a6f7570a4c9b7331086dffb12dd1055166" translate="yes" xml:space="preserve">
          <source>(True if &lt;code&gt;EndA &amp;lt; StartB&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;EndA &amp;lt; StartB&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;true&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d8e49f481f9e25f7d32ad828d09dfce72fb5dde" translate="yes" xml:space="preserve">
          <source>(True if &lt;code&gt;StartA &amp;gt; EndB&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;StartA &amp;gt; EndB&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合は真&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="60f3ced8c53c383c79df21229891d442940ad938" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(StartA &amp;lt;= EndB)  and  (EndA &amp;gt;= StartB)&lt;/code&gt;&lt;code&gt;(StartA &amp;lt;= EndB)  and  (StartB &amp;lt;= EndA)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(StartA &amp;lt;= EndB) and (EndA &amp;gt;= StartB)&lt;/code&gt; &lt;code&gt;(StartA &amp;lt;= EndB) and (StartB &amp;lt;= EndA)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="abf44f714bdcf5827fcba6a87a311608de94ca23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(StartA &amp;lt;= EndB) and (StartA &amp;lt;= EndA) and (StartB &amp;lt;= EndA) and (StartB &amp;lt;= EndB)&lt;/code&gt;
or,</source>
          <target state="translated">&lt;code&gt;(StartA &amp;lt;= EndB) and (StartA &amp;lt;= EndA) and (StartB &amp;lt;= EndA) and (StartB &amp;lt;= EndB)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; または、&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0d881e24dd30980603d4451efa57440b30a4bf04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(StartA &amp;lt;= EndB) and (StartB &amp;lt;= EndA) and (StartA &amp;lt;= EndA) and (StartB &amp;lt;= EndB)&lt;/code&gt;
or:</source>
          <target state="translated">&lt;code&gt;(StartA &amp;lt;= EndB) and (StartB &amp;lt;= EndA) and (StartA &amp;lt;= EndA) and (StartB &amp;lt;= EndB)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; または：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="89b9d9250e0a71f2637c0957e8ffad5e4322753f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(StartA &amp;lt;= Min(EndA, EndB) and (StartB &amp;lt;= Min(EndA, EndB))&lt;/code&gt;
or:</source>
          <target state="translated">&lt;code&gt;(StartA &amp;lt;= Min(EndA, EndB) and (StartB &amp;lt;= Min(EndA, EndB))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; または：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a6d04f64a9b895074f24c02c207ad27de2859db3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Not (A Or B)&lt;/code&gt;  &amp;lt;=&amp;gt;  &lt;code&gt;Not A And Not B&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Not (A Or B)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;lt;=&amp;gt; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AでもBでも&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Not A And Not B&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b223937b1b9cbdeb5d5062ac11ca27b82d3483d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Proof:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Proof:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="26150fa02e4ea6d6b6fc90ef4a1e13c2853d2ec2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;(StartA &amp;lt;= EndB)  and  (EndA &amp;gt;= StartB)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（StartA &amp;lt;= EndB）および（EndA&amp;gt; = StartB）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d9ff9380a51610ec19f2146e56370e0fafcc5325" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;(StartA &amp;lt;🞐 EndB)  and  (EndA &amp;gt;🞐 StartB)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（StartA &amp;lt;🞐EndB）および（EndA&amp;gt;🞐StartB）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5ea1833073711ed74f855aa187f090f0b6ac7fe5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Case 1&lt;/strong&gt;: A, B are closed intervals</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ケース1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：A、Bは閉区間&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="539be19a191412a8a6cad5eff5d3dd96d1ad012d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Case 2&lt;/strong&gt;: A, B are open intervals</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ケース2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：A、Bはオープンインターバル&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f599d548728d77792d6549b882ed72c508b0bec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Case 3&lt;/strong&gt;: A, B right open</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ケース3&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：A、B右開き&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e24b14717935fb06a71ddc29d90ca167c7378c85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Case 4&lt;/strong&gt;: A, B left open</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ケース4&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：A、Bは開いたまま&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d87ead3d514ce6098eadb4a9cd7dcdf816358df9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Case 5&lt;/strong&gt;: A right open, B closed</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ケース5&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：右開、B閉&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7a8395784c8647e4aa2bbebd90676aa5853fa690" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Split the problem into cases then handle each case&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;問題をケースに分割し、各ケースを処理します&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a745b4efeaea395599f2ef0983a88213256f899f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;etc...&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;etc...&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6877582280b7e99ee40b3658c541362c0190b1ad" translate="yes" xml:space="preserve">
          <source>A -&amp;gt; 1Start</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A-&amp;gt; 1スタート&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e684a501e2e77581ac59c65147a11412fed648d" translate="yes" xml:space="preserve">
          <source>A START 2
B END 2</source>
          <target state="translated">a 開始 2 b 終了 2</target>
        </trans-unit>
        <trans-unit id="4e1d70aa1d99f1b37d1db079e6b209766db52abc" translate="yes" xml:space="preserve">
          <source>About the closed or open state of interval boundaries, the solution of @Bretana valid &lt;strong&gt;for closed intervals&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;区間境界の閉じた状態または開いた状態について、&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;閉じた区間に&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有効な@Bretanaの解&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="54bbd5571d50c75e8978e79369e37fe97aba2506" translate="yes" xml:space="preserve">
          <source>All of these use the &lt;code&gt;Half-Open&lt;/code&gt; approach to defining a span of time where the beginning is &lt;em&gt;inclusive&lt;/em&gt; and the ending is &lt;em&gt;exclusive&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらはすべて、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Half-Open&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アプローチを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、開始が&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;包括的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で終了が&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;排他的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;である期間を定義します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f23365ed517b711bc593228e37f61a0ee59e709" translate="yes" xml:space="preserve">
          <source>All the solutions that check a multitude of conditions based on where the ranges are in relation to one another can be greatly simplified by &lt;em&gt;just ensuring that a specific range starts earlier!&lt;/em&gt; You ensure that the first range starts earlier (or at the same time) by swapping the ranges if necessary up front.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;範囲が相互に関連している場所に基づいて多数の条件をチェックするすべてのソリューションは&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、特定の範囲がより早く始まることを保証するだけ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で大幅に​​簡略化できます&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;！&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要に応じて前もって範囲を交換することにより、最初の範囲がより早く（または同時に）開始するようにします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="071105bc48f8e9031f76aff3425a157b789f62aa" translate="yes" xml:space="preserve">
          <source>An easy way to remember the solution would be</source>
          <target state="translated">解法を覚えるのに簡単な方法は</target>
        </trans-unit>
        <trans-unit id="1e08bd4db082a37da353ff79d76d55c73dfa54e7" translate="yes" xml:space="preserve">
          <source>And about &lt;strong&gt;empty intervals&lt;/strong&gt;, well, here the relationship shown above does NOT hold. Empty intervals which do not contain any valid value by definition must be handled as special case. I demonstrate it by my Java time library &lt;a href=&quot;https://github.com/MenoData/Time4J&quot;&gt;Time4J&lt;/a&gt; via this example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そして、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;空の間隔&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;については&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、まあ、ここで上記の関係は成り立ちません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義上有効な値を含まない空の間隔は、特別な場合として処理する必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この例を&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/MenoData/Time4J&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用し&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、Javaタイムライブラリ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Time4Jでそれ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を示します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f41c344f557a5e2eb8fb9f1336f63ea051c4a695" translate="yes" xml:space="preserve">
          <source>As an example, suppose we have ranges denoted by DateTime variables &lt;code&gt;StartDate1&lt;/code&gt; to &lt;code&gt;EndDate1&lt;/code&gt;&lt;em&gt;and&lt;/em&gt;&lt;code&gt;StartDate2&lt;/code&gt; to &lt;code&gt;EndDate2&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例として、DateTime変数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;StartDate1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から&lt;/font&gt;&lt;/font&gt; &lt;code&gt;EndDate1&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;code&gt;StartDate2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から&lt;/font&gt;&lt;/font&gt; &lt;code&gt;EndDate2&lt;/code&gt; で&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;示される範囲があるとします&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="18a13229053e1873cb760f88dad22a40968427da" translate="yes" xml:space="preserve">
          <source>As for the &lt;code&gt;language-agnostic&lt;/code&gt; tag on this Question, the source code for both projects is available for use in other languages (mind their licenses).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この質問&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;language-agnostic&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タグについては、両方のプロジェクトのソースコードを他の言語で使用できます（ライセンスに注意してください）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="449c4a557ed9660d5f0ae9c0bf026d2e555d13bf" translate="yes" xml:space="preserve">
          <source>As shown above, empty intervals violate the overlap condition above (especially startA &amp;lt; endB), so Time4J (and other libraries, too) has to handle it as special edge case in order to guarantee that the overlap of any arbitrary interval with an empty interval does not exist. Of course, date intervals (which are closed by default in Time4J but can be half-open, too, like empty date intervals) are handled in a similar way.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記のように、空の間隔は上記のオーバーラップ条件（特にstartA &amp;lt;endB）に違反しているため、Time4J（および他のライブラリも）は、任意の間隔が空の間隔とオーバーラップすることを保証するために、特別なエッジケースとして処理する必要があります。存在しない。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もちろん、日付間隔（Time4Jではデフォルトで閉じられますが、空の日付間隔のようにハーフオープンにすることもできます）も同様の方法で処理されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="717cd97f4e68883834cf8c6134b78ff3b3f7747f" translate="yes" xml:space="preserve">
          <source>Assumes that the lower bound is inclusive and the upper bound exclusive.</source>
          <target state="translated">下界が包括的で上界が排他的であると仮定します。</target>
        </trans-unit>
        <trans-unit id="0b62677de1569e52fba6c53ed7d12a8392856aa7" translate="yes" xml:space="preserve">
          <source>Assuming inclusive at both ends, there's only four possibilities of which one is a non-overlap:</source>
          <target state="translated">両端がインクルーシブだと仮定すると、どちらが非オーバーラップであるかは4つの可能性しかありません。</target>
        </trans-unit>
        <trans-unit id="bd5876e59f1f06b11d65e2f76d05b137d63919eb" translate="yes" xml:space="preserve">
          <source>B -&amp;gt; 1End</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;B-&amp;gt;片端&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b62baba4f409ede76ab82adec001dbeb9a16f370" translate="yes" xml:space="preserve">
          <source>Below query gives me the ids  for which the supplied date range (start and end dates overlaps with any of the dates (start and end dates) in my table_name</source>
          <target state="translated">以下のクエリは、指定された日付範囲(開始日と終了日)が、私のテーブル名のいずれかの日付(開始日と終了日)と重なっているIDを与えてくれます。</target>
        </trans-unit>
        <trans-unit id="fee5a10d3e05f8ef19423830339b518ce08e86ef" translate="yes" xml:space="preserve">
          <source>But to implement &lt;code&gt;Min()&lt;/code&gt; and &lt;code&gt;Max()&lt;/code&gt;, you have to code, (using C ternary for terseness),:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Min()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Max()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を実装&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するには、（簡潔にするためにCの3項を使用して）コードを記述する必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="66d3b8caa29a5a1175246cc89b1c067f859c3ea6" translate="yes" xml:space="preserve">
          <source>C -&amp;gt; 2Start</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C-&amp;gt; 2開始&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ca567dda33cdf7058994a40bb9ef4db135c7d283" translate="yes" xml:space="preserve">
          <source>Code:</source>
          <target state="translated">Code:</target>
        </trans-unit>
        <trans-unit id="ca64bce7769d42c68553213fa81bd7c2704457d0" translate="yes" xml:space="preserve">
          <source>Comes with a bunch of tests</source>
          <target state="translated">テストの束が付属しています</target>
        </trans-unit>
        <trans-unit id="ef6a66553d6b60f428e798c37626ab14f8b48727" translate="yes" xml:space="preserve">
          <source>Comparing to test for overlaps is easy.</source>
          <target state="translated">重複をテストするための比較は簡単です。</target>
        </trans-unit>
        <trans-unit id="c9284808bf71ef0ae272d9a79ccd26887def0e4a" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;Interval&lt;/code&gt; to represent that span of time.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その期間を表す&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Interval&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c6ee68c57b51cbdde296bcfba575ececf469fd14" translate="yes" xml:space="preserve">
          <source>D -&amp;gt; 2End</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;D-&amp;gt; 2エンド&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="12fa497a7ac67280ec62a8b91b7f0bfab66da66c" translate="yes" xml:space="preserve">
          <source>Determine Whether Two Date Ranges Overlap</source>
          <target state="translated">2 つの日付範囲が重なっているかどうかの判定</target>
        </trans-unit>
        <trans-unit id="fc28b57373f4def83713d01706b54c4e694c7212" translate="yes" xml:space="preserve">
          <source>ErikE comments:</source>
          <target state="translated">ErikEさんのコメント。</target>
        </trans-unit>
        <trans-unit id="bd5da538bc5849c33b59a9532a2cebfd0f231be3" translate="yes" xml:space="preserve">
          <source>Finally, the general condition for two intervals to overlap is</source>
          <target state="translated">最後に、2つの区間が重なる一般的な条件は</target>
        </trans-unit>
        <trans-unit id="e1be966be1dcdb607901f85a0cae971d1a178f1f" translate="yes" xml:space="preserve">
          <source>For reasoning about temporal relations (or any other interval relations, come to that), consider &lt;a href=&quot;http://en.wikipedia.org/wiki/Allen%27s_Interval_Algebra&quot;&gt;Allen's Interval Algebra&lt;/a&gt;.  It describes the 13 possible relations that two intervals can have with respect to each other.  You can find other references &amp;mdash; &quot;Allen Interval&quot; seems to be an operative search term.  You can also find information about these operations in Snodgrass's &lt;a href=&quot;http://www.cs.arizona.edu/~rts/publications.html&quot;&gt;Developing Time-Oriented Applications in SQL&lt;/a&gt; (PDF available online at URL), and in Date, Darwen and Lorentzos &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/B005UY0W0E&quot;&gt;Temporal Data and the Relational Model&lt;/a&gt; (2002) or  &lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/B00N2SNSUG&quot;&gt;Time and Relational Theory: Temporal Databases in the Relational Model and SQL&lt;/a&gt; (2014; effectively the second edition of TD&amp;amp;RM).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;時間的関係（またはその他の区間関係については、ここに来てください）についての推論については、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Allen%27s_Interval_Algebra&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アレンの区間代数を&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;検討してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。これは、2つの間隔が互いに対して持つことができる13の可能な関係を示しています。他の参考文献を見つけることができます&amp;mdash;「Allen Interval」は有効な検索用語のようです。これらの操作に関する情報は、Snodgrassの&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.cs.arizona.edu/~rts/publications.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQLでの時間指向アプリケーション&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;開発&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（PDFはURLでオンラインで利用可能）、Date、DarwenおよびLorentzosの&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/B005UY0W0E&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;時間データと関係モデル&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（2002）または &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/B00N2SNSUG&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;時間と関係理論：時間データベースRelational Model and SQL&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（2014;事実上、TD＆RMの第2版）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00e0880276720235e2a5ba60da4dbe5b84c9580f" translate="yes" xml:space="preserve">
          <source>For ruby I also found this:</source>
          <target state="translated">ルビーについては、これも見つけました。</target>
        </trans-unit>
        <trans-unit id="6e370a3665aee4484c77c6cfacd9a851c22d1b89" translate="yes" xml:space="preserve">
          <source>Found it here with nice explaination -&amp;gt;
&lt;a href=&quot;http://makandracards.com/makandra/984-test-if-two-date-ranges-overlap-in-ruby-or-rails&quot;&gt;http://makandracards.com/makandra/984-test-if-two-date-ranges-overlap-in-ruby-or-rails&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;素晴らしい説明でここに見つかりました-&amp;gt; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://makandracards.com/makandra/984-test-if-two-date-ranges-overlap-in-ruby-or-rails&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://makandracards.com/makandra/984-test-if-two-date-ranges-overlap-in-ruby-or-rails&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d87615343599558ce4bf0c2f315efd19598c5fb" translate="yes" xml:space="preserve">
          <source>Given two date ranges, what is the simplest or most efficient way to determine whether the two date ranges overlap?</source>
          <target state="translated">2つの日付範囲があるとすると、2つの日付範囲が重なっているかどうかを判断する最も簡単な方法、または最も効率的な方法は何でしょうか?</target>
        </trans-unit>
        <trans-unit id="ada1b2ccf20c30d84cb405bebc66a480816ff2e3" translate="yes" xml:space="preserve">
          <source>Handles null values as infinity</source>
          <target state="translated">null 値を無限大として扱う</target>
        </trans-unit>
        <trans-unit id="c9434eb6bedf55bc8eabb3c4ecd8572ae3d61d84" translate="yes" xml:space="preserve">
          <source>Here is a generic method that can be usefull locally.</source>
          <target state="translated">ここでは、局所的に使える汎用的な方法を紹介します。</target>
        </trans-unit>
        <trans-unit id="6ed32edea44c309a8807d415228d9e90f7067019" translate="yes" xml:space="preserve">
          <source>Here is the code that does the magic:</source>
          <target state="translated">ここに魔法のコードがあります。</target>
        </trans-unit>
        <trans-unit id="e1dfa1331572d0879d544520dbdda422b58e9f32" translate="yes" xml:space="preserve">
          <source>Here is yet another shortened answer using &lt;strong&gt;momentjs&lt;/strong&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下は、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;momentjs&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用した別の短縮された回答&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3fc6721e9fe681f5865067942678c2feafeb2a1d" translate="yes" xml:space="preserve">
          <source>Here is yet another solution using JavaScript. Specialities of my solution:</source>
          <target state="translated">ここでは、JavaScriptを使ったもう一つのソリューションを紹介します。私のソリューションの特徴</target>
        </trans-unit>
        <trans-unit id="d0151de667fd0d1c1ee04aea7bcab326c944dca5" translate="yes" xml:space="preserve">
          <source>Here's my solution in &lt;em&gt;Java&lt;/em&gt;, which works on unbounded intervals too</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の私の解決策&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、無制限の間隔でも動作します&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c410cffc7f2f230e7b419b5f0e37199880321ea1" translate="yes" xml:space="preserve">
          <source>I adapted Ian Nelson's answer to the following solution:</source>
          <target state="translated">イアン・ネルソンの答えを以下の解答に当てはめてみました。</target>
        </trans-unit>
        <trans-unit id="0a9c8d705785d8c1b45091c3ad7c6e6c7495e6de" translate="yes" xml:space="preserve">
          <source>I believe that it is sufficient to say that the two ranges overlap if:</source>
          <target state="translated">2つの範囲が重なっていれば十分だと思います。</target>
        </trans-unit>
        <trans-unit id="11e259ebf627297ed7736f1b4a237950992326c6" translate="yes" xml:space="preserve">
          <source>I had a situation where we had dates instead of datetimes, and the dates could overlap only on start/end. Example below:</source>
          <target state="translated">datetimesの代わりに日付があり、startend上でのみ日付が重なってしまうという状況がありました。以下に例を示します。</target>
        </trans-unit>
        <trans-unit id="4d943a30b684434a6135907f0d38abbee9d35ce5" translate="yes" xml:space="preserve">
          <source>I think that you cannot count the two entries 'before:before' and 'after:after'.  I could see 7 entries if you equate some relations with their inverses (see the diagram in the referenced Wikipedia URL; it has 7 entries, 6 of which have a different inverse, with equals not having a distinct inverse).  And whether three is sensible depends on your requirements.</source>
          <target state="translated">before:before」と「after:after」の2つのエントリは数えることができないと思います。いくつかの関係をそれらの逆数と等しくすれば、7つのエントリを見ることができます(参照されているWikipediaのURLの図を見てください。そして、3が賢明かどうかは、あなたの要求に依存します。</target>
        </trans-unit>
        <trans-unit id="7e6191dea920982ba7f2f42e35d4e10615961b3e" translate="yes" xml:space="preserve">
          <source>I used this solution:</source>
          <target state="translated">このソリューションを使いました。</target>
        </trans-unit>
        <trans-unit id="823d5a10d5821fa14cbac1ec6c7dbe003544b613" translate="yes" xml:space="preserve">
          <source>I would do</source>
          <target state="translated">したいと思います。</target>
        </trans-unit>
        <trans-unit id="9d891a0cadf10d595404cd2a3196b597500a8ad9" translate="yes" xml:space="preserve">
          <source>If start and end dates can be out of order, i.e., if it is possible that &lt;code&gt;startA &amp;gt; endA&lt;/code&gt; or &lt;code&gt;startB &amp;gt; endB&lt;/code&gt;, then you also have to check that they are in order, so that means you have to add two additional validity rules:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;開始日と終了日が順不同である可能性がある場合、つまり、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;startA &amp;gt; endA&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;startB &amp;gt; endB&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;である可能性がある場合は、日付が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正しい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことも確認する必要があるため、次の2つの有効性ルールを追加する必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8df7f65184347be2584dd56dfc9ad39890d9413d" translate="yes" xml:space="preserve">
          <source>If startdate2 is higher then enddate there is no overlap!</source>
          <target state="translated">startdate2 が enddate よりも高い場合は、重複はありません。</target>
        </trans-unit>
        <trans-unit id="2e9ea82fc83ae16d47db278d3dd1e330fb4e44ce" translate="yes" xml:space="preserve">
          <source>If the overlap itself should be calculated as well, you can use the following formula:</source>
          <target state="translated">オーバーラップ自体も計算する必要がある場合は、以下の式で計算します。</target>
        </trans-unit>
        <trans-unit id="d8d07968ac5507f00d3c981ac610690bb23ca1aa" translate="yes" xml:space="preserve">
          <source>If the ranges are inclusive at the start and exclusive at the end, you just have to replace &lt;code&gt;&amp;gt;&lt;/code&gt; with &lt;code&gt;&amp;gt;=&lt;/code&gt; in the second &lt;code&gt;if&lt;/code&gt; statement (for the first code segment: in the second code segment, you'd use &lt;code&gt;&amp;lt;&lt;/code&gt; rather than &lt;code&gt;&amp;lt;=&lt;/code&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;範囲が最後に開始時に包括的かつ排他的である場合は、あなただけ交換する必要があり&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;gt;=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;秒で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;if&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;第2のコードセグメントでは、あなたが使用したい：第1のコードセグメントのための声明（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;というよりも、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4110419874b0ef2e43e43c7488df2cec280e529b" translate="yes" xml:space="preserve">
          <source>In Microsoft SQL SERVER  - SQL Function</source>
          <target state="translated">Microsoft SQL SERVER-SQL関数で</target>
        </trans-unit>
        <trans-unit id="0eb85042762e212a68838a672da4c05640ec3974" translate="yes" xml:space="preserve">
          <source>In case you're using a date range that has not ended yet (still on going) e.g. not set 
endDate = '0000-00-00' you can not use BETWEEN because 0000-00-00 is not a valid date!</source>
          <target state="translated">まだ終了していない(まだ進行中の)日付範囲を使用している場合、例えば endDate='0000-00-00-00'を設定していない場合は、0000-00-00は有効な日付ではないので、BETWEENを使用することはできません!また、この日付範囲を使用していない場合は、0000-00-00-00は有効な日付ではないので、BETWEENを使用することはできません。</target>
        </trans-unit>
        <trans-unit id="1475cb0978e3d8c0ca87cf53b407caaa022e37cc" translate="yes" xml:space="preserve">
          <source>Let ConditionA Mean that DateRange A Completely After DateRange B</source>
          <target state="translated">条件Aは、日付範囲Aが完全に日付範囲Bの後にあることを意味します。</target>
        </trans-unit>
        <trans-unit id="a02e2dec661efe0b529e2777bea6506885fa2885" translate="yes" xml:space="preserve">
          <source>Let ConditionB Mean that DateRange A is Completely Before DateRange B</source>
          <target state="translated">条件Bは、日付範囲Aが完全に日付範囲Bの前にあることを意味するとします。</target>
        </trans-unit>
        <trans-unit id="31ba4df72e30f70881608da9b2073580f976d7c8" translate="yes" xml:space="preserve">
          <source>NOTE2. Thanks to @Baodad, see &lt;a href=&quot;http://baodad.blogspot.com/2014/06/date-range-overlap.html&quot;&gt;this blog&lt;/a&gt;, the actual overlap is least of:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注2。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Baodadのおかげで、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://baodad.blogspot.com/2014/06/date-range-overlap.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このブログを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際の重複は以下のとおりです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c7bfde8de3d29f1c306ec09e448956302cabbc7b" translate="yes" xml:space="preserve">
          <source>NOTE3. Thanks to @tomosius, a shorter version reads:</source>
          <target state="translated">NOTE3.@tomosiusさんのおかげで、もっと短いバージョンが読めます。</target>
        </trans-unit>
        <trans-unit id="6bce23c490a67cc1cf33860b65cf5316b33a38ee" translate="yes" xml:space="preserve">
          <source>NOTE: This includes conditions where the edges overlap exactly.  If you wish to exclude that,</source>
          <target state="translated">注:これには、エッジが正確に重なっている状態も含まれます。除外したい場合</target>
        </trans-unit>
        <trans-unit id="7020b586108d95994267679eb017be35a8e6fe56" translate="yes" xml:space="preserve">
          <source>Now one of &lt;a href=&quot;https://en.wikipedia.org/wiki/De_Morgan%27s_laws&quot;&gt;De Morgan's laws&lt;/a&gt; says that:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;現在、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/De_Morgan%27s_laws&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ドモーガンの法則の&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 1つは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次のように述べています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3011babf0a3dbd8311dbc841b7405de3d54f0877" translate="yes" xml:space="preserve">
          <source>Overlap condition: &lt;code&gt;(StartA &amp;lt; EndB)  and  (EndA &amp;gt; StartB)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オーバーラップ条件：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(StartA &amp;lt; EndB) and (EndA &amp;gt; StartB)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c29e379a7c77f131f81d52382cab766485489176" translate="yes" xml:space="preserve">
          <source>Overlap condition: &lt;code&gt;(StartA &amp;lt;= EndB)  and  (EndA &amp;gt; StartB)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オーバーラップ条件：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(StartA &amp;lt;= EndB) and (EndA &amp;gt; StartB)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="817f92032f18fe9c284512b7edec87e36c67c351" translate="yes" xml:space="preserve">
          <source>Overlap iff: &lt;code&gt;(StartA &amp;lt; EndB)  and  (EndA &amp;gt; StartB)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オーバーラップ&lt;/font&gt; &lt;code&gt;(StartA &amp;lt; EndB) and (EndA &amp;gt; StartB)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（StartA &amp;lt;EndB）および（EndA&amp;gt; StartB）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4816b1fd0a6a351aece117e35c81eeb8429dbf7d" translate="yes" xml:space="preserve">
          <source>Overlap iff: &lt;code&gt;(StartA &amp;lt;= EndB)  and  (EndA &amp;gt;= StartB)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オーバーラップ&lt;/font&gt; &lt;code&gt;(StartA &amp;lt;= EndB) and (EndA &amp;gt;= StartB)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（StartA &amp;lt;= EndB）および（EndA&amp;gt; = StartB）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9247167bbc5380d2906425dc5cabe0ba65b55686" translate="yes" xml:space="preserve">
          <source>PhantomJS 1.9.8 (Linux): Executed 20 of 20 SUCCESS (0.003 secs / 0.004 secs)</source>
          <target state="translated">PhantomJS 1.9.8(Linux)。20件中20件実行 SUCCESS (0.003秒 0.004秒)</target>
        </trans-unit>
        <trans-unit id="e1174d6d7d0abc31f3948fe4646e77c8409927e1" translate="yes" xml:space="preserve">
          <source>Proof? Check out this test &lt;a href=&quot;https://gist.github.com/sandeeptalabathula/3b469065251eb1992dd92b168fea0b61&quot;&gt;console code gist&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;証明？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このテスト&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://gist.github.com/sandeeptalabathula/3b469065251eb1992dd92b168fea0b61&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンソールコードの要点を&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;確認してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0df12378ee0645d0d7b1ae37e25ff706040b94ce" translate="yes" xml:space="preserve">
          <source>Result when run with karma&amp;amp;jasmine&amp;amp;PhantomJS:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;karma＆jasmine＆PhantomJSで実行した場合の結果：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac41b306c665fe84ac86f47184682e1e045899bf" translate="yes" xml:space="preserve">
          <source>Tests:</source>
          <target state="translated">Tests:</target>
        </trans-unit>
        <trans-unit id="a4f72a673cf7c13cf980afdffc9eac7ece10cad3" translate="yes" xml:space="preserve">
          <source>That of course if you are considering intervals where StartDate is always before EndDate.</source>
          <target state="translated">あなたがStartDateが常にEndDateの前にある間隔を考慮している場合はもちろんです。</target>
        </trans-unit>
        <trans-unit id="f6709a631d5e54d86f9a0e705cabfb5fa2416116" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.threeten.org/threeten-extra/apidocs/org/threeten/extra/Interval.html&quot;&gt;&lt;code&gt;org.threeten.extra.Interval&lt;/code&gt;&lt;/a&gt; class is handy, but requires date-time moments (&lt;code&gt;java.time.Instant&lt;/code&gt; objects) rather than date-only values. So we proceed by using the first moment of the day in UTC to represent the date.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://www.threeten.org/threeten-extra/apidocs/org/threeten/extra/Interval.html&quot;&gt; &lt;code&gt;org.threeten.extra.Interval&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスは便利ですが、日時モーメント（必要と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;java.time.Instant&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト）ではなく、日付のみの値を。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、日付を表すためにUTCのその日の最初の瞬間を使用して先に進みます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99f879b55f13cb0db9f1777c830bc458de6028e7" translate="yes" xml:space="preserve">
          <source>The answer however does not make a distinction among open, closed, and half-open (or half-closed) intervals.</source>
          <target state="translated">しかし、その答えは、オープン、クローズ、ハーフオープン(またはハーフクローズ)の間隔の区別をしていません。</target>
        </trans-unit>
        <trans-unit id="5ff2abe2e857a5fc0323b039100c3e6d527534b9" translate="yes" xml:space="preserve">
          <source>The answer is too simple for me so I have created a more generic dynamic SQL statement which checks to see if a person has any overlapping dates.</source>
          <target state="translated">あまりにも単純な答えなので、その人の日付が重複していないかどうかをチェックする、より一般的な動的SQL文を作成してみました。</target>
        </trans-unit>
        <trans-unit id="b3bba2c3f223b7b7dbb6da530d4272aa1ab8ad61" translate="yes" xml:space="preserve">
          <source>The best in the business is the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/package-summary.html&quot;&gt;&lt;code&gt;java.time&lt;/code&gt;&lt;/a&gt; framework built into Java 8 and later. Add to that the &lt;a href=&quot;http://www.threeten.org/threeten-extra/&quot;&gt;ThreeTen-Extra&lt;/a&gt; project that supplements java.time with additional classes, specifically the &lt;a href=&quot;http://www.threeten.org/threeten-extra/apidocs/org/threeten/extra/Interval.html&quot;&gt;&lt;code&gt;Interval&lt;/code&gt;&lt;/a&gt; class we need here.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ビジネスで最も優れているのは、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java 8以降に組み込まれて&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いる&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/package-summary.html&quot;&gt; &lt;code&gt;java.time&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フレームワークです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これに、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;java.timeを追加のクラス、特に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで必要な&lt;/font&gt;&lt;a href=&quot;http://www.threeten.org/threeten-extra/apidocs/org/threeten/extra/Interval.html&quot;&gt; &lt;code&gt;Interval&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で補足&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.threeten.org/threeten-extra/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ThreeTen-Extra&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロジェクトを追加し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2e316f066b027c881593a79d249237b1b77e790b" translate="yes" xml:space="preserve">
          <source>The easiest way to do it in my opinion would be to compare if either EndDate1 is before StartDate2 and EndDate2 is before StartDate1.</source>
          <target state="translated">私の考えでは一番簡単な方法は、EndDate1がStartDate2よりも前にある場合と、EndDate2がStartDate1よりも前にある場合を比較することだと思います。</target>
        </trans-unit>
        <trans-unit id="efe0d33b21ec59522626740ab0c731d526accf52" translate="yes" xml:space="preserve">
          <source>The endpoint of the range 2 doesn't enter into it. So, in pseudo-code:</source>
          <target state="translated">範囲2の終点が入らない。なので、疑似コードでは</target>
        </trans-unit>
        <trans-unit id="1dd106d39bbb4aa6701a77d2dd8d21a87b3c8bc0" translate="yes" xml:space="preserve">
          <source>The leading square bracket &quot;[&quot; indicates a closed start while the last bracket &quot;)&quot; indicates an open end.</source>
          <target state="translated">先頭の角括弧「[&quot;」は閉じた開始を示し、最後の括弧「)&quot;」は開いた終了を示します。</target>
        </trans-unit>
        <trans-unit id="62dcdbb0045d5593e7c995c129d77811778eee1f" translate="yes" xml:space="preserve">
          <source>The mathematical solution given by @Bretana is good but neglects two specific details:</source>
          <target state="translated">Bretana氏が与えた数学的な解法は良いが、2つの具体的な詳細を無視している。</target>
        </trans-unit>
        <trans-unit id="e92d25283871dc3ba2dd95873f2e2a1301aaa985" translate="yes" xml:space="preserve">
          <source>The short(ish) answer is: given two date intervals &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; with components &lt;code&gt;.start&lt;/code&gt; and &lt;code&gt;.end&lt;/code&gt; and the constraint &lt;code&gt;.start &amp;lt;= .end&lt;/code&gt;, then two intervals overlap if:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;short（ish）の答えは次のとおりです。2つの日付間隔&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;B&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;にコンポーネント&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.start&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.end&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と制約&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.start &amp;lt;= .end&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、次の場合に2つの間隔が重なります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="502ba4d206f7fce4f57a4417f51f4c8f0131b8c7" translate="yes" xml:space="preserve">
          <source>The simplest way is to use a well-engineered dedicated library for date-time work.</source>
          <target state="translated">最も簡単な方法は、日付時間の作業のためによく設計された専用のライブラリを使用することです。</target>
        </trans-unit>
        <trans-unit id="c8011747bacf03222986b0871e17192f2bb0e597" translate="yes" xml:space="preserve">
          <source>The situation 'two date ranges intersect' is covered by two cases - the first date range starts within the second, or the second date range starts within the first.</source>
          <target state="translated">2つの日付範囲が交差する」という状況は、2つのケースでカバーされています-1つ目の日付範囲が2つ目の範囲内で始まる場合と、2つ目の日付範囲が1つ目の範囲内で始まる場合です。</target>
        </trans-unit>
        <trans-unit id="c2cce8755800d77015f0dadd09aa3d3dc887b225" translate="yes" xml:space="preserve">
          <source>The solution posted here did not work for all overlapping ranges...</source>
          <target state="translated">ここに投稿されている解決策は、すべての重複する範囲では機能しませんでした...。</target>
        </trans-unit>
        <trans-unit id="67977ec403a76bd7aa19d2056f5074b10b71b8ff" translate="yes" xml:space="preserve">
          <source>The tests are based on integers but since date objects in JavaScript are comparable you can just throw in two date objects as well. Or you could throw in the millisecond timestamp.</source>
          <target state="translated">テストは整数に基づいていますが、JavaScriptの日付オブジェクトは比較可能なので、2つの日付オブジェクトも同様に投入することができます。あるいは、ミリ秒のタイムスタンプを入れることもできます。</target>
        </trans-unit>
        <trans-unit id="cd7086c34fd3fb88c9d8d5b3f651fceb2bf7f3a2" translate="yes" xml:space="preserve">
          <source>Then Overlap exists if Neither A Nor B is true -</source>
          <target state="translated">AもBも真ではない場合、オーバーラップが存在します。</target>
        </trans-unit>
        <trans-unit id="6cc85191168ca17ed4cde272d495ff4aa9f2f275" translate="yes" xml:space="preserve">
          <source>Then, you can detect overlap if the other range start is less than or equal to the first range end (if ranges are inclusive, containing both the start and end times) or less than (if ranges are inclusive of start and exclusive of end).</source>
          <target state="translated">そして、他方の範囲の開始時間が最初の範囲の終了時間以下(範囲が範囲に含まれ、開始時間と終了時間の両方を含む場合)、またはそれ以下(範囲が開始時間を含み、終了時間を含まない場合)であれば、重複を検出することができます。</target>
        </trans-unit>
        <trans-unit id="99928ab13dc5d293b4afee2019c465585a9c4381" translate="yes" xml:space="preserve">
          <source>This article &lt;a href=&quot;http://www.codeproject.com/KB/datetime/TimePeriod.aspx&quot;&gt;Time Period Library for .NET&lt;/a&gt; describes the relation of two time periods by the enumeration &lt;strong&gt;PeriodRelation&lt;/strong&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この記事&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.codeproject.com/KB/datetime/TimePeriod.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.NETの期間ライブラリで&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、列挙型&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PeriodRelationに&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;よる2つの期間の関係について説明しています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa6fc2177fda2e828685846acd8fc01ddb0c8828" translate="yes" xml:space="preserve">
          <source>This correction is necessary because an open interval boundary does not belong to the value range of an interval by definition.</source>
          <target state="translated">開いた区間の境界は定義上区間の値域に属していないため、この補正が必要です。</target>
        </trans-unit>
        <trans-unit id="1b71058fe83b1277f7864f207f705cd7c47d8186" translate="yes" xml:space="preserve">
          <source>This could be simplified even more into:</source>
          <target state="translated">これをさらに簡略化すると</target>
        </trans-unit>
        <trans-unit id="76ad4ac3fcdfa63b15071664e176b6d78798230b" translate="yes" xml:space="preserve">
          <source>This is actually a syntactical shortcut for what is a longer implementation, which includes extra checks to verify that the start dates are on or before the endDates.  Deriving this from above:</source>
          <target state="translated">これは、実際にはより長い実装のための構文的なショートカットで、開始日が endDates の上にあるか、または endDates の前にあることを確認するための追加のチェックが含まれています。これを上記から派生させたものです。</target>
        </trans-unit>
        <trans-unit id="0eebebcce4ecba53fd86c45f1056735c65f0afc8" translate="yes" xml:space="preserve">
          <source>This is an extension to the &lt;a href=&quot;https://stackoverflow.com/a/325964/2314737&quot;&gt;excellent answer&lt;/a&gt; by @charles-bretana.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@ charles-bretanaによる&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/325964/2314737&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;優れた回答の&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;拡張&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a0763108e192173ca91593d64e7bff9229a40bb1" translate="yes" xml:space="preserve">
          <source>This matches all overlap cases but ignores the allowed overlap ones.</source>
          <target state="translated">これは、すべての重複したケースにマッチしますが、許可された重複したケースは無視されます。</target>
        </trans-unit>
        <trans-unit id="3ba0acb48d75bbdfad06557f4b8d47896edeae70" translate="yes" xml:space="preserve">
          <source>This was my javascript solution with moment.js:</source>
          <target state="translated">これは私のjavascriptの解決策としてmoment.jsを使ったものでした。</target>
        </trans-unit>
        <trans-unit id="44873efefccf0ac5b57d98ba7f366625820be3f5" translate="yes" xml:space="preserve">
          <source>This was my solution, it returns true when the values don't overlap:</source>
          <target state="translated">これは私の解決策で、値が重なっていない場合は真を返します。</target>
        </trans-unit>
        <trans-unit id="87b3af7ffe10f78abcac442866681a682276eda0" translate="yes" xml:space="preserve">
          <source>Using Java util.Date, here what I did.</source>
          <target state="translated">Java util.Dateを使って、こんなことをしました。</target>
        </trans-unit>
        <trans-unit id="9ddd6487aeb975b1d2f8fe680d9fedf27db55106" translate="yes" xml:space="preserve">
          <source>We can also define an &lt;code&gt;Interval&lt;/code&gt; with a starting moment plus a &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/time/Duration.html&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;開始時刻と&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/time/Duration.html&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;加えた&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Interval&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義することもできます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e83a63a0847b2ef63fc1018c0a3cf938c9404a0c" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;IsBetween&lt;/code&gt; is something like</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どこ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;IsBetween&lt;/code&gt; は&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のようなものです&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b9868516ff3e390e20d052b5f436ce1ab572e06d" translate="yes" xml:space="preserve">
          <source>Where..</source>
          <target state="translated">Where..</target>
        </trans-unit>
        <trans-unit id="03fcebf2f42fc05d7c086fd055762c1675bdbfec" translate="yes" xml:space="preserve">
          <source>Which translates to: &lt;code&gt;(StartA &amp;lt;= EndB)  and  (EndA &amp;gt;= StartB)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(StartA &amp;lt;= EndB) and (EndA &amp;gt;= StartB)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0789e935e885fcb2a2bc3f6e418ad3450aed078a" translate="yes" xml:space="preserve">
          <source>X START 1
Y END 1</source>
          <target state="translated">x 開始 1 y 終了 1</target>
        </trans-unit>
        <trans-unit id="149d1b00312f34d6c285b6ff754fd61e5b922a50" translate="yes" xml:space="preserve">
          <source>You can compare an &lt;a href=&quot;http://www.threeten.org/threeten-extra/apidocs/org/threeten/extra/Interval.html&quot;&gt;&lt;code&gt;Interval&lt;/code&gt;&lt;/a&gt; against another &lt;a href=&quot;http://www.threeten.org/threeten-extra/apidocs/org/threeten/extra/Interval.html&quot;&gt;&lt;code&gt;Interval&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/time/Instant.html?is-external=true&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://www.threeten.org/threeten-extra/apidocs/org/threeten/extra/Interval.html&quot;&gt; &lt;code&gt;Interval&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を別の&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.threeten.org/threeten-extra/apidocs/org/threeten/extra/Interval.html&quot;&gt; &lt;code&gt;Interval&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/time/Instant.html?is-external=true&quot;&gt; &lt;code&gt;Instant&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比較できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5073cb28faa009505ee0f565d0ab1373df8097ef" translate="yes" xml:space="preserve">
          <source>You can only get 13 if you count things funny... I can get &quot;15 possible relations that two intervals can have&quot; when I go crazy with it. By sensible counting, I get only six, and if you throw out caring whether A or B comes first, I get only three (no intersect, partially intersect, one wholly within other). 15 goes like this: [before:before, start, within, end, after], [start:start, within, end, after], [within:within, end, after], [end:end, after], [after:after].</source>
          <target state="translated">おかしなことを数えても13しか出てこない......。私はそれに夢中になると、「2つの区間が持つ可能性のある15の関係」を得ることができます。合理的な数え方をすれば6つしか得られないし、AかBが先に来るかどうかを気にしなくても3つしか得られない(交差しない、部分的に交差する、1つは完全に他のものの中に入っている)。15は次のようになります。before:before,start,within,end,after]、[start:start,within,end,after]、[income:income,end,after]、[end:end,after]、[after:after]のようになります。</target>
        </trans-unit>
        <trans-unit id="72649cffdcc308ddb6b31e8d8a9139d922571f87" translate="yes" xml:space="preserve">
          <source>You can try this:</source>
          <target state="translated">これは試してみてください。</target>
        </trans-unit>
        <trans-unit id="2e109f65ffb7466bd5e34e1b2e16a886d269b35a" translate="yes" xml:space="preserve">
          <source>You can tune the use of &lt;code&gt;&amp;gt;=&lt;/code&gt; vs &lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;=&lt;/code&gt; vs &lt;code&gt;&amp;lt;&lt;/code&gt; to meet your requirements for degree of overlap.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;&amp;gt;=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; vs &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; vs &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の使用を調整して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、オーバーラップの度合いの要件を満たすことができます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d8aabd3c7ccfb0eb735613353386a2e84002dc4" translate="yes" xml:space="preserve">
          <source>You greatly limit the number of checks you have to make because you remove half of the problem space early by ensuring range 1 never starts after range 2.</source>
          <target state="translated">範囲1が範囲2の後に開始されないようにすることで、問題空間の半分を早めに取り除くことができるので、チェックの数を大幅に制限することができます。</target>
        </trans-unit>
        <trans-unit id="cbee6986f9321e26b8c07fef0fbcad1fad7b17a8" translate="yes" xml:space="preserve">
          <source>answer is based on above answers, but its shortened.</source>
          <target state="translated">答えは上記の答えに基づいていますが、短縮されています。</target>
        </trans-unit>
        <trans-unit id="99252a15ad2b042a90f8659d20500d816adad995" translate="yes" xml:space="preserve">
          <source>aspect of closed or half-open intervals</source>
          <target state="translated">狭間面</target>
        </trans-unit>
        <trans-unit id="fef68f1d59e651956306f9b9dd763ada566ccb9f" translate="yes" xml:space="preserve">
          <source>can be rewritten &lt;strong&gt;for half-open intervals&lt;/strong&gt; to:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ハーフオープン間隔&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で次の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ように書き換えることができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bb98e3a2cd7ab1ca720234297864a640766d3a05" translate="yes" xml:space="preserve">
          <source>change the &lt;code&gt;&amp;gt;=&lt;/code&gt; operators to &lt;code&gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;=&lt;/code&gt;  to &lt;code&gt;&amp;lt;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変更&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;gt;=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と演算子&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; への&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88964863289fe2b528f7ef6a2fa4c5975a35d505" translate="yes" xml:space="preserve">
          <source>empty intervals</source>
          <target state="translated">くうかん</target>
        </trans-unit>
        <trans-unit id="efcc8d39201ee1ce165d7cc66c6f341b96ede3d4" translate="yes" xml:space="preserve">
          <source>java.time &amp;amp; ThreeTen-Extra</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;java.timeおよびThreeTen-Extra&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="314028ae16cf2aca664e8b4e2f91bb40e4871adf" translate="yes" xml:space="preserve">
          <source>my working solution was:</source>
          <target state="translated">私の仕事の解決策は</target>
        </trans-unit>
        <trans-unit id="aafccc70d24eadae180db7037411567c6b6ad4f5" translate="yes" xml:space="preserve">
          <source>nor completely before the other, 
     then they must overlap.)</source>
          <target state="translated">また、他のものよりも完全に前にある場合には、それらは重なっていなければなりません)。</target>
        </trans-unit>
        <trans-unit id="ed0b41e58939be141fbe79d1f8ca915e114d674d" translate="yes" xml:space="preserve">
          <source>the simplest</source>
          <target state="translated">いちばんシンプル</target>
        </trans-unit>
        <trans-unit id="7d35b3084e4a950d5586ae35f9df49288a748416" translate="yes" xml:space="preserve">
          <source>where 🞐 turns a strict inequality into a non-strict one whenever the comparison is made between two included endpoint.</source>
          <target state="translated">ここで、🞐は、含まれる2つの端点間で比較が行われるたびに、厳密な不等式を非厳密な不等式に変えます。</target>
        </trans-unit>
        <trans-unit id="2672c852286e8d786b3d336dc983c8f29329f41e" translate="yes" xml:space="preserve">
          <source>{ &lt;code&gt;endA-startA&lt;/code&gt;, &lt;code&gt;endA - startB&lt;/code&gt;, &lt;code&gt;endB-startA&lt;/code&gt;, &lt;code&gt;endB - startB&lt;/code&gt; }</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;{ &lt;/font&gt;&lt;/font&gt; &lt;code&gt;endA-startA&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;endA - startB&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;endB-startA&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;endB - startB&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; }&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
