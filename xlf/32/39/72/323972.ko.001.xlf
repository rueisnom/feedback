<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/323972">
    <body>
      <group id="323972">
        <trans-unit id="7499887d098c99ea897596a63e36d7e74ca23c6b" translate="yes" xml:space="preserve">
          <source>(Based on &lt;a href=&quot;http://tomerfiliba.com/recipes/Thread2/&quot;&gt;Killable Threads&lt;/a&gt; by Tomer Filiba. The quote about the return value of &lt;code&gt;PyThreadState_SetAsyncExc&lt;/code&gt; appears to be from an &lt;a href=&quot;https://svn.python.org/projects/stackless/Python-2.4.3/dev/Python/pystate.c&quot;&gt;old version of Python&lt;/a&gt;.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tomer Filiba의 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://tomerfiliba.com/recipes/Thread2/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Killable Threads&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기반으로합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;PyThreadState_SetAsyncExc&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 반환 값에 대한 인용문은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://svn.python.org/projects/stackless/Python-2.4.3/dev/Python/pystate.c&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이전 버전의 Python&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 나온 것으로 보입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1e65ee590bd907c63c09a2f7b81934bd3a8493de" translate="yes" xml:space="preserve">
          <source>(Only tested on Windows/Eclipse/Python3.3)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Windows / Eclipse / Python3.3에서만 테스트 됨)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b889a55dcfba693237d3023457bd4a92c28f55fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예를 들면 다음과 같습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb6c574d45f729178a2de94e32661492f7bb7dab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is a bad answer, see the comments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 나쁜 대답입니다, 의견을 참조하십시오&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="83836245ced07f09a600e24b1699107d2b7e0a40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;t&lt;/strong&gt; is your &lt;code&gt;Thread&lt;/code&gt; object.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;t&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="533ffebc3e3edeeb64695bd9c1d135c0186a35cf" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://docs.python.org/library/multiprocessing.html#multiprocessing.Process&quot;&gt;&lt;code&gt;multiprocessing.Process&lt;/code&gt;&lt;/a&gt; can &lt;a href=&quot;https://docs.python.org/library/multiprocessing.html#multiprocessing.Process.terminate&quot;&gt;&lt;code&gt;p.terminate()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/library/multiprocessing.html#multiprocessing.Process&quot;&gt; &lt;code&gt;multiprocessing.Process&lt;/code&gt; 의&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 캔 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/library/multiprocessing.html#multiprocessing.Process.terminate&quot;&gt; &lt;code&gt;p.terminate()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bdea397bd56ffa2f25ab2edfcbc515975377e732" translate="yes" xml:space="preserve">
          <source>A good usage pattern of this code is to have the thread catch a specific exception and perform the cleanup. That way, you can interrupt a task and still have proper cleanup.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 코드의 좋은 사용 패턴은 스레드가 특정 예외를 포착하고 정리를 수행하도록하는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이렇게하면 작업을 중단하고 여전히 적절한 정리를 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="01b3347aad13eb412669d2822899a4da8c245fa1" translate="yes" xml:space="preserve">
          <source>A little module that extends the threading's module functionality --
  allows one thread to raise exceptions in the context of another
  thread. By raising &lt;code&gt;SystemExit&lt;/code&gt;, you can finally kill python threads.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레딩의 모듈 기능을 확장하는 작은 모듈-한 스레드가 다른 스레드와 관련하여 예외를 발생시킬 수 있습니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;SystemExit&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 올리면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결국 파이썬 스레드를 죽일 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f61c357307a67de5a542e66f7bda51cbeb4d5c5" translate="yes" xml:space="preserve">
          <source>And always remember that if you have &quot;live threads&quot;, the Python interpreter will be running for wait them. (Because of this daemonic can help you if don't matter abruptly ends).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 &quot;실제 스레드&quot;가 있으면 파이썬 인터프리터가 실행되기를 기다립니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(이 데몬 때문에 갑자기 문제가 해결되지 않으면 도움이 될 수 있습니다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="135502d0c81b5fd516f0835f59bd96d7e49ff135" translate="yes" xml:space="preserve">
          <source>As noted in the documentation, this is not a magic bullet because if the thread is busy outside the Python interpreter, it will not catch the interruption.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문서에서 언급했듯이 스레드가 Python 인터프리터 외부에서 사용 중이면 중단을 포착하지 않기 때문에 이것은 마법의 총알이 아닙니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a5e81a364a431b35e422e8c6f50ce7e72469f2c0" translate="yes" xml:space="preserve">
          <source>As others have mentioned, the norm is to set a stop flag. For something lightweight (no subclassing of Thread, no global variable), a lambda callback is an option. (Note the parentheses in &lt;code&gt;if stop()&lt;/code&gt;.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 사람들이 언급했듯이, 표준은 정지 플래그를 설정하는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가벼운 것 (Thread의 서브 클래스 없음, 전역 변수 없음)의 경우 람다 콜백이 옵션입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if stop()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 괄호에 유의하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d84f70e4a652d63c2a072aaa9b7f02f91313ec6f" translate="yes" xml:space="preserve">
          <source>Asuming, that you want to have multiple threads of the same function, this is IMHO the easiest implementation to stop one by id:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동일한 함수의 여러 스레드를 원한다고 가정하면 IMHO는 id별로 하나씩 중지하는 가장 쉬운 구현입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ffb483f813286370fe57d5a5a2067479b9eb85c" translate="yes" xml:space="preserve">
          <source>Daemon threads are abruptly stopped at shutdown. Their resources (such as open files, database transactions, etc.) may not be released properly. If you want your threads to stop gracefully, make them non-daemonic and use a suitable signaling mechanism such as an Event.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;종료시 데몬 스레드가 갑자기 중지됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 파일 (예 : 열린 파일, 데이터베이스 트랜잭션 등)이 제대로 해제되지 않을 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드가 정상적으로 중지되도록하려면 스레드를 비 대조적으로 만들고 이벤트와 같은 적절한 신호 메커니즘을 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b3a10953e650178a593e9acbfb4a25c82e58bf9" translate="yes" xml:space="preserve">
          <source>E.g. this comes in handy to easily terminate helper &quot;threads&quot; which execute blocking I/O</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 이것은 차단 I / O를 실행하는 도우미 &quot;스레드&quot;를 쉽게 종료하는 데 편리합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="37e76af44e0f25e0f2b75aab24ff290a576c6068" translate="yes" xml:space="preserve">
          <source>Finally, please, note that &lt;code&gt;sys.exit()&lt;/code&gt; and &lt;code&gt;os.kill()&lt;/code&gt; are not choices.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마지막으로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sys.exit()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;os.kill()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 선택 사항이 아닙니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="54b6a1adf0dcc9e91cb44c50e073315dec966b6c" translate="yes" xml:space="preserve">
          <source>Following workaround can be used to kill a thread:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드를 죽이려면 다음 해결 방법을 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="53167916d482ed70e07e2dc768809307bdff0485" translate="yes" xml:space="preserve">
          <source>For example: t1.raise_exc(TypeError) and    not t1.raise_exc(TypeError(&quot;blah&quot;)).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어, t1.raise_exc (TypeError ( &quot;blah&quot;))가 아닌 t1.raise_exc (TypeError)입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eee51933ce68164fc4c946881c9ab7417bddcd40" translate="yes" xml:space="preserve">
          <source>From official documentation:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;공식 문서에서 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7cdabf14013cc3270dedd1ad770014cd92a6b5c1" translate="yes" xml:space="preserve">
          <source>Give it a few seconds then your thread should be stopped. Check also the &lt;code&gt;thread._Thread__delete()&lt;/code&gt; method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;몇 초 후에 실을 멈추어야합니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;thread._Thread__delete()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;도 확인하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="000ce415269e3dd7a8c11765a3e96de2697e64ea" translate="yes" xml:space="preserve">
          <source>Here's how to do it:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;방법은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="80deba264c25233db4a6c452127ad39f7cf7527c" translate="yes" xml:space="preserve">
          <source>However, according to its &lt;a href=&quot;http://tomerfiliba.com/recipes/Thread2/&quot;&gt;original source&lt;/a&gt;, there are some issues with this code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://tomerfiliba.com/recipes/Thread2/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;원래 소스&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 따르면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 코드에는 몇 가지 문제가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65392610f524e0142d69c85c5517ed6f476b93f8" translate="yes" xml:space="preserve">
          <source>I asked to expose this function in the built-in thread module, but    since ctypes has become a standard library (as of 2.5), and this</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내장 스레드 모듈 에서이 기능을 노출하도록 요청했지만 ctypes가 표준 라이브러리 (2.5 기준)가되었으므로&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="57bfe0c0f6e5f280276dff8c1742d56ca9221798" translate="yes" xml:space="preserve">
          <source>I think that creating daemonic threads depends of your application, but in general (and in my opinion) it's better to avoid killing them or making them daemonic. In multiprocessing you can use &lt;code&gt;is_alive()&lt;/code&gt; to check process status  and &quot;terminate&quot; for finish them (Also you avoid GIL problems). But you can find more problems, sometimes, when you execute your code in Windows.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 데몬 스레드를 만드는 것이 응용 프로그램에 달려 있다고 생각하지만 일반적으로 (그리고 제 생각에는) 그들을 죽이거나 데몬으로 만드는 것을 피하는 것이 좋습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;멀티 프로세싱에서는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is_alive()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 프로세스 상태를 확인하고 완료를 &quot;종료&quot;할 수 있습니다 (GIL 문제도 피할 수 있습니다). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 때로는 Windows에서 코드를 실행할 때 더 많은 문제를 찾을 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="81d51f3ae5cc800bb27d9912e62d3da2dc578097" translate="yes" xml:space="preserve">
          <source>I usually use this to terminate all the threads at the program exit. This might not be the perfect way to terminate thread/s but could help.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 보통 프로그램 종료시 모든 스레드를 종료하기 위해 이것을 사용합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 스레드를 종료하는 완벽한 방법은 아니지만 도움이 될 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a3a2924ab1b1ee0728b7c19280005c6a1cd722a" translate="yes" xml:space="preserve">
          <source>I'd recommend a &lt;code&gt;thread.quit()&lt;/code&gt; method for convenience. For example if you have a socket in your thread, I'd recommend creating a &lt;code&gt;quit()&lt;/code&gt; method in your socket-handle class, terminate the socket, then run a &lt;code&gt;thread._Thread__stop()&lt;/code&gt; inside of your &lt;code&gt;quit()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;편의를 위해 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;thread.quit()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;권장 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 스레드에 소켓이있는 경우 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;소켓 핸들 클래스에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;quit()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;만들고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;소켓을 종료 한 다음 &lt;/font&gt; &lt;code&gt;quit()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 내부 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;thread._Thread__stop()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 실행하는 것이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;좋습니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="876fa16023330ab848a18f32e0edea89e8b4cf7c" translate="yes" xml:space="preserve">
          <source>I'm way late to this game, but I've been wrestling with &lt;a href=&quot;https://stackoverflow.com/q/50473309/2123176&quot;&gt;a similar question&lt;/a&gt; and the following appears to both resolve the issue perfectly for me AND lets me do some basic thread state checking and cleanup when the daemonized sub-thread exits:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는이 게임에 늦었지만 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/q/50473309/2123176&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비슷한 질문&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 으로 레슬링을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고 있으며 다음은 나에게 완벽하게 문제를 해결하고 데몬 서브 스레드가 종료 될 때 기본적인 스레드 상태 확인 및 정리를 수행하는 것으로 보입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a16ad26f71a5c64230f6d98646c1ae3bd98895f3" translate="yes" xml:space="preserve">
          <source>IMHO it's a bug, and I reported it as one. For more info,    &lt;a href=&quot;http://mail.python.org/pipermail/python-dev/2006-August/068158.html&quot;&gt;http://mail.python.org/pipermail/python-dev/2006-August/068158.html&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;IMHO 그것은 버그이며, 나는 버그로보고했다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 내용은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://mail.python.org/pipermail/python-dev/2006-August/068158.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://mail.python.org/pipermail/python-dev/2006-August/068158.html&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b7feb23b16645a86e3c3901e1027abb2121562b" translate="yes" xml:space="preserve">
          <source>If you REALLY need to use a Thread, there is no way to kill it directly. What you can do, however, is to use a &lt;em&gt;&quot;daemon thread&quot;&lt;/em&gt;. In fact, in Python, a Thread can be flagged as &lt;em&gt;daemon&lt;/em&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드를 사용해야 할 경우 직접 죽일 방법이 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 할 수있는 것은 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;데몬 스레드&quot;&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용하는 것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사실 파이썬에서 스레드는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;데몬&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 으로 플래그 될 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2eb57e0bc96b5805d2297619a264cb8b76f871f2" translate="yes" xml:space="preserve">
          <source>If you are explicitly calling &lt;code&gt;time.sleep()&lt;/code&gt; as part of your thread (say polling some external service), an improvement upon Phillipe's method is to use the timeout in the &lt;code&gt;event&lt;/code&gt;'s &lt;code&gt;wait()&lt;/code&gt; method wherever you &lt;code&gt;sleep()&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;명시 적으로 호출하는 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;time.sleep()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 스레드 (예를 들어 폴링 일부 외부 서비스)의 일환으로, 필립의 방법에 따라 개선은에 타임 아웃을 사용하는 것입니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;event&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 당신이 어디에 있든 방법 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sleep()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d0309cdc3016580b03db61147c8d3abb9cad658" translate="yes" xml:space="preserve">
          <source>If you are trying to terminate the whole program you can set the thread as a &quot;daemon&quot;. see
&lt;a href=&quot;http://docs.python.org/library/threading.html#threading.Thread.daemon&quot;&gt;Thread.daemon&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전체 프로그램을 종료하려는 경우 스레드를 &quot;데몬&quot;으로 설정할 수 있습니다. &lt;/font&gt;&lt;a href=&quot;http://docs.python.org/library/threading.html#threading.Thread.daemon&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Thread.daemon을&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 참조하십시오 &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce89e39e0e2bb35c1782a68143995d4acac734c4" translate="yes" xml:space="preserve">
          <source>If you do NOT really need to have a Thread (!), what you can do, instead of using the &lt;a href=&quot;http://docs.python.org/2/library/threading.html&quot;&gt;&lt;em&gt;threading&lt;/em&gt; package &lt;/a&gt;, is to use the 
&lt;a href=&quot;http://docs.python.org/2/library/multiprocessing.html&quot;&gt;&lt;em&gt;multiprocessing&lt;/em&gt; package &lt;/a&gt;. Here, to kill a process, you can simply call the method:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로 Thread (!)가 필요하지 않은 경우 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/2/library/threading.html&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레딩&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 패키지&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대신 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/2/library/multiprocessing.html&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;멀티 프로세싱&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 패키지&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용하면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;됩니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로세스를 종료하려면 메소드를 호출하면됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c13c6937990bd60a8f3b72c72720d0cc393be267" translate="yes" xml:space="preserve">
          <source>If you really need the ability to kill a sub-task, use an alternate implementation. &lt;code&gt;multiprocessing&lt;/code&gt; and &lt;code&gt;gevent&lt;/code&gt; both support indiscriminately killing a &quot;thread&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하위 작업을 종료하는 기능이 실제로 필요한 경우 대체 구현을 사용하십시오. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;gevent&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &quot;스레드&quot;를 무차별 적으로 죽이는 것을 지원합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ca30e78bf8584a854ce42a0e8f96d98ae6baaa6" translate="yes" xml:space="preserve">
          <source>If you want to have only one thread of the function then you don't need to remember the id. Just stop, if &lt;code&gt;doit.stop&lt;/code&gt; &amp;gt; 0.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수의 스레드를 하나만 갖고 싶다면 ID를 기억할 필요가 없습니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;doit.stop&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;gt; 0 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이면 중지하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="41a042c4afd16b5fa837f1f61be17c796d4c1b5d" translate="yes" xml:space="preserve">
          <source>In Python, you simply cannot kill a Thread directly.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬에서는 스레드를 직접 죽일 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d7bbebde22a389645109ae0ceee4f1c30cf471da" translate="yes" xml:space="preserve">
          <source>In the cases where I want to kill a thread, but do not want to use flags/locks/signals/semaphores/events/whatever, I promote the threads to full blown processes. For code that makes use of just a few threads the overhead is not that bad.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드를 죽이고 싶지만 플래그 / 잠금 / 신호 / 세마포어 / 이벤트 / 무엇이든 사용하지 않으려는 경우 스레드를 완전히 처리 된 프로세스로 승격시킵니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;몇 개의 스레드 만 사용하는 코드의 경우 오버 헤드가 그렇게 나쁘지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="df24871dec1a94cda82eb27d59336d9daaff18c7" translate="yes" xml:space="preserve">
          <source>In this code, you should call &lt;code&gt;stop()&lt;/code&gt; on the thread when you want it to exit, and wait for the thread to exit properly using &lt;code&gt;join()&lt;/code&gt;. The thread should check the stop flag at regular intervals.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 코드에서는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드를 종료하려는 경우 스레드에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;stop()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;호출 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;join()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하여 스레드가 제대로 종료 될 때까지 기다려야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드는 정기적으로 정지 플래그를 확인해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b5389750dc6e75032caa27b223e6a3c9e571d8f6" translate="yes" xml:space="preserve">
          <source>Is it possible to terminate a running thread without setting/checking any flags/semaphores/etc.?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;플래그 / 세마포어 등을 설정 / 확인하지 않고 실행중인 스레드를 종료 할 수 있습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="df0e7bfdfe5011729ab75fd0ea9d69ab5e6ff6d9" translate="yes" xml:space="preserve">
          <source>Is there any way to kill a Thread</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드를 죽일 방법이 있습니까&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="40271a92e1b25a91ce28cb52a9125037fb90042d" translate="yes" xml:space="preserve">
          <source>It is better if you don't kill a thread.
A way could be to introduce a &quot;try&quot; block into the thread's cycle and to throw an exception when you want to stop the thread (for example a break/return/... that stops your for/while/...). 
I've used this on my app and it works...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드를 죽이지 않으면 더 좋습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드의주기에 &quot;try&quot;블록을 도입하고 스레드를 중지하려고 할 때 예외를 발생시키는 방법이있을 수 있습니다 (예 : 중단 / 복귀 / ... for / while / ... &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 앱에서 이것을 사용했으며 작동합니다 ...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="79cf010595520c83a59326da8b11077ae262a3f1" translate="yes" xml:space="preserve">
          <source>It is definitely possible to implement a &lt;code&gt;Thread.stop&lt;/code&gt; method as shown in the following example code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 예제 코드와 같이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread.stop&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 구현할 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b48aba3fe80ddcb770002981183273e3289d7353" translate="yes" xml:space="preserve">
          <source>It is generally a bad pattern to kill a thread abruptly, in Python and in any language. Think of the following cases:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬과 다른 언어로 쓰레드를 갑자기 죽이는 것은 일반적으로 나쁜 패턴입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같은 경우를 생각해보십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="838739e7e1b8444a4c050dce5aca9ade75aa0ebb" translate="yes" xml:space="preserve">
          <source>Just to build up on @SCB's idea (which was exactly what I needed) to create a KillableThread  subclass with a customized function:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용자 정의 함수를 사용하여 KillableThread 하위 클래스를 만들려면 @SCB의 아이디어 (정확히 필요한 것)를 구축하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5acde7748f2498c35a672ea06f06db1613bd0021" translate="yes" xml:space="preserve">
          <source>Kill a thread in Python</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬에서 스레드를 죽여&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f4303c0b9782c8743385e9a996b17de4960ec52f" translate="yes" xml:space="preserve">
          <source>Killing a thread removes any guarantees that try/finally blocks set up so you might leave locks locked, files open, etc.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드를 종료하면 시도 / 마지막으로 설정된 블록을 차단하여 잠금을 잠 그거나 파일을 열어 두는 등의 보장이 제거됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c8e9b66b73c7aaf5b931c4164168fced42391b1b" translate="yes" xml:space="preserve">
          <source>Naturally, like with @SBC, the thread doesn't wait to run a new loop to stop. In this example, you would see the &quot;Killing Thread&quot; message printed right after the &quot;About to kill thread&quot; instead of waiting for 4 more seconds for the thread to complete (since we have slept for 6 seconds already).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당연히 @SBC와 마찬가지로 스레드는 중지하기 위해 새 루프를 실행하기를 기다리지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 예에서는 스레드가 완료 될 때까지 4 초 이상 기다리지 않고 &quot;스레드 종료 정보&quot;바로 다음에 &quot;킬링 스레드&quot;메시지가 인쇄 된 것을 볼 수 있습니다 (이미 6 초 동안 잤기 때문에).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="353fdfea7f34feafa1d75c617f537a38460255f5" translate="yes" xml:space="preserve">
          <source>Note that it is necessary to set a Thread as &lt;code&gt;daemon&lt;/code&gt; before the &lt;code&gt;start()&lt;/code&gt; method is called!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드가 호출 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되기 전에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드를 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;daemon&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 으로 설정 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;!&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f184fd942f59085c4d9afb5d55db9d66f947c8b" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;multiprocessing.Event&lt;/code&gt; and the &lt;code&gt;multiprocessing.Semaphore&lt;/code&gt; work exactly in the same way of the &lt;code&gt;threading.Event&lt;/code&gt; and the &lt;code&gt;threading.Semaphore&lt;/code&gt; respectively. In fact, the first ones are clones of the latters.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참고 그 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;multiprocessing.Event&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;multiprocessing.Semaphore&lt;/code&gt; 의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 같은 방법으로 정확하게 작업 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;threading.Event&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;threading.Semaphore&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 각각. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로 첫 번째 것은 후자의 복제입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="98eb6e9676159deb20a9c7614dbb5e30c2686e03" translate="yes" xml:space="preserve">
          <source>Notice that this is inherently unsafe. It will likely lead to uncollectable garbage (from local variables of the stack frames that become garbage), and may lead to deadlocks, if the thread being killed has the GIL at the point when it is killed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 본질적으로 안전하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가비지가되는 스택 프레임의 로컬 변수에서 수집 할 수없는 가비지가 발생할 수 있으며, 죽이는 스레드가 죽일 때 GIL이있는 경우 교착 상태가 발생할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a269d9a12f08eed68c90d0706b60e6a762f7f078" translate="yes" xml:space="preserve">
          <source>Of course you can, and should, use &lt;code&gt;daemon&lt;/code&gt; even with &lt;code&gt;multiprocessing&lt;/code&gt;. Here, when the main process exits, it attempts to terminate all of its daemonic child processes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;물론 &lt;/font&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서도 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;daemon&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용할 수 있으며 사용해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 기본 프로세스가 종료되면 모든 데몬 하위 프로세스를 종료하려고 시도합니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5a2b65360a42d1bc2ba92d97dc8438b5161f8f0c" translate="yes" xml:space="preserve">
          <source>One thing I want to add is that if you read official documentation in &lt;a href=&quot;https://docs.python.org/2/library/threading.html&quot;&gt;threading lib Python&lt;/a&gt;, it's recommended to avoid use of &quot;demonic&quot; threads, when you don't want threads end abruptly, with the flag that Paolo Rovelli &lt;a href=&quot;https://stackoverflow.com/a/15185771&quot;&gt;mentioned&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 추가하고 싶은 한 가지는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/library/threading.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lib Python 스레딩의&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 공식 문서를 읽는 경우 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Paolo Rovelli가 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/15185771&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;언급 한&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 플래그와 함께 스레드가 갑자기 끝나기를 원하지 않을 때 &quot;민속적인&quot;스레드를 사용하지 않는 것이 좋습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0421c613eac8b7d974eb8d6f6d4c4cfa721cf595" translate="yes" xml:space="preserve">
          <source>Only exception types can be raised    safely. Exception instances are likely to cause unexpected behavior,    and are thus restricted.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예외 유형 만 안전하게 발생할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예외 인스턴스는 예기치 않은 동작을 유발할 수 있으므로 제한됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="632eb633bc9cec992880c9324816c7e5d9092ec8" translate="yes" xml:space="preserve">
          <source>Pieter Hintjens -- one of the founders of the &lt;a href=&quot;http://zguide.zeromq.org/py:all&quot;&gt;&amp;Oslash;MQ&lt;/a&gt;-project -- says, using &amp;Oslash;MQ and avoiding synchronization primitives like locks, mutexes, events etc., is the sanest and securest way to write multi-threaded programs:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://zguide.zeromq.org/py:all&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;Oslash;MQ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 프로젝트 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 창립자 중 하나 인 Pieter Hintjens는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;Oslash;MQ를&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하고 잠금, 뮤텍스, 이벤트 등과 같은 동기화 프리미티브를 피하는 것이 멀티 스레드 프로그램을 작성하는 가장 안전하고 안전한 방법이라고 말합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a1090a2b64b218b31613428fa3dcc48e4d76b8a" translate="yes" xml:space="preserve">
          <source>Python will kill your process (on Unix through the SIGTERM signal, while on Windows through the &lt;code&gt;TerminateProcess()&lt;/code&gt; call). Pay attention to use it while using a Queue or a Pipe! (it may corrupt the data in the Queue/Pipe)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python은 프로세스를 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;TerminateProcess()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; SIGTERM 신호를 통해 Unix에서, Windows에서는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TerminateProcess ()&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 호출을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;통해 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대기열이나 파이프를 사용하는 동안 사용에주의하십시오! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(대기열 / 파이프의 데이터가 손상 될 수 있음)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2d8b9bf32bf27d18f4aea0ebed049168e59b722f" translate="yes" xml:space="preserve">
          <source>Python's threading does not support cancellation. Do not even try. Your code is very likely to deadlock, corrupt or leak memory, or have other unintended &quot;interesting&quot; hard-to-debug effects which happen rarely and nondeterministically.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬의 스레딩은 취소를 지원하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;시도하지도 마라. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드가 메모리 교착 상태, 손상 또는 누출 가능성이 높거나 드물고 비 결정적으로 발생하는 의도하지 않은 &quot;흥미로운&quot;디버그하기 어려운 효과가 발생할 가능성이 큽니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bc549132ea7368326e4c41a503b933bf05d41f86" translate="yes" xml:space="preserve">
          <source>Read the python source (&lt;code&gt;Modules/threadmodule.c&lt;/code&gt; and &lt;code&gt;Python/thread_pthread.h&lt;/code&gt;) you can see the &lt;code&gt;Thread.ident&lt;/code&gt; is an &lt;code&gt;pthread_t&lt;/code&gt; type, so you can do anything &lt;code&gt;pthread&lt;/code&gt; can do in python use &lt;code&gt;libpthread&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬 소스 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Modules/threadmodule.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Python/thread_pthread.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;읽으&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 십시오. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread.ident&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;pthread_t&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유형이므로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;pthread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 파이썬에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;libpthread&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하여 수행 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;할 수있는 모든 작업을 수행 할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="56e218e6db5a19fcfd7ec9340175bdc08a065efe" translate="yes" xml:space="preserve">
          <source>Replacing &lt;code&gt;print()&lt;/code&gt; with a &lt;code&gt;pr()&lt;/code&gt; function that always flushes (&lt;code&gt;sys.stdout.flush()&lt;/code&gt;) may improve the precision of the shell output.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;교체 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;print()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로모그래퍼 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;pr()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 항상 플러시 기능 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sys.stdout.flush()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) 쉘 출력의 정밀도를 향상시킬 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fcd70e72304e8f7b76b072ea0ca586b45459925e" translate="yes" xml:space="preserve">
          <source>Second argument in KillableThread constructor is your custom function (print_msg here). Args argument are the arguments that will be used when calling the function ((&quot;hello world&quot;)) here.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;KillableThread 생성자의 두 번째 인수는 사용자 정의 함수입니다 (여기서는 print_msg). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Args 인수는 함수 (( &quot;hello world&quot;))를 호출 할 때 사용되는 인수입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c47beb861db5f720e70700312f8ed32a5f01593d" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://docs.python.org/library/multiprocessing.html&quot;&gt;Python documentation for &lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;https://docs.python.org/library/multiprocessing.html&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대한 &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 문서를&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 참조하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8f60e1773bc5e8ba4e0edccda080754e7a79fca" translate="yes" xml:space="preserve">
          <source>So, it allows a &quot;thread to raise exceptions in the context of another thread&quot; and in this way, the terminated thread can handle the termination without regularly checking an abort flag.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 &quot;스레드가 다른 스레드의 컨텍스트에서 예외를 발생시킬 수 있습니다&quot;를 허용하므로 종료 된 스레드는 중단 플래그를 정기적으로 확인하지 않고 종료를 처리 할 수 ​​있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b8da80974f16fb3bda44dc765f34519316244840" translate="yes" xml:space="preserve">
          <source>Start the sub thread with setDaemon(True).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;setDaemon (True)을 사용하여 서브 스레드를 시작하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce822c6af302b4fb91cb1d0d9f0b1d345667b6c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Thread3&lt;/code&gt; class appears to run code approximately 33% faster than the &lt;code&gt;Thread2&lt;/code&gt; class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Thread3&lt;/code&gt; 의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스는 약 33 % 더 빠른 것보다 코드를 실행 나타납니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread2&lt;/code&gt; 의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bdb742594535c89dd1d2824b6f16bb1e741f3962" translate="yes" xml:space="preserve">
          <source>The advantage of using &lt;code&gt;wait()&lt;/code&gt; instead of &lt;code&gt;sleep()&lt;/code&gt;ing and regularly checking the event is that you can program in longer intervals of sleep, the thread is stopped almost immediately (when you would otherwise be &lt;code&gt;sleep()&lt;/code&gt;ing) and in my opinion, the code for handling exit is significantly simpler.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;sleep()&lt;/code&gt; &lt;/font&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대신 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;wait ()을&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고 이벤트를 정기적으로 확인하는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이점은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 긴 수면 간격으로 프로그래밍 할 수 있다는 것입니다. 스레드는 거의 즉시 중지됩니다 (그렇지 않으면 &lt;/font&gt; &lt;code&gt;sleep()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; )하고 내 의견으로는 종료 처리 코드가 훨씬 간단합니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="755bfd3f36a5a72457c8ea731429b020680b3c45" translate="yes" xml:space="preserve">
          <source>The conversion is trivial: In related code replace all &lt;code&gt;threading.Thread&lt;/code&gt; with &lt;code&gt;multiprocessing.Process&lt;/code&gt; and all &lt;code&gt;queue.Queue&lt;/code&gt; with &lt;code&gt;multiprocessing.Queue&lt;/code&gt; and add the required calls of &lt;code&gt;p.terminate()&lt;/code&gt; to your parent process which wants to kill its child &lt;code&gt;p&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변환은 사소합니다. 관련 코드에서 모든 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;threading.Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;multiprocessing.Process&lt;/code&gt; 로&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대체 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고 모든 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;queue.Queue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;multiprocessing.Queue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;p.terminate()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 필요한 호출을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;부모 프로세스에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추가하여 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자식 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;p&lt;/code&gt; 를 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="4f754de7a178fa906a96d54bd3bdb5f92c8e80ce" translate="yes" xml:space="preserve">
          <source>The exception will be raised only when executing python bytecode. If    your thread calls a native/built-in blocking function, the
  exception    will be raised only when execution returns to the python
  code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파이썬 바이트 코드를 실행할 때만 예외가 발생합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드가 기본 / 내장 차단 함수를 호출하면 실행이 파이썬 코드로 돌아올 때만 예외가 발생합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ecbe460ea84d679935bbe296fe1bc226b6e06dec" translate="yes" xml:space="preserve">
          <source>The following code allows (with some restrictions) to raise an Exception in a Python thread:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 코드는 파이썬 스레드에서 예외를 발생시킬 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="170069c968da7b8b7f217e7a2bad649f4a487fa2" translate="yes" xml:space="preserve">
          <source>The link also provides an example on multi-threaded python code with &amp;Oslash;MQ.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 링크는 또한 &amp;Oslash;MQ가있는 다중 스레드 파이썬 코드에 대한 예를 제공합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd88401d2559d07c0c08640b3cf7bb962ea81e78" translate="yes" xml:space="preserve">
          <source>The main program will exit when no alive non-daemon threads are left. In other words, when your main thread (which is, of course, a non-daemon thread) will finish its operations, the program will exit even if there are still some daemon threads working.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;살아있는 비 데몬 스레드가 남아 있지 않으면 주 프로그램이 종료됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다시 말해, 메인 스레드 (데몬 이외의 스레드)가 작업을 마치면 여전히 일부 데몬 스레드가 작동하더라도 프로그램이 종료됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac462e709fc52b753b1ce03ec4e7321ea58091c6" translate="yes" xml:space="preserve">
          <source>The nice thing is here, you can have multiple of same and different functions, and stop them all by &lt;code&gt;functionname.stop&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;좋은 것은 당신이 같은 다른 기능의 여러 가지고 있고,에 의해 그들 모두를 중지 할 수 있습니다, 여기 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;functionname.stop&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="480182ddd48d7afcdac2fa66d5e9c3902e473a51" translate="yes" xml:space="preserve">
          <source>The nice way of handling this if you can afford it (if you are managing your own threads) is to have an exit_request flag that each threads checks on regular interval to see if it is time for it to exit.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여유를 가질 수있는 경우 (자신의 스레드를 관리하는 경우)이를 처리하는 좋은 방법은 각 스레드가 정기적으로 간격을 검사하여 종료 시간인지 확인하는 exit_request 플래그를 갖는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27a9fce92f3a474f52d4b4e4f977b79f655e24ff" translate="yes" xml:space="preserve">
          <source>The only time you can argue that forcibly killing threads is a good idea is to kill a program fast, but never single threads.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드를 강제로 종료하는 것이 좋은 아이디어라고 주장 할 수있는 유일한 시간은 프로그램을 빠르게 종료하지만 단일 스레드는 사용하지 않는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5495953fecadb24185aa3538211f58511b5f98f" translate="yes" xml:space="preserve">
          <source>Then to run it</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 실행&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90dd9c78e04867bb94e0abf10022e599112d7bd8" translate="yes" xml:space="preserve">
          <source>There are cases however when you really need to kill a thread. An example is when you are wrapping an external library that is busy for long calls and you want to interrupt it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 실제로 스레드를 죽여야 할 경우가 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 통화량이 많은 외부 라이브러리를 래핑하고 중단하려는 경우가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d6f565645f3315a2c65aa50a22eec314e40991d3" translate="yes" xml:space="preserve">
          <source>There is a library built for this purpose, &lt;a href=&quot;https://pypi.org/project/stopit/&quot;&gt;stopit&lt;/a&gt;. Although some of the same cautions listed herein still apply, at least this library presents a regular, repeatable technique for achieving the stated goal.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 목적으로 만들어진 라이브러리 인 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://pypi.org/project/stopit/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;stopit이&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에 나열된 동일한주의 사항 중 일부가 여전히 적용되지만, 적어도이 라이브러리는 명시된 목표를 달성하기위한 규칙적이고 반복 가능한 기술을 제공합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="faf7f52f2c184d50587b002b9d0a183d850f7589" translate="yes" xml:space="preserve">
          <source>There is also an issue if the built-in function internally calls    PyErr_Clear(), which would effectively cancel your pending exception. 
  You can try to raise it again.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내장 함수가 내부적으로 PyErr_Clear ()를 호출하면 보류중인 예외를 효과적으로 취소하는 문제도 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다시 올릴 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7bc9392b829027405d6a890488a9945514127cc" translate="yes" xml:space="preserve">
          <source>There is no official API to do that, no.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇게 할 공식 API는 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a3e562fc9b5c1f280609ce74f85faaf1fc4f850f" translate="yes" xml:space="preserve">
          <source>This can be used even for terminating threads, whose code is written in another module, from main thread. We can declare a global variable in that module and use it to terminate thread/s spawned in that module.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 메인 스레드에서 다른 모듈로 작성된 코드의 스레드를 종료하는 경우에도 사용할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 모듈에서 전역 변수를 선언하고 해당 모듈에서 생성 된 스레드를 종료하는 데 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eaccc67be5f40c89a1ac45a4c48d8a1fb5c6f2d8" translate="yes" xml:space="preserve">
          <source>This has only been tested on Python 2.7.3, but it is likely to work with other recent 2.x releases.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 Python 2.7.3에서만 테스트되었지만 다른 최신 2.x 릴리스에서 작동 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="76566f2ff0fe3e75d118f3dafc4f529332339a6e" translate="yes" xml:space="preserve">
          <source>This includes telling a child thread, that it should cancel its work. This would be done by equipping the thread with a &amp;Oslash;MQ-socket and polling on that socket for a message saying that it should cancel.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에는 자식 스레드에게 작업을 취소해야한다는 것을 포함합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드에 &amp;Oslash;MQ 소켓을 장착하고 해당 소켓에서 폴링하여 취소해야한다는 메시지를 폴링하면됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a10bd4a5c998219b8a98ec15379ab526b0a35728" translate="yes" xml:space="preserve">
          <source>This is based on &lt;a href=&quot;http://code.activestate.com/recipes/496960-thread2-killable-threads/&quot;&gt;thread2 -- killable threads (Python recipe)&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 &lt;/font&gt;&lt;a href=&quot;http://code.activestate.com/recipes/496960-thread2-killable-threads/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;thread2-killable thread (Python recipe)를&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 기반으로합니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6ab6b366f415658ac8d88501ece80edeca4655c6" translate="yes" xml:space="preserve">
          <source>This seems to work with pywin32 on windows 7</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 Windows 7에서 pywin32와 함께 작동하는 것 같습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f8bc61dc2847f4e7bdf59b32007bbfdf2afdb21e" translate="yes" xml:space="preserve">
          <source>While it's rather old, &lt;a href=&quot;http://code.activestate.com/recipes/496960-thread2-killable-threads/&quot;&gt;this&lt;/a&gt; might be a handy solution for some:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오히려 오래된이지만, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://code.activestate.com/recipes/496960-thread2-killable-threads/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 일부에 대한 편리한 해결책이 될 수 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c970e3f1e790a2a4cd28b40401902501b9bc2d74" translate="yes" xml:space="preserve">
          <source>Yields:</source>
          <target state="translated">Yields:</target>
        </trans-unit>
        <trans-unit id="54054b7ec21f1bc432221cc15ca2392f790d379c" translate="yes" xml:space="preserve">
          <source>You can execute your command in a process and then kill it using the process id.
I needed to sync between two thread one of which  doesn&amp;rsquo;t return by itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로세스에서 명령을 실행 한 다음 프로세스 ID를 사용하여 명령을 종료 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 스레드 사이를 동기화해야했는데 그중 하나는 자체적으로 반환되지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9ac1d0c3a9998447cbdf16eab376996f0c960d1a" translate="yes" xml:space="preserve">
          <source>You can kill a thread by installing trace into the thread that will exit the thread.   See attached link for one possible implementation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드를 종료하는 스레드에 추적을 설치하여 스레드를 강제 종료 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하나의 가능한 구현에 대해서는 첨부 된 링크를 참조하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9867180f299010f3a0ed3ab8bf23b87620c1552e" translate="yes" xml:space="preserve">
          <source>You need to call PyThreadState_SetasyncExc(), which is only available through ctypes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ctypes를 통해서만 사용할 수있는 PyThreadState_SetasyncExc ()를 호출해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="14cacb8130c7d15f6cde829762f0a7a57a0ff85b" translate="yes" xml:space="preserve">
          <source>You need to use platform API to kill the thread, e.g. pthread_kill, or TerminateThread. You can access such API e.g. through pythonwin, or through ctypes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pthread_kill 또는 TerminateThread와 같이 스레드를 종료하려면 플랫폼 API를 사용해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pythonwin 또는 ctypes를 통해 이러한 API에 액세스 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="54a2323ca3f1403ff9862ddd6155a2d6114cdefb" translate="yes" xml:space="preserve">
          <source>You should never forcibly kill a thread without cooperating with it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;협력하지 않고 스레드를 강제로 종료해서는 안됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0c86a2475abe5a68071a33a6ebdc653e781595a1" translate="yes" xml:space="preserve">
          <source>feature is not likely to be implementation-agnostic, it may be kept</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기능은 구현에 구애받지 않을 가능성이 높습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="50599d91b1d45822f8b67127b1242b698375527b" translate="yes" xml:space="preserve">
          <source>the thread has created several other threads that must be killed as well.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드가 종료해야하는 몇 가지 다른 스레드를 작성했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7779d4406ada96130c9c6c83e03357cabafb7a9f" translate="yes" xml:space="preserve">
          <source>the thread is holding a critical resource that must be closed properly</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드가 올바르게 닫아야하는 중요한 자원을 보유하고 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="51dd05c04a11fcb88c8356f9f6d5b755bfbc45db" translate="yes" xml:space="preserve">
          <source>unexposed.</source>
          <target state="translated">unexposed.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
