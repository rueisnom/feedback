<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/510348">
    <body>
      <group id="510348">
        <trans-unit id="566e492b1bd794dec2a063dd48ef2215def74380" translate="yes" xml:space="preserve">
          <source>&quot;hooray!&quot; is printed 3 seconds after I hit</source>
          <target state="translated">&quot;후 레이!&quot; 맞은 후 3 초 후에 인쇄됩니다</target>
        </trans-unit>
        <trans-unit id="0d9839c228bca5ef110f7eb7311afbfb1999c13e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pygame.time.wait()&lt;/code&gt; example (not recommended if you are not using the &lt;a href=&quot;http://en.wikipedia.org/wiki/Pygame&quot;&gt;Pygame&lt;/a&gt; window, but you could exit the window instantly):</source>
          <target state="translated">&lt;code&gt;pygame.time.wait()&lt;/code&gt; 예제 ( &lt;a href=&quot;http://en.wikipedia.org/wiki/Pygame&quot;&gt;Pygame&lt;/a&gt; 창을 사용하지 않지만 창을 즉시 종료 할 수있는 경우 권장되지 않음) :</target>
        </trans-unit>
        <trans-unit id="d1f725a67ab0aedfa644c528bfcf79299fbec6f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;time.sleep()&lt;/code&gt; example (do not use if using &lt;a href=&quot;http://en.wikipedia.org/wiki/Tkinter&quot;&gt;Tkinter&lt;/a&gt;):</source>
          <target state="translated">&lt;code&gt;time.sleep()&lt;/code&gt; 예제 ( &lt;a href=&quot;http://en.wikipedia.org/wiki/Tkinter&quot;&gt;Tkinter를&lt;/a&gt; 사용하는 경우 사용하지 마십시오) :</target>
        </trans-unit>
        <trans-unit id="5fc7747dc7ae1bc6dfad960a3c062d6684b0f190" translate="yes" xml:space="preserve">
          <source>A bit of fun with a sleepy &lt;a href=&quot;https://wiki.python.org/moin/Generators&quot;&gt;generator&lt;/a&gt;.</source>
          <target state="translated">졸린 &lt;a href=&quot;https://wiki.python.org/moin/Generators&quot;&gt;발전기&lt;/a&gt; 와 약간의 재미.</target>
        </trans-unit>
        <trans-unit id="b2f204c4fc80a097c451277a372e406f02971473" translate="yes" xml:space="preserve">
          <source>After starting the timer you can also stop it by doing &lt;code&gt;timer_obj.cancel()&lt;/code&gt;.</source>
          <target state="translated">타이머를 시작한 후 &lt;code&gt;timer_obj.cancel()&lt;/code&gt; 을 수행하여 타이머를 중지 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="615922c9bddfdc9ca3008c4a9b6d914a24c74963" translate="yes" xml:space="preserve">
          <source>Again, &lt;code&gt;sleep&lt;/code&gt; suspends your thread - it uses next to zero processing power.</source>
          <target state="translated">다시 말하지만, &lt;code&gt;sleep&lt;/code&gt; 은 스레드를 일시 중단합니다-처리 능력을 0으로 유지합니다.</target>
        </trans-unit>
        <trans-unit id="9ea26de5566952ec524cedbb60ee90bf6c1be0e2" translate="yes" xml:space="preserve">
          <source>An example</source>
          <target state="translated">예</target>
        </trans-unit>
        <trans-unit id="5feda5d205d914a145cc74a890af48e47a8632c1" translate="yes" xml:space="preserve">
          <source>And running it we might see:</source>
          <target state="translated">그리고 우리는 그것을 볼 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="a3828993c920f8c4bdaeb997ffe88c74beb223aa" translate="yes" xml:space="preserve">
          <source>And running it we see:</source>
          <target state="translated">그리고 우리는 그것을 본다 :</target>
        </trans-unit>
        <trans-unit id="6b56bd871f30bfe0f8091287ef7c36b763921784" translate="yes" xml:space="preserve">
          <source>Another, in &lt;a href=&quot;http://en.wikipedia.org/wiki/Tkinter&quot;&gt;Tkinter&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Tkinter&quot;&gt;Tkinter&lt;/a&gt; 에서 다른 하나 :</target>
        </trans-unit>
        <trans-unit id="a7f3177fd3a57d73c651b31d3131677cbeeec3f7" translate="yes" xml:space="preserve">
          <source>As we see, this buzzer is not too rigid and allow us to catch up with regular sleepy intervals even if we oversleep and get out of regular schedule.</source>
          <target state="translated">보시다시피,이 버저는 너무 단단하지 않으며 우리가 잠들거나 규칙적인 일정을 벗어나더라도 규칙적인 졸린 간격을 따라 잡을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2016bfd501df0c485d1243266bdf516f864be1e0" translate="yes" xml:space="preserve">
          <source>Buzzer generator</source>
          <target state="translated">버저 발생기</target>
        </trans-unit>
        <trans-unit id="411debdb78cee6e6e087d81439adeb0502a64044" translate="yes" xml:space="preserve">
          <source>Delay measured since last time (waking up regularly)</source>
          <target state="translated">마지막 시간 이후 측정 된 지연 (정기적으로 깨어남)</target>
        </trans-unit>
        <trans-unit id="7931adbb224cfbe0c0b2b9aa8f8764900c2bcfa4" translate="yes" xml:space="preserve">
          <source>Delays are done with the &lt;a href=&quot;https://docs.python.org/2/library/time.html&quot;&gt;time library&lt;/a&gt;, specifically the &lt;a href=&quot;https://docs.python.org/2/library/time.html#time.sleep&quot;&gt;&lt;code&gt;time.sleep()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">지연은 &lt;a href=&quot;https://docs.python.org/2/library/time.html&quot;&gt;시간 라이브러리&lt;/a&gt; , 특히 &lt;a href=&quot;https://docs.python.org/2/library/time.html#time.sleep&quot;&gt; &lt;code&gt;time.sleep()&lt;/code&gt; &lt;/a&gt; 함수로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="cf866c42bd425e0291fd97643dcfa6f4ef378074" translate="yes" xml:space="preserve">
          <source>Delays can be also implemented by using the following methods.</source>
          <target state="translated">다음 방법을 사용하여 지연을 구현할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e625f3dfd66c265e290de0f848e03b40adf1fdc5" translate="yes" xml:space="preserve">
          <source>Doing &lt;a href=&quot;https://docs.python.org/2/tutorial/modules.html#more-on-modules&quot;&gt;&lt;code&gt;from [library] import [function] (, [function2])&lt;/code&gt;&lt;/a&gt; is great if you just want certain parts of a module.</source>
          <target state="translated">모듈의 특정 부분 만 원한다면 &lt;a href=&quot;https://docs.python.org/2/tutorial/modules.html#more-on-modules&quot;&gt; &lt;code&gt;from [library] import [function] (, [function2])&lt;/code&gt; &lt;/a&gt; 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="2b9eceb7a86a9f577ef80586c5c1d7fde9ff493d" translate="yes" xml:space="preserve">
          <source>Enter</source>
          <target state="translated">Enter</target>
        </trans-unit>
        <trans-unit id="0d30d489b4e2d58fb26c4d464fbf024b9584317d" translate="yes" xml:space="preserve">
          <source>Example output from this script:</source>
          <target state="translated">이 스크립트의 출력 예 :</target>
        </trans-unit>
        <trans-unit id="56a9bd508a83fe0c50056a7a20bbc0b88671c50e" translate="yes" xml:space="preserve">
          <source>Example using &lt;code&gt;sleep&lt;/code&gt; with multiple threads and processes</source>
          <target state="translated">여러 스레드 및 프로세스와 함께 &lt;code&gt;sleep&lt;/code&gt; 를 사용하는 예</target>
        </trans-unit>
        <trans-unit id="9ed28a68bf9c1df4d3150948f5b7530982ce1c8d" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;code&gt;driver.implicitly_wait()&lt;/code&gt; method (&lt;a href=&quot;http://en.wikipedia.org/wiki/Selenium_%28software%29&quot;&gt;Selenium&lt;/a&gt;):</source>
          <target state="translated">마지막으로 &lt;code&gt;driver.implicitly_wait()&lt;/code&gt; 메소드 ( &lt;a href=&quot;http://en.wikipedia.org/wiki/Selenium_%28software%29&quot;&gt;Selenium&lt;/a&gt; ) :</target>
        </trans-unit>
        <trans-unit id="bc6fe2650127b9a97cdd42ac94382cd11c83fa0f" translate="yes" xml:space="preserve">
          <source>Here is another example where something is run approximately once a minute:</source>
          <target state="translated">약 1 분에 한 번 실행되는 또 다른 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9349218684690fa30d89e51ad6160c4b78263f4c" translate="yes" xml:space="preserve">
          <source>How can I make a time delay in Python</source>
          <target state="translated">파이썬에서 시간 지연을 어떻게 만들 수 있습니까</target>
        </trans-unit>
        <trans-unit id="6ef158461ff6b4d09a5e40fb28ba93e7f4323f5e" translate="yes" xml:space="preserve">
          <source>How can I make a time delay in Python?</source>
          <target state="translated">파이썬에서 어떻게 시간 지연을 만들 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="010c7ad22a098468e1b16068db1c96342b4ab13a" translate="yes" xml:space="preserve">
          <source>However, if you want to delay the execution of a function do this:</source>
          <target state="translated">그러나 함수 실행을 지연하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="2efca24b93aec85b6408e99ef35559acd8437df7" translate="yes" xml:space="preserve">
          <source>I would like to know how to put a time delay in a Python script.</source>
          <target state="translated">파이썬 스크립트에 시간 지연을 두는 방법을 알고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="1c714f1af81713cbc8fe5ee70c39881f8f73d3e3" translate="yes" xml:space="preserve">
          <source>If you use Tkinter, &lt;strong&gt;&lt;em&gt;do not use &lt;code&gt;time.sleep()&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;, because it will muck up your program. This happened to me. Instead, use &lt;code&gt;root.after()&lt;/code&gt; and replace the values for however many seconds, with a milliseconds. For example, &lt;code&gt;time.sleep(1)&lt;/code&gt; is equivalent to &lt;code&gt;root.after(1000)&lt;/code&gt; in Tkinter.</source>
          <target state="translated">Tkinter를 사용하는 경우 &lt;strong&gt;&lt;em&gt; &lt;code&gt;time.sleep()&lt;/code&gt; 사용하지 마십시오&lt;/em&gt;&lt;/strong&gt; . 프로그램이 중단되기 때문입니다. 이것은 나에게 일어났다. 대신 &lt;code&gt;root.after()&lt;/code&gt; 하고 몇 초 동안 값을 밀리 초로 바꾸십시오. 예를 들어, &lt;code&gt;time.sleep(1)&lt;/code&gt; 은 Tkinter의 &lt;code&gt;root.after(1000)&lt;/code&gt; 와 같습니다.</target>
        </trans-unit>
        <trans-unit id="3191987b5a1dafb2fb8774c772a229d30bc7fa93" translate="yes" xml:space="preserve">
          <source>If you would like to put a time delay in a Python script:</source>
          <target state="translated">Python 스크립트에서 시간 지연을 설정하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="3272590a207b5529ef220e91c9e8deb41c70f284" translate="yes" xml:space="preserve">
          <source>In a single thread I suggest the &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.sleep&quot;&gt;sleep function&lt;/a&gt;:</source>
          <target state="translated">단일 스레드에서 &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.sleep&quot;&gt;수면 기능을&lt;/a&gt; 제안합니다.</target>
        </trans-unit>
        <trans-unit id="6ecf47738150f09f675e67ee38cd445615f970e4" translate="yes" xml:space="preserve">
          <source>Invoking regular buzzergen</source>
          <target state="translated">정기 버저 겐 호출</target>
        </trans-unit>
        <trans-unit id="d928a0e8f52ebc771a3ec85278281de7921a361b" translate="yes" xml:space="preserve">
          <source>It does &lt;strong&gt;not&lt;/strong&gt; stop execution of the whole script (except for the function you pass it).</source>
          <target state="translated">전달하는 함수를 제외하고 전체 스크립트의 실행을 중지하지 &lt;strong&gt;않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b76f44367e4f988823d3600d2707b660625f407d" translate="yes" xml:space="preserve">
          <source>It is recommended to read &lt;a href=&quot;https://docs.python.org/3/library/asyncio.html&quot;&gt;asyncio official documentation&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://docs.python.org/3/library/asyncio.html&quot;&gt;asyncio 공식 문서&lt;/a&gt; 를 읽는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="8a86acdcb9f782d0a3ed3f193ab37879a5d757d7" translate="yes" xml:space="preserve">
          <source>Multithreading</source>
          <target state="translated">Multithreading</target>
        </trans-unit>
        <trans-unit id="a5725b4ff118d35ba4d2b96ba356dd30ebfa9f2d" translate="yes" xml:space="preserve">
          <source>Notice in recent Python versions (Python&amp;nbsp;3.4 or higher) you can use &lt;code&gt;asyncio.sleep&lt;/code&gt;. It's related to asynchronous programming and asyncio. Check out next example:</source>
          <target state="translated">최신 Python 버전 (Python 3.4 이상)에서는 &lt;code&gt;asyncio.sleep&lt;/code&gt; 을 사용할 수 있습니다. 비동기 프로그래밍 및 asyncio와 관련이 있습니다. 다음 예를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="21d8e2fb6dc2d2ae6a8193be8ee78380d7f7cd2d" translate="yes" xml:space="preserve">
          <source>Now the shell will not crash or not react.</source>
          <target state="translated">이제 쉘이 충돌하지 않거나 반응하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="47661067d0bb201448600056ba79c730b46bf55e" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;time.sleep()&lt;/code&gt;, which many answers have pointed out, which is the way to go.</source>
          <target state="translated">그렇지 않으면, 많은 답변이 지적한 &lt;code&gt;time.sleep()&lt;/code&gt; 이 방법입니다.</target>
        </trans-unit>
        <trans-unit id="6ee76fa98a639a0ac269010b7032639b0a171647" translate="yes" xml:space="preserve">
          <source>Outputs:</source>
          <target state="translated">Outputs:</target>
        </trans-unit>
        <trans-unit id="dddd4b0332f3ee0b46fad826e1b107d8e90b0190" translate="yes" xml:space="preserve">
          <source>Rather than having to type out</source>
          <target state="translated">타이핑하지 않고</target>
        </trans-unit>
        <trans-unit id="5f21429317bfa35bf5d95f836b0c87122d45f3ae" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://en.wikipedia.org/wiki/Tkinter&quot;&gt;Tkinter&lt;/a&gt; library in the Python standard library is an interactive tool which you can import. Basically, you can create buttons and boxes and popups and stuff that appear as windows which you manipulate with code.</source>
          <target state="translated">Python 표준 라이브러리의 &lt;a href=&quot;http://en.wikipedia.org/wiki/Tkinter&quot;&gt;Tkinter&lt;/a&gt; 라이브러리는 가져올 수있는 대화식 도구입니다. 기본적으로 코드로 조작하는 창으로 나타나는 버튼과 상자, 팝업 및 항목을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b12616c6907d010defcd3b82df4a9e419c2793ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.after()&lt;/code&gt; method (best with Tkinter):</source>
          <target state="translated">&lt;code&gt;.after()&lt;/code&gt; 메소드 (Tkinter에 가장 적합) :</target>
        </trans-unit>
        <trans-unit id="1a5741b227a8b2f636ae72b12b81e6a2dcd47301" translate="yes" xml:space="preserve">
          <source>The blank line illustrates that the function printed to my standard output, and I had to hit</source>
          <target state="translated">빈 줄은 함수가 표준 출력으로 인쇄되었음을 나타내며</target>
        </trans-unit>
        <trans-unit id="8e1249068a2d6ae5c9d1c909d94784cf04ebcfa5" translate="yes" xml:space="preserve">
          <source>The first method:</source>
          <target state="translated">첫 번째 방법 :</target>
        </trans-unit>
        <trans-unit id="56655af0fd50a725a072a1767ade7068ea03d24f" translate="yes" xml:space="preserve">
          <source>The following code (&lt;strong&gt;sleepy.py&lt;/strong&gt;) defines a &lt;code&gt;buzzergen&lt;/code&gt; generator:</source>
          <target state="translated">다음 코드 ( &lt;strong&gt;sleepy.py&lt;/strong&gt; )는 &lt;code&gt;buzzergen&lt;/code&gt; 생성기를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="a9b3859fc0b5da273d0cb725a4e6903de0a012f4" translate="yes" xml:space="preserve">
          <source>The question is about time delay. It can be fixed time, but in some cases we might need a delay measured since last time. Here is one possible solution:</source>
          <target state="translated">문제는 시간 지연에 관한 것입니다. 고정 시간이 될 수 있지만 경우에 따라 마지막 시간 이후 측정 된 지연이 필요할 수 있습니다. 가능한 해결책은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="09cf6ba31a19a8544a7078dfc7cbc87df1f0d3f5" translate="yes" xml:space="preserve">
          <source>The second method to delay would be using the implicit wait method:</source>
          <target state="translated">지연시키는 두 번째 방법은 암시 적 대기 방법을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ad95615af4809a9f28fd1400b09cecc5ef14e4c3" translate="yes" xml:space="preserve">
          <source>The situation can be, we want to do something as regularly as possible and we do not want to bother with all the &lt;code&gt;last_time&lt;/code&gt;, &lt;code&gt;next_time&lt;/code&gt; stuff all around our code.</source>
          <target state="translated">상황은 가능한 한 정기적으로 무언가를하고 싶을 수 있으며 코드 주위의 모든 &lt;code&gt;last_time&lt;/code&gt; , &lt;code&gt;next_time&lt;/code&gt; 것들을 귀찮게하고 싶지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b6d84c409903d2ec4da1938a47cc600a836c310a" translate="yes" xml:space="preserve">
          <source>The third method is more useful when you have to wait until a particular action is completed or until an element is found:</source>
          <target state="translated">세 번째 방법은 특정 작업이 완료 될 때까지 또는 요소를 찾을 때까지 기다려야 할 때 더 유용합니다.</target>
        </trans-unit>
        <trans-unit id="3d3a367f185472ef2e8c8298b3c166d5c5ed3a75" translate="yes" xml:space="preserve">
          <source>The upside of this method is that while the &lt;code&gt;Timer&lt;/code&gt; thread was waiting, I was able to do other things, in this case, hitting</source>
          <target state="translated">이 방법의 단점은 &lt;code&gt;Timer&lt;/code&gt; 스레드가 대기하는 동안 다른 경우에는이 작업을 수행 할 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="beb26c167c5de46f70cc2fc5f9553ca6c6477b28" translate="yes" xml:space="preserve">
          <source>There are five methods which I know: &lt;code&gt;time.sleep()&lt;/code&gt;, &lt;code&gt;pygame.time.wait()&lt;/code&gt;, matplotlib's &lt;code&gt;pyplot.pause()&lt;/code&gt;, &lt;code&gt;.after()&lt;/code&gt;, and &lt;code&gt;driver.implicitly_wait()&lt;/code&gt;.</source>
          <target state="translated">내가 아는 다섯 가지 방법이 있습니다 : &lt;code&gt;time.sleep()&lt;/code&gt; , &lt;code&gt;pygame.time.wait()&lt;/code&gt; , matplotlib의 &lt;code&gt;pyplot.pause()&lt;/code&gt; 및 &lt;code&gt;driver.implicitly_wait()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ca911a37989616cdfd14bc5d7083e9015f2c4c1" translate="yes" xml:space="preserve">
          <source>There isn't a respective object in the &lt;a href=&quot;https://docs.python.org/3/library/multiprocessing.html&quot;&gt;multiprocessing library&lt;/a&gt;. You can create one, but it probably doesn't exist for a reason. A sub-thread makes a lot more sense for a simple timer than a whole new subprocess.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/multiprocessing.html&quot;&gt;멀티 프로세싱 라이브러리&lt;/a&gt; 에는 개별 객체가 없습니다. 하나 만들 수는 있지만 이유가 존재하지 않을 수도 있습니다. 서브 스레드는 완전히 새로운 서브 프로세스보다 간단한 타이머에 더 적합합니다.</target>
        </trans-unit>
        <trans-unit id="544902afafe606f82d482784d32fb4e6bec74483" translate="yes" xml:space="preserve">
          <source>This function actually suspends the processing of the thread in which it is called by the operating system, allowing other threads and processes to execute while it sleeps.</source>
          <target state="translated">이 함수는 실제로 운영 체제가 호출 한 스레드의 처리를 일시 중단하여 휴면 상태에서 다른 스레드와 프로세스를 실행할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="4d79e067fd2982d3e0c7bc5c71c7df90b4a8e10b" translate="yes" xml:space="preserve">
          <source>This is an easy example of a time delay:</source>
          <target state="translated">이것은 시간 지연의 쉬운 예입니다.</target>
        </trans-unit>
        <trans-unit id="ca03fdfd13e88049c9e6e57bacb28283de64dd4b" translate="yes" xml:space="preserve">
          <source>This works because by doing:</source>
          <target state="translated">이것은 다음을 수행함으로써 작동합니다.</target>
        </trans-unit>
        <trans-unit id="13cce817c5c8f37c6c2b0a06062efd86dca8d136" translate="yes" xml:space="preserve">
          <source>This works on any library.</source>
          <target state="translated">이것은 모든 라이브러리에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="56aa7e3bda8be972ce8cbfab9c3096c5e066956e" translate="yes" xml:space="preserve">
          <source>This would save you an &lt;code&gt;import&lt;/code&gt; if you already have &lt;code&gt;matplotlib&lt;/code&gt; imported.</source>
          <target state="translated">이미 &lt;code&gt;matplotlib&lt;/code&gt; 를 가져온 경우 &lt;code&gt;import&lt;/code&gt; 저장합니다.</target>
        </trans-unit>
        <trans-unit id="382afd30572c76fc0904bd1188fff3b66609657f" translate="yes" xml:space="preserve">
          <source>To demonstrate, create a script like this (I first attempted this in an interactive Python 3.5 shell, but sub-processes can't find the &lt;code&gt;party_later&lt;/code&gt; function for some reason):</source>
          <target state="translated">시연하기 위해 다음과 같은 스크립트를 작성하십시오 (먼저 대화식 Python 3.5 쉘에서 시도했지만 서브 프로세스는 어떤 이유로 &lt;code&gt;party_later&lt;/code&gt; 함수를 찾을 수 없음).</target>
        </trans-unit>
        <trans-unit id="638cd899a4d6b4ad3c74d908a63c1b2df44972f0" translate="yes" xml:space="preserve">
          <source>To just make it wait for a second:</source>
          <target state="translated">잠시 기다리게하려면 :</target>
        </trans-unit>
        <trans-unit id="280d2f44142a6d5c43332ff9ec79feba90c8d507" translate="yes" xml:space="preserve">
          <source>Typically this is used to prevent the plot from disappearing as soon as it is plotted or to make crude animations.</source>
          <target state="translated">일반적으로 플롯이 플롯되는 즉시 플롯이 사라지는 것을 방지하거나 조잡한 애니메이션을 만드는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7ad2484a75160ab75806ea330eeeb01986cfdeaa" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://docs.python.org/2.7/library/threading.html?highlight=timer#threading.Timer&quot;&gt;&lt;strong&gt;&lt;code&gt;threading.Timer&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; like this:</source>
          <target state="translated">다음과 같이 &lt;a href=&quot;https://docs.python.org/2.7/library/threading.html?highlight=timer#threading.Timer&quot;&gt;&lt;strong&gt; &lt;code&gt;threading.Timer&lt;/code&gt; 를&lt;/strong&gt;&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e007b7f4b3ea3a30a7f30d721046c05c8356eb72" translate="yes" xml:space="preserve">
          <source>Use &lt;strong&gt;&lt;code&gt;time.sleep&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;Event().wait&lt;/code&gt;&lt;/strong&gt; like this:</source>
          <target state="translated">다음과 같이 &lt;strong&gt; &lt;code&gt;time.sleep&lt;/code&gt; &lt;/strong&gt; 또는 &lt;strong&gt; &lt;code&gt;Event().wait&lt;/code&gt; &lt;/strong&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f7d8207163bc3d4fe8166336b5b19ee3e15f45bd" translate="yes" xml:space="preserve">
          <source>Use it for that purpose, or simply to delay a function from executing. For example:</source>
          <target state="translated">이를 위해 또는 단순히 함수 실행을 지연시키기 위해 사용하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fcdbe0d68350d6ca3449f34069d2c2792c589d24" translate="yes" xml:space="preserve">
          <source>We can also use it directly in a loop:</source>
          <target state="translated">루프에서 직접 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="75945ab7086c08f5e9c03ce246f7219a7a1635b1" translate="yes" xml:space="preserve">
          <source>We may think it will &quot;sleep&quot; for 2 seconds for first method and then 3 seconds in the second method, a total of 5 seconds running time of this code. But it will print:</source>
          <target state="translated">첫 번째 방법에서는 2 초 동안, 두 번째 방법에서는 3 초, &quot;이 코드의 실행 시간은 총 5 초&quot;입니다. 그러나 다음과 같이 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="218a5effffa68320d4e8009412574b3a180d9177" translate="yes" xml:space="preserve">
          <source>Which is awkwardly long to type.</source>
          <target state="translated">입력하기가 너무 길다.</target>
        </trans-unit>
        <trans-unit id="99c17ffae30cb54018e04772d65dfaec1c0310e7" translate="yes" xml:space="preserve">
          <source>While everyone else has suggested the de facto &lt;code&gt;time&lt;/code&gt; module, I thought I'd share a different method using &lt;code&gt;matplotlib&lt;/code&gt;'s &lt;code&gt;pyplot&lt;/code&gt; function, &lt;a href=&quot;https://matplotlib.org/api/_as_gen/matplotlib.pyplot.pause.html&quot;&gt;&lt;code&gt;pause&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다른 사람들이 사실상 &lt;code&gt;time&lt;/code&gt; 모듈을 제안했지만 &lt;code&gt;matplotlib&lt;/code&gt; 의 &lt;code&gt;pyplot&lt;/code&gt; 함수, &lt;a href=&quot;https://matplotlib.org/api/_as_gen/matplotlib.pyplot.pause.html&quot;&gt; &lt;code&gt;pause&lt;/code&gt; 를&lt;/a&gt; 사용하여 다른 방법을 공유한다고 생각했습니다.</target>
        </trans-unit>
        <trans-unit id="3a19765fc7706c4836475d68f37b774c2d0536f8" translate="yes" xml:space="preserve">
          <source>Why use the later approach?</source>
          <target state="translated">왜 나중의 접근법을 사용합니까?</target>
        </trans-unit>
        <trans-unit id="03ab58f65a69b0c22ceafc7fa002acd8c8d8833d" translate="yes" xml:space="preserve">
          <source>With this method, you wouldn't get access to the other features of the &lt;a href=&quot;https://docs.python.org/2/library/time.html&quot;&gt;time library&lt;/a&gt; and you can't have a variable called &lt;code&gt;sleep&lt;/code&gt;. But you could create a variable called &lt;code&gt;time&lt;/code&gt;.</source>
          <target state="translated">이 방법을 사용하면 &lt;a href=&quot;https://docs.python.org/2/library/time.html&quot;&gt;시간 라이브러리&lt;/a&gt; 의 다른 기능에 액세스 할 수 없으며 &lt;code&gt;sleep&lt;/code&gt; 이라는 변수를 가질 수 없습니다. 그러나 &lt;code&gt;time&lt;/code&gt; 이라는 변수를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a3a4ad86d5a030b538ca381ad9c0e99f0f36782" translate="yes" xml:space="preserve">
          <source>You also can try this:</source>
          <target state="translated">당신은 또한 이것을 시도 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="f5e8c92fc3970623a21d507b4896a02a3b966061" translate="yes" xml:space="preserve">
          <source>You can trigger a function to be called at a later time in a separate thread with the &lt;code&gt;Timer&lt;/code&gt;&lt;a href=&quot;https://docs.python.org/3/library/threading.html&quot;&gt;threading&lt;/a&gt; object:</source>
          <target state="translated">&lt;code&gt;Timer&lt;/code&gt; &lt;a href=&quot;https://docs.python.org/3/library/threading.html&quot;&gt;스레딩&lt;/a&gt; 객체를 사용하여 나중에 별도의 스레드에서 함수가 호출되도록 트리거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f93153801181b6a70f73bebd9d5993e722102061" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;https://docs.python.org/library/time.html#time.sleep&quot;&gt;&lt;code&gt;sleep()&lt;/code&gt; function in the &lt;code&gt;time&lt;/code&gt; module&lt;/a&gt;. It can take a float argument for sub-second resolution.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/library/time.html#time.sleep&quot;&gt; &lt;code&gt;time&lt;/code&gt; 모듈에서 &lt;code&gt;sleep()&lt;/code&gt; 함수를&lt;/a&gt; 사용할 수 있습니다. 1 초 미만의 해상도에 대해서는 float 인수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4383d212f5953ff96f5826a13ac1ce4e08aed49d" translate="yes" xml:space="preserve">
          <source>You could equally do it as:</source>
          <target state="translated">다음과 같이 똑같이 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e914c626f38160956c6bd9c140804d93ee7f56ee" translate="yes" xml:space="preserve">
          <source>You extract the &lt;a href=&quot;https://docs.python.org/2/library/time.html#time.sleep&quot;&gt;sleep function&lt;/a&gt;&lt;strong&gt;only&lt;/strong&gt; from the &lt;a href=&quot;https://docs.python.org/2/library/time.html&quot;&gt;time library&lt;/a&gt;, which means you can just call it with:</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/2/library/time.html&quot;&gt;시간 라이브러리&lt;/a&gt; &lt;strong&gt;에서만&lt;/strong&gt; &lt;a href=&quot;https://docs.python.org/2/library/time.html#time.sleep&quot;&gt;절전 기능을&lt;/a&gt; 추출하므로 다음과 같이 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6cba0e1d6890bff82404dff03cd1f422d6e67a5c" translate="yes" xml:space="preserve">
          <source>and you would have access to the other features of the &lt;a href=&quot;https://docs.python.org/2/library/time.html&quot;&gt;time library&lt;/a&gt; like &lt;a href=&quot;https://docs.python.org/2/library/time.html#time.clock&quot;&gt;&lt;code&gt;time.clock()&lt;/code&gt;&lt;/a&gt; as long as you type &lt;code&gt;time.[function]()&lt;/code&gt;, but you couldn't create the variable time because it would overwrite the import. A solution to this to do</source>
          <target state="translated">&lt;code&gt;time.[function]()&lt;/code&gt; 을 입력하는 한 &lt;a href=&quot;https://docs.python.org/2/library/time.html#time.clock&quot;&gt; &lt;code&gt;time.clock()&lt;/code&gt; &lt;/a&gt; 과 같은 &lt;a href=&quot;https://docs.python.org/2/library/time.html&quot;&gt;시간 라이브러리&lt;/a&gt; 의 다른 기능에 액세스 할 수 있지만 가져 오기를 덮어 쓰므로 가변 시간을 만들 수 없습니다. 이를위한 솔루션</target>
        </trans-unit>
        <trans-unit id="72001f706e27aca51397df153b349ce165c37eb1" translate="yes" xml:space="preserve">
          <source>asyncio.sleep</source>
          <target state="translated">asyncio.sleep</target>
        </trans-unit>
        <trans-unit id="6ef48a43c487856e9b097f9c198fbbabc06fb848" translate="yes" xml:space="preserve">
          <source>matplotlib's function &lt;code&gt;pyplot.pause()&lt;/code&gt; example (not recommended if you are not using the graph, but you could exit the graph instantly):</source>
          <target state="translated">matplotlib의 함수 &lt;code&gt;pyplot.pause()&lt;/code&gt; 예제 (그래프를 사용하지 않는 경우 권장되지 않지만 그래프를 즉시 종료 할 수 있음) :</target>
        </trans-unit>
        <trans-unit id="3ab669871abe8637f13ef4703686e62caba9dd00" translate="yes" xml:space="preserve">
          <source>one time - before the function executed (see the first empty prompt).</source>
          <target state="translated">한 번-함수가 실행되기 전에 (첫 번째 빈 프롬프트 참조)</target>
        </trans-unit>
        <trans-unit id="018175ff66842e901e103384585533b3779c8cab" translate="yes" xml:space="preserve">
          <source>to ensure I was on a prompt.</source>
          <target state="translated">내가 프롬프트에 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="bb8fcd5d540065a62affd4dff8028511f0daf543" translate="yes" xml:space="preserve">
          <source>which would allow you to reference the &lt;a href=&quot;https://docs.python.org/2/library/time.html&quot;&gt;time library&lt;/a&gt; as &lt;code&gt;t&lt;/code&gt;, allowing you to do:</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/2/library/time.html&quot;&gt;시간 라이브러리&lt;/a&gt; 를 &lt;code&gt;t&lt;/code&gt; 로 참조하면 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
