<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/16956810">
    <body>
      <group id="16956810">
        <trans-unit id="39ce4b18754b9ff3ba389c8b5828c8bbf87a1121" translate="yes" xml:space="preserve">
          <source>1.Use &lt;code&gt;find&lt;/code&gt; to search files,</source>
          <target state="translated">1.使用 &lt;code&gt;find&lt;/code&gt; 来搜索文件，</target>
        </trans-unit>
        <trans-unit id="0f7a36e13f60767cb72e73fdf741b894ba8fa5e7" translate="yes" xml:space="preserve">
          <source>2.Then execute &lt;code&gt;grep&lt;/code&gt; on all of them.</source>
          <target state="translated">2.然后对所有这些执行 &lt;code&gt;grep&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4213f684c21bf84b7da209f71f2ce784b0a999a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Grep&quot;&gt;grep&lt;/a&gt; is your good friend to achieve this.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Grep&quot;&gt;grep&lt;/a&gt;是您实现此目标的好朋友。</target>
        </trans-unit>
        <trans-unit id="1809408fc55c573a10aefd4aceb815e71ca0e0f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/grep&quot;&gt;&lt;code&gt;grep&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://www.gnu.org/software/grep/&quot;&gt;GNU&lt;/a&gt; or &lt;a href=&quot;https://wiki.freebsd.org/BSDgrep&quot;&gt;BSD&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/grep&quot;&gt; &lt;code&gt;grep&lt;/code&gt; &lt;/a&gt; （ &lt;a href=&quot;https://www.gnu.org/software/grep/&quot;&gt;GNU&lt;/a&gt;或&lt;a href=&quot;https://wiki.freebsd.org/BSDgrep&quot;&gt;BSD&lt;/a&gt; ）</target>
        </trans-unit>
        <trans-unit id="05b61ed028049109c9fb2ea570351391b81ee83f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--color=auto&lt;/code&gt; - Mark up the matching text.</source>
          <target state="translated">&lt;code&gt;--color=auto&lt;/code&gt; -标记匹配的文本。</target>
        </trans-unit>
        <trans-unit id="06ca5410d838d4a9921b1907d7c2b4d35a8a9404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-C&lt;/code&gt;/&lt;code&gt;--context&lt;/code&gt; (e.g. &lt;code&gt;-C5&lt;/code&gt;) - Increases context, so you see the surrounding code .</source>
          <target state="translated">&lt;code&gt;-C&lt;/code&gt; / &lt;code&gt;--context&lt;/code&gt; （例如-C5 ）-增加上下文，因此您可以看到周围的代码。</target>
        </trans-unit>
        <trans-unit id="cbf1ba3d64cd70c8bd4ad6257861424e93146c74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-H&lt;/code&gt; - Displays filename where the text is found.</source>
          <target state="translated">&lt;code&gt;-H&lt;/code&gt; -显示找到文本的文件名。</target>
        </trans-unit>
        <trans-unit id="c4e85b347e0bd50005ad3efb176aed602679810d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-I&lt;/code&gt; - Ignore the binary files.</source>
          <target state="translated">&lt;code&gt;-I&lt;/code&gt; -忽略二进制文件。</target>
        </trans-unit>
        <trans-unit id="aa2e2466b6123d3c39d0973b7f56463e65ee80c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c&lt;/code&gt; - Displays count of matching lines. Can be combined with &lt;code&gt;-H&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-c&lt;/code&gt; -显示匹配行数。 可以与 &lt;code&gt;-H&lt;/code&gt; 结合使用。</target>
        </trans-unit>
        <trans-unit id="5192a5eaf782d6a7297ffc0b1a77ff6126fc1bdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-h&lt;/code&gt; - only output the line which matched (not the filename)</source>
          <target state="translated">&lt;code&gt;-h&lt;/code&gt; -仅输出匹配的行（不输出文件名）</target>
        </trans-unit>
        <trans-unit id="fd344020aeea0ad9a0569735bec74223f1085758" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt; - Insensitive searching.</source>
          <target state="translated">&lt;code&gt;-i&lt;/code&gt; -不敏感的搜索。</target>
        </trans-unit>
        <trans-unit id="c68b9c5c52fe9c4ac2976a35dd8902532e731f30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt; - case insensitive search</source>
          <target state="translated">&lt;code&gt;-i&lt;/code&gt; -不区分大小写的搜索</target>
        </trans-unit>
        <trans-unit id="0fb18ed8c7b62a1b0adee94b9745f3f32823e63b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt; (lower-case L) can be added to just give the file name of matching files.</source>
          <target state="translated">可以添加 &lt;code&gt;-l&lt;/code&gt; （小写L）以仅给出匹配文件的文件名。</target>
        </trans-unit>
        <trans-unit id="cc7cb4ca2fc498776dfeb34bd6a5418e3f5234e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt; - only output the filename where the match was found</source>
          <target state="translated">&lt;code&gt;-l&lt;/code&gt; -仅输出找到匹配项的文件名</target>
        </trans-unit>
        <trans-unit id="964ea5dc02c6d7caaeedb5d6635887e62d43e6d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt; - Show the line of your match.</source>
          <target state="translated">&lt;code&gt;-n&lt;/code&gt; -显示您的比赛路线。</target>
        </trans-unit>
        <trans-unit id="4746cd90897fb7b00d7f800720bf1449fae9272a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt; is line number, and</source>
          <target state="translated">&lt;code&gt;-n&lt;/code&gt; 是行号，并且</target>
        </trans-unit>
        <trans-unit id="bdc4a29dd9999fc869b6fd0565bfe8b261039c8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-name&lt;/code&gt; &quot;&lt;code&gt;*.*&lt;/code&gt;&quot; : for all files
( -name &quot;&lt;code&gt;*.pas&lt;/code&gt;&quot; -o -name &quot;&lt;code&gt;*.dfm&lt;/code&gt;&quot; ) : Only the &lt;code&gt;*.pas&lt;/code&gt; OR &lt;code&gt;*.dfm&lt;/code&gt; files, OR specified with &lt;code&gt;-o&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-name&lt;/code&gt; &amp;ldquo; &lt;code&gt;*.*&lt;/code&gt; &amp;rdquo;：对于所有文件（-name&amp;ldquo; &lt;code&gt;*.pas&lt;/code&gt; &amp;rdquo; -o -name&amp;ldquo; &lt;code&gt;*.dfm&lt;/code&gt; &amp;rdquo;）：仅 &lt;code&gt;*.pas&lt;/code&gt; 或 &lt;code&gt;*.dfm&lt;/code&gt; 文件，或用 &lt;code&gt;-o&lt;/code&gt; 指定</target>
        </trans-unit>
        <trans-unit id="03e901095542d41433e98c2d11811e8a8be847a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-print0&lt;/code&gt; and &lt;code&gt;--null&lt;/code&gt; on the other side of the &lt;code&gt;|&lt;/code&gt; (pipe) are the crucial ones, passing the filename from the &lt;code&gt;find&lt;/code&gt; to the &lt;code&gt;grep&lt;/code&gt; embedded in the &lt;code&gt;xargs&lt;/code&gt;, allowing for the passing of filenames WITH spaces in the filenames, allowing grep to treat the path and filename as one string, and not break it up on each space.</source>
          <target state="translated">&lt;code&gt;-print0&lt;/code&gt; 和 &lt;code&gt;--null&lt;/code&gt; 在 &lt;code&gt;|&lt;/code&gt; 的另一侧 （管道）是至关重要的，它会将文件名从 &lt;code&gt;find&lt;/code&gt; 传递到 &lt;code&gt;xargs&lt;/code&gt; 中嵌入的 &lt;code&gt;grep&lt;/code&gt; ，从而允许在文件名中传递带有空格的文件名，从而使grep将路径和文件名视为一个字符串，而不会破坏它在每个空间上。</target>
        </trans-unit>
        <trans-unit id="8f6311104ce27e75da24555f3181e1a9cf190289" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r&lt;/code&gt; or &lt;code&gt;-R&lt;/code&gt; is recursive,</source>
          <target state="translated">&lt;code&gt;-r&lt;/code&gt; 或 &lt;code&gt;-R&lt;/code&gt; 是递归的，</target>
        </trans-unit>
        <trans-unit id="b9f65f38c282d8e997ebfb361963d81d16056719" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-type f&lt;/code&gt; specifies that you are looking for files</source>
          <target state="translated">&lt;code&gt;-type f&lt;/code&gt; 指定您正在寻找文件</target>
        </trans-unit>
        <trans-unit id="363c094b035cfe0614bdab52fdb67cb9ca3e817a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-w&lt;/code&gt; - Search for the whole words (in opposite of partial word matching).</source>
          <target state="translated">&lt;code&gt;-w&lt;/code&gt; -搜索整个单词（与部分单词匹配相反）。</target>
        </trans-unit>
        <trans-unit id="3eadc82b6a5aabf7c908b5c4f5c409708037665d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-w&lt;/code&gt; stands for match the whole word.</source>
          <target state="translated">&lt;code&gt;-w&lt;/code&gt; 表示匹配整个单词。</target>
        </trans-unit>
        <trans-unit id="a7517c403edc2976007275f961c9708b98df272b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.&lt;/code&gt; in the &lt;code&gt;find&lt;/code&gt; specifies from the current directory.</source>
          <target state="translated">&lt;code&gt;.&lt;/code&gt; 在 &lt;code&gt;find&lt;/code&gt; 中从当前目录指定。</target>
        </trans-unit>
        <trans-unit id="632364c1940dc4390896105e753ddafd1a76791b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/&lt;/code&gt; stands for starting at the root of your machine.</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; 表示从计算机的根目录开始。</target>
        </trans-unit>
        <trans-unit id="aa80dc018866028332e46346237d7ae9f4517f7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; stands for recursive.</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; 代表递归。</target>
        </trans-unit>
        <trans-unit id="cc4b3b53f21ab61ce288db8007e7932906b31136" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;grep&lt;/code&gt; can be used even if we're not looking for a string.</source>
          <target state="translated">即使我们不查找字符串，也可以使用 &lt;code&gt;grep&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="904246008c5c2cdd4759c9bd96e43e6c7a9943b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt; stands for ignore case (optional in your case).</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; 代表忽略大小写（在您的情况下是可选的）。</target>
        </trans-unit>
        <trans-unit id="682d67e7a9d113dbc4fb8324c38bac28485431e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt;: Ignore case distinctions in both the PATTERN and the input files.</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; ：忽略PATTERN和输入文件中的大小写区别。</target>
        </trans-unit>
        <trans-unit id="8bd4f5af3100426c41982a70d673b7ec2f607bb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;l&lt;/code&gt; stands for &quot;show the file name, not the result itself&quot;.</source>
          <target state="translated">&lt;code&gt;l&lt;/code&gt; 代表&amp;ldquo;显示文件名，而不是结果本身&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="61d34dba4ead4ce7db67bcb3a71ea2d73ebb5280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&lt;/code&gt;: Prefix each line of output with the 1-based line number within its input file.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; ：输出的每一行都在其输入文件中以从1开始的行号作为前缀。</target>
        </trans-unit>
        <trans-unit id="802c42dbf1fd8434ed720a260e68549da1758f55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r&lt;/code&gt;: Read all files under each directory, recursively.</source>
          <target state="translated">&lt;code&gt;r&lt;/code&gt; ：递归读取每个目录下的所有文件。</target>
        </trans-unit>
        <trans-unit id="76df935eb8147363f79b64c33f4e75f3e64e638a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s&lt;/code&gt;: Suppress error messages about nonexistent or unreadable files.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; ：禁止显示关于不存在或不可读文件的错误消息。</target>
        </trans-unit>
        <trans-unit id="c3112b8fccfd2f3e51ed6b72d12d7f96381022c9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=12564442&quot;&gt;Ripgrep &amp;ndash; A new command line search tool&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=12564442&quot;&gt;Ripgrep &amp;ndash;一种新的命令行搜索工具&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f6361af750495f572c420501ccb1f32a9ba1147" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://man7.org/linux/man-pages/man1/find.1.html&quot;&gt;find&lt;/a&gt;&lt;/strong&gt; is the standard tool for searching files - combined with grep when looking for specific text - on Unix-like platforms. The &lt;a href=&quot;http://man7.org/linux/man-pages/man1/find.1.html&quot;&gt;find&lt;/a&gt; command is often combined with &lt;a href=&quot;http://man7.org/linux/man-pages/man1/xargs.1.html&quot;&gt;xargs&lt;/a&gt;, by the way.</source>
          <target state="translated">在类似于Unix的平台上， &lt;strong&gt;&lt;a href=&quot;http://man7.org/linux/man-pages/man1/find.1.html&quot;&gt;find&lt;/a&gt;&lt;/strong&gt;是用于搜索文件的标准工具（在查找特定文本时与grep结合使用）。 顺便说一下，通常将&lt;a href=&quot;http://man7.org/linux/man-pages/man1/find.1.html&quot;&gt;find&lt;/a&gt;命令与&lt;a href=&quot;http://man7.org/linux/man-pages/man1/xargs.1.html&quot;&gt;xargs&lt;/a&gt;结合使用。</target>
        </trans-unit>
        <trans-unit id="58c09d6b87300f466e361acfaa7be58944193e55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://beyondgrep.com/documentation&quot;&gt;ack&lt;/a&gt;&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://beyondgrep.com/documentation&quot;&gt;ack&lt;/a&gt;&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="60739128c34f0c43128a02bd00d9fbe03d8647c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://geoff.greer.fm/ag&quot;&gt;The Silver Searcher&lt;/a&gt;&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://geoff.greer.fm/ag&quot;&gt;白银搜寻者&lt;/a&gt;&lt;/strong&gt; ：</target>
        </trans-unit>
        <trans-unit id="103600c42171501fed3fe33456e9f7ff2a893042" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/BurntSushi/ripgrep&quot;&gt;RipGrep&lt;/a&gt;&lt;/strong&gt; - fastest search tool around:</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/BurntSushi/ripgrep&quot;&gt;RipGrep-&lt;/a&gt;&lt;/strong&gt;最快的搜索工具：</target>
        </trans-unit>
        <trans-unit id="6f90bf0848eb83808dd3292bbfe2cdd1e50f3669" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This can give you the power of &lt;code&gt;find&lt;/code&gt; to find files.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;这可以为您提供查找文件的能力。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a648cd0606cca5d79438d4f156e8c36af2fbb7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;UPDATE&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74736be1b75a5c4b3c301ef8e77e925d3c51cd63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt;
Depending on the version of grep you are using, you can omit &lt;code&gt;pwd&lt;/code&gt;. On newer versions &lt;code&gt;.&lt;/code&gt; seems to be the default case for grep if no directory is given
thus:</source>
          <target state="translated">&lt;strong&gt;更新&lt;/strong&gt;根据您使用的grep版本，您可以省略 &lt;code&gt;pwd&lt;/code&gt; 。 在较新的版本上 &lt;code&gt;.&lt;/code&gt; 如果没有给出目录，这似乎是grep的默认情况：</target>
        </trans-unit>
        <trans-unit id="4e7b73933f99c536f6ac5306f64860ac46187a69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: &lt;em&gt;unless you really can't avoid it, don't search from &lt;a href=&quot;https://en.wikipedia.org/wiki/Root_directory&quot;&gt;&lt;strong&gt;'/'&lt;/strong&gt; (the root directory)&lt;/a&gt; to avoid a long and inefficient search!
 So in the examples above, you'd better replace '&lt;strong&gt;/&lt;/strong&gt;' by a sub-directory name, e.g. &quot;/home&quot; depending where you actually want to search...&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;警告&lt;/strong&gt; ： &lt;em&gt;除非您真的无法避免，否则请不要从&lt;a href=&quot;https://en.wikipedia.org/wiki/Root_directory&quot;&gt;&lt;strong&gt;'/'&lt;/strong&gt; （根目录）&lt;/a&gt;中搜索，以免搜索时间长而效率低！&lt;/em&gt; &lt;em&gt;因此，在上面的示例中，您最好将&amp;ldquo; &lt;strong&gt;/&lt;/strong&gt; &amp;rdquo;替换为子目录名称，例如&amp;ldquo; / home&amp;rdquo;，具体取决于您实际要搜索的位置...&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6efa96c05bb2055d5fc00b9b85262b5502099303" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Checkout the docs, installation steps or source code on the &lt;a href=&quot;https://github.com/BurntSushi/ripgrep&quot;&gt;GitHub project page&lt;/a&gt;.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;在&lt;a href=&quot;https://github.com/BurntSushi/ripgrep&quot;&gt;GitHub项目页面&lt;/a&gt;上签出文档，安装步骤或源代码。&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="ad4bfd2c7b6466aeb984c864b4670b0b849d3d43" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Note: &lt;code&gt;-r&lt;/code&gt; - Recursively search subdirectories.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;注意： &lt;code&gt;-r&lt;/code&gt; -递归搜索子目录。&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f27aea60d0be76add78cc7eb65708d426e73a1de" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Note: By using &lt;a href=&quot;http://www.linuxjournal.com/content/globstar-new-bash-globbing-option&quot;&gt;globbing option&lt;/a&gt; (&lt;code&gt;**&lt;/code&gt;), it scans all the files recursively with specific extension or pattern. &lt;strong&gt;To enable this syntax, run: &lt;a href=&quot;https://stackoverflow.com/q/793715/55075&quot;&gt;&lt;code&gt;shopt -s globstar&lt;/code&gt;&lt;/a&gt;.&lt;/strong&gt; You may also use &lt;code&gt;**/*.*&lt;/code&gt; for all files (excluding hidden and without extension) or any other pattern.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;注意：通过使用&lt;a href=&quot;http://www.linuxjournal.com/content/globstar-new-bash-globbing-option&quot;&gt;globlob选项&lt;/a&gt; （ &lt;code&gt;**&lt;/code&gt; ），它将以特定的扩展名或模式递归扫描所有文件。&lt;/sup&gt; &lt;sup&gt;&lt;strong&gt;要启用此语法，请运行： &lt;a href=&quot;https://stackoverflow.com/q/793715/55075&quot;&gt; &lt;code&gt;shopt -s globstar&lt;/code&gt; &lt;/a&gt; 。&lt;/strong&gt;&lt;/sup&gt; &lt;sup&gt;您还可以对所有文件（不包括隐藏文件和无扩展名）或任何其他模式使用 &lt;code&gt;**/*.*&lt;/code&gt; 。&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="512c29263d22fe2f4f2393421ec11a4595947c3f" translate="yes" xml:space="preserve">
          <source>A Simple &lt;code&gt;find&lt;/code&gt; can work handy. alias it in your &lt;code&gt;~/.bashrc&lt;/code&gt; file:</source>
          <target state="translated">一个简单的 &lt;code&gt;find&lt;/code&gt; 可以很方便地工作。 在 &lt;code&gt;~/.bashrc&lt;/code&gt; 文件中为其添加别名：</target>
        </trans-unit>
        <trans-unit id="cfff7978cf8f1548ec7dcbdd233dafc48b3ae313" translate="yes" xml:space="preserve">
          <source>All previous answers suggest grep and find. But there is another way: Use &lt;a href=&quot;https://en.wikipedia.org/wiki/Midnight_Commander&quot;&gt;Midnight Commander&lt;/a&gt;</source>
          <target state="translated">以前所有的答案都建议使用grep并查找。 但是还有另一种方法：使用&lt;a href=&quot;https://en.wikipedia.org/wiki/Midnight_Commander&quot;&gt;Midnight Commander&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="504cac666db15c5e9f86fbce84793211657c0c84" translate="yes" xml:space="preserve">
          <source>Along with these, &lt;code&gt;--exclude&lt;/code&gt;, &lt;code&gt;--include&lt;/code&gt;, &lt;code&gt;--exclude-dir&lt;/code&gt; flags could be used for efficient searching:</source>
          <target state="translated">连同这些，-- &lt;code&gt;--exclude&lt;/code&gt; ，-- &lt;code&gt;--include&lt;/code&gt; ，-- &lt;code&gt;--exclude-dir&lt;/code&gt; 标志可用于有效搜索：</target>
        </trans-unit>
        <trans-unit id="436a5e697c053ef6c6045094904a6220c12e0868" translate="yes" xml:space="preserve">
          <source>Alternatively use &lt;a href=&quot;https://blog.burntsushi.net/ripgrep/&quot;&gt;&lt;code&gt;ripgrep&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">或者使用&lt;a href=&quot;https://blog.burntsushi.net/ripgrep/&quot;&gt; &lt;code&gt;ripgrep&lt;/code&gt; &lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="29b8e665ca65c2efb71720c425a232e0bd4da88f" translate="yes" xml:space="preserve">
          <source>And if you have an idea what the file type is you can narrow your search down by specifying file type extensions to search for, in this case &lt;code&gt;.pas&lt;/code&gt; OR &lt;code&gt;.dfm&lt;/code&gt; files:</source>
          <target state="translated">而且，如果您知道文件类型是什么，可以通过指定要搜索的文件类型扩展名来缩小搜索范围，在这种情况下，该文件是 &lt;code&gt;.pas&lt;/code&gt; 或 &lt;code&gt;.dfm&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="eef01718fa69d0902cc8fa07d70cfd94db902ad9" translate="yes" xml:space="preserve">
          <source>And it will do the task for you!</source>
          <target state="translated">而且它会为你完成任务!</target>
        </trans-unit>
        <trans-unit id="220d7c955533ef590db47a6cd2371bb78e86a829" translate="yes" xml:space="preserve">
          <source>And voila, it generates the path of matched files and line number at which the match was found. If more than one match was found, then each line number will be appended to the filename.</source>
          <target state="translated">然后,它就会生成匹配的文件路径和匹配的行号。如果发现了一个以上的匹配,那么每个行号会被附加到文件名中。</target>
        </trans-unit>
        <trans-unit id="8bb0078e73d370f51cbead46f0f9f56fd864bddd" translate="yes" xml:space="preserve">
          <source>Avoid the hassle and install ack-grep. It eliminates a lot of permission and quotation issues.</source>
          <target state="translated">省去了很多麻烦,安装AKG-GREP,。免去了很多权限和报价问题。</target>
        </trans-unit>
        <trans-unit id="038970f21cbb8e0488428da90f3fabf1886c4212" translate="yes" xml:space="preserve">
          <source>Do the following:</source>
          <target state="translated">做到以下几点:</target>
        </trans-unit>
        <trans-unit id="0bef8722f569bfaf8849a9b9da76a62c212e95da" translate="yes" xml:space="preserve">
          <source>Even if you are not use about the case like &quot;text&quot; vs &quot;TEXT&quot;, you can use the &lt;code&gt;-i&lt;/code&gt; switch to ignore case. You can read further details &lt;a href=&quot;http://www.digizol.com/2010/10/linux-find-content-filenames-search.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">即使您不使用&amp;ldquo; text&amp;rdquo;和&amp;ldquo; TEXT&amp;rdquo;之类的大小写，也可以使用 &lt;code&gt;-i&lt;/code&gt; 开关忽略大小写。 您可以&lt;a href=&quot;http://www.digizol.com/2010/10/linux-find-content-filenames-search.html&quot;&gt;在此处&lt;/a&gt;阅读更多详细信息。</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="9389382012d0873b3b8a76a016ecd5f38fa44366" translate="yes" xml:space="preserve">
          <source>Expanding the &lt;code&gt;grep&lt;/code&gt; a bit to give more information in the output, for example, to get the line number in the file where the text is can be done as follows:</source>
          <target state="translated">稍微扩展 &lt;code&gt;grep&lt;/code&gt; 可以在输出中提供更多信息，例如，获取文本所在文件的行号可以如下进行：</target>
        </trans-unit>
        <trans-unit id="b5935d62ef2f5d8650d40d7c0a0293ab45308ec2" translate="yes" xml:space="preserve">
          <source>Explanation from comments</source>
          <target state="translated">评论中的解释</target>
        </trans-unit>
        <trans-unit id="ba11abbd582af3c5c630c693892f19befc30a013" translate="yes" xml:space="preserve">
          <source>Faster and easier alternatives</source>
          <target state="translated">更快、更容易的替代品</target>
        </trans-unit>
        <trans-unit id="9ce552777fd1c1b3d6ec867c6e4a726e10d14562" translate="yes" xml:space="preserve">
          <source>Faster and easier tools exist for the same purpose - see below. Better try them, &lt;em&gt;provided they're available on your platform&lt;/em&gt;, of course:</source>
          <target state="translated">出于相同的目的，存在更快，更轻松的工具-参见下文。 最好尝试使用它们， &lt;em&gt;前提是它们在您的平台上可用&lt;/em&gt; ：</target>
        </trans-unit>
        <trans-unit id="099d945857eed2df44bc2629ff32c6f9cf73390f" translate="yes" xml:space="preserve">
          <source>First of all, I believe you have used &lt;code&gt;-H&lt;/code&gt; instead of &lt;code&gt;-l&lt;/code&gt;. Also you can try adding the text inside quotes followed by &lt;code&gt;{} \&lt;/code&gt;.</source>
          <target state="translated">首先，我相信您已经使用 &lt;code&gt;-H&lt;/code&gt; 而不是 &lt;code&gt;-l&lt;/code&gt; 。 您也可以尝试在引号内添加文本，后跟 &lt;code&gt;{} \&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="974001951cb59177d0246e320e5d08863dbfa5e5" translate="yes" xml:space="preserve">
          <source>For current folder use:</source>
          <target state="translated">对于当前文件夹的使用。</target>
        </trans-unit>
        <trans-unit id="79a9e63d831136011dda6ccfb52a92ed232fa4cb" translate="yes" xml:space="preserve">
          <source>For directories it's possible to exclude a particular directory(ies) through &lt;code&gt;--exclude-dir&lt;/code&gt; parameter. For example, this will exclude the dirs dir1/, dir2/ and all of them matching *.dst/:</source>
          <target state="translated">对于目录，可以通过 &lt;code&gt;--exclude-dir&lt;/code&gt; 参数排除特定目录。 例如，这将排除dirs dir1 /，dir2 /及其全部与* .dst /匹配的目录：</target>
        </trans-unit>
        <trans-unit id="28708243bc47580004e1a68c01e699ea30943be8" translate="yes" xml:space="preserve">
          <source>For example, if I want to search Python files with the extension &lt;code&gt;py&lt;/code&gt; containing &lt;code&gt;Pool(&lt;/code&gt; followed by word &lt;code&gt;Adaptor&lt;/code&gt;, I do the following,</source>
          <target state="translated">例如，如果我要搜索扩展名为 &lt;code&gt;py&lt;/code&gt; 的 Python文件，其中包含 &lt;code&gt;Pool(&lt;/code&gt; 后跟单词 &lt;code&gt;Adaptor&lt;/code&gt; ，则执行以下操作，</target>
        </trans-unit>
        <trans-unit id="4d9bd85a63912ec9fbd7344df98429ee2ade0ad9" translate="yes" xml:space="preserve">
          <source>For home folder use:</source>
          <target state="translated">用于家庭文件夹的使用。</target>
        </trans-unit>
        <trans-unit id="6709ff31884d463a03dd3190e9f1ac7d403c9a10" translate="yes" xml:space="preserve">
          <source>For more options check &lt;code&gt;man grep&lt;/code&gt;.</source>
          <target state="translated">有关更多选项，请检查 &lt;code&gt;man grep&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="36b89cedf007bb3901c06d08240ecb53328c93cb" translate="yes" xml:space="preserve">
          <source>Here are the several list of commands that can be used to search file.</source>
          <target state="translated">下面是几个可以用来搜索文件的命令列表。</target>
        </trans-unit>
        <trans-unit id="3dcc022d8a612ccb147684ec3cc33dc82bc5e7a0" translate="yes" xml:space="preserve">
          <source>Hope this helps you.</source>
          <target state="translated">希望这对你有帮助。</target>
        </trans-unit>
        <trans-unit id="e08d838c80af69b6fb6233ba96cbd4165e865928" translate="yes" xml:space="preserve">
          <source>Hope this is of assistance...</source>
          <target state="translated">希望这对你有帮助.....</target>
        </trans-unit>
        <trans-unit id="4b450553a1c8dd36dfe393477c9d0c9bb851200f" translate="yes" xml:space="preserve">
          <source>How do I find all files containing specific text on Linux</source>
          <target state="translated">如何在Linux上找到所有包含特定文本的文件?</target>
        </trans-unit>
        <trans-unit id="345e46c4bd0c61913df960efe6acba9a94b83497" translate="yes" xml:space="preserve">
          <source>How do I find all files containing specific text on Linux?
  (...)</source>
          <target state="translated">如何在Linux上找到所有包含特定文本的文件?(...)</target>
        </trans-unit>
        <trans-unit id="6f046d3167ed6ef7f091507fac543a1780ac4cb0" translate="yes" xml:space="preserve">
          <source>However, it doesn't work. It seems to display every single file in the system.</source>
          <target state="translated">然而,它并不工作。它似乎可以显示系统中的每一个文件。</target>
        </trans-unit>
        <trans-unit id="17f28785e94fda2fd620eaaa51edd75b8b73dbe5" translate="yes" xml:space="preserve">
          <source>I am fascinated by how simple &lt;a href=&quot;https://en.wikipedia.org/wiki/Grep&quot;&gt;grep&lt;/a&gt; makes it with 'rl':</source>
          <target state="translated">我对&lt;a href=&quot;https://en.wikipedia.org/wiki/Grep&quot;&gt;grep&lt;/a&gt;如何用'rl'做到如此简单着迷：</target>
        </trans-unit>
        <trans-unit id="75c2068a45911112763dc551b6ef60b042a5d99d" translate="yes" xml:space="preserve">
          <source>I came across this solution twice:</source>
          <target state="translated">我遇到过两次这样的解决方案。</target>
        </trans-unit>
        <trans-unit id="4f083c4c26ab4d3d847accb8e2f0e4fa3386e0a8" translate="yes" xml:space="preserve">
          <source>I find this easier to remember than the format for &lt;code&gt;find -exec&lt;/code&gt;.</source>
          <target state="translated">我发现这比 &lt;code&gt;find -exec&lt;/code&gt; 的格式更容易记住。</target>
        </trans-unit>
        <trans-unit id="c8530cd3abd96eaa60662f241e4026341573cff7" translate="yes" xml:space="preserve">
          <source>I just discovered &lt;a href=&quot;https://github.com/ggreer/the_silver_searcher&quot;&gt;The Silver Searcher&lt;/a&gt;, which is like ack but 3-5x faster than it and even ignores patterns from a &lt;code&gt;.gitignore&lt;/code&gt; file.</source>
          <target state="translated">我刚刚发现了&lt;a href=&quot;https://github.com/ggreer/the_silver_searcher&quot;&gt;Silver Searcher&lt;/a&gt; ，它像ack一样，但比它快3-5倍，甚至忽略了 &lt;code&gt;.gitignore&lt;/code&gt; 文件中的模式。</target>
        </trans-unit>
        <trans-unit id="94c293b872189f77de9d064af733908d872a4fd0" translate="yes" xml:space="preserve">
          <source>I wrote a &lt;a href=&quot;https://github.com/dilawar/Scripts/blob/master/sniff.py&quot;&gt;Python script&lt;/a&gt; which does something similar. This is how one should use this script.</source>
          <target state="translated">我写了一个&lt;a href=&quot;https://github.com/dilawar/Scripts/blob/master/sniff.py&quot;&gt;Python脚本&lt;/a&gt; ，它执行类似的操作。 这就是应该使用此脚本的方式。</target>
        </trans-unit>
        <trans-unit id="d53add6a96e42290ac16c0422afb48e2164b8a75" translate="yes" xml:space="preserve">
          <source>I'm trying to find a way to scan my entire Linux system for all files containing a specific string of text. Just to clarify, I'm looking for text within the file, not in the file name.</source>
          <target state="translated">我想找到一种方法来扫描我的整个Linux系统,扫描所有包含特定文本字符串的文件。只是想澄清一下,我想找的是文件中的文本,而不是文件名中的文本。</target>
        </trans-unit>
        <trans-unit id="a708a6bfb96bc8c8874714da3140a8d037ce0410" translate="yes" xml:space="preserve">
          <source>If using &lt;strong&gt;&lt;a href=&quot;http://man7.org/linux/man-pages/man1/find.1.html&quot;&gt;find&lt;/a&gt;&lt;/strong&gt; like in your example, better add &lt;code&gt;-s&lt;/code&gt; (&lt;code&gt;--no-messages&lt;/code&gt;) to &lt;code&gt;grep&lt;/code&gt;, and &lt;code&gt;2&amp;gt;/dev/null&lt;/code&gt; at the end of the command to avoid lots of &lt;em&gt;Permission denied&lt;/em&gt; messages issued by &lt;code&gt;grep&lt;/code&gt; and &lt;code&gt;find&lt;/code&gt;:</source>
          <target state="translated">如果在示例中使用&lt;strong&gt;&lt;a href=&quot;http://man7.org/linux/man-pages/man1/find.1.html&quot;&gt;find&lt;/a&gt;&lt;/strong&gt; ，最好将 &lt;code&gt;-s&lt;/code&gt; （-- &lt;code&gt;--no-messages&lt;/code&gt; ）添加到 &lt;code&gt;grep&lt;/code&gt; ，并在命令末尾添加 &lt;code&gt;2&amp;gt;/dev/null&lt;/code&gt; ，以避免 &lt;code&gt;grep&lt;/code&gt; 发出的许多&lt;em&gt;PermissionPermission&lt;/em&gt;消息被&lt;em&gt;拒绝&lt;/em&gt; ，并执行 &lt;code&gt;find&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="9ba7e8395974a060ee1988ad95afbaaf0b22cee5" translate="yes" xml:space="preserve">
          <source>If you don't care about the case of the text to find, then use:</source>
          <target state="translated">如果你不关心文字的情况下要找,那就用。</target>
        </trans-unit>
        <trans-unit id="aea7f6315a9ba1a0504bc92a2c7b9f1518358805" translate="yes" xml:space="preserve">
          <source>If you strictly want to use &lt;code&gt;find&lt;/code&gt; then use &lt;strong&gt;&lt;code&gt;find + grep&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">如果您严格要使用 &lt;code&gt;find&lt;/code&gt; ,请使用&lt;strong&gt; &lt;code&gt;find + grep&lt;/code&gt; &lt;/strong&gt; ：</target>
        </trans-unit>
        <trans-unit id="d835b189b69fdfe23ef64020b992a12b75793f99" translate="yes" xml:space="preserve">
          <source>If you're working on larger projects or big files, you should use &lt;code&gt;ripgrep&lt;/code&gt; instead, like:</source>
          <target state="translated">如果您正在处理较大的项目或大文件，则应改用 &lt;code&gt;ripgrep&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="6e68624a1aeef6e7e69c8a329ae3739d3729b6d4" translate="yes" xml:space="preserve">
          <source>If you've the error that your argument is too long, consider narrowing down your search, or use &lt;code&gt;find&lt;/code&gt; syntax instead such as:</source>
          <target state="translated">如果错误指出您的参数过长，请考虑缩小搜索范围，或改用 &lt;code&gt;find&lt;/code&gt; 语法，例如：</target>
        </trans-unit>
        <trans-unit id="04b3a75bf270c8736c1d1b58cb62eef2d7a8cd48" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;grep&lt;/code&gt; doesn't support recursive search, you can combine &lt;code&gt;find&lt;/code&gt; with &lt;code&gt;xargs&lt;/code&gt;:</source>
          <target state="translated">如果您的 &lt;code&gt;grep&lt;/code&gt; 不支持递归搜索，则可以将 &lt;code&gt;find&lt;/code&gt; 与 &lt;code&gt;xargs&lt;/code&gt; 结合使用：</target>
        </trans-unit>
        <trans-unit id="b68602b13b3252d9b1f34ded55dc17f4ccf63891" translate="yes" xml:space="preserve">
          <source>In addition to this command, we can write this too:
&lt;strong&gt;grep -rn &quot;String to search&quot; /path/to/directory/or/file&lt;/strong&gt;&lt;em&gt;-r: recursive search&lt;/em&gt;&lt;em&gt;n: line number will be shown for matches&lt;/em&gt;</source>
          <target state="translated">除此命令外，我们也可以编写以下代码： &lt;strong&gt;grep -rn&amp;ldquo;要搜索的字符串&amp;rdquo; / path / to /目录/或/ file&lt;/strong&gt; &lt;em&gt;-r：递归搜索&lt;/em&gt; &lt;em&gt;n：将显示匹配的行号&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="92ee7932f3f18a8c6ac7a988159982b03706b5af" translate="yes" xml:space="preserve">
          <source>In your root directory.</source>
          <target state="translated">在你的根目录中。</target>
        </trans-unit>
        <trans-unit id="06cb2bb80d392143b7f4c43d5849d3ef6464636b" translate="yes" xml:space="preserve">
          <source>Is this close to the proper way to do it? If not, how should I? This ability to find text strings in files would be extraordinarily useful for some programming projects I'm doing.</source>
          <target state="translated">这样做是否接近于正确的方法?如果不是,我应该怎么做?这种在文件中找到文本字符串的能力对于我正在做的一些编程项目来说是非常有用的。</target>
        </trans-unit>
        <trans-unit id="a774439b14ea118ef27b18d280266a42c5bc4d03" translate="yes" xml:space="preserve">
          <source>It is a free utility (30 years old, proven by time) which is visual without being GUI. It has tons of functions, and finding files is just one of them.</source>
          <target state="translated">它是一个免费的工具(30年的历史,被时间所证明),它是可视化的,而不是GUI。它有大量的功能,而查找文件只是其中之一。</target>
        </trans-unit>
        <trans-unit id="9b659bb8e6cf31d1489a01dd23e0ef307354a838" translate="yes" xml:space="preserve">
          <source>It supports ignore patterns specified in &lt;code&gt;.gitignore&lt;/code&gt; files, so a single file path can be matched against multiple glob patterns simultaneously.</source>
          <target state="translated">它支持 &lt;code&gt;.gitignore&lt;/code&gt; 文件中指定的忽略模式，因此单个文件路径可以同时与多个glob模式匹配。</target>
        </trans-unit>
        <trans-unit id="6c18551af31eaddefdea0c5221c416106d3dd851" translate="yes" xml:space="preserve">
          <source>It works closely with Git and other VCS. So you won't get anything in a &lt;em&gt;.git&lt;/em&gt; or another directory.</source>
          <target state="translated">它与Git和其他VCS紧密合作。 因此，您不会在&lt;em&gt;.git&lt;/em&gt;或其他目录中得到任何内容。</target>
        </trans-unit>
        <trans-unit id="a41df80358e35737fdd04d8d45c856394e169de1" translate="yes" xml:space="preserve">
          <source>It works just perfect...</source>
          <target state="translated">它的效果很好.....</target>
        </trans-unit>
        <trans-unit id="02dc779d54ba80f0984a14dd2bd5dadfeda3cdef" translate="yes" xml:space="preserve">
          <source>It works on Linux, Mac and Windows, and was written up on &lt;a href=&quot;https://en.wikipedia.org/wiki/Hacker_News&quot;&gt;Hacker News&lt;/a&gt; a couple of months ago (this has a link to Andrew Gallant's Blog which has a GitHub link):</source>
          <target state="translated">它可以在Linux，Mac和Windows上运行，并且是在几个月前在&lt;a href=&quot;https://en.wikipedia.org/wiki/Hacker_News&quot;&gt;Hacker News&lt;/a&gt;上编写的（它具有指向Andrew Gallant的Blog的链接，该博客具有GitHub链接）：</target>
        </trans-unit>
        <trans-unit id="15e4eafe4e0bef38893ad5a6c18d844cd48ad25c" translate="yes" xml:space="preserve">
          <source>It's much quicker than any other tool like &lt;a href=&quot;https://www.gnu.org/software/grep/&quot;&gt;GNU&lt;/a&gt;/&lt;a href=&quot;https://wiki.freebsd.org/BSDgrep&quot;&gt;BSD&lt;/a&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/grep&quot;&gt;&lt;code&gt;grep&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/gvansickle/ucg&quot;&gt;&lt;code&gt;ucg&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/ggreer/the_silver_searcher&quot;&gt;&lt;code&gt;ag&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/svent/sift&quot;&gt;&lt;code&gt;sift&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/petdance/ack2&quot;&gt;&lt;code&gt;ack&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/monochromegane/the_platinum_searcher&quot;&gt;&lt;code&gt;pt&lt;/code&gt;&lt;/a&gt; or similar, since it is built on top of &lt;a href=&quot;https://github.com/rust-lang/regex&quot;&gt;Rust's regex engine&lt;/a&gt; which uses finite automata, SIMD and aggressive literal optimizations to make searching very fast.</source>
          <target state="translated">它比其他任何工具（例如&lt;a href=&quot;https://www.gnu.org/software/grep/&quot;&gt;GNU&lt;/a&gt; / &lt;a href=&quot;https://wiki.freebsd.org/BSDgrep&quot;&gt;BSD&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/grep&quot;&gt; &lt;code&gt;grep&lt;/code&gt; &lt;/a&gt; ， &lt;a href=&quot;https://github.com/gvansickle/ucg&quot;&gt; &lt;code&gt;ucg&lt;/code&gt; &lt;/a&gt; ， &lt;a href=&quot;https://github.com/ggreer/the_silver_searcher&quot;&gt; &lt;code&gt;ag&lt;/code&gt; &lt;/a&gt; ， &lt;a href=&quot;https://github.com/svent/sift&quot;&gt; &lt;code&gt;sift&lt;/code&gt; &lt;/a&gt; ， &lt;a href=&quot;https://github.com/petdance/ack2&quot;&gt; &lt;code&gt;ack&lt;/code&gt; &lt;/a&gt; ， &lt;a href=&quot;https://github.com/monochromegane/the_platinum_searcher&quot;&gt; &lt;code&gt;pt&lt;/code&gt; &lt;/a&gt;或类似工具） 都要快得多 ，因为它是基于&lt;a href=&quot;https://github.com/rust-lang/regex&quot;&gt;Rust的regex引擎&lt;/a&gt;构建的，该引擎使用有限自动机，SIMD和积极的文字优化来使搜索变得非常快。</target>
        </trans-unit>
        <trans-unit id="5b60559fd8e2d2e8e3af93f7c4acc4a9ffbf1885" translate="yes" xml:space="preserve">
          <source>Just do:</source>
          <target state="translated">只是做。</target>
        </trans-unit>
        <trans-unit id="12aaf84cfac064109231b1b6d9af1ab6c935f688" translate="yes" xml:space="preserve">
          <source>Let's say you are searching for files containing specific text &quot;Apache License&quot; inside your directory. It will display results somewhat similar to below (output will be different based on your directory content).</source>
          <target state="translated">假设你在你的目录中搜索包含特定文本 &quot;Apache License &quot;的文件。它将显示与下面类似的结果(根据你的目录内容不同,输出结果会有所不同)。</target>
        </trans-unit>
        <trans-unit id="2715fcf69315a713a08f19c2951dae7384cd087e" translate="yes" xml:space="preserve">
          <source>List of file names containing a given text</source>
          <target state="translated">含有指定文本的文件名列表</target>
        </trans-unit>
        <trans-unit id="dc6d0b36785d242ba3a8ebbcf4dbf25bd7e18ae5" translate="yes" xml:space="preserve">
          <source>Note: You can add &lt;code&gt;2&amp;gt;/dev/null&lt;/code&gt; to these commands as well, to hide many error messages.</source>
          <target state="translated">注意：您也可以在这些命令中添加 &lt;code&gt;2&amp;gt;/dev/null&lt;/code&gt; ，以隐藏许多错误消息。</target>
        </trans-unit>
        <trans-unit id="e94cf882f9d6af249a3286ff0e876a2859731297" translate="yes" xml:space="preserve">
          <source>Optional flags you may want to add to &lt;code&gt;grep&lt;/code&gt;:</source>
          <target state="translated">您可能要添加到 &lt;code&gt;grep&lt;/code&gt; 的可选标志：</target>
        </trans-unit>
        <trans-unit id="c04131c6aa29e40e72b8c85745b0ebb603cb9c9b" translate="yes" xml:space="preserve">
          <source>Or a command similar to the one you are trying (example: ) for searching in all javascript files (*.js):</source>
          <target state="translated">或者使用类似于你正在尝试的命令(例如:),在所有的javascript文件(*.js)中搜索。</target>
        </trans-unit>
        <trans-unit id="4c968c9becafa7b5547dd29408163fdbb4a38dac" translate="yes" xml:space="preserve">
          <source>Remove case sensitiveness</source>
          <target state="translated">消除案件的敏感性</target>
        </trans-unit>
        <trans-unit id="f8902e412cfe22058c9c69526b21afdbfabcd592" translate="yes" xml:space="preserve">
          <source>Short explanation of the options:</source>
          <target state="translated">简要解释一下选项。</target>
        </trans-unit>
        <trans-unit id="ac2c6b17ec4c94b2c509adf1792715a7947690a7" translate="yes" xml:space="preserve">
          <source>Silver Searcher is a terrific tool, but ripgrep may be even better.</source>
          <target state="translated">Silver Searcher是一个非常好的工具,但ripgrep可能更好。</target>
        </trans-unit>
        <trans-unit id="0d008108039e8d6a46637f019614fb52fc64eeee" translate="yes" xml:space="preserve">
          <source>Simply running,</source>
          <target state="translated">简单的运行。</target>
        </trans-unit>
        <trans-unit id="e6bf90bd741d952794d9952a78f2f39b03a075a9" translate="yes" xml:space="preserve">
          <source>Start a new terminal and issue:</source>
          <target state="translated">启动一个新的终端并发出。</target>
        </trans-unit>
        <trans-unit id="2e3852f71dc34243996dfcd4928e8a5569164367" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;r&lt;/code&gt; stands for recursive and so will search in the path specified and also its sub-directories. This will tell you the file name as well as print out the line in the file where the string appears.</source>
          <target state="translated">&lt;code&gt;r&lt;/code&gt; 代表递归，因此它将在指定的路径及其子目录中搜索。 这将告诉您文件名，并打印出文件中出现字符串的行。</target>
        </trans-unit>
        <trans-unit id="24ce8aa1cb5bdbba3e1af44320d8a236b0505708" translate="yes" xml:space="preserve">
          <source>The below command will work fine for this approach:</source>
          <target state="translated">下面的命令对这个方法很好用。</target>
        </trans-unit>
        <trans-unit id="5578c40e5c3ca636d0ba6ceea5fdec456f38d0c2" translate="yes" xml:space="preserve">
          <source>The first argument, &lt;code&gt;path&lt;/code&gt;, is the directory in which we will search recursively. The second argument, &lt;code&gt;pattern_to_search&lt;/code&gt;, is a regular expression which we want to search in a file. We use the regular expression format defined in the &lt;a href=&quot;http://en.wikipedia.org/wiki/Python_%28programming_language%29&quot;&gt;Python&lt;/a&gt;&lt;code&gt;re&lt;/code&gt; library. In this script, the &lt;code&gt;.&lt;/code&gt; also matches newline.</source>
          <target state="translated">第一个参数 &lt;code&gt;path&lt;/code&gt; 是我们将在其中进行递归搜索的目录。 第二个参数 &lt;code&gt;pattern_to_search&lt;/code&gt; 是我们要在文件中搜索的正则表达式。 我们使用&lt;a href=&quot;http://en.wikipedia.org/wiki/Python_%28programming_language%29&quot;&gt;Python&lt;/a&gt; &lt;code&gt;re&lt;/code&gt; 库中定义的正则表达式格式。 在此脚本中， &lt;code&gt;.&lt;/code&gt; 也匹配换行符。</target>
        </trans-unit>
        <trans-unit id="28a1d3d378e5fad44e680f4c6983c44d109bc885" translate="yes" xml:space="preserve">
          <source>The third argument, &lt;code&gt;file_pattern&lt;/code&gt;, is optional. This is another regular expression which works on a filename. Only those files which matches this regular expression will be considered.</source>
          <target state="translated">第三个参数 &lt;code&gt;file_pattern&lt;/code&gt; 是可选的。 这是另一个对文件名起作用的正则表达式。 仅考虑与该正则表达式匹配的那些文件。</target>
        </trans-unit>
        <trans-unit id="c30336d043cb9476105d0e6537e8deddadfcb5bd" translate="yes" xml:space="preserve">
          <source>Then go to the directory you want to search and run the command below</source>
          <target state="translated">然后进入你要搜索的目录,运行以下命令</target>
        </trans-unit>
        <trans-unit id="39cdb145375e3143b55913227b0d818447fd266b" translate="yes" xml:space="preserve">
          <source>There is an &lt;code&gt;ack&lt;/code&gt; tool that would do exactly what you are looking for.</source>
          <target state="translated">有一个 &lt;code&gt;ack&lt;/code&gt; 工具可以完全满足您的需求。</target>
        </trans-unit>
        <trans-unit id="1cce713d9dfcf8a8610002c778a746e705d0eb3b" translate="yes" xml:space="preserve">
          <source>There's a new utility called &lt;strong&gt;The Silversearcher&lt;/strong&gt;</source>
          <target state="translated">有一个名为&lt;strong&gt;The Silversearcher&lt;/strong&gt;的新实用程序</target>
        </trans-unit>
        <trans-unit id="e5388b3659c1bfddce9794669c5321f681f8941f" translate="yes" xml:space="preserve">
          <source>This will exclude searching all the files ending with .o extension:</source>
          <target state="translated">这将排除搜索所有以.o结尾的文件。</target>
        </trans-unit>
        <trans-unit id="c01680658b8e6d87b16ba97e992a2081e2079e56" translate="yes" xml:space="preserve">
          <source>This will only search through those files which have .c or .h extensions:</source>
          <target state="translated">这将只搜索那些有.c或.h扩展名的文件。</target>
        </trans-unit>
        <trans-unit id="ba3d87a4af2e113f1b7494eb4554c1fd1198351e" translate="yes" xml:space="preserve">
          <source>This will output the filename and the content of the matched line, e.g.</source>
          <target state="translated">这将输出文件名和匹配行的内容,如</target>
        </trans-unit>
        <trans-unit id="422dc921c4c6c8c001ceba77c6e9098e06176866" translate="yes" xml:space="preserve">
          <source>This will print the lines in the files where the text appears, but it does not print the file name.</source>
          <target state="translated">这将打印文本出现的文件中的行,但不会打印文件名。</target>
        </trans-unit>
        <trans-unit id="8c73b8bf7ccb55a0cc6edf21c1987db3e30d82a3" translate="yes" xml:space="preserve">
          <source>This will report how many copies of your pattern are there in each of the files in the current directory.</source>
          <target state="translated">这将报告您的模式在当前目录中的每个文件中有多少个副本。</target>
        </trans-unit>
        <trans-unit id="632cd31a01792f346c77873b91d2d22299f88493" translate="yes" xml:space="preserve">
          <source>This works very well for me, to achieve almost the same purpose like yours.</source>
          <target state="translated">这对我来说效果很好,能达到和你差不多的目的。</target>
        </trans-unit>
        <trans-unit id="8e16cce8ba7e1cb6468d51b12b722a1fc52ec2ec" translate="yes" xml:space="preserve">
          <source>To display filename containing the search string:</source>
          <target state="translated">要显示包含搜索字符串的文件名。</target>
        </trans-unit>
        <trans-unit id="31dff0802859d357af975e37fb387f89b8e0f8fb" translate="yes" xml:space="preserve">
          <source>To search for the string and output just that line with the search string:</source>
          <target state="translated">要搜索字符串,只用搜索字符串输出那一行。</target>
        </trans-unit>
        <trans-unit id="102acb4ebe4f9295900af5f522c91830395377c0" translate="yes" xml:space="preserve">
          <source>Try:</source>
          <target state="translated">Try:</target>
        </trans-unit>
        <trans-unit id="904be640941a6df70e6a532a9223485d4eb1e453" translate="yes" xml:space="preserve">
          <source>Use '-r' without 'l' to see the file names followed by &lt;strong&gt;text in which the pattern is found&lt;/strong&gt;!</source>
          <target state="translated">使用&amp;ldquo; -r&amp;rdquo;（不带&amp;ldquo; l&amp;rdquo;）来查看文件名，后跟&lt;strong&gt;找到模式&lt;/strong&gt;的&lt;strong&gt;文本&lt;/strong&gt; ！</target>
        </trans-unit>
        <trans-unit id="be730a5fb451a6304eb10a7b9eb48f9398fae3be" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;-name Pattern&lt;/code&gt; if you want to &lt;code&gt;grep&lt;/code&gt; only certain files:</source>
          <target state="translated">如果只想 &lt;code&gt;grep&lt;/code&gt; 某些文件，请使用 &lt;code&gt;-name Pattern&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e75332ce84ae5819f86de7ec5a3e46e92c5ba6d0" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;pwd&lt;/code&gt; to search from any directory you are in, recursing downward</source>
          <target state="translated">使用 &lt;code&gt;pwd&lt;/code&gt; 从您所在的任何目录中搜索，向下递归</target>
        </trans-unit>
        <trans-unit id="bc0e34154d952ed72b15f5d9618112640d548177" translate="yes" xml:space="preserve">
          <source>Use:</source>
          <target state="translated">Use:</target>
        </trans-unit>
        <trans-unit id="d900e1150f348d50c88a7b07413de3ede1673107" translate="yes" xml:space="preserve">
          <source>When I was looking up how to do this, I came across this solution twice:</source>
          <target state="translated">当我在寻找这个办法的时候,我遇到了两次这个办法。</target>
        </trans-unit>
        <trans-unit id="bd2e2300fc4454e3f492b2058d090d33c83828f9" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;http://en.wikipedia.org/wiki/Regular_expression&quot;&gt;regular expressions&lt;/a&gt;, specify the filetype, etc.</source>
          <target state="translated">您还可以使用&lt;a href=&quot;http://en.wikipedia.org/wiki/Regular_expression&quot;&gt;正则表达式&lt;/a&gt; ，指定文件类型等。</target>
        </trans-unit>
        <trans-unit id="a0349c91758fa05265cf99f56956daa33d3d1e43" translate="yes" xml:space="preserve">
          <source>You can also use globbing syntax to search within specific files such as:</source>
          <target state="translated">你也可以使用 globbing 语法在特定的文件中进行搜索,比如说,在特定的文件中进行搜索。</target>
        </trans-unit>
        <trans-unit id="db4618c0f46707ab9174a88634795edf7a49ca2f" translate="yes" xml:space="preserve">
          <source>You can play with it and use different options of &lt;code&gt;find&lt;/code&gt; to improve or narrow down your file search.</source>
          <target state="translated">您可以使用它并使用 &lt;code&gt;find&lt;/code&gt; 的不同选项来改善或缩小文件搜索范围。</target>
        </trans-unit>
        <trans-unit id="c0b5171ebd919c59caf2b7d024dad3c8bdafbee4" translate="yes" xml:space="preserve">
          <source>You can simply use</source>
          <target state="translated">你可以简单地使用</target>
        </trans-unit>
        <trans-unit id="2bbc97fe326d8cb48aa320474efa76caf309dc58" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;http://beyondgrep.com/&quot;&gt;ack&lt;/a&gt;. It is like &lt;a href=&quot;http://en.wikipedia.org/wiki/Grep&quot;&gt;grep&lt;/a&gt; for source code. You can scan your entire file system with it.</source>
          <target state="translated">您可以使用&lt;a href=&quot;http://beyondgrep.com/&quot;&gt;ack&lt;/a&gt; 。 就像&lt;a href=&quot;http://en.wikipedia.org/wiki/Grep&quot;&gt;grep&lt;/a&gt;的源代码一样。 您可以使用它扫描整个文件系统。</target>
        </trans-unit>
        <trans-unit id="cbea126adcfd6e1dca2abbdd3e3afa6c8ae3d3df" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;grep -ilR&lt;/code&gt;:</source>
          <target state="translated">您可以使用 &lt;code&gt;grep -ilR&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c274cd4b62fac2f46ca20e3ff78e1f6aaad793d0" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;grep&lt;/code&gt; tool to search recursively the current folder, like:</source>
          <target state="translated">您可以使用 &lt;code&gt;grep&lt;/code&gt; 工具递归搜索当前文件夹，例如：</target>
        </trans-unit>
        <trans-unit id="6239e09afd0f1ee8697bad61254e2f2d08edc17b" translate="yes" xml:space="preserve">
          <source>You can use the common parameters such as:</source>
          <target state="translated">你可以使用常用的参数,如。</target>
        </trans-unit>
        <trans-unit id="c5b799049d31606a4bf737328c6f8e5743e4e30d" translate="yes" xml:space="preserve">
          <source>You can use this:</source>
          <target state="translated">你可以使用这个。</target>
        </trans-unit>
        <trans-unit id="28ce5baaf2a7e364a9e6393430ef2a639312b251" translate="yes" xml:space="preserve">
          <source>You can use:</source>
          <target state="translated">你可以使用。</target>
        </trans-unit>
        <trans-unit id="37d314dec4e736b0c69183e086901299a5bf50fc" translate="yes" xml:space="preserve">
          <source>You may ignore &lt;code&gt;-i&lt;/code&gt; for case sensitive search</source>
          <target state="translated">您可以忽略 &lt;code&gt;-i&lt;/code&gt; 进行区分大小写的搜索</target>
        </trans-unit>
        <trans-unit id="4f7f64c1613218412d7173f07c7407d18b5776a8" translate="yes" xml:space="preserve">
          <source>e.g.:</source>
          <target state="translated">e.g.:</target>
        </trans-unit>
        <trans-unit id="2b78a29b9875eb429cab7db53a296803a2a90fb8" translate="yes" xml:space="preserve">
          <source>find is a command that lets you find files and other objects like directories and links in subdirectories of a given path. If you don't specify a mask that filesnames should meet, it enumerates all directory objects.</source>
          <target state="translated">find是一个命令,它可以让你在给定路径中找到文件和其他对象,如目录和子目录中的链接。如果你没有指定一个文件名应该满足的掩码,它将枚举所有目录对象。</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="70c0c09b453040d2a1fdf0fa4850382e0a3cf92a" translate="yes" xml:space="preserve">
          <source>steps:</source>
          <target state="translated">steps:</target>
        </trans-unit>
        <trans-unit id="2d7c7608020ca5690b322d2cd962378d5d172ee4" translate="yes" xml:space="preserve">
          <source>which will search all file systems, because &lt;code&gt;/&lt;/code&gt; is the root folder.</source>
          <target state="translated">它将搜索所有文件系统，因为 &lt;code&gt;/&lt;/code&gt; 是根文件夹。</target>
        </trans-unit>
        <trans-unit id="188f4fdbfcd3f6408a8d072d8ef5a2d0852b5e43" translate="yes" xml:space="preserve">
          <source>will do the same thing as above!</source>
          <target state="translated">会做同样的事情</target>
        </trans-unit>
        <trans-unit id="be0563556c88ffc75ecd3d4114d463101c503b74" translate="yes" xml:space="preserve">
          <source>will print out the path to all text files, i.e. those containing only printable characters.</source>
          <target state="translated">将打印出所有文本文件的路径,即只包含可打印字符的文件。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
