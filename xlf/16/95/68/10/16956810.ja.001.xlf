<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/16956810">
    <body>
      <group id="16956810">
        <trans-unit id="39ce4b18754b9ff3ba389c8b5828c8bbf87a1121" translate="yes" xml:space="preserve">
          <source>1.Use &lt;code&gt;find&lt;/code&gt; to search files,</source>
          <target state="translated">1. &lt;code&gt;find&lt;/code&gt; を使用してファイルを検索し、</target>
        </trans-unit>
        <trans-unit id="0f7a36e13f60767cb72e73fdf741b894ba8fa5e7" translate="yes" xml:space="preserve">
          <source>2.Then execute &lt;code&gt;grep&lt;/code&gt; on all of them.</source>
          <target state="translated">2.次に、それらすべてに対して &lt;code&gt;grep&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="c4213f684c21bf84b7da209f71f2ce784b0a999a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Grep&quot;&gt;grep&lt;/a&gt; is your good friend to achieve this.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Grep&quot;&gt;grep&lt;/a&gt;はこれを達成するための良い友達です。</target>
        </trans-unit>
        <trans-unit id="1809408fc55c573a10aefd4aceb815e71ca0e0f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/grep&quot;&gt;&lt;code&gt;grep&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://www.gnu.org/software/grep/&quot;&gt;GNU&lt;/a&gt; or &lt;a href=&quot;https://wiki.freebsd.org/BSDgrep&quot;&gt;BSD&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/grep&quot;&gt; &lt;code&gt;grep&lt;/code&gt; &lt;/a&gt; （ &lt;a href=&quot;https://www.gnu.org/software/grep/&quot;&gt;GNU&lt;/a&gt;または&lt;a href=&quot;https://wiki.freebsd.org/BSDgrep&quot;&gt;BSD&lt;/a&gt; ）</target>
        </trans-unit>
        <trans-unit id="05b61ed028049109c9fb2ea570351391b81ee83f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--color=auto&lt;/code&gt; - Mark up the matching text.</source>
          <target state="translated">&lt;code&gt;--color=auto&lt;/code&gt; -一致するテキストをマークアップします。</target>
        </trans-unit>
        <trans-unit id="06ca5410d838d4a9921b1907d7c2b4d35a8a9404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-C&lt;/code&gt;/&lt;code&gt;--context&lt;/code&gt; (e.g. &lt;code&gt;-C5&lt;/code&gt;) - Increases context, so you see the surrounding code .</source>
          <target state="translated">&lt;code&gt;-C&lt;/code&gt; / &lt;code&gt;--context&lt;/code&gt; （例： &lt;code&gt;-C5&lt;/code&gt; ）-コンテキストを増やし、周囲のコードを表示します。</target>
        </trans-unit>
        <trans-unit id="cbf1ba3d64cd70c8bd4ad6257861424e93146c74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-H&lt;/code&gt; - Displays filename where the text is found.</source>
          <target state="translated">&lt;code&gt;-H&lt;/code&gt; -テキストが見つかったファイル名を表示します。</target>
        </trans-unit>
        <trans-unit id="c4e85b347e0bd50005ad3efb176aed602679810d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-I&lt;/code&gt; - Ignore the binary files.</source>
          <target state="translated">&lt;code&gt;-I&lt;/code&gt; -バイナリファイルを無視します。</target>
        </trans-unit>
        <trans-unit id="aa2e2466b6123d3c39d0973b7f56463e65ee80c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-c&lt;/code&gt; - Displays count of matching lines. Can be combined with &lt;code&gt;-H&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-c&lt;/code&gt; -一致する行の数を表示します。 &lt;code&gt;-H&lt;/code&gt; と組み合わせることができます。</target>
        </trans-unit>
        <trans-unit id="5192a5eaf782d6a7297ffc0b1a77ff6126fc1bdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-h&lt;/code&gt; - only output the line which matched (not the filename)</source>
          <target state="translated">&lt;code&gt;-h&lt;/code&gt; -一致した行のみを出力します（ファイル名ではありません）</target>
        </trans-unit>
        <trans-unit id="fd344020aeea0ad9a0569735bec74223f1085758" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt; - Insensitive searching.</source>
          <target state="translated">&lt;code&gt;-i&lt;/code&gt; -インセンシティブ検索。</target>
        </trans-unit>
        <trans-unit id="c68b9c5c52fe9c4ac2976a35dd8902532e731f30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-i&lt;/code&gt; - case insensitive search</source>
          <target state="translated">&lt;code&gt;-i&lt;/code&gt; -大文字と小文字を区別しない検索</target>
        </trans-unit>
        <trans-unit id="0fb18ed8c7b62a1b0adee94b9745f3f32823e63b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt; (lower-case L) can be added to just give the file name of matching files.</source>
          <target state="translated">&lt;code&gt;-l&lt;/code&gt; （小文字のL）を追加して、一致するファイルのファイル名だけを指定できます。</target>
        </trans-unit>
        <trans-unit id="cc7cb4ca2fc498776dfeb34bd6a5418e3f5234e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-l&lt;/code&gt; - only output the filename where the match was found</source>
          <target state="translated">&lt;code&gt;-l&lt;/code&gt; -一致が見つかったファイル名のみを出力します</target>
        </trans-unit>
        <trans-unit id="964ea5dc02c6d7caaeedb5d6635887e62d43e6d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt; - Show the line of your match.</source>
          <target state="translated">&lt;code&gt;-n&lt;/code&gt; -対戦の行を表示します。</target>
        </trans-unit>
        <trans-unit id="4746cd90897fb7b00d7f800720bf1449fae9272a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt; is line number, and</source>
          <target state="translated">&lt;code&gt;-n&lt;/code&gt; は行番号であり、</target>
        </trans-unit>
        <trans-unit id="bdc4a29dd9999fc869b6fd0565bfe8b261039c8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-name&lt;/code&gt; &quot;&lt;code&gt;*.*&lt;/code&gt;&quot; : for all files
( -name &quot;&lt;code&gt;*.pas&lt;/code&gt;&quot; -o -name &quot;&lt;code&gt;*.dfm&lt;/code&gt;&quot; ) : Only the &lt;code&gt;*.pas&lt;/code&gt; OR &lt;code&gt;*.dfm&lt;/code&gt; files, OR specified with &lt;code&gt;-o&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-name&lt;/code&gt; &quot; &lt;code&gt;*.*&lt;/code&gt; &quot;：すべてのファイル（-name &quot; &lt;code&gt;*.pas&lt;/code&gt; &quot; -o -name &quot; &lt;code&gt;*.dfm&lt;/code&gt; &quot;）： &lt;code&gt;*.pas&lt;/code&gt; または &lt;code&gt;*.dfm&lt;/code&gt; ファイルのみ、または &lt;code&gt;-o&lt;/code&gt; で指定</target>
        </trans-unit>
        <trans-unit id="03e901095542d41433e98c2d11811e8a8be847a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-print0&lt;/code&gt; and &lt;code&gt;--null&lt;/code&gt; on the other side of the &lt;code&gt;|&lt;/code&gt; (pipe) are the crucial ones, passing the filename from the &lt;code&gt;find&lt;/code&gt; to the &lt;code&gt;grep&lt;/code&gt; embedded in the &lt;code&gt;xargs&lt;/code&gt;, allowing for the passing of filenames WITH spaces in the filenames, allowing grep to treat the path and filename as one string, and not break it up on each space.</source>
          <target state="translated">&lt;code&gt;|&lt;/code&gt; の反対側の &lt;code&gt;-print0&lt;/code&gt; および &lt;code&gt;--null&lt;/code&gt; （パイプ）は重要なものであり、 &lt;code&gt;find&lt;/code&gt; からファイル名を &lt;code&gt;xargs&lt;/code&gt; に埋め込まれた &lt;code&gt;grep&lt;/code&gt; に渡し、ファイル名にスペースを含むファイル名を渡すことを可能にし、grepがパスとファイル名を1つの文字列として扱い、それを壊さないようにします各スペースにアップ。</target>
        </trans-unit>
        <trans-unit id="8f6311104ce27e75da24555f3181e1a9cf190289" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-r&lt;/code&gt; or &lt;code&gt;-R&lt;/code&gt; is recursive,</source>
          <target state="translated">&lt;code&gt;-r&lt;/code&gt; または &lt;code&gt;-R&lt;/code&gt; は再帰的です。</target>
        </trans-unit>
        <trans-unit id="b9f65f38c282d8e997ebfb361963d81d16056719" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-type f&lt;/code&gt; specifies that you are looking for files</source>
          <target state="translated">&lt;code&gt;-type f&lt;/code&gt; は、ファイルを探していることを指定します</target>
        </trans-unit>
        <trans-unit id="363c094b035cfe0614bdab52fdb67cb9ca3e817a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-w&lt;/code&gt; - Search for the whole words (in opposite of partial word matching).</source>
          <target state="translated">&lt;code&gt;-w&lt;/code&gt; -単語全体を検索します（部分的な単語照合の反対）。</target>
        </trans-unit>
        <trans-unit id="3eadc82b6a5aabf7c908b5c4f5c409708037665d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-w&lt;/code&gt; stands for match the whole word.</source>
          <target state="translated">&lt;code&gt;-w&lt;/code&gt; は単語全体に一致することを意味します。</target>
        </trans-unit>
        <trans-unit id="a7517c403edc2976007275f961c9708b98df272b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.&lt;/code&gt; in the &lt;code&gt;find&lt;/code&gt; specifies from the current directory.</source>
          <target state="translated">&lt;code&gt;.&lt;/code&gt; &lt;code&gt;find&lt;/code&gt; は、現在のディレクトリから指定します。</target>
        </trans-unit>
        <trans-unit id="632364c1940dc4390896105e753ddafd1a76791b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/&lt;/code&gt; stands for starting at the root of your machine.</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; は、マシンのルートから始まることを意味します。</target>
        </trans-unit>
        <trans-unit id="aa80dc018866028332e46346237d7ae9f4517f7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; stands for recursive.</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; は再帰を表します。</target>
        </trans-unit>
        <trans-unit id="cc4b3b53f21ab61ce288db8007e7932906b31136" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;grep&lt;/code&gt; can be used even if we're not looking for a string.</source>
          <target state="translated">文字列を探していなくても、 &lt;code&gt;grep&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="904246008c5c2cdd4759c9bd96e43e6c7a9943b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt; stands for ignore case (optional in your case).</source>
          <target state="translated">大文字小文字を区別しない（あなたの場合はオプション）。</target>
        </trans-unit>
        <trans-unit id="682d67e7a9d113dbc4fb8324c38bac28485431e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt;: Ignore case distinctions in both the PATTERN and the input files.</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; ：PATTERNと入力ファイルの両方で大文字と小文字の区別を無視します。</target>
        </trans-unit>
        <trans-unit id="8bd4f5af3100426c41982a70d673b7ec2f607bb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;l&lt;/code&gt; stands for &quot;show the file name, not the result itself&quot;.</source>
          <target state="translated">&lt;code&gt;l&lt;/code&gt; は「結果自体ではなく、ファイル名を表示する」を意味します。</target>
        </trans-unit>
        <trans-unit id="61d34dba4ead4ce7db67bcb3a71ea2d73ebb5280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&lt;/code&gt;: Prefix each line of output with the 1-based line number within its input file.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; ：出力の各行の先頭に、入力ファイル内の1から始まる行番号を付けます。</target>
        </trans-unit>
        <trans-unit id="802c42dbf1fd8434ed720a260e68549da1758f55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r&lt;/code&gt;: Read all files under each directory, recursively.</source>
          <target state="translated">&lt;code&gt;r&lt;/code&gt; ：各ディレクトリの下のすべてのファイルを再帰的に読み取ります。</target>
        </trans-unit>
        <trans-unit id="76df935eb8147363f79b64c33f4e75f3e64e638a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s&lt;/code&gt;: Suppress error messages about nonexistent or unreadable files.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; ：存在しない、または読み取り不可能なファイルに関するエラーメッセージを抑制します。</target>
        </trans-unit>
        <trans-unit id="c3112b8fccfd2f3e51ed6b72d12d7f96381022c9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=12564442&quot;&gt;Ripgrep &amp;ndash; A new command line search tool&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=12564442&quot;&gt;Ripgrep &amp;ndash;新しいコマンドライン検索ツール&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f6361af750495f572c420501ccb1f32a9ba1147" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://man7.org/linux/man-pages/man1/find.1.html&quot;&gt;find&lt;/a&gt;&lt;/strong&gt; is the standard tool for searching files - combined with grep when looking for specific text - on Unix-like platforms. The &lt;a href=&quot;http://man7.org/linux/man-pages/man1/find.1.html&quot;&gt;find&lt;/a&gt; command is often combined with &lt;a href=&quot;http://man7.org/linux/man-pages/man1/xargs.1.html&quot;&gt;xargs&lt;/a&gt;, by the way.</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://man7.org/linux/man-pages/man1/find.1.html&quot;&gt;find&lt;/a&gt;&lt;/strong&gt;は、Unixのようなプラットフォームで、ファイルを検索するための標準ツールです。 ちなみに、 &lt;a href=&quot;http://man7.org/linux/man-pages/man1/xargs.1.html&quot;&gt;find&lt;/a&gt;コマンドはしばしばxargsと組み合わされます。</target>
        </trans-unit>
        <trans-unit id="58c09d6b87300f466e361acfaa7be58944193e55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://beyondgrep.com/documentation&quot;&gt;ack&lt;/a&gt;&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://beyondgrep.com/documentation&quot;&gt;ack&lt;/a&gt;&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="60739128c34f0c43128a02bd00d9fbe03d8647c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://geoff.greer.fm/ag&quot;&gt;The Silver Searcher&lt;/a&gt;&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://geoff.greer.fm/ag&quot;&gt;シルバーサーチャー&lt;/a&gt;&lt;/strong&gt; ：</target>
        </trans-unit>
        <trans-unit id="103600c42171501fed3fe33456e9f7ff2a893042" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/BurntSushi/ripgrep&quot;&gt;RipGrep&lt;/a&gt;&lt;/strong&gt; - fastest search tool around:</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/BurntSushi/ripgrep&quot;&gt;RipGrep-&lt;/a&gt;&lt;/strong&gt;最速の検索ツール：</target>
        </trans-unit>
        <trans-unit id="6f90bf0848eb83808dd3292bbfe2cdd1e50f3669" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This can give you the power of &lt;code&gt;find&lt;/code&gt; to find files.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;これにより、ファイルを検索する機能を利用できます。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a648cd0606cca5d79438d4f156e8c36af2fbb7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;UPDATE&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74736be1b75a5c4b3c301ef8e77e925d3c51cd63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt;
Depending on the version of grep you are using, you can omit &lt;code&gt;pwd&lt;/code&gt;. On newer versions &lt;code&gt;.&lt;/code&gt; seems to be the default case for grep if no directory is given
thus:</source>
          <target state="translated">&lt;strong&gt;更新&lt;/strong&gt;使用しているgrepのバージョンに応じて、 &lt;code&gt;pwd&lt;/code&gt; を省略できます。 新しいバージョンで &lt;code&gt;.&lt;/code&gt; ディレクトリが指定されていない場合、grepのデフォルトのケースのようです。</target>
        </trans-unit>
        <trans-unit id="4e7b73933f99c536f6ac5306f64860ac46187a69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: &lt;em&gt;unless you really can't avoid it, don't search from &lt;a href=&quot;https://en.wikipedia.org/wiki/Root_directory&quot;&gt;&lt;strong&gt;'/'&lt;/strong&gt; (the root directory)&lt;/a&gt; to avoid a long and inefficient search!
 So in the examples above, you'd better replace '&lt;strong&gt;/&lt;/strong&gt;' by a sub-directory name, e.g. &quot;/home&quot; depending where you actually want to search...&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;警告&lt;/strong&gt; ： &lt;em&gt;本当に避けられない場合を除いて、 &lt;a href=&quot;https://en.wikipedia.org/wiki/Root_directory&quot;&gt;&lt;strong&gt;「/」&lt;/strong&gt; （ルートディレクトリ）&lt;/a&gt;から検索しないでください。長くて非効率的な検索を回避できます。&lt;/em&gt; &lt;em&gt;したがって、上記の例では、実際に検索する場所に応じて、「/」をサブディレクトリ名で置き換えます。たとえば、「/ home」です。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6efa96c05bb2055d5fc00b9b85262b5502099303" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Checkout the docs, installation steps or source code on the &lt;a href=&quot;https://github.com/BurntSushi/ripgrep&quot;&gt;GitHub project page&lt;/a&gt;.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;a href=&quot;https://github.com/BurntSushi/ripgrep&quot;&gt;GitHubプロジェクトページ&lt;/a&gt;のドキュメント、インストール手順、またはソースコードを確認してください 。&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="ad4bfd2c7b6466aeb984c864b4670b0b849d3d43" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Note: &lt;code&gt;-r&lt;/code&gt; - Recursively search subdirectories.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;注： &lt;code&gt;-r&lt;/code&gt; -サブディレクトリを再帰的に検索します。&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f27aea60d0be76add78cc7eb65708d426e73a1de" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Note: By using &lt;a href=&quot;http://www.linuxjournal.com/content/globstar-new-bash-globbing-option&quot;&gt;globbing option&lt;/a&gt; (&lt;code&gt;**&lt;/code&gt;), it scans all the files recursively with specific extension or pattern. &lt;strong&gt;To enable this syntax, run: &lt;a href=&quot;https://stackoverflow.com/q/793715/55075&quot;&gt;&lt;code&gt;shopt -s globstar&lt;/code&gt;&lt;/a&gt;.&lt;/strong&gt; You may also use &lt;code&gt;**/*.*&lt;/code&gt; for all files (excluding hidden and without extension) or any other pattern.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;注： &lt;a href=&quot;http://www.linuxjournal.com/content/globstar-new-bash-globbing-option&quot;&gt;グロビングオプション&lt;/a&gt; （ &lt;code&gt;**&lt;/code&gt; ）を使用すると、特定の拡張子またはパターンですべてのファイルが再帰的にスキャンされます。&lt;/sup&gt; &lt;sup&gt;&lt;strong&gt;この構文を有効にするには、 &lt;a href=&quot;https://stackoverflow.com/q/793715/55075&quot;&gt; &lt;code&gt;shopt -s globstar&lt;/code&gt; を&lt;/a&gt;実行します。&lt;/strong&gt;&lt;/sup&gt; &lt;sup&gt; &lt;code&gt;**/*.*&lt;/code&gt; をすべてのファイル（非表示および拡張子なしを除く）またはその他のパタ​​ーンに使用することもできます。&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="512c29263d22fe2f4f2393421ec11a4595947c3f" translate="yes" xml:space="preserve">
          <source>A Simple &lt;code&gt;find&lt;/code&gt; can work handy. alias it in your &lt;code&gt;~/.bashrc&lt;/code&gt; file:</source>
          <target state="translated">単純な &lt;code&gt;find&lt;/code&gt; は便利です。 &lt;code&gt;~/.bashrc&lt;/code&gt; ファイルでエイリアスします：</target>
        </trans-unit>
        <trans-unit id="cfff7978cf8f1548ec7dcbdd233dafc48b3ae313" translate="yes" xml:space="preserve">
          <source>All previous answers suggest grep and find. But there is another way: Use &lt;a href=&quot;https://en.wikipedia.org/wiki/Midnight_Commander&quot;&gt;Midnight Commander&lt;/a&gt;</source>
          <target state="translated">以前のすべての回答は、grepとfindを提案しています。 しかし、別の方法があります： &lt;a href=&quot;https://en.wikipedia.org/wiki/Midnight_Commander&quot;&gt;Midnight Commanderを&lt;/a&gt;使用してください</target>
        </trans-unit>
        <trans-unit id="504cac666db15c5e9f86fbce84793211657c0c84" translate="yes" xml:space="preserve">
          <source>Along with these, &lt;code&gt;--exclude&lt;/code&gt;, &lt;code&gt;--include&lt;/code&gt;, &lt;code&gt;--exclude-dir&lt;/code&gt; flags could be used for efficient searching:</source>
          <target state="translated">これらに &lt;code&gt;--include&lt;/code&gt; 、 &lt;code&gt;--exclude-dir&lt;/code&gt; exclude 、 -- include 、 -- exclude -dirフラグを使用して効率的な検索を行うことができます。</target>
        </trans-unit>
        <trans-unit id="436a5e697c053ef6c6045094904a6220c12e0868" translate="yes" xml:space="preserve">
          <source>Alternatively use &lt;a href=&quot;https://blog.burntsushi.net/ripgrep/&quot;&gt;&lt;code&gt;ripgrep&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">または、 &lt;a href=&quot;https://blog.burntsushi.net/ripgrep/&quot;&gt; &lt;code&gt;ripgrep&lt;/code&gt; を&lt;/a&gt;使用します 。</target>
        </trans-unit>
        <trans-unit id="29b8e665ca65c2efb71720c425a232e0bd4da88f" translate="yes" xml:space="preserve">
          <source>And if you have an idea what the file type is you can narrow your search down by specifying file type extensions to search for, in this case &lt;code&gt;.pas&lt;/code&gt; OR &lt;code&gt;.dfm&lt;/code&gt; files:</source>
          <target state="translated">また、ファイルの種類が何か &lt;code&gt;.pas&lt;/code&gt; ている場合は、検索するファイルの種類の拡張子を指定して検索を絞り込むことができます。この場合は、 .pasまたは &lt;code&gt;.dfm&lt;/code&gt; ファイルです。</target>
        </trans-unit>
        <trans-unit id="eef01718fa69d0902cc8fa07d70cfd94db902ad9" translate="yes" xml:space="preserve">
          <source>And it will do the task for you!</source>
          <target state="translated">そして、それはあなたのために仕事をしてくれます</target>
        </trans-unit>
        <trans-unit id="220d7c955533ef590db47a6cd2371bb78e86a829" translate="yes" xml:space="preserve">
          <source>And voila, it generates the path of matched files and line number at which the match was found. If more than one match was found, then each line number will be appended to the filename.</source>
          <target state="translated">すると、マッチしたファイルのパスと、マッチしたファイルが見つかった行番号が生成されます。複数のマッチが見つかった場合は、それぞれの行番号がファイル名に追加されます。</target>
        </trans-unit>
        <trans-unit id="8bb0078e73d370f51cbead46f0f9f56fd864bddd" translate="yes" xml:space="preserve">
          <source>Avoid the hassle and install ack-grep. It eliminates a lot of permission and quotation issues.</source>
          <target state="translated">手間を省いてアックグレップを導入しましょう。これにより、多くのパーミッションや見積書の問題が解消されます。</target>
        </trans-unit>
        <trans-unit id="038970f21cbb8e0488428da90f3fabf1886c4212" translate="yes" xml:space="preserve">
          <source>Do the following:</source>
          <target state="translated">以下のようにしてください。</target>
        </trans-unit>
        <trans-unit id="0bef8722f569bfaf8849a9b9da76a62c212e95da" translate="yes" xml:space="preserve">
          <source>Even if you are not use about the case like &quot;text&quot; vs &quot;TEXT&quot;, you can use the &lt;code&gt;-i&lt;/code&gt; switch to ignore case. You can read further details &lt;a href=&quot;http://www.digizol.com/2010/10/linux-find-content-filenames-search.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&quot;text&quot;と &quot;TEXT&quot;のように大文字と小文字を区別しない場合でも、 &lt;code&gt;-i&lt;/code&gt; スイッチを使用して大文字と小文字を区別することができます。 詳細については、 &lt;a href=&quot;http://www.digizol.com/2010/10/linux-find-content-filenames-search.html&quot;&gt;こちら&lt;/a&gt;をご覧ください 。</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="9389382012d0873b3b8a76a016ecd5f38fa44366" translate="yes" xml:space="preserve">
          <source>Expanding the &lt;code&gt;grep&lt;/code&gt; a bit to give more information in the output, for example, to get the line number in the file where the text is can be done as follows:</source>
          <target state="translated">たとえば、テキストを含むファイルの行番号を取得するために、 &lt;code&gt;grep&lt;/code&gt; を少し拡張して出力に情報を追加するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="b5935d62ef2f5d8650d40d7c0a0293ab45308ec2" translate="yes" xml:space="preserve">
          <source>Explanation from comments</source>
          <target state="translated">コメントからの説明</target>
        </trans-unit>
        <trans-unit id="ba11abbd582af3c5c630c693892f19befc30a013" translate="yes" xml:space="preserve">
          <source>Faster and easier alternatives</source>
          <target state="translated">より速く、より簡単な選択肢</target>
        </trans-unit>
        <trans-unit id="9ce552777fd1c1b3d6ec867c6e4a726e10d14562" translate="yes" xml:space="preserve">
          <source>Faster and easier tools exist for the same purpose - see below. Better try them, &lt;em&gt;provided they're available on your platform&lt;/em&gt;, of course:</source>
          <target state="translated">同じ目的で、より速くて簡単なツールが存在します-以下を参照してください。 もちろん、 &lt;em&gt;お使いのプラットフォーム&lt;/em&gt;で&lt;em&gt;利用できる場合は&lt;/em&gt; 、ぜひお試しください。</target>
        </trans-unit>
        <trans-unit id="099d945857eed2df44bc2629ff32c6f9cf73390f" translate="yes" xml:space="preserve">
          <source>First of all, I believe you have used &lt;code&gt;-H&lt;/code&gt; instead of &lt;code&gt;-l&lt;/code&gt;. Also you can try adding the text inside quotes followed by &lt;code&gt;{} \&lt;/code&gt;.</source>
          <target state="translated">まず第一に、あなたは &lt;code&gt;-l&lt;/code&gt; の代わりに &lt;code&gt;-H&lt;/code&gt; を使用したと思います。 また、引用符内にテキストを追加し、その後に &lt;code&gt;{} \&lt;/code&gt; 追加することもできます。</target>
        </trans-unit>
        <trans-unit id="974001951cb59177d0246e320e5d08863dbfa5e5" translate="yes" xml:space="preserve">
          <source>For current folder use:</source>
          <target state="translated">現在のフォルダを使用する場合。</target>
        </trans-unit>
        <trans-unit id="79a9e63d831136011dda6ccfb52a92ed232fa4cb" translate="yes" xml:space="preserve">
          <source>For directories it's possible to exclude a particular directory(ies) through &lt;code&gt;--exclude-dir&lt;/code&gt; parameter. For example, this will exclude the dirs dir1/, dir2/ and all of them matching *.dst/:</source>
          <target state="translated">ディレクトリの場合、 &lt;code&gt;--exclude-dir&lt;/code&gt; パラメータを使用して特定のディレクトリを除外できます。 たとえば、dirs dir1 /、dir2 /、および* .dst /に一致するそれらすべてが除外されます。</target>
        </trans-unit>
        <trans-unit id="28708243bc47580004e1a68c01e699ea30943be8" translate="yes" xml:space="preserve">
          <source>For example, if I want to search Python files with the extension &lt;code&gt;py&lt;/code&gt; containing &lt;code&gt;Pool(&lt;/code&gt; followed by word &lt;code&gt;Adaptor&lt;/code&gt;, I do the following,</source>
          <target state="translated">たとえば、 &lt;code&gt;Pool(&lt;/code&gt; 後に拡張子 &lt;code&gt;Adaptor&lt;/code&gt; 続く拡張子 &lt;code&gt;py&lt;/code&gt; が付いたPythonファイルを検索するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="4d9bd85a63912ec9fbd7344df98429ee2ade0ad9" translate="yes" xml:space="preserve">
          <source>For home folder use:</source>
          <target state="translated">ホームフォルダでの使用に。</target>
        </trans-unit>
        <trans-unit id="6709ff31884d463a03dd3190e9f1ac7d403c9a10" translate="yes" xml:space="preserve">
          <source>For more options check &lt;code&gt;man grep&lt;/code&gt;.</source>
          <target state="translated">その他のオプションについては、 &lt;code&gt;man grep&lt;/code&gt; を確認してください。</target>
        </trans-unit>
        <trans-unit id="36b89cedf007bb3901c06d08240ecb53328c93cb" translate="yes" xml:space="preserve">
          <source>Here are the several list of commands that can be used to search file.</source>
          <target state="translated">ここでは、ファイルを検索するために使用できるコマンドのいくつかのリストを示します。</target>
        </trans-unit>
        <trans-unit id="3dcc022d8a612ccb147684ec3cc33dc82bc5e7a0" translate="yes" xml:space="preserve">
          <source>Hope this helps you.</source>
          <target state="translated">お役に立てれば幸いです。</target>
        </trans-unit>
        <trans-unit id="e08d838c80af69b6fb6233ba96cbd4165e865928" translate="yes" xml:space="preserve">
          <source>Hope this is of assistance...</source>
          <target state="translated">お役に立てるといいのですが...</target>
        </trans-unit>
        <trans-unit id="4b450553a1c8dd36dfe393477c9d0c9bb851200f" translate="yes" xml:space="preserve">
          <source>How do I find all files containing specific text on Linux</source>
          <target state="translated">Linuxで特定のテキストを含むすべてのファイルを見つける方法</target>
        </trans-unit>
        <trans-unit id="345e46c4bd0c61913df960efe6acba9a94b83497" translate="yes" xml:space="preserve">
          <source>How do I find all files containing specific text on Linux?
  (...)</source>
          <target state="translated">Linuxで特定のテキストを含むすべてのファイルを見つける方法を教えてください。(...)</target>
        </trans-unit>
        <trans-unit id="6f046d3167ed6ef7f091507fac543a1780ac4cb0" translate="yes" xml:space="preserve">
          <source>However, it doesn't work. It seems to display every single file in the system.</source>
          <target state="translated">しかし、うまくいきません。システム内のすべてのファイルを表示するようです。</target>
        </trans-unit>
        <trans-unit id="17f28785e94fda2fd620eaaa51edd75b8b73dbe5" translate="yes" xml:space="preserve">
          <source>I am fascinated by how simple &lt;a href=&quot;https://en.wikipedia.org/wiki/Grep&quot;&gt;grep&lt;/a&gt; makes it with 'rl':</source>
          <target state="translated">シンプルな&lt;a href=&quot;https://en.wikipedia.org/wiki/Grep&quot;&gt;grep&lt;/a&gt;が 'rl'を使用して作成する方法に魅了されます。</target>
        </trans-unit>
        <trans-unit id="75c2068a45911112763dc551b6ef60b042a5d99d" translate="yes" xml:space="preserve">
          <source>I came across this solution twice:</source>
          <target state="translated">私はこの解決策に2度出くわしました。</target>
        </trans-unit>
        <trans-unit id="4f083c4c26ab4d3d847accb8e2f0e4fa3386e0a8" translate="yes" xml:space="preserve">
          <source>I find this easier to remember than the format for &lt;code&gt;find -exec&lt;/code&gt;.</source>
          <target state="translated">これは &lt;code&gt;find -exec&lt;/code&gt; の形式より覚えやすいと思います 。</target>
        </trans-unit>
        <trans-unit id="c8530cd3abd96eaa60662f241e4026341573cff7" translate="yes" xml:space="preserve">
          <source>I just discovered &lt;a href=&quot;https://github.com/ggreer/the_silver_searcher&quot;&gt;The Silver Searcher&lt;/a&gt;, which is like ack but 3-5x faster than it and even ignores patterns from a &lt;code&gt;.gitignore&lt;/code&gt; file.</source>
          <target state="translated">私はちょうど&lt;a href=&quot;https://github.com/ggreer/the_silver_searcher&quot;&gt;シルバーサーチャーを&lt;/a&gt;発見しました。これはackに似ていますが、それよりも3〜5倍速く、 &lt;code&gt;.gitignore&lt;/code&gt; ファイルのパターンも無視します。</target>
        </trans-unit>
        <trans-unit id="94c293b872189f77de9d064af733908d872a4fd0" translate="yes" xml:space="preserve">
          <source>I wrote a &lt;a href=&quot;https://github.com/dilawar/Scripts/blob/master/sniff.py&quot;&gt;Python script&lt;/a&gt; which does something similar. This is how one should use this script.</source>
          <target state="translated">私は似たようなことをする&lt;a href=&quot;https://github.com/dilawar/Scripts/blob/master/sniff.py&quot;&gt;Pythonスクリプト&lt;/a&gt;を書きました。 これは、このスクリプトを使用する方法です。</target>
        </trans-unit>
        <trans-unit id="d53add6a96e42290ac16c0422afb48e2164b8a75" translate="yes" xml:space="preserve">
          <source>I'm trying to find a way to scan my entire Linux system for all files containing a specific string of text. Just to clarify, I'm looking for text within the file, not in the file name.</source>
          <target state="translated">特定の文字列を含むすべてのファイルをLinuxシステム全体でスキャンする方法を見つけようとしています。はっきりさせたいのは、ファイル名ではなく、ファイル内のテキストを探しているということです。</target>
        </trans-unit>
        <trans-unit id="a708a6bfb96bc8c8874714da3140a8d037ce0410" translate="yes" xml:space="preserve">
          <source>If using &lt;strong&gt;&lt;a href=&quot;http://man7.org/linux/man-pages/man1/find.1.html&quot;&gt;find&lt;/a&gt;&lt;/strong&gt; like in your example, better add &lt;code&gt;-s&lt;/code&gt; (&lt;code&gt;--no-messages&lt;/code&gt;) to &lt;code&gt;grep&lt;/code&gt;, and &lt;code&gt;2&amp;gt;/dev/null&lt;/code&gt; at the end of the command to avoid lots of &lt;em&gt;Permission denied&lt;/em&gt; messages issued by &lt;code&gt;grep&lt;/code&gt; and &lt;code&gt;find&lt;/code&gt;:</source>
          <target state="translated">例のように&lt;strong&gt;&lt;a href=&quot;http://man7.org/linux/man-pages/man1/find.1.html&quot;&gt;find&lt;/a&gt;&lt;/strong&gt;を使用する場合、 &lt;code&gt;grep&lt;/code&gt; に &lt;code&gt;-s&lt;/code&gt; （-- &lt;code&gt;--no-messages&lt;/code&gt; ）を追加し、コマンドの最後に &lt;code&gt;2&amp;gt;/dev/null&lt;/code&gt; を追加して、 &lt;code&gt;grep&lt;/code&gt; および &lt;code&gt;find&lt;/code&gt; によって発行される多くの&lt;em&gt;Permission denied&lt;/em&gt;メッセージを回避します。</target>
        </trans-unit>
        <trans-unit id="9ba7e8395974a060ee1988ad95afbaaf0b22cee5" translate="yes" xml:space="preserve">
          <source>If you don't care about the case of the text to find, then use:</source>
          <target state="translated">見つけるためのテキストのケースを気にしないのであれば、使用してください。</target>
        </trans-unit>
        <trans-unit id="aea7f6315a9ba1a0504bc92a2c7b9f1518358805" translate="yes" xml:space="preserve">
          <source>If you strictly want to use &lt;code&gt;find&lt;/code&gt; then use &lt;strong&gt;&lt;code&gt;find + grep&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">厳密に &lt;code&gt;find&lt;/code&gt; を使用したい場合は 、 &lt;strong&gt; &lt;code&gt;find + grep&lt;/code&gt; &lt;/strong&gt;使用し&lt;strong&gt;ます&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="d835b189b69fdfe23ef64020b992a12b75793f99" translate="yes" xml:space="preserve">
          <source>If you're working on larger projects or big files, you should use &lt;code&gt;ripgrep&lt;/code&gt; instead, like:</source>
          <target state="translated">より大きなプロジェクトまたは大きなファイルで作業している場合は、代わりに &lt;code&gt;ripgrep&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="6e68624a1aeef6e7e69c8a329ae3739d3729b6d4" translate="yes" xml:space="preserve">
          <source>If you've the error that your argument is too long, consider narrowing down your search, or use &lt;code&gt;find&lt;/code&gt; syntax instead such as:</source>
          <target state="translated">引数が長すぎるというエラーが発生した場合は、検索を絞り込むか、次のような &lt;code&gt;find&lt;/code&gt; 構文を使用することを検討してください。</target>
        </trans-unit>
        <trans-unit id="04b3a75bf270c8736c1d1b58cb62eef2d7a8cd48" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;grep&lt;/code&gt; doesn't support recursive search, you can combine &lt;code&gt;find&lt;/code&gt; with &lt;code&gt;xargs&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;grep&lt;/code&gt; が再帰検索をサポートしていない場合は、 &lt;code&gt;find&lt;/code&gt; と &lt;code&gt;xargs&lt;/code&gt; を組み合わせることができます 。</target>
        </trans-unit>
        <trans-unit id="b68602b13b3252d9b1f34ded55dc17f4ccf63891" translate="yes" xml:space="preserve">
          <source>In addition to this command, we can write this too:
&lt;strong&gt;grep -rn &quot;String to search&quot; /path/to/directory/or/file&lt;/strong&gt;&lt;em&gt;-r: recursive search&lt;/em&gt;&lt;em&gt;n: line number will be shown for matches&lt;/em&gt;</source>
          <target state="translated">このコマンドに加えて、次のように書くこともできます&lt;strong&gt;。grep -rn &quot;検索する文字列&quot; / path / to / directory / or / file&lt;/strong&gt; &lt;em&gt;-r：再帰検索&lt;/em&gt; &lt;em&gt;n：一致する行番号が表示されます&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="92ee7932f3f18a8c6ac7a988159982b03706b5af" translate="yes" xml:space="preserve">
          <source>In your root directory.</source>
          <target state="translated">ルートディレクトリにある</target>
        </trans-unit>
        <trans-unit id="06cb2bb80d392143b7f4c43d5849d3ef6464636b" translate="yes" xml:space="preserve">
          <source>Is this close to the proper way to do it? If not, how should I? This ability to find text strings in files would be extraordinarily useful for some programming projects I'm doing.</source>
          <target state="translated">これは正しい方法に近いのでしょうか?そうでない場合は、どのようにすればいいのでしょうか?ファイル内のテキスト文字列を見つけるこの機能は、私がやっているいくつかのプログラミングプロジェクトで非常に便利です。</target>
        </trans-unit>
        <trans-unit id="a774439b14ea118ef27b18d280266a42c5bc4d03" translate="yes" xml:space="preserve">
          <source>It is a free utility (30 years old, proven by time) which is visual without being GUI. It has tons of functions, and finding files is just one of them.</source>
          <target state="translated">それはGUIであることなく視覚的である無料のユーティリティ(30年前、時間によって証明されています)です。それは機能のトンを持っており、ファイルを見つけることはちょうどそのうちの一つです。</target>
        </trans-unit>
        <trans-unit id="9b659bb8e6cf31d1489a01dd23e0ef307354a838" translate="yes" xml:space="preserve">
          <source>It supports ignore patterns specified in &lt;code&gt;.gitignore&lt;/code&gt; files, so a single file path can be matched against multiple glob patterns simultaneously.</source>
          <target state="translated">&lt;code&gt;.gitignore&lt;/code&gt; ファイルで指定された無視パターンをサポートしているため、単一のファイルパスを複数のグロブパターンに対して同時に照合できます。</target>
        </trans-unit>
        <trans-unit id="6c18551af31eaddefdea0c5221c416106d3dd851" translate="yes" xml:space="preserve">
          <source>It works closely with Git and other VCS. So you won't get anything in a &lt;em&gt;.git&lt;/em&gt; or another directory.</source>
          <target state="translated">Gitや他のVCSと密接に連携します。 したがって、 &lt;em&gt;.git&lt;/em&gt;または別のディレクトリには何も取得されません。</target>
        </trans-unit>
        <trans-unit id="a41df80358e35737fdd04d8d45c856394e169de1" translate="yes" xml:space="preserve">
          <source>It works just perfect...</source>
          <target state="translated">完璧に機能しています...</target>
        </trans-unit>
        <trans-unit id="02dc779d54ba80f0984a14dd2bd5dadfeda3cdef" translate="yes" xml:space="preserve">
          <source>It works on Linux, Mac and Windows, and was written up on &lt;a href=&quot;https://en.wikipedia.org/wiki/Hacker_News&quot;&gt;Hacker News&lt;/a&gt; a couple of months ago (this has a link to Andrew Gallant's Blog which has a GitHub link):</source>
          <target state="translated">Linux、Mac、Windowsで動作し、2か月前に&lt;a href=&quot;https://en.wikipedia.org/wiki/Hacker_News&quot;&gt;Hacker Newsで&lt;/a&gt;作成されました（これには、GitHubリンクのあるAndrew Gallantのブログへのリンクがあります）：</target>
        </trans-unit>
        <trans-unit id="15e4eafe4e0bef38893ad5a6c18d844cd48ad25c" translate="yes" xml:space="preserve">
          <source>It's much quicker than any other tool like &lt;a href=&quot;https://www.gnu.org/software/grep/&quot;&gt;GNU&lt;/a&gt;/&lt;a href=&quot;https://wiki.freebsd.org/BSDgrep&quot;&gt;BSD&lt;/a&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/grep&quot;&gt;&lt;code&gt;grep&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/gvansickle/ucg&quot;&gt;&lt;code&gt;ucg&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/ggreer/the_silver_searcher&quot;&gt;&lt;code&gt;ag&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/svent/sift&quot;&gt;&lt;code&gt;sift&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/petdance/ack2&quot;&gt;&lt;code&gt;ack&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/monochromegane/the_platinum_searcher&quot;&gt;&lt;code&gt;pt&lt;/code&gt;&lt;/a&gt; or similar, since it is built on top of &lt;a href=&quot;https://github.com/rust-lang/regex&quot;&gt;Rust's regex engine&lt;/a&gt; which uses finite automata, SIMD and aggressive literal optimizations to make searching very fast.</source>
          <target state="translated">&lt;a href=&quot;https://www.gnu.org/software/grep/&quot;&gt;GNU&lt;/a&gt; / &lt;a href=&quot;https://wiki.freebsd.org/BSDgrep&quot;&gt;BSD&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/grep&quot;&gt; &lt;code&gt;grep&lt;/code&gt; &lt;/a&gt; 、 &lt;a href=&quot;https://github.com/gvansickle/ucg&quot;&gt; &lt;code&gt;ucg&lt;/code&gt; &lt;/a&gt; 、 &lt;a href=&quot;https://github.com/ggreer/the_silver_searcher&quot;&gt; &lt;code&gt;ag&lt;/code&gt; &lt;/a&gt; 、 sift 、 &lt;a href=&quot;https://github.com/petdance/ack2&quot;&gt; &lt;code&gt;ack&lt;/code&gt; &lt;/a&gt; 、 &lt;a href=&quot;https://github.com/monochromegane/the_platinum_searcher&quot;&gt; &lt;code&gt;pt&lt;/code&gt; &lt;/a&gt;などのような他のどのツールよりもはるかに高速です。</target>
        </trans-unit>
        <trans-unit id="5b60559fd8e2d2e8e3af93f7c4acc4a9ffbf1885" translate="yes" xml:space="preserve">
          <source>Just do:</source>
          <target state="translated">そうしてくれ</target>
        </trans-unit>
        <trans-unit id="12aaf84cfac064109231b1b6d9af1ab6c935f688" translate="yes" xml:space="preserve">
          <source>Let's say you are searching for files containing specific text &quot;Apache License&quot; inside your directory. It will display results somewhat similar to below (output will be different based on your directory content).</source>
          <target state="translated">例えば、ディレクトリ内の特定のテキスト &quot;Apache License &quot;を含むファイルを検索しているとします。以下のような結果が表示されます(出力はディレクトリの内容によって異なります)。</target>
        </trans-unit>
        <trans-unit id="2715fcf69315a713a08f19c2951dae7384cd087e" translate="yes" xml:space="preserve">
          <source>List of file names containing a given text</source>
          <target state="translated">与えられたテキストを含むファイル名のリスト</target>
        </trans-unit>
        <trans-unit id="dc6d0b36785d242ba3a8ebbcf4dbf25bd7e18ae5" translate="yes" xml:space="preserve">
          <source>Note: You can add &lt;code&gt;2&amp;gt;/dev/null&lt;/code&gt; to these commands as well, to hide many error messages.</source>
          <target state="translated">注：これらのコマンドに &lt;code&gt;2&amp;gt;/dev/null&lt;/code&gt; を追加して、多くのエラーメッセージを非表示にすることもできます。</target>
        </trans-unit>
        <trans-unit id="e94cf882f9d6af249a3286ff0e876a2859731297" translate="yes" xml:space="preserve">
          <source>Optional flags you may want to add to &lt;code&gt;grep&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;grep&lt;/code&gt; に追加するオプションのフラグ：</target>
        </trans-unit>
        <trans-unit id="c04131c6aa29e40e72b8c85745b0ebb603cb9c9b" translate="yes" xml:space="preserve">
          <source>Or a command similar to the one you are trying (example: ) for searching in all javascript files (*.js):</source>
          <target state="translated">または、すべてのjavascriptファイル(*.js)を検索するための、あなたが試しているのと同じようなコマンド(例:)。</target>
        </trans-unit>
        <trans-unit id="4c968c9becafa7b5547dd29408163fdbb4a38dac" translate="yes" xml:space="preserve">
          <source>Remove case sensitiveness</source>
          <target state="translated">ケースのセンシティブさを取り除く</target>
        </trans-unit>
        <trans-unit id="f8902e412cfe22058c9c69526b21afdbfabcd592" translate="yes" xml:space="preserve">
          <source>Short explanation of the options:</source>
          <target state="translated">オプションの簡単な説明。</target>
        </trans-unit>
        <trans-unit id="ac2c6b17ec4c94b2c509adf1792715a7947690a7" translate="yes" xml:space="preserve">
          <source>Silver Searcher is a terrific tool, but ripgrep may be even better.</source>
          <target state="translated">Silver Searcherもすごいツールですが、ripgrepの方がもっといいかもしれません。</target>
        </trans-unit>
        <trans-unit id="0d008108039e8d6a46637f019614fb52fc64eeee" translate="yes" xml:space="preserve">
          <source>Simply running,</source>
          <target state="translated">単純に走っているだけ。</target>
        </trans-unit>
        <trans-unit id="e6bf90bd741d952794d9952a78f2f39b03a075a9" translate="yes" xml:space="preserve">
          <source>Start a new terminal and issue:</source>
          <target state="translated">新しい端末を起動して発行します。</target>
        </trans-unit>
        <trans-unit id="2e3852f71dc34243996dfcd4928e8a5569164367" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;r&lt;/code&gt; stands for recursive and so will search in the path specified and also its sub-directories. This will tell you the file name as well as print out the line in the file where the string appears.</source>
          <target state="translated">&lt;code&gt;r&lt;/code&gt; は再帰を意味し、指定されたパスとそのサブディレクトリも検索します。 これにより、ファイル名がわかり、文字列が出現するファイルの行が出力されます。</target>
        </trans-unit>
        <trans-unit id="24ce8aa1cb5bdbba3e1af44320d8a236b0505708" translate="yes" xml:space="preserve">
          <source>The below command will work fine for this approach:</source>
          <target state="translated">この方法では、以下のコマンドで問題なく動作します。</target>
        </trans-unit>
        <trans-unit id="5578c40e5c3ca636d0ba6ceea5fdec456f38d0c2" translate="yes" xml:space="preserve">
          <source>The first argument, &lt;code&gt;path&lt;/code&gt;, is the directory in which we will search recursively. The second argument, &lt;code&gt;pattern_to_search&lt;/code&gt;, is a regular expression which we want to search in a file. We use the regular expression format defined in the &lt;a href=&quot;http://en.wikipedia.org/wiki/Python_%28programming_language%29&quot;&gt;Python&lt;/a&gt;&lt;code&gt;re&lt;/code&gt; library. In this script, the &lt;code&gt;.&lt;/code&gt; also matches newline.</source>
          <target state="translated">最初の引数 &lt;code&gt;path&lt;/code&gt; は、再帰的に検索するディレクトリです。 2番目の引数 &lt;code&gt;pattern_to_search&lt;/code&gt; は、ファイルで検索する正規表現です。 &lt;a href=&quot;http://en.wikipedia.org/wiki/Python_%28programming_language%29&quot;&gt;Python&lt;/a&gt; &lt;code&gt;re&lt;/code&gt; ライブラリで定義されている正規表現形式を使用します。 このスクリプトでは、 &lt;code&gt;.&lt;/code&gt; 改行にも一致します。</target>
        </trans-unit>
        <trans-unit id="28a1d3d378e5fad44e680f4c6983c44d109bc885" translate="yes" xml:space="preserve">
          <source>The third argument, &lt;code&gt;file_pattern&lt;/code&gt;, is optional. This is another regular expression which works on a filename. Only those files which matches this regular expression will be considered.</source>
          <target state="translated">3番目の引数 &lt;code&gt;file_pattern&lt;/code&gt; はオプションです。 これは、ファイル名に対して機能する別の正規表現です。 この正規表現に一致するファイルのみが考慮されます。</target>
        </trans-unit>
        <trans-unit id="c30336d043cb9476105d0e6537e8deddadfcb5bd" translate="yes" xml:space="preserve">
          <source>Then go to the directory you want to search and run the command below</source>
          <target state="translated">そして、検索したいディレクトリに移動し、以下のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="39cdb145375e3143b55913227b0d818447fd266b" translate="yes" xml:space="preserve">
          <source>There is an &lt;code&gt;ack&lt;/code&gt; tool that would do exactly what you are looking for.</source>
          <target state="translated">あなたが探しているものを正確に実行する &lt;code&gt;ack&lt;/code&gt; ツールがあります。</target>
        </trans-unit>
        <trans-unit id="1cce713d9dfcf8a8610002c778a746e705d0eb3b" translate="yes" xml:space="preserve">
          <source>There's a new utility called &lt;strong&gt;The Silversearcher&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;The Silversearcher&lt;/strong&gt;と呼ばれる新しいユーティリティがあります</target>
        </trans-unit>
        <trans-unit id="e5388b3659c1bfddce9794669c5321f681f8941f" translate="yes" xml:space="preserve">
          <source>This will exclude searching all the files ending with .o extension:</source>
          <target state="translated">これにより、拡張子が.oで終わるすべてのファイルの検索が除外されます。</target>
        </trans-unit>
        <trans-unit id="c01680658b8e6d87b16ba97e992a2081e2079e56" translate="yes" xml:space="preserve">
          <source>This will only search through those files which have .c or .h extensions:</source>
          <target state="translated">これは.cまたは.hの拡張子を持つファイルのみを検索します。</target>
        </trans-unit>
        <trans-unit id="ba3d87a4af2e113f1b7494eb4554c1fd1198351e" translate="yes" xml:space="preserve">
          <source>This will output the filename and the content of the matched line, e.g.</source>
          <target state="translated">これはファイル名とマッチした行の内容を出力します。</target>
        </trans-unit>
        <trans-unit id="422dc921c4c6c8c001ceba77c6e9098e06176866" translate="yes" xml:space="preserve">
          <source>This will print the lines in the files where the text appears, but it does not print the file name.</source>
          <target state="translated">これはテキストが表示されているファイルの行を印刷しますが、ファイル名は印刷されません。</target>
        </trans-unit>
        <trans-unit id="8c73b8bf7ccb55a0cc6edf21c1987db3e30d82a3" translate="yes" xml:space="preserve">
          <source>This will report how many copies of your pattern are there in each of the files in the current directory.</source>
          <target state="translated">これは、カレントディレクトリ内の各ファイルにパターンのコピーが何枚あるかを報告します。</target>
        </trans-unit>
        <trans-unit id="632cd31a01792f346c77873b91d2d22299f88493" translate="yes" xml:space="preserve">
          <source>This works very well for me, to achieve almost the same purpose like yours.</source>
          <target state="translated">これは、あなたのようなほぼ同じ目的を達成するために、私にとって非常によく機能します。</target>
        </trans-unit>
        <trans-unit id="8e16cce8ba7e1cb6468d51b12b722a1fc52ec2ec" translate="yes" xml:space="preserve">
          <source>To display filename containing the search string:</source>
          <target state="translated">検索文字列を含むファイル名を表示します。</target>
        </trans-unit>
        <trans-unit id="31dff0802859d357af975e37fb387f89b8e0f8fb" translate="yes" xml:space="preserve">
          <source>To search for the string and output just that line with the search string:</source>
          <target state="translated">文字列を検索して、その行だけを検索文字列で出力するには</target>
        </trans-unit>
        <trans-unit id="102acb4ebe4f9295900af5f522c91830395377c0" translate="yes" xml:space="preserve">
          <source>Try:</source>
          <target state="translated">Try:</target>
        </trans-unit>
        <trans-unit id="904be640941a6df70e6a532a9223485d4eb1e453" translate="yes" xml:space="preserve">
          <source>Use '-r' without 'l' to see the file names followed by &lt;strong&gt;text in which the pattern is found&lt;/strong&gt;!</source>
          <target state="translated">'l'を付けずに '-r'を使用する&lt;strong&gt;と、パターンが見つかっ&lt;/strong&gt;た&lt;strong&gt;テキストが&lt;/strong&gt;後に続くファイル名が表示され&lt;strong&gt;ます&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="be730a5fb451a6304eb10a7b9eb48f9398fae3be" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;-name Pattern&lt;/code&gt; if you want to &lt;code&gt;grep&lt;/code&gt; only certain files:</source>
          <target state="translated">特定のファイルのみを &lt;code&gt;grep&lt;/code&gt; する場合は、 &lt;code&gt;-name Pattern&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="e75332ce84ae5819f86de7ec5a3e46e92c5ba6d0" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;pwd&lt;/code&gt; to search from any directory you are in, recursing downward</source>
          <target state="translated">&lt;code&gt;pwd&lt;/code&gt; を使用して、現在のディレクトリから検索し、下方向に再帰します</target>
        </trans-unit>
        <trans-unit id="bc0e34154d952ed72b15f5d9618112640d548177" translate="yes" xml:space="preserve">
          <source>Use:</source>
          <target state="translated">Use:</target>
        </trans-unit>
        <trans-unit id="d900e1150f348d50c88a7b07413de3ede1673107" translate="yes" xml:space="preserve">
          <source>When I was looking up how to do this, I came across this solution twice:</source>
          <target state="translated">どうすればいいのか調べていたら、この解決策に2回も出くわしました。</target>
        </trans-unit>
        <trans-unit id="bd2e2300fc4454e3f492b2058d090d33c83828f9" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;http://en.wikipedia.org/wiki/Regular_expression&quot;&gt;regular expressions&lt;/a&gt;, specify the filetype, etc.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Regular_expression&quot;&gt;正規表現を&lt;/a&gt;使用したり、ファイルタイプを指定したりすることもできます。</target>
        </trans-unit>
        <trans-unit id="a0349c91758fa05265cf99f56956daa33d3d1e43" translate="yes" xml:space="preserve">
          <source>You can also use globbing syntax to search within specific files such as:</source>
          <target state="translated">また、グロブ構文を使用して、以下のように特定のファイル内を検索することもできます。</target>
        </trans-unit>
        <trans-unit id="db4618c0f46707ab9174a88634795edf7a49ca2f" translate="yes" xml:space="preserve">
          <source>You can play with it and use different options of &lt;code&gt;find&lt;/code&gt; to improve or narrow down your file search.</source>
          <target state="translated">それを試して、 &lt;code&gt;find&lt;/code&gt; さまざまなオプションを使用して、ファイル検索を改善または絞り込むことができます。</target>
        </trans-unit>
        <trans-unit id="c0b5171ebd919c59caf2b7d024dad3c8bdafbee4" translate="yes" xml:space="preserve">
          <source>You can simply use</source>
          <target state="translated">単純に</target>
        </trans-unit>
        <trans-unit id="2bbc97fe326d8cb48aa320474efa76caf309dc58" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;http://beyondgrep.com/&quot;&gt;ack&lt;/a&gt;. It is like &lt;a href=&quot;http://en.wikipedia.org/wiki/Grep&quot;&gt;grep&lt;/a&gt; for source code. You can scan your entire file system with it.</source>
          <target state="translated">&lt;a href=&quot;http://beyondgrep.com/&quot;&gt;ack&lt;/a&gt;を使用できます。 ソースコードの&lt;a href=&quot;http://en.wikipedia.org/wiki/Grep&quot;&gt;grepの&lt;/a&gt;ようなものです。 それでファイルシステム全体をスキャンできます。</target>
        </trans-unit>
        <trans-unit id="cbea126adcfd6e1dca2abbdd3e3afa6c8ae3d3df" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;grep -ilR&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;grep -ilR&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="c274cd4b62fac2f46ca20e3ff78e1f6aaad793d0" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;grep&lt;/code&gt; tool to search recursively the current folder, like:</source>
          <target state="translated">&lt;code&gt;grep&lt;/code&gt; ツールを使用して、次のように現在のフォルダーを再帰的に検索できます。</target>
        </trans-unit>
        <trans-unit id="6239e09afd0f1ee8697bad61254e2f2d08edc17b" translate="yes" xml:space="preserve">
          <source>You can use the common parameters such as:</source>
          <target state="translated">などの一般的なパラメータを使用することができます。</target>
        </trans-unit>
        <trans-unit id="c5b799049d31606a4bf737328c6f8e5743e4e30d" translate="yes" xml:space="preserve">
          <source>You can use this:</source>
          <target state="translated">これを使えばいいんです。</target>
        </trans-unit>
        <trans-unit id="28ce5baaf2a7e364a9e6393430ef2a639312b251" translate="yes" xml:space="preserve">
          <source>You can use:</source>
          <target state="translated">使えます。</target>
        </trans-unit>
        <trans-unit id="37d314dec4e736b0c69183e086901299a5bf50fc" translate="yes" xml:space="preserve">
          <source>You may ignore &lt;code&gt;-i&lt;/code&gt; for case sensitive search</source>
          <target state="translated">大文字と小文字を区別する検索では &lt;code&gt;-i&lt;/code&gt; を無視できます</target>
        </trans-unit>
        <trans-unit id="4f7f64c1613218412d7173f07c7407d18b5776a8" translate="yes" xml:space="preserve">
          <source>e.g.:</source>
          <target state="translated">e.g.:</target>
        </trans-unit>
        <trans-unit id="2b78a29b9875eb429cab7db53a296803a2a90fb8" translate="yes" xml:space="preserve">
          <source>find is a command that lets you find files and other objects like directories and links in subdirectories of a given path. If you don't specify a mask that filesnames should meet, it enumerates all directory objects.</source>
          <target state="translated">find は、指定したパスのサブディレクトリ内のディレクトリやリンクなどのファイルやその他のオブジェクトを見つけるためのコマンドです。ファイル名が満たすべきマスクを指定しない場合は、すべてのディレクトリオブジェクトを列挙します。</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="70c0c09b453040d2a1fdf0fa4850382e0a3cf92a" translate="yes" xml:space="preserve">
          <source>steps:</source>
          <target state="translated">steps:</target>
        </trans-unit>
        <trans-unit id="2d7c7608020ca5690b322d2cd962378d5d172ee4" translate="yes" xml:space="preserve">
          <source>which will search all file systems, because &lt;code&gt;/&lt;/code&gt; is the root folder.</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; はルートフォルダーであるため、すべてのファイルシステムを検索します。</target>
        </trans-unit>
        <trans-unit id="188f4fdbfcd3f6408a8d072d8ef5a2d0852b5e43" translate="yes" xml:space="preserve">
          <source>will do the same thing as above!</source>
          <target state="translated">は上記と同じことをします!</target>
        </trans-unit>
        <trans-unit id="be0563556c88ffc75ecd3d4114d463101c503b74" translate="yes" xml:space="preserve">
          <source>will print out the path to all text files, i.e. those containing only printable characters.</source>
          <target state="translated">はすべてのテキストファイル、つまり印刷可能な文字のみを含むファイルへのパスを印刷します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
