<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/1628088">
    <body>
      <group id="1628088">
        <trans-unit id="b7c5dd599473b7bd24bbf278876639d88d886c8e" translate="yes" xml:space="preserve">
          <source>* assumes your .git files aren't corrupt</source>
          <target state="translated">*asume que tus archivos .git no están corruptos</target>
        </trans-unit>
        <trans-unit id="2b80e53a3cbe88a91abd4c1aea24c7d121a3b629" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git clean -d --force&lt;/code&gt;&lt;sub&gt;&lt;sup&gt;Removes untracked files and directories which hinder git to say &amp;ldquo;working directory clean&amp;rdquo;.&lt;/sup&gt;&lt;/sub&gt;</source>
          <target state="translated">&lt;code&gt;git clean -d --force&lt;/code&gt; &lt;sub&gt;&lt;sup&gt;Elimina archivos y directorios no rastreados que dificultan que git diga &quot;limpieza de directorio de trabajo&quot;.&lt;/sup&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="5a06f9fea91d79966b1435341d11edca8243c9f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git fetch --prune&lt;/code&gt;&lt;sub&gt;&lt;sup&gt;(optional) Updates the local snapshot of the remote repo. Further commands are local only.&lt;/sup&gt;&lt;/sub&gt;</source>
          <target state="translated">&lt;code&gt;git fetch --prune&lt;/code&gt; &lt;sub&gt;&lt;sup&gt;(opcional) Actualiza la instant&amp;aacute;nea local del repositorio remoto.&lt;/sup&gt;&lt;/sub&gt; &lt;sub&gt;&lt;sup&gt;Otros comandos son solo locales.&lt;/sup&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="ca7d14a2015105f8e76bd9806be5cec9a42c111e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git fetch origin&lt;/code&gt; downloads the latest from remote without trying to merge or rebase anything.</source>
          <target state="translated">&lt;code&gt;git fetch origin&lt;/code&gt; descarga lo &amp;uacute;ltimo desde el control remoto sin intentar fusionar o volver a crear nada.</target>
        </trans-unit>
        <trans-unit id="a86a9e9ddeb3946c72874be0d7c53e98bbf4c6df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git reset --hard @{upstream}&lt;/code&gt;&lt;sub&gt;&lt;sup&gt;Puts the local branch pointer to where the snapshot of the remote is, as well as set the index and the working directory to the files of that commit.&lt;/sup&gt;&lt;/sub&gt;</source>
          <target state="translated">&lt;code&gt;git reset --hard @{upstream}&lt;/code&gt; &lt;sub&gt;&lt;sup&gt;Coloca el puntero de la rama local donde se encuentra la instant&amp;aacute;nea del control remoto, as&amp;iacute; como establece el &amp;iacute;ndice y el directorio de trabajo en los archivos de esa confirmaci&amp;oacute;n.&lt;/sup&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="f66d6d1ea03f90db50e2727159826a8c090a1c9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git reset --hard HEAD&lt;/code&gt; actually only resets to the last committed state. In this case HEAD refers to the HEAD of your branch.</source>
          <target state="translated">&lt;code&gt;git reset --hard HEAD&lt;/code&gt; en realidad solo se restablece al &amp;uacute;ltimo estado comprometido. En este caso, HEAD se refiere a la HEAD de su rama.</target>
        </trans-unit>
        <trans-unit id="87b9d88918c5866a66ff7131a43ad669fceb1830" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How it works:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;C&amp;oacute;mo funciona:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dce57b9082e7a1425f18ee70331d2033b230ea48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The one-stop-answer is:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;La respuesta &amp;uacute;nica es:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3104ad444d46bf10a4ba85ab26694ef63154971b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The question mixes two issues here:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;La pregunta mezcla dos cuestiones aqu&amp;iacute;:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="91e47202f9d714a74f39bd1c83e48ec081f2b8a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: &lt;code&gt;git clean -x -d -f&lt;/code&gt; is &lt;em&gt;irreversible&lt;/em&gt; and you may lose files and data (e.g. things you have ignored using &lt;code&gt;.gitignore&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;Advertencia&lt;/strong&gt; : &lt;code&gt;git clean -x -d -f&lt;/code&gt; es &lt;em&gt;irreversible&lt;/em&gt; y puede perder archivos y datos (por ejemplo, cosas que ha ignorado usando &lt;code&gt;.gitignore&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1cfd1982343cecfe6ecc8b1adfda0e01ca27d467" translate="yes" xml:space="preserve">
          <source>All of the above suggests are right, but often to &lt;em&gt;really&lt;/em&gt; reset your project, you also need to remove even files that are in your &lt;code&gt;.gitignore&lt;/code&gt;.</source>
          <target state="translated">Todas las sugerencias anteriores son correctas, pero a menudo para &lt;em&gt;realmente&lt;/em&gt; restablecer su proyecto, tambi&amp;eacute;n necesita eliminar incluso los archivos que est&amp;aacute;n en su &lt;code&gt;.gitignore&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86bda52590b1e52b365b3f4160556578ba1a63a8" translate="yes" xml:space="preserve">
          <source>Also, you go for reset the current branch of &lt;code&gt;origin&lt;/code&gt; to &lt;code&gt;HEAD&lt;/code&gt;.</source>
          <target state="translated">Adem&amp;aacute;s, debe restablecer la rama de &lt;code&gt;origin&lt;/code&gt; actual a &lt;code&gt;HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8316cb5450ca7f337bb3c6698e131ffa516f787" translate="yes" xml:space="preserve">
          <source>As for your specific question as to why those files appear in the status as modified, it looks like perhaps you did a soft reset instead of a hard reset.  This will cause the files that were changed in the &lt;code&gt;HEAD&lt;/code&gt; commit to appear as if they were staged, which is likely what you are seeing here.</source>
          <target state="translated">En cuanto a su pregunta espec&amp;iacute;fica de por qu&amp;eacute; esos archivos aparecen en el estado modificado, parece que quiz&amp;aacute;s hizo un restablecimiento parcial en lugar de un restablecimiento completo. Esto har&amp;aacute; que los archivos que se modificaron en la confirmaci&amp;oacute;n &lt;code&gt;HEAD&lt;/code&gt; aparezcan como si estuvieran en escena, lo que probablemente es lo que est&amp;aacute; viendo aqu&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="6376de0afc8a12bbf623e0a8165838bebd8c5778" translate="yes" xml:space="preserve">
          <source>BTW, this situation that you're in looks an awful lot like a common case where a push has been done into the currently checked out branch of a non-bare repository. Did you recently push into your local repo? If not, then no worries -- something else must have caused these files to unexpectedly end up modified. Otherwise, you should be aware that it's not recommended to push into a non-bare repository (and not into the currently checked-out branch, in particular).</source>
          <target state="translated">Por cierto,esta situación en la que estás se parece mucho a un caso común en el que se ha hecho un empuje en la rama actualmente comprobada de un repositorio no descubierto.¿Recientemente empujaste en tu repositorio local? Si no,no te preocupes,algo más debe haber causado que estos archivos terminen modificados inesperadamente.De lo contrario,debe tener en cuenta que no se recomienda hacer un push en un repositorio no desnudo (y no en la rama actualmente revisada,en particular).</target>
        </trans-unit>
        <trans-unit id="38ebbdb0428983e332bf4bd6d6521d5ec20bedf3" translate="yes" xml:space="preserve">
          <source>Be careful though. Hard resets cannot easily be undone. It is better to do as Dan suggests, and branch off a copy of your changes before resetting.</source>
          <target state="translated">Pero ten cuidado.Los reinicios no se pueden deshacer fácilmente.Es mejor hacer lo que Dan sugiere,y hacer una copia de los cambios antes de reiniciar.</target>
        </trans-unit>
        <trans-unit id="5c8b1ef19d77ab6304905a29da2c322cc95c1042" translate="yes" xml:space="preserve">
          <source>But when I run a &lt;code&gt;git status&lt;/code&gt;,</source>
          <target state="translated">Pero cuando ejecuto un &lt;code&gt;git status&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="76db3773a26afa2e3213b3eab913192a7120a272" translate="yes" xml:space="preserve">
          <source>Can you please tell me why I have these 'modified'? I haven't touched these files? If I did, I want to remove those.</source>
          <target state="translated">¿Puedes decirme por qué tengo estos &quot;modificados&quot;? ¿No he tocado estos archivos? Si lo hice,quiero eliminarlos.</target>
        </trans-unit>
        <trans-unit id="e73bd79543051cc326d6ad174e0bdce1b82adfb4" translate="yes" xml:space="preserve">
          <source>Check your remotes, make sure your upstream and origin are what you expect, if not as expected then use &lt;code&gt;git remote add upstream &amp;lt;insert URL&amp;gt;&lt;/code&gt;, e.g. of the original GitHub repo that you forked from, and/or &lt;code&gt;git remote add origin &amp;lt;insert URL of the forked GitHub repo&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Verifique sus controles remotos, aseg&amp;uacute;rese de que su origen y origen sean los que espera, si no es como se esperaba, use &lt;code&gt;git remote add upstream &amp;lt;insert URL&amp;gt;&lt;/code&gt; , por ejemplo, del repositorio original de GitHub del que bifurc&amp;oacute;, y / o &lt;code&gt;git remote add origin &amp;lt;insert URL of the forked GitHub repo&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61446bcf307102157ed7dbb36eed7999ff90eb2f" translate="yes" xml:space="preserve">
          <source>Finally, as needed, get the latest changes:</source>
          <target state="translated">Por último,según sea necesario,obtener los últimos cambios:</target>
        </trans-unit>
        <trans-unit id="787b9668c0e9d9acfbb39a389226fa7d5e788beb" translate="yes" xml:space="preserve">
          <source>First, reset to the previously fetched &lt;code&gt;HEAD&lt;/code&gt; of the corresponding upstream branch:</source>
          <target state="translated">Primero, restablezca el &lt;code&gt;HEAD&lt;/code&gt; obtenido previamente de la rama ascendente correspondiente:</target>
        </trans-unit>
        <trans-unit id="e3104999f51b9b30d33823de15a7ea27480d5e5f" translate="yes" xml:space="preserve">
          <source>Followed by:</source>
          <target state="translated">Seguido de:</target>
        </trans-unit>
        <trans-unit id="be64a46da1cd2aacb95a11143fd2908f0922ad72" translate="yes" xml:space="preserve">
          <source>Fortunately I didn't have any other branches I cared about.</source>
          <target state="translated">Afortunadamente no tenía otras ramas que me importaran.</target>
        </trans-unit>
        <trans-unit id="896f6fda05f984da67c66c3ac56ddf5d4500d262" translate="yes" xml:space="preserve">
          <source>Have you forgotten to create a feature-branch and have committed directly on master by mistake?</source>
          <target state="translated">¿Ha olvidado crear una rama de características y ha cometido directamente sobre el maestro por error?</target>
        </trans-unit>
        <trans-unit id="438d3f87a07443d5e97c2ea6ce1c740d7ee3d4e6" translate="yes" xml:space="preserve">
          <source>Here is a script that automates what the most popular answer suggests ...
See &lt;a href=&quot;https://stackoverflow.com/a/13308579/1497139&quot;&gt;https://stackoverflow.com/a/13308579/1497139&lt;/a&gt; for an improved version that supports branches</source>
          <target state="translated">Aqu&amp;iacute; hay un script que automatiza lo que sugiere la respuesta m&amp;aacute;s popular ... Consulte &lt;a href=&quot;https://stackoverflow.com/a/13308579/1497139&quot;&gt;https://stackoverflow.com/a/13308579/1497139&lt;/a&gt; para obtener una versi&amp;oacute;n mejorada que admite sucursales</target>
        </trans-unit>
        <trans-unit id="430ef6313973a77582ba0a013ca6d7b1dd95cd62" translate="yes" xml:space="preserve">
          <source>How do I reset my local branch to be just like the branch on the remote repository?</source>
          <target state="translated">¿Cómo puedo restablecer mi sucursal local para que sea igual a la sucursal del repositorio remoto?</target>
        </trans-unit>
        <trans-unit id="dbd131e78f7989788308807f5cc0a6e882f2ae79" translate="yes" xml:space="preserve">
          <source>I also added an &quot;are you sure&quot; prompt, &amp;amp; some feedback output</source>
          <target state="translated">Tambi&amp;eacute;n agregu&amp;eacute; un mensaje &quot;&amp;iquest;est&amp;aacute;s seguro?&quot; Y algunos resultados</target>
        </trans-unit>
        <trans-unit id="8b23435297d06f0f532540f5ebfe3115401eca74" translate="yes" xml:space="preserve">
          <source>I did:</source>
          <target state="translated">Yo lo hice:</target>
        </trans-unit>
        <trans-unit id="4a95767b928637e8e79611b706d6f812f23455e1" translate="yes" xml:space="preserve">
          <source>I had 2 not needed commits, hence the number 2. You can change it to your own number of commits to reset.</source>
          <target state="translated">Tenía 2 no necesitaban compromisos,de ahí el número 2.Puedes cambiarlo a tu propio número de confirmaciones para reiniciar.</target>
        </trans-unit>
        <trans-unit id="f0fa2991b071e50a7c1e93d04a5f06d9f740313a" translate="yes" xml:space="preserve">
          <source>I needed to do (the solution in the accepted answer):</source>
          <target state="translated">que necesitaba hacer (la solución en la respuesta aceptada):</target>
        </trans-unit>
        <trans-unit id="76be46a31f9b3aeca7508d0c72b4e06a1ea3c728" translate="yes" xml:space="preserve">
          <source>If branch &quot;mybranch&quot; is &lt;strong&gt;not&lt;/strong&gt; currently checked out, to reset it to remote branch &quot;myremote/mybranch&quot;'s head, you can use this &lt;a href=&quot;http://schacon.github.io/git/git.html#_low_level_commands_plumbing&quot;&gt;low-level&lt;/a&gt; command:</source>
          <target state="translated">Si la rama &quot;mybranch&quot; &lt;strong&gt;no&lt;/strong&gt; est&amp;aacute; desprotegida actualmente, para restablecerla a la cabeza de la rama remota &quot;myremote / mybranch&quot;, puede usar este comando de &lt;a href=&quot;http://schacon.github.io/git/git.html#_low_level_commands_plumbing&quot;&gt;bajo nivel&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="68440e41acdb368524d7755f5a89e2ffaf1b724d" translate="yes" xml:space="preserve">
          <source>If you don't mind saving your local changes, yet still want to update your repository to match origin/HEAD, you can simply stash your local changes and then pull:</source>
          <target state="translated">Si no te importa guardar tus cambios locales,pero aún así quieres actualizar tu repositorio para que coincida con originHEAD,puedes simplemente guardar tus cambios locales y luego tirar:</target>
        </trans-unit>
        <trans-unit id="768505b684bb89cf7ddeded6078305cc207bfd5b" translate="yes" xml:space="preserve">
          <source>If you had a problem as me, that you have already committed some changes, but now, for any reason you want to get rid of it, the quickest way is to use &lt;code&gt;git reset&lt;/code&gt; like this:</source>
          <target state="translated">Si tuvo un problema como yo, que ya ha cometido algunos cambios, pero ahora, por cualquier motivo, desea deshacerse de &amp;eacute;l, la forma m&amp;aacute;s r&amp;aacute;pida es usar &lt;code&gt;git reset&lt;/code&gt; de esta manera:</target>
        </trans-unit>
        <trans-unit id="a77b296a2e0b8429914884cc43ffd630635fb5ee" translate="yes" xml:space="preserve">
          <source>If you have several commits, this won't work..</source>
          <target state="translated">Si tienes varios compromisos,esto no funcionará...</target>
        </trans-unit>
        <trans-unit id="3fa501f9e5b0d7d83d708c4cfbc33dbd5c371072" translate="yes" xml:space="preserve">
          <source>If you want to go back to the &lt;code&gt;HEAD&lt;/code&gt; state for both the working directory and the index, then you should &lt;code&gt;git reset --hard HEAD&lt;/code&gt;, rather than to &lt;code&gt;HEAD^&lt;/code&gt;. (This may have been a typo, just like the single versus double dash for &lt;code&gt;--hard&lt;/code&gt;.)</source>
          <target state="translated">Si desea volver al estado &lt;code&gt;HEAD&lt;/code&gt; tanto para el directorio de trabajo como para el &amp;iacute;ndice, debe &lt;code&gt;git reset --hard HEAD&lt;/code&gt; , en lugar de &lt;code&gt;HEAD^&lt;/code&gt; . (Esto puede haber sido un error tipogr&amp;aacute;fico, al igual que el gui&amp;oacute;n simple versus doble para &lt;code&gt;--hard&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4dc7d92448cccbeb6f525d9e0e157903b6d37c76" translate="yes" xml:space="preserve">
          <source>If you want to reset your local branch to the latest commit in the upstream branch, what works for me so far is:</source>
          <target state="translated">Si quieres reajustar tu rama local al último compromiso de la rama de arriba,lo que me funciona hasta ahora es:</target>
        </trans-unit>
        <trans-unit id="8fc88c74d9df8ad8f192bbf2f68e255fe5176230" translate="yes" xml:space="preserve">
          <source>If you want to save your current branch's state before doing this (just in case), you can do:</source>
          <target state="translated">Si quieres salvar el estado de tu sucursal actual antes de hacer esto (por si acaso),puedes hacerlo:</target>
        </trans-unit>
        <trans-unit id="5d2984d4d5bb10b9f54763a52f2a0cb87a35b7b8" translate="yes" xml:space="preserve">
          <source>Next, as needed, remove untracked files, optionally also with &lt;code&gt;-x&lt;/code&gt;:</source>
          <target state="translated">A continuaci&amp;oacute;n, seg&amp;uacute;n sea necesario, elimine los archivos no rastreados, opcionalmente tambi&amp;eacute;n con &lt;code&gt;-x&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="92b5c14091994ef039439e4e9e6449bfef29b6f7" translate="yes" xml:space="preserve">
          <source>No amount of reset and cleaning seemed to have any effect on untracked and modified files in my local git repo (I tried all the options above). My only solution to this was to rm the local repo and re-clone it from the remote.</source>
          <target state="translated">Ninguna cantidad de reinicio y limpieza parecía tener efecto alguno en los archivos no rastreados y modificados en mi repositorio local de git (intenté todas las opciones anteriores).Mi única solución a esto fue resetear el repositorio local y volver a clonarlo desde el remoto.</target>
        </trans-unit>
        <trans-unit id="e2051d2c3371377634ff95f72bc156f14b1946b9" translate="yes" xml:space="preserve">
          <source>Note that instead of upstream/develop you could use a commit hash, other branch name, etc. Use a CLI tool such as Oh My Zsh to check that your branch is green indicating that there is nothing to commit and the working directory is clean (which is confirmed or also verifiable by &lt;code&gt;git status&lt;/code&gt;). Note that this may actually add commits compared to upstream develop if there is anything automatically added by a commit, e.g. UML diagrams, license headers, etc., so in that case, you could then pull the changes on &lt;code&gt;origin develop&lt;/code&gt; to &lt;code&gt;upstream develop&lt;/code&gt;, if needed.</source>
          <target state="translated">Tenga en cuenta que en lugar de upstream / desarrollo, podr&amp;iacute;a usar un hash de confirmaci&amp;oacute;n, otro nombre de rama, etc. Use una herramienta CLI como Oh My Zsh para verificar que su rama sea verde, lo que indica que no hay nada que confirmar y que el directorio de trabajo est&amp;aacute; limpio ( que se confirma o tambi&amp;eacute;n es verificable por el &lt;code&gt;git status&lt;/code&gt; ). Tenga en cuenta que esto en realidad puede agregar confirmaciones en comparaci&amp;oacute;n con el desarrollo ascendente si hay algo agregado autom&amp;aacute;ticamente por una confirmaci&amp;oacute;n, por ejemplo, diagramas UML, encabezados de licencia, etc., por lo que en ese caso, podr&amp;iacute;a extraer los cambios en el &lt;code&gt;origin develop&lt;/code&gt; para el &lt;code&gt;upstream develop&lt;/code&gt; , si necesario.</target>
        </trans-unit>
        <trans-unit id="9e11e9c96afe5a79ffc753908539e02eb805353f" translate="yes" xml:space="preserve">
          <source>Note that it is good practice not to make changes to your local master/develop branch, but instead checkout to another branch for any change, with the branch name prepended by the type of change, e.g. &lt;code&gt;feat/&lt;/code&gt;, &lt;code&gt;chore/&lt;/code&gt;, &lt;code&gt;fix/&lt;/code&gt;, etc. Thus you only need to pull changes, not push any changes from master. Same thing for other branches that others contribute to. So the above should only be used if you have happened to commit changes to a branch that others have committed to, and need to reset. Otherwise in future avoid pushing to a branch that others push to, instead checkout and push to the said branch via the checked out branch.</source>
          <target state="translated">Tenga en cuenta que es una buena pr&amp;aacute;ctica no realizar cambios en su rama local de desarrollo / maestro, sino que en su lugar realice el pago en otra rama para cualquier cambio, con el nombre de la rama precedido por el tipo de cambio, por ejemplo, &lt;code&gt;feat/&lt;/code&gt; , &lt;code&gt;chore/&lt;/code&gt; , &lt;code&gt;fix/&lt;/code&gt; , etc. Por lo tanto, solo necesita realizar cambios, no impulsar ning&amp;uacute;n cambio desde el maestro. Lo mismo para otras ramas a las que otros contribuyen. Por lo tanto, lo anterior solo debe usarse si ha cometido cambios en una rama a la que otros se han comprometido y necesita restablecerse. De lo contrario, en el futuro, evite presionar a una rama a la que otros presionan, en lugar de pagar y enviar a dicha rama a trav&amp;eacute;s de la rama retirada.</target>
        </trans-unit>
        <trans-unit id="01ef3d499838982aa13f175969bfe29c96ab7c4f" translate="yes" xml:space="preserve">
          <source>Note that the first example assumes that the remote repo's name is &quot;origin&quot; and that the branch named &quot;master&quot; in the remote repo matches the currently checked-out branch in your local repo.</source>
          <target state="translated">Obsérvese que el primer ejemplo supone que el nombre del repo remoto es &quot;origen&quot; y que la rama denominada &quot;maestro&quot; en el repo remoto coincide con la rama actualmente comprobada en su repo local.</target>
        </trans-unit>
        <trans-unit id="9e27e83a26c5015a0895d4462a7317368d6883ba" translate="yes" xml:space="preserve">
          <source>Notice that you will lose the changes you've made, so be careful!</source>
          <target state="translated">Fíjese que perderá los cambios que ha hecho,¡así que tenga cuidado!</target>
        </trans-unit>
        <trans-unit id="7cd4b3d709ccbc7c50e91ae8854babd3e7e20936" translate="yes" xml:space="preserve">
          <source>Now your work is saved on the branch &quot;my-saved-work&quot; in case you decide you want it back (or want to look at it later or diff it against your updated branch).</source>
          <target state="translated">Ahora tu trabajo está guardado en la rama &quot;mi-trabajo guardado&quot; en caso de que decidas que lo quieres de vuelta (o quieras mirarlo más tarde o diferenciarlo de tu rama actualizada).</target>
        </trans-unit>
        <trans-unit id="602e8545f6a99d1bc5dd567a5a5cd759d60d91c5" translate="yes" xml:space="preserve">
          <source>On GitHub, you can also checkout the branch with the same name as the local one, in order to save the work there, although this isn't necessary if origin develop has the same changes as the local saved-work branch. I'm using the develop branch as an example, but it can be any existing branch name.</source>
          <target state="translated">En GitHub,también puedes comprobar la rama con el mismo nombre que la local,para guardar el trabajo allí,aunque esto no es necesario si el desarrollo del origen tiene los mismos cambios que la rama de trabajo guardada local.Estoy usando la rama de desarrollo como ejemplo,pero puede ser cualquier nombre de rama existente.</target>
        </trans-unit>
        <trans-unit id="f407dfa1340086653b5547fde530651270310b2f" translate="yes" xml:space="preserve">
          <source>Only 3 commands will make it work</source>
          <target state="translated">Sólo 3 comandos harán que funcione</target>
        </trans-unit>
        <trans-unit id="0bbef6306bd32f4bf914905e62f9fa8b92ceaddc" translate="yes" xml:space="preserve">
          <source>Previous answers assume that the branch to be reset is the current branch (checked out). In comments, OP &lt;em&gt;hap497&lt;/em&gt; clarified that the branch is indeed checked out, but this is not explicitly required by the original question. Since there is at least one &quot;duplicate&quot; question, &lt;a href=&quot;https://stackoverflow.com/questions/27385949/reset-branch-completely-to-repository-state&quot;&gt;Reset branch completely to repository state&lt;/a&gt;, which does not assume that the branch is checked out, here's an alternative:</source>
          <target state="translated">Las respuestas anteriores suponen que la rama a restablecer es la rama actual (desprotegida). En los comentarios, OP &lt;em&gt;hap497&lt;/em&gt; aclar&amp;oacute; que la rama est&amp;aacute; desprotegida, pero la pregunta original no lo requiere expl&amp;iacute;citamente. Como hay al menos una pregunta &quot;duplicada&quot;, &lt;a href=&quot;https://stackoverflow.com/questions/27385949/reset-branch-completely-to-repository-state&quot;&gt;restablezca la rama completamente al estado del repositorio&lt;/a&gt; , lo que no supone que la rama est&amp;eacute; desprotegida, aqu&amp;iacute; hay una alternativa:</target>
        </trans-unit>
        <trans-unit id="b75a75ff8e26600ed9036663a14b65f172230cda" translate="yes" xml:space="preserve">
          <source>Provided that the remote repository is &lt;code&gt;origin&lt;/code&gt;, and that you're interested in &lt;code&gt;branch_name&lt;/code&gt;:</source>
          <target state="translated">Siempre que el repositorio remoto sea de &lt;code&gt;origin&lt;/code&gt; y que est&amp;eacute; interesado en &lt;code&gt;branch_name&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="80dadf8fcd42d7c5ddbd03379233401ea5695869" translate="yes" xml:space="preserve">
          <source>Reset local repository branch to be just like remote repository HEAD</source>
          <target state="translated">Reiniciar la rama del repositorio local para que sea como el repositorio remoto CABEZA</target>
        </trans-unit>
        <trans-unit id="625739de9bebf7312edde965ac2eed3b668854d8" translate="yes" xml:space="preserve">
          <source>Setting your branch to exactly match the remote branch can be done in two steps:</source>
          <target state="translated">La configuración de la rama para que coincida exactamente con la rama remota se puede hacer en dos pasos:</target>
        </trans-unit>
        <trans-unit id="60597c753da58007b9e191a77c1c8691c688da5d" translate="yes" xml:space="preserve">
          <source>So answering your question - if you're 5 commits ahead of remote repository HEAD, you should run this command:</source>
          <target state="translated">Así que respondiendo a tu pregunta-si tienes 5 confirmaciones antes que el repositorio remoto HEAD,deberías ejecutar este comando:</target>
        </trans-unit>
        <trans-unit id="fa63791c5a7e17e45766502882e3d598e0f7154a" translate="yes" xml:space="preserve">
          <source>The advantage of specifying &lt;code&gt;@{u}&lt;/code&gt; or its verbose form &lt;code&gt;@{upstream}&lt;/code&gt; is that the name of the remote repo and branch don't have to be explicitly specified.</source>
          <target state="translated">La ventaja de especificar &lt;code&gt;@{u}&lt;/code&gt; o su forma detallada &lt;code&gt;@{upstream}&lt;/code&gt; es que el nombre del repositorio remoto y la rama no tienen que especificarse expl&amp;iacute;citamente.</target>
        </trans-unit>
        <trans-unit id="7011b1a621a67e63735eb77a3fab573aef5632e9" translate="yes" xml:space="preserve">
          <source>The answer</source>
          <target state="translated">La respuesta</target>
        </trans-unit>
        <trans-unit id="478ec521620e94b78b3dbf05a935ced75c024b4e" translate="yes" xml:space="preserve">
          <source>The only solution that works in all cases that I've seen is to delete and reclone. Maybe there's another way, but obviously this way leaves no chance of old state being left there, so I prefer it. Bash one-liner you can set as a macro if you often mess things up in git:</source>
          <target state="translated">La única solución que funciona en todos los casos que he visto es borrar y volver a poner en marcha.Tal vez haya otra manera,pero obviamente esta manera no deja ninguna posibilidad de que el viejo estado se quede allí,así que lo prefiero.La línea de guión que se puede establecer como macro si a menudo se estropean las cosas en el git:</target>
        </trans-unit>
        <trans-unit id="e4bffe98bea1e26ae0e9bc219a8f0bd4361abe7b" translate="yes" xml:space="preserve">
          <source>Then if you need to merge these changes with another branch while where there are any conflicts, preserving the changes in develop, use:</source>
          <target state="translated">Entonces si necesitas fusionar estos cambios con otra rama mientras haya conflictos,preservando los cambios en el desarrollo,usa:</target>
        </trans-unit>
        <trans-unit id="f5e26b4bfa8027e36854328a818c244fcf88dbce" translate="yes" xml:space="preserve">
          <source>Then the &lt;code&gt;git reset&lt;/code&gt; resets the &lt;code&gt;&amp;lt;branch_name&amp;gt;&lt;/code&gt; branch to what you just fetched. The &lt;code&gt;--hard&lt;/code&gt; option changes all the files in your working tree to match the files in &lt;code&gt;origin/branch_name&lt;/code&gt;.</source>
          <target state="translated">Luego, el &lt;code&gt;git reset&lt;/code&gt; restablece la rama &lt;code&gt;&amp;lt;branch_name&amp;gt;&lt;/code&gt; a lo que acaba de obtener. La opci&amp;oacute;n &lt;code&gt;--hard&lt;/code&gt; cambia todos los archivos en su &amp;aacute;rbol de trabajo para que coincidan con los archivos en &lt;code&gt;origin/branch_name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="10a7a1773daed55900a270a1a0e5d89cf69e4009" translate="yes" xml:space="preserve">
          <source>This is something I face regularly, &amp;amp; I've generalised the script Wolfgang provided above to work with any branch</source>
          <target state="translated">Esto es algo a lo que me enfrento regularmente, y he generalizado el script que Wolfgang proporcion&amp;oacute; anteriormente para trabajar con cualquier rama</target>
        </trans-unit>
        <trans-unit id="6eeef0f736ac579a6b450054c7672ceda745a237" translate="yes" xml:space="preserve">
          <source>This is what I use often:</source>
          <target state="translated">Esto es lo que uso a menudo:</target>
        </trans-unit>
        <trans-unit id="ad001485ea4d9b1f48db4108cba9c62f0c2e9392" translate="yes" xml:space="preserve">
          <source>This method leaves the checked out branch as it is, and the working tree untouched. It simply moves mybranch's head to another commit, whatever is given as the second argument. This is especially helpful if multiple branches need to be updated to new remote heads.</source>
          <target state="translated">Este método deja la rama en bruto tal como está,y el árbol de trabajo intacto.Simplemente mueve la cabeza de mi rama a otro compromiso,lo que se da como segundo argumento.Esto es especialmente útil si varias ramas necesitan ser actualizadas a nuevas cabezas remotas.</target>
        </trans-unit>
        <trans-unit id="e67802e913f3b5fa7586ca4ccb855a327977675b" translate="yes" xml:space="preserve">
          <source>To get the moral equivalent of &lt;strong&gt;erasing your project directory and re-cloning&lt;/strong&gt; from the remote is:</source>
          <target state="translated">Para obtener el equivalente moral de &lt;strong&gt;borrar el directorio de su proyecto y volver a clonar&lt;/strong&gt; desde el control remoto es:</target>
        </trans-unit>
        <trans-unit id="818127423f55d63b873083f1566cd3f2db3afe69" translate="yes" xml:space="preserve">
          <source>To see what files will be removed (without actually removing them):</source>
          <target state="translated">Para ver qué archivos se eliminarán (sin eliminarlos realmente):</target>
        </trans-unit>
        <trans-unit id="0447d23b709f2a826d65e08a1bd1cac55b55adc6" translate="yes" xml:space="preserve">
          <source>Use caution when doing this, though, and use &lt;code&gt;gitk&lt;/code&gt; or a similar tool to double check source and destination. If you accidentally do this on the current branch (and git will not keep you from this), you may become confused, because the new branch content does not match the working tree, which did not change (to fix, update the branch again, to where it was before).</source>
          <target state="translated">Sin embargo, &lt;code&gt;gitk&lt;/code&gt; cuidado al hacer esto, y use gitk o una herramienta similar para verificar el origen y el destino. Si accidentalmente hace esto en la rama actual (y git no lo mantendr&amp;aacute; alejado de esto), puede confundirse, porque el contenido de la nueva rama no coincide con el &amp;aacute;rbol de trabajo, que no cambi&amp;oacute; (para corregir, actualizar la rama nuevamente, a donde estaba antes).</target>
        </trans-unit>
        <trans-unit id="f02f2d8e58d78f59a49b6704d9118a6266ccd033" translate="yes" xml:space="preserve">
          <source>Use the commands below. These commands will remove all untracked files from local git too</source>
          <target state="translated">Use los comandos de abajo.Estos comandos también eliminarán todos los archivos no rastreados del git local</target>
        </trans-unit>
        <trans-unit id="2b7736c160c48fb317cd027ac0a3b44faa7230de" translate="yes" xml:space="preserve">
          <source>What you probably want to do, is reset to the head of origin or whatever you remote repository is called. I'd probably just do something like</source>
          <target state="translated">Lo que probablemente quieras hacer,es reiniciar la cabeza de origen o como sea que se llame tu repositorio remoto.Probablemente haría algo como</target>
        </trans-unit>
        <trans-unit id="14899b864f4a68fa56157694f1b6e1b6f6b78bb8" translate="yes" xml:space="preserve">
          <source>While use</source>
          <target state="translated">Mientras que el uso</target>
        </trans-unit>
        <trans-unit id="6742ff1e473a30661dbb7554a0c504dc807dd0b2" translate="yes" xml:space="preserve">
          <source>With all the changes together:</source>
          <target state="translated">Con todos los cambios juntos:</target>
        </trans-unit>
        <trans-unit id="aaf6e5cb4bcd222906fc7ade9bb3cd536bfbddd0" translate="yes" xml:space="preserve">
          <source>You can create the feature branch now and set master back without affecting the &lt;em&gt;worktree&lt;/em&gt; (local filesystem) to avoid triggering builds, tests and trouble with file-locks:</source>
          <target state="translated">Puede crear la rama de caracter&amp;iacute;sticas ahora y volver a configurar el maestro sin afectar el &lt;em&gt;&amp;aacute;rbol de trabajo&lt;/em&gt; (sistema de archivos local) para evitar generar compilaciones, pruebas y problemas con los bloqueos de archivos:</target>
        </trans-unit>
        <trans-unit id="07954d7adf15cacdc17060e2475de642bdcb6986" translate="yes" xml:space="preserve">
          <source>how to clear your staging area (and possibly the working directory), so that &lt;code&gt;git status&lt;/code&gt; says &lt;code&gt;nothing to commit, working directory clean.&lt;/code&gt;</source>
          <target state="translated">c&amp;oacute;mo borrar su &amp;aacute;rea de preparaci&amp;oacute;n (y posiblemente el directorio de trabajo), para que el &lt;code&gt;git status&lt;/code&gt; &lt;code&gt;nothing to commit, working directory clean.&lt;/code&gt; diga nada que comprometer, limpiar el directorio de trabajo.</target>
        </trans-unit>
        <trans-unit id="7c3a6fb0b81301b8711d3817cf6da231fac77e24" translate="yes" xml:space="preserve">
          <source>how to reset a local branch to the point where the remote is</source>
          <target state="translated">cómo reiniciar una sucursal local en el punto donde está el mando a distancia</target>
        </trans-unit>
        <trans-unit id="50e14edbe7ca0ce2634b3291f85a47aa1d9c7968" translate="yes" xml:space="preserve">
          <source>note, you should checkout to another branch to be able to delete required branch</source>
          <target state="translated">nota,usted debe pagar a otra sucursal para poder borrar la sucursal requerida</target>
        </trans-unit>
        <trans-unit id="44a2d30638b452855a13d4f2a43c8d4aa05f6e0e" translate="yes" xml:space="preserve">
          <source>to preserve branch_name's conflicting changes. Otherwise use a mergetool with &lt;code&gt;git mergetool&lt;/code&gt;.</source>
          <target state="translated">para preservar los cambios conflictivos de branch_name. De lo contrario, use mergetool con &lt;code&gt;git mergetool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12b13d31e8066018bcde449f67345b7bfcf52de0" translate="yes" xml:space="preserve">
          <source>to remove local files</source>
          <target state="translated">para eliminar los archivos locales</target>
        </trans-unit>
        <trans-unit id="d110ecc4bf5aa685f91d30ec3d951d336ba2b9a9" translate="yes" xml:space="preserve">
          <source>to totally reset branch</source>
          <target state="translated">para reiniciar totalmente la rama</target>
        </trans-unit>
        <trans-unit id="14a4e920d1a119c78726be84a2502584abc89313" translate="yes" xml:space="preserve">
          <source>was underrated (&lt;strong&gt;-d&lt;/strong&gt; to remove directories).
Thanks!</source>
          <target state="translated">fue subestimado ( &lt;strong&gt;-d&lt;/strong&gt; para eliminar directorios). &amp;iexcl;Gracias!</target>
        </trans-unit>
        <trans-unit id="7212db004bf9a51e42dafe5bd156f27109417202" translate="yes" xml:space="preserve">
          <source>xkcd: Git</source>
          <target state="translated">xkcd:Git</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
