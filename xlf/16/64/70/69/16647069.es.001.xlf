<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/16647069">
    <body>
      <group id="16647069">
        <trans-unit id="64e9f69e0eda747eff93390d2e407af1a8e6d15a" translate="yes" xml:space="preserve">
          <source>&quot;It is faster!&quot; - Once you have the host that can run Linux containers, Docker is definitely faster at running a container than any virtual machine would be to launch. But launching a virtual machine (or remote machine) is a one-time cost. Over the course of the day, most Vagrant users never actually destroy their VM. It is a strange optimization for development environments. In production, where Docker really shines, I understand the need to quickly spin up/down containers.</source>
          <target state="translated">&quot;¡Es más rápido!&quot;-Una vez que tienes el host que puede ejecutar los contenedores de Linux,Docker es definitivamente más rápido en la ejecución de un contenedor de lo que cualquier máquina virtual sería para lanzar.Pero lanzar una máquina virtual (o máquina remota)es un costo único.En el transcurso del día,la mayoría de los usuarios Vagabundos nunca destruyen su VM.Es una extraña optimización para los entornos de desarrollo.En la producción,donde Docker realmente brilla,entiendo la necesidad de girar rápidamente los contenedores hacia arriba.</target>
        </trans-unit>
        <trans-unit id="ebaa2553839db99c20b90b730ed853ee017a3ff4" translate="yes" xml:space="preserve">
          <source>&quot;It is less moving parts&quot; - Yes, it can be, if you use Docker exclusively for every project. Even then, it is sacrificing flexibility for Docker lock-in. If you ever decide to not use Docker for any project, past, present, or future, then you'll have more moving parts. If you had used Vagrant, you have that one moving part that supports the rest.</source>
          <target state="translated">&quot;Es menos partes móviles&quot;-Sí,puede serlo,si usas Docker exclusivamente para cada proyecto.Incluso entonces,es sacrificar la flexibilidad para el bloqueo de Docker.Si alguna vez decides no usar Docker para cualquier proyecto,pasado,presente o futuro,entonces tendrás más partes móviles.Si hubieras usado Vagrant,tienes esa parte móvil que soporta el resto.</target>
        </trans-unit>
        <trans-unit id="36479eef7dc91eb68da322a641b8a81a7924826d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://fabiorehm.com/blog/2013/04/28/lxc-provider-for-vagrant/&quot;&gt;Vagrant-lxc&lt;/a&gt; is a plugin for Vagrant that let's you use LXC to provision Vagrant. It does not have all the features that the default vagrant VM (VirtualBox) has but it should allow you more flexibility than docker containers. There is a video in the link showing its capabilities that is worth watching.</source>
          <target state="translated">&lt;a href=&quot;http://fabiorehm.com/blog/2013/04/28/lxc-provider-for-vagrant/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vagrant-lxc&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es un complemento para Vagrant que le permite usar LXC para aprovisionar Vagrant. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No tiene todas las caracter&amp;iacute;sticas que tiene la VM vagabunda predeterminada (VirtualBox), pero deber&amp;iacute;a permitirle m&amp;aacute;s flexibilidad que los contenedores docker. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hay un video en el enlace que muestra sus capacidades que vale la pena ver.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a5a82083899dba6ad2386ea19ed8f6985492edf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Disclaimer: I wrote Vagrant! But because I wrote Vagrant, I spend most of my time living in the DevOps world which includes software like Docker. I work with a lot of companies using Vagrant and many use Docker, and I see how the two interplay.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Descargo de responsabilidad: escrib&amp;iacute; Vagrant! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero debido a que escrib&amp;iacute; Vagrant, paso la mayor parte del tiempo viviendo en el mundo DevOps, que incluye software como Docker. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Trabajo con muchas compa&amp;ntilde;&amp;iacute;as que usan Vagrant y muchas usan Docker, y veo c&amp;oacute;mo interact&amp;uacute;an los dos.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ceef433b9fab61b896e62247a65c2f245a6966d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Before I talk too much, a direct answer:&lt;/strong&gt; in your specific scenario (yourself working alone, working on Linux, using Docker in production), you can stick with Docker alone and simplify things. In many other scenarios (I discuss further), it isn't so easy.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Antes de hablar demasiado, una respuesta directa:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en su escenario espec&amp;iacute;fico (trabajando solo, trabajando en Linux, usando Docker en producci&amp;oacute;n), puede quedarse solo con Docker y simplificar las cosas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En muchos otros escenarios (lo discuto m&amp;aacute;s adelante), no es tan f&amp;aacute;cil.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8115e639335d833240663506049d0442b68dbba5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Conclusion&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Conclusion&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aedb1ef926c0885e5d82b12e357fff83c3b843f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Definitely Docker for the win!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iexcl;Definitivamente Docker por la victoria!&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12f22cbfe2cb3c33462bde67f1341cfd334dc89e" translate="yes" xml:space="preserve">
          <source>A final big plus is gained when you are moving into production, translating the development environment over to an infrastructure of hosts that are all the same in that they just have enough config to run docker means very little work indeed.</source>
          <target state="translated">Una gran ventaja final se obtiene cuando se pasa a la producción,ya que traducir el entorno de desarrollo a una infraestructura de anfitriones que son todos iguales en el sentido de que sólo tienen la suficiente configuración para ejecutar docker significa muy poco trabajo en realidad.</target>
        </trans-unit>
        <trans-unit id="a39a49106910c679d82f34436a9a8e7ca644724b" translate="yes" xml:space="preserve">
          <source>A non-docker Chef solo configuration would be considerably more complicated.</source>
          <target state="translated">Una configuración de Chef no-docker en solitario sería considerablemente más complicada.</target>
        </trans-unit>
        <trans-unit id="b3d6ebd4bde713011d00ded5d62c7082158d4b3d" translate="yes" xml:space="preserve">
          <source>As you may know Vagrant is for virtual machine management whereas Docker is for software containers management.
If you are not aware of the difference, here is:
A software container can share the same machine and kernel with other software containers. Using containers you save money because you don't waste resources on multiple operating systems (kernels), you can pack more software per server keeping a good degree of isolation.</source>
          <target state="translated">Como sabrán,Vagrant es para la gestión de máquinas virtuales,mientras que Docker es para la gestión de contenedores de software.Si no eres consciente de la diferencia,aquí está:Un contenedor de software puede compartir la misma máquina y el mismo kernel con otros contenedores de software.Utilizando los contenedores se ahorra dinero porque no se desperdician recursos en múltiples sistemas operativos (kernels),se puede empaquetar más software por servidor manteniendo un buen grado de aislamiento.</target>
        </trans-unit>
        <trans-unit id="57c5fe83d7a4e4bb41a8be75ab420418c3663b07" translate="yes" xml:space="preserve">
          <source>Continuously test the delivery mechanism to the VM(s) managed by Vagrant</source>
          <target state="translated">Probar continuamente el mecanismo de entrega al VM(s)administrado por Vagrant</target>
        </trans-unit>
        <trans-unit id="8c9739a4d4881da5e95135f303654ada0f18cef7" translate="yes" xml:space="preserve">
          <source>Deliver the container to a Vagrant VM.</source>
          <target state="translated">Entregar el contenedor a un Vagabundo VM.</target>
        </trans-unit>
        <trans-unit id="16ab122f3b38a2fca2950e020e21b18bf3cb60ef" translate="yes" xml:space="preserve">
          <source>Docker on the other hand uses kernel cgroup and namespacing via &lt;a href=&quot;https://en.wikipedia.org/wiki/LXC&quot;&gt;LXC&lt;/a&gt;. It means that you are using the same kernel as the host and the same file system.
You can use Dockerfile with the &lt;code&gt;docker build&lt;/code&gt; command in order to handle the provisioning and configuration of your container. You have an example at &lt;a href=&quot;https://docs.docker.com/&quot;&gt;docs.docker.com&lt;/a&gt; on how to make your Dockerfile; it is very intuitive.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Docker, por otro lado, usa el kernel cgroup y el espacio de nombres a trav&amp;eacute;s de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/LXC&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;LXC&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Significa que est&amp;aacute; utilizando el mismo n&amp;uacute;cleo que el host y el mismo sistema de archivos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede usar Dockerfile con el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;comando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;docker build&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para manejar el aprovisionamiento y la configuraci&amp;oacute;n de su contenedor. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tiene un ejemplo en &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.docker.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;docs.docker.com&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sobre c&amp;oacute;mo hacer su Dockerfile; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es muy intuitivo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa7a7be46f84391b8276013f27e43d30475d255a" translate="yes" xml:space="preserve">
          <source>Docker specifically runs Docker containers. If you're comparing directly to Vagrant: it is specifically a more specific (can only run Docker containers), less flexible (requires Linux or Linux host somewhere) solution. Of course if you're talking about production or CI, there is no comparison to Vagrant! Vagrant doesn't live in these environments, and so Docker should be used.</source>
          <target state="translated">Docker dirige específicamente los contenedores Docker.Si lo comparas directamente con Vagrant:es específicamente una solución más específica (sólo puede ejecutar Docker containers),menos flexible (requiere Linux o un host Linux en algún lugar).Por supuesto,si estás hablando de producción o CI,¡no hay comparación con Vagrant! Vagabundo no vive en estos entornos,por lo que se debería usar Docker.</target>
        </trans-unit>
        <trans-unit id="80ddd9675bcb8f6abff91e9ab660fb332c84cf6c" translate="yes" xml:space="preserve">
          <source>Docker&amp;rsquo;s lightweight containers are faster compared with classic VMs
  and have become popular among developers and as part of CD and DevOps
  initiatives. If your purpose is isolation, Docker is an excellent choice.
  Vagrant is a VM manager that enables you to script configurations of
  individual VMs as well as do the provisioning. However, it is sill a
  VM dependent on VirtualBox (or another VM manager) with relatively
  large overhead. It requires you to have a hard drive idle that can be
  huge, it takes a lot of RAM, and performance can be suboptimal. Docker
  uses kernel cgroups and namespace isolation via LXC. This means that
  you are using the same kernel as the host and the same ile system.
  Vagrant is a level above Docker in terms of abstraction, so they are
  not really comparable. Configuration management tools such as Puppet are
  widely used for provisioning target environments. Reusing existing
  Puppet-based solutions is easy with Docker. You can also slice your
  solution, so the infrastructure is provisioned with Puppet; the
  middleware, the business application itself, or both are provisioned
  with Docker; and Docker is wrapped by Vagrant. With this range of
  tools, you can do what&amp;rsquo;s best for your scenario.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los contenedores livianos de Docker son m&amp;aacute;s r&amp;aacute;pidos en comparaci&amp;oacute;n con las m&amp;aacute;quinas virtuales cl&amp;aacute;sicas y se han vuelto populares entre los desarrolladores y como parte de las iniciativas de CD y DevOps. Si su prop&amp;oacute;sito es el aislamiento, Docker es una excelente opci&amp;oacute;n. Vagrant es un administrador de VM que le permite crear configuraciones de script de m&amp;aacute;quinas virtuales individuales, as&amp;iacute; como realizar el aprovisionamiento. Sin embargo, todav&amp;iacute;a es una VM que depende de VirtualBox (u otro administrador de VM) con una sobrecarga relativamente grande. Requiere que tenga un disco duro inactivo que puede ser enorme, requiere mucha RAM y el rendimiento puede ser sub&amp;oacute;ptimo. Docker utiliza cgroups de kernel y aislamiento de espacio de nombres a trav&amp;eacute;s de LXC. Esto significa que est&amp;aacute; utilizando el mismo n&amp;uacute;cleo que el host y el mismo sistema de archivos. Vagrant est&amp;aacute; un nivel por encima de Docker en t&amp;eacute;rminos de abstracci&amp;oacute;n, por lo que no son realmente comparables.Las herramientas de gesti&amp;oacute;n de la configuraci&amp;oacute;n, como Puppet, se utilizan ampliamente para aprovisionar entornos de destino. Reutilizar las soluciones existentes basadas en Puppet es f&amp;aacute;cil con Docker. Tambi&amp;eacute;n puede dividir su soluci&amp;oacute;n, por lo que la infraestructura se aprovisiona con Puppet; el middleware, la aplicaci&amp;oacute;n comercial en s&amp;iacute;, o ambos est&amp;aacute;n aprovisionados con Docker; y Docker est&amp;aacute; envuelto por Vagrant. Con esta gama de herramientas, puede hacer lo mejor para su escenario.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a578c0664e2eebf827008f95aaef32d849c36cae" translate="yes" xml:space="preserve">
          <source>First, Vagrant is not a good abstraction for Docker. Vagrant was designed to manage virtual machines. Docker was designed to manage an application runtime. This means that Docker, by design, can interact with an application in richer ways, and has more information about the application runtime. The primitives in Docker are processes, log streams, environment variables, and network links between components. The primitives in Vagrant are machines, block devices, and ssh keys. Vagrant simply sits lower in the stack, and the only way it can interact with a container is by pretending it's just another kind of machine, that you can &quot;boot&quot; and &quot;log into&quot;. So, sure, you can type &quot;vagrant up&quot; with a Docker plugin and something pretty will happen. Is it a substitute for the full breadth of what Docker can do? Try native Docker for a couple days and see for yourself :)</source>
          <target state="translated">Primero,Vagabundo no es una buena abstracción para Docker.Vagabundo fue diseñado para manejar máquinas virtuales.Docker fue diseñado para administrar el tiempo de ejecución de una aplicación.Esto significa que Docker,por diseño,puede interactuar con una aplicación de manera más rica,y tiene más información sobre el tiempo de ejecución de la aplicación.Las primitivas en Docker son los procesos,los flujos de registro,las variables de entorno,y los enlaces de red entre los componentes.Las primitivas en Vagrant son máquinas,dispositivos de bloqueo,y teclas ssh.Vagrant simplemente se sienta más abajo en la pila,y la única forma en que puede interactuar con un contenedor es pretendiendo que es sólo otro tipo de máquina,que puede &quot;arrancar&quot; y &quot;conectarse&quot;.Así que,claro,puedes teclear &quot;vagabundo&quot; con un plugin Docker y algo bonito sucederá.¿Es un sustituto de todo lo que Docker puede hacer? Prueba el Docker nativo por un par de días y compruébalo tú mismo :)</target>
        </trans-unit>
        <trans-unit id="03c3a123fcbd88a5928d6a5f5fa306f81f990237" translate="yes" xml:space="preserve">
          <source>Go for Docker Swarm if your requirements cross the single machine resources limit.</source>
          <target state="translated">Ve por Docker Swarm si tus requerimientos cruzan el límite de recursos de una sola máquina.</target>
        </trans-unit>
        <trans-unit id="84bfa872bd59c8e2bcc41401a551a649895046dd" translate="yes" xml:space="preserve">
          <source>Here is a typical Vagrantfile</source>
          <target state="translated">Aquí está un típico archivo Vagabundo</target>
        </trans-unit>
        <trans-unit id="80366611cec2099197710375dbe97b99dbd3a81b" translate="yes" xml:space="preserve">
          <source>Hope this clears things up!</source>
          <target state="translated">¡Espero que esto aclare las cosas!</target>
        </trans-unit>
        <trans-unit id="74771a2f761b77293b10b6df9bcd780b6368374f" translate="yes" xml:space="preserve">
          <source>How to build, use and orchestrate Docker containers in DevOps
&lt;a href=&quot;http://www.javamagazine.mozaicreader.com/JulyAug2015#&amp;amp;pageSet=34&amp;amp;page=0&quot;&gt;http://www.javamagazine.mozaicreader.com/JulyAug2015#&amp;amp;pageSet=34&amp;amp;page=0&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C&amp;oacute;mo construir, usar y orquestar contenedores Docker en DevOps &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.javamagazine.mozaicreader.com/JulyAug2015#&amp;amp;pageSet=34&amp;amp;page=0&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.javamagazine.mozaicreader.com/JulyAug2015#&amp;amp;pageSet=34&amp;amp;page=0&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2685b9ea010e149de682d17f3c766093463d4a1" translate="yes" xml:space="preserve">
          <source>I am considering either Vagrant or Docker for this purpose. What are the pros and cons, or how do these solutions compare?</source>
          <target state="translated">Estoy considerando o bien Vagabundo o bien Docker para este propósito.¿Cuáles son los pros y los contras,o cómo se comparan estas soluciones?</target>
        </trans-unit>
        <trans-unit id="795e61ffcf98d57bb9dc7a1b4f155908a8693ccb" translate="yes" xml:space="preserve">
          <source>I do have a decent amount of experience with Vagrant and can highly recommend it. It's certainly a more heavyweight solution in terms of it being VM based instead of LXC based. However, I've found a decent laptop (8&amp;nbsp;GB RAM, i5/i7 CPU) has no trouble running a VM using Vagrant/VirtualBox alongside development tooling.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tengo una buena cantidad de experiencia con Vagrant y puedo recomendarlo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ciertamente, es una soluci&amp;oacute;n m&amp;aacute;s pesada en t&amp;eacute;rminos de que est&amp;aacute; basada en VM en lugar de LXC. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, he encontrado que una computadora port&amp;aacute;til decente (8 GB de RAM, CPU i5 / i7) no tiene problemas para ejecutar una VM usando Vagrant / VirtualBox junto con herramientas de desarrollo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="01e1301ed961a941aa27dae5d4819bf0995bc3a9" translate="yes" xml:space="preserve">
          <source>I have been using a combination of VirtualBox, Vagrant and Docker for all my projects for several months and have strongly felt the following benefits.</source>
          <target state="translated">He estado usando una combinación de VirtualBox,Vagrant y Docker para todos mis proyectos durante varios meses y he sentido fuertemente los siguientes beneficios.</target>
        </trans-unit>
        <trans-unit id="d5574bbf6c293c4ffa5ee529a6a8602f551f601a" translate="yes" xml:space="preserve">
          <source>I hope now its clear to see that it is very difficult, and I believe not correct, to compare Docker to Vagrant. For dev environments, Vagrant is more abstract, more general. Docker (and the various ways you can make it behave like Vagrant) is a specific use case of Vagrant, ignoring everything else Vagrant has to offer.</source>
          <target state="translated">Espero que ahora esté claro que es muy difícil,y creo que no es correcto,comparar a Docker con Vagabundo.Para los entornos de desarrollo,el Vagabundo es más abstracto,más general.Docker (y las diversas formas en que puede hacer que se comporte como Vagrant)es un caso de uso específico de Vagrant,ignorando todo lo demás que Vagrant tiene para ofrecer.</target>
        </trans-unit>
        <trans-unit id="266a345aeade71ae1f55f705d1bf4a4ac876a69f" translate="yes" xml:space="preserve">
          <source>I preface my reply by admitting I have no experience with Docker, other than as an avid observer of what looks to be a really neat solution that's gaining a lot of traction.</source>
          <target state="translated">Prefiero mi respuesta admitiendo que no tengo experiencia con Docker,salvo como ávido observador de lo que parece ser una solución realmente pulcra que está ganando mucha fuerza.</target>
        </trans-unit>
        <trans-unit id="1da0a4684250d4f801d81ef70509001de806850f" translate="yes" xml:space="preserve">
          <source>I use Ubuntu for development and deployment and have a need for creating an isolated environment.</source>
          <target state="translated">Utilizo Ubuntu para el desarrollo y el despliegue y tengo la necesidad de crear un entorno aislado.</target>
        </trans-unit>
        <trans-unit id="21756dbc3f9e053c2a1e1e2693cb7205d6298ce5" translate="yes" xml:space="preserve">
          <source>I'm the author of Docker.</source>
          <target state="translated">Soy el autor de Docker.</target>
        </trans-unit>
        <trans-unit id="83107c774e24baa3359721c6b10d1d2e94db5b13" translate="yes" xml:space="preserve">
          <source>If you interested I have a more detailed article on the development environment on my own web site at</source>
          <target state="translated">Si le interesa,tengo un artículo más detallado sobre el entorno de desarrollo en mi propio sitio web en</target>
        </trans-unit>
        <trans-unit id="cb700ef0c65219a8149df94f4d5b0c7f83e3544d" translate="yes" xml:space="preserve">
          <source>If your organization runs only Docker containers for all their projects and only has developers running on Linux, then okay, Docker could definitely work for you!</source>
          <target state="translated">Si tu organización sólo tiene contenedores Docker para todos sus proyectos y sólo tiene desarrolladores que se ejecutan en Linux,entonces está bien,Docker podría definitivamente trabajar para ti!</target>
        </trans-unit>
        <trans-unit id="f683ae3a8da933c7985d1ef7762fe49b02496fa1" translate="yes" xml:space="preserve">
          <source>If your purpose is the isolation, I think Docker is what you want.</source>
          <target state="translated">Si su propósito es el aislamiento,creo que Docker es lo que quiere.</target>
        </trans-unit>
        <trans-unit id="f496e74bc23d1d5de8151a9f48e6c5974eefa7f9" translate="yes" xml:space="preserve">
          <source>Implementing A Vagrant / Docker Development Environment</source>
          <target state="translated">Implementación de un entorno de desarrollo de muelles vagabundos</target>
        </trans-unit>
        <trans-unit id="be594435f695537c0f5a084ee3fcdc1335fff8b4" translate="yes" xml:space="preserve">
          <source>In Vagrant you can completely do away with any Chef solo provisioning and all you need your vagrant file to do is prepare a machine that runs a single small shell script that installs docker.  This means that my Vagrantfiles for every project are almost identical and very simple.</source>
          <target state="translated">En Vagrant puedes eliminar completamente cualquier aprovisionamiento de Chef solo y todo lo que necesitas hacer con tu archivo Vagrant es preparar una máquina que ejecute un pequeño script de shell que instale docker.Esto significa que mis Vagrantfiles para cada proyecto son casi idénticos y muy simples.</target>
        </trans-unit>
        <trans-unit id="8226b530b2828383729716d372b19461989cd459" translate="yes" xml:space="preserve">
          <source>In conclusion: in highly specific use cases, Docker is certainly a possible replacement for Vagrant. In most use cases, it is not. Vagrant doesn't hinder your usage of Docker; it actually does what it can to make that experience smoother. If you find this isn't true, I'm happy to take suggestions to improve things, since a goal of Vagrant is to work equally well with any system.</source>
          <target state="translated">En conclusión:en casos de uso muy específicos,Docker es ciertamente un posible sustituto de Vagrant.En la mayoría de los casos de uso,no lo es.Vagabundo no obstaculiza su uso de Docker;en realidad hace lo que puede para hacer que la experiencia sea más suave.Si usted encuentra que esto no es cierto,estoy feliz de tomar sugerencias para mejorar las cosas,ya que un objetivo de Vagrant es trabajar igualmente bien con cualquier sistema.</target>
        </trans-unit>
        <trans-unit id="571a8c9b0b75e617e77d6c4703c630f8e4f11f51" translate="yes" xml:space="preserve">
          <source>In summary: Vagrant is for managing machines, and Docker is for building and running application environments.</source>
          <target state="translated">En resumen:Vagabundo es para la gestión de las máquinas,y Docker es para la construcción y ejecución de entornos de aplicación.</target>
        </trans-unit>
        <trans-unit id="7542230d15af6767c6aec97a5a2316acae31daec" translate="yes" xml:space="preserve">
          <source>In theory it's possible to use Vagrant as an abstraction layer for Docker. I recommend against this for two reasons:</source>
          <target state="translated">En teoría es posible usar Vagrant como una capa de abstracción para Docker.No lo recomiendo por dos razones:</target>
        </trans-unit>
        <trans-unit id="a334e3169973872efed2661a2c2ca623f3c81a5f" translate="yes" xml:space="preserve">
          <source>In this example I am running MongoDB, Elastisearch, RabbitMQ and Memcached</source>
          <target state="translated">En este ejemplo estoy dirigiendo MongoDB,Elastisearch,RabbitMQ y Memcached</target>
        </trans-unit>
        <trans-unit id="7896840f4711fb9c239ae9c66c6519d7eca4dc09" translate="yes" xml:space="preserve">
          <source>Interestingly, Vagrant and Docker may actually be complimentary. Vagrant can be extended to support different virtualization providers, and it may be possible that Docker is one such provider which gets support in the near future. See &lt;a href=&quot;https://github.com/dotcloud/docker/issues/404&quot;&gt;https://github.com/dotcloud/docker/issues/404&lt;/a&gt; for recent discussion on the topic.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Curiosamente, Vagrant y Docker pueden ser complementarios. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vagrant puede extenderse para admitir diferentes proveedores de virtualizaci&amp;oacute;n, y es posible que Docker sea uno de esos proveedores que obtenga soporte en el futuro cercano. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vea &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/dotcloud/docker/issues/404&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/dotcloud/docker/issues/404&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para una discusi&amp;oacute;n reciente sobre el tema.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db55c72885526babb16752fb132e7638a5dc64d3" translate="yes" xml:space="preserve">
          <source>It isn't correct to directly compare Vagrant to Docker. In some scenarios, they do overlap, and in the vast majority, they don't. Actually, the more apt comparison would be Vagrant versus something like Boot2Docker (minimal OS that can run Docker). Vagrant is a level above Docker in terms of abstractions, so it isn't a fair comparison in most cases.</source>
          <target state="translated">No es correcto comparar directamente a Vagrant con Docker.En algunos escenarios,se superponen,y en la gran mayoría,no.En realidad,la comparación más apropiada sería Vagrant versus algo como Boot2Docker (sistema operativo mínimo que puede ejecutar Docker).Vagabundo es un nivel por encima de Docker en términos de abstracciones,por lo que no es una comparación justa en la mayoría de los casos.</target>
        </trans-unit>
        <trans-unit id="51c7caa6193b979e7f731ad0bacd460e39fa86bb" translate="yes" xml:space="preserve">
          <source>It's a common misconception that you can only use Docker on Linux. That's incorrect; you can also install Docker on Mac, and Windows. When installed on Mac, Docker bundles a tiny Linux VM (25&amp;nbsp;MB on disk!) which acts as a wrapper for your container. Once installed this is completely transparent; you can use the Docker command-line in exactly the same way. This gives you the best of both worlds: you can test and develop your application using containers, which are very lightweight, easy to test and easy to move around (see for example &lt;a href=&quot;https://hub.docker.com&quot;&gt;https://hub.docker.com&lt;/a&gt; for sharing reusable containers with the Docker community), and you don't need to worry about the nitty-gritty details of managing virtual machines, which are just a means to an end anyway.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es un error com&amp;uacute;n pensar que solo puedes usar Docker en Linux. Eso es incorrecto; Tambi&amp;eacute;n puede instalar Docker en Mac y Windows. Cuando se instala en Mac, Docker incluye una peque&amp;ntilde;a m&amp;aacute;quina virtual Linux (&amp;iexcl;25 MB en disco!) Que act&amp;uacute;a como envoltorio para su contenedor. Una vez instalado, esto es completamente transparente; puede usar la l&amp;iacute;nea de comandos de Docker exactamente de la misma manera. Esto le brinda lo mejor de ambos mundos: puede probar y desarrollar su aplicaci&amp;oacute;n utilizando contenedores, que son muy livianos, f&amp;aacute;ciles de probar y f&amp;aacute;ciles de mover (consulte, por ejemplo, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://hub.docker.com&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://hub.docker.com&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para compartir contenedores reutilizables con la comunidad Docker), y no necesita preocuparse por los detalles esenciales de la administraci&amp;oacute;n de m&amp;aacute;quinas virtuales, que de todos modos son solo un medio para un fin.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45cc2e78cd92403a188aa713443a5b002162f138" translate="yes" xml:space="preserve">
          <source>Iterate on the component(s) to code against.</source>
          <target state="translated">Iterar sobre el componente o componentes a codificar.</target>
        </trans-unit>
        <trans-unit id="831bf3bb9ccd38413f3223abafe0808607c7b1e5" translate="yes" xml:space="preserve">
          <source>Now to get all the services I need running I have a docker_start script that looks somthing like this</source>
          <target state="translated">Ahora,para obtener todos los servicios que necesito,tengo un script docker_start que se ve algo así.</target>
        </trans-unit>
        <trans-unit id="f0f9e72b450d71926c145297ebb5b6a8d2800a4b" translate="yes" xml:space="preserve">
          <source>Of course is a new discipline to care with its own pitfals and challenges.</source>
          <target state="translated">Por supuesto es una nueva disciplina a la que cuidar con sus propios escollos y desafíos.</target>
        </trans-unit>
        <trans-unit id="1f5be52a267971b858616d166763a3ad658d7bb8" translate="yes" xml:space="preserve">
          <source>One of the really great things with Vagrant is the integration with &lt;a href=&quot;http://en.wikipedia.org/wiki/Puppet_%28software%29&quot;&gt;Puppet&lt;/a&gt;/&lt;a href=&quot;https://en.wikipedia.org/wiki/Chef_%28software%29&quot;&gt;Chef&lt;/a&gt;/shell scripts for automating configuration. If you're using one of these options to configure your production environment, you can create a development environment which is as close to identical as you're going to get, and this is exactly what you want.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una de las cosas realmente geniales con Vagrant es la integraci&amp;oacute;n con &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;scripts &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Puppet_%28software%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puppet&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Chef_%28software%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Chef&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / shell para automatizar la configuraci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si est&amp;aacute; utilizando una de estas opciones para configurar su entorno de producci&amp;oacute;n, puede crear un entorno de desarrollo que sea lo m&amp;aacute;s id&amp;eacute;ntico posible y esto es exactamente lo que desea.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec252b7937e27d100e817ea646b06eab07d8d8af" translate="yes" xml:space="preserve">
          <source>Otherwise, I don't see a benefit to attempting to use Docker alone, since you lose a lot of what Vagrant has to offer, which have real business/productivity benefits:</source>
          <target state="translated">De lo contrario,no veo un beneficio en intentar usar Docker solo,ya que se pierde mucho de lo que Vagrant tiene para ofrecer,que tiene verdaderos beneficios de productividad empresarial:</target>
        </trans-unit>
        <trans-unit id="bab99a4387026ddc94f3e9d007f84ac8e6bdb321" translate="yes" xml:space="preserve">
          <source>Please note that you can also use Docker for provisioning with Vagrant. This is very different than using Docker as a provider. &lt;a href=&quot;http://docs.vagrantup.com/v2/provisioning/docker.html&quot;&gt;http://docs.vagrantup.com/v2/provisioning/docker.html&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que tambi&amp;eacute;n puede usar Docker para el aprovisionamiento con Vagrant. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto es muy diferente a usar Docker como proveedor. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.vagrantup.com/v2/provisioning/docker.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://docs.vagrantup.com/v2/provisioning/docker.html&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af38ba35548de03e0b53000d47956167509829e7" translate="yes" xml:space="preserve">
          <source>Repeat this for all application components.</source>
          <target state="translated">Repita esto para todos los componentes de la aplicación.</target>
        </trans-unit>
        <trans-unit id="f062e117843850276752b3ef927824d492f94ca3" translate="yes" xml:space="preserve">
          <source>Second, the lock-in argument. &quot;If you use Vagrant as an abstraction, you will not be locked into Docker!&quot;. From the point of view of Vagrant, which is designed to manage machines, this makes perfect sense: aren't containers just another kind of machine? Just like Amazon EC2 and VMware, we must be careful not to tie our provisioning tools to any particular vendor! This would create lock-in - better to abstract it all away with Vagrant. Except this misses the point of Docker entirely. Docker doesn't provision machines; it wraps your application in a lightweight portable runtime which can be dropped anywhere.</source>
          <target state="translated">Segundo,el argumento del encierro.&quot;Si usas Vagabundo como una abstracción,no estarás encerrado en Docker!&quot;.Desde el punto de vista de Vagrant,que está diseñado para manejar máquinas,esto tiene perfecto sentido:¿no son los contenedores otro tipo de máquina? Al igual que Amazon EC2 y VMware,¡debemos tener cuidado de no atar nuestras herramientas de aprovisionamiento a ningún proveedor en particular! Esto crearía un encierro-mejor abstraerlo todo con Vagrant.Excepto que esto no tiene nada que ver con Docker.Docker no aprovisiona máquinas,sino que envuelve su aplicación en un ligero tiempo de ejecución portátil que se puede dejar en cualquier lugar.</target>
        </trans-unit>
        <trans-unit id="63798b973134fcff610515a865d931cd7f4bb300" translate="yes" xml:space="preserve">
          <source>Should I use Vagrant or Docker for creating an isolated environment</source>
          <target state="translated">¿Debería usar Vagrant o Docker para crear un ambiente aislado</target>
        </trans-unit>
        <trans-unit id="e342edb0236a68b3b3358d9a09b4be49b7e7748e" translate="yes" xml:space="preserve">
          <source>Sleep well knowing when it is time to deploy the container, that integration testing was occurring on a much more continuous basis than it was before Docker.</source>
          <target state="translated">Duerme bien sabiendo que cuando llegue el momento de desplegar el contenedor,que las pruebas de integración se están llevando a cabo de manera mucho más continua que antes de Docker.</target>
        </trans-unit>
        <trans-unit id="4254350df60a32c6e6130a881780c47f2b1b2528" translate="yes" xml:space="preserve">
          <source>So I see Vagrant evolving as a way of leveraging some of the awesome consequences Docker will have for app deployment.</source>
          <target state="translated">Así que veo a Vagabundo evolucionando como una forma de aprovechar algunas de las increíbles consecuencias que Docker tendrá en el despliegue de aplicaciones.</target>
        </trans-unit>
        <trans-unit id="1ae02a8d8667acba097ad137bc19e81a009b0918" translate="yes" xml:space="preserve">
          <source>Take a Java/Go application component and build it as a container
(note, not sure if the app should be built in the container or built then
installed to the container)</source>
          <target state="translated">Tome un componente de la aplicación JavaGo y constrúyalo como un contenedor (nota,no estoy seguro de si la aplicación debe ser construida en el contenedor o construida y luego instalada en el contenedor)</target>
        </trans-unit>
        <trans-unit id="751b6f88d07e4787a1e2e247ad7ad2f4598c246a" translate="yes" xml:space="preserve">
          <source>The Bootstrap file that installs docker looks like this</source>
          <target state="translated">El archivo Bootstrap que instala Docker se ve así</target>
        </trans-unit>
        <trans-unit id="95e42d8c02236732151693c6220da42cd2eb11cf" translate="yes" xml:space="preserve">
          <source>The fact that as a developer I am constantly and consistently delivering containers to the VM and testing the application more holistically means that production releases will be further simplified.</source>
          <target state="translated">El hecho de que,como desarrollador,entregue constante y consistentemente contenedores al VM y pruebe la aplicación de manera más holística significa que los lanzamientos de producción se simplificarán aún más.</target>
        </trans-unit>
        <trans-unit id="5e038958d5831f7501c7e9f7b01865b32159f651" translate="yes" xml:space="preserve">
          <source>The only reason you could want to use Vagrant is if you need to do BSD, Windows or other non-Linux development on your Ubuntu box. Otherwise, go for Docker.</source>
          <target state="translated">La única razón por la que podrías querer usar Vagrant es si necesitas hacer desarrollo BSD,Windows u otro desarrollo no Linux en tu caja de Ubuntu.De lo contrario,ve por Docker.</target>
        </trans-unit>
        <trans-unit id="ec3fa2be605bbfda0daadda6de437a7e2ab8a96f" translate="yes" xml:space="preserve">
          <source>The other great thing with Vagrant is that you can version your Vagrantfile along with your application code. This means that everyone else on your team can share this file and you're guaranteed that everyone is working with the same environment configuration.</source>
          <target state="translated">La otra gran cosa con Vagrant es que puedes versionar tu Vagrantfile junto con tu código de aplicación.Esto significa que todos los demás en tu equipo pueden compartir este archivo y tienes la garantía de que todos trabajan con la misma configuración de entorno.</target>
        </trans-unit>
        <trans-unit id="aa21c7b0c1f5a57538aeb32528b3b479e4af0e12" translate="yes" xml:space="preserve">
          <source>The short answer is that if you want to manage machines, you should use Vagrant. And if you want to build and run applications environments, you should use Docker.</source>
          <target state="translated">La respuesta corta es que si quieres manejar las máquinas,debes usar Vagrant.Y si quieres construir y ejecutar entornos de aplicaciones,deberías usar Docker.</target>
        </trans-unit>
        <trans-unit id="05dde88d23625506bfb21b458ae6b6d3479116d8" translate="yes" xml:space="preserve">
          <source>The thinking goes something like this:</source>
          <target state="translated">El pensamiento va algo así:</target>
        </trans-unit>
        <trans-unit id="6a6bc37772ba6f7940bd8a7b45822a2e641f81f2" translate="yes" xml:space="preserve">
          <source>There is a really informative article in the actual Oracle Java magazine about using Docker in combination with Vagrant (and Puppet):</source>
          <target state="translated">Hay un artículo muy informativo en la revista actual de Oracle Java sobre el uso de Docker en combinación con Vagrant (y Puppet):</target>
        </trans-unit>
        <trans-unit id="289452da861664a9dd45090386e4368e70a5f104" translate="yes" xml:space="preserve">
          <source>They are very much complementary.</source>
          <target state="translated">Son muy complementarios.</target>
        </trans-unit>
        <trans-unit id="0f7e684dc8ada8d02c0227d80b555833593b376a" translate="yes" xml:space="preserve">
          <source>This means you can replace &lt;a href=&quot;https://en.wikipedia.org/wiki/Chef_%28software%29&quot;&gt;Chef&lt;/a&gt; or &lt;a href=&quot;http://en.wikipedia.org/wiki/Puppet_%28software%29&quot;&gt;Puppet&lt;/a&gt; with Docker. You can use combinations like Docker as provider (VM) with Chef as provisioner. Or you can use VirtualBox as provider and Docker as provisioner.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto significa que puede reemplazar &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Chef_%28software%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Chef&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Puppet_%28software%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puppet&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; con Docker. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede usar combinaciones como Docker como proveedor (VM) con Chef como aprovisionador. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;O puede usar VirtualBox como proveedor y Docker como aprovisionador.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d9d3c5f3ed2a350e4b8bc925a19807a443d833f" translate="yes" xml:space="preserve">
          <source>This seems to be the logical extension of Mitchell's statement that Vagrant is for development combined with Farley/Humbles thinking in Continuous Delivery. If I, as a developer, can shrink the feedback loop on integration testing and application delivery, higher quality and better work environments will follow.</source>
          <target state="translated">Esta parece ser la extensión lógica de la declaración de Mitchell de que Vagabundo está a favor del desarrollo combinado con el pensamiento de FarleyHumbles en la Entrega Continua.Si yo,como desarrollador,puedo reducir el bucle de retroalimentación en las pruebas de integración y la entrega de aplicaciones,una mayor calidad y mejores entornos de trabajo seguirán.</target>
        </trans-unit>
        <trans-unit id="46ca9b4ef92d13aec598dba576c238a245baa1d0" translate="yes" xml:space="preserve">
          <source>To address specific counter arguments that I've heard in favor of using Docker instead of Vagrant:</source>
          <target state="translated">Para abordar los contra-argumentos específicos que he escuchado a favor de usar Docker en lugar de Vagrant:</target>
        </trans-unit>
        <trans-unit id="a1a81d5698f299b0e22ec55295abb9cb8f0f1e92" translate="yes" xml:space="preserve">
          <source>Using both is an important part of application delivery testing. I am only beginning to get involved with Docker and thinking very hard about an application team that has terrible complexity in building and delivering its software.  Think of a classic Phoenix Project / Continuous Delivery situation.</source>
          <target state="translated">El uso de ambos es una parte importante de las pruebas de entrega de aplicaciones.Sólo estoy empezando a involucrarme con Docker y pensando muy bien en un equipo de aplicación que tiene una terrible complejidad en la construcción y entrega de su software.Piensa en una situación clásica de entrega continua del Proyecto Phoenix.</target>
        </trans-unit>
        <trans-unit id="c56bfd57ad91150dd9a5d83cd039ed857e632932" translate="yes" xml:space="preserve">
          <source>Vagrant 1.6 has first-class support for &lt;a href=&quot;http://www.vagrantup.com/blog/feature-preview-vagrant-1-6-docker-dev-environments.html&quot;&gt;docker-based development environments&lt;/a&gt;. This will not launch a virtual machine on Linux, and will automatically launch a virtual machine on Mac and Windows. The end result is that working with Docker is uniform across all platforms, while Vagrant still handles the tedious details of things such as networking, synced folders, etc.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vagrant 1.6 tiene soporte de primera clase para &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.vagrantup.com/blog/feature-preview-vagrant-1-6-docker-dev-environments.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;entornos de desarrollo basados&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;docker&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Esto no lanzar&amp;aacute; una m&amp;aacute;quina virtual en Linux, y lanzar&amp;aacute; autom&amp;aacute;ticamente una m&amp;aacute;quina virtual en Mac y Windows. El resultado final es que trabajar con Docker es uniforme en todas las plataformas, mientras que Vagrant a&amp;uacute;n maneja los tediosos detalles de cosas como redes, carpetas sincronizadas, etc.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8b8ec4b9b97fd1f750140c280c50612f2ef99fbb" translate="yes" xml:space="preserve">
          <source>Vagrant can launch VirtualBox, VMware, AWS, OpenStack, etc. machines. It doesn't matter what you need, Vagrant can launch it. If you are using Docker, Vagrant can install Docker on any of these so you can use them for that purpose.</source>
          <target state="translated">Los vagabundos pueden lanzar máquinas VirtualBox,VMware,AWS,OpenStack,etc.No importa lo que necesites,Vagrant puede lanzarlo.Si estás usando Docker,Vagrant puede instalar Docker en cualquiera de ellas para que puedas usarlas para ese propósito.</target>
        </trans-unit>
        <trans-unit id="3ba5ca5808d23256edd13271c9225a76f9e685e7" translate="yes" xml:space="preserve">
          <source>Vagrant is a single workflow for all your projects. Or to put another way, it is just one thing people have to learn to run a project whether it is in a Docker container or not. If, for example, in the future, a competitor arises to compete directly with Docker, Vagrant will be able to run that too.</source>
          <target state="translated">Vagabundo es un flujo de trabajo único para todos sus proyectos.O para decirlo de otra manera,es sólo una cosa que la gente tiene que aprender para ejecutar un proyecto,ya sea en un contenedor Docker o no.Si,por ejemplo,en el futuro,surge un competidor para competir directamente con Docker,Vagrant también podrá ejecutar eso.</target>
        </trans-unit>
        <trans-unit id="c27f223a6cb9238f63be51ac1d309395fccd336b" translate="yes" xml:space="preserve">
          <source>Vagrant is a tool for managing virtual machines. Docker is a tool for building and deploying applications by packaging them into lightweight containers. A container can hold pretty much any software component along with its dependencies (executables, libraries, configuration files, etc.), and execute it in a guaranteed and repeatable runtime environment. This makes it very easy to build your app once and deploy it anywhere - on your laptop for testing, then on different servers for live deployment, etc.</source>
          <target state="translated">Vagabundo es una herramienta para la gestión de máquinas virtuales.Docker es una herramienta para construir y desplegar aplicaciones empaquetándolas en contenedores ligeros.Un contenedor puede contener prácticamente cualquier componente de software junto con sus dependencias (ejecutables,librerías,archivos de configuración,etc.),y ejecutarlo en un entorno de tiempo de ejecución garantizado y repetible.Esto hace que sea muy fácil construir su aplicación una vez e implementarla en cualquier lugar:en su portátil para pruebas,luego en diferentes servidores para su implementación en vivo,etc.</target>
        </trans-unit>
        <trans-unit id="efeca42dc823d05ae77ad67cd7d621ddd1de7b6d" translate="yes" xml:space="preserve">
          <source>Vagrant is a virtual machine manager. It allows you to script the virtual machine configuration as well as the provisioning. However, it is still a virtual machine depending on &lt;a href=&quot;http://en.wikipedia.org/wiki/VirtualBox&quot;&gt;VirtualBox&lt;/a&gt; (or others) with a huge overhead. It requires you to have a hard drive file that can be huge, it takes a lot of ram, and performance may be not very good.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vagrant es un administrador de m&amp;aacute;quinas virtuales. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Le permite realizar un script de la configuraci&amp;oacute;n de la m&amp;aacute;quina virtual, as&amp;iacute; como el aprovisionamiento. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, sigue siendo una m&amp;aacute;quina virtual que depende de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/VirtualBox&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;VirtualBox&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (u otros) con una gran sobrecarga. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Requiere que tenga un archivo de disco duro que puede ser enorme, requiere mucha memoria RAM y el rendimiento puede no ser muy bueno.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="835066f6f2446a7ca317229318fbd937babb3b9e" translate="yes" xml:space="preserve">
          <source>Vagrant knows how to configure some advanced or non-trivial things like networking and syncing folders. For example: Vagrant knows how to attach a static IP to a machine or forward ports, and the configuration is the same no matter what system you use (VirtualBox, VMware, etc.) For synced folders, Vagrant provides multiple mechanisms to get your local files over to the remote machine (VirtualBox shared folders, NFS, rsync, Samba [plugin], etc.). If you're using Docker, even Docker with a VM without Vagrant, you would have to manually do this or they would have to reinvent Vagrant in this case.</source>
          <target state="translated">Vagabundo sabe cómo configurar algunas cosas avanzadas o no triviales como la red y la sincronización de carpetas.Por ejemplo:Vagrant sabe cómo adjuntar una IP estática a una máquina o puertos de reenvío,y la configuración es la misma sin importar el sistema que use (VirtualBox,VMware,etc.)Para las carpetas sincronizadas,Vagrant provee múltiples mecanismos para llevar sus archivos locales a la máquina remota (carpetas compartidas de VirtualBox,NFS,rsync,Samba [plugin],etc.).Si estás usando Docker,incluso Docker con un VM sin Vagrant,tendrías que hacerlo manualmente o tendrían que reinventar Vagrant en este caso.</target>
        </trans-unit>
        <trans-unit id="860bf614250849c4cf7a8462f202554344f82d3d" translate="yes" xml:space="preserve">
          <source>Vagrant launches things to run apps/services for the purpose of development. This can be on VirtualBox, VMware. It can be remote like AWS, OpenStack. Within those, if you use containers, Vagrant doesn't care, and embraces that: it can automatically install, pull down, build, and run Docker containers, for example. With Vagrant 1.6, Vagrant has &lt;a href=&quot;http://www.vagrantup.com/blog/feature-preview-vagrant-1-6-docker-dev-environments.html&quot;&gt;docker-based development environments&lt;/a&gt;, and supports using Docker with the same workflow as Vagrant across Linux, Mac, and Windows. Vagrant doesn't try to replace Docker here, it embraces Docker practices.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vagrant lanza cosas para ejecutar aplicaciones / servicios con fines de desarrollo. Esto puede estar en VirtualBox, VMware. Puede ser remoto como AWS, OpenStack. Dentro de esos, si usa contenedores, a Vagrant no le importa, y lo acepta: puede instalar, desplegar, construir y ejecutar autom&amp;aacute;ticamente contenedores Docker, por ejemplo. Con Vagrant 1.6, Vagrant tiene &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.vagrantup.com/blog/feature-preview-vagrant-1-6-docker-dev-environments.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;entornos de desarrollo basados ​​en&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Docker y admite el uso de Docker con el mismo flujo de trabajo que Vagrant en Linux, Mac y Windows. Vagrant no intenta reemplazar a Docker aqu&amp;iacute;, abarca las pr&amp;aacute;cticas de Docker.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f1a64a0cdb06a03bddf57928277455accf45f34f" translate="yes" xml:space="preserve">
          <source>Vagrant works on Windows (back to XP), Mac (back to 10.5), and Linux (back to kernel 2.6). In all three cases, the workflow is the same. If you use Docker, Vagrant can launch a machine (VM or remote) that can run Docker on all three of these systems.</source>
          <target state="translated">Vagabundo trabaja en Windows (de vuelta a XP),Mac (de vuelta a 10.5),y Linux (de vuelta al kernel 2.6).En los tres casos,el flujo de trabajo es el mismo.Si usas Docker,Vagrant puede lanzar una máquina (VM o remota)que puede ejecutar Docker en los tres sistemas.</target>
        </trans-unit>
        <trans-unit id="058c9b8617f3dc2354c776be946dc78bbdd2bcbf" translate="yes" xml:space="preserve">
          <source>What runtime you choose for your application has nothing to do with how you provision your machines! For example it's pretty frequent to deploy applications to machines which are provisioned by someone else (for example an EC2 instance deployed by your system administrator, perhaps using Vagrant), or to bare metal machines which Vagrant can't provision at all. Conversely, you may use Vagrant to provision machines which have nothing to do with developing your application - for example a ready-to-use Windows IIS box or something. Or you may use Vagrant to provision machines for projects which don't use Docker - perhaps they use a combination of rubygems and rvm for dependency management and sandboxing for example.</source>
          <target state="translated">El tiempo de ejecución que elija para su aplicación no tiene nada que ver con la forma de aprovisionar sus máquinas.Por ejemplo,es bastante frecuente desplegar aplicaciones en máquinas que son aprovisionadas por otra persona (por ejemplo una instancia EC2 desplegada por su administrador de sistema,quizás usando Vagrant),o en máquinas de metal desnudo que Vagrant no puede aprovisionar en absoluto.Por el contrario,puede utilizar Vagrant para aprovisionar máquinas que no tienen nada que ver con el desarrollo de su aplicación,por ejemplo,una caja de IIS de Windows lista para usar o algo así.O puede utilizar Vagrant para aprovisionar máquinas para proyectos que no utilizan Docker-tal vez utilizan una combinación de rubíes y rvm para la gestión de dependencias y el sandboxing,por ejemplo.</target>
        </trans-unit>
        <trans-unit id="79ccd86a62436e552d5fc21716baf34aaa4159ad" translate="yes" xml:space="preserve">
          <source>With Vagrant now you can have Docker as a provider. &lt;a href=&quot;http://docs.vagrantup.com/v2/docker/&quot;&gt;http://docs.vagrantup.com/v2/docker/&lt;/a&gt;. Docker provider can be used instead of VirtualBox or VMware.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Con Vagrant ahora puede tener a Docker como proveedor. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.vagrantup.com/v2/docker/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://docs.vagrantup.com/v2/docker/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El proveedor Docker se puede usar en lugar de VirtualBox o VMware.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
