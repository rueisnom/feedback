<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/1680528">
    <body>
      <group id="1680528">
        <trans-unit id="4fd61f4a4785a7c8e735fe3077fdee4a8efd3399" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__()&lt;/code&gt; function. This special function gets called whenever a new object of that class is instantiated.</source>
          <target state="translated">&lt;code&gt;__init__()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta funci&amp;oacute;n especial se llama cada vez que se instancia un nuevo objeto de esa clase.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1f18bf2512f14695295655499e2ea8defa212c8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IN SHORT&lt;/strong&gt; Class variables have NOTHING to do with instance variables.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;EN CORTO&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Las variables de clase no tienen NADA que ver con las variables de instancia.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7737641c935f372c22ff29c2951c5adfaa0e96b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;More clearly&lt;/strong&gt; They just happen to be in the scope for lookups on instances. Class variables are in fact &lt;em&gt;instance variables&lt;/em&gt; on the class object itself.  You can also have &lt;em&gt;metaclass variables&lt;/em&gt; if you want as well because metaclasses themselves are objects too.  Everything is an object whether it is used to create other objects or not, so do not get bound up in the semantics of other languages usage of the word class.  In python, a class is really just an object that is used to determine how to create other objects and what their behaviors will be.  Metaclasses are classes that create classes, just to further illustrate this point.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;M&amp;aacute;s claramente&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , simplemente est&amp;aacute;n dentro del alcance de las b&amp;uacute;squedas en instancias. Las variables de clase son, de hecho &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, variables de instancia&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en el propio objeto de clase. Tambi&amp;eacute;n puede tener &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;variables de metaclases&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; si lo desea, porque las metaclases en s&amp;iacute; mismas tambi&amp;eacute;n son objetos. Todo es un objeto, ya sea que se use para crear otros objetos o no, por lo tanto, no se enrede en la sem&amp;aacute;ntica del uso de la clase de palabras en otros idiomas. En python, una clase es realmente solo un objeto que se utiliza para determinar c&amp;oacute;mo crear otros objetos y cu&amp;aacute;les ser&amp;aacute;n sus comportamientos. Las metaclases son clases que crean clases, solo para ilustrar m&amp;aacute;s este punto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="adb90fd0dba95b3bf743bd08f034a23fe615dd99" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note that &lt;code&gt;temp&lt;/code&gt; attribute is listed among &lt;code&gt;A&lt;/code&gt; class's attributes while &lt;code&gt;x&lt;/code&gt; is listed for the instance.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;atributo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;temp&lt;/code&gt; oral&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se incluye entre &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;los atributos de la clase &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; mientras que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se incluye para la instancia.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a57e6c8146cba9805a05e1ce01a54ed10893761" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Now if we compare &lt;code&gt;id(a.temp)&lt;/code&gt; and &lt;code&gt;id(A.temp)&lt;/code&gt;, they will be different.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora, si comparamos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id(a.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; e &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id(A.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , ser&amp;aacute;n diferentes.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e91fd438020e6e6b42c2a1a01efe8b9b9d3dbdb" translate="yes" xml:space="preserve">
          <source>A change method sets &lt;code&gt;self.temp&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un m&amp;eacute;todo de cambio establece &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self.temp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a8355fe4fe25434d255f1db4ff07d23e42f6b70" translate="yes" xml:space="preserve">
          <source>Although the accepted anwer is spot on, I would like to add a bit description.</source>
          <target state="translated">Aunque la respuesta aceptada es acertada,me gustaría añadir una pequeña descripción.</target>
        </trans-unit>
        <trans-unit id="4ced2a06e5ce2d398646a464390dafccb0e1a82f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;__init__&lt;/code&gt; method which sets &lt;code&gt;self.x&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que establece &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self.x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="de16bc5547d6232b2074cb7beeb732bf08187e0d" translate="yes" xml:space="preserve">
          <source>Any Python object is automatically given a &lt;code&gt;__dict__&lt;/code&gt; attribute, which contains its list of attributes. Let's investigate what this dictionary contains for our example objects:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cualquier objeto de Python recibe autom&amp;aacute;ticamente un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;atributo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que contiene su lista de atributos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Investiguemos qu&amp;eacute; contiene este diccionario para nuestros objetos de ejemplo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aeeaac517ddb7e2bf20a8119fab5ca9c7dea515b" translate="yes" xml:space="preserve">
          <source>Class attributes do not become instance attributes when an instance is created. They become instance attributes when a value is assigned to them.</source>
          <target state="translated">Los atributos de clase no se convierten en atributos de instancia cuando se crea una instancia.Se convierten en atributos de instancia cuando se les asigna un valor.</target>
        </trans-unit>
        <trans-unit id="de938488951c6540386738b2cf8183e09610edaa" translate="yes" xml:space="preserve">
          <source>Clearly they are sharing the data in class &lt;code&gt;a&lt;/code&gt;. How do I get separate instances to achieve the behavior I desire?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Claramente est&amp;aacute;n compartiendo los datos en la clase &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;C&amp;oacute;mo obtengo instancias separadas para lograr el comportamiento que deseo?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bbbbb7c34e5b16275aa4fcb2f2c183ed6aacfb1a" translate="yes" xml:space="preserve">
          <source>Declaring the variables inside the class declaration makes them &quot;class&quot; members and not instance members. Declaring them inside the &lt;code&gt;__init__&lt;/code&gt; method makes sure that a new instance of the members is created alongside every new instance of the object, which is the behavior you're looking for.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Declarar las variables dentro de la declaraci&amp;oacute;n de clase los convierte en miembros de &quot;clase&quot; y no miembros de instancia. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Declararlos dentro del &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; asegura que se &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cree&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; una nueva instancia de los miembros junto con cada nueva instancia del objeto, que es el comportamiento que est&amp;aacute; buscando.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="ab437f396e915f3c84e32d7c0e1bdd42663dad57" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://www.programiz.com/python-programming/class&quot;&gt;&lt;em&gt;Python Objects and Class&lt;/em&gt; by Programiz.com&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Desde &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.programiz.com/python-programming/class&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python Objects and Class&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; por Programiz.com&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="17071f0f1686cebeb5c0b735dd4082744db64b05" translate="yes" xml:space="preserve">
          <source>How to avoid having class data shared among instances</source>
          <target state="translated">Cómo evitar que los datos de clase se compartan entre instancias</target>
        </trans-unit>
        <trans-unit id="42593861d5611703e110263c3990e75d3264cf21" translate="yes" xml:space="preserve">
          <source>However, the confusing scenario in the question will never happen to immutable objects such as numbers and strings, because their value cannot be changed without assignment. For example a code similar to the original with string attribute type works without any problem:</source>
          <target state="translated">Sin embargo,el confuso escenario de la pregunta nunca sucederá a los objetos inmutables como números y cuerdas,porque su valor no puede ser cambiado sin asignación.Por ejemplo,un código similar al original con el tipo de atributo cadena funciona sin ningún problema:</target>
        </trans-unit>
        <trans-unit id="312e5df175edf420b34170776f324c95f86720a7" translate="yes" xml:space="preserve">
          <source>In the original code no value is assigned to &lt;code&gt;list&lt;/code&gt; attribute after instantiation; so it remains a class attribute. Defining list inside &lt;code&gt;__init__&lt;/code&gt; works because &lt;code&gt;__init__&lt;/code&gt; is called after instantiation. Alternatively, this code would also produce the desired output:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En el c&amp;oacute;digo original no se asigna ning&amp;uacute;n valor al &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;atributo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; despu&amp;eacute;s de la creaci&amp;oacute;n de instancias; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;entonces sigue siendo un atributo de clase. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La definici&amp;oacute;n de la lista dentro de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funciona porque &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se llama despu&amp;eacute;s de la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;creaci&amp;oacute;n de&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; instancias. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Alternativamente, este c&amp;oacute;digo tambi&amp;eacute;n producir&amp;iacute;a la salida deseada:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="682274cfe842fd4bf3feaf056bccd343c3503387" translate="yes" xml:space="preserve">
          <source>Interesting isn't it? And &lt;strong&gt;note that &lt;code&gt;id(a.temp)&lt;/code&gt; and &lt;code&gt;id(A.temp)&lt;/code&gt; are still the same&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Interesante no? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tenga en cuenta que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id(a.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; e &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id(A.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; siguen siendo los mismos&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd29b9106227bb356912ae07ebd1700528f2e070" translate="yes" xml:space="preserve">
          <source>Let's do a small exercise</source>
          <target state="translated">Hagamos un pequeño ejercicio</target>
        </trans-unit>
        <trans-unit id="5bede1e994af1b4b7420b4a1b52be3b3a67d12fa" translate="yes" xml:space="preserve">
          <source>Now do the following:</source>
          <target state="translated">Ahora haz lo siguiente:</target>
        </trans-unit>
        <trans-unit id="9c568abb96897042ccec9e236f61b3742d7438e3" translate="yes" xml:space="preserve">
          <source>Of course, what really happens when I print is:</source>
          <target state="translated">Por supuesto,lo que realmente sucede cuando imprimo es:</target>
        </trans-unit>
        <trans-unit id="dd00a07005af11e5fe881f6e2d1916ebb5c7bfe1" translate="yes" xml:space="preserve">
          <source>Okay now let's use our &lt;code&gt;change&lt;/code&gt; method:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bien, ahora usemos nuestro &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;change&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="117a2119f3f91dff35ea8fed133127e9a5c79e4d" translate="yes" xml:space="preserve">
          <source>Pretty straight forward so far yeah? Now let's start playing around with this class. Let's initialize  this class first:</source>
          <target state="translated">Bastante sencillo hasta ahora,¿no? Ahora vamos a empezar a jugar con esta clase.Iniciemos esta clase primero:</target>
        </trans-unit>
        <trans-unit id="82740682b7d59da66dac1fd3bf24ba58b49c1bdc" translate="yes" xml:space="preserve">
          <source>So how come that we get a defined value of &lt;code&gt;a.temp&lt;/code&gt; if it is not even listed for the instance &lt;code&gt;a&lt;/code&gt;. Well that's the magic of &lt;code&gt;__getattribute__()&lt;/code&gt; method. In Python the dotted syntax automatically invokes this method so when we write &lt;code&gt;a.temp&lt;/code&gt;, Python executes &lt;code&gt;a.__getattribute__('temp')&lt;/code&gt;. That method performs the attribute lookup action, i.e. finds the value of the attribute by looking in different places.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, &amp;iquest;c&amp;oacute;mo es que obtenemos un valor definido de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.temp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; si ni siquiera est&amp;aacute; en la lista para la instancia &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Bueno, esa es la magia del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__getattribute__()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . En Python, la sintaxis punteada invoca autom&amp;aacute;ticamente este m&amp;eacute;todo, por lo que cuando escribimos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.temp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , Python ejecuta &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.__getattribute__('temp')&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Ese m&amp;eacute;todo realiza la acci&amp;oacute;n de b&amp;uacute;squeda de atributos, es decir, encuentra el valor del atributo buscando en diferentes lugares.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b89ab222a03886284efefea7bc76bf35028df559" translate="yes" xml:space="preserve">
          <source>So nearly every response here seems to miss a particular point.  Class variables &lt;strong&gt;never&lt;/strong&gt; become instance variables as demonstrated by the code below.  By utilizing a metaclass to intercept variable assignment at the class level, we can see that when a.myattr is reassigned, the field assignment magic method on the class is not called.  This is because the assignment &lt;strong&gt;creates a new instance variable&lt;/strong&gt;.  This behavior has &lt;strong&gt;absolutely nothing&lt;/strong&gt; to do with the class variable as demonstrated by the second class which has no class variables and yet still allows field assignment.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;As&amp;iacute; que casi todas las respuestas aqu&amp;iacute; parecen perder un punto en particular. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las variables de clase &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nunca se&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; convierten en variables de instancia, como lo demuestra el siguiente c&amp;oacute;digo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Al utilizar una metaclase para interceptar la asignaci&amp;oacute;n de variables a nivel de clase, podemos ver que cuando se reasigna a.myattr, no se llama al m&amp;eacute;todo m&amp;aacute;gico de asignaci&amp;oacute;n de campo en la clase. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto se debe a que la asignaci&amp;oacute;n &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;crea una nueva variable de instancia&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este comportamiento no tiene &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;absolutamente nada&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que ver con la variable de clase, como lo demuestra la segunda clase que no tiene variables de clase y, sin embargo, permite la asignaci&amp;oacute;n de campo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00482718055d7d9ea43e63a6cd79e05bcd6fa705" translate="yes" xml:space="preserve">
          <source>So to summarize: &lt;strong&gt;class attributes become instance attributes if and only if a value is assigned to them after instantiation, being in the &lt;code&gt;__init__&lt;/code&gt; method or not&lt;/strong&gt;. This is a good thing because this way you can have static attributes if you never assign a value to an attribute after instantiation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para resumir: &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;los atributos de clase se convierten en atributos de instancia si y solo si se les asigna un valor despu&amp;eacute;s de la instanciaci&amp;oacute;n, estando en el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o no&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto es bueno porque de esta manera puede tener atributos est&amp;aacute;ticos si nunca asigna un valor a un atributo despu&amp;eacute;s de la creaci&amp;oacute;n de instancias.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b3cc3604342b8a666176e392295eb3d65b54f3e" translate="yes" xml:space="preserve">
          <source>So what do we have here?</source>
          <target state="translated">Entonces,¿qué tenemos aquí?</target>
        </trans-unit>
        <trans-unit id="25f802ea1c0f9d6cd6733df4e5711c9a99210efd" translate="yes" xml:space="preserve">
          <source>The accepted answer works but a little more explanation does not hurt.</source>
          <target state="translated">La respuesta aceptada funciona,pero un poco más de explicación no hace daño.</target>
        </trans-unit>
        <trans-unit id="8b5b1db714081a509e39cb45652805e78b7b9b13" translate="yes" xml:space="preserve">
          <source>The standard implementation of &lt;code&gt;__getattribute__()&lt;/code&gt; searches first the internal dictionary (&lt;strong&gt;dict&lt;/strong&gt;) of an object, then the type of the object itself. In this case &lt;code&gt;a.__getattribute__('temp')&lt;/code&gt; executes first &lt;code&gt;a.__dict__['temp']&lt;/code&gt; and then &lt;code&gt;a.__class__.__dict__['temp']&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La implementaci&amp;oacute;n est&amp;aacute;ndar de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__getattribute__()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; busca primero el diccionario interno ( &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;dict&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) de un objeto, luego el tipo del objeto en s&amp;iacute;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En este caso, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.__getattribute__('temp')&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ejecuta primero &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.__dict__['temp']&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y luego &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.__class__.__dict__['temp']&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8339c7d8e57c9de0805e3c09fd042f7054f71d5" translate="yes" xml:space="preserve">
          <source>This type of function is also called constructors in Object Oriented
  Programming (OOP). We normally use it to initialize all the variables.</source>
          <target state="translated">Este tipo de función también se llama constructores en la Programación Orientada a Objetos (OOP).Normalmente la usamos para inicializar todas las variables.</target>
        </trans-unit>
        <trans-unit id="bf9ea6c627f7d7feca239deee8b894e096f8cb42" translate="yes" xml:space="preserve">
          <source>To protect your variable shared by other instance you need to create new instance variable each time you create an instance. When you are declaring a variable inside a class it's class variable and shared by all instance. If you want to make it for instance wise need to use the &lt;strong&gt;init&lt;/strong&gt; method to reinitialize the variable as  refer to the instance</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para proteger su variable compartida por otra instancia, debe crear una nueva variable de instancia cada vez que cree una instancia. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando declara una variable dentro de una clase, es variable de clase y es compartida por todas las instancias. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si desea hacerlo, por ejemplo, debe usar el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;init&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para reinicializar la variable como se refiere a la instancia&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cacbf5c08e2c79ef45ecf2191fa143e3253ae55d" translate="yes" xml:space="preserve">
          <source>We have a very simple class which has an attribute &lt;code&gt;temp&lt;/code&gt; which is a string</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenemos una clase muy simple que tiene un atributo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;temp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que es una cadena&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c9ded3dc6b0582611a6935fc2b68f8df9e06643" translate="yes" xml:space="preserve">
          <source>Well now that we have used &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;print(a.temp)&lt;/code&gt; gives us a different value from &lt;code&gt;print(A.temp)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bueno, ahora que hemos usado &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;print(a.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; nos da un valor diferente de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;print(A.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d75b8daa3a74e9e54c95f985fbf6a46fe5301552" translate="yes" xml:space="preserve">
          <source>Well, &lt;code&gt;a.temp&lt;/code&gt; worked as expected but how the hell did &lt;code&gt;A.temp&lt;/code&gt; work? Well it worked because temp is a class attribute. Everything in python is an object. Here A is also an object of class &lt;code&gt;type&lt;/code&gt;. Thus the attribute temp is an attribute held by the &lt;code&gt;A&lt;/code&gt; class and if you change the value of temp through &lt;code&gt;A&lt;/code&gt; (and not through an instance of &lt;code&gt;a&lt;/code&gt;), the changed value is going to be reflected in all the instance of &lt;code&gt;A&lt;/code&gt; class.
Let's go ahead and do that:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bueno, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.temp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funcion&amp;oacute; como se esperaba, pero &amp;iquest;c&amp;oacute;mo demonios funcion&amp;oacute; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A.temp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bueno, funcion&amp;oacute; porque temp es un atributo de clase. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Todo en Python es un objeto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; A tambi&amp;eacute;n es un objeto de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;type&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de clase &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, el atributo temp es un atributo mantenido por la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;clase &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y si cambia el valor de temp a trav&amp;eacute;s de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (y no a trav&amp;eacute;s de una instancia de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), el valor cambiado se reflejar&amp;aacute; en toda la instancia de la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;clase &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; .&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Avancemos y hagamos eso:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7fb0d29cd054143d55ee12d3c58343c48c9ef54c" translate="yes" xml:space="preserve">
          <source>What I want is this behavior:</source>
          <target state="translated">Lo que quiero es este comportamiento:</target>
        </trans-unit>
        <trans-unit id="c2c04ab0ee25e2699bd6c4c6f5077db8cf714d0d" translate="yes" xml:space="preserve">
          <source>Yes you must declare in the &quot;constructor&quot; if you want that the list becomes an object property and not a class property.</source>
          <target state="translated">Sí,debe declarar en el &quot;constructor&quot; si quiere que la lista se convierta en un objeto de propiedad y no en una propiedad de clase.</target>
        </trans-unit>
        <trans-unit id="7181555f5c909677dcebabb1171aa7e8edab993e" translate="yes" xml:space="preserve">
          <source>You declared &quot;list&quot; as a &quot;class level property&quot; and not &quot;instance level property&quot;.  In order to have properties scoped at the instance level, you need to initialize them through referencing with the &quot;self&quot; parameter in the &lt;code&gt;__init__&lt;/code&gt; method (or elsewhere depending on the situation).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Usted declar&amp;oacute; &quot;lista&quot; como una &quot;propiedad de nivel de clase&quot; y no como &quot;propiedad de nivel de instancia&quot;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para que las propiedades tengan un alcance en el nivel de instancia, debe inicializarlas haciendo referencia al par&amp;aacute;metro &quot;self&quot; en el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (o en otro lugar seg&amp;uacute;n la situaci&amp;oacute;n).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9e2338337cd586ba3ecc5012df28b2390fe478c" translate="yes" xml:space="preserve">
          <source>You don't strictly have to initialize the instance properties in the &lt;code&gt;__init__&lt;/code&gt; method but it makes for easier understanding.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No tiene que inicializar estrictamente las propiedades de instancia en el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero facilita la comprensi&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ec562a32caaa1a8379748b6f2ed035cb9f4d5c5" translate="yes" xml:space="preserve">
          <source>You want this:</source>
          <target state="translated">Quieres esto:</target>
        </trans-unit>
        <trans-unit id="8d849b81e1fb652f0731abcfba9947f8fca23a29" translate="yes" xml:space="preserve">
          <source>first of all define a class as follows:</source>
          <target state="translated">en primer lugar definir una clase de la siguiente manera:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
