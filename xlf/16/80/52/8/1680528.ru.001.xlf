<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/1680528">
    <body>
      <group id="1680528">
        <trans-unit id="4fd61f4a4785a7c8e735fe3077fdee4a8efd3399" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__()&lt;/code&gt; function. This special function gets called whenever a new object of that class is instantiated.</source>
          <target state="translated">&lt;code&gt;__init__()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Функция &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;__init __ ()&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Эта специальная функция вызывается всякий раз, когда создается новый объект этого класса.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1f18bf2512f14695295655499e2ea8defa212c8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IN SHORT&lt;/strong&gt; Class variables have NOTHING to do with instance variables.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;IN SHORT&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Переменные класса не имеют ничего общего с переменными экземпляра.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7737641c935f372c22ff29c2951c5adfaa0e96b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;More clearly&lt;/strong&gt; They just happen to be in the scope for lookups on instances. Class variables are in fact &lt;em&gt;instance variables&lt;/em&gt; on the class object itself.  You can also have &lt;em&gt;metaclass variables&lt;/em&gt; if you want as well because metaclasses themselves are objects too.  Everything is an object whether it is used to create other objects or not, so do not get bound up in the semantics of other languages usage of the word class.  In python, a class is really just an object that is used to determine how to create other objects and what their behaviors will be.  Metaclasses are classes that create classes, just to further illustrate this point.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Более ясно, что&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; они просто попадают в область поиска экземпляров. Переменные класса фактически являются переменными &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;экземпляра&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; самого объекта класса. Вы также можете иметь &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;переменные метакласса,&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; если хотите, потому что сами метаклассы тоже являются объектами. Все является объектом, независимо от того, используется ли он для создания других объектов или нет, поэтому не ограничивайтесь семантикой использования слова в классе других языков. В Python класс - это просто объект, который используется для определения того, как создавать другие объекты и как они будут себя вести. Метаклассы - это классы, которые создают классы, просто чтобы проиллюстрировать этот момент.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="adb90fd0dba95b3bf743bd08f034a23fe615dd99" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note that &lt;code&gt;temp&lt;/code&gt; attribute is listed among &lt;code&gt;A&lt;/code&gt; class's attributes while &lt;code&gt;x&lt;/code&gt; is listed for the instance.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обратите внимание, что &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;атрибут &lt;/font&gt;&lt;/font&gt; &lt;code&gt;temp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; указан среди &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;атрибутов класса &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , а &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - для экземпляра.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a57e6c8146cba9805a05e1ce01a54ed10893761" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Now if we compare &lt;code&gt;id(a.temp)&lt;/code&gt; and &lt;code&gt;id(A.temp)&lt;/code&gt;, they will be different.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь, если мы сравним &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id(a.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id(A.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , они будут другими.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e91fd438020e6e6b42c2a1a01efe8b9b9d3dbdb" translate="yes" xml:space="preserve">
          <source>A change method sets &lt;code&gt;self.temp&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Метод изменения устанавливает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self.temp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a8355fe4fe25434d255f1db4ff07d23e42f6b70" translate="yes" xml:space="preserve">
          <source>Although the accepted anwer is spot on, I would like to add a bit description.</source>
          <target state="translated">Несмотря на то,что принятый ответ включен,я хотел бы добавить немного описания.</target>
        </trans-unit>
        <trans-unit id="4ced2a06e5ce2d398646a464390dafccb0e1a82f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;__init__&lt;/code&gt; method which sets &lt;code&gt;self.x&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; метод , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;который устанавливает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self.x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="de16bc5547d6232b2074cb7beeb732bf08187e0d" translate="yes" xml:space="preserve">
          <source>Any Python object is automatically given a &lt;code&gt;__dict__&lt;/code&gt; attribute, which contains its list of attributes. Let's investigate what this dictionary contains for our example objects:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Любой объект Python автоматически получает &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;атрибут &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , который содержит его список атрибутов. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Давайте исследуем, что этот словарь содержит для наших примеров объектов:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aeeaac517ddb7e2bf20a8119fab5ca9c7dea515b" translate="yes" xml:space="preserve">
          <source>Class attributes do not become instance attributes when an instance is created. They become instance attributes when a value is assigned to them.</source>
          <target state="translated">Атрибуты класса не становятся атрибутами экземпляра при создании экземпляра.Они становятся атрибутами экземпляра,когда им присваивается значение.</target>
        </trans-unit>
        <trans-unit id="de938488951c6540386738b2cf8183e09610edaa" translate="yes" xml:space="preserve">
          <source>Clearly they are sharing the data in class &lt;code&gt;a&lt;/code&gt;. How do I get separate instances to achieve the behavior I desire?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Очевидно, они делятся данными в классе &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как получить отдельные экземпляры для достижения желаемого поведения?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bbbbb7c34e5b16275aa4fcb2f2c183ed6aacfb1a" translate="yes" xml:space="preserve">
          <source>Declaring the variables inside the class declaration makes them &quot;class&quot; members and not instance members. Declaring them inside the &lt;code&gt;__init__&lt;/code&gt; method makes sure that a new instance of the members is created alongside every new instance of the object, which is the behavior you're looking for.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Объявление переменных внутри объявления класса делает их членами класса, а не членами экземпляра. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Объявление их в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;методе &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; гарантирует, что новый экземпляр членов будет создан вместе с каждым новым экземпляром объекта, что является поведением, которое вы ищете.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>
        </trans-unit>
        <trans-unit id="ab437f396e915f3c84e32d7c0e1bdd42663dad57" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://www.programiz.com/python-programming/class&quot;&gt;&lt;em&gt;Python Objects and Class&lt;/em&gt; by Programiz.com&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Из &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.programiz.com/python-programming/class&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объектов и классов Python&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; от Programiz.com&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="17071f0f1686cebeb5c0b735dd4082744db64b05" translate="yes" xml:space="preserve">
          <source>How to avoid having class data shared among instances</source>
          <target state="translated">Как избежать совместного использования данных класса между экземплярами</target>
        </trans-unit>
        <trans-unit id="42593861d5611703e110263c3990e75d3264cf21" translate="yes" xml:space="preserve">
          <source>However, the confusing scenario in the question will never happen to immutable objects such as numbers and strings, because their value cannot be changed without assignment. For example a code similar to the original with string attribute type works without any problem:</source>
          <target state="translated">Однако запутанный сценарий в вопросе никогда не случится с неизменяемыми объектами,такими как числа и строки,потому что их значение не может быть изменено без присваивания.Например,код,похожий на исходный со строковым типом атрибута,работает без проблем:</target>
        </trans-unit>
        <trans-unit id="312e5df175edf420b34170776f324c95f86720a7" translate="yes" xml:space="preserve">
          <source>In the original code no value is assigned to &lt;code&gt;list&lt;/code&gt; attribute after instantiation; so it remains a class attribute. Defining list inside &lt;code&gt;__init__&lt;/code&gt; works because &lt;code&gt;__init__&lt;/code&gt; is called after instantiation. Alternatively, this code would also produce the desired output:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В исходном коде никакое значение не присваивается &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;атрибуту &lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; после создания экземпляра; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;поэтому он остается атрибутом класса. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Определение списка внутри &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; работает, потому что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вызывается после создания экземпляра. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Кроме того, этот код также будет производить желаемый результат:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="682274cfe842fd4bf3feaf056bccd343c3503387" translate="yes" xml:space="preserve">
          <source>Interesting isn't it? And &lt;strong&gt;note that &lt;code&gt;id(a.temp)&lt;/code&gt; and &lt;code&gt;id(A.temp)&lt;/code&gt; are still the same&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Интересно не так ли? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;И &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;обратите внимание, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id(a.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id(A.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; остаются одинаковыми&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd29b9106227bb356912ae07ebd1700528f2e070" translate="yes" xml:space="preserve">
          <source>Let's do a small exercise</source>
          <target state="translated">Давайте сделаем небольшое упражнение</target>
        </trans-unit>
        <trans-unit id="5bede1e994af1b4b7420b4a1b52be3b3a67d12fa" translate="yes" xml:space="preserve">
          <source>Now do the following:</source>
          <target state="translated">Теперь сделай следующее:</target>
        </trans-unit>
        <trans-unit id="9c568abb96897042ccec9e236f61b3742d7438e3" translate="yes" xml:space="preserve">
          <source>Of course, what really happens when I print is:</source>
          <target state="translated">Конечно,что на самом деле происходит,когда я печатаю:</target>
        </trans-unit>
        <trans-unit id="dd00a07005af11e5fe881f6e2d1916ebb5c7bfe1" translate="yes" xml:space="preserve">
          <source>Okay now let's use our &lt;code&gt;change&lt;/code&gt; method:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Хорошо, теперь давайте использовать наш &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;метод &lt;/font&gt;&lt;/font&gt; &lt;code&gt;change&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="117a2119f3f91dff35ea8fed133127e9a5c79e4d" translate="yes" xml:space="preserve">
          <source>Pretty straight forward so far yeah? Now let's start playing around with this class. Let's initialize  this class first:</source>
          <target state="translated">Довольно прямолинейно,да? А теперь давайте начнем играть с этим классом.Давайте сначала инициализируем этот класс:</target>
        </trans-unit>
        <trans-unit id="82740682b7d59da66dac1fd3bf24ba58b49c1bdc" translate="yes" xml:space="preserve">
          <source>So how come that we get a defined value of &lt;code&gt;a.temp&lt;/code&gt; if it is not even listed for the instance &lt;code&gt;a&lt;/code&gt;. Well that's the magic of &lt;code&gt;__getattribute__()&lt;/code&gt; method. In Python the dotted syntax automatically invokes this method so when we write &lt;code&gt;a.temp&lt;/code&gt;, Python executes &lt;code&gt;a.__getattribute__('temp')&lt;/code&gt;. That method performs the attribute lookup action, i.e. finds the value of the attribute by looking in different places.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так почему же мы получаем определенное значение &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.temp&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; если оно даже не указано для экземпляра &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Это волшебство метода &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__getattribute__()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . В Python точечный синтаксис автоматически вызывает этот метод, поэтому, когда мы пишем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.temp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , Python выполняет &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.__getattribute__('temp')&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Этот метод выполняет действие поиска атрибута, то есть находит значение атрибута, просматривая разные места.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b89ab222a03886284efefea7bc76bf35028df559" translate="yes" xml:space="preserve">
          <source>So nearly every response here seems to miss a particular point.  Class variables &lt;strong&gt;never&lt;/strong&gt; become instance variables as demonstrated by the code below.  By utilizing a metaclass to intercept variable assignment at the class level, we can see that when a.myattr is reassigned, the field assignment magic method on the class is not called.  This is because the assignment &lt;strong&gt;creates a new instance variable&lt;/strong&gt;.  This behavior has &lt;strong&gt;absolutely nothing&lt;/strong&gt; to do with the class variable as demonstrated by the second class which has no class variables and yet still allows field assignment.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, почти каждый ответ здесь, кажется, пропускает определенный момент. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Переменные класса &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;никогда не&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; становятся переменными экземпляра, как показано в коде ниже. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Используя метакласс для перехвата присваивания переменных на уровне класса, мы можем видеть, что при переназначении a.myattr магический метод присваивания поля классу не вызывается. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это потому, что присваивание &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;создает новую переменную экземпляра&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это поведение не имеет &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;абсолютно никакого отношения&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; к переменной класса, что продемонстрировано вторым классом, который не имеет переменных класса и все же позволяет присваивать поля.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00482718055d7d9ea43e63a6cd79e05bcd6fa705" translate="yes" xml:space="preserve">
          <source>So to summarize: &lt;strong&gt;class attributes become instance attributes if and only if a value is assigned to them after instantiation, being in the &lt;code&gt;__init__&lt;/code&gt; method or not&lt;/strong&gt;. This is a good thing because this way you can have static attributes if you never assign a value to an attribute after instantiation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Итак, подведем итог: &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;атрибуты класса становятся атрибутами экземпляра тогда и только тогда, когда им присваивается значение после создания экземпляра, находящегося в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;методе &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или нет&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это хорошо, потому что таким образом вы можете иметь статические атрибуты, если вы никогда не назначаете значение атрибуту после создания экземпляра.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b3cc3604342b8a666176e392295eb3d65b54f3e" translate="yes" xml:space="preserve">
          <source>So what do we have here?</source>
          <target state="translated">Так что у нас тут?</target>
        </trans-unit>
        <trans-unit id="25f802ea1c0f9d6cd6733df4e5711c9a99210efd" translate="yes" xml:space="preserve">
          <source>The accepted answer works but a little more explanation does not hurt.</source>
          <target state="translated">Принятый ответ работает,но немного больше объяснений не повредит.</target>
        </trans-unit>
        <trans-unit id="8b5b1db714081a509e39cb45652805e78b7b9b13" translate="yes" xml:space="preserve">
          <source>The standard implementation of &lt;code&gt;__getattribute__()&lt;/code&gt; searches first the internal dictionary (&lt;strong&gt;dict&lt;/strong&gt;) of an object, then the type of the object itself. In this case &lt;code&gt;a.__getattribute__('temp')&lt;/code&gt; executes first &lt;code&gt;a.__dict__['temp']&lt;/code&gt; and then &lt;code&gt;a.__class__.__dict__['temp']&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Стандартная реализация &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__getattribute__()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ищет сначала внутренний словарь ( &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;dict&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) объекта, а затем тип самого объекта. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В этом случае &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.__getattribute__('temp')&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; выполняется сначала &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.__dict__['temp']&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; а затем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.__class__.__dict__['temp']&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8339c7d8e57c9de0805e3c09fd042f7054f71d5" translate="yes" xml:space="preserve">
          <source>This type of function is also called constructors in Object Oriented
  Programming (OOP). We normally use it to initialize all the variables.</source>
          <target state="translated">Этот тип функций также называют конструкторами в объектно-ориентированном программировании (ООП).Обычно мы используем ее для инициализации всех переменных.</target>
        </trans-unit>
        <trans-unit id="bf9ea6c627f7d7feca239deee8b894e096f8cb42" translate="yes" xml:space="preserve">
          <source>To protect your variable shared by other instance you need to create new instance variable each time you create an instance. When you are declaring a variable inside a class it's class variable and shared by all instance. If you want to make it for instance wise need to use the &lt;strong&gt;init&lt;/strong&gt; method to reinitialize the variable as  refer to the instance</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чтобы защитить вашу переменную, совместно используемую другим экземпляром, вам нужно создавать новую переменную экземпляра каждый раз, когда вы создаете экземпляр. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда вы объявляете переменную внутри класса, она является переменной класса и используется всеми экземплярами. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы хотите сделать это, например, необходимо использовать &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;метод &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;init&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для повторной инициализации переменной, как указано в экземпляре&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cacbf5c08e2c79ef45ecf2191fa143e3253ae55d" translate="yes" xml:space="preserve">
          <source>We have a very simple class which has an attribute &lt;code&gt;temp&lt;/code&gt; which is a string</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;У нас есть очень простой класс, который имеет атрибут &lt;/font&gt;&lt;/font&gt; &lt;code&gt;temp&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который является строкой&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c9ded3dc6b0582611a6935fc2b68f8df9e06643" translate="yes" xml:space="preserve">
          <source>Well now that we have used &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;print(a.temp)&lt;/code&gt; gives us a different value from &lt;code&gt;print(A.temp)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь, когда мы использовали &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;print(a.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; дает нам другое значение, чем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;print(A.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d75b8daa3a74e9e54c95f985fbf6a46fe5301552" translate="yes" xml:space="preserve">
          <source>Well, &lt;code&gt;a.temp&lt;/code&gt; worked as expected but how the hell did &lt;code&gt;A.temp&lt;/code&gt; work? Well it worked because temp is a class attribute. Everything in python is an object. Here A is also an object of class &lt;code&gt;type&lt;/code&gt;. Thus the attribute temp is an attribute held by the &lt;code&gt;A&lt;/code&gt; class and if you change the value of temp through &lt;code&gt;A&lt;/code&gt; (and not through an instance of &lt;code&gt;a&lt;/code&gt;), the changed value is going to be reflected in all the instance of &lt;code&gt;A&lt;/code&gt; class.
Let's go ahead and do that:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Хорошо, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.temp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; работал как ожидалось, но как, черт возьми, работал &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A.temp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ну, это работает, потому что temp является атрибутом класса. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Все в питоне является объектом. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Здесь А также объект класса &lt;/font&gt;&lt;/font&gt; &lt;code&gt;type&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, атрибут temp является атрибутом, хранящимся в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;классе &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и если вы измените значение temp через &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (а не через экземпляр &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), измененное значение будет отражено во всех экземплярах &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;класса &lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; .&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Давайте продолжим и сделаем это:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7fb0d29cd054143d55ee12d3c58343c48c9ef54c" translate="yes" xml:space="preserve">
          <source>What I want is this behavior:</source>
          <target state="translated">Что я хочу,так это такое поведение:</target>
        </trans-unit>
        <trans-unit id="c2c04ab0ee25e2699bd6c4c6f5077db8cf714d0d" translate="yes" xml:space="preserve">
          <source>Yes you must declare in the &quot;constructor&quot; if you want that the list becomes an object property and not a class property.</source>
          <target state="translated">Да,вы должны объявить в &quot;конструкторе&quot;,если хотите,чтобы список стал свойством объекта,а не класса.</target>
        </trans-unit>
        <trans-unit id="7181555f5c909677dcebabb1171aa7e8edab993e" translate="yes" xml:space="preserve">
          <source>You declared &quot;list&quot; as a &quot;class level property&quot; and not &quot;instance level property&quot;.  In order to have properties scoped at the instance level, you need to initialize them through referencing with the &quot;self&quot; parameter in the &lt;code&gt;__init__&lt;/code&gt; method (or elsewhere depending on the situation).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы объявили &amp;laquo;список&amp;raquo; как &amp;laquo;свойство уровня класса&amp;raquo;, а не как &amp;laquo;свойство уровня экземпляра&amp;raquo;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для того чтобы свойства находились в области видимости на уровне экземпляра, вам необходимо инициализировать их, ссылаясь на параметр &amp;laquo;self&amp;raquo; в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;методе &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (или в другом месте, в зависимости от ситуации).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9e2338337cd586ba3ecc5012df28b2390fe478c" translate="yes" xml:space="preserve">
          <source>You don't strictly have to initialize the instance properties in the &lt;code&gt;__init__&lt;/code&gt; method but it makes for easier understanding.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вам не обязательно инициализировать свойства экземпляра в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;методе &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; но это облегчает понимание.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ec562a32caaa1a8379748b6f2ed035cb9f4d5c5" translate="yes" xml:space="preserve">
          <source>You want this:</source>
          <target state="translated">Ты хочешь этого:</target>
        </trans-unit>
        <trans-unit id="8d849b81e1fb652f0731abcfba9947f8fca23a29" translate="yes" xml:space="preserve">
          <source>first of all define a class as follows:</source>
          <target state="translated">Прежде всего,определите класс следующим образом:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
