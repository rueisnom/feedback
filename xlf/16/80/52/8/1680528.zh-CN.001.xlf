<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/1680528">
    <body>
      <group id="1680528">
        <trans-unit id="4fd61f4a4785a7c8e735fe3077fdee4a8efd3399" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__()&lt;/code&gt; function. This special function gets called whenever a new object of that class is instantiated.</source>
          <target state="translated">&lt;code&gt;__init__()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每当实例化该类的新对象时，都会调用此特殊函数。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1f18bf2512f14695295655499e2ea8defa212c8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IN SHORT&lt;/strong&gt; Class variables have NOTHING to do with instance variables.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;IN SHORT&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类变量与实例变量无关。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7737641c935f372c22ff29c2951c5adfaa0e96b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;More clearly&lt;/strong&gt; They just happen to be in the scope for lookups on instances. Class variables are in fact &lt;em&gt;instance variables&lt;/em&gt; on the class object itself.  You can also have &lt;em&gt;metaclass variables&lt;/em&gt; if you want as well because metaclasses themselves are objects too.  Everything is an object whether it is used to create other objects or not, so do not get bound up in the semantics of other languages usage of the word class.  In python, a class is really just an object that is used to determine how to create other objects and what their behaviors will be.  Metaclasses are classes that create classes, just to further illustrate this point.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更清楚地说，&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它们恰好在实例查找范围之内。实际上，类变量是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类对象本身上的&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实例变量&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。如果需要，也可以具有&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;元类变量&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，因为元类本身也是对象。无论是否用于创建其他对象，所有事物都是对象，因此不要被单词类的其他语言所使用的语义所束缚。在python中，类实际上只是一个对象，用于确定如何创建其他对象以及它们的行为。元类是创建类的类，只是为了进一步说明这一点。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="adb90fd0dba95b3bf743bd08f034a23fe615dd99" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note that &lt;code&gt;temp&lt;/code&gt; attribute is listed among &lt;code&gt;A&lt;/code&gt; class's attributes while &lt;code&gt;x&lt;/code&gt; is listed for the instance.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请注意，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;temp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性列在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类的属性中，而&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;列于实例中。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a57e6c8146cba9805a05e1ce01a54ed10893761" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Now if we compare &lt;code&gt;id(a.temp)&lt;/code&gt; and &lt;code&gt;id(A.temp)&lt;/code&gt;, they will be different.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，如果我们比较&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id(a.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id(A.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它们将有所不同。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e91fd438020e6e6b42c2a1a01efe8b9b9d3dbdb" translate="yes" xml:space="preserve">
          <source>A change method sets &lt;code&gt;self.temp&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更改方法设置&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self.temp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a8355fe4fe25434d255f1db4ff07d23e42f6b70" translate="yes" xml:space="preserve">
          <source>Although the accepted anwer is spot on, I would like to add a bit description.</source>
          <target state="translated">虽然接受的答案很到位,但我想补充一点说明。</target>
        </trans-unit>
        <trans-unit id="4ced2a06e5ce2d398646a464390dafccb0e1a82f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;__init__&lt;/code&gt; method which sets &lt;code&gt;self.x&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;设置&lt;/font&gt; &lt;code&gt;self.x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de16bc5547d6232b2074cb7beeb732bf08187e0d" translate="yes" xml:space="preserve">
          <source>Any Python object is automatically given a &lt;code&gt;__dict__&lt;/code&gt; attribute, which contains its list of attributes. Let's investigate what this dictionary contains for our example objects:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;任何Python对象都会自动获得&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性，该属性包含其属性列表。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;让我们研究一下该词典为示例对象包含的内容：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aeeaac517ddb7e2bf20a8119fab5ca9c7dea515b" translate="yes" xml:space="preserve">
          <source>Class attributes do not become instance attributes when an instance is created. They become instance attributes when a value is assigned to them.</source>
          <target state="translated">当创建一个实例时,类属性不会成为实例属性。当一个值被分配给它们时,它们会成为实例属性。</target>
        </trans-unit>
        <trans-unit id="de938488951c6540386738b2cf8183e09610edaa" translate="yes" xml:space="preserve">
          <source>Clearly they are sharing the data in class &lt;code&gt;a&lt;/code&gt;. How do I get separate instances to achieve the behavior I desire?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;显然，他们正在共享&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类中的数据&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如何获得单独的实例以实现所需的行为？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bbbbb7c34e5b16275aa4fcb2f2c183ed6aacfb1a" translate="yes" xml:space="preserve">
          <source>Declaring the variables inside the class declaration makes them &quot;class&quot; members and not instance members. Declaring them inside the &lt;code&gt;__init__&lt;/code&gt; method makes sure that a new instance of the members is created alongside every new instance of the object, which is the behavior you're looking for.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在类声明中声明变量会使它们成为&amp;ldquo;类&amp;rdquo;成员，而不是实例成员。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明它们&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以确保在对象的每个新实例旁边创建一个新的成员实例，这就是您要查找的行为。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="ab437f396e915f3c84e32d7c0e1bdd42663dad57" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://www.programiz.com/python-programming/class&quot;&gt;&lt;em&gt;Python Objects and Class&lt;/em&gt; by Programiz.com&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从&lt;/font&gt;&lt;a href=&quot;https://www.programiz.com/python-programming/class&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Programiz.com的&lt;/font&gt;&lt;/a&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python对象和类中获取&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="17071f0f1686cebeb5c0b735dd4082744db64b05" translate="yes" xml:space="preserve">
          <source>How to avoid having class data shared among instances</source>
          <target state="translated">如何避免在实例之间共享类数据?</target>
        </trans-unit>
        <trans-unit id="42593861d5611703e110263c3990e75d3264cf21" translate="yes" xml:space="preserve">
          <source>However, the confusing scenario in the question will never happen to immutable objects such as numbers and strings, because their value cannot be changed without assignment. For example a code similar to the original with string attribute type works without any problem:</source>
          <target state="translated">然而,问题中的混乱场景永远不会发生在数字和字符串等不可变的对象上,因为它们的值在没有赋值的情况下是无法改变的。例如一个类似于原题中的字符串属性类型的代码就没有任何问题。</target>
        </trans-unit>
        <trans-unit id="312e5df175edf420b34170776f324c95f86720a7" translate="yes" xml:space="preserve">
          <source>In the original code no value is assigned to &lt;code&gt;list&lt;/code&gt; attribute after instantiation; so it remains a class attribute. Defining list inside &lt;code&gt;__init__&lt;/code&gt; works because &lt;code&gt;__init__&lt;/code&gt; is called after instantiation. Alternatively, this code would also produce the desired output:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在原始代码中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，实例化后&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;未将任何值分配给&lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性；&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此它仍然是一个类属性。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内的列表是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可行的，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因为&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在实例化之后调用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;另外，此代码还将产生所需的输出：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="682274cfe842fd4bf3feaf056bccd343c3503387" translate="yes" xml:space="preserve">
          <source>Interesting isn't it? And &lt;strong&gt;note that &lt;code&gt;id(a.temp)&lt;/code&gt; and &lt;code&gt;id(A.temp)&lt;/code&gt; are still the same&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有趣吗？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而且&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;需要注意的是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id(a.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id(A.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仍然是相同的&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd29b9106227bb356912ae07ebd1700528f2e070" translate="yes" xml:space="preserve">
          <source>Let's do a small exercise</source>
          <target state="translated">我们来做个小练习</target>
        </trans-unit>
        <trans-unit id="5bede1e994af1b4b7420b4a1b52be3b3a67d12fa" translate="yes" xml:space="preserve">
          <source>Now do the following:</source>
          <target state="translated">现在做以下几点:</target>
        </trans-unit>
        <trans-unit id="9c568abb96897042ccec9e236f61b3742d7438e3" translate="yes" xml:space="preserve">
          <source>Of course, what really happens when I print is:</source>
          <target state="translated">当然,我打印的时候,真正的情况是。</target>
        </trans-unit>
        <trans-unit id="dd00a07005af11e5fe881f6e2d1916ebb5c7bfe1" translate="yes" xml:space="preserve">
          <source>Okay now let's use our &lt;code&gt;change&lt;/code&gt; method:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;好吧，现在让我们使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;change&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="117a2119f3f91dff35ea8fed133127e9a5c79e4d" translate="yes" xml:space="preserve">
          <source>Pretty straight forward so far yeah? Now let's start playing around with this class. Let's initialize  this class first:</source>
          <target state="translated">到现在为止,很直接了吧?现在让我们开始玩弄这个类。我们先来初始化一下这个班级。</target>
        </trans-unit>
        <trans-unit id="82740682b7d59da66dac1fd3bf24ba58b49c1bdc" translate="yes" xml:space="preserve">
          <source>So how come that we get a defined value of &lt;code&gt;a.temp&lt;/code&gt; if it is not even listed for the instance &lt;code&gt;a&lt;/code&gt;. Well that's the magic of &lt;code&gt;__getattribute__()&lt;/code&gt; method. In Python the dotted syntax automatically invokes this method so when we write &lt;code&gt;a.temp&lt;/code&gt;, Python executes &lt;code&gt;a.__getattribute__('temp')&lt;/code&gt;. That method performs the attribute lookup action, i.e. finds the value of the attribute by looking in different places.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果实例&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;甚至未列出&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.temp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的定义值，怎么会得到&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。嗯，这就是&lt;/font&gt; &lt;code&gt;__getattribute__()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的魔力&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。在Python中，虚线语法会自动调用此方法，因此当我们编写&lt;/font&gt; &lt;code&gt;a.temp&lt;/code&gt; 时&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，Python将执行&lt;/font&gt; &lt;code&gt;a.__getattribute__('temp')&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;。该方法执行属性查找操作，即通过在不同位置查找来找到属性的值。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b89ab222a03886284efefea7bc76bf35028df559" translate="yes" xml:space="preserve">
          <source>So nearly every response here seems to miss a particular point.  Class variables &lt;strong&gt;never&lt;/strong&gt; become instance variables as demonstrated by the code below.  By utilizing a metaclass to intercept variable assignment at the class level, we can see that when a.myattr is reassigned, the field assignment magic method on the class is not called.  This is because the assignment &lt;strong&gt;creates a new instance variable&lt;/strong&gt;.  This behavior has &lt;strong&gt;absolutely nothing&lt;/strong&gt; to do with the class variable as demonstrated by the second class which has no class variables and yet still allows field assignment.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，几乎每一个回应似乎都遗漏了一个特定的观点。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如下面的代码所示，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类变量&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;永远不会&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;成为实例变量。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过使用元类在类级别拦截变量分配，我们可以看到，当重新分配a.myattr时，不会调用该类上的字段分配魔术方法。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是因为分配&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;会创建一个新的实例变量&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此行为&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与类变量&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;绝对无关&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，如第二个类所示，该类没有类变量，但仍允许字段分配。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00482718055d7d9ea43e63a6cd79e05bcd6fa705" translate="yes" xml:space="preserve">
          <source>So to summarize: &lt;strong&gt;class attributes become instance attributes if and only if a value is assigned to them after instantiation, being in the &lt;code&gt;__init__&lt;/code&gt; method or not&lt;/strong&gt;. This is a good thing because this way you can have static attributes if you never assign a value to an attribute after instantiation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;总结一下：&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类属性成为实例属性，当且仅当在实例化之后为它们分配值时，才使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是一件好事，因为如果在实例化后再也没有为属性分配值，则可以使用静态属性。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b3cc3604342b8a666176e392295eb3d65b54f3e" translate="yes" xml:space="preserve">
          <source>So what do we have here?</source>
          <target state="translated">那么,我们这里有什么?</target>
        </trans-unit>
        <trans-unit id="25f802ea1c0f9d6cd6733df4e5711c9a99210efd" translate="yes" xml:space="preserve">
          <source>The accepted answer works but a little more explanation does not hurt.</source>
          <target state="translated">接受的答案是有效的,但多解释一下也无妨。</target>
        </trans-unit>
        <trans-unit id="8b5b1db714081a509e39cb45652805e78b7b9b13" translate="yes" xml:space="preserve">
          <source>The standard implementation of &lt;code&gt;__getattribute__()&lt;/code&gt; searches first the internal dictionary (&lt;strong&gt;dict&lt;/strong&gt;) of an object, then the type of the object itself. In this case &lt;code&gt;a.__getattribute__('temp')&lt;/code&gt; executes first &lt;code&gt;a.__dict__['temp']&lt;/code&gt; and then &lt;code&gt;a.__class__.__dict__['temp']&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;__getattribute__()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的标准实现&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;首先搜索&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的内部字典（&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;dict&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;），然后搜索对象本身的类型。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在这种情况下，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.__getattribute__('temp')&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;首先执行&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.__dict__['temp']&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，然后执行&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.__class__.__dict__['temp']&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8339c7d8e57c9de0805e3c09fd042f7054f71d5" translate="yes" xml:space="preserve">
          <source>This type of function is also called constructors in Object Oriented
  Programming (OOP). We normally use it to initialize all the variables.</source>
          <target state="translated">这种类型的函数在面向对象编程(OOP)中也被称为构造函数。我们通常用它来初始化所有的变量。</target>
        </trans-unit>
        <trans-unit id="bf9ea6c627f7d7feca239deee8b894e096f8cb42" translate="yes" xml:space="preserve">
          <source>To protect your variable shared by other instance you need to create new instance variable each time you create an instance. When you are declaring a variable inside a class it's class variable and shared by all instance. If you want to make it for instance wise need to use the &lt;strong&gt;init&lt;/strong&gt; method to reinitialize the variable as  refer to the instance</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为了保护变量与其他实例共享，您每次创建实例时都需要创建新的实例变量。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在类中声明变量时，它是类变量，并由所有实例共享。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您想使其实例化，则需要使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;init&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法重新初始化变量，以引用实例&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cacbf5c08e2c79ef45ecf2191fa143e3253ae55d" translate="yes" xml:space="preserve">
          <source>We have a very simple class which has an attribute &lt;code&gt;temp&lt;/code&gt; which is a string</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们有一个非常简单的类，它的属性&lt;/font&gt;&lt;/font&gt; &lt;code&gt;temp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是一个字符串&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c9ded3dc6b0582611a6935fc2b68f8df9e06643" translate="yes" xml:space="preserve">
          <source>Well now that we have used &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;print(a.temp)&lt;/code&gt; gives us a different value from &lt;code&gt;print(A.temp)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;好了，既然我们使用了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;print(a.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;给我们的值不同于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;print(A.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d75b8daa3a74e9e54c95f985fbf6a46fe5301552" translate="yes" xml:space="preserve">
          <source>Well, &lt;code&gt;a.temp&lt;/code&gt; worked as expected but how the hell did &lt;code&gt;A.temp&lt;/code&gt; work? Well it worked because temp is a class attribute. Everything in python is an object. Here A is also an object of class &lt;code&gt;type&lt;/code&gt;. Thus the attribute temp is an attribute held by the &lt;code&gt;A&lt;/code&gt; class and if you change the value of temp through &lt;code&gt;A&lt;/code&gt; (and not through an instance of &lt;code&gt;a&lt;/code&gt;), the changed value is going to be reflected in all the instance of &lt;code&gt;A&lt;/code&gt; class.
Let's go ahead and do that:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;好吧，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.temp&lt;/code&gt; 可以&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;按预期工作，但是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A.temp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;到底是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;怎么&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;工作的？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;很好，因为temp是一个类属性。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;python中的所有内容都是一个对象。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这里A也是类&lt;/font&gt;&lt;/font&gt; &lt;code&gt;type&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，属性临时是由持有的属性&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类，如果你通过改变温度值&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（而不是通过实例&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;），更改的值会在所有被反映的情况&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;让我们继续这样做：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7fb0d29cd054143d55ee12d3c58343c48c9ef54c" translate="yes" xml:space="preserve">
          <source>What I want is this behavior:</source>
          <target state="translated">我想要的是这种行为。</target>
        </trans-unit>
        <trans-unit id="c2c04ab0ee25e2699bd6c4c6f5077db8cf714d0d" translate="yes" xml:space="preserve">
          <source>Yes you must declare in the &quot;constructor&quot; if you want that the list becomes an object property and not a class property.</source>
          <target state="translated">是的,如果你想让列表成为对象属性而不是类属性,你必须在 &quot;构造函数 &quot;中声明。</target>
        </trans-unit>
        <trans-unit id="7181555f5c909677dcebabb1171aa7e8edab993e" translate="yes" xml:space="preserve">
          <source>You declared &quot;list&quot; as a &quot;class level property&quot; and not &quot;instance level property&quot;.  In order to have properties scoped at the instance level, you need to initialize them through referencing with the &quot;self&quot; parameter in the &lt;code&gt;__init__&lt;/code&gt; method (or elsewhere depending on the situation).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您将&amp;ldquo;列表&amp;rdquo;声明为&amp;ldquo;类级别的属性&amp;rdquo;，而不是&amp;ldquo;实例级别的属性&amp;rdquo;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为了使属性在实例级别作用域，您需要通过在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法（或其他情况，视情况而定）中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&amp;ldquo; self&amp;rdquo;参数进行引用来初始化属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9e2338337cd586ba3ecc5012df28b2390fe478c" translate="yes" xml:space="preserve">
          <source>You don't strictly have to initialize the instance properties in the &lt;code&gt;__init__&lt;/code&gt; method but it makes for easier understanding.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您不必严格地在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;初始化实例属性，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但这会使您更容易理解。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ec562a32caaa1a8379748b6f2ed035cb9f4d5c5" translate="yes" xml:space="preserve">
          <source>You want this:</source>
          <target state="translated">你要的是这个</target>
        </trans-unit>
        <trans-unit id="8d849b81e1fb652f0731abcfba9947f8fca23a29" translate="yes" xml:space="preserve">
          <source>first of all define a class as follows:</source>
          <target state="translated">首先对类的定义如下:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
