<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/1680528">
    <body>
      <group id="1680528">
        <trans-unit id="4fd61f4a4785a7c8e735fe3077fdee4a8efd3399" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__()&lt;/code&gt; function. This special function gets called whenever a new object of that class is instantiated.</source>
          <target state="translated">&lt;code&gt;__init__()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この特別な関数は、そのクラスの新しいオブジェクトがインスタンス化されるたびに呼び出されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1f18bf2512f14695295655499e2ea8defa212c8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IN SHORT&lt;/strong&gt; Class variables have NOTHING to do with instance variables.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;IN SHORT&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス変数は、インスタンス変数とは何の関係もありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7737641c935f372c22ff29c2951c5adfaa0e96b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;More clearly&lt;/strong&gt; They just happen to be in the scope for lookups on instances. Class variables are in fact &lt;em&gt;instance variables&lt;/em&gt; on the class object itself.  You can also have &lt;em&gt;metaclass variables&lt;/em&gt; if you want as well because metaclasses themselves are objects too.  Everything is an object whether it is used to create other objects or not, so do not get bound up in the semantics of other languages usage of the word class.  In python, a class is really just an object that is used to determine how to create other objects and what their behaviors will be.  Metaclasses are classes that create classes, just to further illustrate this point.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;より明確に、&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それらはたまたまインスタンスのルックアップのスコープ内にあります。クラス変数は、実際&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;にはクラスオブジェクト自体の&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンス変数です&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メタクラス自体もオブジェクトであるため、必要に応じ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メタクラス変数を使用&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;することもでき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。他のオブジェクトの作成に使用されるかどうかに関係なく、すべてがオブジェクトであるため、他の言語の単語クラスの使用法の意味に縛られないでください。 Pythonでは、クラスは実際には単なるオブジェクトであり、他のオブジェクトを作成する方法とその動作を決定するために使用されます。メタクラスは、この点をさらに説明するために、クラスを作成するクラスです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="adb90fd0dba95b3bf743bd08f034a23fe615dd99" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note that &lt;code&gt;temp&lt;/code&gt; attribute is listed among &lt;code&gt;A&lt;/code&gt; class's attributes while &lt;code&gt;x&lt;/code&gt; is listed for the instance.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;temp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスの属性に含まれ、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はインスタンスに含ま&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れることに注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a57e6c8146cba9805a05e1ce01a54ed10893761" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Now if we compare &lt;code&gt;id(a.temp)&lt;/code&gt; and &lt;code&gt;id(A.temp)&lt;/code&gt;, they will be different.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id(a.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id(A.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を比較する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、それらは異なります。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e91fd438020e6e6b42c2a1a01efe8b9b9d3dbdb" translate="yes" xml:space="preserve">
          <source>A change method sets &lt;code&gt;self.temp&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;changeメソッドは&lt;/font&gt; &lt;code&gt;self.temp&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定し&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6a8355fe4fe25434d255f1db4ff07d23e42f6b70" translate="yes" xml:space="preserve">
          <source>Although the accepted anwer is spot on, I would like to add a bit description.</source>
          <target state="translated">受理された回答は、その通りですが、私は少し説明を加えたいと思います。</target>
        </trans-unit>
        <trans-unit id="4ced2a06e5ce2d398646a464390dafccb0e1a82f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;__init__&lt;/code&gt; method which sets &lt;code&gt;self.x&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;self.x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を設定&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッド&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de16bc5547d6232b2074cb7beeb732bf08187e0d" translate="yes" xml:space="preserve">
          <source>Any Python object is automatically given a &lt;code&gt;__dict__&lt;/code&gt; attribute, which contains its list of attributes. Let's investigate what this dictionary contains for our example objects:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonオブジェクトには&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、属性のリストを含む&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が自動的に付与さ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このディクショナリに含まれるオブジェクトの例を調べてみましょう。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aeeaac517ddb7e2bf20a8119fab5ca9c7dea515b" translate="yes" xml:space="preserve">
          <source>Class attributes do not become instance attributes when an instance is created. They become instance attributes when a value is assigned to them.</source>
          <target state="translated">クラス属性は、インスタンスが作成されたときにはインスタンス属性にはなりません。値が代入されたときにインスタンス属性になります。</target>
        </trans-unit>
        <trans-unit id="de938488951c6540386738b2cf8183e09610edaa" translate="yes" xml:space="preserve">
          <source>Clearly they are sharing the data in class &lt;code&gt;a&lt;/code&gt;. How do I get separate instances to achieve the behavior I desire?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;明らかに、クラス&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のデータを共有しています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;希望する動作を実現するために個別のインスタンスを取得するにはどうすればよいですか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bbbbb7c34e5b16275aa4fcb2f2c183ed6aacfb1a" translate="yes" xml:space="preserve">
          <source>Declaring the variables inside the class declaration makes them &quot;class&quot; members and not instance members. Declaring them inside the &lt;code&gt;__init__&lt;/code&gt; method makes sure that a new instance of the members is created alongside every new instance of the object, which is the behavior you're looking for.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス宣言内で変数を宣言すると、変数はインスタンスメンバーではなく「クラス」メンバーになります。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内でそれらを宣言する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と、メンバーの新しいインスタンスがオブジェクトのすべての新しいインスタンスと一緒に作成されます。これは、探している動作です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="ab437f396e915f3c84e32d7c0e1bdd42663dad57" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://www.programiz.com/python-programming/class&quot;&gt;&lt;em&gt;Python Objects and Class&lt;/em&gt; by Programiz.com&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;https://www.programiz.com/python-programming/class&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Programiz.comによる&lt;/font&gt;&lt;/a&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonオブジェクトとクラス&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="17071f0f1686cebeb5c0b735dd4082744db64b05" translate="yes" xml:space="preserve">
          <source>How to avoid having class data shared among instances</source>
          <target state="translated">インスタンス間でクラスデータを共有させない方法</target>
        </trans-unit>
        <trans-unit id="42593861d5611703e110263c3990e75d3264cf21" translate="yes" xml:space="preserve">
          <source>However, the confusing scenario in the question will never happen to immutable objects such as numbers and strings, because their value cannot be changed without assignment. For example a code similar to the original with string attribute type works without any problem:</source>
          <target state="translated">しかし、数値や文字列のような不変オブジェクトは、代入なしに値を変更することができないため、質問の中の混乱したシナリオは決して起こらないでしょう。例えば、文字列属性型のオリジナルと似たようなコードは問題なく動作します。</target>
        </trans-unit>
        <trans-unit id="312e5df175edf420b34170776f324c95f86720a7" translate="yes" xml:space="preserve">
          <source>In the original code no value is assigned to &lt;code&gt;list&lt;/code&gt; attribute after instantiation; so it remains a class attribute. Defining list inside &lt;code&gt;__init__&lt;/code&gt; works because &lt;code&gt;__init__&lt;/code&gt; is called after instantiation. Alternatively, this code would also produce the desired output:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;元のコードでは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、インスタンス化後&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;list&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値が割り当てられていません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのため、クラス属性のままです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内側のリストの定義&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ので、作品を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンス化した後に呼び出されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または、このコードは、必要な出力も生成します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="682274cfe842fd4bf3feaf056bccd343c3503387" translate="yes" xml:space="preserve">
          <source>Interesting isn't it? And &lt;strong&gt;note that &lt;code&gt;id(a.temp)&lt;/code&gt; and &lt;code&gt;id(A.temp)&lt;/code&gt; are still the same&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;面白いですね。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id(a.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id(A.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は同じである&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことに注意してください&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd29b9106227bb356912ae07ebd1700528f2e070" translate="yes" xml:space="preserve">
          <source>Let's do a small exercise</source>
          <target state="translated">ちょっとした運動をしてみましょう</target>
        </trans-unit>
        <trans-unit id="5bede1e994af1b4b7420b4a1b52be3b3a67d12fa" translate="yes" xml:space="preserve">
          <source>Now do the following:</source>
          <target state="translated">では、次のようにしてください。</target>
        </trans-unit>
        <trans-unit id="9c568abb96897042ccec9e236f61b3742d7438e3" translate="yes" xml:space="preserve">
          <source>Of course, what really happens when I print is:</source>
          <target state="translated">もちろん、実際に印刷してみるとどうなるかというと</target>
        </trans-unit>
        <trans-unit id="dd00a07005af11e5fe881f6e2d1916ebb5c7bfe1" translate="yes" xml:space="preserve">
          <source>Okay now let's use our &lt;code&gt;change&lt;/code&gt; method:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;では、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;change&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用しましょう&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="117a2119f3f91dff35ea8fed133127e9a5c79e4d" translate="yes" xml:space="preserve">
          <source>Pretty straight forward so far yeah? Now let's start playing around with this class. Let's initialize  this class first:</source>
          <target state="translated">ここまでは単純明快だな?では、このクラスを使って遊んでみましょう。まずはこのクラスを初期化してみましょう。</target>
        </trans-unit>
        <trans-unit id="82740682b7d59da66dac1fd3bf24ba58b49c1bdc" translate="yes" xml:space="preserve">
          <source>So how come that we get a defined value of &lt;code&gt;a.temp&lt;/code&gt; if it is not even listed for the instance &lt;code&gt;a&lt;/code&gt;. Well that's the magic of &lt;code&gt;__getattribute__()&lt;/code&gt; method. In Python the dotted syntax automatically invokes this method so when we write &lt;code&gt;a.temp&lt;/code&gt;, Python executes &lt;code&gt;a.__getattribute__('temp')&lt;/code&gt;. That method performs the attribute lookup action, i.e. finds the value of the attribute by looking in different places.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、インスタンス&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;リストされていない場合でも&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.temp&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義された値を取得するのは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なぜですか&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。まあそれが&lt;/font&gt; &lt;code&gt;__getattribute__()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;魔法です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。 Pythonでは、ドット構文によりこのメソッドが自動的に呼び出されるため、&lt;/font&gt; &lt;code&gt;a.temp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を記述&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すると&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、Pythonは&lt;/font&gt; &lt;code&gt;a.__getattribute__('temp')&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。このメソッドは、属性ルックアップアクションを実行します。つまり、さまざまな場所を調べて属性の値を見つけます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b89ab222a03886284efefea7bc76bf35028df559" translate="yes" xml:space="preserve">
          <source>So nearly every response here seems to miss a particular point.  Class variables &lt;strong&gt;never&lt;/strong&gt; become instance variables as demonstrated by the code below.  By utilizing a metaclass to intercept variable assignment at the class level, we can see that when a.myattr is reassigned, the field assignment magic method on the class is not called.  This is because the assignment &lt;strong&gt;creates a new instance variable&lt;/strong&gt;.  This behavior has &lt;strong&gt;absolutely nothing&lt;/strong&gt; to do with the class variable as demonstrated by the second class which has no class variables and yet still allows field assignment.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、ここでのほぼすべての応答は、特定のポイントを見逃しているようです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下のコードで示されているように、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス変数&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数に&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なり&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ません&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メタクラスを利用してクラスレベルで変数割り当てをインターセプトすると、a.myattrが再割り当てされたときに、クラスのフィールド割り当てマジックメソッドが呼び出されないことがわかります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、割り当て&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;によって新しいインスタンス変数が作成される&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この動作は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、クラス変数がなくてもフィールド割り当てが可能な2番目のクラスで示されているように、クラス変数と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;まったく関係&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00482718055d7d9ea43e63a6cd79e05bcd6fa705" translate="yes" xml:space="preserve">
          <source>So to summarize: &lt;strong&gt;class attributes become instance attributes if and only if a value is assigned to them after instantiation, being in the &lt;code&gt;__init__&lt;/code&gt; method or not&lt;/strong&gt;. This is a good thing because this way you can have static attributes if you never assign a value to an attribute after instantiation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、インスタンス化後にクラス属性がインスタンス属性になるのは、インスタンス化後に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドであるかどうかにかかわらず&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、インスタンス化後に属性に値を割り当てない場合に静的属性を持つことができるため、良いことです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b3cc3604342b8a666176e392295eb3d65b54f3e" translate="yes" xml:space="preserve">
          <source>So what do we have here?</source>
          <target state="translated">で、ここには何があるんだ?</target>
        </trans-unit>
        <trans-unit id="25f802ea1c0f9d6cd6733df4e5711c9a99210efd" translate="yes" xml:space="preserve">
          <source>The accepted answer works but a little more explanation does not hurt.</source>
          <target state="translated">受け入れられた答えは有効ですが、もう少し説明があっても問題ありません。</target>
        </trans-unit>
        <trans-unit id="8b5b1db714081a509e39cb45652805e78b7b9b13" translate="yes" xml:space="preserve">
          <source>The standard implementation of &lt;code&gt;__getattribute__()&lt;/code&gt; searches first the internal dictionary (&lt;strong&gt;dict&lt;/strong&gt;) of an object, then the type of the object itself. In this case &lt;code&gt;a.__getattribute__('temp')&lt;/code&gt; executes first &lt;code&gt;a.__dict__['temp']&lt;/code&gt; and then &lt;code&gt;a.__class__.__dict__['temp']&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;__getattribute__()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の標準実装は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内部辞書（&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;dict&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;検索し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、次にオブジェクト自体のタイプを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;検索&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この場合&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.__getattribute__('temp')&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は最初に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.__dict__['temp']&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、次に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.__class__.__dict__['temp']&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8339c7d8e57c9de0805e3c09fd042f7054f71d5" translate="yes" xml:space="preserve">
          <source>This type of function is also called constructors in Object Oriented
  Programming (OOP). We normally use it to initialize all the variables.</source>
          <target state="translated">このタイプの関数は、オブジェクト指向プログラミング(OOP)ではコンストラクタとも呼ばれています。通常はすべての変数を初期化するために使用します。</target>
        </trans-unit>
        <trans-unit id="bf9ea6c627f7d7feca239deee8b894e096f8cb42" translate="yes" xml:space="preserve">
          <source>To protect your variable shared by other instance you need to create new instance variable each time you create an instance. When you are declaring a variable inside a class it's class variable and shared by all instance. If you want to make it for instance wise need to use the &lt;strong&gt;init&lt;/strong&gt; method to reinitialize the variable as  refer to the instance</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他のインスタンスによって共有されている変数を保護するには、インスタンスを作成するたびに新しいインスタンス変数を作成する必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス内で変数を宣言する場合、その変数はクラス変数であり、すべてのインスタンスで共有されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンスにしたい場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、インスタンスを参照して変数を再初期&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;化するために&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;init&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用する必要があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cacbf5c08e2c79ef45ecf2191fa143e3253ae55d" translate="yes" xml:space="preserve">
          <source>We have a very simple class which has an attribute &lt;code&gt;temp&lt;/code&gt; which is a string</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ある属性&lt;/font&gt;&lt;/font&gt; &lt;code&gt;temp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;持つ非常に単純なクラス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c9ded3dc6b0582611a6935fc2b68f8df9e06643" translate="yes" xml:space="preserve">
          <source>Well now that we have used &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;print(a.temp)&lt;/code&gt; gives us a different value from &lt;code&gt;print(A.temp)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用した&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ので、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;print(a.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;print（A.temp）と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は異なる値を提供し&lt;/font&gt;&lt;/font&gt; &lt;code&gt;print(A.temp)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d75b8daa3a74e9e54c95f985fbf6a46fe5301552" translate="yes" xml:space="preserve">
          <source>Well, &lt;code&gt;a.temp&lt;/code&gt; worked as expected but how the hell did &lt;code&gt;A.temp&lt;/code&gt; work? Well it worked because temp is a class attribute. Everything in python is an object. Here A is also an object of class &lt;code&gt;type&lt;/code&gt;. Thus the attribute temp is an attribute held by the &lt;code&gt;A&lt;/code&gt; class and if you change the value of temp through &lt;code&gt;A&lt;/code&gt; (and not through an instance of &lt;code&gt;a&lt;/code&gt;), the changed value is going to be reflected in all the instance of &lt;code&gt;A&lt;/code&gt; class.
Let's go ahead and do that:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;まあ、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a.temp&lt;/code&gt; は&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;期待通りに働いていたが、どのように地獄はやった&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A.temp&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仕事を？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tempはクラス属性なので、うまくいきました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonのすべてがオブジェクトです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで、Aもクラス&lt;/font&gt;&lt;/font&gt; &lt;code&gt;type&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、temp属性は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;保持する属性で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あり、tempの値を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンスではなく）&lt;/font&gt;&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を介し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て変更すると、変更された値は&lt;/font&gt; &lt;code&gt;A&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのインスタンスに反映されます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それでは、先に進んでください。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7fb0d29cd054143d55ee12d3c58343c48c9ef54c" translate="yes" xml:space="preserve">
          <source>What I want is this behavior:</source>
          <target state="translated">私が欲しいのは、この行動です。</target>
        </trans-unit>
        <trans-unit id="c2c04ab0ee25e2699bd6c4c6f5077db8cf714d0d" translate="yes" xml:space="preserve">
          <source>Yes you must declare in the &quot;constructor&quot; if you want that the list becomes an object property and not a class property.</source>
          <target state="translated">はい、リストがクラスプロパティではなくオブジェクトプロパティになるようにしたい場合は、&quot;コンストラクタ &quot;で宣言する必要があります。</target>
        </trans-unit>
        <trans-unit id="7181555f5c909677dcebabb1171aa7e8edab993e" translate="yes" xml:space="preserve">
          <source>You declared &quot;list&quot; as a &quot;class level property&quot; and not &quot;instance level property&quot;.  In order to have properties scoped at the instance level, you need to initialize them through referencing with the &quot;self&quot; parameter in the &lt;code&gt;__init__&lt;/code&gt; method (or elsewhere depending on the situation).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「リスト」を「インスタンスレベルのプロパティ」ではなく「クラスレベルのプロパティ」として宣言しました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティをインスタンスレベルでスコープ指定するには、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッド（または状況に応じて他の場所）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の「self」パラメーターを参照してプロパティを初期化する必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9e2338337cd586ba3ecc5012df28b2390fe478c" translate="yes" xml:space="preserve">
          <source>You don't strictly have to initialize the instance properties in the &lt;code&gt;__init__&lt;/code&gt; method but it makes for easier understanding.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でインスタンスプロパティを厳密に初期化する必要はありません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、理解しやすくなります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ec562a32caaa1a8379748b6f2ed035cb9f4d5c5" translate="yes" xml:space="preserve">
          <source>You want this:</source>
          <target state="translated">これが欲しいんだろ</target>
        </trans-unit>
        <trans-unit id="8d849b81e1fb652f0731abcfba9947f8fca23a29" translate="yes" xml:space="preserve">
          <source>first of all define a class as follows:</source>
          <target state="translated">まず、以下のようにクラスを定義します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
