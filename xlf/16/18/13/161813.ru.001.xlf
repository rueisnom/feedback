<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/161813">
    <body>
      <group id="161813">
        <trans-unit id="5984419b5778f9a4c4f7bbb85c74b9adb45ae5f3" translate="yes" xml:space="preserve">
          <source>(Remember to replace the path with the actual path of Kdiff exe file.)</source>
          <target state="translated">(Не забудьте заменить путь на фактический путь к исполняемому файлу Kdiff).</target>
        </trans-unit>
        <trans-unit id="b3390a19d5b0b5180fb4449d7387b045df408917" translate="yes" xml:space="preserve">
          <source>. You can directly reach MERGED view using</source>
          <target state="translated">.Вы можете напрямую попасть в MERGED-ракурс используя</target>
        </trans-unit>
        <trans-unit id="996050e0bcf31b18b5ad6eec3902db1dfd23c7d0" translate="yes" xml:space="preserve">
          <source>2. Current Line Blame.</source>
          <target state="translated">2.Текущая линия вина.</target>
        </trans-unit>
        <trans-unit id="0dd3171390dbf54eaabed9e7d572666d50b603d6" translate="yes" xml:space="preserve">
          <source>3. Easily Resolve Conflicts.</source>
          <target state="translated">3.Легко разрешать конфликты.</target>
        </trans-unit>
        <trans-unit id="175b85fd9594552b6934b9ae3d20eb4a7e48d2e5" translate="yes" xml:space="preserve">
          <source>3. Gutter Blame</source>
          <target state="translated">3-й водосток вина</target>
        </trans-unit>
        <trans-unit id="b293034cf0e4f2b9bc829b319d6f42c4bc355f18" translate="yes" xml:space="preserve">
          <source>4. Status Bar Blame</source>
          <target state="translated">4.Статусная строка Вина</target>
        </trans-unit>
        <trans-unit id="a9dfc97bcc8b604231d8feb585f8d1717d975502" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/blog/2293-resolve-simple-merge-conflicts-on-github&quot;&gt;This blog post&lt;/a&gt; explains in detail, but the basics are that upon 'merging' two branches via the UI, you will now see a 'resolve conflicts' option that will take you to an editor allowing you to deal with these merge conflicts.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/blog/2293-resolve-simple-merge-conflicts-on-github&quot;&gt;Это сообщение в блоге&lt;/a&gt; подробно объясняет, но в основном это то, что после &amp;laquo;слияния&amp;raquo; двух ветвей через пользовательский интерфейс вы увидите опцию &amp;laquo;разрешения конфликтов&amp;raquo;, которая приведет вас к редактору, позволяющему вам справиться с этими конфликтами слияния.</target>
        </trans-unit>
        <trans-unit id="018f2256b1785efde626620cc8bd84ab64840292" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:diffget //2&lt;/code&gt;, get changes from original (&lt;em&gt;HEAD&lt;/em&gt;) branch:</source>
          <target state="translated">&lt;code&gt;:diffget //2&lt;/code&gt; , получить изменения из оригинальной ( &lt;em&gt;HEAD&lt;/em&gt; ) ветки:</target>
        </trans-unit>
        <trans-unit id="4a315742a5934e8708bdc2484f385a7d3c687891" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:diffget //3&lt;/code&gt;, get changes from merging branch:</source>
          <target state="translated">&lt;code&gt;:diffget //3&lt;/code&gt; , получить изменения из ветви слияния:</target>
        </trans-unit>
        <trans-unit id="e80a5e0becdd40012fa121d96beff436eb5e3b4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:wqa&lt;/code&gt; save and exit from vi</source>
          <target state="translated">&lt;code&gt;:wqa&lt;/code&gt; сохранить и выйти из vi</target>
        </trans-unit>
        <trans-unit id="7951c4074799958813e65ba7cb4fb5f1e4effb0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;current change&lt;/code&gt;(meaning original one before merging)'?.</source>
          <target state="translated">&lt;code&gt;current change&lt;/code&gt; (имеется в виду оригинальное перед слиянием) '?.</target>
        </trans-unit>
        <trans-unit id="cddd78bcafbe734e87c29feb3bdf74f542ee186d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git clean&lt;/code&gt; Remove extra files (e.g. *.orig) created by diff tool.</source>
          <target state="translated">&lt;code&gt;git clean&lt;/code&gt; Удалите лишние файлы (например, * .orig), созданные инструментом diff.</target>
        </trans-unit>
        <trans-unit id="b05ba11bf3186d99f40a15ddad3b2f2a030823cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git&lt;/code&gt; CLI</source>
          <target state="translated">&lt;code&gt;git&lt;/code&gt; CLI</target>
        </trans-unit>
        <trans-unit id="8b77648ec75a644255f4be7f9dd3cb5598cd48b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;git pull --rebase&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;git pull --rebase&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5f09a2e8f5d2d646276a9fed6e51d451e73790e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Fully accept my or theirs version&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Полностью принять мою или их версию&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="267c669633d51c6d9d96098cd1ca2edf3517fbfc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Review all changes and accept them individually&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Просмотрите все изменения и примите их индивидуально&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed861af4419c3cf99a6bd58ce8d7f88ee4689f87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Step 1&lt;/strong&gt;: Go to the branch</source>
          <target state="translated">&lt;strong&gt;Шаг 1&lt;/strong&gt; : Перейти в ветку</target>
        </trans-unit>
        <trans-unit id="1394a7eae7d30cfc247b029e7951dd56ca53c501" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Step 1&lt;/strong&gt;: Run following commands in your terminal</source>
          <target state="translated">&lt;strong&gt;Шаг 1&lt;/strong&gt; : Выполните следующие команды в вашем терминале</target>
        </trans-unit>
        <trans-unit id="08609d4bd19a06850313be45322700c83c9024c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Step 2&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Шаг 2&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="4364353baa0d76480a726b3cb0e63e3af4e07ec5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Step 2&lt;/strong&gt;: Run following command in terminal</source>
          <target state="translated">&lt;strong&gt;Шаг 2&lt;/strong&gt; : Запустите следующую команду в терминале</target>
        </trans-unit>
        <trans-unit id="bffa2453a0caf54f7f41e4901b00658c41850505" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Step 3&lt;/strong&gt;: If there are some conflicts, go to these files to modify it.</source>
          <target state="translated">&lt;strong&gt;Шаг 3&lt;/strong&gt; : Если есть конфликты, перейдите к этим файлам, чтобы изменить его.</target>
        </trans-unit>
        <trans-unit id="d1ac3f3562d27d0da9d0f9b4b271ae6324475f03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Step 3&lt;/strong&gt;: You will see a vimdiff display in following format</source>
          <target state="translated">&lt;strong&gt;Шаг 3&lt;/strong&gt; : Вы увидите дисплей vimdiff в следующем формате</target>
        </trans-unit>
        <trans-unit id="08dbaa67c856b82d176404d2167fd871d3061c01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Step 4&lt;/strong&gt;. You could edit the MERGED view the following way</source>
          <target state="translated">&lt;strong&gt;Шаг 4&lt;/strong&gt; Вы можете редактировать MERGED следующим образом</target>
        </trans-unit>
        <trans-unit id="1f2f10e210d256aacda5ae7ee805f719ed3379f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Step 4&lt;/strong&gt;: Add these changes</source>
          <target state="translated">&lt;strong&gt;Шаг 4&lt;/strong&gt; : Добавьте эти изменения</target>
        </trans-unit>
        <trans-unit id="918cb69b300466e33c7c768d2aee0e95d478cf58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Step 5&lt;/strong&gt;. Save, Exit, Commit and Clean up</source>
          <target state="translated">&lt;strong&gt;Шаг 5&lt;/strong&gt; Сохранить, выйти, зафиксировать и очистить</target>
        </trans-unit>
        <trans-unit id="bcfc8490c541aaec58a661d05b3701aaad06f759" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Step 5&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Шаг 5&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="7532866bda99e4ba384b10fa2b5e75ec6644f55e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Step 6&lt;/strong&gt;: If there is still conflict, go back to step 3 again. If there is no conflict, do following:</source>
          <target state="translated">&lt;strong&gt;Шаг 6&lt;/strong&gt; : Если конфликт все еще существует, вернитесь к шагу 3 снова. Если конфликта нет, сделайте следующее:</target>
        </trans-unit>
        <trans-unit id="74361e5409372dd18c19e09534a67f4a53a3d21d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Step 7&lt;/strong&gt;: And then there is no conflict between test and master. You can use merge directly.</source>
          <target state="translated">&lt;strong&gt;Шаг 7&lt;/strong&gt; : И тогда между тестом и мастером нет конфликта. Вы можете использовать слияние напрямую.</target>
        </trans-unit>
        <trans-unit id="880ae413917c7925af5b1274ea0eec0d3965879e" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;However you've to be careful, as remote changes that conflicts were done for some reason.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;Тем не менее, вы должны быть осторожны, так как удаленные изменения, конфликты были сделаны по какой-то причине.&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="842ae3472f12c24803c1bb2ee89ee22d6c383c46" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Image source: &lt;a href=&quot;https://sourcegear.com/diffmerge/&quot;&gt;DiffMerge&lt;/a&gt; (Linux screenshot)&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;Источник изображения: &lt;a href=&quot;https://sourcegear.com/diffmerge/&quot;&gt;DiffMerge&lt;/a&gt; (скриншот Linux)&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="8eee615565678d9c8bc0a9f2f921d251a1a3cbdc" translate="yes" xml:space="preserve">
          <source>A safer way to resolve conflicts is to use &lt;a href=&quot;https://github.com/Peaker/git-mediate&quot;&gt;git-mediate&lt;/a&gt; (the common solutions suggested here are quite error prone imho).</source>
          <target state="translated">Более безопасный способ разрешения конфликтов - это использование &lt;a href=&quot;https://github.com/Peaker/git-mediate&quot;&gt;git-mediate&lt;/a&gt; (общие решения, предлагаемые здесь, довольно подвержены ошибкам imho).</target>
        </trans-unit>
        <trans-unit id="beb67c154281a51eab633a88fcdbbd4656d59cd3" translate="yes" xml:space="preserve">
          <source>A_MBPro:test anu$ git merge origin/ Auto-merging
  src/test/java/com/.../TestClass.java CONFLICT
  (content): Merge conflict in
  src/test/java/com/.../TestClass.java</source>
          <target state="translated">A_MBBPro:test anu$ git merge origin Auto-merging srctestjavacom...TestClass.java CONFLICT (content):Конфликт слияния в srctestjavacom...TestClass.java</target>
        </trans-unit>
        <trans-unit id="a7b183a6f77c99b78584e9f4f9c6586693f1a738" translate="yes" xml:space="preserve">
          <source>Accept my version (local, ours):</source>
          <target state="translated">Примите мою версию (местную,медвежью):</target>
        </trans-unit>
        <trans-unit id="5bc00cfaa92376af7b8a3890a3b1000ebf89813e" translate="yes" xml:space="preserve">
          <source>Accept their version (remote, theirs):</source>
          <target state="translated">Примите их версию (удаленную,их):</target>
        </trans-unit>
        <trans-unit id="de248d3c434336170b313b4a606fae76271119ac" translate="yes" xml:space="preserve">
          <source>After seeing a conflict, you can do two things:</source>
          <target state="translated">Увидев конфликт,ты можешь сделать две вещи:</target>
        </trans-unit>
        <trans-unit id="88c796f3f9c1bd62bd2303bc6fd590d651d18149" translate="yes" xml:space="preserve">
          <source>Also (and more relevant to your situation), I try to avoid:</source>
          <target state="translated">Также (и более уместно в вашей ситуации),я стараюсь избегать:</target>
        </trans-unit>
        <trans-unit id="64d1d3763e3678125c90fb233fae5e747be5afc3" translate="yes" xml:space="preserve">
          <source>Also, the &lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-merge.html#_how_to_resolve_conflicts&quot;&gt;How to Resolve Conflicts&lt;/a&gt; section explains how to resolve the conflicts:</source>
          <target state="translated">Также в разделе &amp;laquo;Как разрешить &lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-merge.html#_how_to_resolve_conflicts&quot;&gt;конфликты&lt;/a&gt; &amp;raquo; объясняется, как разрешать конфликты:</target>
        </trans-unit>
        <trans-unit id="e30eff925100b7c3e119ed678e39009e962455b0" translate="yes" xml:space="preserve">
          <source>Alt</source>
          <target state="translated">Alt</target>
        </trans-unit>
        <trans-unit id="d83728a889e246005c68fb7b4ea004251b567ef9" translate="yes" xml:space="preserve">
          <source>Alternatively you can use &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/opendiff.1.html&quot;&gt;opendiff&lt;/a&gt; (part of Xcode Tools) which lets you merge two files or directories together to create a third file or directory.</source>
          <target state="translated">В качестве альтернативы вы можете использовать &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/opendiff.1.html&quot;&gt;opendiff&lt;/a&gt; (часть Xcode Tools), который позволяет объединить два файла или каталога вместе, чтобы создать третий файл или каталог.</target>
        </trans-unit>
        <trans-unit id="d2b49ab034efe5c43e47bb8c7fa6908660e6c2ee" translate="yes" xml:space="preserve">
          <source>And probably (if not provided) you need the following extra simple wrapper placed in your PATH (e.g. &lt;code&gt;/usr/bin&lt;/code&gt;):</source>
          <target state="translated">И, вероятно (если не указано иное) вам понадобится следующая дополнительная простая обертка, размещенная в вашем PATH (например, &lt;code&gt;/usr/bin&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="203ef75231b705089e654d36b91e46318dfe1500" translate="yes" xml:space="preserve">
          <source>And then we try a final time</source>
          <target state="translated">А потом мы попробуем в последний раз</target>
        </trans-unit>
        <trans-unit id="3e6f3db27cc8c401fedee6e7d282bbfea034770c" translate="yes" xml:space="preserve">
          <source>And there are many features you can check them &lt;a href=&quot;https://github.com/eamodio/vscode-gitlens&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">И есть много возможностей, вы можете проверить их &lt;a href=&quot;https://github.com/eamodio/vscode-gitlens&quot;&gt;здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="031f3f8f8291e0e1de20b7de05bfa588693494ab" translate="yes" xml:space="preserve">
          <source>As of December 12th 2016, you can merge branches and &lt;strong&gt;resolve conflicts on github.com&lt;/strong&gt;</source>
          <target state="translated">С 12 декабря 2016 года вы можете объединять филиалы и &lt;strong&gt;разрешать конфликты на github.com.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8388f57e8cdf32dbfd337f07999e3a94c43253c4" translate="yes" xml:space="preserve">
          <source>As per @JoshGlover comment:</source>
          <target state="translated">Согласно комментарию @JoshGlover:</target>
        </trans-unit>
        <trans-unit id="f474daae6a62b7028ecb784c6fbd046b9c1252cc" translate="yes" xml:space="preserve">
          <source>BASE &amp;ndash; common ancestor, how file looked before both changes</source>
          <target state="translated">BASE - общий предок, как файл выглядел до обоих изменений</target>
        </trans-unit>
        <trans-unit id="bfa88da268e9e2de28582188413cdb7c3a37c5c4" translate="yes" xml:space="preserve">
          <source>BTW if you install Git Extensions there is an option in its setup wizard to install Kdiff3.</source>
          <target state="translated">Кстати,если вы устанавливаете Git Extensions,то в мастере установки есть возможность установить Kdiff3.</target>
        </trans-unit>
        <trans-unit id="d1f71a9a3f6b22f46159ecc1b5cc3fd1ee29d31c" translate="yes" xml:space="preserve">
          <source>Before pushing your newly committed change to remote server, try &lt;code&gt;git pull --rebase&lt;/code&gt; rather &lt;code&gt;git pull&lt;/code&gt; and manual &lt;code&gt;merge&lt;/code&gt; and it will automatically sync latest remote server changes (with a fetch + merge) and will put your local latest commit at the top in git log. No need to worry about manual pull/merge.</source>
          <target state="translated">Перед отправкой только что &lt;code&gt;git pull --rebase&lt;/code&gt; изменения на удаленный сервер, попробуйте git pull --rebase, а не &lt;code&gt;git pull&lt;/code&gt; и ручное &lt;code&gt;merge&lt;/code&gt; и оно автоматически синхронизирует последние изменения на удаленном сервере (с выборкой + слиянием) и поместит ваш локальный последний коммит на вершине в git журнал. Не нужно беспокоиться о ручном вытягивании / слиянии.</target>
        </trans-unit>
        <trans-unit id="5690562f60aa2958acf32cea69a82be068935ee2" translate="yes" xml:space="preserve">
          <source>Below is the sample procedure to use &lt;code&gt;vimdiff&lt;/code&gt; for resolve merge conflicts. Based on &lt;a href=&quot;http://www.rosipov.com/blog/use-vimdiff-as-git-mergetool/#fromHistor&quot;&gt;this link&lt;/a&gt;</source>
          <target state="translated">Ниже приведен пример процедуры использования &lt;code&gt;vimdiff&lt;/code&gt; для разрешения конфликтов слияния. По &lt;a href=&quot;http://www.rosipov.com/blog/use-vimdiff-as-git-mergetool/#fromHistor&quot;&gt;этой ссылке&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5763578555f814c96231de97e5710d397db26670" translate="yes" xml:space="preserve">
          <source>Bonus:</source>
          <target state="translated">Bonus:</target>
        </trans-unit>
        <trans-unit id="e2b00999c812c0f8501ad55c392f1fbc4b4fc3ca" translate="yes" xml:space="preserve">
          <source>Change it to the way you want it, then commit with commands</source>
          <target state="translated">Измените его так,как хотите,затем зафиксируйте командами.</target>
        </trans-unit>
        <trans-unit id="a16928497c72104aa81a7d81e344898c5e5a9d2c" translate="yes" xml:space="preserve">
          <source>Check out the answers in Stack Overflow question &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/101752/aborting-a-merge-in-git&quot;&gt;Aborting a merge in Git&lt;/a&gt;&lt;/em&gt;, especially &lt;a href=&quot;https://stackoverflow.com/questions/101752/aborting-a-merge-in-git#107860&quot;&gt;Charles Bailey's answer&lt;/a&gt; which shows how to view the different versions of the file with problems, for example,</source>
          <target state="translated">Ознакомьтесь с ответами на вопрос переполнения стека. &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/101752/aborting-a-merge-in-git&quot;&gt;Отмена слияния в Git&lt;/a&gt;&lt;/em&gt; , особенно &lt;a href=&quot;https://stackoverflow.com/questions/101752/aborting-a-merge-in-git#107860&quot;&gt;ответ Чарльза Бейли,&lt;/a&gt; который показывает, как, например, просмотреть различные версии файла с проблемами, например:</target>
        </trans-unit>
        <trans-unit id="148d7ea3194dfb3824271bc5bf58dc3bda5baee5" translate="yes" xml:space="preserve">
          <source>Check the Git status:
&lt;strong&gt;&lt;em&gt;git status&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">Проверьте статус Git: &lt;strong&gt;&lt;em&gt;статус Git&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6b4260a19776ffbf9dfe81497f156c7830b80d1f" translate="yes" xml:space="preserve">
          <source>Check the files, in which you would find the conflicts marked like</source>
          <target state="translated">Проверьте файлы,в которых вы найдете конфликты,помеченные как</target>
        </trans-unit>
        <trans-unit id="aa6390380b1645608f5ff58880c2c59a7c7468a6" translate="yes" xml:space="preserve">
          <source>Check the status again:
 &lt;strong&gt;&lt;em&gt;git status&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">Проверьте статус еще раз: &lt;strong&gt;&lt;em&gt;git status&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b69003626d6cb4346f37832218c2fac266a2dcd9" translate="yes" xml:space="preserve">
          <source>Checkout a local branch (temp1 in my example here):
&lt;strong&gt;&lt;em&gt;git checkout -b temp1&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">Извлечь локальную ветку (в моем примере это temp1): &lt;strong&gt;&lt;em&gt;git checkout -b temp1&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0362ddbc2b43b66fa4e6cca7d6f8961ded7dee2" translate="yes" xml:space="preserve">
          <source>Choose one of the alternatives or a combination of both in a way that you want new code to be, while removing equal signs and angle brackets.</source>
          <target state="translated">Выберите одну из альтернатив или их комбинацию так,как вы хотите,чтобы новый код был новым,убрав при этом знаки равенства и угловые скобки.</target>
        </trans-unit>
        <trans-unit id="f65afcc3c7fda48e7af81a4b11b34d1f34f30d83" translate="yes" xml:space="preserve">
          <source>Click the conflicting file and you will have the option to Merge, Compare, Take Source, Take Target.  The merge tool in VS is very easy to use.</source>
          <target state="translated">Щелкните конфликтующий файл,и у вас появится возможность &quot;Объединить&quot;,&quot;Сравнить&quot;,&quot;Забрать источник&quot;,&quot;Забрать цель&quot;.Инструмент для слияния в VS очень прост в использовании.</target>
        </trans-unit>
        <trans-unit id="ec2dece8f71f03d22fdc5a37975a1dbbea9b6ee2" translate="yes" xml:space="preserve">
          <source>Close your project in VS. Especially in big projects VS tends to freak out when merging using the UI.</source>
          <target state="translated">Закройте свой проект в VS.Особенно в больших проектах VS имеет тенденцию сходить с ума при слиянии с помощью пользовательского интерфейса.</target>
        </trans-unit>
        <trans-unit id="fb0b442c1c1c3d03199691d9d6fc5d9cec8d1471" translate="yes" xml:space="preserve">
          <source>Commit the changes to the same commit id (this avoids a new separate patch set):
&lt;strong&gt;&lt;em&gt;git commit --amend&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">Зафиксируйте изменения в том же идентификаторе (это позволяет избежать нового отдельного набора исправлений): &lt;strong&gt;&lt;em&gt;git commit --amend&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5831691140428fa04453f5bba220df00be0565ab" translate="yes" xml:space="preserve">
          <source>Comparison with the common ancestor</source>
          <target state="translated">Сравнение с общим предком</target>
        </trans-unit>
        <trans-unit id="c771b1de682f5642315c2602673d7fb1b2fcd43e" translate="yes" xml:space="preserve">
          <source>CoolAJ86's answer sums up pretty much everything. In case you have changes in both branches in the same piece of code you will have to do a manual merge. Open the file in conflict in any text editor and you should see following structure.</source>
          <target state="translated">Ответ CoolAJ86 суммирует практически все.В случае,если у вас изменения в обеих ветках в одном куске кода,вам придется провести ручное слияние.Откройте конфликтующий файл в любом текстовом редакторе и увидите следующую структуру.</target>
        </trans-unit>
        <trans-unit id="25623d3d6597110b3dc53adcb06a990460c0bdc2" translate="yes" xml:space="preserve">
          <source>Decide not to merge. The only clean-ups you need are to reset the index file to the &lt;code&gt;HEAD&lt;/code&gt; commit to reverse 2. and to clean up working tree changes made by 2. and 3.; &lt;code&gt;git merge --abort&lt;/code&gt; can be used for this.</source>
          <target state="translated">Решите не сливаться. Единственное, что вам нужно - это сбросить индексный файл до фиксации &lt;code&gt;HEAD&lt;/code&gt; , чтобы отменить 2. и очистить изменения рабочего дерева, сделанные с помощью 2. и 3 .; для этого можно использовать &lt;code&gt;git merge --abort&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22e56642085575f2908ddb864308068f7e968cad" translate="yes" xml:space="preserve">
          <source>Default &lt;code&gt;mergetool&lt;/code&gt; works in &lt;strong&gt;command line&lt;/strong&gt;. How to use a command line mergetool should be a separate question.</source>
          <target state="translated">По умолчанию &lt;code&gt;mergetool&lt;/code&gt; работает в &lt;strong&gt;командной строке&lt;/strong&gt; . Как использовать командную строку mergetool должно быть отдельным вопросом.</target>
        </trans-unit>
        <trans-unit id="62142d242914ddff0d898b153644b0eafdec9b6b" translate="yes" xml:space="preserve">
          <source>Delete the unwanted files locally created by mergetool, usually mergetool creates extra file with *.orig extension. Please delete that file as that is just the duplicate and fix changes locally and add the correct version of your files.
&lt;strong&gt;&lt;em&gt;git add #your_changed_correct_files&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">Удалите ненужные файлы, локально созданные с помощью mergetool, обычно mergetool создает дополнительный файл с расширением * .orig. Пожалуйста, удалите этот файл, так как это просто дубликат, исправьте изменения локально и добавьте правильную версию ваших файлов. &lt;strong&gt;&lt;em&gt;git add #your_changed_correct_files&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cf55c22c3384a1a5442c9356b103938aff517cff" translate="yes" xml:space="preserve">
          <source>DiffMerge</source>
          <target state="translated">DiffMerge</target>
        </trans-unit>
        <trans-unit id="974874822de58470f022f79813163910737446e5" translate="yes" xml:space="preserve">
          <source>Do the merge in command prompt.</source>
          <target state="translated">Выполните слияние в командной строке.</target>
        </trans-unit>
        <trans-unit id="8f3dad5896c6d2f85c69a69d9b5dcfaeb1b52705" translate="yes" xml:space="preserve">
          <source>Does not seem to always work for me and usually ends up displaying every commit that was different between the two branches, this happens even when using &lt;code&gt;--&lt;/code&gt; to separate the path from the command.</source>
          <target state="translated">Кажется, это не всегда работает для меня и обычно заканчивается отображением каждого коммита, который отличался между двумя ветвями, это происходит даже при использовании &lt;code&gt;--&lt;/code&gt; для отделения пути от команды.</target>
        </trans-unit>
        <trans-unit id="bf93e5ce8bc1228c2585b3f5a368053c9fe8346a" translate="yes" xml:space="preserve">
          <source>Down</source>
          <target state="translated">Down</target>
        </trans-unit>
        <trans-unit id="5f743014bcdaf6c6b456b0a51baf9dbd2767737b" translate="yes" xml:space="preserve">
          <source>Each time you edit a file to resolve a conflict, &lt;code&gt;git add filename&lt;/code&gt; will update the index and your diff will no longer show it. When all the conflicts are handled and their files have been &lt;code&gt;git add&lt;/code&gt;-ed, &lt;code&gt;git commit&lt;/code&gt; will complete your merge.</source>
          <target state="translated">Каждый раз, когда вы редактируете файл для разрешения конфликта, &lt;code&gt;git add filename&lt;/code&gt; будет обновлять индекс, и ваш diff больше не будет его показывать. Когда все конфликты будут обработаны и их файлы будут &lt;code&gt;git add&lt;/code&gt; , &lt;code&gt;git commit&lt;/code&gt; завершит ваше слияние.</target>
        </trans-unit>
        <trans-unit id="941cfe8b1f11cde20411fa8dc823e6451b6066fa" translate="yes" xml:space="preserve">
          <source>Edit the conflicted files manually and look for the code block between &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt;/&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; then choose the version either from above or below &lt;code&gt;=====&lt;/code&gt;. See: &lt;a href=&quot;http://git-scm.com/docs/git-merge#_how_conflicts_are_presented&quot;&gt;How conflicts are presented&lt;/a&gt;.</source>
          <target state="translated">Отредактируйте конфликтующие файлы вручную и найдите блок кода между &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; / &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; , затем выберите версию сверху или снизу &lt;code&gt;=====&lt;/code&gt; . Смотрите: &lt;a href=&quot;http://git-scm.com/docs/git-merge#_how_conflicts_are_presented&quot;&gt;Как представлены конфликты&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aacd1ff5034e63964e7c7c658577c21417051af1" translate="yes" xml:space="preserve">
          <source>Finally, review the files ready for commit using: &lt;code&gt;git status&lt;/code&gt;.</source>
          <target state="translated">Наконец, просмотрите файлы, готовые для фиксации, используя: &lt;code&gt;git status&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a094f4d7d41c2764c2f031fe68c19f7697500e17" translate="yes" xml:space="preserve">
          <source>Find details at: &lt;a href=&quot;http://gitolite.com/git-pull--rebase&quot;&gt;http://gitolite.com/git-pull--rebase&lt;/a&gt;</source>
          <target state="translated">Найти подробности на: &lt;a href=&quot;http://gitolite.com/git-pull--rebase&quot;&gt;http://gitolite.com/git-pull--rebase&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4809b89a126e0c64267d7eedaadd6a71a6de0432" translate="yes" xml:space="preserve">
          <source>Find which files cause conflicts by command</source>
          <target state="translated">Поиск файлов,вызывающих конфликты по команде</target>
        </trans-unit>
        <trans-unit id="444ae617023a2ca15a17f8826dd18fc1b206e9f6" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;http://en.wikipedia.org/wiki/Emacs&quot;&gt;Emacs&lt;/a&gt; users which want to resolve merge conflicts semi-manually:</source>
          <target state="translated">Для пользователей &lt;a href=&quot;http://en.wikipedia.org/wiki/Emacs&quot;&gt;Emacs,&lt;/a&gt; которые хотят разрешить конфликты слияния полу-вручную:</target>
        </trans-unit>
        <trans-unit id="b9276f3406ed29b514fe3f13e76db9e122964538" translate="yes" xml:space="preserve">
          <source>For conflicts that involve more than a few lines, it's easier to see what's going on in an external GUI tool. I like opendiff -- Git also supports vimdiff, gvimdiff, kdiff3, tkdiff, meld, xxdiff, emerge out of the box and you can install others: &lt;code&gt;git config merge.tool &quot;your.tool&quot;&lt;/code&gt; will set your chosen tool and then &lt;code&gt;git mergetool&lt;/code&gt; after a failed merge will  show you the diffs in context.</source>
          <target state="translated">Для конфликтов, которые занимают несколько строк, легче увидеть, что происходит во внешнем инструменте с графическим интерфейсом. Мне нравится opendiff - Git также поддерживает vimdiff, gvimdiff, kdiff3, tkdiff, meld, xxdiff, появляются из коробки, и вы можете установить другие: &lt;code&gt;git config merge.tool &quot;your.tool&quot;&lt;/code&gt; установит выбранный вами инструмент и затем &lt;code&gt;git mergetool&lt;/code&gt; после неудачного слияния вы увидите различия в контексте.</target>
        </trans-unit>
        <trans-unit id="a96746ef03f16d34404a31209e137b75cb15ca6e" translate="yes" xml:space="preserve">
          <source>For example, if you know that you and another person are both working on different refactoring that will both affect the same set of files, you should talk to each other ahead of time and get a better sense for what types of changes each of you is making. You might save considerable time and effort if you conduct your planned changes serially rather than in parallel.</source>
          <target state="translated">Например,если вы знаете,что вы и другой человек работаете над разным рефакторингом,который повлияет на один и тот же набор файлов,вы должны заранее поговорить друг с другом и получить лучшее представление о том,какие типы изменений каждый из вас вносит.Вы можете сэкономить значительное время и усилия,если будете проводить запланированные изменения не параллельно,а последовательно.</target>
        </trans-unit>
        <trans-unit id="8333e3cfab4df3827ff6836fb6b710b9358f125a" translate="yes" xml:space="preserve">
          <source>For major refactorings that cut across a large swath of code, you should strongly consider working serially: everybody stops working on that area of the code while one person performs the complete refactoring.</source>
          <target state="translated">Для крупных рефакторингов,которые пересекают большую полосу кода,следует сильно подумать о том,чтобы работать серийно:все перестают работать над этой областью кода,пока один человек выполняет полный рефакторинг.</target>
        </trans-unit>
        <trans-unit id="4fa9753aa4fd3c850748555a3e9f4a60b89ac341" translate="yes" xml:space="preserve">
          <source>For practical tutorial, check: &lt;a href=&quot;https://www.katacoda.com/courses/git/5&quot;&gt;Scenario 5 - Fixing Merge Conflicts by Katacoda&lt;/a&gt;.</source>
          <target state="translated">Для практического руководства, проверьте: &lt;a href=&quot;https://www.katacoda.com/courses/git/5&quot;&gt;Сценарий 5 - Исправление конфликтов слияния по Katacoda&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8e13a07312a1b166bfac8963c011d8cef1459d58" translate="yes" xml:space="preserve">
          <source>For those who are using Visual Studio (2015 in my case)</source>
          <target state="translated">Для тех,кто использует Visual Studio (в моем случае 2015).</target>
        </trans-unit>
        <trans-unit id="332ea3a31e79d47a90b9a3ccec9c1cdfdbaa5829" translate="yes" xml:space="preserve">
          <source>From the documentation:</source>
          <target state="translated">Из документации:</target>
        </trans-unit>
        <trans-unit id="7df338298732a7a44cfe3459a9c54089c35b179d" translate="yes" xml:space="preserve">
          <source>Get the patchset:
&lt;strong&gt;&lt;em&gt;git fetch&lt;/em&gt;&lt;/strong&gt; (checkout the right patch from your Git commit)</source>
          <target state="translated">Получите набор патчей: &lt;strong&gt;&lt;em&gt;git fetch&lt;/em&gt;&lt;/strong&gt; (проверьте правильный патч из вашего коммита Git)</target>
        </trans-unit>
        <trans-unit id="69a3ed9b700833291e3fb52128a1c1896ad1a625" translate="yes" xml:space="preserve">
          <source>Gitlense For VS Code</source>
          <target state="translated">Gitlense For VS Code</target>
        </trans-unit>
        <trans-unit id="cb033caab8c1571bd1cc040deef3f29714bc9898" translate="yes" xml:space="preserve">
          <source>Here are a few tips:</source>
          <target state="translated">Вот несколько советов:</target>
        </trans-unit>
        <trans-unit id="d6ac82bd2169504c0f1bd7ac53df06a10044601a" translate="yes" xml:space="preserve">
          <source>Here are simple steps what to do when you get into conflicted state:</source>
          <target state="translated">Вот простые шаги,что делать,когда вы попадаете в конфликтное состояние:</target>
        </trans-unit>
        <trans-unit id="4015aea13e4cb51abe076db016a9c3d37c5ab85e" translate="yes" xml:space="preserve">
          <source>Here's a probable use-case, from the top:</source>
          <target state="translated">Вот вероятный вариант использования,сверху:</target>
        </trans-unit>
        <trans-unit id="53343ebc96836cd5b3243181b65465e0cf2310da" translate="yes" xml:space="preserve">
          <source>Here's what Kdiff3 looks like:</source>
          <target state="translated">Вот как выглядит Kdiff3:</target>
        </trans-unit>
        <trans-unit id="cb24c6a6c393ebe7ec3779e9477715f34a1e1c8e" translate="yes" xml:space="preserve">
          <source>How do I resolve merge conflicts in Git?</source>
          <target state="translated">Как мне разрешить конфликты слияния в Git'е?</target>
        </trans-unit>
        <trans-unit id="d351a3caff947e2b59eb23475d4c1ea1dd8fc47a" translate="yes" xml:space="preserve">
          <source>How to resolve merge conflicts in Git</source>
          <target state="translated">Как разрешить конфликты слияния в Git</target>
        </trans-unit>
        <trans-unit id="821a9fc9b328173923a3a75703b4c5f4fabf1ea0" translate="yes" xml:space="preserve">
          <source>I already like this feature:</source>
          <target state="translated">Мне уже нравится эта функция:</target>
        </trans-unit>
        <trans-unit id="ebb18fa7969201cbf38ba225dade79fc2ac15133" translate="yes" xml:space="preserve">
          <source>I always follow the below steps to avoid conflicts.</source>
          <target state="translated">Я всегда следую указанным ниже шагам,чтобы избежать конфликтов.</target>
        </trans-unit>
        <trans-unit id="5cbeb9173e4a15b8b07727c351b6c3fdec416f12" translate="yes" xml:space="preserve">
          <source>I am using Microsoft's Visual Code for resolving conflicts. Its very simple to use. I keep my project open in the workspace. It detects and highlights conflicts, moreover give GUI options to select whatever change I want to keep from HEAD or incoming.</source>
          <target state="translated">Я использую Визуальный код Microsoft для разрешения конфликтов.Он очень прост в использовании.Я держу свой проект открытым в рабочем пространстве.Он обнаруживает и выделяет конфликты,более того,дает возможность GUI выбирать любые изменения,которые я хочу сохранить в HEAD или входящие.</target>
        </trans-unit>
        <trans-unit id="d6a10190fb2d0293b50b8df275083b88901d5e6b" translate="yes" xml:space="preserve">
          <source>I either want my or their version in full, or want to review individual changes and decide for each of them.</source>
          <target state="translated">Мне нужна либо моя или их версия в полном объеме,либо я хочу просмотреть отдельные изменения и принять решение по каждому из них.</target>
        </trans-unit>
        <trans-unit id="0402c816503737edd063d7527db024b2749d4ccb" translate="yes" xml:space="preserve">
          <source>I find merge tools rarely help me understand the conflict or the resolution. I'm usually more successful looking at the conflict markers in a text editor and using git log as a supplement.</source>
          <target state="translated">Я нахожу,что инструменты слияния редко помогают мне понять конфликт или его разрешение.Обычно я более успешно смотрю на маркеры конфликтов в текстовом редакторе и использую git-лог в качестве дополнения.</target>
        </trans-unit>
        <trans-unit id="1b084f84735683c433246463bf526f719f03fe77" translate="yes" xml:space="preserve">
          <source>I hope that this will help every one concerning this issue.</source>
          <target state="translated">Я надеюсь,что это поможет всем,кто имеет отношение к этому вопросу.</target>
        </trans-unit>
        <trans-unit id="d0caea9b3f59d542fa6ac97fea504dcb8e68f4bc" translate="yes" xml:space="preserve">
          <source>I think the real key is knowing how changes flow with local and remote repositories.  The key to this is understanding tracking branches.  I have found that I think of the tracking branch as the 'missing piece in the middle' between me my local, actual files directory and the remote defined as origin.</source>
          <target state="translated">Я думаю,что настоящий ключ-это знание того,как происходят изменения с локальными и удаленными репозиториями.Ключ к этому-понимание отслеживания ветвей.Я обнаружил,что думаю об отслеживающей ветке,как о &quot;недостающей части посередине&quot; между мной,моим локальным,реальным каталогом файлов и удалённым,определённым как происхождение.</target>
        </trans-unit>
        <trans-unit id="f0dcaf5654b405f76244139f625e12b8ecb4399c" translate="yes" xml:space="preserve">
          <source>I'm surprised no one else spoke about resolving conflict using &lt;code&gt;patience&lt;/code&gt; with the merge recursive strategy. For a big merge conflict, using &lt;code&gt;patience&lt;/code&gt; provided good results for me. The idea is that it will try to match blocks rather than individual lines.</source>
          <target state="translated">Я удивлен, что никто больше не говорил об урегулировании конфликта, используя &lt;code&gt;patience&lt;/code&gt; с рекурсивной стратегией слияния. Для большого конфликта слияния использование &lt;code&gt;patience&lt;/code&gt; дало хорошие результаты для меня. Идея состоит в том, что он будет пытаться сопоставить блоки, а не отдельные линии.</target>
        </trans-unit>
        <trans-unit id="c6fa9d4f262c6727eee44346dad7bdce3894c5b9" translate="yes" xml:space="preserve">
          <source>I've personally got into the habit of 2 things to help avoid this.</source>
          <target state="translated">Лично я вошла в привычку 2 вещи,чтобы помочь избежать этого.</target>
        </trans-unit>
        <trans-unit id="fb58a335235a03f06da06668899ed8f3672ab468" translate="yes" xml:space="preserve">
          <source>I've successfully used &lt;a href=&quot;https://sourcegear.com/diffmerge/&quot;&gt;DiffMerge&lt;/a&gt; which can visually compare and merge files on Windows, macOS and Linux/Unix.</source>
          <target state="translated">Я успешно использовал &lt;a href=&quot;https://sourcegear.com/diffmerge/&quot;&gt;DiffMerge,&lt;/a&gt; который может визуально сравнивать и объединять файлы в Windows, macOS и Linux / Unix.</target>
        </trans-unit>
        <trans-unit id="b50738c5e6ed82977210183ce1837c1f0b3de951" translate="yes" xml:space="preserve">
          <source>Identify which files are in conflict (Git should tell you this).</source>
          <target state="translated">Определите,какие файлы конфликтуют (Git должен вам это сказать).</target>
        </trans-unit>
        <trans-unit id="c722a2e638436ed8fb95c066ae4ce83c149e74f2" translate="yes" xml:space="preserve">
          <source>If all conflicts were solved successfully, commit the changes by: &lt;code&gt;git commit -a&lt;/code&gt; and push to remote as usual.</source>
          <target state="translated">Если все конфликты были успешно разрешены, зафиксируйте изменения с помощью: &lt;code&gt;git commit -a&lt;/code&gt; и нажмите как обычно на remote.</target>
        </trans-unit>
        <trans-unit id="175991024547a83ccaab97a5b5236f8c382363c5" translate="yes" xml:space="preserve">
          <source>If the conflict is longer, then I will cut and paste each of the three sections into three separate files, such as &quot;mine&quot;, &quot;common&quot; and &quot;theirs&quot;.</source>
          <target state="translated">Если конфликт длится дольше,то я вырежу и вставлю каждую из трех секций в три отдельных файла,таких как &quot;мой&quot;,&quot;общий&quot; и &quot;их&quot;.</target>
        </trans-unit>
        <trans-unit id="d20842fcd97f861418ee0876bd663fea842315ce" translate="yes" xml:space="preserve">
          <source>If the conflict is only a few lines, this generally makes the conflict very obvious. (Knowing how to fix a conflict is very different; you need to be aware of what other people are working on. If you're confused, it's probably best to just call that person into your room so they can see what you're looking at.)</source>
          <target state="translated">Если конфликт-это всего лишь несколько строк,то,как правило,это делает конфликт очень очевидным.(Знание того,как исправить конфликт,очень отличается;вы должны знать,над чем работают другие люди.Если вы запутались,возможно,лучше просто позвать этого человека в свою комнату,чтобы он увидел,на что вы смотрите).</target>
        </trans-unit>
        <trans-unit id="0a3d7fce00a142bd9776e2f018dc7698e902aa15" translate="yes" xml:space="preserve">
          <source>If you are using intelliJ as IDE
Try to merge parent to your branch by</source>
          <target state="translated">Если вы используете intelliJ в качестве IDE Попробуйте слить родителя с вашей веткой с помощью</target>
        </trans-unit>
        <trans-unit id="e4c3e0b130c36910f9d97995518a0afbab1aff04" translate="yes" xml:space="preserve">
          <source>If you can't work serially (due to time pressure, maybe), then communicating about expected merge conflicts at least helps you solve the problems sooner while the details are still fresh in mind. For example, if a co-worker is making a disruptive series of commits over the course of a one-week period, you may choose to merge/rebase on that co-workers branch once or twice each day during that week. That way, if you do find merge/rebase conflicts, you can solve them more quickly than if you wait a few weeks to merge everything together in one big lump.</source>
          <target state="translated">Если вы не можете работать серийно (возможно,из-за нехватки времени),то общение об ожидаемых конфликтах слияния,по крайней мере,поможет вам решить проблемы раньше,пока детали еще свежи в памяти.Например,если сотрудник совершает разрушительную серию коммитов в течение одной недели,вы можете выбрать слияние на ветке этого сотрудника один или два раза в день в течение этой недели.Таким образом,если вы найдёте конфликты на основе слияния,вы сможете решить их быстрее,чем если подождёте несколько недель,чтобы слить всё вместе за один большой промежуток времени.</target>
        </trans-unit>
        <trans-unit id="8de6d362944cca0dce5c2e38813cddd83e8e685b" translate="yes" xml:space="preserve">
          <source>If you change the indentation of your program for instance, the default Git merge strategy sometimes matches single braces &lt;code&gt;{&lt;/code&gt; which belongs to different functions. This is avoided with &lt;code&gt;patience&lt;/code&gt;:</source>
          <target state="translated">Например, если вы изменяете отступ вашей программы, стратегия слияния Git по умолчанию иногда соответствует одиночным скобкам &lt;code&gt;{&lt;/code&gt; которые принадлежат разным функциям. Этого избегают с &lt;code&gt;patience&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6276c8e1991c84cf5b8e5c3d836c05c6fee80fc7" translate="yes" xml:space="preserve">
          <source>If you have a merge conflict and want to see what others had in mind when modifying their branch, it's sometimes easier to compare their branch directly with the common ancestor (instead of our branch). For that you can use &lt;code&gt;merge-base&lt;/code&gt;:</source>
          <target state="translated">Если у вас есть конфликт слияния и вы хотите увидеть, что другие имели в виду при изменении своей ветви, иногда проще сравнить их ветвь напрямую с общим предком (вместо нашей ветки). Для этого вы можете использовать &lt;code&gt;merge-base&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3c883d427128e3ee60335551b4037a18d86bfca4" translate="yes" xml:space="preserve">
          <source>If you have automated tests, run those. If you have a &lt;a href=&quot;https://en.wikipedia.org/wiki/Lint_%28software%29&quot;&gt;lint&lt;/a&gt;, run that. If it's a buildable project, then build it before you commit, etc. In all cases, you need to do a bit of testing to make sure your changes didn't break anything. (Heck, even a merge without conflicts can break working code.)</source>
          <target state="translated">Если у вас есть автоматизированные тесты, запустите их. Если у вас есть &lt;a href=&quot;https://en.wikipedia.org/wiki/Lint_%28software%29&quot;&gt;ворсинки&lt;/a&gt; , запустите это. Если это проект для сборки, то создайте его перед фиксацией и т. Д. Во всех случаях вам нужно провести небольшое тестирование, чтобы убедиться, что ваши изменения ничего не сломали. (Черт, даже слияние без конфликтов может нарушить работающий код.)</target>
        </trans-unit>
        <trans-unit id="8f7ad0b58875a2eef77bed1a3b771769ae25e55c" translate="yes" xml:space="preserve">
          <source>If you still have any files under &lt;code&gt;Unmerged paths&lt;/code&gt;, and you did solve the conflict manually, then let Git know that you solved it by: &lt;code&gt;git add path/file&lt;/code&gt;.</source>
          <target state="translated">Если у вас все еще есть файлы в &lt;code&gt;Unmerged paths&lt;/code&gt; , и вы все-таки решили конфликт вручную, то сообщите Git, что вы решили его с помощью: &lt;code&gt;git add path/file&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="618a9df3236f9b4b00c66e050c030f70e7bfbaf7" translate="yes" xml:space="preserve">
          <source>If you want to do &lt;strong&gt;for all conflict files&lt;/strong&gt; run:</source>
          <target state="translated">Если вы хотите сделать &lt;strong&gt;для всех конфликтных файлов,&lt;/strong&gt; запустите:</target>
        </trans-unit>
        <trans-unit id="40e2ccced76045c87f99f9598b0f6ca2b170ac5d" translate="yes" xml:space="preserve">
          <source>If you want to get changes from BASE</source>
          <target state="translated">Если вы хотите получить изменения от BASE.</target>
        </trans-unit>
        <trans-unit id="9a91acbff11907c7623923e649ccb1161cc13790" translate="yes" xml:space="preserve">
          <source>If you want to get changes from LOCAL</source>
          <target state="translated">Если вы хотите получить изменения от МЕСТНОЙ</target>
        </trans-unit>
        <trans-unit id="3ff3c58bc799a86cb942b0f9edeea683c119470b" translate="yes" xml:space="preserve">
          <source>If you want to get changes from REMOTE</source>
          <target state="translated">Если вы хотите получить изменения от REMOTE</target>
        </trans-unit>
        <trans-unit id="7f764d3f6b37d69b7cfb44ee1e10315cfa562c73" translate="yes" xml:space="preserve">
          <source>If you want to merge from branch (test) to master, you can follow these steps:</source>
          <target state="translated">Если вы хотите произвести слияние от ответвления (тест)к мастеру,вы можете выполнить следующие шаги:</target>
        </trans-unit>
        <trans-unit id="5b99b606e7392bf3cc501c5e6406eeea867175e7" translate="yes" xml:space="preserve">
          <source>If you're making frequent small commits, then start by looking at the commit comments with &lt;code&gt;git log --merge&lt;/code&gt;. Then &lt;code&gt;git diff&lt;/code&gt; will show you the conflicts.</source>
          <target state="translated">Если вы часто делаете небольшие коммиты, начните с просмотра комментариев коммитов с помощью &lt;code&gt;git log --merge&lt;/code&gt; . Тогда &lt;code&gt;git diff&lt;/code&gt; покажет вам конфликты.</target>
        </trans-unit>
        <trans-unit id="e087c5303db4581add8424216fe62c3476f5c96d" translate="yes" xml:space="preserve">
          <source>If you're unsure of a merge, don't force it.</source>
          <target state="translated">Если вы не уверены в слиянии,не форсируйте его.</target>
        </trans-unit>
        <trans-unit id="eae8dcd45665da5a6e192ad89e08d8c301cd9888" translate="yes" xml:space="preserve">
          <source>In case of conflict, just use</source>
          <target state="translated">В случае конфликта,просто используйте</target>
        </trans-unit>
        <trans-unit id="d592dbde4754ce459b94a6718b0d95d29d91ed12" translate="yes" xml:space="preserve">
          <source>In speaking of pull/fetch/merge in the above answers, I would like to share an interesting and productive trick,</source>
          <target state="translated">Говоря о pulfetchmerge в приведенных выше ответах,я хотел бы поделиться интересным и продуктивным трюком,</target>
        </trans-unit>
        <trans-unit id="404c8199355521cd32b47a7d72664223656e0afb" translate="yes" xml:space="preserve">
          <source>In the long run, planning ahead and being aware of what others are working on are the best tools for anticipating merge conflicts and prepare yourself to resolve them correctly in less time.</source>
          <target state="translated">В долгосрочной перспективе заблаговременное планирование и осознание того,над чем работают другие,являются лучшими инструментами для предвидения конфликтов слияния и подготовки к их правильному разрешению за меньшее время.</target>
        </trans-unit>
        <trans-unit id="2ddfdc4de435b57cc9f426f563d158f02c8f1dfc" translate="yes" xml:space="preserve">
          <source>In this step you will try to fix the conflict using your prefer IDE</source>
          <target state="translated">На этом шаге вы попытаетесь исправить конфликт,используя предпочитаемую вами IDE</target>
        </trans-unit>
        <trans-unit id="dc64513761c45dd824144f46922e260041bf8652" translate="yes" xml:space="preserve">
          <source>Instead I try to do</source>
          <target state="translated">Вместо этого я пытаюсь сделать</target>
        </trans-unit>
        <trans-unit id="c042f3d9b71b32db250543be269d410c99d13527" translate="yes" xml:space="preserve">
          <source>Instead of:</source>
          <target state="translated">Вместо этого:</target>
        </trans-unit>
        <trans-unit id="7114095c6f61ba912555fde2a05cdbdc7435bd0d" translate="yes" xml:space="preserve">
          <source>It can help you very well by showing what are the changes made to the original one and should you accept  &lt;code&gt;incoming&lt;/code&gt; or</source>
          <target state="translated">Это может помочь вам очень хорошо, показывая, какие изменения были внесены в оригинал, и если вы принимаете &lt;code&gt;incoming&lt;/code&gt; или</target>
        </trans-unit>
        <trans-unit id="97c4c9cdb8b4f9dade9ea3c515bca654b46ccc5b" translate="yes" xml:space="preserve">
          <source>It graphically can show the changes between 3 files and it allows automatic merging (when safe to do so) and full control over editing the resulting file.</source>
          <target state="translated">Он может графически показывать изменения между 3 файлами и позволяет автоматическое объединение (когда это безопасно)и полный контроль над редактированием результирующего файла.</target>
        </trans-unit>
        <trans-unit id="fc65623ad7e5af9ffb0022bbd490aee9cc8be179" translate="yes" xml:space="preserve">
          <source>It helped for me and it can work for you too !</source>
          <target state="translated">Это помогло мне,и это может сработать и для тебя!</target>
        </trans-unit>
        <trans-unit id="26cb61480f17932403ae66265778d74b745d11b3" translate="yes" xml:space="preserve">
          <source>It opens a GUI that steps you through each conflict, and you get to choose how to merge.  Sometimes it requires a bit of hand editing afterwards, but usually it's enough by itself.  It is much better than doing the whole thing by hand certainly.</source>
          <target state="translated">Он открывает графический интерфейс,который проходит через каждый конфликт и позволяет выбрать способ слияния.Иногда после этого требуется немного ручного редактирования,но обычно этого достаточно самому.Конечно,это намного лучше,чем делать все вручную.</target>
        </trans-unit>
        <trans-unit id="b42f3381050c1b31f935c0dabe817fe60cac10a9" translate="yes" xml:space="preserve">
          <source>It will open local version (ours), &quot;base&quot; or &quot;merged&quot; version (the current result of the merge) and remote version (theirs). Save the merged version when you are finished, run &lt;code&gt;git mergetool -t meld&lt;/code&gt; again until you get &quot;No files need merging&quot;, then go to Steps 3. and 4.</source>
          <target state="translated">Он откроет локальную (нашу), &amp;laquo;базовую&amp;raquo; или &amp;laquo;объединенную&amp;raquo; версию (текущий результат слияния) и удаленную версию (свою). Сохраните объединенную версию, когда закончите, снова запустите &lt;code&gt;git mergetool -t meld&lt;/code&gt; , пока не появится &amp;laquo;Нет необходимости объединять файлы&amp;raquo;, затем перейдите к Шагу 3. и 4.</target>
        </trans-unit>
        <trans-unit id="bb08ab4098d66264a23b33d34e2a1fb7f673e561" translate="yes" xml:space="preserve">
          <source>It will show all conflicts like this</source>
          <target state="translated">Это покажет все подобные конфликты</target>
        </trans-unit>
        <trans-unit id="dbcce2d9085ea3f26119a032f6da8d8969d5be5c" translate="yes" xml:space="preserve">
          <source>LOCAL &amp;ndash; this is file from the current branch</source>
          <target state="translated">LOCAL - это файл из текущей ветки</target>
        </trans-unit>
        <trans-unit id="8ae1c34bd37fad49cc5f8e02da648a78e89c3ed8" translate="yes" xml:space="preserve">
          <source>Left</source>
          <target state="translated">Left</target>
        </trans-unit>
        <trans-unit id="555712d9829e6328a9b7d5ec70facbda745fb9b3" translate="yes" xml:space="preserve">
          <source>Look at the diffs from each branch. &lt;code&gt;git log --merge -p &amp;lt;path&amp;gt;&lt;/code&gt; will show diffs first for the &lt;code&gt;HEAD&lt;/code&gt; version and then the &lt;code&gt;MERGE_HEAD&lt;/code&gt; version.</source>
          <target state="translated">Посмотрите на различия из каждой ветви. &lt;code&gt;git log --merge -p &amp;lt;path&amp;gt;&lt;/code&gt; сначала покажет различия для версии &lt;code&gt;HEAD&lt;/code&gt; , а затем версию &lt;code&gt;MERGE_HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a326ab540e0d9536d53dbc94d57cb0c25e24d9a1" translate="yes" xml:space="preserve">
          <source>Look at the diffs. &lt;code&gt;git diff&lt;/code&gt; will show a three-way diff, highlighting changes from both the &lt;code&gt;HEAD&lt;/code&gt; and &lt;code&gt;MERGE_HEAD&lt;/code&gt; versions.</source>
          <target state="translated">Посмотрите на различия. &lt;code&gt;git diff&lt;/code&gt; покажет трехсторонний diff, выделив изменения как в версии &lt;code&gt;HEAD&lt;/code&gt; ,так и в версии &lt;code&gt;MERGE_HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8c63749f2ae2fa24fa7ef48c360ef59f66a1f48" translate="yes" xml:space="preserve">
          <source>Look at the originals. &lt;code&gt;git show :1:filename&lt;/code&gt; shows the common ancestor, &lt;code&gt;git show :2:filename&lt;/code&gt; shows the &lt;code&gt;HEAD&lt;/code&gt; version, and &lt;code&gt;git show :3:filename&lt;/code&gt; shows the &lt;code&gt;MERGE_HEAD&lt;/code&gt; version.</source>
          <target state="translated">Посмотрите на оригиналы. &lt;code&gt;git show :1:filename&lt;/code&gt; показывает общего предка, &lt;code&gt;git show :2:filename&lt;/code&gt; показывает версию &lt;code&gt;HEAD&lt;/code&gt; , а &lt;code&gt;git show :3:filename&lt;/code&gt; показывает версию &lt;code&gt;MERGE_HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da48cfaff0482f5a700e60e4191306b2026eace6" translate="yes" xml:space="preserve">
          <source>MERGED &amp;ndash; merge result, this is what gets saved in the repo</source>
          <target state="translated">MERGED - результат слияния, это то, что сохраняется в репо</target>
        </trans-unit>
        <trans-unit id="c207672d3b478974acf7e5502421de413cf99f62" translate="yes" xml:space="preserve">
          <source>Merge conflicts could occur in different situations:</source>
          <target state="translated">Конфликты слияния могут возникать в разных ситуациях:</target>
        </trans-unit>
        <trans-unit id="89538bead44a3004ea9986328c5b27cb003d4f0c" translate="yes" xml:space="preserve">
          <source>Merge conflicts happens when changes are made to a file at the same time. Here is how to solve it.</source>
          <target state="translated">Конфликт слияния возникает,когда изменения вносятся в файл одновременно.Вот как это решить.</target>
        </trans-unit>
        <trans-unit id="e5fff5bc126a251ef08a0ce23b8487354eb67b5f" translate="yes" xml:space="preserve">
          <source>Merging can feel overwhelming, especially when there are a lot of conflicting files and the conflict markers cover hundreds of lines. Often times when estimating software projects we don't include enough time for overhead items like handling a gnarly merge, so it feels like a real drag to spend several hours dissecting each conflict.</source>
          <target state="translated">Слияние может ощущаться непреодолимо,особенно когда конфликтующих файлов много,а маркеры конфликтов покрывают сотни строк.Часто при оценке программных проектов мы не включаем достаточно времени для таких накладных расходов,как обработка несанкционированного слияния,так что это похоже на настоящее перетаскивание,чтобы потратить несколько часов на препарирование каждого конфликта.</target>
        </trans-unit>
        <trans-unit id="e39bb33836c26f3139f0a912c706206ba5e974d5" translate="yes" xml:space="preserve">
          <source>More info about vimdiff navigation &lt;a href=&quot;https://stackoverflow.com/questions/4556184/vim-move-window-left-right&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/questions/27151456/how-do-i-jump-to-the-next-prev-diff-in-git-difftool&quot;&gt;here&lt;/a&gt;</source>
          <target state="translated">Больше информации о навигации vimdiff &lt;a href=&quot;https://stackoverflow.com/questions/4556184/vim-move-window-left-right&quot;&gt;здесь&lt;/a&gt; и &lt;a href=&quot;https://stackoverflow.com/questions/27151456/how-do-i-jump-to-the-next-prev-diff-in-git-difftool&quot;&gt;здесь&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b1bfe9110cf0c706e0d05da6f4787b55fdde2a0" translate="yes" xml:space="preserve">
          <source>Note the list of conflicted files with: &lt;code&gt;git status&lt;/code&gt; (under &lt;code&gt;Unmerged paths&lt;/code&gt; section).</source>
          <target state="translated">Обратите внимание на список конфликтующих файлов с: &lt;code&gt;git status&lt;/code&gt; (в разделе &lt;code&gt;Unmerged paths&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="76a117ad8111894a1bf378d48165f39268206dd8" translate="yes" xml:space="preserve">
          <source>Now every thing is fine and you will find your commit in gerrit</source>
          <target state="translated">Теперь все в порядке,и вы найдете свой коммит в геррите.</target>
        </trans-unit>
        <trans-unit id="439caa25a979e2fb12ce16caa7f6dd15ef11c706" translate="yes" xml:space="preserve">
          <source>Now note that the file TestClass.java is shown in red in intelliJ
Also git status will show</source>
          <target state="translated">Теперь обратите внимание,что файл TestClass.java показан красным цветом в intelliJ Также git статус будет показывать</target>
        </trans-unit>
        <trans-unit id="da73ee3e345c38d30a956ed6fc100e554e797dbc" translate="yes" xml:space="preserve">
          <source>Now you can do the same and maintain as many local branches you want and work simultaneous my just doing a git checkout to your branch when ever necessary.</source>
          <target state="translated">Теперь вы можете делать то же самое и обслуживать столько локальных веток,сколько захотите,и работать одновременно с моей только что выполненной git-проверкой в вашей ветке,когда в этом возникнет необходимость.</target>
        </trans-unit>
        <trans-unit id="25b6fa122cc4fa3ab8aae8c0fb7c6910f4daf896" translate="yes" xml:space="preserve">
          <source>Oh my, oh my, upstream changed some things, but just to use my changes...no...their changes...</source>
          <target state="translated">О боже,о боже,вверх по течению изменили некоторые вещи,но просто чтобы использовать мои изменения...нет...их изменения...</target>
        </trans-unit>
        <trans-unit id="4960aa7dc5964ca6ef5eb3e74371acd1a4093407" translate="yes" xml:space="preserve">
          <source>On macOS you can install via:</source>
          <target state="translated">На MacOS вы можете установить через:</target>
        </trans-unit>
        <trans-unit id="10317b5751b3df6c5c097f628325b733f07f54e7" translate="yes" xml:space="preserve">
          <source>Once in the 3-ways merge, &lt;em&gt;fugitive&lt;/em&gt; will let you get the changes of any of the branches you are merging in the following fashion:</source>
          <target state="translated">После трехстороннего слияния &lt;em&gt;fugitive&lt;/em&gt; позволит вам получить изменения в любой из веток, которые вы объединяете, следующим образом:</target>
        </trans-unit>
        <trans-unit id="a577bec41e40cb755e1ccc45c2a5d18df1988e6d" translate="yes" xml:space="preserve">
          <source>Once you are finished merging the file, type &lt;code&gt;:Gwrite&lt;/code&gt; in the merged buffer. 
Vimcasts released a great &lt;a href=&quot;http://vimcasts.org/episodes/fugitive-vim-resolving-merge-conflicts-with-vimdiff/&quot;&gt;video&lt;/a&gt; explaining in detail this steps.</source>
          <target state="translated">Как только вы закончите объединение файла, введите &lt;code&gt;:Gwrite&lt;/code&gt; в объединенном буфере. Vimcasts выпустил отличное &lt;a href=&quot;http://vimcasts.org/episodes/fugitive-vim-resolving-merge-conflicts-with-vimdiff/&quot;&gt;видео,&lt;/a&gt; подробно объясняющее эти шаги.</target>
        </trans-unit>
        <trans-unit id="43f787b16f278fcf8aa01eef0994a4578332b046" translate="yes" xml:space="preserve">
          <source>Once you've resolved &lt;strong&gt;all&lt;/strong&gt; conflicts, do &lt;code&gt;git rebase --continue&lt;/code&gt; or whatever command 
Git said to do when you completed.</source>
          <target state="translated">После того, как вы разрешите &lt;strong&gt;все&lt;/strong&gt; конфликты, выполните &lt;code&gt;git rebase --continue&lt;/code&gt; или любую другую команду, которую Git сказал выполнить по завершении.</target>
        </trans-unit>
        <trans-unit id="db3bda9aacc5bca97220fd96373a3421022ea32c" translate="yes" xml:space="preserve">
          <source>Once you've resolved the conflict in a file &lt;code&gt;git add the_file&lt;/code&gt;.</source>
          <target state="translated">Как только вы разрешите конфликт в файле &lt;code&gt;git add the_file&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59017e16293cce2b88b043f41e02d21dac1a985e" translate="yes" xml:space="preserve">
          <source>Open each file and examine the diffs; Git demarcates them.  Hopefully it will be obvious which version of each block to keep.  You may need to discuss it with fellow developers who committed the code.</source>
          <target state="translated">Откройте каждый файл и изучите различия;Git демаркирует их.Надеюсь,будет ясно,какую версию каждого блока держать.Возможно,вам придётся обсудить это с коллегами-разработчиками,совершившими коммиссию кода.</target>
        </trans-unit>
        <trans-unit id="e85b9596370fb9c69c9435dbfa9bd28dc6b6ab65" translate="yes" xml:space="preserve">
          <source>Open each of those files one by one, or all at once by:</source>
          <target state="translated">Откройте каждый из этих файлов по одному или все сразу:</target>
        </trans-unit>
        <trans-unit id="90a01728725fc6bffec18879dac73281b710df12" translate="yes" xml:space="preserve">
          <source>Open the file in intelliJ, it will have sections with</source>
          <target state="translated">Откройте файл в intelliJ,он будет иметь секции с</target>
        </trans-unit>
        <trans-unit id="d94753520a26eddd7b65afc1ab802df26dfc0b83" translate="yes" xml:space="preserve">
          <source>Or else you will have to use a GUI merge tool to step through files one by one, say the merge tool is &lt;code&gt;p4merge&lt;/code&gt;, or write any one's name you've already installed</source>
          <target state="translated">Или же вам придется использовать инструмент слияния GUI для пошагового просмотра файлов, скажем, инструмент слияния &lt;code&gt;p4merge&lt;/code&gt; , или написать любое имя, которое вы уже установили</target>
        </trans-unit>
        <trans-unit id="33dc7a1152af93385b97abf2bed64a4471a85875" translate="yes" xml:space="preserve">
          <source>PS: It will work only if you've configured git with with your code and Visual Studio Code.</source>
          <target state="translated">PS:Он будет работать,только если вы настроили git с вашим кодом и Visual Studio Code.</target>
        </trans-unit>
        <trans-unit id="6052e8e1fbe0373fcc55364272596ceb5789b5e1" translate="yes" xml:space="preserve">
          <source>Path and filename conflicts can be solved by &lt;code&gt;git add&lt;/code&gt;/&lt;code&gt;git rm&lt;/code&gt;.</source>
          <target state="translated">Конфликты пути и имени файла могут быть решены с помощью &lt;code&gt;git add&lt;/code&gt; / &lt;code&gt;git rm&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7dd1808b84c37fb3ea9b4448dcf162c6448fab5" translate="yes" xml:space="preserve">
          <source>Plan ahead; communicate with co-workers.</source>
          <target state="translated">Планируйте заранее;общайтесь с коллегами.</target>
        </trans-unit>
        <trans-unit id="a404d7bca3c1d51acaf1b7dab0af047b2a2ffb83" translate="yes" xml:space="preserve">
          <source>Planning ahead and being aware of what others are working on can help prevent merge conflicts and/or help resolve them earlier -- while the details are still fresh in mind.</source>
          <target state="translated">Заблаговременное планирование и знание того,над чем работают другие,может помочь предотвратить конфликты слияния или помочь решить их раньше-в то время как детали еще свежи в памяти.</target>
        </trans-unit>
        <trans-unit id="83c0b885b0a38566ed9722438c0513be76f77cfd" translate="yes" xml:space="preserve">
          <source>Please follow the following steps to fix merge conflicts in Git:</source>
          <target state="translated">Пожалуйста,выполните следующие шаги,чтобы исправить конфликты слияний в Git'е:</target>
        </trans-unit>
        <trans-unit id="f7d4c271606f9ee9168d1a393f65cdddde869ceb" translate="yes" xml:space="preserve">
          <source>Pull the recent contents from master:
&lt;strong&gt;&lt;em&gt;git pull --rebase origin master&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">Извлеките последнее содержимое из master: &lt;strong&gt;&lt;em&gt;git pull --rebase origin master&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3ee9fffd45db979e0d1c74f03d3dd56b26471c3c" translate="yes" xml:space="preserve">
          <source>Push to the master branch:
&lt;strong&gt;&lt;em&gt;git push&lt;/em&gt;&lt;/strong&gt; (to your Git repository)</source>
          <target state="translated">Push в ветку master: &lt;strong&gt;&lt;em&gt;git push&lt;/em&gt;&lt;/strong&gt; (в ваш репозиторий Git)</target>
        </trans-unit>
        <trans-unit id="b6fbb68683d3832aa04f181677975e02a81e5630" translate="yes" xml:space="preserve">
          <source>REMOTE &amp;ndash; file you are merging into your branch</source>
          <target state="translated">REMOTE - файл, который вы объединяете в свою ветку</target>
        </trans-unit>
        <trans-unit id="88b35db955662f7fccc81b814566407d747daaa3" translate="yes" xml:space="preserve">
          <source>Related: &lt;a href=&quot;https://stackoverflow.com/q/25576415/55075&quot;&gt;What is the precise meaning of &quot;ours&quot; and &quot;theirs&quot; in git?&lt;/a&gt;</source>
          <target state="translated">Связанный: &lt;a href=&quot;https://stackoverflow.com/q/25576415/55075&quot;&gt;Каково точное значение &amp;laquo;наших&amp;raquo; и &amp;laquo;их&amp;raquo; в git?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb682014aabba1d2c235e608a21de9821bfbc40c" translate="yes" xml:space="preserve">
          <source>Replacing &lt;code&gt;$MERGED_IN_BRANCH&lt;/code&gt; with the branch I merged in and &lt;code&gt;[path]&lt;/code&gt; with the file that is conflicting. This command will log all the commits, in patch form, between (&lt;code&gt;..&lt;/code&gt;) two commits. If you leave one side empty like in the commands above git will automatically use &lt;code&gt;HEAD&lt;/code&gt; (the branch you are merging into in this case).</source>
          <target state="translated">Замена &lt;code&gt;$MERGED_IN_BRANCH&lt;/code&gt; на ветку, в которую я слился, и &lt;code&gt;[path]&lt;/code&gt; на конфликтующий файл. Эта команда будет регистрировать все коммиты в форме патча между ( &lt;code&gt;..&lt;/code&gt; ) двумя коммитами. Если вы оставите одну сторону пустой, как в приведенных выше командах, git будет автоматически использовать &lt;code&gt;HEAD&lt;/code&gt; (в этом случае ветвь, с которой вы объединяетесь).</target>
        </trans-unit>
        <trans-unit id="754ec967779bd2370b6031e462d4cfe9fcbd0f6a" translate="yes" xml:space="preserve">
          <source>Resolve the conflicts. Git will mark the conflicts in the working tree. Edit the files into shape and &lt;code&gt;git add&lt;/code&gt; them to the index. Use &lt;code&gt;git commit&lt;/code&gt; to seal the deal.</source>
          <target state="translated">Разрешить конфликты. Git отметит конфликты в рабочем дереве. Отредактируйте файлы в форму и &lt;code&gt;git add&lt;/code&gt; их в указатель. Используйте &lt;code&gt;git commit&lt;/code&gt; , чтобы запечатать сделку.</target>
        </trans-unit>
        <trans-unit id="10f8070070547ece9227547970e8168b7821ea8b" translate="yes" xml:space="preserve">
          <source>Review changes and accept either version for each of them.</source>
          <target state="translated">Просмотрите изменения и примите любую из версий для каждой из них.</target>
        </trans-unit>
        <trans-unit id="954daa8b00335c66e262106e01f7dc22b19a4372" translate="yes" xml:space="preserve">
          <source>Right</source>
          <target state="translated">Right</target>
        </trans-unit>
        <trans-unit id="a2bfb47b2fe2945a9227665d3b4bfc8f09393dfe" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://medium.com/@yairchu/how-git-mediate-made-me-stop-fearing-merge-conflicts-and-start-treating-them-like-an-easy-game-of-a2c71b919984&quot;&gt;this post&lt;/a&gt; for a quick intro on how to use it.</source>
          <target state="translated">Посмотрите &lt;a href=&quot;https://medium.com/@yairchu/how-git-mediate-made-me-stop-fearing-merge-conflicts-and-start-treating-them-like-an-easy-game-of-a2c71b919984&quot;&gt;этот пост&lt;/a&gt; для краткого введения о том, как его использовать.</target>
        </trans-unit>
        <trans-unit id="3ccbda76134d2bbffe0a7eb4a8057418496f4c8f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-merge.html#_how_conflicts_are_presented&quot;&gt;How Conflicts Are Presented&lt;/a&gt; or, in Git, the &lt;code&gt;git merge&lt;/code&gt; documentation to understand what merge conflict markers are.</source>
          <target state="translated">Посмотрите, &lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-merge.html#_how_conflicts_are_presented&quot;&gt;как представлены конфликты&lt;/a&gt; или, в Git, документацию по &lt;code&gt;git merge&lt;/code&gt; , чтобы понять, что такое маркеры конфликтов слияния.</target>
        </trans-unit>
        <trans-unit id="494638b10d967211b2ee49f2b5a0c6f2944955f6" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;https://help.github.com/articles/resolving-a-merge-conflict-from-the-command-line/&quot;&gt;Resolving a merge conflict from the command line&lt;/a&gt; at GitHub</source>
          <target state="translated">Смотрите также: &lt;a href=&quot;https://help.github.com/articles/resolving-a-merge-conflict-from-the-command-line/&quot;&gt;Разрешение конфликта слияния из командной строки&lt;/a&gt; на GitHub</target>
        </trans-unit>
        <trans-unit id="117985687fb4e31fc4b0b70ce40cfa454b78879d" translate="yes" xml:space="preserve">
          <source>Simply download it and run in repo as:</source>
          <target state="translated">Просто скачайте его и запустите в репо как:</target>
        </trans-unit>
        <trans-unit id="3b4d4db1016a0dcd197daee09f21a7c6173951d5" translate="yes" xml:space="preserve">
          <source>Simply, if you know well that changes in one of the repositories is not important, and want to resolve all changes in favor of the other one, use:</source>
          <target state="translated">Просто,если вы хорошо знаете,что изменения в одном из репозиториев не важны,и хотите разрешить все изменения в пользу другого,используйте:</target>
        </trans-unit>
        <trans-unit id="bdc26a6c55a54975e8e87cc14ea1935913a21dd5" translate="yes" xml:space="preserve">
          <source>So instead I do:</source>
          <target state="translated">Так что вместо этого я делаю:</target>
        </trans-unit>
        <trans-unit id="3e66f4270aaf5aad76b4a5003b6d4c3258489502" translate="yes" xml:space="preserve">
          <source>So you decide to take a look at the changes:</source>
          <target state="translated">Так что вы решили взглянуть на изменения:</target>
        </trans-unit>
        <trans-unit id="ad9d48522fcf343c56c523ee1bc1c12a8297dbe1" translate="yes" xml:space="preserve">
          <source>So you get up-to-date and try again, but have a conflict:</source>
          <target state="translated">Значит,ты в курсе и пытаешься снова,но у тебя конфликт:</target>
        </trans-unit>
        <trans-unit id="8f28dcb6026cd0952fcd9aac2a3fbb12726aed7c" translate="yes" xml:space="preserve">
          <source>Solve the conflicts separately for each file by one of the following approaches:</source>
          <target state="translated">Разрешать конфликты отдельно для каждого файла одним из следующих подходов:</target>
        </trans-unit>
        <trans-unit id="b8390b6223d0ac9dbfbdb4d9ee338a66d523cbc0" translate="yes" xml:space="preserve">
          <source>Somebody already mentioned this, but understanding the intention behind each diff hunk is generally very helpful for understanding where a conflict came from and how to handle it.</source>
          <target state="translated">Кто-то уже упоминал об этом,но понимание намерений,стоящих за каждым разным куском,обычно очень полезно для понимания того,откуда взялся конфликт и как с ним справиться.</target>
        </trans-unit>
        <trans-unit id="e94e2a8ac1328e89e2951fe041052cadadb87fc8" translate="yes" xml:space="preserve">
          <source>Start the mergetool and check the conflicts and fix them...and check the changes in the remote branch with your current branch:
&lt;strong&gt;&lt;em&gt;git mergetool&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">Запустите mergetool, проверьте конфликты и исправьте их ... и проверьте изменения в удаленной ветке с вашей текущей веткой: &lt;strong&gt;&lt;em&gt;git mergetool&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5ff57f4185e884322f43c9c59da60f12f41285ea" translate="yes" xml:space="preserve">
          <source>TL;DR</source>
          <target state="translated">TL;DR</target>
        </trans-unit>
        <trans-unit id="db2022cd2cf86579d8076f3076c361ff76371894" translate="yes" xml:space="preserve">
          <source>Ta-da!</source>
          <target state="translated">Ta-da!</target>
        </trans-unit>
        <trans-unit id="cb0d4640cc97fab3274414a90556c59b65391899" translate="yes" xml:space="preserve">
          <source>The best thing I have found is to use the &quot;diff3&quot; merge conflict style:</source>
          <target state="translated">Лучшее,что я нашел,это использование стиля слияния конфликтов &quot;diff3&quot;:</target>
        </trans-unit>
        <trans-unit id="fa416c6119c6e16e6b0b6ae731c70e6bbd2ef937" translate="yes" xml:space="preserve">
          <source>The command doesn't necessarily open a GUI unless you install one. Running &lt;code&gt;git mergetool&lt;/code&gt; for me resulted in &lt;code&gt;vimdiff&lt;/code&gt; being used. You can install one of the following tools to use it instead: &lt;code&gt;meld&lt;/code&gt;, &lt;code&gt;opendiff&lt;/code&gt;, &lt;code&gt;kdiff3&lt;/code&gt;, &lt;code&gt;tkdiff&lt;/code&gt;, &lt;code&gt;xxdiff&lt;/code&gt;, &lt;code&gt;tortoisemerge&lt;/code&gt;, &lt;code&gt;gvimdiff&lt;/code&gt;, &lt;code&gt;diffuse&lt;/code&gt;, &lt;code&gt;ecmerge&lt;/code&gt;, &lt;code&gt;p4merge&lt;/code&gt;, &lt;code&gt;araxis&lt;/code&gt;, &lt;code&gt;vimdiff&lt;/code&gt;, &lt;code&gt;emerge&lt;/code&gt;.</source>
          <target state="translated">Команда не обязательно открывает графический интерфейс, если вы его не установите. Запуск &lt;code&gt;git mergetool&lt;/code&gt; для меня привел к использованию &lt;code&gt;vimdiff&lt;/code&gt; . Вместо этого вы можете установить один из следующих инструментов: &lt;code&gt;opendiff&lt;/code&gt; , opendiff , &lt;code&gt;kdiff3&lt;/code&gt; , &lt;code&gt;tkdiff&lt;/code&gt; , &lt;code&gt;xxdiff&lt;/code&gt; , &lt;code&gt;tortoisemerge&lt;/code&gt; , &lt;code&gt;gvimdiff&lt;/code&gt; , &lt;code&gt;diffuse&lt;/code&gt; , &lt;code&gt;ecmerge&lt;/code&gt; , &lt;code&gt;p4merge&lt;/code&gt; , &lt;code&gt;araxis&lt;/code&gt; , &lt;code&gt;vimdiff&lt;/code&gt; , &lt;code&gt;emerge&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="00181eebd298a786ad84b0a5cfdc81e9f1a4196b" translate="yes" xml:space="preserve">
          <source>The middle section is what the common ancestor looked like. This is useful because you can compare it to the top and bottom versions to get a better sense of what was changed on each branch, which gives you a better idea for what the purpose of each change was.</source>
          <target state="translated">Средняя часть-это то,как выглядел обычный предок.Это полезно,потому что вы можете сравнить его с верхней и нижней версиями,чтобы получить лучшее представление о том,что было изменено в каждой ветке,что даст вам лучшее представление о том,какова была цель каждого изменения.</target>
        </trans-unit>
        <trans-unit id="84eff26971566856e04b40855b74ac202b029577" translate="yes" xml:space="preserve">
          <source>Then I can run the following commands to see the two diff hunks that caused the conflict:</source>
          <target state="translated">Затем я могу запустить следующие команды,чтобы увидеть два diff hunks,которые вызвали конфликт:</target>
        </trans-unit>
        <trans-unit id="960e9499cb2875d16461130707873670bf09ea5c" translate="yes" xml:space="preserve">
          <source>Then every time you come across a merge conflict you just need to run this command:</source>
          <target state="translated">Тогда каждый раз,когда вы сталкиваетесь с конфликтом слияния,вам просто нужно выполнить эту команду:</target>
        </trans-unit>
        <trans-unit id="3259e73bc0d30282ee86971a518870c81c32ad76" translate="yes" xml:space="preserve">
          <source>Then it opens the Kdiff3, and first tries to resolve the merge conflicts automatically. Most of the conflicts would be resolved spontaneously and you need to fix the rest manually.</source>
          <target state="translated">Затем он открывает Kdiff3 и сначала пытается разрешить конфликты слияния автоматически.Большинство конфликтов будет разрешено спонтанно,а остальное нужно исправить вручную.</target>
        </trans-unit>
        <trans-unit id="cd0247227edaffbcc3ab9deb3c823775c53bdc38" translate="yes" xml:space="preserve">
          <source>Then once you're done, save the file and it goes to the next file with conflict and you do the same thing again until all the conflicts are resolved.</source>
          <target state="translated">Затем,как только вы закончили,сохраните файл,и он перейдет к следующему файлу с конфликтом,и вы повторите то же самое до тех пор,пока все конфликты не будут разрешены.</target>
        </trans-unit>
        <trans-unit id="7a782f5dc825122a5b15059b520496a2b37aeed9" translate="yes" xml:space="preserve">
          <source>Then open the project in VS and go to Team Explorer -&amp;gt; Branch.  Now there is a message that says Merge is pending and conflicting files are listed right below the message.</source>
          <target state="translated">Затем откройте проект в VS и перейдите в Team Explorer -&amp;gt; Branch. Теперь есть сообщение о том, что Merge находится на рассмотрении, а конфликтующие файлы перечислены прямо под сообщением.</target>
        </trans-unit>
        <trans-unit id="6276b71b7b9d1df026bc479f15195ae504382e10" translate="yes" xml:space="preserve">
          <source>Then setup git configs to use Kdiff as its mergetool:</source>
          <target state="translated">Затем настройте git-конфигурации на использование Kdiff в качестве mergetool:</target>
        </trans-unit>
        <trans-unit id="6e37b00edbd74e9993355959a37378dd58899b7f" translate="yes" xml:space="preserve">
          <source>Then you can use the following keyboard shortcuts:</source>
          <target state="translated">Затем вы можете использовать следующие клавиатурные сокращения:</target>
        </trans-unit>
        <trans-unit id="35380e99d8fccffbf29acf9e8f9efd6178d21e86" translate="yes" xml:space="preserve">
          <source>There are 3 steps:</source>
          <target state="translated">Есть 3 шага:</target>
        </trans-unit>
        <trans-unit id="886c558dcdd074dc65267395c98971c06030fdc7" translate="yes" xml:space="preserve">
          <source>These 4 views are</source>
          <target state="translated">Эти 4 вида</target>
        </trans-unit>
        <trans-unit id="22479224c315e3ac8965a8d67b70537247f8ee88" translate="yes" xml:space="preserve">
          <source>This above command is the most useful command in my git life which saved a lots of time.</source>
          <target state="translated">Эта вышеприведённая команда-самая полезная в жизни моего git'а,которая сэкономила кучу времени.</target>
        </trans-unit>
        <trans-unit id="59037e1d8acc37c2c0be80dd1fa1d263cb2c7a35" translate="yes" xml:space="preserve">
          <source>This answers is to add an alternative for those VIM users like I that prefers to do everything within the editor.</source>
          <target state="translated">Этот ответ заключается в добавлении альтернативы для таких пользователей VIM,как я,которые предпочитают делать все в редакторе.</target>
        </trans-unit>
        <trans-unit id="61c64505fa913e4a77f659489f58212df9cc15bb" translate="yes" xml:space="preserve">
          <source>This is not the same as using a merge tool, since a merge tool will include all of the non-conflicting diff hunks too. I find that to be distracting.</source>
          <target state="translated">Это не то же самое,что использовать инструмент слияния,так как инструмент слияния будет включать в себя все не противоречащие друг другу дифф диффузионные hunks.Я нахожу это отвлекающим.</target>
        </trans-unit>
        <trans-unit id="7a9726ba4331f750e36611e6d88058f64fce2ae7" translate="yes" xml:space="preserve">
          <source>This produces conflict markers like this:</source>
          <target state="translated">Это приводит к таким маркерам конфликта:</target>
        </trans-unit>
        <trans-unit id="9429d7dd63b1a82244a4ee81fc2e98d38e5dc2f3" translate="yes" xml:space="preserve">
          <source>This shows all of the commits that touched that file in between the common ancestor and the two heads you are merging. (So it doesn't include commits that already exist in both branches before merging.) This helps you ignore diff hunks that clearly are not a factor in your current conflict.</source>
          <target state="translated">Это показывает все коммиты,которые коснулись этого файла между общим предком и двумя головами,которые вы объединяете.(Таким образом,он не включает коммиты,которые уже существуют в обеих ветках до слияния).Это поможет вам проигнорировать diff hunks,которые явно не являются фактором в вашем текущем конфликте.</target>
        </trans-unit>
        <trans-unit id="e8052170fcce5a238152e51b1b9fa51d7a1954b9" translate="yes" xml:space="preserve">
          <source>This way you are more deliberate about which files get added and you also get to review the list and think a bit more while using the editor for the message.  I find it also improves my commit messages when I use a full screen editor rather than the &lt;code&gt;-m&lt;/code&gt; option.</source>
          <target state="translated">Таким образом, вы более тщательно продумываете, какие файлы добавляются, и вы также можете просмотреть список и подумать немного больше, используя редактор сообщения. Я считаю, что это также улучшает мои сообщения о фиксации, когда я использую полноэкранный редактор, а не параметр &lt;code&gt;-m&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9bb8d189f888727aa299a713fa141bbbf42bccb5" translate="yes" xml:space="preserve">
          <source>This will allow you to see what commits went into the file in the two branches after they diverged. It usually makes it much easier to solve conflicts.</source>
          <target state="translated">Это позволит вам увидеть,какие коммиты попали в файл в двух ветках после того,как они разошлись.Обычно это значительно облегчает решение конфликтов.</target>
        </trans-unit>
        <trans-unit id="9f7b2877e2f1a7bd2921ac234215cbfe9c395a9f" translate="yes" xml:space="preserve">
          <source>This will open three buffers (mine, theirs, and the output buffer). Navigate by pressing 'n' (next region), 'p' (prevision region). Press 'a' and 'b' to copy mine or theirs region to the output buffer, respectively. And/or edit the output buffer directly.</source>
          <target state="translated">При этом будут открыты три буфера (мой,их и выходной).Навигация осуществляется нажатием 'n' (следующая область),'p' (область предвидения).Нажмите 'a' и 'b',чтобы скопировать шахту или их область в выходной буфер соответственно.Андорра редактирует выходной буфер напрямую.</target>
        </trans-unit>
        <trans-unit id="21f2993514dad951f274354d8d0b9637a2d6b95f" translate="yes" xml:space="preserve">
          <source>This will set vimdiff as the default merge tool.</source>
          <target state="translated">Это установит vimdiff в качестве инструмента слияния по умолчанию.</target>
        </trans-unit>
        <trans-unit id="3cd317ab4778d4d010adb46a5d176b3961ac48ba" translate="yes" xml:space="preserve">
          <source>Thus, if you don't want to use the command-line or &lt;em&gt;any 3rd party tools that are offered here from older answers&lt;/em&gt;, go with GitHub's native tool.</source>
          <target state="translated">Таким образом, если вы не хотите использовать командную строку или &lt;em&gt;какие-либо сторонние инструменты, которые предлагаются здесь из более старых ответов&lt;/em&gt; , используйте родной инструмент GitHub.</target>
        </trans-unit>
        <trans-unit id="3599a4eee13e823c58dbc9bf040eace561214a89" translate="yes" xml:space="preserve">
          <source>Tip Five</source>
          <target state="translated">Совет пять</target>
        </trans-unit>
        <trans-unit id="fefceba8ec7bb1e54efb028d96558e09d4820c6f" translate="yes" xml:space="preserve">
          <source>Tip Four</source>
          <target state="translated">Совет 4</target>
        </trans-unit>
        <trans-unit id="8ca22f40b9bee969d8e790727afea793e1112fac" translate="yes" xml:space="preserve">
          <source>Tip One</source>
          <target state="translated">Совет Один</target>
        </trans-unit>
        <trans-unit id="a998c26341cf9c0a16ddb925ccfd55e91c1a2222" translate="yes" xml:space="preserve">
          <source>Tip Three</source>
          <target state="translated">Совет три</target>
        </trans-unit>
        <trans-unit id="d41d33682690e4ffb5a78c2c2d6f8f79b7aa226e" translate="yes" xml:space="preserve">
          <source>Tip Two</source>
          <target state="translated">Совет два</target>
        </trans-unit>
        <trans-unit id="fab1e01085f3441c59ae11c6bd959811634c7f61" translate="yes" xml:space="preserve">
          <source>To accept local/our version, use: &lt;code&gt;git checkout --ours path/file&lt;/code&gt;</source>
          <target state="translated">Чтобы принять локальную / нашу версию, используйте: &lt;code&gt;git checkout --ours path/file&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc9e8d98a4f0ab6180fa3f017fa21cb84a1c8789" translate="yes" xml:space="preserve">
          <source>To accept remote/other version, use: &lt;code&gt;git checkout --theirs path/file&lt;/code&gt;. This will reject any local changes you did for that file.</source>
          <target state="translated">Чтобы принять удаленную / другую версию, используйте: &lt;code&gt;git checkout --theirs path/file&lt;/code&gt; . Это отклонит любые локальные изменения, которые вы сделали для этого файла.</target>
        </trans-unit>
        <trans-unit id="328411be8e4df9b5a71a4f7ca3e682ee0f2b25e1" translate="yes" xml:space="preserve">
          <source>To check if everything is merged successfully, just run the mergetool command again, you should get this result:</source>
          <target state="translated">Чтобы проверить,что все успешно объединено,просто запустите команду mergetool еще раз,вы должны получить этот результат:</target>
        </trans-unit>
        <trans-unit id="cba02a9087cefb199c787a07b77e046e2a0cbe7e" translate="yes" xml:space="preserve">
          <source>Tpope came up with this great plugin for VIM called &lt;a href=&quot;https://github.com/tpope/vim-fugitive&quot;&gt;fugitive&lt;/a&gt;. Once installed you can run &lt;code&gt;:Gstatus&lt;/code&gt; to check the files that have conflict and &lt;code&gt;:Gdiff&lt;/code&gt; to open Git in a 3 ways merge.</source>
          <target state="translated">Tpope придумали этот замечательный плагин для VIM под названием &lt;a href=&quot;https://github.com/tpope/vim-fugitive&quot;&gt;fugitive&lt;/a&gt; . После установки вы можете запустить &lt;code&gt;:Gstatus&lt;/code&gt; для проверки конфликтующих файлов и &lt;code&gt;:Gdiff&lt;/code&gt; , чтобы открыть Git тремя способами слияния.</target>
        </trans-unit>
        <trans-unit id="297282c36d932ef18e4c066b3c37718ab7751ff6" translate="yes" xml:space="preserve">
          <source>Try Visual Studio Code for editing if you aren't already.
What it does is after you try merging(and land up in merge conflicts).VS code automatically detects the merge conflicts.</source>
          <target state="translated">Попробуйте Visual Studio Code для редактирования,если вы еще этого не сделали.Он делает это после того,как вы попробуете слияние (и попадёте в конфликты слияния).Код VS автоматически обнаруживает конфликты слияния.</target>
        </trans-unit>
        <trans-unit id="792091d7030cdecc4d447756a237c850f8471184" translate="yes" xml:space="preserve">
          <source>Try: &lt;code&gt;git mergetool&lt;/code&gt;</source>
          <target state="translated">Попробуйте: &lt;code&gt;git mergetool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2038bdec9210202d0d9d74839e3925ff0cd91ba1" translate="yes" xml:space="preserve">
          <source>Up</source>
          <target state="translated">Up</target>
        </trans-unit>
        <trans-unit id="d646749d4d83e809e6e32cea285d2b3353654aee" translate="yes" xml:space="preserve">
          <source>Use GUI to solve the conflicts: &lt;code&gt;git mergetool&lt;/code&gt; (the easiest way).</source>
          <target state="translated">Используйте GUI для разрешения конфликтов: &lt;code&gt;git mergetool&lt;/code&gt; (самый простой способ).</target>
        </trans-unit>
        <trans-unit id="cf410607b4d646fae6b37dffcb3f37fcc481f52b" translate="yes" xml:space="preserve">
          <source>Use a mergetool. &lt;code&gt;git mergetool&lt;/code&gt; to launch a graphical mergetool which will work you through the merge.</source>
          <target state="translated">Используйте mergetool. &lt;code&gt;git mergetool&lt;/code&gt; , чтобы запустить графический mergetool, который проведет вас через слияние.</target>
        </trans-unit>
        <trans-unit id="31701f35723c5222b63893f168de94cece275c49" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;patience&lt;/code&gt;</source>
          <target state="translated">Используя &lt;code&gt;patience&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="880da6b11bd5b493205b58216361da302d14dcfc" translate="yes" xml:space="preserve">
          <source>Usually, you only want to see the changes for a particular file:</source>
          <target state="translated">Обычно вы хотите видеть изменения только для конкретного файла:</target>
        </trans-unit>
        <trans-unit id="7c63bd7f640efb4658c5ef3f2317ffb187782ce9" translate="yes" xml:space="preserve">
          <source>Verify your changes with automated tools.</source>
          <target state="translated">Убедитесь в своих изменениях с помощью автоматических инструментов.</target>
        </trans-unit>
        <trans-unit id="f60a56ea3737fcb2ba54e60f89647a6f3fd091f4" translate="yes" xml:space="preserve">
          <source>What I do to work around this issue is open up two command lines and in one run</source>
          <target state="translated">Что я делаю,чтобы обойти эту проблему,так это открываю две командные строки и в одном запуске</target>
        </trans-unit>
        <trans-unit id="ca7621a606f4aed5c196696f398beac26081f137" translate="yes" xml:space="preserve">
          <source>When finished with all buffers type</source>
          <target state="translated">По окончании работы со всеми типами буферов</target>
        </trans-unit>
        <trans-unit id="b196d6892bc8c0cda1ad69fd5abf79daf53a8311" translate="yes" xml:space="preserve">
          <source>When finished: Press 'q'. Emacs asks you if you want to save this buffer: yes.
After finishing a buffer mark it as resolved by running from the teriminal:</source>
          <target state="translated">Когда закончишь:Нажмите 'q'.Emacs спросит,хотите ли вы сохранить этот буфер:да.После завершения буфера пометьте его как разрешенный,запустив из терминала:</target>
        </trans-unit>
        <trans-unit id="0079906e6ed4bd3200fdeda0e2f1d9bd10432c17" translate="yes" xml:space="preserve">
          <source>When running &quot;git fetch&quot; and then &quot;git merge&quot;</source>
          <target state="translated">При запуске &quot;git fetch&quot;,а затем &quot;git merge&quot;...</target>
        </trans-unit>
        <trans-unit id="ed97e73a69229caf78e776810b2baf62c68f0e1e" translate="yes" xml:space="preserve">
          <source>When running &quot;git fetch&quot; and then &quot;git rebase&quot;</source>
          <target state="translated">При запуске &quot;git fetch&quot;,а затем &quot;git rebase&quot;...</target>
        </trans-unit>
        <trans-unit id="d3e31411344bc765f68830306cd14dace0d3781b" translate="yes" xml:space="preserve">
          <source>When running &quot;git pull&quot; (which is actually equal to one of the above-mentioned conditions)</source>
          <target state="translated">При запуске &quot;git тяги&quot; (которая на самом деле равна одному из вышеупомянутых условий)</target>
        </trans-unit>
        <trans-unit id="df97565f7f4215529afa06a8719dc16c812bbb7c" translate="yes" xml:space="preserve">
          <source>When running &quot;git stash pop&quot;</source>
          <target state="translated">При запуске &quot;git stash pop&quot;</target>
        </trans-unit>
        <trans-unit id="b925d35f901c8e88e7050608cd7f82c6637d6e6a" translate="yes" xml:space="preserve">
          <source>When visiting a buffer requiring edits in Emacs, type</source>
          <target state="translated">При посещении буфера,требующего редактирования в Emacs,наберите</target>
        </trans-unit>
        <trans-unit id="a679f0f3e69fd30103ffcbe92197cb52f6926959" translate="yes" xml:space="preserve">
          <source>When you're applying git patches (commits that are exported to files to be transferred, for example, by email)</source>
          <target state="translated">Когда вы применяете git-пластыри (коммиты,которые экспортируются в файлы для передачи,например,по электронной почте).</target>
        </trans-unit>
        <trans-unit id="7dbf0b1ee668c5327c5601883ca0d2f8229365d5" translate="yes" xml:space="preserve">
          <source>Which has two drawbacks -</source>
          <target state="translated">Который имеет два недостатка -</target>
        </trans-unit>
        <trans-unit id="31bc2e26b996657f230dedf9a07bd32f1e303695" translate="yes" xml:space="preserve">
          <source>You can also install &lt;strong&gt;visual tool&lt;/strong&gt; for this, e.g. &lt;code&gt;meld&lt;/code&gt; and run</source>
          <target state="translated">Вы также можете установить &lt;strong&gt;визуальный инструмент&lt;/strong&gt; для этого, например, &lt;code&gt;meld&lt;/code&gt; и запустить</target>
        </trans-unit>
        <trans-unit id="790b31a63efa02e224509906d42d1e68c01a62b4" translate="yes" xml:space="preserve">
          <source>You can also read about merge conflict markers and how to resolve them in the &lt;a href=&quot;http://git-scm.com/book&quot;&gt;Pro Git&lt;/a&gt; book section &lt;a href=&quot;http://git-scm.com/book/ch3-2.html#Basic-Merge-Conflicts&quot;&gt;Basic Merge Conflicts&lt;/a&gt;.</source>
          <target state="translated">Вы также можете прочитать о маркерах конфликта слияния и о том, как их разрешить, в разделе книги &lt;a href=&quot;http://git-scm.com/book&quot;&gt;Pro Git&lt;/a&gt; &lt;a href=&quot;http://git-scm.com/book/ch3-2.html#Basic-Merge-Conflicts&quot;&gt;Основные конфликты слияния&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f31297c5e422ba4e0ac2754f95ec698d7a04e9c" translate="yes" xml:space="preserve">
          <source>You can follow this link to check ho to fix the conflict in the file</source>
          <target state="translated">Вы можете перейти по этой ссылке,чтобы проверить ho,чтобы исправить конфликт в файле.</target>
        </trans-unit>
        <trans-unit id="8b03c300fb2dfcf5e23681981aa19ff96cc9a605" translate="yes" xml:space="preserve">
          <source>You can navigate among these views using</source>
          <target state="translated">Вы можете перемещаться по этим видам,используя</target>
        </trans-unit>
        <trans-unit id="b523d391ec33d09697ad69e6d5a6118d93f4340e" translate="yes" xml:space="preserve">
          <source>You can try &lt;a href=&quot;https://github.com/eamodio/vscode-gitlens&quot;&gt;Gitlense&lt;/a&gt; for VS Code, They key features are:</source>
          <target state="translated">Вы можете попробовать &lt;a href=&quot;https://github.com/eamodio/vscode-gitlens&quot;&gt;Gitlense&lt;/a&gt; для VS Code, ключевые характеристики которого:</target>
        </trans-unit>
        <trans-unit id="77487b0c89edd8fd842e99d65a1b39d2c6b378f5" translate="yes" xml:space="preserve">
          <source>You can work through the conflict with a number of tools:</source>
          <target state="translated">Вы можете проработать конфликт с помощью ряда инструментов:</target>
        </trans-unit>
        <trans-unit id="b30d311ef730d06366142f68b918eb7de6eff6a8" translate="yes" xml:space="preserve">
          <source>You could fix merge conflicts in a number of ways as other have detailed.</source>
          <target state="translated">Вы можете исправить конфликты слияния несколькими способами,как это описано в других.</target>
        </trans-unit>
        <trans-unit id="9c2ffbd6fc110a458093bbd52a05163f36ae3277" translate="yes" xml:space="preserve">
          <source>You may also find this helpful:</source>
          <target state="translated">Вы также можете найти это полезным:</target>
        </trans-unit>
        <trans-unit id="286fb5e21b99f880f05109475c17463fa0b3267f" translate="yes" xml:space="preserve">
          <source>You need to install a merge tool which is compatible with Git to resolve the conflicts. I personally use KDiff3, and I've found it nice and handy. You can download its Windows version here:</source>
          <target state="translated">Для разрешения конфликтов необходимо установить инструмент слияния,совместимый с Git'ом.Лично я использую KDiff3,и нашел его красивым и удобным.Вы можете скачать его версию для Windows здесь:</target>
        </trans-unit>
        <trans-unit id="434d4f50f345ed0c2068ebd627e18730e17b1cea" translate="yes" xml:space="preserve">
          <source>You're going to pull some changes, but oops, you're not up to date:</source>
          <target state="translated">Ты собираешься внести некоторые изменения,но,ой,ты не в курсе дел:</target>
        </trans-unit>
        <trans-unit id="702de8ea769f6905593d16855500a2a2250467e0" translate="yes" xml:space="preserve">
          <source>[Update - as time has passed I've switched more to:</source>
          <target state="translated">[Обновление-с течением времени я переключился на большее.]</target>
        </trans-unit>
        <trans-unit id="f262650e9e1db8dba57ae4f90e12681210514be8" translate="yes" xml:space="preserve">
          <source>a) All new/changed files get added and that might include some unwanted changes.</source>
          <target state="translated">a)Добавляются все измененные файлы,которые могут включать некоторые нежелательные изменения.</target>
        </trans-unit>
        <trans-unit id="d8f51ea63fa8dabc79021e3ac41153644af4867d" translate="yes" xml:space="preserve">
          <source>and after finishing a file, you will have to save and close, so the next one will open.</source>
          <target state="translated">и после окончания файла вам придется сохранить и закрыть,так что следующий откроется.</target>
        </trans-unit>
        <trans-unit id="d11a6901ad3dd341ac6dec5ff43994226ec32610" translate="yes" xml:space="preserve">
          <source>and in the other</source>
          <target state="translated">а с другой стороны</target>
        </trans-unit>
        <trans-unit id="8af7458f49d10ad26c59eed720fbe89d311a8e8a" translate="yes" xml:space="preserve">
          <source>b) You don't get to review the file list first.</source>
          <target state="translated">б)Сначала вы не сможете просмотреть список файлов.</target>
        </trans-unit>
        <trans-unit id="761e2de83a662b85af44b187e5329eda0d6cc296" translate="yes" xml:space="preserve">
          <source>because pull implies a merge and if you have changes locally that you didn't want merged you can easily end up with merged code and/or merge conflicts for code that shouldn't have been merged.</source>
          <target state="translated">потому что pull подразумевает слияние,и если у вас есть локальные изменения,которые вы не хотели сливать,вы можете легко получить конфликты слитого кода andor merge для кода,который не должен был сливаться.</target>
        </trans-unit>
        <trans-unit id="1d9e48cd581ca4bff14e812e60b255593b08a1f2" translate="yes" xml:space="preserve">
          <source>ctrl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951f120ff31d9ffa4990456740576c71f454fd6f" translate="yes" xml:space="preserve">
          <source>followed by</source>
          <target state="translated">в сопровождении</target>
        </trans-unit>
        <trans-unit id="84d20a21b4d0ddce218ad7c73b3cd55f875524fe" translate="yes" xml:space="preserve">
          <source>git add</source>
          <target state="translated">сложение</target>
        </trans-unit>
        <trans-unit id="10103c8447d37408c54fd2f05b61beb2106dbe2c" translate="yes" xml:space="preserve">
          <source>git add . AND git commit AND git push (on your local branch after your changes)</source>
          <target state="translated">git-добавление.И git-коммит И git-движение (на вашей локальной ветке после ваших изменений)</target>
        </trans-unit>
        <trans-unit id="97a35b07063385f6e4f744ee2072932e6c998999" translate="yes" xml:space="preserve">
          <source>git branch, fork, fetch, merge, rebase and clone, what are the differences?</source>
          <target state="translated">ветка гита,вилка,принеси,слияние,фальцовка и клон,в чем разница?</target>
        </trans-unit>
        <trans-unit id="acdbee7f26e843e5752461c1e69b28c077726557" translate="yes" xml:space="preserve">
          <source>git checkout -b mybranch (Checkout a new a branch and start working on that branch so that your master always remains top of trunk.)</source>
          <target state="translated">git checkout -b mybranch (Загляните в новое ответвление и начните работать в этом ответвлении,чтобы ваш хозяин всегда оставался наверху ствола).</target>
        </trans-unit>
        <trans-unit id="8dacaca6254212f6c1b95c243fac496f957d68fd" translate="yes" xml:space="preserve">
          <source>git checkout &lt;strong&gt;your branch&lt;/strong&gt;</source>
          <target state="translated">git оформить заказ</target>
        </trans-unit>
        <trans-unit id="2664b948d9b5e7add8ed204bae0397137605164e" translate="yes" xml:space="preserve">
          <source>git checkout master (Come back to your master.)</source>
          <target state="translated">хозяин кассы (Возвращайся к хозяину.)</target>
        </trans-unit>
        <trans-unit id="389878c8eec9e6eeeaf853870f869d492ebf1da1" translate="yes" xml:space="preserve">
          <source>git checkout master (Come to the master branch)</source>
          <target state="translated">мастер кассы git (Приходите в мастер-ветку)</target>
        </trans-unit>
        <trans-unit id="c1431e6a9b5c4d41e1866a32209e9ec5716cab6c" translate="yes" xml:space="preserve">
          <source>git checkout target_branch</source>
          <target state="translated">git-кассета target_branch</target>
        </trans-unit>
        <trans-unit id="811a2036a9fa0acad088e97ae90bc7238103c1c2" translate="yes" xml:space="preserve">
          <source>git commit --amend</source>
          <target state="translated">git commit --amend</target>
        </trans-unit>
        <trans-unit id="7652ed4e9782162856d4648e8895b3387d9f68e6" translate="yes" xml:space="preserve">
          <source>git fetch</source>
          <target state="translated">извлечение гитары</target>
        </trans-unit>
        <trans-unit id="18213e1f2a603f93f7ce5af7c44200e84b562957" translate="yes" xml:space="preserve">
          <source>git merge source_branch</source>
          <target state="translated">git-слияние source_branch</target>
        </trans-unit>
        <trans-unit id="503fbe5dbd88ba93126e84d902ed6c73cb283de3" translate="yes" xml:space="preserve">
          <source>git pull (Update your master to get the latest code)</source>
          <target state="translated">git тяга (Обновите ваш мастер,чтобы получить последний код)</target>
        </trans-unit>
        <trans-unit id="6c664ccf46e6763b8b96abeb86d1c050dc32ed1b" translate="yes" xml:space="preserve">
          <source>git push origin HEAD:refs/drafts/master  (push like a drafts)</source>
          <target state="translated">git push origin HEAD:refsdraftsmaster (push like a drafts)</target>
        </trans-unit>
        <trans-unit id="b5ac89e12759c8756542b31c467362aa3d963acf" translate="yes" xml:space="preserve">
          <source>git rebase --continue</source>
          <target state="translated">git-ребейз-продолжение</target>
        </trans-unit>
        <trans-unit id="094cbd5065890d847d3c0dc1805f140ff1396ad9" translate="yes" xml:space="preserve">
          <source>git rebase master</source>
          <target state="translated">мастер настройки git-ребейза</target>
        </trans-unit>
        <trans-unit id="5c2dd944dde9e08881bef0894fe7b22a5c9c4b06" translate="yes" xml:space="preserve">
          <source>j</source>
          <target state="translated">j</target>
        </trans-unit>
        <trans-unit id="cd6fdcbf5a860d174ac10af745972501941dc684" translate="yes" xml:space="preserve">
          <source>macOS</source>
          <target state="translated">macOS</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="431e26c1c98728d02fcb3684df3869849e02bd8a" translate="yes" xml:space="preserve">
          <source>shows all files which require conflict resolution.</source>
          <target state="translated">показывает все файлы,требующие разрешения конфликтов.</target>
        </trans-unit>
        <trans-unit id="d365548fc7381a5f7a04540a4a2854c3130d9c18" translate="yes" xml:space="preserve">
          <source>to accept change from left or right</source>
          <target state="translated">принимать изменения слева или справа</target>
        </trans-unit>
        <trans-unit id="834cd3a249a98dcc416499afdc5d38f6bee07ab1" translate="yes" xml:space="preserve">
          <source>to finish the merge.</source>
          <target state="translated">чтобы закончить слияние.</target>
        </trans-unit>
        <trans-unit id="c3b50f2456638fa4af5346e46e1aa31547e3b122" translate="yes" xml:space="preserve">
          <source>to jump to previous/next changes.</source>
          <target state="translated">чтобы перейти к предыдущим изменениям.</target>
        </trans-unit>
        <trans-unit id="9fdbaee88f3bdf6029a899cfe02d702e1ba2d855" translate="yes" xml:space="preserve">
          <source>to resolve changes in favor of the &lt;strong&gt;other or the main repository&lt;/strong&gt;.</source>
          <target state="translated">разрешить изменения в пользу &lt;strong&gt;другого или основного хранилища&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="744a6e5be1804b7157ee48c402c528b472bce458" translate="yes" xml:space="preserve">
          <source>to resolve changes in the favor of &lt;strong&gt;your repository&lt;/strong&gt;, or</source>
          <target state="translated">разрешить изменения в пользу &lt;strong&gt;вашего хранилища&lt;/strong&gt; , или</target>
        </trans-unit>
        <trans-unit id="aff024fe4ab0fece4091de044c58c9ae4233383a" translate="yes" xml:space="preserve">
          <source>w</source>
          <target state="translated">w</target>
        </trans-unit>
        <trans-unit id="aa4da17c46bbc043e6803b9d9522d18404b1395f" translate="yes" xml:space="preserve">
          <source>where HEAD is changes on your local branch and origin/ is changes from the remote branch. Here keep the stuff that you need and remove the stuff you don't need.After that the normal steps should do. That is</source>
          <target state="translated">где HEAD-изменения в вашем местном филиале,а происхождение-изменения в удаленном филиале.Здесь вы можете оставить все,что вам нужно,и удалить ненужные вещи,после чего должны быть сделаны обычные шаги.То есть</target>
        </trans-unit>
        <trans-unit id="bdc9da0d0104e6a64e5550c899831ed0af155617" translate="yes" xml:space="preserve">
          <source>⌘</source>
          <target state="translated">⌘</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
