<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/164194">
    <body>
      <group id="164194">
        <trans-unit id="7369f1dbbb13c0f5b1914ae576611fabf3d5a20a" translate="yes" xml:space="preserve">
          <source>&quot;str&quot; is an array allocated on the stack and can be modified freely.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;str&quot;은 스택에 할당 된 배열이며 자유롭게 수정할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f4f9823718a35a3ce0df5bf6d6359ac144110be" translate="yes" xml:space="preserve">
          <source>5 In translation phase 7, a byte or code of value zero is appended to each multibyte
  character sequence that results from a string literal or literals. The multibyte character
  sequence is then used to initialize an array of static storage duration and length just
  sufficient to contain the sequence. For character string literals, the array elements have
  type char, and are initialized with the individual bytes of the multibyte character
  sequence [...]</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;5 변환 단계 7에서는 문자열 리터럴 또는 리터럴에서 생성 된 값이 0 인 바이트 또는 코드가 각 멀티 바이트 문자 시퀀스에 추가됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 멀티 바이트 문자 시퀀스는 시퀀스를 포함하기에 충분한 정적 저장 기간 및 길이의 배열을 초기화하는 데 사용됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자열 리터럴의 경우 배열 요소에는 char 유형이 있으며 멀티 바이트 문자 시퀀스의 개별 바이트로 초기화됩니다 [...]&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd7322bb185146ef549f5a00c1243d9e4faecc12" translate="yes" xml:space="preserve">
          <source>6 It is unspecified whether these arrays are distinct provided their elements have the
  appropriate values. If the program attempts to modify such an array, the behavior is
  undefined.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;6 해당 배열에 적절한 값이있는 경우 이러한 배열이 고유한지 여부는 지정되지 않았습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로그램이 이러한 배열을 수정하려고하면 동작이 정의되지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fac3ed3a23c3121f9d9408f6549bff597dc35ee0" translate="yes" xml:space="preserve">
          <source>6.7.8/32 &quot;Initialization&quot; gives a direct example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;6.7.8 / 32 &quot;초기화&quot;는 직접적인 예를 제공합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8b695488b8249b4a46f3f5b555499d55486b4d72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char *str&lt;/code&gt; is a pointer to a string which is non modifiable(the reason for getting seg fault)..</source>
          <target state="translated">&lt;code&gt;char *str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 수정할 수없는 문자열에 대한 포인터입니다 (세그 결함이 발생한 이유).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e645b13168dcb6a2c365f5127c101d353a93e2aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A&lt;/strong&gt;: A string literal (the formal term
  for a double-quoted string in C
  source) can be used in two slightly
  different ways:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : 문자열 리터럴 (C 소스에서 큰 따옴표로 묶인 문자열의 공식 용어)은 두 가지 방식으로 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="989caef3a70ec06f60e066ab0e2e395d4de66975" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C99 N1256 draft&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C99 N1256 초안&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b7c1aaf324c090633cc6b151399499e5ec81a78b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GCC 4.8 x86-64 ELF implementation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;GCC 4.8 x86-64 ELF 구현&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49f8d9a28773b6bc3930685952238d28afd5aee5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q&lt;/strong&gt;: What is the difference between these initializations?</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Q&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : 이러한 초기화의 차이점은 무엇입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d3c7f722e91108fa4fcb25941a0310cb3b603976" translate="yes" xml:space="preserve">
          <source>Also, printing the size of &lt;code&gt;str&lt;/code&gt; in the second example will show you that the compiler has allocated 7 bytes for it:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 예제에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 크기를 인쇄하면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컴파일러가 7 바이트를 할당했음을 알 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cbd97cb6ba42b992540a09774cb2c6478490196a" translate="yes" xml:space="preserve">
          <source>An array of character type may be initialized by a character string literal, optionally
  enclosed in braces. Successive characters of the character string literal (including the
  terminating null character if there is room or if the array is of unknown size) initialize the
  elements of the array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자 유형의 배열은 선택적으로 중괄호로 묶인 문자열 리터럴로 초기화 될 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자열 리터럴의 연속 문자 (공간이 있거나 배열의 크기를 알 수없는 경우 종료 널 문자 포함)는 배열의 요소를 초기화합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24944353ecb56980e9abe0eb848367d1bbe16eec" translate="yes" xml:space="preserve">
          <source>Anywhere else, it turns into an unnamed, static array of characters,
  and this unnamed array may be stored
  in read-only memory, and which
  therefore cannot necessarily be
  modified. In an expression context,
  the array is converted at once to a
  pointer, as usual (see section 6), so
  the second declaration initializes p
  to point to the unnamed array's first
  element.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 곳에서는 명명되지 않은 정적 문자 배열로 바뀌며이 명명되지 않은 배열은 읽기 전용 메모리에 저장 될 수 있으므로 반드시 수정할 수는 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;표현식 컨텍스트에서, 배열은 평소와 같이 한 번에 포인터로 변환되므로 (섹션 6 참조) 두 번째 선언은 p를 초기화하여 명명되지 않은 배열의 첫 번째 요소를 가리 키도록합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="08626871d2cc92f267c8fd80fc601794cef57016" translate="yes" xml:space="preserve">
          <source>As the initializer for an array of char, as in the declaration of &lt;code&gt;char a[]&lt;/code&gt; , it specifies the initial values
  of the characters in that array (and,
  if necessary, its size).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;char a[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 선언에서와 같이 char 배열의 초기화 프로그램으로, 해당 배열에있는 문자 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 초기 값 (필요한 경우 크기)을 지정합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f2ac90e5ac860abf9685d09d6b4fbd7022d39d8" translate="yes" xml:space="preserve">
          <source>As we all know  pointer points to memory location in memory ,
uninitialized pointer points to random memory location so and after initialization points to particular memory location</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리 모두가 포인터가 메모리의 메모리 위치를 가리키는 것을 알고 있으므로 초기화되지 않은 포인터는 임의의 메모리 위치를 가리키며 초기화 후에 특정 메모리 위치를 가리 킵니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="53f7bb1d4edd3ccbef6d448faa7bc39cbca32ee8" translate="yes" xml:space="preserve">
          <source>Assume the strings are,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자열이&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a9b511b34e15ea2b692a64eadb322d81b287abf" translate="yes" xml:space="preserve">
          <source>Because the type of &lt;code&gt;&quot;whatever&quot;&lt;/code&gt; in the context of the 1st example is &lt;code&gt;const char *&lt;/code&gt; (even if you assign it to a non-const char*), which means you shouldn't try and write to it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 예제의 컨텍스트에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;whatever&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유형 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;const char *&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (비 const char *에 할당 한 경우에도)이기 때문에 시도하지 않아야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="25b5fe8d44d915ccc40ac69a9cf6c6ac4e5b0299" translate="yes" xml:space="preserve">
          <source>But ptr can be initialised to other string value directly since it is just pointer so it can be point to any memory address of variable of its data type</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 ptr은 포인터 일 뿐이므로 다른 문자열 값으로 직접 초기화 할 수 있으므로 데이터 유형의 변수의 모든 메모리 주소를 가리킬 수 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8646ef6ae439093b3a509c848a73e94716034cd4" translate="yes" xml:space="preserve">
          <source>Compile and decompile:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컴파일 및 디 컴파일 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="88ec39701a0c4df5266196b2dee36c3fa2c11fef" translate="yes" xml:space="preserve">
          <source>Conclusion: GCC stores &lt;code&gt;char*&lt;/code&gt; it in &lt;code&gt;.rodata&lt;/code&gt; section, not in &lt;code&gt;.text&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결론 : GCC는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;char*&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; it &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 &lt;/font&gt; &lt;code&gt;.text&lt;/code&gt; 가&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 아닌 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.rodata&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 섹션 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;저장 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64ca5ab0ff194c61c227c75f16866d610381468c" translate="yes" xml:space="preserve">
          <source>EXAMPLE 8: The declaration</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예 8 : 선언&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b35a62bda88de385c42aaf857d1210eaf12a76e" translate="yes" xml:space="preserve">
          <source>Everywhere else: it generates an:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 곳에서는 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="46e39defeb634a812d739b9ddcfc21883259a655" translate="yes" xml:space="preserve">
          <source>First is one constant string which can't be modified. Second is an array with initialized value, so it can be modified.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째는 수정할 수없는 상수 문자열입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째는 초기화 된 값을 가진 배열이므로 수정할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fcf9bd7f6f632d83d63a2a6cecbb14e0e50ea42e" translate="yes" xml:space="preserve">
          <source>If we do the same for &lt;code&gt;char[]&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;char[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대해 똑같이하면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f59390f0a45c1b4712554097c095cc344081aa9e" translate="yes" xml:space="preserve">
          <source>In memory array is stored in continuous memory cells, stored as &lt;code&gt;[h][e][l][l][o][\0] =&amp;gt;[]&lt;/code&gt; is 1 char byte size memory cell ,and this continuous memory cells can be access by name named strarray here.so here string array &lt;code&gt;strarray&lt;/code&gt; itself containing all characters of string initialized to it.in this case here &lt;code&gt;&quot;hello&quot;&lt;/code&gt;
so we can easily change its memory content by accessing each character by its index value</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메모리 배열에서 연속 메모리 셀에 저장되고, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[h][e][l][l][o][\0] =&amp;gt;[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 1 문자 바이트 크기 메모리 셀로 저장되며,이 연속 메모리 셀은 strarray라는 이름으로 액세스하십시오. 여기서 문자열 배열 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;strarray&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 자체는 초기화 된 문자열의 모든 문자를 포함합니다.이 경우 여기 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;hello&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이므로 색인 값으로 각 문자에 액세스하여 메모리 내용을 쉽게 변경할 수 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4337c1da9ceb238dfadf01362b0e7aaea46cc2b6" translate="yes" xml:space="preserve">
          <source>In the first case, the literal is to be copied when 'a' comes into scope. Here 'a' is an array defined on stack. It means the string will be created on the stack and its data is copied from code (text) memory, which is typically read-only (this is implementation specific, a compiler can place this read-only program data in read-writable memory also).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 경우, 리터럴은 'a'가 범위에 들어 오면 복사됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 'a'는 스택에 정의 된 배열입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이는 문자열이 스택에 생성되고 해당 데이터가 일반적으로 읽기 전용 인 코드 (텍스트) 메모리에서 복사됨을 의미합니다 (구현에 따라 다릅니다. 컴파일러는이 읽기 전용 프로그램 데이터를 읽기 / 쓰기 가능 메모리에도 배치 할 수 있음) ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c000469e8149dce9f4db193ab1d1c419c544bc92" translate="yes" xml:space="preserve">
          <source>In the first code, &quot;string&quot; is a string constant, and string constants should never be modified because they are often placed into read only memory.  &quot;str&quot; is a pointer being used to modify the constant.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 코드에서 &quot;string&quot;은 문자열 상수이며 문자열 상수는 종종 읽기 전용 메모리에 배치되므로 수정해서는 안됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;str&quot;은 상수를 수정하는 데 사용되는 포인터입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="97ea0635da2a3e86ec6d0d79f1cfbaee517b1039" translate="yes" xml:space="preserve">
          <source>In the first place, &lt;code&gt;str&lt;/code&gt; is a pointer that points at &lt;code&gt;&quot;string&quot;&lt;/code&gt;.  The compiler is allowed to put string literals in places in memory that you cannot write to, but can only read.  (This really should have triggered a warning, since you're assigning a &lt;code&gt;const char *&lt;/code&gt; to a &lt;code&gt;char *&lt;/code&gt;.  Did you have warnings disabled, or did you just ignore them?)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우선 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;string&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 가리키는 포인터입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컴파일러는 쓸 수는 없지만 읽을 수있는 메모리의 위치에 문자열 리터럴을 넣을 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(이건 정말 당신이 할당하고 있기 때문에, 경고를 트리거해야 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;const char *&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; A와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;char *&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . 당신이 경고가 비활성화습니까, 아니면 그냥 무시 했습니까?)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff20b6a5219ae768033783979a87d2390005f2e7" translate="yes" xml:space="preserve">
          <source>In the second case, p is a pointer defined on stack (local scope) and referring a string literal (program data or text) stored else where. Usually modifying such memory is not good practice nor encouraged.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 경우, p는 스택 (로컬 범위)에 정의되고 다른 곳에 저장된 문자열 리터럴 (프로그램 데이터 또는 텍스트)을 참조하는 포인터입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적으로 그러한 메모리를 수정하는 것은 좋은 습관이 아니며 권장되지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1838ffd28fb512b277c85a385ef6b7802941bd8e" translate="yes" xml:space="preserve">
          <source>In the second code, &quot;string&quot; is an array initializer, sort of short hand for</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 코드에서 &quot;string&quot;은 배열 이니셜 라이저입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c5aa22fba1b64b02c810315d7188a316eef98093" translate="yes" xml:space="preserve">
          <source>In the second example, the string &lt;code&gt;&quot;string&quot;&lt;/code&gt; is &lt;em&gt;copied&lt;/em&gt; by the compiler from its read-only home to the &lt;code&gt;str[]&lt;/code&gt; array. Then changing the first character is permitted. You can check this by printing the address of each:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 예에서 문자열 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;string&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컴파일러에서 읽기 전용 홈에서 &lt;/font&gt; &lt;code&gt;str[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 배열 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;복사&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 첫 번째 문자를 변경할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;각 주소를 인쇄하여이를 확인할 수 있습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea00e14bcd6a402dfaf6f0f35e2ce17d7c1d0e5a" translate="yes" xml:space="preserve">
          <source>In the second place, you're creating an array, which is memory that you've got full access to, and initializing it with &lt;code&gt;&quot;string&quot;&lt;/code&gt;.  You're creating a &lt;code&gt;char[7]&lt;/code&gt; (six for the letters, one for the terminating '\0'), and you do whatever you like with it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째로, 전체 액세스 권한이있는 메모리 인 배열을 만들고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;string&quot;&lt;/code&gt; 으로&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 초기화합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 만드는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;char[7]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (문자 여섯, 종료 '\ 0'의 하나), 당신은 그것과 같은 당신이 무엇을.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bff6151bb1c52734e7b864d94be02cc2901c7e76" translate="yes" xml:space="preserve">
          <source>In your first example, you're getting a pointer to that const data.  In your second example, you're initializing an array of 7 characters with a copy of the const data.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 예에서는 해당 const 데이터에 대한 포인터를 얻습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 예에서는 const 데이터의 복사본으로 7 자 배열을 초기화합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10fd75efad3719fe3bb4eb8209929e181c321d6b" translate="yes" xml:space="preserve">
          <source>Initialize &lt;code&gt;char[]&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;char[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 초기화 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71621f4c0ca35b4b447632316c08b9f646620f62" translate="yes" xml:space="preserve">
          <source>Like any other regular array, &lt;code&gt;c&lt;/code&gt; can be modified.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 일반 배열과 마찬가지로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 수정할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0cb45122635efbac7d2998e31e4b524f1c810c9" translate="yes" xml:space="preserve">
          <source>Most of these answers are correct, but just to add a little more clarity...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 답변의 대부분은 정확하지만 조금 더 명확하게 추가하십시오 ...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ab87e7164433d13846cff22c0a5731378c323d7e" translate="yes" xml:space="preserve">
          <source>My program crashes if I try to assign a new value to &lt;code&gt;p[i]&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;p[i]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 새 값을 할당하려고하면 프로그램이 충돌합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e46d81bdcd2425d26c847ea2d5d64bbe3b1cb583" translate="yes" xml:space="preserve">
          <source>Normally, string literals are stored in read-only memory when the program is run. This is to prevent you from accidentally changing a string constant. In your first example, &lt;code&gt;&quot;string&quot;&lt;/code&gt; is stored in read-only memory and &lt;code&gt;*str&lt;/code&gt; points to the first character. The segfault happens when you try to change the first character to &lt;code&gt;'z'&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적으로 문자열 리터럴은 프로그램이 실행될 때 읽기 전용 메모리에 저장됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 실수로 문자열 상수를 변경하지 못하게하기위한 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 예에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;string&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 읽기 전용 메모리에 저장되며 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;*str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 첫 번째 문자를 가리 킵니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;segfault는 첫 번째 문자를 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;'z'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 변경하려고 할 때 발생합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7ac69938cb0651b2d6b8ce2d43bf3af47cb99539" translate="yes" xml:space="preserve">
          <source>Note however that the default linker script puts &lt;code&gt;.rodata&lt;/code&gt; and &lt;code&gt;.text&lt;/code&gt; in the same segment, which has execute but no write permission. This can be observed with:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 기본 링커 스크립트는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.rodata&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.text&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 동일한 세그먼트 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;넣지&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 만 실행 권한은 있지만 쓰기 권한은 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 다음과 같이 볼 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f4e329055872d3c12f2cc484b260a44f643d9971" translate="yes" xml:space="preserve">
          <source>Note the implicit cast from &lt;code&gt;char[]&lt;/code&gt; to &lt;code&gt;char *&lt;/code&gt;, which is always legal.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;char[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;char *&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;암시 적 캐스트에주의하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 이것은 항상 합법적입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="86546a25fe2d8c85ef2156d6bfee43929dbe1777" translate="yes" xml:space="preserve">
          <source>Output contains:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;출력 내용 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bc5de071a8adc9ea913c6f9e5f0005a2d40cc14d" translate="yes" xml:space="preserve">
          <source>Pointer</source>
          <target state="translated">Pointer</target>
        </trans-unit>
        <trans-unit id="79e5360bcf55c6212f0b1414e9099c15ef47ee22" translate="yes" xml:space="preserve">
          <source>Program:</source>
          <target state="translated">Program:</target>
        </trans-unit>
        <trans-unit id="26bd51102e586ff70bb0587551dbc67bec7fc0ad" translate="yes" xml:space="preserve">
          <source>See the C FAQ, &lt;a href=&quot;http://c-faq.com/decl/strlitinit.html&quot;&gt;Question 1.32&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C FAQ, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://c-faq.com/decl/strlitinit.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;질문 1.32 참조&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b9a3011e9aa306b196ebd07257ac293bbdbd232" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;str[0]=&lt;/code&gt; is attempting to write to the read-only code of the application.  I would guess this is probably compiler dependent though.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;str[0]=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 응용 프로그램의 읽기 전용 코드에 쓰려고합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 이것이 아마도 컴파일러 의존적이라고 생각할 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1332c2aeb09d0c1817fe85b41907f9631446a288" translate="yes" xml:space="preserve">
          <source>So this is just a shortcut for:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 이것은 바로 가기입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b5698d0895816d08e306d72f3fb561310cfca67f" translate="yes" xml:space="preserve">
          <source>So when you write:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래서 당신이 쓸 때 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4f5fa445d8872f4d54fec5b7f0c287426411c5a" translate="yes" xml:space="preserve">
          <source>Some compilers have a switch
  controlling whether string literals
  are writable or not (for compiling old
  code), and some may have options to
  cause string literals to be formally
  treated as arrays of const char (for
  better error catching).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부 컴파일러에는 문자열 리터럴을 쓸 수 있는지 여부를 제어하는 ​​스위치가 있으며 (오래된 코드를 컴파일하기 위해) 문자열 리터럴을 형식적으로 const char 배열로 처리하도록하는 옵션이있을 수 있습니다 (더 나은 오류 포착).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bcfac5632b1f0c9485944d083e902221ab174657" translate="yes" xml:space="preserve">
          <source>String literals like &quot;string&quot; are probably allocated in your executable's address space as read-only data (give or take your compiler).  When you go to touch it, it freaks out that you're in its bathing suit area and lets you know with a seg fault.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;string&quot;과 같은 문자열 리터럴은 아마도 실행 파일의 주소 공간에 읽기 전용 데이터로 할당 될 것입니다 (컴파일러를 주거나 가져옵니다). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이 그것을 만질 때, 그것은 당신이 수영복 지역에 있다는 것을 놀라게하고 세그 결함으로 알려줍니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65ee6b0cdf5b4fc22f771b21a56a4d300a3a3bfe" translate="yes" xml:space="preserve">
          <source>Tested with MSVC and GCC.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MSVC 및 GCC로 테스트되었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="7f018e4fa7f9467f75ae0f3445107e843a7ea140" translate="yes" xml:space="preserve">
          <source>The &quot;read only memory&quot; that people are referring to is the text segment in ASM terms. It's the same place in memory where the instructions are loaded. This is read-only for obvious reasons like security. When you create a char* initialized to a string, the string data is compiled into the text segment and the program initializes the pointer to point into the text segment. So if you try to change it, kaboom. Segfault.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사람들이 말하는 &quot;읽기 전용 메모리&quot;는 ASM 용어의 텍스트 세그먼트입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;명령어가로드되는 메모리의 동일한 위치입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보안과 같은 명백한 이유로 읽기 전용입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자열로 초기화 된 char *를 만들면 문자열 데이터가 텍스트 세그먼트로 컴파일되고 프로그램이 포인터를 초기화하여 텍스트 세그먼트를 가리 킵니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 변경하려고하면 kaboom. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Segfault.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db2526ed7b3f0955d3ba159e7158dc450975f890" translate="yes" xml:space="preserve">
          <source>The C FAQ that @matli linked to mentions it, but no one else here has yet, so for clarification: if a string literal (double-quoted string in your source) is used anywhere &lt;em&gt;other than&lt;/em&gt; to initialize a character array (ie: @Mark's second example, which works correctly), that string is stored by the compiler in a special &lt;em&gt;static string table&lt;/em&gt;, which is akin to creating a global static variable (read-only, of course) that is essentially anonymous (has no variable &quot;name&quot;). The &lt;em&gt;read-only&lt;/em&gt; part is the important part, and is why the @Mark's first code example segfaults.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@matli가 링크 한 C FAQ는 아직 언급하지 않았으므로 명확하게 설명합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자 배열을 초기화하는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것 이외의 다른&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 곳에서 문자열 리터럴 (소스에서 큰 따옴표로 묶인 문자열)을 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 경우 (예 : @ Mark의 두 번째 예 (정확하게 작동)는이 문자열이 컴파일러에 의해 특수 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 문자열 테이블&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 저장되는데 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, 이는 기본적으로 익명 인 (전혀 읽기 전용 인) 전역 정적 변수를 만드는 것과 유사합니다. &quot;). &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;읽기 전용&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 부분은 중요한 부분이며, 왜 @ 마크의 첫 번째 코드 예제 세그먼테이션 폴트 (segfault)이다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="153d6e82c56945ee94a9b46f97146ff737c5a61d" translate="yes" xml:space="preserve">
          <source>The above sets &lt;code&gt;str&lt;/code&gt; to point to the literal value &lt;code&gt;&quot;string&quot;&lt;/code&gt; which is hard-coded in the program's binary image, which is probably flagged as read-only in memory.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 프로그램의 이진 이미지에 하드 코딩 된 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;리터럴 값 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;string&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 가리 키도록 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;str&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;설정 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하며 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, 이는 메모리에서 읽기 전용으로 플래그가 지정됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b40d2b2f20d0458f25ede06c4f5dd644c7b2ba9f" translate="yes" xml:space="preserve">
          <source>The compiler has enforced this by putting the string in a read-only part of memory, hence writing to it generates a segfault.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컴파일러는 문자열을 메모리의 읽기 전용 부분에 배치하여이를 시행하므로 쓰기는 segfault를 생성합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="af5b4181887adb17c079d2ba90c26ce6b8194e5b" translate="yes" xml:space="preserve">
          <source>The contents of the arrays are modifiable. On the other hand, the declaration</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열의 내용을 수정할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한편, 선언&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7eabf5eb08cf7d0aa68f14acaece18add4ee544d" translate="yes" xml:space="preserve">
          <source>The following code receives seg fault on line 2:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 코드는 2 행에서 세그먼트 오류를 ​​수신합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="38b874fa8a4a12a55bfe752327cc1339971672a4" translate="yes" xml:space="preserve">
          <source>The line:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;라인 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="51a8d743261763d0c5ba6a3d8400bee365d6b7e1" translate="yes" xml:space="preserve">
          <source>Then if you modify &lt;code&gt;c[0]&lt;/code&gt;, you also modify &lt;code&gt;__unnamed&lt;/code&gt;, which is UB.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 수정하면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;UB 인 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__unnamed&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 도 수정 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="04c2442ba0cb356bca376365107aaf0cde3ee082" translate="yes" xml:space="preserve">
          <source>There are two different uses of character string literals:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자열 리터럴에는 두 가지 용도가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e34f037d3b8729159339c78ec31107ef278d97a" translate="yes" xml:space="preserve">
          <source>This declaration is identical to</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 선언은&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f06c9be022ff454489265524b61c1f9972fefa06" translate="yes" xml:space="preserve">
          <source>This is &quot;more magic&quot;, and described at 6.7.8/14 &quot;Initialization&quot;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 &quot;더 많은 마술&quot;이며 6.7.8 / 14 &quot;초기화&quot;에 설명되어 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33114f84c8b259a7d360bf056480d7a655a4fe82" translate="yes" xml:space="preserve">
          <source>This is documented at 6.4.5 &quot;String literals&quot;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 6.4.5 &quot;문자열 리터럴&quot;에 문서화되어 있습니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="21b0b9815b988cab4a0b05332115eaf25e71b859" translate="yes" xml:space="preserve">
          <source>This is similar to:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 다음과 유사합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fee34be18f8766afae1debba6298fcb27f068cec" translate="yes" xml:space="preserve">
          <source>To understand this error or problem you should first know difference b/w the pointer and array
  so here firstly i have explain you differences b/w them</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 오류 또는 문제를 이해하려면 먼저 포인터와 배열의 차이점을 알아야하므로 여기에서 먼저 차이점을 설명합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a478f8da6e515e2fe6dd6cf28c5c4f51c92040d9" translate="yes" xml:space="preserve">
          <source>When written as an array, the compiler places the initialized string data in the data segment instead, which is the same place that your global variables and such live. This memory is mutable, since there are no instructions in the data segment. This time when the compiler initializes the character array (which is still just a char*) it's pointing into the data segment rather than the text segment, which you can safely alter at run-time.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열로 쓰여질 때 컴파일러는 초기화 된 문자열 데이터를 데이터 세그먼트에 대신 배치합니다. 이는 전역 변수와 같은 곳에 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;데이터 세그먼트에 명령어가 없기 때문에이 메모리는 변경 가능합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이번에는 컴파일러가 문자 배열을 초기화 할 때 (여전히 char * 임) 런타임에 안전하게 변경할 수있는 텍스트 세그먼트가 아닌 데이터 세그먼트를 가리 킵니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43057d0685a9d16e1cc0b2587f6e1f0f9008dd5b" translate="yes" xml:space="preserve">
          <source>While this works perfectly well:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 완벽하게 작동하는 동안 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ba0bb95ffdcd69d1d7712168e6a876a3d9f0af4" translate="yes" xml:space="preserve">
          <source>Why do I get a segmentation fault when writing to a string initialized with “char *s” but not “char s[]”</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;char * s&quot;로 초기화되었지만 &quot;char s []&quot;가 아닌 문자열에 쓸 때 세그먼테이션 오류가 발생하는 이유는 무엇입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="97dfcf15090fe7931b0df660cee46dcc110c2899" translate="yes" xml:space="preserve">
          <source>Why do I get a segmentation fault when writing to a string?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자열에 쓸 때 왜 세그먼테이션 오류가 발생합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="84a6f36914b097f4069d48b0b519d0c189fa5de1" translate="yes" xml:space="preserve">
          <source>allocates a pointer to a string literal, which the compiler is putting in a non-modifiable part of your executable;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컴파일러가 실행 파일의 수정 불가능한 부분에 넣는 문자열 리터럴에 대한 포인터를 할당합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4eb2c39a057f022d979f91705d518db79edb0bf8" translate="yes" xml:space="preserve">
          <source>allocates an array of characters and &lt;strong&gt;copies&lt;/strong&gt; the literal string into that array, which is fully writable, so the subsequent update is no problem.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자 배열을 할당 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고 리터럴 문자열을 해당 배열에 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;복사&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하여 완전히 쓸 수 있으므로 후속 업데이트는 문제가되지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f2214b85c01a8d4edbc6eff4ad1019b49b487aa9" translate="yes" xml:space="preserve">
          <source>allocates and initializes a local array which is modifiable</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수정 가능한 로컬 배열을 할당하고 초기화합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5b239ccd2177ae46d581df782b5594c7a0d9837" translate="yes" xml:space="preserve">
          <source>and its value changed to &lt;code&gt;'m'&lt;/code&gt; so strarray value changed to &lt;code&gt;&quot;mello&quot;&lt;/code&gt;;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 그 값이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;'m'&lt;/code&gt; 으로&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변경되었으므로 strarray 값은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;mello&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; mello &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;로&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변경되었습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d331ecd74f69ad7ca2e044d44238d690431a55f6" translate="yes" xml:space="preserve">
          <source>and ptr is stored in stack section and pointing to constant string &lt;code&gt;&quot;hello&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ptr은 스택 섹션에 저장되며 상수 문자열 &lt;/font&gt; &lt;code&gt;&quot;hello&quot;&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가리 킵니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="938eeebcc6d366c0b191b2f834fbc620432d9112" translate="yes" xml:space="preserve">
          <source>array of char &lt;a href=&quot;https://stackoverflow.com/questions/2245664/what-is-the-type-of-string-literals-in-c-c&quot;&gt;What is the type of string literals in C and C++?&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;char 배열 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2245664/what-is-the-type-of-string-literals-in-c-c&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C와 C ++에서 문자열 리터럴의 유형은 무엇입니까?&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f64bf1221a6ac522194ae0c7ab90762fb2e7ca99" translate="yes" xml:space="preserve">
          <source>defines &quot;plain&quot; char array objects &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt; whose elements are initialized with character string literals.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;요소가 문자열 리터럴로 초기화되는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;일반&quot;문자 배열 객체 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;s&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;t&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정의합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f9173e3cc5a32f0d4ae02383bf750ccb501d24de" translate="yes" xml:space="preserve">
          <source>defines &lt;code&gt;p&lt;/code&gt; with type &quot;pointer to char&quot; and initializes it to point to an object with type &quot;array of char&quot; with length 4 whose elements are initialized with a character string literal. If an attempt is made to use &lt;code&gt;p&lt;/code&gt; to modify the contents of the array, the behavior is undefined.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;pointer to char&quot;유형으로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;p&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고 길이가 4 인 &quot;array of char&quot;유형의 객체를 가리 키도록 초기화합니다. 요소의 길이는 문자열 리터럴로 초기화됩니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;p&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 배열의 내용을 수정 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하려고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 동작이 정의되지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="af637eef49d7eacafd71fda4b5594f52ab24f683" translate="yes" xml:space="preserve">
          <source>here pointer ptr is initialized to string &lt;code&gt;&quot;hello&quot;&lt;/code&gt; which is  constant string stored in read only memory (ROM) so &lt;code&gt;&quot;hello&quot;&lt;/code&gt; can not be changed as it is stored in ROM</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 포인터 ptr은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;읽기 전용 메모리 (ROM)에 저장된 상수 문자열 인 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자열 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;hello&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 초기화 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되므로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ROM에 저장된대로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;hello&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 변경할 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43d341a6f1c4cea8b8f1e09a5ce91bcfa5b9e857" translate="yes" xml:space="preserve">
          <source>line defines a pointer and points it to a literal string.  The literal string is not writable so when you do:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;line은 포인터를 정의하고 리터럴 문자열을 가리 킵니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;리터럴 문자열은 쓸 수 없으므로 다음을 수행하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff74309b3859b009b29964a766f21e44f0016a02" translate="yes" xml:space="preserve">
          <source>one point to note here that we can change the content of string array by changing character by character but can not initialized other string directly to it like &lt;code&gt;strarray=&quot;new string&quot;&lt;/code&gt; is invalid</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서는 문자별로 문자를 변경하여 문자열 배열의 내용을 변경할 수 있지만 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;strarray=&quot;new string&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 유효하지 않은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것처럼 다른 문자열을 직접 초기화 할 수는 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="215d031429d1b7843b753e6f1d83e313eba91b16" translate="yes" xml:space="preserve">
          <source>segmentation fault is caused when you tyr to access the memory which is non accessible.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;액세스 할 수없는 메모리에 액세스하려고 할 때 분할 오류가 발생합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b54d50ef4ba8196181cb1705327251659b50884e" translate="yes" xml:space="preserve">
          <source>so it gets stored in the stack (relative to &lt;code&gt;%rbp&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 스택에 저장됩니다 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;%rbp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="feb09f52e5024b791dd6ebc8ee7d24c1b947d9b6" translate="yes" xml:space="preserve">
          <source>so ptr[0]='m' is invalid since you can not access read only memory</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 읽기 전용 메모리에 액세스 할 수 없으므로 ptr [0] = 'm'은 유효하지 않습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e70a97412ee866c25a7972ced744e63de9f7f87a" translate="yes" xml:space="preserve">
          <source>string array</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자열 배열&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5607fe56fc2010bb7d690790ccafa089c8db902" translate="yes" xml:space="preserve">
          <source>that gives UB if modified</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수정하면 UB를 제공합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="867b9a00623e417b4844f0dffcffb808848bad58" translate="yes" xml:space="preserve">
          <source>unnamed</source>
          <target state="translated">unnamed</target>
        </trans-unit>
        <trans-unit id="82b76e320e6a246cb2b9c19bd7c16502ea374dee" translate="yes" xml:space="preserve">
          <source>we obtain:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 얻는다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cb2a656c582155d38c9effe568399734a250635b" translate="yes" xml:space="preserve">
          <source>whereas &lt;code&gt;char str[]&lt;/code&gt; is an array and can be modifiable..</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;반면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;char str[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 배열되고 수정 될 수있다 ..&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b30fcd4fae496a47d73de21913c424b6de7ef0a5" translate="yes" xml:space="preserve">
          <source>which contains:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;포함하는:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6dcfd341c68e6a635162413a9b37b77231e5afb8" translate="yes" xml:space="preserve">
          <source>with static storage</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 스토리지&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c378582dd3e8fcd41744e8aa9b969d86fc2cbf4a" translate="yes" xml:space="preserve">
          <source>you get a seg fault.  On some platforms, the literal might be in writable memory so you won't see a segfault, but it's invalid code (resulting in undefined behavior) regardless.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;세그 결함이 발생합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부 플랫폼에서는 리터럴이 쓰기 가능한 메모리에있을 수 있으므로 segfault가 표시되지 않지만, 정의되지 않은 동작으로 인해 유효하지 않은 코드입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
