<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/164194">
    <body>
      <group id="164194">
        <trans-unit id="7369f1dbbb13c0f5b1914ae576611fabf3d5a20a" translate="yes" xml:space="preserve">
          <source>&quot;str&quot; is an array allocated on the stack and can be modified freely.</source>
          <target state="translated">&quot;str&quot; es un arreglo asignado en la pila y puede ser modificado libremente.</target>
        </trans-unit>
        <trans-unit id="6f4f9823718a35a3ce0df5bf6d6359ac144110be" translate="yes" xml:space="preserve">
          <source>5 In translation phase 7, a byte or code of value zero is appended to each multibyte
  character sequence that results from a string literal or literals. The multibyte character
  sequence is then used to initialize an array of static storage duration and length just
  sufficient to contain the sequence. For character string literals, the array elements have
  type char, and are initialized with the individual bytes of the multibyte character
  sequence [...]</source>
          <target state="translated">5 En la fase de traducción 7,se añade un byte o código de valor cero a cada secuencia de caracteres multibyte que resulta de una cadena literal o literales.La secuencia de caracteres multibyte se utiliza entonces para inicializar un conjunto de duración y longitud de almacenamiento estático suficiente para contener la secuencia.En el caso de los literales de cadenas de caracteres,los elementos de la matriz tienen el tipo char y se inicializan con los bytes individuales de la secuencia de caracteres multibyte [...]</target>
        </trans-unit>
        <trans-unit id="cd7322bb185146ef549f5a00c1243d9e4faecc12" translate="yes" xml:space="preserve">
          <source>6 It is unspecified whether these arrays are distinct provided their elements have the
  appropriate values. If the program attempts to modify such an array, the behavior is
  undefined.</source>
          <target state="translated">6 No se especifica si estos conjuntos son distintos,siempre que sus elementos tengan los valores apropiados.Si el programa intenta modificar una de estas matrices,el comportamiento es indefinido.</target>
        </trans-unit>
        <trans-unit id="fac3ed3a23c3121f9d9408f6549bff597dc35ee0" translate="yes" xml:space="preserve">
          <source>6.7.8/32 &quot;Initialization&quot; gives a direct example:</source>
          <target state="translated">6.7.832 &quot;Inicialización&quot; es un ejemplo directo:</target>
        </trans-unit>
        <trans-unit id="8b695488b8249b4a46f3f5b555499d55486b4d72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char *str&lt;/code&gt; is a pointer to a string which is non modifiable(the reason for getting seg fault)..</source>
          <target state="translated">&lt;code&gt;char *str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es un puntero a una cadena que no es modificable (la raz&amp;oacute;n por la que se produce la falla seg).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e645b13168dcb6a2c365f5127c101d353a93e2aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A&lt;/strong&gt;: A string literal (the formal term
  for a double-quoted string in C
  source) can be used in two slightly
  different ways:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;R&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : Un literal de cadena (el t&amp;eacute;rmino formal para una cadena entre comillas dobles en fuente C) se puede usar de dos maneras ligeramente diferentes:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="989caef3a70ec06f60e066ab0e2e395d4de66975" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C99 N1256 draft&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C99 N1256 draft&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b7c1aaf324c090633cc6b151399499e5ec81a78b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GCC 4.8 x86-64 ELF implementation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Implementaci&amp;oacute;n de GCC 4.8 x86-64 ELF&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49f8d9a28773b6bc3930685952238d28afd5aee5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q&lt;/strong&gt;: What is the difference between these initializations?</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;P&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &amp;iquest;Cu&amp;aacute;l es la diferencia entre estas inicializaciones?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d3c7f722e91108fa4fcb25941a0310cb3b603976" translate="yes" xml:space="preserve">
          <source>Also, printing the size of &lt;code&gt;str&lt;/code&gt; in the second example will show you that the compiler has allocated 7 bytes for it:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s, imprimir el tama&amp;ntilde;o de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en el segundo ejemplo le mostrar&amp;aacute; que el compilador le ha asignado 7 bytes:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cbd97cb6ba42b992540a09774cb2c6478490196a" translate="yes" xml:space="preserve">
          <source>An array of character type may be initialized by a character string literal, optionally
  enclosed in braces. Successive characters of the character string literal (including the
  terminating null character if there is room or if the array is of unknown size) initialize the
  elements of the array.</source>
          <target state="translated">Un conjunto de tipos de caracteres puede ser inicializado por una cadena de caracteres literal,opcionalmente encerrada entre llaves.Los caracteres sucesivos de la cadena de caracteres literales (incluido el carácter nulo de terminación si hay espacio o si la matriz es de tamaño desconocido)inicializan los elementos de la matriz.</target>
        </trans-unit>
        <trans-unit id="24944353ecb56980e9abe0eb848367d1bbe16eec" translate="yes" xml:space="preserve">
          <source>Anywhere else, it turns into an unnamed, static array of characters,
  and this unnamed array may be stored
  in read-only memory, and which
  therefore cannot necessarily be
  modified. In an expression context,
  the array is converted at once to a
  pointer, as usual (see section 6), so
  the second declaration initializes p
  to point to the unnamed array's first
  element.</source>
          <target state="translated">En cualquier otro lugar,se convierte en un conjunto estático y sin nombre de caracteres,y este conjunto sin nombre puede ser almacenado en la memoria de sólo lectura,y que por lo tanto no puede ser necesariamente modificado.En un contexto de expresión,la matriz se convierte de inmediato en un puntero,como es habitual (véase la sección 6),de modo que la segunda declaración inicializa p para señalar el primer elemento de la matriz sin nombre.</target>
        </trans-unit>
        <trans-unit id="08626871d2cc92f267c8fd80fc601794cef57016" translate="yes" xml:space="preserve">
          <source>As the initializer for an array of char, as in the declaration of &lt;code&gt;char a[]&lt;/code&gt; , it specifies the initial values
  of the characters in that array (and,
  if necessary, its size).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como inicializador de un conjunto de caracteres, como en la declaraci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;char a[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , especifica los valores iniciales de los caracteres en ese conjunto (y, si es necesario, su tama&amp;ntilde;o).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f2ac90e5ac860abf9685d09d6b4fbd7022d39d8" translate="yes" xml:space="preserve">
          <source>As we all know  pointer points to memory location in memory ,
uninitialized pointer points to random memory location so and after initialization points to particular memory location</source>
          <target state="translated">Como todos sabemos el puntero apunta a la ubicación de la memoria en la memoria,el puntero no inicializado apunta a la ubicación de la memoria al azar,y después de la inicialización apunta a la ubicación de la memoria en particular.</target>
        </trans-unit>
        <trans-unit id="53f7bb1d4edd3ccbef6d448faa7bc39cbca32ee8" translate="yes" xml:space="preserve">
          <source>Assume the strings are,</source>
          <target state="translated">Supongamos que las cuerdas lo son,</target>
        </trans-unit>
        <trans-unit id="0a9b511b34e15ea2b692a64eadb322d81b287abf" translate="yes" xml:space="preserve">
          <source>Because the type of &lt;code&gt;&quot;whatever&quot;&lt;/code&gt; in the context of the 1st example is &lt;code&gt;const char *&lt;/code&gt; (even if you assign it to a non-const char*), which means you shouldn't try and write to it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Debido a que el tipo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;whatever&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en el contexto del primer ejemplo es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;const char *&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (incluso si lo asigna a un car&amp;aacute;cter no const char *), lo que significa que no debe intentar escribir en &amp;eacute;l.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="25b5fe8d44d915ccc40ac69a9cf6c6ac4e5b0299" translate="yes" xml:space="preserve">
          <source>But ptr can be initialised to other string value directly since it is just pointer so it can be point to any memory address of variable of its data type</source>
          <target state="translated">Pero ptr puede ser inicializado a otro valor de cadena directamente ya que es sólo un puntero para que pueda ser apuntado a cualquier dirección de memoria de variable de su tipo de datos</target>
        </trans-unit>
        <trans-unit id="8646ef6ae439093b3a509c848a73e94716034cd4" translate="yes" xml:space="preserve">
          <source>Compile and decompile:</source>
          <target state="translated">Compilar y descompilar:</target>
        </trans-unit>
        <trans-unit id="88ec39701a0c4df5266196b2dee36c3fa2c11fef" translate="yes" xml:space="preserve">
          <source>Conclusion: GCC stores &lt;code&gt;char*&lt;/code&gt; it in &lt;code&gt;.rodata&lt;/code&gt; section, not in &lt;code&gt;.text&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Conclusi&amp;oacute;n: GCC almacena &lt;/font&gt;&lt;/font&gt; &lt;code&gt;char*&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; it en la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;secci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.rodata&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , no en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.text&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64ca5ab0ff194c61c227c75f16866d610381468c" translate="yes" xml:space="preserve">
          <source>EXAMPLE 8: The declaration</source>
          <target state="translated">EJEMPLO 8:La declaración</target>
        </trans-unit>
        <trans-unit id="3b35a62bda88de385c42aaf857d1210eaf12a76e" translate="yes" xml:space="preserve">
          <source>Everywhere else: it generates an:</source>
          <target state="translated">En todas partes:genera un..:</target>
        </trans-unit>
        <trans-unit id="46e39defeb634a812d739b9ddcfc21883259a655" translate="yes" xml:space="preserve">
          <source>First is one constant string which can't be modified. Second is an array with initialized value, so it can be modified.</source>
          <target state="translated">La primera es una cadena constante que no puede ser modificada.La segunda es una matriz con valor inicializado,por lo que puede ser modificada.</target>
        </trans-unit>
        <trans-unit id="fcf9bd7f6f632d83d63a2a6cecbb14e0e50ea42e" translate="yes" xml:space="preserve">
          <source>If we do the same for &lt;code&gt;char[]&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si hacemos lo mismo para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;char[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f59390f0a45c1b4712554097c095cc344081aa9e" translate="yes" xml:space="preserve">
          <source>In memory array is stored in continuous memory cells, stored as &lt;code&gt;[h][e][l][l][o][\0] =&amp;gt;[]&lt;/code&gt; is 1 char byte size memory cell ,and this continuous memory cells can be access by name named strarray here.so here string array &lt;code&gt;strarray&lt;/code&gt; itself containing all characters of string initialized to it.in this case here &lt;code&gt;&quot;hello&quot;&lt;/code&gt;
so we can easily change its memory content by accessing each character by its index value</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En la matriz de memoria se almacena en celdas de memoria continua, almacenadas como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[h][e][l][l][o][\0] =&amp;gt;[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es 1 celda de memoria de tama&amp;ntilde;o de byte de caracteres, y estas celdas de memoria continua pueden ser acceso por nombre llamado strarray aqu&amp;iacute;. as&amp;iacute; que aqu&amp;iacute; la matriz de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;strarray&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; contiene todos los caracteres de cadena inicializados en este caso aqu&amp;iacute; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;hello&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para que podamos cambiar f&amp;aacute;cilmente su contenido de memoria accediendo a cada car&amp;aacute;cter por su valor de &amp;iacute;ndice&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4337c1da9ceb238dfadf01362b0e7aaea46cc2b6" translate="yes" xml:space="preserve">
          <source>In the first case, the literal is to be copied when 'a' comes into scope. Here 'a' is an array defined on stack. It means the string will be created on the stack and its data is copied from code (text) memory, which is typically read-only (this is implementation specific, a compiler can place this read-only program data in read-writable memory also).</source>
          <target state="translated">En el primer caso,el literal debe ser copiado cuando &quot;a&quot; entre en juego.Aquí 'a' es una matriz definida en la pila.Significa que la cadena se creará en la pila y sus datos se copiarán de la memoria de código (texto),que es típicamente de sólo lectura (esto es específico de la implementación,un compilador puede colocar estos datos de programa de sólo lectura en la memoria de lectura-escritura también).</target>
        </trans-unit>
        <trans-unit id="c000469e8149dce9f4db193ab1d1c419c544bc92" translate="yes" xml:space="preserve">
          <source>In the first code, &quot;string&quot; is a string constant, and string constants should never be modified because they are often placed into read only memory.  &quot;str&quot; is a pointer being used to modify the constant.</source>
          <target state="translated">En el primer código,&quot;cadena&quot; es una constante de cadena,y las constantes de cadena nunca deben ser modificadas porque a menudo se colocan en la memoria de sólo lectura.&quot;str&quot; es un puntero que se utiliza para modificar la constante.</target>
        </trans-unit>
        <trans-unit id="97ea0635da2a3e86ec6d0d79f1cfbaee517b1039" translate="yes" xml:space="preserve">
          <source>In the first place, &lt;code&gt;str&lt;/code&gt; is a pointer that points at &lt;code&gt;&quot;string&quot;&lt;/code&gt;.  The compiler is allowed to put string literals in places in memory that you cannot write to, but can only read.  (This really should have triggered a warning, since you're assigning a &lt;code&gt;const char *&lt;/code&gt; to a &lt;code&gt;char *&lt;/code&gt;.  Did you have warnings disabled, or did you just ignore them?)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En primer lugar, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es un puntero que apunta a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;string&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El compilador puede colocar literales de cadena en lugares en la memoria en los que no puede escribir, pero solo puede leer. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Esto realmente deber&amp;iacute;a haber activado una advertencia, ya que est&amp;aacute; asignando un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;const char *&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;char *&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &amp;iquest;Ten&amp;iacute;a las advertencias desactivadas o simplemente las ignor&amp;oacute;?)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff20b6a5219ae768033783979a87d2390005f2e7" translate="yes" xml:space="preserve">
          <source>In the second case, p is a pointer defined on stack (local scope) and referring a string literal (program data or text) stored else where. Usually modifying such memory is not good practice nor encouraged.</source>
          <target state="translated">En el segundo caso,p es un puntero definido en la pila (ámbito local)y que remite a una cadena literal (datos de programa o texto)almacenada en otro lugar.Normalmente modificar esa memoria no es una buena práctica ni se fomenta.</target>
        </trans-unit>
        <trans-unit id="1838ffd28fb512b277c85a385ef6b7802941bd8e" translate="yes" xml:space="preserve">
          <source>In the second code, &quot;string&quot; is an array initializer, sort of short hand for</source>
          <target state="translated">En el segundo código,&quot;cadena&quot; es un inicializador de matriz,una especie de mano corta para</target>
        </trans-unit>
        <trans-unit id="c5aa22fba1b64b02c810315d7188a316eef98093" translate="yes" xml:space="preserve">
          <source>In the second example, the string &lt;code&gt;&quot;string&quot;&lt;/code&gt; is &lt;em&gt;copied&lt;/em&gt; by the compiler from its read-only home to the &lt;code&gt;str[]&lt;/code&gt; array. Then changing the first character is permitted. You can check this by printing the address of each:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En el segundo ejemplo, la cadena &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;string&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;copiada&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; por el compilador de su hogar de solo lectura a la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;matriz &lt;/font&gt;&lt;/font&gt; &lt;code&gt;str[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Luego se permite cambiar el primer car&amp;aacute;cter. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede verificar esto imprimiendo la direcci&amp;oacute;n de cada uno:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea00e14bcd6a402dfaf6f0f35e2ce17d7c1d0e5a" translate="yes" xml:space="preserve">
          <source>In the second place, you're creating an array, which is memory that you've got full access to, and initializing it with &lt;code&gt;&quot;string&quot;&lt;/code&gt;.  You're creating a &lt;code&gt;char[7]&lt;/code&gt; (six for the letters, one for the terminating '\0'), and you do whatever you like with it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En segundo lugar, est&amp;aacute; creando una matriz, que es la memoria a la que tiene acceso completo, e inicializ&amp;aacute;ndola con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;string&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Est&amp;aacute;s creando un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;char[7]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (seis para las letras, uno para la terminaci&amp;oacute;n '\ 0'), y haces lo que quieras con &amp;eacute;l.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bff6151bb1c52734e7b864d94be02cc2901c7e76" translate="yes" xml:space="preserve">
          <source>In your first example, you're getting a pointer to that const data.  In your second example, you're initializing an array of 7 characters with a copy of the const data.</source>
          <target state="translated">En tu primer ejemplo,estás obteniendo un puntero a esos datos de la constelación.En tu segundo ejemplo,estás inicializando una matriz de 7 caracteres con una copia de los datos de la const.</target>
        </trans-unit>
        <trans-unit id="10fd75efad3719fe3bb4eb8209929e181c321d6b" translate="yes" xml:space="preserve">
          <source>Initialize &lt;code&gt;char[]&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Inicializar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;char[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71621f4c0ca35b4b447632316c08b9f646620f62" translate="yes" xml:space="preserve">
          <source>Like any other regular array, &lt;code&gt;c&lt;/code&gt; can be modified.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Al igual que cualquier otra matriz regular, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se puede modificar.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0cb45122635efbac7d2998e31e4b524f1c810c9" translate="yes" xml:space="preserve">
          <source>Most of these answers are correct, but just to add a little more clarity...</source>
          <target state="translated">La mayoría de estas respuestas son correctas,pero sólo para añadir un poco más de claridad...</target>
        </trans-unit>
        <trans-unit id="ab87e7164433d13846cff22c0a5731378c323d7e" translate="yes" xml:space="preserve">
          <source>My program crashes if I try to assign a new value to &lt;code&gt;p[i]&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mi programa se bloquea si intento asignar un nuevo valor a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;p[i]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e46d81bdcd2425d26c847ea2d5d64bbe3b1cb583" translate="yes" xml:space="preserve">
          <source>Normally, string literals are stored in read-only memory when the program is run. This is to prevent you from accidentally changing a string constant. In your first example, &lt;code&gt;&quot;string&quot;&lt;/code&gt; is stored in read-only memory and &lt;code&gt;*str&lt;/code&gt; points to the first character. The segfault happens when you try to change the first character to &lt;code&gt;'z'&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Normalmente, los literales de cadena se almacenan en la memoria de solo lectura cuando se ejecuta el programa. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto es para evitar que cambie accidentalmente una constante de cadena. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En su primer ejemplo, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;string&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se almacena en la memoria de solo lectura y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;*str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; apunta al primer car&amp;aacute;cter. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El segfault ocurre cuando intenta cambiar el primer car&amp;aacute;cter a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;'z'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7ac69938cb0651b2d6b8ce2d43bf3af47cb99539" translate="yes" xml:space="preserve">
          <source>Note however that the default linker script puts &lt;code&gt;.rodata&lt;/code&gt; and &lt;code&gt;.text&lt;/code&gt; in the same segment, which has execute but no write permission. This can be observed with:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, &lt;/font&gt; &lt;code&gt;.text&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; en &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cuenta que el script de enlace predeterminado coloca &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.rodata&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.text&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en el mismo segmento, que tiene permiso de ejecuci&amp;oacute;n pero no de escritura. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto se puede observar con:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f4e329055872d3c12f2cc484b260a44f643d9971" translate="yes" xml:space="preserve">
          <source>Note the implicit cast from &lt;code&gt;char[]&lt;/code&gt; to &lt;code&gt;char *&lt;/code&gt;, which is always legal.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta la conversi&amp;oacute;n impl&amp;iacute;cita de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;char[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;char *&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que siempre es legal.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="86546a25fe2d8c85ef2156d6bfee43929dbe1777" translate="yes" xml:space="preserve">
          <source>Output contains:</source>
          <target state="translated">La salida contiene:</target>
        </trans-unit>
        <trans-unit id="bc5de071a8adc9ea913c6f9e5f0005a2d40cc14d" translate="yes" xml:space="preserve">
          <source>Pointer</source>
          <target state="translated">Pointer</target>
        </trans-unit>
        <trans-unit id="79e5360bcf55c6212f0b1414e9099c15ef47ee22" translate="yes" xml:space="preserve">
          <source>Program:</source>
          <target state="translated">Program:</target>
        </trans-unit>
        <trans-unit id="26bd51102e586ff70bb0587551dbc67bec7fc0ad" translate="yes" xml:space="preserve">
          <source>See the C FAQ, &lt;a href=&quot;http://c-faq.com/decl/strlitinit.html&quot;&gt;Question 1.32&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Consulte las preguntas frecuentes de C, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://c-faq.com/decl/strlitinit.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pregunta 1.32&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b9a3011e9aa306b196ebd07257ac293bbdbd232" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;str[0]=&lt;/code&gt; is attempting to write to the read-only code of the application.  I would guess this is probably compiler dependent though.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces &lt;/font&gt;&lt;/font&gt; &lt;code&gt;str[0]=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; est&amp;aacute; intentando escribir en el c&amp;oacute;digo de solo lectura de la aplicaci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, supongo que esto probablemente depende del compilador.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1332c2aeb09d0c1817fe85b41907f9631446a288" translate="yes" xml:space="preserve">
          <source>So this is just a shortcut for:</source>
          <target state="translated">Así que esto es sólo un atajo para:</target>
        </trans-unit>
        <trans-unit id="b5698d0895816d08e306d72f3fb561310cfca67f" translate="yes" xml:space="preserve">
          <source>So when you write:</source>
          <target state="translated">Así que cuando escribes:</target>
        </trans-unit>
        <trans-unit id="b4f5fa445d8872f4d54fec5b7f0c287426411c5a" translate="yes" xml:space="preserve">
          <source>Some compilers have a switch
  controlling whether string literals
  are writable or not (for compiling old
  code), and some may have options to
  cause string literals to be formally
  treated as arrays of const char (for
  better error catching).</source>
          <target state="translated">Algunos compiladores tienen un interruptor que controla si los literales de las cadenas son escribibles o no (para compilar código antiguo),y algunos pueden tener opciones para hacer que los literales de las cadenas se traten formalmente como arreglos de caracteres const (para una mejor captación de errores).</target>
        </trans-unit>
        <trans-unit id="bcfac5632b1f0c9485944d083e902221ab174657" translate="yes" xml:space="preserve">
          <source>String literals like &quot;string&quot; are probably allocated in your executable's address space as read-only data (give or take your compiler).  When you go to touch it, it freaks out that you're in its bathing suit area and lets you know with a seg fault.</source>
          <target state="translated">Los literales de cadena como &quot;cadena&quot; probablemente están asignados en el espacio de direcciones de su ejecutable como datos de sólo lectura (más o menos su compilador).Cuando lo tocas,se asusta de que estés en la zona del traje de baño y te lo hace saber con un fallo de segmento.</target>
        </trans-unit>
        <trans-unit id="65ee6b0cdf5b4fc22f771b21a56a4d300a3a3bfe" translate="yes" xml:space="preserve">
          <source>Tested with MSVC and GCC.</source>
          <target state="translated">Probado con MSVC y GCC.</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="7f018e4fa7f9467f75ae0f3445107e843a7ea140" translate="yes" xml:space="preserve">
          <source>The &quot;read only memory&quot; that people are referring to is the text segment in ASM terms. It's the same place in memory where the instructions are loaded. This is read-only for obvious reasons like security. When you create a char* initialized to a string, the string data is compiled into the text segment and the program initializes the pointer to point into the text segment. So if you try to change it, kaboom. Segfault.</source>
          <target state="translated">La &quot;memoria de sólo lectura&quot; a la que la gente se refiere es el segmento de texto en términos de ASM.Es el mismo lugar de la memoria donde se cargan las instrucciones.Esto es sólo de lectura por razones obvias como la seguridad.Cuando se crea un char*inicializado a una cadena,los datos de la cadena se compilan en el segmento de texto y el programa inicializa el puntero para que apunte al segmento de texto.Así que si intentas cambiarlo,kaboom.Segfault.</target>
        </trans-unit>
        <trans-unit id="db2526ed7b3f0955d3ba159e7158dc450975f890" translate="yes" xml:space="preserve">
          <source>The C FAQ that @matli linked to mentions it, but no one else here has yet, so for clarification: if a string literal (double-quoted string in your source) is used anywhere &lt;em&gt;other than&lt;/em&gt; to initialize a character array (ie: @Mark's second example, which works correctly), that string is stored by the compiler in a special &lt;em&gt;static string table&lt;/em&gt;, which is akin to creating a global static variable (read-only, of course) that is essentially anonymous (has no variable &quot;name&quot;). The &lt;em&gt;read-only&lt;/em&gt; part is the important part, and is why the @Mark's first code example segfaults.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las preguntas frecuentes de C que @matli enlaz&amp;oacute; lo mencionan, pero nadie m&amp;aacute;s lo ha hecho todav&amp;iacute;a, as&amp;iacute; que para aclarar: si una cadena literal (cadena de comillas dobles en su fuente) se usa en cualquier &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;otro&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; lugar que &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no sea&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para inicializar una matriz de caracteres (es decir: @ El segundo ejemplo de Mark, que funciona correctamente), esa cadena es almacenada por el compilador en una &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tabla&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; especial de &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cadenas est&amp;aacute;ticas&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que es similar a crear una variable est&amp;aacute;tica global (solo lectura, por supuesto) que es esencialmente an&amp;oacute;nima (no tiene nombre de variable) &quot;). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;parte de &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;solo lectura&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es la parte importante, y es la raz&amp;oacute;n por la cual el primer ejemplo de c&amp;oacute;digo de @ Mark se divide por defecto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="153d6e82c56945ee94a9b46f97146ff737c5a61d" translate="yes" xml:space="preserve">
          <source>The above sets &lt;code&gt;str&lt;/code&gt; to point to the literal value &lt;code&gt;&quot;string&quot;&lt;/code&gt; which is hard-coded in the program's binary image, which is probably flagged as read-only in memory.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo anterior establece &lt;/font&gt;&lt;/font&gt; &lt;code&gt;str&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para que apunte al valor literal &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;string&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que est&amp;aacute; codificado en la imagen binaria del programa, que probablemente est&amp;aacute; marcado como de solo lectura en la memoria.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b40d2b2f20d0458f25ede06c4f5dd644c7b2ba9f" translate="yes" xml:space="preserve">
          <source>The compiler has enforced this by putting the string in a read-only part of memory, hence writing to it generates a segfault.</source>
          <target state="translated">El compilador ha reforzado esto poniendo la cadena en una parte de la memoria de sólo lectura,por lo que al escribirla se genera un fallo de segmento.</target>
        </trans-unit>
        <trans-unit id="af5b4181887adb17c079d2ba90c26ce6b8194e5b" translate="yes" xml:space="preserve">
          <source>The contents of the arrays are modifiable. On the other hand, the declaration</source>
          <target state="translated">El contenido de las matrices es modificable.Por otra parte,la declaración</target>
        </trans-unit>
        <trans-unit id="7eabf5eb08cf7d0aa68f14acaece18add4ee544d" translate="yes" xml:space="preserve">
          <source>The following code receives seg fault on line 2:</source>
          <target state="translated">El siguiente código recibe una falla de segmento en la línea 2:</target>
        </trans-unit>
        <trans-unit id="38b874fa8a4a12a55bfe752327cc1339971672a4" translate="yes" xml:space="preserve">
          <source>The line:</source>
          <target state="translated">La línea:</target>
        </trans-unit>
        <trans-unit id="51a8d743261763d0c5ba6a3d8400bee365d6b7e1" translate="yes" xml:space="preserve">
          <source>Then if you modify &lt;code&gt;c[0]&lt;/code&gt;, you also modify &lt;code&gt;__unnamed&lt;/code&gt;, which is UB.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Luego, si modifica &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , tambi&amp;eacute;n modifica &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__unnamed&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que es UB.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="04c2442ba0cb356bca376365107aaf0cde3ee082" translate="yes" xml:space="preserve">
          <source>There are two different uses of character string literals:</source>
          <target state="translated">Hay dos usos diferentes de los literales de las cadenas de caracteres:</target>
        </trans-unit>
        <trans-unit id="8e34f037d3b8729159339c78ec31107ef278d97a" translate="yes" xml:space="preserve">
          <source>This declaration is identical to</source>
          <target state="translated">Esta declaración es idéntica a</target>
        </trans-unit>
        <trans-unit id="f06c9be022ff454489265524b61c1f9972fefa06" translate="yes" xml:space="preserve">
          <source>This is &quot;more magic&quot;, and described at 6.7.8/14 &quot;Initialization&quot;:</source>
          <target state="translated">Esto es &quot;más magia&quot;,y se describe en 6.7.814 &quot;Inicialización&quot;:</target>
        </trans-unit>
        <trans-unit id="33114f84c8b259a7d360bf056480d7a655a4fe82" translate="yes" xml:space="preserve">
          <source>This is documented at 6.4.5 &quot;String literals&quot;:</source>
          <target state="translated">Esto está documentado en 6.4.5 &quot;Literales de cuerda&quot;:</target>
        </trans-unit>
        <trans-unit id="21b0b9815b988cab4a0b05332115eaf25e71b859" translate="yes" xml:space="preserve">
          <source>This is similar to:</source>
          <target state="translated">Esto es similar a:</target>
        </trans-unit>
        <trans-unit id="fee34be18f8766afae1debba6298fcb27f068cec" translate="yes" xml:space="preserve">
          <source>To understand this error or problem you should first know difference b/w the pointer and array
  so here firstly i have explain you differences b/w them</source>
          <target state="translated">Para entender este error o problema,primero debes saber la diferencia entre el puntero y la matriz,así que aquí primero he explicado las diferencias entre ellos.</target>
        </trans-unit>
        <trans-unit id="a478f8da6e515e2fe6dd6cf28c5c4f51c92040d9" translate="yes" xml:space="preserve">
          <source>When written as an array, the compiler places the initialized string data in the data segment instead, which is the same place that your global variables and such live. This memory is mutable, since there are no instructions in the data segment. This time when the compiler initializes the character array (which is still just a char*) it's pointing into the data segment rather than the text segment, which you can safely alter at run-time.</source>
          <target state="translated">Cuando se escribe como una matriz,el compilador coloca los datos de cadena inicializados en el segmento de datos en su lugar,que es el mismo lugar en el que viven sus variables globales y tales.Esta memoria es mutable,ya que no hay instrucciones en el segmento de datos.Esta vez,cuando el compilador inicializa la matriz de caracteres (que sigue siendo sólo un char*)está apuntando al segmento de datos en lugar del segmento de texto,que puede alterarse con seguridad en tiempo de ejecución.</target>
        </trans-unit>
        <trans-unit id="43057d0685a9d16e1cc0b2587f6e1f0f9008dd5b" translate="yes" xml:space="preserve">
          <source>While this works perfectly well:</source>
          <target state="translated">Mientras que esto funciona perfectamente bien:</target>
        </trans-unit>
        <trans-unit id="0ba0bb95ffdcd69d1d7712168e6a876a3d9f0af4" translate="yes" xml:space="preserve">
          <source>Why do I get a segmentation fault when writing to a string initialized with “char *s” but not “char s[]”</source>
          <target state="translated">¿Por qué tengo un fallo de segmentación cuando escribo en una cadena inicializada con &quot;char *s&quot; pero no con &quot;char s[]&quot;?</target>
        </trans-unit>
        <trans-unit id="97dfcf15090fe7931b0df660cee46dcc110c2899" translate="yes" xml:space="preserve">
          <source>Why do I get a segmentation fault when writing to a string?</source>
          <target state="translated">¿Por qué tengo un fallo de segmentación cuando escribo en una cuerda?</target>
        </trans-unit>
        <trans-unit id="84a6f36914b097f4069d48b0b519d0c189fa5de1" translate="yes" xml:space="preserve">
          <source>allocates a pointer to a string literal, which the compiler is putting in a non-modifiable part of your executable;</source>
          <target state="translated">asigna un puntero a un literal de la cadena,que el compilador está poniendo en una parte no modificable de su ejecutable;</target>
        </trans-unit>
        <trans-unit id="4eb2c39a057f022d979f91705d518db79edb0bf8" translate="yes" xml:space="preserve">
          <source>allocates an array of characters and &lt;strong&gt;copies&lt;/strong&gt; the literal string into that array, which is fully writable, so the subsequent update is no problem.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;asigna una matriz de caracteres y &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;copia&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; la cadena literal en esa matriz, que es completamente grabable, por lo que la actualizaci&amp;oacute;n posterior no es un problema.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f2214b85c01a8d4edbc6eff4ad1019b49b487aa9" translate="yes" xml:space="preserve">
          <source>allocates and initializes a local array which is modifiable</source>
          <target state="translated">asigna e inicializa un arreglo local que es modificable</target>
        </trans-unit>
        <trans-unit id="d5b239ccd2177ae46d581df782b5594c7a0d9837" translate="yes" xml:space="preserve">
          <source>and its value changed to &lt;code&gt;'m'&lt;/code&gt; so strarray value changed to &lt;code&gt;&quot;mello&quot;&lt;/code&gt;;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;y su valor cambi&amp;oacute; a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;'m'&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; por lo que el valor de strarray cambi&amp;oacute; a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;mello&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d331ecd74f69ad7ca2e044d44238d690431a55f6" translate="yes" xml:space="preserve">
          <source>and ptr is stored in stack section and pointing to constant string &lt;code&gt;&quot;hello&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;y ptr se almacena en la secci&amp;oacute;n de pila y apunta a la cadena constante &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;hello&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="938eeebcc6d366c0b191b2f834fbc620432d9112" translate="yes" xml:space="preserve">
          <source>array of char &lt;a href=&quot;https://stackoverflow.com/questions/2245664/what-is-the-type-of-string-literals-in-c-c&quot;&gt;What is the type of string literals in C and C++?&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;array of char &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2245664/what-is-the-type-of-string-literals-in-c-c&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Cu&amp;aacute;l es el tipo de literales de cadena en C y C ++?&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f64bf1221a6ac522194ae0c7ab90762fb2e7ca99" translate="yes" xml:space="preserve">
          <source>defines &quot;plain&quot; char array objects &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt; whose elements are initialized with character string literals.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;define los objetos &quot;liso&quot; char array &lt;/font&gt;&lt;/font&gt; &lt;code&gt;s&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;t&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cuyos elementos se inicializa con los literales de cadena de caracteres.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f9173e3cc5a32f0d4ae02383bf750ccb501d24de" translate="yes" xml:space="preserve">
          <source>defines &lt;code&gt;p&lt;/code&gt; with type &quot;pointer to char&quot; and initializes it to point to an object with type &quot;array of char&quot; with length 4 whose elements are initialized with a character string literal. If an attempt is made to use &lt;code&gt;p&lt;/code&gt; to modify the contents of the array, the behavior is undefined.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;define &lt;/font&gt;&lt;/font&gt; &lt;code&gt;p&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; con el tipo &quot;puntero a char&quot; y lo inicializa para apuntar a un objeto con el tipo &quot;matriz de char&quot; con longitud 4 cuyos elementos se inicializan con una cadena de caracteres literal. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si se intenta utilizar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;p&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para modificar el contenido de la matriz, el comportamiento no est&amp;aacute; definido.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="af637eef49d7eacafd71fda4b5594f52ab24f683" translate="yes" xml:space="preserve">
          <source>here pointer ptr is initialized to string &lt;code&gt;&quot;hello&quot;&lt;/code&gt; which is  constant string stored in read only memory (ROM) so &lt;code&gt;&quot;hello&quot;&lt;/code&gt; can not be changed as it is stored in ROM</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aqu&amp;iacute; el puntero ptr se inicializa en la cadena &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;hello&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que es una cadena constante almacenada en la memoria de solo lectura (ROM), por lo que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;hello&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no se puede cambiar ya que se almacena en la ROM&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43d341a6f1c4cea8b8f1e09a5ce91bcfa5b9e857" translate="yes" xml:space="preserve">
          <source>line defines a pointer and points it to a literal string.  The literal string is not writable so when you do:</source>
          <target state="translated">La línea define un puntero y lo apunta a una cadena literal.La cadena literal no es escribible,así que cuando lo haces:</target>
        </trans-unit>
        <trans-unit id="ff74309b3859b009b29964a766f21e44f0016a02" translate="yes" xml:space="preserve">
          <source>one point to note here that we can change the content of string array by changing character by character but can not initialized other string directly to it like &lt;code&gt;strarray=&quot;new string&quot;&lt;/code&gt; is invalid</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un punto a tener en cuenta aqu&amp;iacute; es que podemos cambiar el contenido de la matriz de cadenas cambiando car&amp;aacute;cter por car&amp;aacute;cter, pero no podemos inicializar otra cadena directamente como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;strarray=&quot;new string&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no es v&amp;aacute;lida&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="215d031429d1b7843b753e6f1d83e313eba91b16" translate="yes" xml:space="preserve">
          <source>segmentation fault is caused when you tyr to access the memory which is non accessible.</source>
          <target state="translated">El fallo de segmentación se produce cuando se accede a la memoria que no es accesible.</target>
        </trans-unit>
        <trans-unit id="b54d50ef4ba8196181cb1705327251659b50884e" translate="yes" xml:space="preserve">
          <source>so it gets stored in the stack (relative to &lt;code&gt;%rbp&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;por lo que se almacena en la pila (en relaci&amp;oacute;n con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;%rbp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="feb09f52e5024b791dd6ebc8ee7d24c1b947d9b6" translate="yes" xml:space="preserve">
          <source>so ptr[0]='m' is invalid since you can not access read only memory</source>
          <target state="translated">así que ptr[0]='m' es inválido ya que no puedes acceder a la memoria de sólo lectura</target>
        </trans-unit>
        <trans-unit id="e70a97412ee866c25a7972ced744e63de9f7f87a" translate="yes" xml:space="preserve">
          <source>string array</source>
          <target state="translated">La serie de cuerdas...</target>
        </trans-unit>
        <trans-unit id="d5607fe56fc2010bb7d690790ccafa089c8db902" translate="yes" xml:space="preserve">
          <source>that gives UB if modified</source>
          <target state="translated">que da UB si se modifica</target>
        </trans-unit>
        <trans-unit id="867b9a00623e417b4844f0dffcffb808848bad58" translate="yes" xml:space="preserve">
          <source>unnamed</source>
          <target state="translated">unnamed</target>
        </trans-unit>
        <trans-unit id="82b76e320e6a246cb2b9c19bd7c16502ea374dee" translate="yes" xml:space="preserve">
          <source>we obtain:</source>
          <target state="translated">que obtenemos:</target>
        </trans-unit>
        <trans-unit id="cb2a656c582155d38c9effe568399734a250635b" translate="yes" xml:space="preserve">
          <source>whereas &lt;code&gt;char str[]&lt;/code&gt; is an array and can be modifiable..</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mientras que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;char str[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una matriz y puede ser modificable.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b30fcd4fae496a47d73de21913c424b6de7ef0a5" translate="yes" xml:space="preserve">
          <source>which contains:</source>
          <target state="translated">que contiene:</target>
        </trans-unit>
        <trans-unit id="6dcfd341c68e6a635162413a9b37b77231e5afb8" translate="yes" xml:space="preserve">
          <source>with static storage</source>
          <target state="translated">con almacenamiento estático</target>
        </trans-unit>
        <trans-unit id="c378582dd3e8fcd41744e8aa9b969d86fc2cbf4a" translate="yes" xml:space="preserve">
          <source>you get a seg fault.  On some platforms, the literal might be in writable memory so you won't see a segfault, but it's invalid code (resulting in undefined behavior) regardless.</source>
          <target state="translated">tienes una falla en el segmento.En algunas plataformas,el literal puede estar en la memoria de escritura para que no veas una falla de segmento,pero es un código inválido (que resulta en un comportamiento indefinido)de todas formas.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
