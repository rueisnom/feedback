<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/1641957">
    <body>
      <group id="1641957">
        <trans-unit id="a65b63696c33e0257a6a7d898695f32a537f1f5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; contains space for seven integers, and you can put a value in one of them with an assignment, like this:</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; содержит пробел для семи целых чисел, и вы можете поместить значение в одно из них с присваиванием, например так:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8af120010556eba3c3b2a7bad71ae9d8d645b402" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;p&lt;/code&gt; doesn't contain any spaces for integers, but it can point to a space for an integer. We can, for example, set it to point to one of the places in the array &lt;code&gt;a&lt;/code&gt;, such as the first one:</source>
          <target state="translated">&lt;code&gt;p&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не содержит пробелов для целых чисел, но может указывать на пробел для целых чисел. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Мы можем, например, установить его так, чтобы он указывал на одно из мест в массиве &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , например на первое:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a0e3f2feb92d1b5feba526fda2d2ab318506af4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Edit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="36c71ee593be8556de149c97168c4774739f6dca" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;li&gt;Which *may* affect how the address value is interpreted - depends on the machine.&lt;/li&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3b1981349530961f711b6dde2175785818e28c8e" translate="yes" xml:space="preserve">
          <source>A pointer like this allocates memory for just the pointer &lt;code&gt;p&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Такой указатель выделяет память только для указателя &lt;/font&gt;&lt;/font&gt; &lt;code&gt;p&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="da1c1c9d22ab49cd630b97c63360a180e96b79e6" translate="yes" xml:space="preserve">
          <source>An array declared like this</source>
          <target state="translated">Массив,объявленный так</target>
        </trans-unit>
        <trans-unit id="f2d1d4b464535d85f938c9fc1b4cfdac71b16845" translate="yes" xml:space="preserve">
          <source>An array is a collection of secuential and contiguous elements in memory. In C an array's name is the index to the first element, and applying an offset you can access the rest of elements.
An &quot;index to the first element&quot; is indeed a pointer to a memory direction.</source>
          <target state="translated">Массив представляет собой собрание секретных и смежных элементов в памяти.В C массиве имя-индекс к первому элементу,а применив смещение,можно получить доступ к остальным элементам.Индекс к первому элементу&quot;-это действительно указатель на направление в памяти.</target>
        </trans-unit>
        <trans-unit id="49216096309a8b134d13a16eff464e7b50905513" translate="yes" xml:space="preserve">
          <source>An array is an array and a pointer is a pointer, but in most cases array names are &lt;em&gt;converted&lt;/em&gt; to pointers. A term often used is that they &lt;em&gt;decay&lt;/em&gt; to pointers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Массив - это массив, а указатель - это указатель, но в большинстве случаев имена массивов &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;преобразуются&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в указатели. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Термин часто используется, что они &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;распадаются&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; на указатели.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cb191b43cbfa05cc8f4b650113cdbb910d1d8f8e" translate="yes" xml:space="preserve">
          <source>And other nifty stuff you can do to pointer (e.g. adding/substracting an offset), you can also do to an array:</source>
          <target state="translated">И другие изящные вещи,которые вы можете делать с указателем (например,сложение-субстрагирование смещения),вы также можете делать и с массивом:</target>
        </trans-unit>
        <trans-unit id="4acf022bcade8c95cfb9c03697ff65b8d99428f5" translate="yes" xml:space="preserve">
          <source>Answering the question in the comment:</source>
          <target state="translated">Ответить на вопрос в комментарии:</target>
        </trans-unit>
        <trans-unit id="27a6c0b546c4d3c425a0ab9158f3517403572a6f" translate="yes" xml:space="preserve">
          <source>Array name is the address of 1st element of an array. So yes array name is a const pointer.</source>
          <target state="translated">Имя массива-это адрес 1-го элемента массива.Поэтому да,имя массива-это константный указатель.</target>
        </trans-unit>
        <trans-unit id="f74a5048a36b59f77a0535c2113470eb8139cba4" translate="yes" xml:space="preserve">
          <source>Both the print statements will give exactly same output for a machine. In my system it gave:</source>
          <target state="translated">Оба заявления о печати дадут точно такой же результат для машины.В моей системе она дала:</target>
        </trans-unit>
        <trans-unit id="3e980bf5df5a6b0791e7999f54355eb789d75f96" translate="yes" xml:space="preserve">
          <source>C was derived from an earlier language called B, and in B &lt;code&gt;a&lt;/code&gt;&lt;em&gt;was&lt;/em&gt; a separate pointer object from the array elements &lt;code&gt;a[0]&lt;/code&gt;, &lt;code&gt;a[1]&lt;/code&gt;, etc.  Ritchie wanted to keep B's array semantics, but he didn't want to mess with storing the separate pointer object.  So he got rid of it.  Instead, the compiler will convert array expressions to pointer expressions during translation as necessary.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C был получен из более раннего языка под названием B, а в B &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;был&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; отдельным объектом указателя от элементов массива &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и т. Д. Ричи хотел сохранить семантику массива B, но он не хотел возиться с хранением отдельного объекта указателя. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, он избавился от этого. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вместо этого компилятор будет преобразовывать выражения массива в выражения указателя во время перевода по мере необходимости.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="785394bb3c2dd7a2e69abfa10c8f6b5f9a143f13" translate="yes" xml:space="preserve">
          <source>C++ refuses any such attempts with errors in compile-time.</source>
          <target state="translated">C++отказывается от подобных попыток с ошибками во время компиляции.</target>
        </trans-unit>
        <trans-unit id="2c79c2f8fe6cef139b77391f6699a0512a187188" translate="yes" xml:space="preserve">
          <source>Edit:</source>
          <target state="translated">Edit:</target>
        </trans-unit>
        <trans-unit id="dc832d2b81bf05bf8b249d7318841b3f1d696256" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;c&lt;/code&gt; and &lt;code&gt;a&lt;/code&gt; &quot;point&quot; to the same memory, you can obtain address of the &lt;code&gt;c&lt;/code&gt; pointer, but you cannot obtain the address of the &lt;code&gt;a&lt;/code&gt; pointer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Несмотря на то, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;laquo;точку&amp;raquo; в одной и &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;той же памяти, вы можете получить адрес &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; указателя, но вы не можете получить адрес &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; указатель.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff4533c11ca4835b8de0c93a3bff2a5c686d812b" translate="yes" xml:space="preserve">
          <source>For this to work with a normal array, such as our &lt;code&gt;a&lt;/code&gt;, the name &lt;code&gt;a&lt;/code&gt; in &lt;code&gt;a[3]&lt;/code&gt; must first be converted to a pointer (to the first element in &lt;code&gt;a&lt;/code&gt;). Then we step 3 elements forward, and take whatever is there. In other words: take the element at position 3 in the array. (Which is the fourth element in the array, since the first one is numbered 0.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чтобы это работало с обычным массивом, таким как наше &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , имя &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a[3]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; должно быть сначала преобразовано в указатель (на первый элемент в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). Затем мы делаем 3 шага вперед и берем все, что есть. Другими словами: возьмите элемент в позицию 3 в массиве. (Который является четвертым элементом в массиве, поскольку первый из них пронумерован 0.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="04d0043ae1c3750d8c0596233e2b3a656c8cc9dc" translate="yes" xml:space="preserve">
          <source>Here is a pointer:</source>
          <target state="translated">Вот указатель:</target>
        </trans-unit>
        <trans-unit id="4f58e12c03f35b97de868fb6ccbc823b9cf25d84" translate="yes" xml:space="preserve">
          <source>Here is an array:</source>
          <target state="translated">Вот массив:</target>
        </trans-unit>
        <trans-unit id="26fdb55537479116b8bb70c902712035182e615d" translate="yes" xml:space="preserve">
          <source>I think this example sheds some light on the issue:</source>
          <target state="translated">Думаю,этот пример проливает свет на проблему:</target>
        </trans-unit>
        <trans-unit id="e52fdc0c02ae77c45834fad2bc8b942e05d4df6c" translate="yes" xml:space="preserve">
          <source>If I use sizeof, do i count the size of only the elements of the array? Then the array &amp;ldquo;head&amp;rdquo; also takes up space with the information about length and a pointer (and this means that it takes more space, than a normal pointer would)?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если я использую sizeof, я считаю размер только элементов массива? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Тогда массив &amp;laquo;head&amp;raquo; также занимает место с информацией о длине и указателем (а это значит, что он занимает больше места, чем обычный указатель)?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43bba69b9ac50d749365e68162dec25883d49421" translate="yes" xml:space="preserve">
          <source>If an expression of array type (such as the array name) appears in a larger expression and it isn't the operand of either the &lt;code&gt;&amp;amp;&lt;/code&gt; or &lt;code&gt;sizeof&lt;/code&gt; operators, then the type of the array expression is converted from &quot;N-element array of T&quot; to &quot;pointer to T&quot;, and the value of the expression is the address of the first element in the array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если выражение типа массива (например, имя массива) появляется в большем выражении и не является операндом &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;операторов &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;amp;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sizeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , то тип выражения массива преобразуется из &amp;laquo;N-элементного массива T &quot;to&quot; указатель на T &quot;, а значением выражения является адрес первого элемента в массиве.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba70f7455ba6c29acbc8157772437ec33ae3725d" translate="yes" xml:space="preserve">
          <source>In short, the array name is not a pointer, but in most contexts it is treated &lt;em&gt;as though&lt;/em&gt; it were a pointer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Короче говоря, имя массива не является указателем, но в большинстве случаев оно рассматривается &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;как&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; указатель.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="82d89c2db0d03b410e54277f35b6ed4060a4a4c1" translate="yes" xml:space="preserve">
          <source>Is an array name a pointer</source>
          <target state="translated">Имя массива-это указатель</target>
        </trans-unit>
        <trans-unit id="91ff9a612f00efc43ff0f917fc5e022bc26f334b" translate="yes" xml:space="preserve">
          <source>Is an array's name a pointer in C?
If not, what is the difference between an array's name and a pointer variable?</source>
          <target state="translated">Имя массива-это указатель на C? Если нет,то в чем разница между именем массива и переменной указателя?</target>
        </trans-unit>
        <trans-unit id="f3589d6cb1b7dd7cd7a26de719cc0c00d35826d4" translate="yes" xml:space="preserve">
          <source>It compiles fine (with 2 warnings) in gcc 4.9.2, and prints the following:</source>
          <target state="translated">Он составляет штраф (с 2 предупреждениями)в gcc 4.9.2,и печатает следующее:</target>
        </trans-unit>
        <trans-unit id="cecbc4d4228ef8dc9341b6c96bc5124fd89d0558" translate="yes" xml:space="preserve">
          <source>It doesn't allocate any &lt;code&gt;int&lt;/code&gt;s. You can modify it:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он не выделяет никаких &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; s. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете изменить это:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="16e33fca2cdd522181cf0b7ca8357efed7b62cd6" translate="yes" xml:space="preserve">
          <source>Language-wise, if C didn't expose the array as just &lt;strong&gt;some sort of &quot;pointer&quot;&lt;/strong&gt;(pedantically it's just a memory location. It cannot point to arbitrary location in memory, nor can be controlled by the programmer). We always need to code this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;По языку, если C не представляет массив как просто &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;своего рода &amp;laquo;указатель&amp;raquo;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (педантично, это просто место в памяти. Он не может указывать на произвольное место в памяти и не может контролироваться программистом). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Нам всегда нужно кодировать это:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b31097b34416d6851880556b2b66e2b1ec0639d1" translate="yes" xml:space="preserve">
          <source>Now you can use &lt;code&gt;p&lt;/code&gt; in a similar way to an array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь вы можете использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;p&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; аналогично массиву:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="23ea9fbffbc95378d5bdc4a84ac145cf46be1d5e" translate="yes" xml:space="preserve">
          <source>Remember that I said arrays don't store any metadata about their size.  As soon as that array expression &quot;decays&quot; to a pointer, all you have is a pointer to a single element.  That element may be the first of a sequence of elements, or it may be a single object.  There's no way to know based on the pointer itself.</source>
          <target state="translated">Помните,я говорил,что в массивах не хранятся метаданные об их размере.Как только выражение массива &quot;распадается&quot; на указатель,все,что у вас есть-это указатель на один элемент.Этот элемент может быть первым из последовательности элементов,или же это может быть один объект.Невозможно узнать по указателю.</target>
        </trans-unit>
        <trans-unit id="d0197e59f6275d6a2efafeb51fd00878e52c3b85" translate="yes" xml:space="preserve">
          <source>So the answer is kinda 'yes'.</source>
          <target state="translated">Так что ответ вроде как &quot;да&quot;.</target>
        </trans-unit>
        <trans-unit id="a97d455d32e853de61af180cec9ac7cd1fdea184" translate="yes" xml:space="preserve">
          <source>So, in summary, array names in a C program are (in most cases) converted to pointers. One exception is when we use the &lt;code&gt;sizeof&lt;/code&gt; operator on an array. If &lt;code&gt;a&lt;/code&gt; was converted to a pointer in this context, &lt;code&gt;sizeof a&lt;/code&gt; would give the size of a pointer and not of the actual array, which would be rather useless, so in that case &lt;code&gt;a&lt;/code&gt; means the array itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Итак, в итоге, имена массивов в программе на C (в большинстве случаев) преобразуются в указатели. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Единственное исключение - когда мы используем &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;оператор &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sizeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для массива. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в этом контексте &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;a&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; был преобразован в указатель, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sizeof a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; дал бы размер указателя, а не фактического массива, что было бы довольно бесполезно, так что в этом случае &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; означает сам массив.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3289ed5abacd7b3f3180f45fb3dd0700fbc360e8" translate="yes" xml:space="preserve">
          <source>So, the conclusion is no, the array is not a pointer, it is not stored in memory (not even read-only one) as a pointer, even though it looks like it is, since you can obtain its address with the &amp;amp; operator. But - oops - that operator does not work :-)), either way, you've been warned:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Итак, вывод - нет, массив не является указателем, он не хранится в памяти (даже не только для чтения) в качестве указателя, даже если он выглядит так, как вы, так как вы можете получить его адрес с помощью оператора &amp;amp; , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но, к сожалению, этот оператор не работает :-)), в любом случае, вы были предупреждены:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f9ca93754d462229b1356c3197d92508ff9c9fc7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;expression&lt;/em&gt;&lt;code&gt;a&lt;/code&gt; refers to the entire array, but there's no &lt;em&gt;object&lt;/em&gt;&lt;code&gt;a&lt;/code&gt; separate from the array elements themselves.  Thus, &lt;code&gt;sizeof a&lt;/code&gt; gives you the size (in bytes) of the entire array.  The expression &lt;code&gt;&amp;amp;a&lt;/code&gt; gives you the address of the array, &lt;em&gt;which is the same as the address of the first element&lt;/em&gt;.  The difference between &lt;code&gt;&amp;amp;a&lt;/code&gt; and &lt;code&gt;&amp;amp;a[0]&lt;/code&gt; is the type of the result&lt;sup&gt;1&lt;/sup&gt; - &lt;code&gt;char (*)[10]&lt;/code&gt; in the first case and &lt;code&gt;char *&lt;/code&gt; in the second.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Выражение&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; относится ко всему массиву, но нет никакого &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объекта&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; отдельно от самих элементов массива. Таким образом, &lt;/font&gt; &lt;code&gt;sizeof a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; дает вам размер (в байтах) всего массива. Выражение &lt;/font&gt; &lt;code&gt;&amp;amp;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; дает вам адрес массива, &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;который совпадает с адресом первого элемента&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Разница между &lt;/font&gt; &lt;code&gt;&amp;amp;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt; &lt;code&gt;&amp;amp;a[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; заключается в типе результата &lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt; &lt;code&gt;char (*)[10]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; в первом случае и &lt;/font&gt; &lt;code&gt;char *&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; во втором.&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0d28329fda7a89d1cc1685169ae04c78242090a3" translate="yes" xml:space="preserve">
          <source>The array name behaves like a pointer and points to the first element of the array. Example:</source>
          <target state="translated">Имя массива ведет себя как указатель и указывает на первый элемент массива.Пример:</target>
        </trans-unit>
        <trans-unit id="98874795f3a895dfe9b213af066d8f4073e1fff5" translate="yes" xml:space="preserve">
          <source>The array name by itself yields a memory location, so you can treat the array name like a pointer:</source>
          <target state="translated">Имя массива само по себе дает место в памяти,так что вы можете обращаться с именем массива как с указателем:</target>
        </trans-unit>
        <trans-unit id="0dcc422ff08a279a1e2d5cef7e653f8170067200" translate="yes" xml:space="preserve">
          <source>The difference with pointer variables is that you cannot change the location the array's name is pointing to, so is similar to a const pointer (it's similar, not the same. See Mark's comment). But also that you don't need to dereference the array name to get the value if you use pointer aritmetic:</source>
          <target state="translated">Разница с переменными-индикаторами заключается в том,что вы не можете изменить местоположение,на которое указывает имя массива,а также похоже на константный указатель (это похоже,не одно и то же.См.комментарий Марка).Но и то,что для получения значения не нужно разыменовывать имя массива,если вы используете арифметику с указателями:</target>
        </trans-unit>
        <trans-unit id="a9db9c418a7e3247f03dea45dae15f851902b4e2" translate="yes" xml:space="preserve">
          <source>The problem is that &lt;code&gt;a&lt;/code&gt; isn't a pointer or an address - it's the entire array object.  Thus, the rule in C that whenever the compiler sees an expression of array type (such as &lt;code&gt;a&lt;/code&gt;, which has type &lt;code&gt;char [10]&lt;/code&gt;) &lt;em&gt;and&lt;/em&gt; that expression isn't the operand of the &lt;code&gt;sizeof&lt;/code&gt; or unary &lt;code&gt;&amp;amp;&lt;/code&gt; operators, the type of that expression is converted (&quot;decays&quot;) to a pointer type (&lt;code&gt;char *&lt;/code&gt;), and the value of the expression is the address of the first element of the array.  Therefore, the &lt;em&gt;expression&lt;/em&gt;&lt;code&gt;a&lt;/code&gt; has the same type and value as the expression &lt;code&gt;&amp;amp;a[0]&lt;/code&gt; (and by extension, the expression &lt;code&gt;*a&lt;/code&gt; has the same type and value as the expression &lt;code&gt;a[0]&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Проблема в том, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не указатель или адрес, а весь объект массива. Таким образом, правило в C, что всякий раз, когда компилятор видит выражение типа массива (например, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , которое имеет тип &lt;/font&gt;&lt;/font&gt; &lt;code&gt;char [10]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;и&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; это выражение не является операндом &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;оператора &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sizeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или unary &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;amp;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , тип этого выражения преобразуется (&amp;laquo;распадается&amp;raquo;) в тип указателя ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;char *&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), а значением выражения является адрес первого элемента массива. Следовательно, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;выражение &lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; имеет тот же тип и значение, что и выражение &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;amp;a[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (и, соответственно, выражение &lt;/font&gt;&lt;/font&gt; &lt;code&gt;*a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;имеет тот же тип и значение, что и выражение &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f548972fa36ac45779003bea107dfbb76d2d488" translate="yes" xml:space="preserve">
          <source>The reason that this works is that the array dereferencing operator in C, &lt;code&gt;[ ]&lt;/code&gt;, is defined in terms of pointers. &lt;code&gt;x[y]&lt;/code&gt; means: start with the pointer &lt;code&gt;x&lt;/code&gt;, step &lt;code&gt;y&lt;/code&gt; elements forward after what the pointer points to, and then take whatever is there. Using pointer arithmetic syntax, &lt;code&gt;x[y]&lt;/code&gt; can also be written as &lt;code&gt;*(x+y)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Причина этого заключается в том, что оператор разыменования массива в C, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[ ]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , определяется в терминах указателей. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x[y]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; означает: начните с указателя &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; элементы &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;y&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вперед после того, на что указывает указатель, и затем возьмите все, что там есть. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Используя арифметический синтаксис указателя, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x[y]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; также можно записать как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;*(x+y)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f2dcef49a0db01e0a7c12be52a715974b939123" translate="yes" xml:space="preserve">
          <source>This does &lt;em&gt;not&lt;/em&gt; copy the contents of the array &lt;code&gt;a&lt;/code&gt; into the pointer &lt;code&gt;p&lt;/code&gt; (whatever that would mean). Instead, the array name &lt;code&gt;a&lt;/code&gt; is converted to a pointer to its first element. So that assignment does the same as the previous one.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;не&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; копирует содержимое массива &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в указатель &lt;/font&gt;&lt;/font&gt; &lt;code&gt;p&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (что бы это ни значило). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вместо этого имя массива &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; преобразуется в указатель на его первый элемент. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так что это назначение делает то же самое, что и предыдущее.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="97720397d9de5f7776ab7b47e7a8bfd49701b55a" translate="yes" xml:space="preserve">
          <source>This is what I meant to demonstrate:</source>
          <target state="translated">Вот что я хотел продемонстрировать:</target>
        </trans-unit>
        <trans-unit id="6cb72e404bfa6e3beb3f71ca01eb21c970c483b3" translate="yes" xml:space="preserve">
          <source>What can be confusing is that you can also write this:</source>
          <target state="translated">Что может сбить с толку,так это то,что вы тоже можете это написать:</target>
        </trans-unit>
        <trans-unit id="80283cb84d242a672f9326e918eb292aa25e03a1" translate="yes" xml:space="preserve">
          <source>When an array is not used as a value its name represents the whole array.</source>
          <target state="translated">Когда массив не используется в качестве значения,его имя представляет собой весь массив.</target>
        </trans-unit>
        <trans-unit id="e71642da6d1b01725d37461218c15ebb74996fb8" translate="yes" xml:space="preserve">
          <source>When an array is used as a value, its name represents the address of the first element.</source>
          <target state="translated">Когда массив используется в качестве значения,его имя представляет собой адрес первого элемента.</target>
        </trans-unit>
        <trans-unit id="8f799144b5aa153b1336a4c4f5cce1a7ac1be330" translate="yes" xml:space="preserve">
          <source>When you create an array, the only space that's allocated is the space for the elements themselves; no storage is materialized for a separate pointer or any metadata.  Given</source>
          <target state="translated">При создании массива выделяется только пространство для самих элементов;никакое хранилище не материализуется для отдельного указателя или каких-либо метаданных.Учитывая .</target>
        </trans-unit>
        <trans-unit id="433ebd018ce79b88da18999315449f05dc8d71b1" translate="yes" xml:space="preserve">
          <source>When you pass an array expression to a function, all the function receives is a pointer to the first element - it has no idea how big the array is (this is why the &lt;code&gt;gets&lt;/code&gt; function was such a menace and was eventually removed from the library).  For the function to know how many elements the array has, you must either use a sentinel value (such as the 0 terminator in C strings) or you must pass the number of elements as a separate parameter.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда вы передаете выражение массива в функцию, все, что получает функция - это указатель на первый элемент - он не знает, насколько большой массив (именно поэтому &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;функция &lt;/font&gt;&lt;/font&gt; &lt;code&gt;gets&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; была такой угрозой и была в конечном итоге удалена из библиотеки) , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чтобы функция знала, сколько элементов в массиве, вы должны либо использовать значение часового (например, терминатор 0 в строках C), либо вы должны передать количество элементов в качестве отдельного параметра.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="444cd2ba614efe0a40a0f07d2e8b928989698ac1" translate="yes" xml:space="preserve">
          <source>Where things get weird is when you want to access individual elements - the expression &lt;code&gt;a[i]&lt;/code&gt; is defined as the result of &lt;code&gt;*(a + i)&lt;/code&gt; - given an address value &lt;code&gt;a&lt;/code&gt;, offset &lt;code&gt;i&lt;/code&gt; elements (&lt;em&gt;not bytes&lt;/em&gt;) from that address and dereference the result.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вещи становятся странными, когда вы хотите получить доступ к отдельным элементам - выражение &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a[i]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; определяется как результат &lt;/font&gt;&lt;/font&gt; &lt;code&gt;*(a + i)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - с учетом значения адреса &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , смещения &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;элементов &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;не байтов&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) от этого адреса и разыменования результат.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce975dab7db08d876a488028d14f674ddd0355a7" translate="yes" xml:space="preserve">
          <source>allocates memory for 10 &lt;code&gt;int&lt;/code&gt;s. You can't modify &lt;code&gt;a&lt;/code&gt; but you can do pointer arithmetic with &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;выделяет память на 10 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; s. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы не можете изменить &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;но вы можете сделать арифметические операции над &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;указателями с &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b8183efb0be6881053c90b57f32320ef2303983c" translate="yes" xml:space="preserve">
          <source>and use array subscripts as you can with a:</source>
          <target state="translated">и использовать массивные подписки,как вы можете с помощью a:</target>
        </trans-unit>
        <trans-unit id="bd65de0a4b51328a21a99edd332b685d63966d06" translate="yes" xml:space="preserve">
          <source>oops :-)</source>
          <target state="translated">ой :-)</target>
        </trans-unit>
        <trans-unit id="c4fcaf9177247fe669b7a709778a547acbac41d5" translate="yes" xml:space="preserve">
          <source>what you get in memory is</source>
          <target state="translated">то,что ты получаешь в памяти</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
