<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/1641957">
    <body>
      <group id="1641957">
        <trans-unit id="a65b63696c33e0257a6a7d898695f32a537f1f5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; contains space for seven integers, and you can put a value in one of them with an assignment, like this:</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 7 개의 정수를위한 공간을 포함하며, 다음과 같이 대입으로 값 중 하나에 값을 넣을 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8af120010556eba3c3b2a7bad71ae9d8d645b402" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;p&lt;/code&gt; doesn't contain any spaces for integers, but it can point to a space for an integer. We can, for example, set it to point to one of the places in the array &lt;code&gt;a&lt;/code&gt;, such as the first one:</source>
          <target state="translated">&lt;code&gt;p&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 정수를위한 공백을 포함하지 않지만 정수를위한 공백을 가리킬 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 배열 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 첫 번째 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;장소 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;와 같은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;장소 중 하나를 가리 키도록 설정할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a0e3f2feb92d1b5feba526fda2d2ab318506af4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Edit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="36c71ee593be8556de149c97168c4774739f6dca" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;li&gt;Which *may* affect how the address value is interpreted - depends on the machine.&lt;/li&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3b1981349530961f711b6dde2175785818e28c8e" translate="yes" xml:space="preserve">
          <source>A pointer like this allocates memory for just the pointer &lt;code&gt;p&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이와 같은 포인터는 포인터 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;p&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에만 메모리를 할당합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="da1c1c9d22ab49cd630b97c63360a180e96b79e6" translate="yes" xml:space="preserve">
          <source>An array declared like this</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이와 같이 선언 된 배열&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f2d1d4b464535d85f938c9fc1b4cfdac71b16845" translate="yes" xml:space="preserve">
          <source>An array is a collection of secuential and contiguous elements in memory. In C an array's name is the index to the first element, and applying an offset you can access the rest of elements.
An &quot;index to the first element&quot; is indeed a pointer to a memory direction.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열은 메모리에있는 연속적이고 연속적인 요소의 모음입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C에서 배열의 이름은 첫 번째 요소의 색인이며 오프셋을 적용하면 나머지 요소에 액세스 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;제 1 요소에 대한 인덱스&quot;는 실제로 메모리 방향에 대한 포인터이다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49216096309a8b134d13a16eff464e7b50905513" translate="yes" xml:space="preserve">
          <source>An array is an array and a pointer is a pointer, but in most cases array names are &lt;em&gt;converted&lt;/em&gt; to pointers. A term often used is that they &lt;em&gt;decay&lt;/em&gt; to pointers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열은 배열이고 포인터는 포인터이지만 대부분의 경우 배열 이름은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;포인터 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로 변환&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자주 사용되는 용어는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;포인터로 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;쇠퇴&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 한다는 것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cb191b43cbfa05cc8f4b650113cdbb910d1d8f8e" translate="yes" xml:space="preserve">
          <source>And other nifty stuff you can do to pointer (e.g. adding/substracting an offset), you can also do to an array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 포인터에 대해 할 수있는 다른 멋진 것들 (예 : 오프셋 추가 / 빼기)은 배열에 할 수도 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4acf022bcade8c95cfb9c03697ff65b8d99428f5" translate="yes" xml:space="preserve">
          <source>Answering the question in the comment:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의견의 질문에 대답 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27a6c0b546c4d3c425a0ab9158f3517403572a6f" translate="yes" xml:space="preserve">
          <source>Array name is the address of 1st element of an array. So yes array name is a const pointer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열 이름은 배열의 첫 번째 요소의 주소입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예, 배열 이름은 const 포인터입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f74a5048a36b59f77a0535c2113470eb8139cba4" translate="yes" xml:space="preserve">
          <source>Both the print statements will give exactly same output for a machine. In my system it gave:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 인쇄 문 모두 기계에 대해 정확히 동일한 출력을 제공합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 시스템에서 그것은 주었다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e980bf5df5a6b0791e7999f54355eb789d75f96" translate="yes" xml:space="preserve">
          <source>C was derived from an earlier language called B, and in B &lt;code&gt;a&lt;/code&gt;&lt;em&gt;was&lt;/em&gt; a separate pointer object from the array elements &lt;code&gt;a[0]&lt;/code&gt;, &lt;code&gt;a[1]&lt;/code&gt;, etc.  Ritchie wanted to keep B's array semantics, but he didn't want to mess with storing the separate pointer object.  So he got rid of it.  Instead, the compiler will convert array expressions to pointer expressions during translation as necessary.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C는 B라는 초기 언어에서 파생되었으며 B에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 배열 요소 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 등과 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;별도의 포인터 객체 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;였습니다&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Ritchie는 B의 배열 의미를 유지하려고했지만 원하지는 않았습니다. 별도의 포인터 객체를 저장하는 데 어려움이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래서 그는 그것을 제거했다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대신, 컴파일러는 필요에 따라 변환 중에 배열 표현식을 포인터 표현식으로 변환합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="785394bb3c2dd7a2e69abfa10c8f6b5f9a143f13" translate="yes" xml:space="preserve">
          <source>C++ refuses any such attempts with errors in compile-time.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C ++은 컴파일 타임에 오류가있는 그러한 시도를 거부합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c79c2f8fe6cef139b77391f6699a0512a187188" translate="yes" xml:space="preserve">
          <source>Edit:</source>
          <target state="translated">Edit:</target>
        </trans-unit>
        <trans-unit id="dc832d2b81bf05bf8b249d7318841b3f1d696256" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;c&lt;/code&gt; and &lt;code&gt;a&lt;/code&gt; &quot;point&quot; to the same memory, you can obtain address of the &lt;code&gt;c&lt;/code&gt; pointer, but you cannot obtain the address of the &lt;code&gt;a&lt;/code&gt; pointer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비록 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;같은 메모리에 &quot;포인트&quot;, 당신의 주소를 얻을 수 있습니다 &lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 포인터를, 그러나 당신은의 주소를 얻을 수 없습니다 &lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 포인터.&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff4533c11ca4835b8de0c93a3bff2a5c686d812b" translate="yes" xml:space="preserve">
          <source>For this to work with a normal array, such as our &lt;code&gt;a&lt;/code&gt;, the name &lt;code&gt;a&lt;/code&gt; in &lt;code&gt;a[3]&lt;/code&gt; must first be converted to a pointer (to the first element in &lt;code&gt;a&lt;/code&gt;). Then we step 3 elements forward, and take whatever is there. In other words: take the element at position 3 in the array. (Which is the fourth element in the array, since the first one is numbered 0.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적인 배열로 작업이 예를 들어 우리 같은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, 이름 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 &lt;/font&gt; &lt;code&gt;a[3]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 제 (첫 번째 요소에 대한 포인터로 변환되어야 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;). 그런 다음 3 단계 요소를 앞으로 진행하고 모든 요소를 ​​가져옵니다. 다시 말해, 배열에서 3 번째 위치에있는 요소를 가져옵니다. (첫 번째 요소의 번호는 0이므로 배열의 네 번째 요소는 어느 것입니까?)&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="04d0043ae1c3750d8c0596233e2b3a656c8cc9dc" translate="yes" xml:space="preserve">
          <source>Here is a pointer:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 포인터입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4f58e12c03f35b97de868fb6ccbc823b9cf25d84" translate="yes" xml:space="preserve">
          <source>Here is an array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26fdb55537479116b8bb70c902712035182e615d" translate="yes" xml:space="preserve">
          <source>I think this example sheds some light on the issue:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 예제는이 문제에 대해 약간의 지적을합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e52fdc0c02ae77c45834fad2bc8b942e05d4df6c" translate="yes" xml:space="preserve">
          <source>If I use sizeof, do i count the size of only the elements of the array? Then the array &amp;ldquo;head&amp;rdquo; also takes up space with the information about length and a pointer (and this means that it takes more space, than a normal pointer would)?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;sizeof를 사용하면 배열 요소의 크기 만 계산합니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 배열 &quot;head&quot;는 길이와 포인터에 대한 정보로 공간을 차지합니다 (그리고 이것은 일반적인 포인터보다 더 많은 공간을 차지한다는 것을 의미합니까?).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43bba69b9ac50d749365e68162dec25883d49421" translate="yes" xml:space="preserve">
          <source>If an expression of array type (such as the array name) appears in a larger expression and it isn't the operand of either the &lt;code&gt;&amp;amp;&lt;/code&gt; or &lt;code&gt;sizeof&lt;/code&gt; operators, then the type of the array expression is converted from &quot;N-element array of T&quot; to &quot;pointer to T&quot;, and the value of the expression is the address of the first element in the array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열 유형의 표현식 (예 : 배열 이름)이 더 큰 표현식에 나타나고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;amp;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sizeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 연산자 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 피연산자가 아닌 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우 배열 표현식의 유형은 &quot;T의 N- 요소 배열에서 변환됩니다. &quot;에서&quot;포인터로의 포인터 &quot;, 식의 값은 배열에서 첫 번째 요소의 주소입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba70f7455ba6c29acbc8157772437ec33ae3725d" translate="yes" xml:space="preserve">
          <source>In short, the array name is not a pointer, but in most contexts it is treated &lt;em&gt;as though&lt;/em&gt; it were a pointer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;간단히 말해 배열 이름은 포인터가 아니지만 대부분의 상황에서 포인터 인 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것처럼&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 취급 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;됩니다&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="82d89c2db0d03b410e54277f35b6ed4060a4a4c1" translate="yes" xml:space="preserve">
          <source>Is an array name a pointer</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열 이름이 포인터입니까&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91ff9a612f00efc43ff0f917fc5e022bc26f334b" translate="yes" xml:space="preserve">
          <source>Is an array's name a pointer in C?
If not, what is the difference between an array's name and a pointer variable?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열의 이름이 C의 포인터입니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇지 않으면 배열의 이름과 포인터 변수의 차이점은 무엇입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f3589d6cb1b7dd7cd7a26de719cc0c00d35826d4" translate="yes" xml:space="preserve">
          <source>It compiles fine (with 2 warnings) in gcc 4.9.2, and prints the following:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;gcc 4.9.2에서 잘 컴파일되고 (경고 2 개) 다음을 인쇄합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cecbc4d4228ef8dc9341b6c96bc5124fd89d0558" translate="yes" xml:space="preserve">
          <source>It doesn't allocate any &lt;code&gt;int&lt;/code&gt;s. You can modify it:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 할당하지 않습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수정할 수 있습니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="16e33fca2cdd522181cf0b7ca8357efed7b62cd6" translate="yes" xml:space="preserve">
          <source>Language-wise, if C didn't expose the array as just &lt;strong&gt;some sort of &quot;pointer&quot;&lt;/strong&gt;(pedantically it's just a memory location. It cannot point to arbitrary location in memory, nor can be controlled by the programmer). We always need to code this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C가 배열 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 &quot;포인터&quot;의 일종&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 으로 노출시키지 않은 경우 언어 적으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메모리 위치입니다 (메모리 위치 일뿐입니다. 메모리의 임의 위치를 ​​가리킬 수 없으며 프로그래머가 제어 할 수도 없음). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 항상 이것을 코딩해야합니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b31097b34416d6851880556b2b66e2b1ec0639d1" translate="yes" xml:space="preserve">
          <source>Now you can use &lt;code&gt;p&lt;/code&gt; in a similar way to an array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열과 비슷한 방식으로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;p&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="23ea9fbffbc95378d5bdc4a84ac145cf46be1d5e" translate="yes" xml:space="preserve">
          <source>Remember that I said arrays don't store any metadata about their size.  As soon as that array expression &quot;decays&quot; to a pointer, all you have is a pointer to a single element.  That element may be the first of a sequence of elements, or it may be a single object.  There's no way to know based on the pointer itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열은 크기에 대한 메타 데이터를 저장하지 않는다는 것을 기억하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열 표현식이 포인터로 &quot;부패&quot;하자마자 단일 요소에 대한 포인터입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 요소는 일련의 요소 중 첫 번째 요소이거나 단일 객체 일 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;포인터 자체를 기반으로 알 방법이 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d0197e59f6275d6a2efafeb51fd00878e52c3b85" translate="yes" xml:space="preserve">
          <source>So the answer is kinda 'yes'.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;답은 '예'입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a97d455d32e853de61af180cec9ac7cd1fdea184" translate="yes" xml:space="preserve">
          <source>So, in summary, array names in a C program are (in most cases) converted to pointers. One exception is when we use the &lt;code&gt;sizeof&lt;/code&gt; operator on an array. If &lt;code&gt;a&lt;/code&gt; was converted to a pointer in this context, &lt;code&gt;sizeof a&lt;/code&gt; would give the size of a pointer and not of the actual array, which would be rather useless, so in that case &lt;code&gt;a&lt;/code&gt; means the array itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 요약하면 C 프로그램의 배열 이름은 (대부분의 경우) 포인터로 변환됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sizeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 연산자를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하는 경우는 예외입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이러한 문맥에 대한 포인터로 변환하고, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sizeof a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 그래서이 경우, 포인터의 크기를 포기하지 다소 쓸모없는 것이 실제 배열의 것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수단을 배열 자체.&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3289ed5abacd7b3f3180f45fb3dd0700fbc360e8" translate="yes" xml:space="preserve">
          <source>So, the conclusion is no, the array is not a pointer, it is not stored in memory (not even read-only one) as a pointer, even though it looks like it is, since you can obtain its address with the &amp;amp; operator. But - oops - that operator does not work :-)), either way, you've been warned:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 결론은 아니오입니다. 배열은 포인터가 아니며 &amp;amp;처럼 연산자를 사용하여 주소를 얻을 수 있기 때문에 메모리처럼 (읽기 전용이 아닌) 포인터로 저장되지 않습니다. . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나-죄송합니다-그 연산자는 작동하지 않습니다 :-)), 당신은 어느 쪽이든 경고를 받았습니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f9ca93754d462229b1356c3197d92508ff9c9fc7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;expression&lt;/em&gt;&lt;code&gt;a&lt;/code&gt; refers to the entire array, but there's no &lt;em&gt;object&lt;/em&gt;&lt;code&gt;a&lt;/code&gt; separate from the array elements themselves.  Thus, &lt;code&gt;sizeof a&lt;/code&gt; gives you the size (in bytes) of the entire array.  The expression &lt;code&gt;&amp;amp;a&lt;/code&gt; gives you the address of the array, &lt;em&gt;which is the same as the address of the first element&lt;/em&gt;.  The difference between &lt;code&gt;&amp;amp;a&lt;/code&gt; and &lt;code&gt;&amp;amp;a[0]&lt;/code&gt; is the type of the result&lt;sup&gt;1&lt;/sup&gt; - &lt;code&gt;char (*)[10]&lt;/code&gt; in the first case and &lt;code&gt;char *&lt;/code&gt; in the second.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;식 &lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 전체 어레이를 지칭하지만 없다 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 배열 요소 자체는 별개. 따라서 &lt;/font&gt; &lt;code&gt;sizeof a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 전체 배열의 크기 (바이트)를 제공합니다. &lt;/font&gt; &lt;code&gt;&amp;amp;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 표현식 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 배열 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 주소를 제공하며 이는 첫 번째 요소의 주소와 동일합니다&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt; &lt;code&gt;&amp;amp;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt; &lt;code&gt;&amp;amp;a[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 차이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 첫 번째 경우 &lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt; &lt;code&gt;char (*)[10]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 두 번째는 &lt;/font&gt; &lt;code&gt;char *&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 결과 유형입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0d28329fda7a89d1cc1685169ae04c78242090a3" translate="yes" xml:space="preserve">
          <source>The array name behaves like a pointer and points to the first element of the array. Example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열 이름은 포인터처럼 동작하며 배열의 첫 번째 요소를 가리 킵니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="98874795f3a895dfe9b213af066d8f4073e1fff5" translate="yes" xml:space="preserve">
          <source>The array name by itself yields a memory location, so you can treat the array name like a pointer:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열 이름 자체는 메모리 위치를 생성하므로 배열 이름을 포인터처럼 취급 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0dcc422ff08a279a1e2d5cef7e653f8170067200" translate="yes" xml:space="preserve">
          <source>The difference with pointer variables is that you cannot change the location the array's name is pointing to, so is similar to a const pointer (it's similar, not the same. See Mark's comment). But also that you don't need to dereference the array name to get the value if you use pointer aritmetic:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;포인터 변수와의 차이점은 배열의 이름이 가리키는 위치를 변경할 수 없으므로 const 포인터와 유사합니다 (유사하지 않습니다. 마크 주석 참조). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 포인터 aritmetic을 사용하는 경우 값을 얻기 위해 배열 이름을 역 참조 할 필요가 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a9db9c418a7e3247f03dea45dae15f851902b4e2" translate="yes" xml:space="preserve">
          <source>The problem is that &lt;code&gt;a&lt;/code&gt; isn't a pointer or an address - it's the entire array object.  Thus, the rule in C that whenever the compiler sees an expression of array type (such as &lt;code&gt;a&lt;/code&gt;, which has type &lt;code&gt;char [10]&lt;/code&gt;) &lt;em&gt;and&lt;/em&gt; that expression isn't the operand of the &lt;code&gt;sizeof&lt;/code&gt; or unary &lt;code&gt;&amp;amp;&lt;/code&gt; operators, the type of that expression is converted (&quot;decays&quot;) to a pointer type (&lt;code&gt;char *&lt;/code&gt;), and the value of the expression is the address of the first element of the array.  Therefore, the &lt;em&gt;expression&lt;/em&gt;&lt;code&gt;a&lt;/code&gt; has the same type and value as the expression &lt;code&gt;&amp;amp;a[0]&lt;/code&gt; (and by extension, the expression &lt;code&gt;*a&lt;/code&gt; has the same type and value as the expression &lt;code&gt;a[0]&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문제는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 포인터 또는 주소가 아니라 전체 배열 객체라는 것입니다. 따라서, C의 규칙은 컴파일러 (예 어레이 형의 식 보는 것과마다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;형 가지며, &lt;/font&gt; &lt;code&gt;char [10]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; )을 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 그 표현식의 피연산자 아니다 &lt;/font&gt; &lt;code&gt;sizeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 단항 &lt;/font&gt; &lt;code&gt;&amp;amp;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 연산자, 즉 표현식의 타입 는 포인터 유형 ( &lt;/font&gt; &lt;code&gt;char *&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;으로 변환 ( &quot;감소&quot;)되고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;표현식의 값은 배열의 첫 번째 요소의 주소입니다. 따라서 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;표현식 &lt;/font&gt;&lt;/em&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 표현식 &lt;/font&gt; &lt;code&gt;&amp;amp;a[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 동일한 유형 및 값을 갖습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(확장하여 표현식 &lt;/font&gt; &lt;code&gt;*a&lt;/code&gt; &lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;a[0]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 식과 동일한 유형 및 값을 갖습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f548972fa36ac45779003bea107dfbb76d2d488" translate="yes" xml:space="preserve">
          <source>The reason that this works is that the array dereferencing operator in C, &lt;code&gt;[ ]&lt;/code&gt;, is defined in terms of pointers. &lt;code&gt;x[y]&lt;/code&gt; means: start with the pointer &lt;code&gt;x&lt;/code&gt;, step &lt;code&gt;y&lt;/code&gt; elements forward after what the pointer points to, and then take whatever is there. Using pointer arithmetic syntax, &lt;code&gt;x[y]&lt;/code&gt; can also be written as &lt;code&gt;*(x+y)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 작동하는 이유는 C &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[ ]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 배열 역 참조 연산자 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가 포인터로 정의 되었기 때문입니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x[y]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의미 : 포인터 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; 로&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 시작하고, 포인터가 가리키는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것보다 앞뒤로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;단계 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 요소를 이동 한 다음 존재하는 모든 것을 가져옵니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;포인터 산술 구문을 사용하여 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x[y]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;*(x+y)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 쓸 수도 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f2dcef49a0db01e0a7c12be52a715974b939123" translate="yes" xml:space="preserve">
          <source>This does &lt;em&gt;not&lt;/em&gt; copy the contents of the array &lt;code&gt;a&lt;/code&gt; into the pointer &lt;code&gt;p&lt;/code&gt; (whatever that would mean). Instead, the array name &lt;code&gt;a&lt;/code&gt; is converted to a pointer to its first element. So that assignment does the same as the previous one.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열 &lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 내용을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;포인터 &lt;/font&gt; &lt;code&gt;p&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 복사 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;않습니다&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (의미 한 것은 무엇이든). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대신 배열 이름 &lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 첫 번째 요소에 대한 포인터로 변환됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;할당은 이전과 동일합니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="97720397d9de5f7776ab7b47e7a8bfd49701b55a" translate="yes" xml:space="preserve">
          <source>This is what I meant to demonstrate:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 내가 설명하려는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6cb72e404bfa6e3beb3f71ca01eb21c970c483b3" translate="yes" xml:space="preserve">
          <source>What can be confusing is that you can also write this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;혼란스러운 점은 다음과 같이 쓸 수도 있다는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="80283cb84d242a672f9326e918eb292aa25e03a1" translate="yes" xml:space="preserve">
          <source>When an array is not used as a value its name represents the whole array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열을 값으로 사용하지 않으면 이름이 전체 배열을 나타냅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e71642da6d1b01725d37461218c15ebb74996fb8" translate="yes" xml:space="preserve">
          <source>When an array is used as a value, its name represents the address of the first element.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열을 값으로 사용하면 해당 이름은 첫 번째 요소의 주소를 나타냅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f799144b5aa153b1336a4c4f5cce1a7ac1be330" translate="yes" xml:space="preserve">
          <source>When you create an array, the only space that's allocated is the space for the elements themselves; no storage is materialized for a separate pointer or any metadata.  Given</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열을 만들 때 할당 된 유일한 공간은 요소 자체를위한 공간입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;별도의 포인터 또는 메타 데이터를 위해 스토리지가 구체화되지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주어진&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="433ebd018ce79b88da18999315449f05dc8d71b1" translate="yes" xml:space="preserve">
          <source>When you pass an array expression to a function, all the function receives is a pointer to the first element - it has no idea how big the array is (this is why the &lt;code&gt;gets&lt;/code&gt; function was such a menace and was eventually removed from the library).  For the function to know how many elements the array has, you must either use a sentinel value (such as the 0 terminator in C strings) or you must pass the number of elements as a separate parameter.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열 표현식을 함수에 전달할 때받는 모든 함수는 첫 번째 요소에 대한 포인터입니다. 배열의 크기를 알 수 없습니다 (이렇게하면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;gets&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수가 그러한 위협이되어 결국 라이브러리에서 제거 된 것입니다) . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수가 배열의 요소 수를 알기 위해서는 센티넬 값 (예 : C 문자열의 0 종결 자)을 사용하거나 요소 수를 별도의 매개 변수로 전달해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="444cd2ba614efe0a40a0f07d2e8b928989698ac1" translate="yes" xml:space="preserve">
          <source>Where things get weird is when you want to access individual elements - the expression &lt;code&gt;a[i]&lt;/code&gt; is defined as the result of &lt;code&gt;*(a + i)&lt;/code&gt; - given an address value &lt;code&gt;a&lt;/code&gt;, offset &lt;code&gt;i&lt;/code&gt; elements (&lt;em&gt;not bytes&lt;/em&gt;) from that address and dereference the result.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;개별 요소에 액세스하고 싶을 때 이상한 점이 있습니다. 표현식 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a[i]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;*(a + i)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 결과로 정의됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-주소 값 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 주소에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 요소 ( &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;바이트가&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 아님)를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오프셋 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고 역 참조 결과.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce975dab7db08d876a488028d14f674ddd0355a7" translate="yes" xml:space="preserve">
          <source>allocates memory for 10 &lt;code&gt;int&lt;/code&gt;s. You can't modify &lt;code&gt;a&lt;/code&gt; but you can do pointer arithmetic with &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;10 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 동안 메모리를 할당합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 수정할 수 없습니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하지만 당신과 포인터 연산을 수행 할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b8183efb0be6881053c90b57f32320ef2303983c" translate="yes" xml:space="preserve">
          <source>and use array subscripts as you can with a:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같이 배열 첨자를 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd65de0a4b51328a21a99edd332b685d63966d06" translate="yes" xml:space="preserve">
          <source>oops :-)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;죄송합니다 :-)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c4fcaf9177247fe669b7a709778a547acbac41d5" translate="yes" xml:space="preserve">
          <source>what you get in memory is</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기억에 남는 것은&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
