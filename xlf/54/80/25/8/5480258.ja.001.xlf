<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/5480258">
    <body>
      <group id="5480258">
        <trans-unit id="d19081f167ffb359a6062d4c2fb26b587a982fe1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.gnu.org/software/parallel/parallel_tutorial.html&quot;&gt;&lt;code&gt;parallel&lt;/code&gt;&lt;/a&gt; has many operating modes, but generally parallelizes any command you give it while allowing you to set limits on the number of processes. You can alter the &lt;code&gt;--jobs 2&lt;/code&gt; parameter to allow faster operation, but I had problems with Github's &lt;a href=&quot;https://developer.github.com/v3/#rate-limiting&quot;&gt;rate limits&lt;/a&gt;, which are currently 5000/hr, but also seems to have an undocumented short-term limit as well.</source>
          <target state="translated">&lt;a href=&quot;https://www.gnu.org/software/parallel/parallel_tutorial.html&quot;&gt; &lt;code&gt;parallel&lt;/code&gt; に&lt;/a&gt;は多くの操作モードがありますが、一般的には、コマンドの数を制限しながら、コマンドを並列化します。 &lt;code&gt;--jobs 2&lt;/code&gt; パラメーターを変更してより高速な操作を許可できますが、Githubの&lt;a href=&quot;https://developer.github.com/v3/#rate-limiting&quot;&gt;レート制限に&lt;/a&gt;問題がありました。現在の制限は5000 / hrですが、文書化されていない短期的な制限もあるようです。</target>
        </trans-unit>
        <trans-unit id="160350dc95c85d71676bbd6ca272aa53e9a52c67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xargs&lt;/code&gt; can run processes in parallel too. Method 2 with &lt;code&gt;xargs&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;xargs&lt;/code&gt; はプロセスを並行して実行することもできます。 &lt;code&gt;xargs&lt;/code&gt; を使用する方法2：</target>
        </trans-unit>
        <trans-unit id="0ad551689c3b74d4e6738234cae709b58714c6ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Clean up local tags&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ローカルタグを整理する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e57b95d466e8d449c2a195b1d4064b482731a4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Delete All Local Tags &amp;amp; Exclude Expression From Delete&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;すべてのローカルタグを削除し、式を削除から除外&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c3aba03274cae9aee7e2cf821948b1273787c45a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Delete All Remote Tags &amp;amp; Exclude Expression From Delete&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;すべてのリモートタグを削除し、式を削除から除外する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="95d26886e25853b37e6ea1fc8870de3a5c74ca7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Delete all local tags and get the list of remote tags&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;すべてのローカルタグを削除し、リモートタグのリストを取得します&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="2feb93e518663b0b87bbac1cbd233a538d2a9503" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remove all remote tags&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;すべてのリモートタグを削除&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1ea1f6095194e8ef9066561f87596b5310792919" translate="yes" xml:space="preserve">
          <source>A more straightforward way is</source>
          <target state="translated">もっとわかりやすい方法は</target>
        </trans-unit>
        <trans-unit id="67e7b1c4cb1ea5144d490fcdc54477c82672a24c" translate="yes" xml:space="preserve">
          <source>A real world example where you push your master branch to the origin's master branch is:</source>
          <target state="translated">自分のマスターブランチをオリジンのマスターブランチに押し付ける実例は</target>
        </trans-unit>
        <trans-unit id="145a14613815407dc3242c1a414f1f3974d162db" translate="yes" xml:space="preserve">
          <source>Add the following to your ~/.gitconfig</source>
          <target state="translated">以下を ~.gitconfig に追加します。</target>
        </trans-unit>
        <trans-unit id="261ee70421d8e47505f15e048b1971b714f48f05" translate="yes" xml:space="preserve">
          <source>After both of these methods, you'll probably want to delete your local tags too.
This is much faster so we can go back to using &lt;code&gt;xargs&lt;/code&gt; and &lt;code&gt;git tag -d&lt;/code&gt;, which is sufficient.</source>
          <target state="translated">これらの両方の方法の後で、おそらくローカルタグも削除する必要があります。 これははるかに高速であるため、 &lt;code&gt;xargs&lt;/code&gt; と &lt;code&gt;git tag -d&lt;/code&gt; を使用すれば十分です。</target>
        </trans-unit>
        <trans-unit id="fd2ed873bc41d2b3a6485089f1f3d2b6751b5025" translate="yes" xml:space="preserve">
          <source>After reading through these answers while needing to delete over 11,000 tags, I learned these methods relying or &lt;code&gt;xargs&lt;/code&gt; take far too long, unless you have hours to burn.</source>
          <target state="translated">11,000を超えるタグを削除する必要がある間にこれらの回答を読んだ後、これらのメソッドに依存していること、または &lt;code&gt;xargs&lt;/code&gt; に何時間も書き込む必要がない限り、時間がかかりすぎることを学びました。</target>
        </trans-unit>
        <trans-unit id="f966d6f78454757e444690a95eaffc4e0b5aaafa" translate="yes" xml:space="preserve">
          <source>After this, you'll probably want to delete your local tags too.
This is much faster so we can go back to using &lt;code&gt;xargs&lt;/code&gt; and &lt;code&gt;git tag -d&lt;/code&gt;, which is sufficient.</source>
          <target state="translated">この後、おそらくローカルタグも削除する必要があります。 これははるかに高速であるため、 &lt;code&gt;xargs&lt;/code&gt; と &lt;code&gt;git tag -d&lt;/code&gt; を使用すれば十分です。</target>
        </trans-unit>
        <trans-unit id="87a5adcd43e294f70fc886576fb4456bb6059ebf" translate="yes" xml:space="preserve">
          <source>Also, if you deleted a tag locally but not on the remote origins, and you want to delete it everywhere, then just create a new tag that has the same name and is attached at the same commit as the origins. Then, repeat the steps above to delete everywhere.</source>
          <target state="translated">また、ローカルでは削除したがリモートのオリジンでは削除していないタグをどこでも削除したい場合は、同じ名前でオリジンと同じコミットでアタッチされている新しいタグを作成すればいいだけです。そして、上記の手順を繰り返して、どこでも削除します。</target>
        </trans-unit>
        <trans-unit id="14f2a55e43da30cda70a2be933fc97db31a5a16e" translate="yes" xml:space="preserve">
          <source>As @CubanX suggested, I've split this answer from my original:</source>
          <target state="translated">@CubanXさんのご指摘の通り、この回答を元の回答と割り切っています。</target>
        </trans-unit>
        <trans-unit id="64dd60fe1a049fe6db3eb1369dec2e42bf428e21" translate="yes" xml:space="preserve">
          <source>Background</source>
          <target state="translated">Background</target>
        </trans-unit>
        <trans-unit id="b801fee08ad2e01f0f35af2d2f1bcc4761cd3bfe" translate="yes" xml:space="preserve">
          <source>By omitting the source ref (the part before the colon), you push 'nothing' to the destination, deleting the ref on the remote end.</source>
          <target state="translated">ソースの ref (コロンの前の部分)を省略することで、宛先に 'nothing' をプッシュし、リモート側の ref を削除します。</target>
        </trans-unit>
        <trans-unit id="b53bb5f065cf7680ade2576c64269e66692b73ab" translate="yes" xml:space="preserve">
          <source>Call script (e.g.</source>
          <target state="translated">呼び出しスクリプト</target>
        </trans-unit>
        <trans-unit id="2838b7ea6d52bb239b80200264eb6211ed00e59f" translate="yes" xml:space="preserve">
          <source>Create shell script file (e.g. git-tag-purge.sh) and paste content.</source>
          <target state="translated">シェルスクリプトファイル(git-tag-purge.shなど)を作成し、内容を貼り付けます。</target>
        </trans-unit>
        <trans-unit id="b292248954ec1b508bb7fac04741261deaeb995f" translate="yes" xml:space="preserve">
          <source>Delete local tag '12345'</source>
          <target state="translated">ローカルタグ '12345' を削除</target>
        </trans-unit>
        <trans-unit id="12d9ce3b72ca31fe4427dc8982edb00cecd5a58f" translate="yes" xml:space="preserve">
          <source>Delete remote tag '12345' (eg; GitHub version too)</source>
          <target state="translated">リモートタグ '12345' を削除 (例:GitHub バージョンも)</target>
        </trans-unit>
        <trans-unit id="f819788293406df6ce8eb6c7a30d38fbb9c79f81" translate="yes" xml:space="preserve">
          <source>First line, deletes &lt;code&gt;your_tag_name&lt;/code&gt; from &lt;strong&gt;local&lt;/strong&gt; repo.</source>
          <target state="translated">1行目、 &lt;code&gt;your_tag_name&lt;/code&gt; を&lt;strong&gt;ローカル&lt;/strong&gt;リポジトリから削除します。</target>
        </trans-unit>
        <trans-unit id="8e49c9c9a51e873a0869c2274e8434ef3bc5123f" translate="yes" xml:space="preserve">
          <source>From your terminal, do this:</source>
          <target state="translated">あなたの端末から、このようにしてください。</target>
        </trans-unit>
        <trans-unit id="5186c72df85471f833975478bd7e2335aca6b733" translate="yes" xml:space="preserve">
          <source>Here is a local testcase to test it locally without messing with a remote:</source>
          <target state="translated">ここでは、リモートをいじらずにローカルでテストするためのローカルテストケースを紹介します。</target>
        </trans-unit>
        <trans-unit id="b3ec301374e1816733bf9944b70287a9eb8bd7cc" translate="yes" xml:space="preserve">
          <source>Here is a method which is several times faster than &lt;code&gt;xargs&lt;/code&gt; and may scale much more with tweaking. It uses the &lt;a href=&quot;http://developer.github.com/v3/git/refs/#delete-a-reference&quot;&gt;Github API&lt;/a&gt;, a personal access token, and leverages the utility &lt;a href=&quot;http://www.gnu.org/software/parallel/parallel_tutorial.html&quot;&gt;&lt;code&gt;parallel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下は、 &lt;code&gt;xargs&lt;/code&gt; の数倍の速さのメソッドであり、微調整を行うことでより多くのスケーリングが可能です。 個人のアクセストークンである&lt;a href=&quot;http://developer.github.com/v3/git/refs/#delete-a-reference&quot;&gt;Github APIを&lt;/a&gt;使用し、ユーティリティ&lt;a href=&quot;http://www.gnu.org/software/parallel/parallel_tutorial.html&quot;&gt; &lt;code&gt;parallel&lt;/code&gt; &lt;/a&gt;を活用します。</target>
        </trans-unit>
        <trans-unit id="4febdab477c7c1f70388e250bda2f44394e0e6f0" translate="yes" xml:space="preserve">
          <source>Hi just wanted to share an alias I created which does the same thing:</source>
          <target state="translated">私が作成したエイリアスを共有したいと思いました。</target>
        </trans-unit>
        <trans-unit id="d09107b9453553d632546020f1513decb539e5fa" translate="yes" xml:space="preserve">
          <source>How do you delete a Git tag that has already been pushed?</source>
          <target state="translated">すでにプッシュされている Git タグを削除するには?</target>
        </trans-unit>
        <trans-unit id="7931a84fc9685812ae1f38df9ee4b75ca9e5c06d" translate="yes" xml:space="preserve">
          <source>How does this work?
The normal, line-separated list of tags is converted to a single line of space-separated tags, each prepended with &lt;code&gt;:&lt;/code&gt; so . . .</source>
          <target state="translated">これはどのように作動しますか？ 通常の、行で区切られたタグのリストは、スペースで区切られた単一行のタグに変換され、各タグの前には &lt;code&gt;:&lt;/code&gt; soが付加されます 。 。 。</target>
        </trans-unit>
        <trans-unit id="9e215152051700ddaedbf1a02cea4892f01a6d92" translate="yes" xml:space="preserve">
          <source>How to delete a remote tag</source>
          <target state="translated">リモートタグを削除する方法</target>
        </trans-unit>
        <trans-unit id="8e090d332d9dabde6e435eafdb66e7b93d430d7f" translate="yes" xml:space="preserve">
          <source>How to use:</source>
          <target state="translated">どのように使用するか。</target>
        </trans-unit>
        <trans-unit id="93f0bbb7b8df6b79d248bc6c16559b729e68d015" translate="yes" xml:space="preserve">
          <source>I wanted to remove all tags except for those that match a pattern so that I could delete all but the last couple of months of production tags, here's what I used to great success:</source>
          <target state="translated">私は、パターンに一致するもの以外のすべてのタグを削除したいと思っていたので、最後の数ヶ月間の生産タグ以外のすべてのタグを削除することができ、ここに私が大成功を収めたものがあります。</target>
        </trans-unit>
        <trans-unit id="b11a4a972d604a8ff82b3f43035c814827cdc8ac" translate="yes" xml:space="preserve">
          <source>IMO prefixing colon syntax is a little bit odd in this situation</source>
          <target state="translated">IMO コロン構文の前に接頭辞をつけるのは、この状況では少し変です。</target>
        </trans-unit>
        <trans-unit id="6e5e30fd7ea30fb7b2df91cd721c3a66030502c8" translate="yes" xml:space="preserve">
          <source>If not, you would get an error like this:</source>
          <target state="translated">そうでない場合は、このようなエラーが出ます。</target>
        </trans-unit>
        <trans-unit id="eea17415d46a18b13f1273c9486526bb3c55fc41" translate="yes" xml:space="preserve">
          <source>If you also need to delete the local tag, use:</source>
          <target state="translated">ローカルタグも削除する必要がある場合は、使用します。</target>
        </trans-unit>
        <trans-unit id="3593a8a13a9a7fb16d1c2f3a2fa65659a1429ad1" translate="yes" xml:space="preserve">
          <source>If you also need to delete the tag locally:</source>
          <target state="translated">また、ローカルでタグを削除する必要がある場合。</target>
        </trans-unit>
        <trans-unit id="013bebd5a6a7c6a40516cd2eb1ccfff6f1565a83" translate="yes" xml:space="preserve">
          <source>If you have a remote tag &lt;code&gt;v0.1.0&lt;/code&gt; to delete, and your remote is &lt;code&gt;origin&lt;/code&gt;, then simply:</source>
          <target state="translated">削除するリモートタグ &lt;code&gt;v0.1.0&lt;/code&gt; があり、リモートが &lt;code&gt;origin&lt;/code&gt; の場合は、単純に次のようにします。</target>
        </trans-unit>
        <trans-unit id="2132a962c27ef92457731f02e6def1c01de5fa50" translate="yes" xml:space="preserve">
          <source>If you have a tag created starting with the &lt;strong&gt;#&lt;/strong&gt; character, e.g. &lt;code&gt;#ST002&lt;/code&gt;, you might find that u are unable to delete using normal patterns. i.e.</source>
          <target state="translated">&lt;strong&gt;＃&lt;/strong&gt;文字で始まるタグを作成した場合（例： &lt;code&gt;#ST002&lt;/code&gt; ) 、uが通常のパターンを使用して削除できない場合があります。 すなわち</target>
        </trans-unit>
        <trans-unit id="d287edb854d01f8a77be062244170774edb659e0" translate="yes" xml:space="preserve">
          <source>If you have created a tag called &lt;code&gt;release01&lt;/code&gt; in a Git repository you would remove it from your repository by doing the following:</source>
          <target state="translated">Gitリポジトリに &lt;code&gt;release01&lt;/code&gt; というタグを作成した場合は、次のようにしてリポジトリからタグを削除します。</target>
        </trans-unit>
        <trans-unit id="de6010a11d3aebcac6b17391e9dfbb88b8abf7da" translate="yes" xml:space="preserve">
          <source>If you use SourceTree - a great Git GUI - then you can easily do this without the command line by doing the following:</source>
          <target state="translated">Git の優れた GUI である SourceTree を使っている場合は、以下のようにすればコマンドラインを使わずに簡単にできます。</target>
        </trans-unit>
        <trans-unit id="118a00dbd15338fa65208e1429d8d2966a170bb9" translate="yes" xml:space="preserve">
          <source>If you're using PowerShell, and you want to delete a bunch of them:</source>
          <target state="translated">PowerShellを使っていて、まとめて削除したいと思ったら</target>
        </trans-unit>
        <trans-unit id="24d5bc71832b843454a56cdf342fea7b10b301a0" translate="yes" xml:space="preserve">
          <source>In the verification window, select &quot;Remove Tag From Remotes&quot;</source>
          <target state="translated">検証ウィンドウで「Remotesからタグを削除」を選択します。</target>
        </trans-unit>
        <trans-unit id="5ddf827461f6598824db4e05042a21599bfa7bfe" translate="yes" xml:space="preserve">
          <source>Just notice that, if you have a remote branch named as a remote tag, these commands are ambiguous:</source>
          <target state="translated">ただ、リモートブランチにリモートタグという名前が付いている場合、これらのコマンドは曖昧であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4989cb86b753dcfddd98ed2dd59fc41745bbfaab" translate="yes" xml:space="preserve">
          <source>Make the script globally available</source>
          <target state="translated">スクリプトをグローバルに利用できるようにする</target>
        </trans-unit>
        <trans-unit id="3130a41bcc922ec59037cd871b6d5360f2badf16" translate="yes" xml:space="preserve">
          <source>Method two is broken out as a separate answer &lt;a href=&quot;https://stackoverflow.com/a/46105020/657764&quot;&gt;elsewhere on this same page&lt;/a&gt;</source>
          <target state="translated">方法2は&lt;a href=&quot;https://stackoverflow.com/a/46105020/657764&quot;&gt;、この同じページの他の場所に&lt;/a&gt;別の回答として記載されています</target>
        </trans-unit>
        <trans-unit id="440aa837f10ee7f2883cd5aa7b64c17b1408b50b" translate="yes" xml:space="preserve">
          <source>Note that git has tag namespace and branch namespace so you may use the same name for a branch and for a tag. If you want to make sure that you cannot accidentally remove the branch instead of the tag, you can specify full ref which will never delete a branch:</source>
          <target state="translated">git にはタグの名前空間とブランチの名前空間があるので、ブランチとタグを同じ名前にしてもよいことに注意しましょう。タグの代わりに誤ってブランチを削除してしまわないようにしたい場合は、ブランチを絶対に削除しない full ref を指定することができます。</target>
        </trans-unit>
        <trans-unit id="d1924274def22cde0b26ecf7906a17105454cb72" translate="yes" xml:space="preserve">
          <source>Now go to Github.com and refresh, they disappear.</source>
          <target state="translated">今すぐGithub.comに行き、リフレッシュすると、彼らは消えます。</target>
        </trans-unit>
        <trans-unit id="f4b33f08f81cb083ed677fd768f73645d86513b0" translate="yes" xml:space="preserve">
          <source>OR similar to the remote delete:</source>
          <target state="translated">ORリモート削除と似たようなもの。</target>
        </trans-unit>
        <trans-unit id="8b4613fd0144381bbaf959317bdf80a991f56d8c" translate="yes" xml:space="preserve">
          <source>Of course, you can also filter them before deleting:</source>
          <target state="translated">もちろん、フィルターをかけてから削除することもできます。</target>
        </trans-unit>
        <trans-unit id="2183ac1236844d83aa37456456f07a5180c35eda" translate="yes" xml:space="preserve">
          <source>Open your repository in SourceTree</source>
          <target state="translated">SourceTreeでリポジトリを開く</target>
        </trans-unit>
        <trans-unit id="a2e49562de79df5dbf60805d44b3e073a94e9771" translate="yes" xml:space="preserve">
          <source>Or, more expressively, use the &lt;code&gt;--delete&lt;/code&gt; option (or &lt;code&gt;-d&lt;/code&gt; if your git version is older than 1.8.0):</source>
          <target state="translated">または、より具体的には、 &lt;code&gt;--delete&lt;/code&gt; オプションを使用します（または、gitバージョンが1.8.0より古い場合は &lt;code&gt;-d&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="aafae8053e1454cad375a0db5edbc73c250331bb" translate="yes" xml:space="preserve">
          <source>Please reference &lt;a href=&quot;https://confluence.atlassian.com/pages/viewpage.action?pageId=282175551&quot;&gt;https://confluence.atlassian.com/pages/viewpage.action?pageId=282175551&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://confluence.atlassian.com/pages/viewpage.action?pageId=282175551&quot;&gt;https://confluence.atlassian.com/pages/viewpage.action?pageId=282175551を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="c2faad6bded65e846d69ba673f8671501d18acb2" translate="yes" xml:space="preserve">
          <source>Press the &lt;strong&gt;Discard draft&lt;/strong&gt; button in your GitHub &lt;strong&gt;Releases&lt;/strong&gt; section.</source>
          <target state="translated">GitHub &lt;strong&gt;リリース&lt;/strong&gt;セクションの[ &lt;strong&gt;下書き&lt;/strong&gt;を&lt;strong&gt;破棄&lt;/strong&gt; ]ボタンを押します。</target>
        </trans-unit>
        <trans-unit id="4a26d2eef0b2df5978f1a38f26ea24f5f32a2d51" translate="yes" xml:space="preserve">
          <source>Pushing a branch, tag, or other ref to a remote repository involves specifying &quot;which repo, what source, what destination?&quot;</source>
          <target state="translated">ブランチやタグなどの参照をリモートリポジトリにプッシュするには、&quot;どのレポで、どのソースで、どの行き先か?&quot;を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="be5df156f488d65c669ff095370beb2e10a9caab" translate="yes" xml:space="preserve">
          <source>Right-Click on the tag you want deleted</source>
          <target state="translated">削除したいタグを右クリック</target>
        </trans-unit>
        <trans-unit id="a5a16d8e182424a06faf96764a62c0a8c29ad0a7" translate="yes" xml:space="preserve">
          <source>Second line, deletes &lt;code&gt;your_tag_name&lt;/code&gt; from &lt;strong&gt;remote&lt;/strong&gt; repo.</source>
          <target state="translated">2行目は、 &lt;code&gt;your_tag_name&lt;/code&gt; を&lt;strong&gt;リモート&lt;/strong&gt;リポジトリから削除します。</target>
        </trans-unit>
        <trans-unit id="e7f8442fb347c83b117830cf5cd91c4f6dce4838" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://stackoverflow.com/a/5480292/535871&quot;&gt;&lt;strong&gt;Adam Franco&lt;/strong&gt;'s answer&lt;/a&gt; for an explanation of Git's unusual &lt;code&gt;:&lt;/code&gt; syntax for deletion.</source>
          <target state="translated">Gitの異常な &lt;code&gt;:&lt;/code&gt; 削除の構文の説明については、 &lt;a href=&quot;https://stackoverflow.com/a/5480292/535871&quot;&gt;&lt;strong&gt;Adam Franco&lt;/strong&gt;の回答&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="24663c94fe6d2ce126bf957c994162808ac5394e" translate="yes" xml:space="preserve">
          <source>Seems like a lot of work for something &lt;code&gt;xargs&lt;/code&gt; already does. Looking back through this thread, I'm guessing the slowness with &lt;code&gt;xargs&lt;/code&gt; that you experienced is because the original answer used &lt;code&gt;xargs -n 1&lt;/code&gt; when it didn't really need to.</source>
          <target state="translated">&lt;code&gt;xargs&lt;/code&gt; がすでに実行していることには、多くの作業が必要なようです。 このスレッドを振り返ると、経験した &lt;code&gt;xargs&lt;/code&gt; の速度が遅いのは、元の答えが実際には必要ないときに &lt;code&gt;xargs -n 1&lt;/code&gt; を使用したためだと思います。</target>
        </trans-unit>
        <trans-unit id="45a4cbb4c239fda50d5cda63a7358dc0dd400bbd" translate="yes" xml:space="preserve">
          <source>Select &quot;Delete YOUR_TAG_NAME&quot;</source>
          <target state="translated">YOUR_TAG_NAMEを削除」を選択</target>
        </trans-unit>
        <trans-unit id="9daa57f814c3df5027009adce319548dfea328cd" translate="yes" xml:space="preserve">
          <source>Select and expand the &quot;Tags&quot; tab on the left</source>
          <target state="translated">左側の「タグ」タブを選択して展開します。</target>
        </trans-unit>
        <trans-unit id="f133a976151430c4c438f7d077b4148814191595" translate="yes" xml:space="preserve">
          <source>Simple script to remove given tag from both local and origin locations.
With a check if tag really exists.</source>
          <target state="translated">与えられたタグをローカルとオリジンの両方の場所から削除するシンプルなスクリプトです。タグが本当に存在するかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="e84a6df1c0bbe8f927546f4e753f98dd6dc72d69" translate="yes" xml:space="preserve">
          <source>So you must use this command to delete the tag:</source>
          <target state="translated">なので、このコマンドを使ってタグを削除する必要があります。</target>
        </trans-unit>
        <trans-unit id="e5da5a70aec0b1957851f9778d9934019eff1ad1" translate="yes" xml:space="preserve">
          <source>Struggling, I found two &lt;em&gt;much&lt;/em&gt; faster ways. For both, start with &lt;code&gt;git tag&lt;/code&gt; or &lt;code&gt;git ls-remote --tags&lt;/code&gt; to make a list of tags you want to delete on the remote. In the examples below you can omit or replace &lt;code&gt;sorting_proccessing_etc&lt;/code&gt; with any &lt;code&gt;grep&lt;/code&gt;ing, &lt;code&gt;sort&lt;/code&gt;ing, &lt;code&gt;tail&lt;/code&gt;ing or &lt;code&gt;head&lt;/code&gt;ing you want (&lt;em&gt;e.g.&lt;/em&gt;&lt;code&gt;grep -P &quot;my_regex&quot; | sort | head -n -200&lt;/code&gt;&lt;em&gt;etc&lt;/em&gt;) :</source>
          <target state="translated">苦労して、私は2つの&lt;em&gt;はるかに&lt;/em&gt;速い方法を見つけました。 どちらの場合も、 &lt;code&gt;git tag&lt;/code&gt; または &lt;code&gt;git ls-remote --tags&lt;/code&gt; で開始して、リモートで削除するタグのリストを作成します。 以下の例では、 &lt;code&gt;sorting_proccessing_etc&lt;/code&gt; を省略したり、 必要な &lt;code&gt;grep&lt;/code&gt; 、 &lt;code&gt;sort&lt;/code&gt; 、 &lt;code&gt;tail&lt;/code&gt; 、 headingで置き換えることができます（ &lt;em&gt;例：&lt;/em&gt; &lt;code&gt;grep -P &quot;my_regex&quot; | sort | head -n -200&lt;/code&gt; &lt;em&gt;など&lt;/em&gt; ）：</target>
        </trans-unit>
        <trans-unit id="e858782d1ea007d47e427ae730c2f079b3ebf783" translate="yes" xml:space="preserve">
          <source>Tags work the same way:</source>
          <target state="translated">タグも同じように動作します。</target>
        </trans-unit>
        <trans-unit id="5362c75028108fd1801f9f67c16102e9a5ddaef6" translate="yes" xml:space="preserve">
          <source>That will get it deleted. Hoping it will help someone who made the mistake of using &lt;strong&gt;#&lt;/strong&gt; to write tag names.</source>
          <target state="translated">削除されます。 &lt;strong&gt;＃&lt;/strong&gt;を使ってタグ名を書くのを間違えた人を助けることを願っています。</target>
        </trans-unit>
        <trans-unit id="c28db546caca33d8e05c27cbd3e2d02c71c67afc" translate="yes" xml:space="preserve">
          <source>The above uses a maximum of 5 processes to handle a maximum of 100 arguments in each process. You can experiment with the arguments to find what works best for your needs.</source>
          <target state="translated">上記では、各プロセスで最大100個の引数を処理するために、最大5つのプロセスを使用しています。自分のニーズに合ったものを見つけるために引数を実験することができます。</target>
        </trans-unit>
        <trans-unit id="8855b068a7a899fad50cfa79d72493285e7bce86" translate="yes" xml:space="preserve">
          <source>The git tag man page, in the &lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-tag.html#_on_re_tagging&quot;&gt;On Retagging&lt;/a&gt; section, has a good explanation of how to courteously inform the remote repo's other users of the change. They even give a handy announcement template for communicating how others should get your changes.</source>
          <target state="translated">&lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-tag.html#_on_re_tagging&quot;&gt;On Retagging&lt;/a&gt;セクションのgit tagのmanページには、リモートリポジトリの他のユーザーに変更について丁寧に通知する方法が詳しく説明されています。 彼らは、他の人があなたの変更をどのように得るべきかを伝えるための便利な発表テンプレートさえ提供します。</target>
        </trans-unit>
        <trans-unit id="bedc22fa6462c6f209e1e2b83baf76875fc4ca85" translate="yes" xml:space="preserve">
          <source>The other answers point out how to accomplish this, but you should keep in mind the consequences since this is a remote repository.</source>
          <target state="translated">他の回答はこれを達成する方法を指摘していますが、これはリモートリポジトリなので、結果を念頭に置いておく必要があります。</target>
        </trans-unit>
        <trans-unit id="3ff1e737d877d400891b7a06e5b52ec283422818" translate="yes" xml:space="preserve">
          <source>The usage looks like:</source>
          <target state="translated">使い方はこんな感じです。</target>
        </trans-unit>
        <trans-unit id="9be2b907dd2dcc13b7cdfd0e57d95a310fa92369" translate="yes" xml:space="preserve">
          <source>This first method is by far the fastest, maybe &lt;em&gt;20 to 100 times&lt;/em&gt; faster than using &lt;code&gt;xargs&lt;/code&gt;, and works with a least several &lt;em&gt;thousand&lt;/em&gt; tags at a time.</source>
          <target state="translated">この最初の方法は、 &lt;code&gt;xargs&lt;/code&gt; を使用するよりもはるかに高速で、おそらく20〜100 &lt;em&gt;倍&lt;/em&gt;高速で、一度に数&lt;em&gt;千の&lt;/em&gt;タグで機能します。</target>
        </trans-unit>
        <trans-unit id="15ee664586273d08a8b9e6b49844d897a596ee61" translate="yes" xml:space="preserve">
          <source>This is equivalent to your method one except that &lt;code&gt;xargs&lt;/code&gt; automatically deals with the maximum command line length:</source>
          <target state="translated">これは、 &lt;code&gt;xargs&lt;/code&gt; がコマンドラインの最大長を自動的に処理することを除いて、メソッド1と同じです。</target>
        </trans-unit>
        <trans-unit id="f935f1dff13248d95a92dc476d5edf9684145d32" translate="yes" xml:space="preserve">
          <source>To remove one from a Mercurial repository:</source>
          <target state="translated">Mercurial のリポジトリから 1 つを削除するには。</target>
        </trans-unit>
        <trans-unit id="0eff91039e9794c1e79fed03e3f208450e5307f2" translate="yes" xml:space="preserve">
          <source>To remove the tag from the remote repository:</source>
          <target state="translated">リモートリポジトリからタグを削除するには</target>
        </trans-unit>
        <trans-unit id="d95292b355ae0e043517011407fa60cff35f7aee" translate="yes" xml:space="preserve">
          <source>Up to 100x faster method for thousands of remote tags</source>
          <target state="translated">何千ものリモートタグのための最大100倍速のメソッド</target>
        </trans-unit>
        <trans-unit id="aca0efc940ac92fa67bf2f0ff0380565a8f533a5" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;git push&lt;/code&gt; with this format tag pushes &lt;em&gt;nothing&lt;/em&gt; into each remote ref, erasing it (the normal format for pushing this way is &lt;code&gt;local_ref_path:remote_ref_path&lt;/code&gt;).</source>
          <target state="translated">このフォーマットタグで &lt;code&gt;git push&lt;/code&gt; を使用すると、各リモート参照に&lt;em&gt;何も&lt;/em&gt;プッシュされ&lt;em&gt;ず&lt;/em&gt; 、それが消去されます（この方法でプッシュするための通常のフォーマットは &lt;code&gt;local_ref_path:remote_ref_path&lt;/code&gt; です ）。</target>
        </trans-unit>
        <trans-unit id="3da58d64d68a01bc78fc8e670c5180da6fa64982" translate="yes" xml:space="preserve">
          <source>Which because of default paths, can be shortened to:</source>
          <target state="translated">これはデフォルトのパスのために、短縮することができます。</target>
        </trans-unit>
        <trans-unit id="605627eb43b00263a875bb87ebd63db605ee6e6a" translate="yes" xml:space="preserve">
          <source>Which can also be shortened to:</source>
          <target state="translated">どっちを短くすることもできます。</target>
        </trans-unit>
        <trans-unit id="d685ac32dd4893f034d73de8a2eb5d9d31c389d2" translate="yes" xml:space="preserve">
          <source>Will not delete the tag, but wrapping it in a &lt;strong&gt;String Literal&lt;/strong&gt; like so</source>
          <target state="translated">タグは削除しませんが、そのように&lt;strong&gt;文字列リテラル&lt;/strong&gt;でラップします</target>
        </trans-unit>
        <trans-unit id="3d2291b99d2805c920f803be0db5711782029868" translate="yes" xml:space="preserve">
          <source>YOUR_TAG_NAME will now be removed from your local repository and all remotes - be it GitHub, BitBucket, or wherever else you listed as a remote for that repository.</source>
          <target state="translated">これで、あなたのタグ名はローカルリポジトリとすべてのリモートから削除されます-GitHub、BitBucket、またはそのリポジトリのリモートとしてリストアップした場所であればどこでもです。</target>
        </trans-unit>
        <trans-unit id="dbdd3aeed6778ffc6518a0921d89230c17cb648b" translate="yes" xml:space="preserve">
          <source>You just need to push an 'empty' reference to the remote tag name:</source>
          <target state="translated">リモートタグ名に '空の' 参照をプッシュするだけです。</target>
        </trans-unit>
        <trans-unit id="329d6a1fa72f9586335bd28199838050ccffdf00" translate="yes" xml:space="preserve">
          <source>You may also want to delete the tag locally:</source>
          <target state="translated">また、ローカルでタグを削除したい場合もあります。</target>
        </trans-unit>
        <trans-unit id="58a831e5055aa0ce25349489100ff36c79f395d0" translate="yes" xml:space="preserve">
          <source>alternative approach</source>
          <target state="translated">代替案</target>
        </trans-unit>
        <trans-unit id="0a5bd11c600946b9c675cd9f70e5c7c1f4d33ebf" translate="yes" xml:space="preserve">
          <source>and this one to delete the branch:</source>
          <target state="translated">とこれはブランチを削除するためのものです。</target>
        </trans-unit>
        <trans-unit id="093f981b9f151ef7666aace42db069a5d0ae6096" translate="yes" xml:space="preserve">
          <source>cd to your git project</source>
          <target state="translated">git プロジェクトに cd</target>
        </trans-unit>
        <trans-unit id="0e5cc60b6ab92712a0ef751069b3350cbf2d67e3" translate="yes" xml:space="preserve">
          <source>chmod your script file to make it executable.</source>
          <target state="translated">スクリプトファイルを chmod して実行可能にします。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
