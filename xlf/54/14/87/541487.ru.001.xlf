<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/541487">
    <body>
      <group id="541487">
        <trans-unit id="62d7599ad22b415fd81a46bb984ace574bdb41cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Runnable&lt;/code&gt; is a &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se8/html/jls-9.html#jls-9.8&quot;&gt;functional interface&lt;/a&gt;, which means that instances of it can be created with lambda expressions or method references.</source>
          <target state="translated">&lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se8/html/jls-9.html#jls-9.8&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;функциональный интерфейс&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , который означает, что его экземпляры могут быть созданы с помощью лямбда-выражений или ссылок на методы.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="116c0e349c8adf71e2851bf8b8e246107e3f91ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Runnable&lt;/code&gt; is an interface, while &lt;code&gt;Thread&lt;/code&gt; is a class which implements this interface. From a design point of view, there should be a clean separation between how a task is defined and between how it is executed. The former is the responsibility of a &lt;code&gt;Runnalbe&lt;/code&gt; implementation, and the latter is job of the &lt;code&gt;Thread&lt;/code&gt; class. In most of the cases implementing &lt;code&gt;Runnable&lt;/code&gt; is the right way to follow.</source>
          <target state="translated">&lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это интерфейс, а &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это класс, который реализует этот интерфейс. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;С точки зрения дизайна, должно быть четкое разделение между тем, как задача определена, и тем, как она выполняется. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Первый является обязанностью реализации &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnalbe&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , а второй - работа &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;класса &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В большинстве случаев реализация &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - верный путь.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b86924146ba68c8bfd370d9c8cbb28aac882d4fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class Thread&lt;/code&gt;, I would say A very special class with the capability of starting a new Thread which actually enables multi-threading through its &lt;code&gt;start()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;class Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , я бы сказал, очень специальный класс с возможностью запуска нового потока, который фактически позволяет многопоточность через его &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;метод &lt;/font&gt;&lt;/font&gt; &lt;code&gt;start()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c15dd2569a57d806fadcddf028f79b29110b61b8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;However, one &lt;strong&gt;significant difference&lt;/strong&gt; between implementing Runnable and extending Thread is that&lt;br/&gt;&lt;/em&gt;&lt;code&gt;by extending Thread, each of your threads has a unique object associated with it, whereas implementing Runnable, many threads can share the same object instance.&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Однако одно &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;существенное различие&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; между реализацией Runnable и расширением Thread заключается в том, что &lt;/font&gt;&lt;/font&gt;&lt;br/&gt;&lt;/em&gt; &lt;code&gt;by extending Thread, each of your threads has a unique object associated with it, whereas implementing Runnable, many threads can share the same object instance.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b988bc45bc21ad749b545ef24e587c2b5f114b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Inherit less, interface more.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Унаследуй меньше, интерфейс больше.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="30a1ec52c8acc5aaae9b6547af7f98134ab406ff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Inherit only if you want to override some behavior.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Наследовать, только если вы хотите переопределить какое-либо поведение.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f852eec1c67548328367f539479b598b7a14ec96" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The most common difference is&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Наиболее распространенная разница&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b223e924ba49f56988aa04f2055a59e975212ebd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;But&lt;/strong&gt; it is possible to create and run a thread only using &lt;code&gt;class Thread&lt;/code&gt; because Class &lt;code&gt;Thread&lt;/code&gt; implements &lt;code&gt;Runnable&lt;/code&gt; so we all know &lt;code&gt;Thread&lt;/code&gt; also is a &lt;code&gt;Runnable&lt;/code&gt; inside.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; создать и запустить поток можно только с помощью &lt;/font&gt;&lt;/font&gt; &lt;code&gt;class Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; поскольку класс &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; реализует &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; поэтому мы все знаем, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; также является &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; внутри.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33dfb729fa599af728a752ed201e739a5d966fee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caveat:&lt;/strong&gt; Around here, I strongly discourage the use of raw Threads.  I much prefer the use of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html&quot;&gt;Callables&lt;/a&gt; and &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html&quot;&gt;FutureTasks&lt;/a&gt; (From the javadoc: &quot;A cancellable asynchronous computation&quot;).  The integration of timeouts, proper cancelling and the thread pooling of the modern concurrency support are all much more useful to me than piles of raw Threads.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Предостережение: где-то&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; здесь я настоятельно не рекомендую использовать сырые темы. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я очень предпочитаю использовать &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Callables&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;FutureTasks&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (из javadoc: &amp;laquo; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;отменяемые&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; асинхронные вычисления&amp;raquo;). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Интеграция тайм-аутов, правильная отмена и объединение потоков в современной поддержке параллелизма гораздо более полезны для меня, чем груда необработанных потоков.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4c85343fff48abdfd37e9a075ad989b17c7bcfbc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Finally &lt;code&gt;Thread&lt;/code&gt; and &lt;code&gt;Runnable&lt;/code&gt; are complement to each other for multithreading  not competitor or replacement.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Наконец, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; дополняют друг друга для многопоточности, а не для замены или замены.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0446a2d3bfa32a6642a07c8288096de869a468f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Follow-up:&lt;/strong&gt; there is a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html#FutureTask-java.lang.Runnable-V-&quot;&gt;&lt;code&gt;FutureTask&lt;/code&gt; constructor&lt;/a&gt; that allows you to use Runnables (if that's what you are most comfortable with) and still get the benefit of the modern concurrency tools.  &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html#FutureTask-java.lang.Runnable-V-&quot;&gt;To quote the javadoc&lt;/a&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Последующий:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; есть &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html#FutureTask-java.lang.Runnable-V-&quot;&gt; &lt;code&gt;FutureTask&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; конструктор&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , который позволяет использовать Runnables (если это то, что вы наиболее комфортно) и до &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;сих пор получить выгоду от современных инструментов параллелизма. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html#FutureTask-java.lang.Runnable-V-&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Процитирую Javadoc&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="254579b24d70af9cbffecebd938228d377a4f136" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;However, the significant difference is.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Однако существенная разница есть.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fe49c0f5735c2402b764994567ccd17720327894" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output of the above program.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вывод вышеуказанной программы.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5300730740365005553c18a35abea43a5b886fd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Runnable:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Runnable:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46f5806762d4667225feed291bd581c3cc082aba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Single inheritance&lt;/strong&gt;: If you extend Thread you cannot extend from any other class, so if that is what you need to do, you have to use Runnable.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Одиночное наследование&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : если вы расширяете Thread, вы не можете расширяться из любого другого класса, поэтому, если это то, что вам нужно сделать, вы должны использовать Runnable.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e3b390bbd2f268235c45e0aab537a5330726679c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The following example will help you to understand more clearly&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Следующий пример поможет вам понять более четко&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="385cd01aebb4efad5824ac0762cc2e1fa2699741" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The most common difference is&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Наиболее распространенная разница&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c55c19a3f218b2f4994d24908e37e4f7e7a0dba3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Thread:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Thread:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60dcf72cf52ecad4e2613a990dd2c8d245e153ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;When to use Runnable?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда использовать Runnable?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8dbac19e5f4c4ce89943b920969b5d590ef94fb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why not wise to compare?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Почему не стоит сравнивать?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a8977199b77ba714127ba9ccd60a24bc4d94016" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tl;dr: implements Runnable is better.  However, the caveat is important&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tl; dr: реализует Runnable лучше. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Тем не менее, предостережение важно&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e28fab52450edf730501a2469988b5fa9d89f14c" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;thread&lt;/em&gt; embodies the &lt;strong&gt;running context&lt;/strong&gt; (as in execution context: stack frame, thread id, etc.) of the &lt;em&gt;asynchronous execution&lt;/em&gt; of a piece of code. That &lt;em&gt;piece of code&lt;/em&gt; ideally should be the same implementation, whether &lt;em&gt;synchronous&lt;/em&gt; or &lt;em&gt;asynchronous&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Нить&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; воплощает в себе &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;текущий контекст&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (как в контексте выполнения: стек кадра, идентификатор потока и т.д.) от &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;асинхронного выполнения&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; куска кода. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Этот &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;кусок кода в&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; идеале должен быть одной и той же реализацией, будь то &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;синхронный&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;асинхронный&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dd27ec3a109b191a2b4337d0e189ff11a09daa24" translate="yes" xml:space="preserve">
          <source>A class that implements Runnable is not a thread and just a class. For a Runnable to become a Thread, You need to create an instance of Thread and passing itself in as the target.</source>
          <target state="translated">Класс,реализующий Runnable-это не поток,а просто класс.Для того,чтобы Runnable стал Нитей,необходимо создать экземпляр Потоков и передать себя в качестве цели.</target>
        </trans-unit>
        <trans-unit id="135959f92ccea58dd0ae914dbd2b7e95c97465fe" translate="yes" xml:space="preserve">
          <source>A) might give it a more useful name for debugging purposes</source>
          <target state="translated">A)может дать ему более полезное имя для отладки</target>
        </trans-unit>
        <trans-unit id="8f75a870d262f786db6d8ecd48442db110ed4409" translate="yes" xml:space="preserve">
          <source>Actually, It is not wise to compare &lt;code&gt;Runnable&lt;/code&gt; and &lt;code&gt;Thread&lt;/code&gt; with each other.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;На самом деле, не стоит сравнивать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; друг с другом.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49c48e3500611ab4c25b532be6a67db336ad4144" translate="yes" xml:space="preserve">
          <source>Adding my two cents here -
&lt;strong&gt;Always whenever possible use &lt;code&gt;implements Runnable&lt;/code&gt; . Below are two caveats on why you should not use 
&lt;code&gt;extends Thread&lt;/code&gt;s&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Добавление двух моих центов здесь - &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Всегда, когда это возможно, используйте &lt;/font&gt;&lt;/font&gt; &lt;code&gt;implements Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ниже приведены два предупреждения о том, почему вы не должны использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; s&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e21ccd7ef72f4e2238fd70d36dd64f5606395ac" translate="yes" xml:space="preserve">
          <source>Allows you to run your
runnable from a Thread Pool, the
event thread, or in any other way in
the future.</source>
          <target state="translated">Позволяет запускать вашу программу из пула нитей,потока событий или любым другим способом в будущем.</target>
        </trans-unit>
        <trans-unit id="c0eacf29e8e5fc23869b004f56ea19fe3149cb3d" translate="yes" xml:space="preserve">
          <source>Always remember &lt;code&gt;implements&lt;/code&gt; is specially used to impart a behaviour and &lt;code&gt;extends&lt;/code&gt; is used to impart a feature/property.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Всегда помните, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;implements&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; специально используются для передачи поведения, а &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; используется для передачи свойства / свойства.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="41932dab476ae54b2ba9663f01438a39888a91f3" translate="yes" xml:space="preserve">
          <source>Another option that allows you to stay closer to Runnables is a &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html&quot;&gt;ThreadPoolExecutor&lt;/a&gt;.  You can use the &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html#execute%28java.lang.Runnable%29&quot;&gt;execute&lt;/a&gt; method to pass in a Runnable to execute &quot;the given task sometime in the future.&quot;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Другой вариант, который позволяет вам оставаться ближе к Runnables, - &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ThreadPoolExecutor&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете использовать &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;метод &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html#execute%28java.lang.Runnable%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;execute&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для передачи Runnable для выполнения &amp;laquo;заданной задачи когда-нибудь в будущем&amp;raquo;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26a30ff47e3f0bd898dc6328f6bd6e16780bde5b" translate="yes" xml:space="preserve">
          <source>B) are forcing that that name be used for all instances of that class (unless you ignore the fact that it is a thread and do the above with it as if it is a Runnable but we are talking about convention here in any case so can ignore that possibility I feel).</source>
          <target state="translated">B)заставляют использовать это имя для всех экземпляров этого класса (если только вы не проигнорируете тот факт,что это поток,и не сделаете с ним все,как будто это Runnable,но мы говорим здесь о конвенции в любом случае,так что я могу проигнорировать эту возможность).</target>
        </trans-unit>
        <trans-unit id="9c33e4b992bcd5ad5f1c70acf00ed1d2876f6bf9" translate="yes" xml:space="preserve">
          <source>Because we need both of them for multi-threading.</source>
          <target state="translated">Потому что они нужны нам оба для многопоточности.</target>
        </trans-unit>
        <trans-unit id="d79bf5095fe6c49cabb42938911118237ccae20d" translate="yes" xml:space="preserve">
          <source>Both approaches do the same job but there have been some differences.</source>
          <target state="translated">Оба подхода делают одну и ту же работу,но есть некоторые различия.</target>
        </trans-unit>
        <trans-unit id="e47335bb4fee1525429811ff1fc770416433d4c1" translate="yes" xml:space="preserve">
          <source>Can we re-visit the basic reason we wanted our class to behave as a &lt;code&gt;Thread&lt;/code&gt;?
There is no reason at all, we just wanted to execute a task, most likely in an asynchronous mode, which precisely means that the execution of the task must branch from our main thread and the main thread if finishes early, may or may not wait for the branched path(task).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Можем ли мы повторно посетить основную причину, по которой мы хотели, чтобы наш класс вел себя как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Нет никакой причины, мы просто хотели выполнить задачу, скорее всего, в асинхронном режиме, что точно означает, что выполнение задачи должно происходить из нашего основного потока и основного потока, если он заканчивается раньше, может ждать или не ждать для разветвленной дорожки (задача).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8be41cdea7c33cb4adc7250b989a0c2044687900" translate="yes" xml:space="preserve">
          <source>Courtesy from &lt;a href=&quot;http://javarevisited.blogspot.com/2012/01/difference-thread-vs-runnable-interface.html&quot;&gt;javarevisited.blogspot.com&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Предоставлено &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://javarevisited.blogspot.com/2012/01/difference-thread-vs-runnable-interface.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;javarevisited.blogspot.com&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9f7d1da0ff0684e9567952b066f07f4297dd22f" translate="yes" xml:space="preserve">
          <source>Difference between Extending Thread and Implementing Runnable are:</source>
          <target state="translated">Разница между расширением нитей и внедрением Runnable:</target>
        </trans-unit>
        <trans-unit id="74dcd980d3973daacec13a025b6f485731d7df7e" translate="yes" xml:space="preserve">
          <source>Difference between Thread and runnable
.If  we are creating Thread using Thread class then Number of thread equal to number of object we created  .
If we are creating thread  by implementing the runnable interface then we can use single object for creating multiple thread.So single object is shared by multiple Thread.So it will take less memory</source>
          <target state="translated">Разница между Thread и runnable .Если мы создаем Thread с помощью класса Thread,то количество потоков равно количеству созданного нами объекта.Если мы создаем поток,реализуя интерфейс runnable,то мы можем использовать один объект для создания нескольких потоков,поэтому один объект разделяется несколькими потоками.</target>
        </trans-unit>
        <trans-unit id="a7c47f8b2ce8dea4b0409949c8129ad4c6aedfc2" translate="yes" xml:space="preserve">
          <source>Edit: This originally said &quot;Implementing an interface requires less resources.&quot; as well, but you need to create a new Thread instance either way, so this was wrong.</source>
          <target state="translated">Правка:Изначально было сказано:&quot;Реализация интерфейса требует меньше ресурсов&quot;,но в любом случае нужно создать новый экземпляр Thread,так что это было неправильно.</target>
        </trans-unit>
        <trans-unit id="de2f5151cd39d59bda01ca84b744dabe74b89f7a" translate="yes" xml:space="preserve">
          <source>Even if you don't need any of this now, you may in the future. Since there is no benefit to overriding Thread, Runnable is a better solution.</source>
          <target state="translated">Даже если тебе не нужно ничего из этого сейчас,ты можешь в будущем.Так как нет никакой пользы в переопределении Нитей,&quot;Runnable&quot;-лучшее решение.</target>
        </trans-unit>
        <trans-unit id="db728c13fa2fea56c5941384a6f027e4f3d57e52" translate="yes" xml:space="preserve">
          <source>Everyone here seems to think that implementing Runnable is the way to go and I don't really disagree with them but there is also a case for extending Thread in my opinion, in fact you have sort of demonstrated it in your code.</source>
          <target state="translated">Кажется,все здесь думают,что реализация Runnable-это то,что нужно,и я с ними не согласен,но есть еще один довод в пользу расширения Thread,на мой взгляд,на самом деле вы как бы продемонстрировали это в своем коде.</target>
        </trans-unit>
        <trans-unit id="e327a40b4b2ef97c716273219e936462bc2ac116" translate="yes" xml:space="preserve">
          <source>ExecutorService vs Casual Thread Spawner</source>
          <target state="translated">ExecutorService vs Casual Thread Spawner</target>
        </trans-unit>
        <trans-unit id="873e43ca5da7a236c58074640430b89a7c6e98c1" translate="yes" xml:space="preserve">
          <source>Extends binds two class files very closely and can cause some pretty hard to deal with code.</source>
          <target state="translated">Расширение очень плотно связывает два файла класса и может привести к тому,что с кодом будет довольно сложно работать.</target>
        </trans-unit>
        <trans-unit id="72c557fcc430efa3db736e13c6d814068b4763ce" translate="yes" xml:space="preserve">
          <source>For Example: If you create an applet then it must extends Applet class so here the only way to create thread is by implementing Runnable interface</source>
          <target state="translated">Например:Если вы создаете апплет,то он должен расширить класс Applet,так что здесь единственный способ создать поток-это реализовать интерфейс Runnable</target>
        </trans-unit>
        <trans-unit id="4e0db58a3276b57e311061e331b51a908b0fdec0" translate="yes" xml:space="preserve">
          <source>For Multi-threading we need two things:</source>
          <target state="translated">Для многопоточности нам нужны две вещи:</target>
        </trans-unit>
        <trans-unit id="ad0dd8459fdd20171f50f23ce34e179caa3828b9" translate="yes" xml:space="preserve">
          <source>For example, suppose there are two threads, &lt;strong&gt;thread1&lt;/strong&gt; puts an integer in an array and &lt;strong&gt;thread2&lt;/strong&gt; takes integers from the array when the array is filled up. Notice that in order for &lt;strong&gt;thread2&lt;/strong&gt; to work it needs to know the state of array, whether &lt;strong&gt;thread1&lt;/strong&gt; has filled it up or not.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Например, предположим, что есть два потока, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;thread1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; помещает целое число в массив, а &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;thread2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; берет целые числа из массива, когда массив заполняется. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обратите внимание, что для работы &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;thread2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; необходимо знать состояние массива, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;заполнил&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ли &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;thread1&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или нет.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="027fc99eb14610b99442ecf66068ebe52172ab64" translate="yes" xml:space="preserve">
          <source>From what time I've spent with threads in Java, I've found these two ways to write threads:</source>
          <target state="translated">Сколько времени я провел с потоками на Java,я нашел эти два способа написания потоков:</target>
        </trans-unit>
        <trans-unit id="324d3a5aa1c2638d183de831f76dc3e117b5a876" translate="yes" xml:space="preserve">
          <source>Generally you don't need to override Thread behaviour. So &lt;strong&gt;implements Runnable&lt;/strong&gt; is preferred for most of the times.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как правило, вам не нужно переопределять поведение потока. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так что &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;реализует Runnable&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; предпочтительнее для большинства случаев.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a1e0bf4d5d4a889893d51a1a1f5f32748103403" translate="yes" xml:space="preserve">
          <source>Have a look at this SE Question:</source>
          <target state="translated">Взгляните на этот вопрос SE:</target>
        </trans-unit>
        <trans-unit id="4a92b6fe7283d99b84d9efb43b57c328c5537197" translate="yes" xml:space="preserve">
          <source>Having said that you could of course also do the above in a generic way by creating an extension of the thread class which sets its name to a stack trace of its creation call and then use that with your Runnable implementations instead of the standard java Thread class (see below) but in addition to the stack trace there might be more context specific information that would be useful in the thread name for debugging (a reference to one of many queues or sockets it could processing for example in which case you might prefer to extend Thread specifically for that case so that you can have the compiler force you (or others using your libraries) to pass in certain info (e.g. the queue/socket in question) for use in the name).</source>
          <target state="translated">Сказав,что вы,конечно же,можете сделать все вышеперечисленное общим образом,создав расширение класса потока,которое устанавливает его имя в стековую трассу вызова его создания,а затем использовать это с вашими реализациями Runnable вместо стандартного класса java Thread (см.ниже),но в дополнение к стековой трассе может быть более контекстно-специфическая информация,которая была бы полезна в названии потока для отладки (ссылка на одну из многих очередей или сокетов,которые он может обрабатывать,например,в этом случае Вы можете предпочесть расширить Thread специально для этого случая,чтобы компилятор заставил Вас (или других людей,использующих Ваши библиотеки)передать определенную информацию (e.g.соответствующий queuesocket)для использования в имени).</target>
        </trans-unit>
        <trans-unit id="08c2a23ab0fb11ecbf096de100a93e5d6df911bf" translate="yes" xml:space="preserve">
          <source>Here's an example of the generic thread with the calling stack trace as its name:</source>
          <target state="translated">Приведем пример общего потока с трассировкой вызывающего стека в качестве его имени:</target>
        </trans-unit>
        <trans-unit id="85c6fc0c437b526c125958f58dea7f0a6304bc9d" translate="yes" xml:space="preserve">
          <source>I find it is most useful to use Runnable for all the reasons mentioned, but sometimes I like to extend Thread so I can create my own thread stopping method and call it directly on the thread I have created.</source>
          <target state="translated">Я нахожу наиболее полезным использование Runnable по всем упомянутым причинам,но иногда мне нравится расширять Thread,чтобы я мог создать свой собственный метод остановки потоков и вызывать его непосредственно в созданной мной нити.</target>
        </trans-unit>
        <trans-unit id="65e5522b9e1d0900d5cb4c27b63d9563294a2ca8" translate="yes" xml:space="preserve">
          <source>I hope this will help!</source>
          <target state="translated">Надеюсь,это поможет!</target>
        </trans-unit>
        <trans-unit id="ac79c883e4ced0595548e43e7b91c190d465117f" translate="yes" xml:space="preserve">
          <source>I would say there is a third way:</source>
          <target state="translated">Я бы сказал,что есть третий путь:</target>
        </trans-unit>
        <trans-unit id="a5b37ac8da09cf214b5f808911594fe6e0322540" translate="yes" xml:space="preserve">
          <source>I would say, there is only one way for multi-threading with two steps. Let me make my point.</source>
          <target state="translated">Я бы сказал,что есть только один способ многопоточности с двумя шагами.Позвольте мне высказать свою точку зрения.</target>
        </trans-unit>
        <trans-unit id="0ffd9431249fb87edb68e5ca0e5eadd333491c1d" translate="yes" xml:space="preserve">
          <source>I'm not an expert, but I can think of one reason to implement Runnable instead of extend Thread: Java only supports single inheritance, so you can only extend one class.</source>
          <target state="translated">Я не эксперт,но могу придумать одну причину внедрить Runnable вместо того,чтобы расширять Thread:Java поддерживает только единичное наследование,поэтому можно расширить только один класс.</target>
        </trans-unit>
        <trans-unit id="3d18427aa094ab6f29978b9fefeb6265b1bc5ba5" translate="yes" xml:space="preserve">
          <source>Ideally you should never extend the Thread class; the &lt;code&gt;Thread&lt;/code&gt; class should be made &lt;code&gt;final&lt;/code&gt;.
At least its methods like &lt;code&gt;thread.getId()&lt;/code&gt;. 
See &lt;a href=&quot;http://jsr166-concurrency.10961.n7.nabble.com/RRWL-with-bad-Thread-getId-implementations-tc9754.html&quot;&gt;this&lt;/a&gt; discussion for a bug related to extending &lt;code&gt;Thread&lt;/code&gt;s.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В идеале вы никогда не должны расширять класс Thread; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; класс должен быть &lt;/font&gt;&lt;/font&gt; &lt;code&gt;final&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;По крайней мере, его методы, такие как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;thread.getId()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Смотрите &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsr166-concurrency.10961.n7.nabble.com/RRWL-with-bad-Thread-getId-implementations-tc9754.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;это&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; обсуждение для ошибки, связанной с расширением &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; s.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f44e3a1488fb5cf36acdf48aa499bffe3b7c9eea" translate="yes" xml:space="preserve">
          <source>If I am not wrong, it's more or less similar to</source>
          <target state="translated">Если я не ошибаюсь,это более или менее похоже на то.</target>
        </trans-unit>
        <trans-unit id="fc4df36da4c1e2f7c07b23a2de59954222a5db54" translate="yes" xml:space="preserve">
          <source>If You are already extending another class</source>
          <target state="translated">Если Вы уже расширяете другой класс</target>
        </trans-unit>
        <trans-unit id="6342a47eeea1ceaf847f21eddecb3fe8da59af40" translate="yes" xml:space="preserve">
          <source>If the language you use supports partial classes or multiple inheritance, then you can segregate each cause in its own super class, but it boils down to the same as composing the two objects, since their feature sets don't overlap. That's for the theory.</source>
          <target state="translated">Если используемый язык поддерживает частичные классы или множественное наследование,то можно разделить каждую причину в своем собственном суперклассе,но это сводится к тому же,что и сочинение двух объектов,так как их наборы функций не пересекаются.Это для теории.</target>
        </trans-unit>
        <trans-unit id="b122904374814680e0c87c8ebb323dabf5fab2d4" translate="yes" xml:space="preserve">
          <source>If this is the whole purpose, then where do I see the need of a specialized Thread. This can be accomplished by picking up a RAW Thread from the System's Thread Pool and assigning it our task (may be an instance of our class) and that is it.</source>
          <target state="translated">Если это вся цель,то где я вижу потребность в специализированной Нитке.Этого можно добиться,взяв RAW-поток из системного пула нитей и назначив его нашей задачей (может быть экземпляром нашего класса),и все.</target>
        </trans-unit>
        <trans-unit id="ef11e5e55d83ab9d5ce38a2d8df28f84ce13289e" translate="yes" xml:space="preserve">
          <source>If you are executing a fire and forget command</source>
          <target state="translated">Если вы выполняете команду &quot;Огонь и забудьте&quot;.</target>
        </trans-unit>
        <trans-unit id="a150e16e712299b680363d48a4671c90d3457795" translate="yes" xml:space="preserve">
          <source>If you are interested in this question, you might be also interested in the &lt;a href=&quot;https://stackoverflow.com/questions/141284/the-difference-between-the-runnable-and-callable-interfaces-in-java&quot;&gt;difference between Callable and Runnable&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вас интересует этот вопрос, вас также может заинтересовать &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/141284/the-difference-between-the-runnable-and-callable-interfaces-in-java&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;разница между Callable и Runnable&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95cb8c47af9fbbf31a40163a2329471f34c2e617" translate="yes" xml:space="preserve">
          <source>If you bundle them together in one implementation, you give the resulting object two &lt;em&gt;unrelated&lt;/em&gt; causes of change:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы объедините их в одну реализацию, вы дадите получившемуся объекту две &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;несвязанные&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; причины изменения:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f39c6fd9d3033b1b085b0b29ced0065c77ca5abd" translate="yes" xml:space="preserve">
          <source>If you develop your task as Runnable, you have &lt;strong&gt;all flexibility how to use it now and in the future&lt;/strong&gt;. You can have it run concurrently via Executors but also via Thread. And you still could also use/call it non-concurrently within the same thread just as any other ordinary type/object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы разрабатываете свою задачу как Runnable, у вас есть &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;все возможности использовать ее сейчас и в будущем&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете запустить его одновременно через Executors, а также через Thread. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;И вы все равно можете использовать / вызывать его не одновременно в том же потоке, как любой другой обычный тип / объект.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b06233f340315d59abea0994a2ed12b611e3a1c" translate="yes" xml:space="preserve">
          <source>If you don't have to extend Thread class and modify Thread API default implementation</source>
          <target state="translated">Если вам не нужно расширять класс Thread и изменять реализацию Thread API по умолчанию</target>
        </trans-unit>
        <trans-unit id="22ee7e19c4800fd711a27680a44778c07383aeee" translate="yes" xml:space="preserve">
          <source>If you don't need a particular result, consider using constructions of the form:</source>
          <target state="translated">Если вам не нужен конкретный результат,подумайте об использовании конструкций формы:</target>
        </trans-unit>
        <trans-unit id="759d8c161af67860e42c2161b3f08627956f146f" translate="yes" xml:space="preserve">
          <source>If you extend Thread, you're basically preventing your logic to be executed by any other thread than 'this'. If you only want &lt;em&gt;some&lt;/em&gt; thread to execute your logic, it's better to just implement Runnable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы расширяете Thread, вы в основном препятствуете выполнению вашей логики любым другим потоком, кроме 'this'. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы хотите, чтобы &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;какой-то&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; поток выполнял вашу логику, лучше просто реализовать Runnable.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="60811860db91d34de647218919147c3c05adb03c" translate="yes" xml:space="preserve">
          <source>If you extend thread then the action you're doing is always going to be in a thread.  However, if you implement &lt;code&gt;Runnable&lt;/code&gt; it doesn't have to be.  You can run it in a thread, or pass it to some kind of executor service, or just pass it around as a task within a single threaded application (maybe to be run at a later time, but within the same thread).  The options are a lot more open if you just use &lt;code&gt;Runnable&lt;/code&gt; than if you bind yourself to &lt;code&gt;Thread&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы расширяете поток, то действие, которое вы делаете, всегда будет в потоке. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Однако, если вы реализуете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; это не обязательно должно быть. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете запустить его в потоке, или передать его какому-либо сервису-исполнителю, или просто передать как задачу в рамках одного многопоточного приложения (возможно, для запуска в более позднее время, но в том же потоке). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Опции намного более открыты, если вы просто используете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; чем если вы привязываете себя к &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="219f8fa29339e9ae2c73575ff9e7a44eb262ccff" translate="yes" xml:space="preserve">
          <source>If you have to override any of these &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html&quot;&gt;Thread&lt;/a&gt; methods as listed in oracle documentation page</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вам нужно переопределить любой из этих &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;методов &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Thread,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; как указано на странице документации Oracle&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31e4b9a37e12329f07844fa1cd37f135389dc5c9" translate="yes" xml:space="preserve">
          <source>If you implement Runnable then the class that implements Runnable has no control over the thread name, it is the calling code that can set the thread name, like so:</source>
          <target state="translated">Если вы реализуете Runnable,то класс,реализующий Runnable,не имеет никакого контроля над именем потока,именно вызывающий код может установить имя потока,подобно этому:</target>
        </trans-unit>
        <trans-unit id="13165552b81af3b7fdc922c6439175665b42c4cc" translate="yes" xml:space="preserve">
          <source>If you want to implements or extends any other class then &lt;code&gt;Runnable&lt;/code&gt; interface is most preferable, otherwise, if you do not want any other class to extend or implement then &lt;code&gt;Thread&lt;/code&gt; class is preferable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы хотите реализовать или &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;расширить &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;любой другой класс, тогда &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;интерфейс &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является наиболее предпочтительным, в противном случае, если вы не хотите, чтобы какой-либо другой класс расширял или реализовывал, тогда &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;класс &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является предпочтительным.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="673d5926ca53942d7d830b2c33d0112b5231ecb4" translate="yes" xml:space="preserve">
          <source>If you'd like to try using a thread pool, the code fragment above would become something like the following (using the &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool%28%29&quot;&gt;Executors.newCachedThreadPool()&lt;/a&gt; factory method):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы хотите попробовать использовать пул потоков, приведенный выше фрагмент кода будет выглядеть примерно так (используя &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;фабричный метод &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool%28%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Executors.newCachedThreadPool ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f727775939919c6a445d2a7f83a71083b2d3a1b" translate="yes" xml:space="preserve">
          <source>Implementing &lt;code&gt;Runnable&lt;/code&gt; lets you to have this flexibility to share the object whereas &lt;code&gt;extends Thread&lt;/code&gt; makes you to create new objects for each threads therefore any update that is done by thread1 is lost to thread2.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Реализация &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; позволяет вам иметь эту гибкость для совместного использования объекта, в то время как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; позволяет создавать новые объекты для каждого потока, поэтому любое обновление, выполняемое thread1, теряется в thread2.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="452b22406c5a2c292e1d0351d7ee4d811df4b494" translate="yes" xml:space="preserve">
          <source>In &lt;em&gt;practical&lt;/em&gt; terms, it means you can implement &lt;code&gt;Runnable&lt;/code&gt; and extend from another class as well.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;практическом&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; плане это означает, что вы можете реализовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и расширять также из другого класса.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a917cf04e57360b680a976afe6c96e361e3d6f8" translate="yes" xml:space="preserve">
          <source>In Object-oriented programming, extending a class generally means, adding new functionality, and modifying or improving behaviors. If we are not making any modification on Thread then use Runnable interface instead.</source>
          <target state="translated">В объектно-ориентированном программировании расширение класса,как правило,означает добавление новой функциональности,а также изменение или улучшение поведения.Если мы не вносим никаких изменений в Thread,то используйте вместо этого интерфейс Runnable.</target>
        </trans-unit>
        <trans-unit id="073b55d5a0e2df99685e6167d705af287162c7a1" translate="yes" xml:space="preserve">
          <source>In general, I would recommend using something like &lt;code&gt;Runnable&lt;/code&gt; rather than &lt;code&gt;Thread&lt;/code&gt; because it allows you to keep your work only loosely coupled with your choice of concurrency.  For example, if you use a &lt;code&gt;Runnable&lt;/code&gt; and decide later on that this doesn't in fact require it's own &lt;code&gt;Thread&lt;/code&gt;, you can just call threadA.run().</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В общем, я бы рекомендовал использовать что-то вроде &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; а не &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; потому что это позволяет вам поддерживать свою работу только в слабой связи с выбором параллелизма. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Например, если вы используете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и решить позже , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;что это на самом деле не требует его собственной &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , вы можете просто позвонить threadA.run ().&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bce6d6dd7d4b58843b88abe31ec528c6228faba4" translate="yes" xml:space="preserve">
          <source>In most cases, the Runnable interface should be used if you are only planning to override the &lt;code&gt;run()&lt;/code&gt; method and no other Thread methods. This is important because classes should not be subclassed unless the programmer intends on modifying or enhancing the fundamental behavior of the class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В большинстве случаев интерфейс Runnable следует использовать, если вы планируете переопределить только метод &lt;/font&gt;&lt;/font&gt; &lt;code&gt;run()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; а не другие методы Thread. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это важно, потому что классы не должны быть разделены на подклассы, если программист не намеревается изменить или улучшить фундаментальное поведение класса.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49f3b20c1e64e8c4a79f4f7894f0ca27d29de597" translate="yes" xml:space="preserve">
          <source>In other words, implementing &lt;code&gt;Runnable&lt;/code&gt; will work in scenarios where your class extends a class other than &lt;code&gt;Thread&lt;/code&gt;. Java does not support multiple inheritance. Also, extending &lt;code&gt;Thread&lt;/code&gt; will not be possible when using some of the high-level thread management APIs. The only scenario where extending &lt;code&gt;Thread&lt;/code&gt; is preferable is in a small application that won't be subject to updates in future. It is almost always better to implement &lt;code&gt;Runnable&lt;/code&gt; as it is more flexible as your project grows. A design change won't have a major impact as you can implement many interfaces in java, but only extend one class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Другими словами, реализация &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будет работать в сценариях, где ваш класс расширяет класс, отличный от &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Java не поддерживает множественное наследование. Кроме того, расширение &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будет невозможно при использовании некоторых высокоуровневых API-интерфейсов управления потоками. Единственный сценарий, в котором расширение &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является предпочтительным, - это небольшое приложение, которое не будет обновляться в будущем. Почти всегда лучше реализовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; поскольку он становится более гибким по мере роста вашего проекта. Изменение дизайна не будет иметь большого влияния, так как вы можете реализовать много интерфейсов в Java, но расширить только один класс.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a06c6d743450813788e9cb962ba45b9527d1353e" translate="yes" xml:space="preserve">
          <source>In practice, generally speaking, a programme does not need to carry more complexity than necessary. If you have one thread working on a specific task, without ever changing that task, there is probably no point in making the tasks separate classes, and your code remains simpler.</source>
          <target state="translated">На практике,в общем и целом,программа не должна быть более сложной,чем это необходимо.Если у вас есть один поток,работающий над конкретной задачей,не меняя эту задачу,то,вероятно,нет смысла делать задачи отдельными классами,и ваш код остается более простым.</target>
        </trans-unit>
        <trans-unit id="d75b75d2d148a11490f00c2bfaf95f291215fdf5" translate="yes" xml:space="preserve">
          <source>In the Runnable interface approach, only one instance of a class is being created and it has been shared by different threads. So the value of counter is incremented for each and every thread access.</source>
          <target state="translated">В интерфейсном подходе Runnable создается только один экземпляр класса,который был разделен между разными потоками.Таким образом,значение счетчика увеличивается для каждого доступа к потоку.</target>
        </trans-unit>
        <trans-unit id="2e0dbceaef5b924d0e8913609ad6fc3576fc58c5" translate="yes" xml:space="preserve">
          <source>In the context of &lt;em&gt;Java&lt;/em&gt;, since the facility is &lt;strong&gt;already there&lt;/strong&gt;, it is probably easier to start directly with stand alone &lt;code&gt;Runnable&lt;/code&gt; classes, and pass their instances to &lt;code&gt;Thread&lt;/code&gt; (or &lt;code&gt;Executor&lt;/code&gt;) instances. Once &lt;em&gt;used&lt;/em&gt; to that pattern, it is not harder to use (or even read) than the simple runnable thread case.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В контексте &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , поскольку средство &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;уже существует&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , вероятно, проще начать непосредственно с автономных &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;классов &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и передать их экземпляры экземплярам &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;После того, как вы &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;привыкли&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; к этому шаблону, его не сложнее использовать (или даже читать), чем в случае простого запускаемого потока&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b57f0fd65a56e6310fbd2e370e043b419ea1c2d" translate="yes" xml:space="preserve">
          <source>In the same light, &lt;em&gt;if you don't need&lt;/em&gt; to &lt;strong&gt;inherit&lt;/strong&gt; thread methods, you can do without that &lt;strong&gt;overhead&lt;/strong&gt; by using Runnable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В том же свете, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;если вам не нужно&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , чтобы &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;наследуют&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; методы потоков, можно обойтись и &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;без этого &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;над головой&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , используя Runnable.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31dbde8d6d470fc93d0c6d746cadb9b08d447951" translate="yes" xml:space="preserve">
          <source>Inheriting all Thread methods are additional overhead just for representing a Task which can be done easily with Runnable.</source>
          <target state="translated">Унаследование всех методов Thread является дополнительным накладным расходом только для представления задачи,которую можно легко выполнить с помощью Runnable.</target>
        </trans-unit>
        <trans-unit id="df0990131adc5c941ff4ae4bbd6a8a50be484743" translate="yes" xml:space="preserve">
          <source>Instantiating an interface gives a cleaner separation between your code and the implementation of threads, so I'd prefer to implement Runnable in this case.</source>
          <target state="translated">Фактирование интерфейса дает более четкое разделение между вашим кодом и реализацией потоков,поэтому в данном случае я бы предпочел реализовать Runnable.</target>
        </trans-unit>
        <trans-unit id="65f261489cb14059bf817628e87a457e1819026d" translate="yes" xml:space="preserve">
          <source>Is there any significant difference in these two blocks of code ?</source>
          <target state="translated">Есть ли существенная разница в этих двух блоках кода ?</target>
        </trans-unit>
        <trans-unit id="75d953bf184515f7db37b042665869e721abb6ca" translate="yes" xml:space="preserve">
          <source>It is good design to separate domain logic from technical means, in that sense it is better to have a Runnable task &lt;strong&gt;isolating&lt;/strong&gt; your &lt;strong&gt;task from&lt;/strong&gt; your &lt;strong&gt;runner&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это хорошая идея, чтобы отделить доменную логику от технических средств, в этом смысле лучше иметь задачу Runnable, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;изолирующую&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вашу &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;задачу от&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вашего &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;бегуна&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f74b9bbd8cab7122e230a1598d5c5ced2960aa7" translate="yes" xml:space="preserve">
          <source>Java designer recognizes this and that's why Executors accept Runnable as Task and they have worker thread which executes those task.</source>
          <target state="translated">Java-дизайнер распознает это,и поэтому Исполнители принимают Runnable как Задание,и у них есть рабочий поток,который выполняет эту задачу.</target>
        </trans-unit>
        <trans-unit id="4447dcd2d3436db5024494dcd6f613fbd89e3c36" translate="yes" xml:space="preserve">
          <source>Java does not support multiple inheritence so if you extends Thread class then no other class will be extended.</source>
          <target state="translated">Java не поддерживает множественное наследование,поэтому если вы расширите класс Thread,то никакой другой класс не будет расширен.</target>
        </trans-unit>
        <trans-unit id="913e8e6cdbb4c34a3e226960b7e54039100ca3cd" translate="yes" xml:space="preserve">
          <source>Java doesn't support multiple inheritances, which means you can only extend one class in Java so once you extended Thread class you lost your chance and cannot extend or inherit another class in Java.</source>
          <target state="translated">Java не поддерживает множественное наследование,что означает,что вы можете расширить только один класс в Java,так что,как только вы расширили класс Thread,вы потеряли свой шанс и не можете расширить или унаследовать другой класс в Java.</target>
        </trans-unit>
        <trans-unit id="5d044bcb58e5016154e1cad7fca27ce7ed4fc5e8" translate="yes" xml:space="preserve">
          <source>Leaves more flexibility for the
Runnable implementation to extend
another class</source>
          <target state="translated">Оставляет больше гибкости для реализации Runnable,чтобы расширить другой класс.</target>
        </trans-unit>
        <trans-unit id="98425613abed9e740647c2930f1763994c890654" translate="yes" xml:space="preserve">
          <source>Maybe this is influenced a bit by my recent heavy usage of Javascript and Actionscript 3, but this way your class doesn't need to implement a pretty vague interface like &lt;code&gt;Runnable&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Возможно, на это немного повлияло моё недавнее интенсивное использование Javascript и Actionscript 3, но в этом случае вашему классу не нужно реализовывать довольно размытый интерфейс, такой как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="21293106cdf6ab6f3aba39c897fb3eb39df7ff25" translate="yes" xml:space="preserve">
          <source>Moral of the story:</source>
          <target state="translated">Мораль истории:</target>
        </trans-unit>
        <trans-unit id="b09331c5ece2c70336bb710a450b8995b6bbf69c" translate="yes" xml:space="preserve">
          <source>On a different note, using advanced &lt;code&gt;ExecutorService&lt;/code&gt; or &lt;code&gt;ThreadPoolExecutorService&lt;/code&gt; API provides more flexibility and control.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;С другой стороны, использование расширенного &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExecutorService&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ThreadPoolExecutorService&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; API обеспечивает большую гибкость и контроль.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b72999a34ff38fba9e9f0fc91f3c9b60b6ccd67d" translate="yes" xml:space="preserve">
          <source>One reason you'd want to implement an interface rather than extend a base class is that you are already extending some other class. You can only extend one class, but you can implement any number of interfaces.</source>
          <target state="translated">Одна из причин,по которой вы хотите реализовать интерфейс,а не расширять базовый класс,заключается в том,что вы уже расширяете какой-то другой класс.Вы можете расширить только один класс,но можете реализовать любое количество интерфейсов.</target>
        </trans-unit>
        <trans-unit id="e24c9399fb337a187f29d1b874c7dc1426f3c801" translate="yes" xml:space="preserve">
          <source>One thing that I'm surprised hasn't been mentioned yet is that implementing &lt;code&gt;Runnable&lt;/code&gt; makes your class more flexible.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Одна вещь, которую я удивляюсь, еще не упоминалась, это то, что реализация &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; делает ваш класс более гибким.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e75803398e702c291b3769ca1fef0d0192f61423" translate="yes" xml:space="preserve">
          <source>Or rather it should be read as:</source>
          <target state="translated">Или,скорее,его следует читать как:</target>
        </trans-unit>
        <trans-unit id="6642beda0a630021ef91d010a61f8536e7c8420b" translate="yes" xml:space="preserve">
          <source>Or, with &lt;code&gt;extends Thread&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Или с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4f97ddaf0f12b6b4b1fe92d9e1887b45c3bdf8d" translate="yes" xml:space="preserve">
          <source>Please see  &lt;a href=&quot;http://pastebin.com/BjKNNs2G&quot;&gt;http://pastebin.com/BjKNNs2G&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Пожалуйста, смотрите &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://pastebin.com/BjKNNs2G&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://pastebin.com/BjKNNs2G&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aacd16ba0e272c55cc554ff9a6a907b81af5b8aa" translate="yes" xml:space="preserve">
          <source>Prefer &quot;&lt;strong&gt;&lt;em&gt;extends Thread&lt;/em&gt;&lt;/strong&gt;&quot; :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Предпочитаю &quot; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;расширяет тему&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b4cfb91a85e37aa98063528cdc4477e8ecf7747" translate="yes" xml:space="preserve">
          <source>Prefer &lt;strong&gt;&lt;em&gt;implements Runnable&lt;/em&gt;&lt;/strong&gt; :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Предпочитаю &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;реализовать Runnable&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a503247ab3ac13abed963a23dc3f49ed043cfe87" translate="yes" xml:space="preserve">
          <source>Runnable because:</source>
          <target state="translated">Сбежать можно,потому что..:</target>
        </trans-unit>
        <trans-unit id="96c8e4642e9d898ac2b452c9a7f1abc772be5375" translate="yes" xml:space="preserve">
          <source>Runnable interface represents a Task which can be executed by either plain Thread or Executors or any other means. so logical separation of Task as Runnable than Thread is a good design decision.</source>
          <target state="translated">Интерфейс Runnable представляет собой Задачу,которая может быть выполнена либо простой Нитью,либо исполнителями,либо любым другим способом.Поэтому логическое разделение Задачи как Выполняемой,чем Нитью,является хорошим конструкторским решением.</target>
        </trans-unit>
        <trans-unit id="31a1077c4c1517e991c6895311d2a20b0384f711" translate="yes" xml:space="preserve">
          <source>Separates the code from
execution</source>
          <target state="translated">Отделяет код от выполнения</target>
        </trans-unit>
        <trans-unit id="3c0e7a1b5e34fd0115bf7d439c7677c9d16459dd" translate="yes" xml:space="preserve">
          <source>Separating task as Runnable means we can reuse the task and also has the liberty to execute it from different means. since you can not restart a Thread once it completes. again Runnable vs Thread for task, Runnable is winner.</source>
          <target state="translated">Разделение задачи как Runnable означает,что мы можем повторно использовать задачу,а также имеет право выполнять ее из разных средств.так как вы не можете перезапустить Нить после ее завершения.опять же Runnable против Нить для задачи,Runnable является победителем.</target>
        </trans-unit>
        <trans-unit id="410028c9b92c6e44e7a330f143b936d87c5fd5c1" translate="yes" xml:space="preserve">
          <source>Separating the Thread class from the Runnable implementation also avoids potential synchronization problems between the thread and the run() method. A separate Runnable generally gives greater flexibility in the way that runnable code is referenced and executed.</source>
          <target state="translated">Отделение класса Thread от реализации Runnable также позволяет избежать потенциальных проблем синхронизации между потоком и методом run().Отдельная реализация Runnable обычно дает большую гибкость в том,как на выполняемый код ссылаются и как он выполняется.</target>
        </trans-unit>
        <trans-unit id="0daa17e77c542f541e21348f4cf8d158b7678ed4" translate="yes" xml:space="preserve">
          <source>Since this is a very popular topic and the good answers are spread all over and dealt with in great depth, I felt it is justifiable to compile the good answers from the others into a more concise form, so newcomers have an easy overview upfront:</source>
          <target state="translated">Так как это очень популярная тема,и хорошие ответы разбросаны по всему миру и рассматриваются с большой глубиной,я посчитал оправданным собрать хорошие ответы от других в более лаконичную форму,так что новички имеют простой обзор заранее:</target>
        </trans-unit>
        <trans-unit id="5b75e54af566c3e4cac465449dcdd22070551de1" translate="yes" xml:space="preserve">
          <source>So depending upon the requirement if our data is not senstive. So It can be shared between multiple Thread we can used Runnable interface.</source>
          <target state="translated">Таким образом,в зависимости от требований,если наши данные не являются сенсорными.Таким образом,мы можем использовать интерфейс Runnable для обмена данными между несколькими потоками.</target>
        </trans-unit>
        <trans-unit id="cc2f18f715f887a38db2fac1b1241ec481846a98" translate="yes" xml:space="preserve">
          <source>So let us obey the OOPs concept and write a class of the type we need. There are many ways to do things, doing it in the right way matters.</source>
          <target state="translated">Так что давайте повинуемся концепции ООП и напишем класс того типа,который нам нужен.Есть много способов делать вещи,делать их правильно.</target>
        </trans-unit>
        <trans-unit id="35d398a4b9b18fdc7eca96bc37d83626d17c05ac" translate="yes" xml:space="preserve">
          <source>So technically and theoretically  both of them is necessary to start a thread, one will &lt;strong&gt;run&lt;/strong&gt; and one will &lt;strong&gt;make it run&lt;/strong&gt; (Like &lt;strong&gt;&lt;code&gt;Wheel and Engine&lt;/code&gt;&lt;/strong&gt; of motor vehicle).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, технически и теоретически им обоим необходимо запустить поток, один будет &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;работать,&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; а другой &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;заставит его работать&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (как &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;Wheel and Engine&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; автомобиля).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b545a2434898cfb8782ccf0a8d7e029fdb34da3" translate="yes" xml:space="preserve">
          <source>So the class &lt;code&gt;MyRunnable&lt;/code&gt; is nothing but a ordinary class with a &lt;code&gt;void run&lt;/code&gt; method.
And it's objects will be some ordinary objects with only a method &lt;code&gt;run&lt;/code&gt; which will execute normally when called.  (unless we pass the object in a thread).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, класс &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyRunnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это не что иное, как обычный класс с &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;методом &lt;/font&gt;&lt;/font&gt; &lt;code&gt;void run&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;И это объекты будут обычными объектами только с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;run&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; методом, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;который будет нормально выполняться при вызове. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(если мы не передадим объект в потоке).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b54d7f8050854b9eb5a81cddc9af26dfd4b0ba6" translate="yes" xml:space="preserve">
          <source>So, if we replace their &lt;code&gt;runnable&lt;/code&gt; with your &lt;code&gt;threadA&lt;/code&gt;, we get the following:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Итак, если мы заменим их &lt;/font&gt;&lt;/font&gt; &lt;code&gt;runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; на ваш &lt;/font&gt;&lt;/font&gt; &lt;code&gt;threadA&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , мы получим следующее:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6400be6697fb840195678151fd7d93ac9d86eebe" translate="yes" xml:space="preserve">
          <source>Something That can start a new Thread (Thread).</source>
          <target state="translated">Что-то,что может начать новую Нитку (Thread).</target>
        </trans-unit>
        <trans-unit id="fe268f9a806c7a97d6d78b294bdf3e80f71c44dd" translate="yes" xml:space="preserve">
          <source>Something that can run inside a Thread (Runnable).</source>
          <target state="translated">Что-то,что может попасть внутрь Нитки (Runnable).</target>
        </trans-unit>
        <trans-unit id="40efdd35ec1623fee9be759660a8c39ed3f0a7e0" translate="yes" xml:space="preserve">
          <source>That's the &lt;a href=&quot;http://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;S&lt;/a&gt; of &lt;a href=&quot;http://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29&quot;&gt;SOLID&lt;/a&gt;: Single responsibility.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;S&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; из &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SOLID&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : Single ответственность.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad94796fb9f06c4d895e1c4991e7e6d3798f3795" translate="yes" xml:space="preserve">
          <source>That's why you can not start a thread with &lt;code&gt;MyRunnable&lt;/code&gt; you need to pass it to a instance of &lt;code&gt;Thread&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот почему вы не можете запустить поток с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyRunnable&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вам нужно передать его экземпляру &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6aad014664026933196b93fc54db59834f16f791" translate="yes" xml:space="preserve">
          <source>The simplest explanation would be by implementing &lt;code&gt;Runnable&lt;/code&gt; we can assign the same object to multiple threads and each &lt;code&gt;Thread&lt;/code&gt; shares the same object states and behavior.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Самое простое объяснение состоит в том, что, реализуя &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; мы можем назначить один и тот же объект нескольким потокам, и каждый &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; имеет одинаковые состояния и поведение объекта.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="df15d0f39c87e4500ca0893016552e9b7102d207" translate="yes" xml:space="preserve">
          <source>These are not only much shorter than your examples, but also come with many of the advantages stated in other answers of using &lt;code&gt;Runnable&lt;/code&gt; over &lt;code&gt;Thread&lt;/code&gt;, such as single responsibility and using composition because you're not specializing the thread's behaviour. This way also avoids creating an extra class if all you need is a &lt;code&gt;Runnable&lt;/code&gt; as you do in your examples.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Они не только намного короче ваших примеров, но также обладают многими преимуществами, изложенными в других ответах использования &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; over &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , такими как единая ответственность и использование композиции, поскольку вы не специализируете поведение потока. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Этот способ также позволяет избежать создания дополнительного класса, если все, что вам нужно, это &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; как вы делаете в своих примерах.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d96ffb505d8310ea93cce480e6ec5f788584907" translate="yes" xml:space="preserve">
          <source>These were some of the notable differences between Thread and Runnable in Java. If you know any other differences on Thread vs Runnable than please share it via comments. I personally use Runnable over Thread for this scenario and recommends to use Runnable or Callable interface based on your requirement.</source>
          <target state="translated">Это были некоторые из заметных различий между Thread и Runnable на Java.Если вы знаете другие различия между Thread и Runnable,пожалуйста,поделитесь ими в комментариях.Я лично использую Runnable over Thread для этого сценария и рекомендую использовать интерфейс Runnable или Callable,исходя из ваших требований.</target>
        </trans-unit>
        <trans-unit id="1d5f2ab080cd9280dace153cfc8f38854287fa20" translate="yes" xml:space="preserve">
          <source>This is discussed in Oracle's &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/essential/concurrency/runthread.html&quot;&gt;Defining and Starting a Thread&lt;/a&gt; tutorial:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это обсуждается в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;руководстве &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Oracle &amp;laquo; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/essential/concurrency/runthread.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Определение и запуск&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; потока&amp;raquo;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c3cbfd343caf7d647d887a68ac7b8a4a7d179d6" translate="yes" xml:space="preserve">
          <source>This makes it also easier to &lt;strong&gt;separate&lt;/strong&gt; task-logic and concurrency &lt;strong&gt;aspects in&lt;/strong&gt; your &lt;strong&gt;unit tests&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это также облегчает &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;разделение&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; логики задач и &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;аспектов&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; параллелизма &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;в&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ваших &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;модульных тестах&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="17fc026b83d7e393a11f6a13c3426f6521cd7eac" translate="yes" xml:space="preserve">
          <source>This might seem like a small thing but where you have a very complex application with a lot of threads and all of a sudden things 'have stopped' (either for reasons of deadlock or possibly because of a flaw in a network protocol which would be less obvious - or other endless reasons) then getting a stack dump from Java where all the threads are called 'Thread-1','Thread-2','Thread-3' is not always very useful (it depends on how your threads are structured and whether you can usefully tell which is which just by their stack trace - not always possible if you are using groups of multiple threads all running the same code).</source>
          <target state="translated">Это может показаться мелочью,но когда у вас очень сложное приложение с большим количеством потоков и внезапно все &quot;остановилось&quot; (либо по причинам тупика,либо,возможно,из-за недостатка в сетевом протоколе,который был бы менее очевиден-или по другим бесконечным причинам),то вы получаете дамп стека с Java,где все потоки называются 'Thread-1',Thread-2&quot;,&quot;Thread-3&quot; не всегда очень полезны (это зависит от того,как устроены ваши потоки и можете ли вы с пользой сказать,какой именно по их стековой трассе-не всегда это возможно,если вы используете группы из нескольких потоков,выполняющих один и тот же код).</target>
        </trans-unit>
        <trans-unit id="87abb7dd8e4d3d728598faa0e9340d014165ffb3" translate="yes" xml:space="preserve">
          <source>This two have a dependency and relationship in multi-threading just like &lt;code&gt;Wheel and Engine&lt;/code&gt; relationship of motor vehicle.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Эти два имеют зависимость и взаимосвязь в многопоточности так же, как отношения &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Wheel and Engine&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; автомобиля.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="373daad7e9321644f3a446ea6144ee0baecf6a48" translate="yes" xml:space="preserve">
          <source>Those who like to solve puzzles can see another side effect of extending Thread. The below code 
will print unreachable code when nobody is notifying them.</source>
          <target state="translated">Те,кто любит решать головоломки,могут увидеть еще один побочный эффект расширения Нитей.Приведенный ниже код напечатает недоступный код,когда никто не уведомит их об этом.</target>
        </trans-unit>
        <trans-unit id="06e005b4dac28bdf9b9f2e738e74f67830824baf" translate="yes" xml:space="preserve">
          <source>Use Runnable interface when you want to access the same resources from the group of threads. Avoid using Thread class here, because multiple objects creation consumes more memory and it becomes a big performance overhead.</source>
          <target state="translated">Используйте интерфейс Runnable,когда вы хотите получить доступ к тем же самым ресурсам из группы потоков.Избегайте использования класса Thread здесь,потому что создание нескольких объектов потребляет больше памяти,и это приводит к большим накладным расходам.</target>
        </trans-unit>
        <trans-unit id="eae2c2b67ec1f551dfa203ea142e948ae61b60a7" translate="yes" xml:space="preserve">
          <source>We do not want the thread's property, instead we want our class to behave as a task which can be run.</source>
          <target state="translated">Нам не нужно свойство потока,вместо этого мы хотим,чтобы наш класс вел себя как задача,которая может быть запущена.</target>
        </trans-unit>
        <trans-unit id="2004802c1def0bfbaa1871673f394eaa9ff880af" translate="yes" xml:space="preserve">
          <source>We need a task, so write a task definition which can be run on a Thread. So use Runnable.</source>
          <target state="translated">Нам нужна задача,поэтому напишите определение задачи,которая может быть запущена на Нити.Так что используйте Runnable.</target>
        </trans-unit>
        <trans-unit id="78e7a8e6346110b062184eb90a63bd6b750dbc8b" translate="yes" xml:space="preserve">
          <source>Well so many good Answers, I want to add more on this. This will help to understand &lt;code&gt;Extending v/s Implementing Thread&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ну так много хороших ответов, я хочу добавить еще об этом. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это поможет понять &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Extending v/s Implementing Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b82c489f872b085a7ad003127345364fb69ed884" translate="yes" xml:space="preserve">
          <source>What is the difference between an interface and abstract class?</source>
          <target state="translated">В чем разница между интерфейсом и абстрактным классом?</target>
        </trans-unit>
        <trans-unit id="236d5cd63182e755c22e19a5adeee2748111f58c" translate="yes" xml:space="preserve">
          <source>When implementing &lt;code&gt;interface Runnable&lt;/code&gt; it means you are creating something which is &lt;code&gt;run able&lt;/code&gt; in a different thread. Now creating something which can run inside a thread (runnable inside a thread), doesn't mean to creating a Thread.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;При реализации &lt;/font&gt;&lt;/font&gt; &lt;code&gt;interface Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; это означает, что вы создаете что-то, что может &lt;/font&gt;&lt;/font&gt; &lt;code&gt;run able&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в другом потоке. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь создание чего-либо, что может выполняться внутри потока (выполняется внутри потока), не означает создание потока.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3745fb71989a4e044c210feba42f4bf044bd3030" translate="yes" xml:space="preserve">
          <source>When there is a need to extend a superclass, implementing the Runnable interface is more appropriate than using the Thread class. Because we can extend another class while implementing Runnable interface to make a thread.</source>
          <target state="translated">При необходимости расширения суперкласса,реализация интерфейса Runnable более уместна,чем использование класса Thread.Потому что мы можем расширить другой класс,реализовав интерфейс Runnable,чтобы сделать поток.</target>
        </trans-unit>
        <trans-unit id="c5ff3968cb8985044c47e00b5cba9cc0fe8c5c1e" translate="yes" xml:space="preserve">
          <source>When you &lt;code&gt;extends Thread&lt;/code&gt; class, after that you can&amp;rsquo;t extend any other class which you required. (As you know, Java does not allow inheriting more than one class).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда вы &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; класс &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Thread&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , после этого вы не можете расширять любой другой класс, который вам требуется. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Как вы знаете, Java не позволяет наследовать более одного класса).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e17cab664efc85689b2242508d229076966d7955" translate="yes" xml:space="preserve">
          <source>When you &lt;code&gt;extends Thread&lt;/code&gt; class, each of your thread creates a unique object and associate with it.
When you &lt;code&gt;implements Runnable&lt;/code&gt;, it shares the same object to multiple threads.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда вы &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; класс &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Thread&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , каждый ваш поток создает уникальный объект и связывается с ним. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда вы &lt;/font&gt;&lt;/font&gt; &lt;code&gt;implements Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , он разделяет один и тот же объект на несколько потоков.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f2a76d24f44f7ae9e03bb03f42c6e15b134a771" translate="yes" xml:space="preserve">
          <source>When you &lt;code&gt;implements Runnable&lt;/code&gt;, you can save space for your class to extend any other class in the future or now.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда вы &lt;/font&gt;&lt;/font&gt; &lt;code&gt;implements Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , вы можете сэкономить место для вашего класса, чтобы расширить любой другой класс в будущем или сейчас.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a128f112ee99f36368476f18bd5378db4c60d872" translate="yes" xml:space="preserve">
          <source>When you extend Thread class, after that you can&amp;rsquo;t extend any other class which you required. (As you know, Java does not allow inheriting more than one class).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда вы расширяете класс Thread, после этого вы не можете расширять любой другой класс, который вам требуется. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Как вы знаете, Java не позволяет наследовать более одного класса).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd51cd51a205c0fcca4745df3354f5e1ab449908" translate="yes" xml:space="preserve">
          <source>When you implement Runnable, you can save space for your class to extend any other class in the future or now.</source>
          <target state="translated">Когда вы реализуете Runnable,вы можете сэкономить место для вашего класса,чтобы расширить любой другой класс в будущем или сейчас.</target>
        </trans-unit>
        <trans-unit id="0e0e6973934c399e783b81b4042172920b877a88" translate="yes" xml:space="preserve">
          <source>Whereas, Thread class approach, you must have to create separate instance for every thread access. Hence different memory is allocated for every class instances and each has separate counter, the value remains same, which means no increment will happen because none of the object reference is same.</source>
          <target state="translated">В то время как Thread class подход,вы должны создать отдельный экземпляр для каждого доступа к потоку.Следовательно,для каждого экземпляра класса выделяется разная память,и каждый из них имеет отдельный счетчик,значение остается неизменным,что означает,что никакого приращения не произойдет,так как ни один из объектов не является одинаковым.</target>
        </trans-unit>
        <trans-unit id="0ffdc76564caf2c123c9ca2dce9891279792861c" translate="yes" xml:space="preserve">
          <source>Which of these idioms should you use? The first idiom, which employs a
  Runnable object, is more general, because the Runnable object can
  subclass a class other than Thread. The second idiom is easier to use
  in simple applications, but is limited by the fact that your task
  class must be a descendant of Thread. This lesson focuses on the first
  approach, which separates the Runnable task from the Thread object
  that executes the task. Not only is this approach more flexible, but
  it is applicable to the high-level thread management APIs covered
  later.</source>
          <target state="translated">Какую из этих идиом тебе следует использовать? Первая идиома,использующая объект Runnable,является более общей,потому что объект Runnable может подразделять класс,отличный от Thread.Вторая идиома проще в использовании в простых приложениях,но ограничена тем фактом,что ваш класс задачи должен быть потомком Thread.Этот урок посвящен первому подходу,который отделяет задачу &quot;Выполняемая&quot; от объекта &quot;Поток&quot;,который выполняет задачу.Этот подход не только более гибкий,но и применим к API управления потоками высокого уровня,рассмотренным позже.</target>
        </trans-unit>
        <trans-unit id="ff77565865db636f68fb467b8723798b53763440" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;implements Runnable&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;С &lt;/font&gt;&lt;/font&gt; &lt;code&gt;implements Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="853fa9256b5a0955063f44f7f3c0fb638d4ab72b" translate="yes" xml:space="preserve">
          <source>With the release of Java 8, there is now a third option.</source>
          <target state="translated">С выходом Java 8 появился третий вариант.</target>
        </trans-unit>
        <trans-unit id="a4d2dd0a50a02054e9052afd60821e047d2d17f3" translate="yes" xml:space="preserve">
          <source>Yes,
If you call ThreadA call , then  not need to call the start method and run method is call after call the ThreadA class only.
But If use the ThreadB call then need to necessary the start thread for call run method.
If you have any more help, reply me.</source>
          <target state="translated">Да,если вызывается ThreadA,то нет необходимости вызывать метод start,а метод run вызывается только после вызова класса ThreadA.Но если используется вызов ThreadB,то для вызова метода run необходимо,чтобы начальный поток был вызван.Если у вас есть еще какая-нибудь помощь,ответьте мне.</target>
        </trans-unit>
        <trans-unit id="c203d4090e273e2d4aba99a65662a708ee1a406f" translate="yes" xml:space="preserve">
          <source>Yes: implements &lt;code&gt;Runnable&lt;/code&gt; is the preferred way to do it, IMO. You're not really specialising the thread's behaviour.  You're just giving it something to run. That means &lt;a href=&quot;http://en.wikipedia.org/wiki/Object_composition&quot;&gt;composition&lt;/a&gt; is the &lt;em&gt;philosophically&lt;/em&gt; &quot;purer&quot; way to go.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Да: реализует &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - предпочтительный способ сделать это, IMO. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы на самом деле не специализируете поведение потока. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы просто даете ему что-то, чтобы бежать. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это означает, что &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Object_composition&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;композиция&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;философски&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; более чистый путь.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d7535bb12b09b60b4eaa34abc75b026915b88b7" translate="yes" xml:space="preserve">
          <source>You can &lt;strong&gt;execute&lt;/strong&gt; the same Runnable &lt;strong&gt;object multiple times&lt;/strong&gt;, a Thread object, however, can only be started once. (Maybe the reason, why Executors do accept Runnables, but not Threads.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;выполнить один и&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; тот же &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объект&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Runnable &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;несколько раз&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , однако объект Thread можно запустить только один раз. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Может быть, причина, по которой Исполнители принимают Runnables, но не Threads.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10b3f87aede523f4acf1b8326dd109f256a041ff" translate="yes" xml:space="preserve">
          <source>You might even for example take a stack trace of its creation and use that as the thread name.  This might seem odd but depending on how your code is structured it can be very useful for debugging purposes.</source>
          <target state="translated">Можно даже,например,взять след стека его создания и использовать его в качестве имени потока.Это может показаться странным,но в зависимости от того,как структурирован ваш код,он может быть очень полезен для отладки.</target>
        </trans-unit>
        <trans-unit id="c7ea60dfce8ee7cc8cc687888edf4b04532f8f6a" translate="yes" xml:space="preserve">
          <source>You should implement Runnable, but if you are running on Java 5 or higher, you should not start it with &lt;code&gt;new Thread&lt;/code&gt; but use an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html&quot;&gt;ExecutorService&lt;/a&gt; instead. For details see: &lt;a href=&quot;https://stackoverflow.com/questions/125333/how-to-implement-simple-threading-in-java&quot;&gt;How to implement simple threading in Java&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы должны реализовать Runnable, но если вы работаете на Java 5 или выше, вы не должны запускать его с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; а &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вместо этого &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;использовать &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ExecutorService&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Подробнее см .: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/125333/how-to-implement-simple-threading-in-java&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как реализовать простую многопоточность в Java&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00e264d4c0d3056d3f62ecbb163750347e769810" translate="yes" xml:space="preserve">
          <source>You usually extend a class to add or modify functionality. So, &lt;em&gt;if you don't want&lt;/em&gt; to &lt;strong&gt;overwrite&lt;/strong&gt; any &lt;strong&gt;Thread behavior&lt;/strong&gt;, then use Runnable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы обычно расширяете класс для добавления или изменения функциональности. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;если вы не хотите&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , чтобы &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;перезаписать&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; любое &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;поведение темы&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , а &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;затем использовать Runnable.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b52ab0bbdc36fa3ce8200d348176405633795fd4" translate="yes" xml:space="preserve">
          <source>Your example can be replaced with:</source>
          <target state="translated">Ваш пример может быть заменен:</target>
        </trans-unit>
        <trans-unit id="889fbbe3190eae4f82286aac9145244b9f720d11" translate="yes" xml:space="preserve">
          <source>algorithm implemented by the piece of code (the runnable part)</source>
          <target state="translated">алгоритм,реализованный по фрагменту кода (выполняемая часть)</target>
        </trans-unit>
        <trans-unit id="831283a4238416a712158b2f309e2619a8e56f24" translate="yes" xml:space="preserve">
          <source>and here's a sample of the output comparing the two names:</source>
          <target state="translated">и вот образец вывода,сравнивающий два имени:</target>
        </trans-unit>
        <trans-unit id="5a408b341b31218147e3d07a1b8bcf1d2dddf347" translate="yes" xml:space="preserve">
          <source>but if you extend Thread then you get to manage this within the class itself (just like in your example you name the thread 'ThreadB').  In this case you:</source>
          <target state="translated">но если вы расширяете Thread,то вы можете управлять этим внутри самого класса (так же,как в вашем примере вы называете поток 'ThreadB').В данном случае Вы:</target>
        </trans-unit>
        <trans-unit id="bcc7a7abbf820d9dc66f259bff8b86536c17ffa6" translate="yes" xml:space="preserve">
          <source>extends establishes &quot;&lt;strong&gt;Is A&lt;/strong&gt;&quot; relation &amp;amp; interface provides &quot;&lt;strong&gt;Has a&lt;/strong&gt;&quot; capability.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;расширяет, устанавливает отношение &amp;laquo; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Is A&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;raquo;, а интерфейс предоставляет возможность &amp;laquo; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;имеет&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;raquo;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e52aaa5198aa8b1154e2f65db0ea2273d0bc235" translate="yes" xml:space="preserve">
          <source>if you use runnable you can save the space to extend to any of your other class.</source>
          <target state="translated">если вы используете runnable,вы можете сэкономить место,чтобы распространить его на любой другой класс.</target>
        </trans-unit>
        <trans-unit id="fbce27d51b99de0c79be3f3c9f8364605a9d2088" translate="yes" xml:space="preserve">
          <source>or if you want to use an &lt;code&gt;ExecutorService&lt;/code&gt; and a method reference:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;или если вы хотите использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExecutorService&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и ссылку на метод:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7fabc7ad01f56a22be539223a1585398a01c5e4a" translate="yes" xml:space="preserve">
          <source>thread handling in your application (ie. querying and modifying the execution context)</source>
          <target state="translated">работа с потоками в вашем приложении (т.е.запрос и изменение контекста выполнения)</target>
        </trans-unit>
        <trans-unit id="48daf3a4108e0153576830925850ba9eb4db5204" translate="yes" xml:space="preserve">
          <source>“implements Runnable” vs “extends Thread” in Java</source>
          <target state="translated">&quot;Оборудование Runnable&quot; против &quot;Расширяет Нитки&quot; на Java.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
