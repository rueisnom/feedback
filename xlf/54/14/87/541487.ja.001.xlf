<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/541487">
    <body>
      <group id="541487">
        <trans-unit id="62d7599ad22b415fd81a46bb984ace574bdb41cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Runnable&lt;/code&gt; is a &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se8/html/jls-9.html#jls-9.8&quot;&gt;functional interface&lt;/a&gt;, which means that instances of it can be created with lambda expressions or method references.</source>
          <target state="translated">&lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se8/html/jls-9.html#jls-9.8&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機能インターフェース&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。つまり、そのインスタンスはラムダ式またはメソッド参照で作成できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="116c0e349c8adf71e2851bf8b8e246107e3f91ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Runnable&lt;/code&gt; is an interface, while &lt;code&gt;Thread&lt;/code&gt; is a class which implements this interface. From a design point of view, there should be a clean separation between how a task is defined and between how it is executed. The former is the responsibility of a &lt;code&gt;Runnalbe&lt;/code&gt; implementation, and the latter is job of the &lt;code&gt;Thread&lt;/code&gt; class. In most of the cases implementing &lt;code&gt;Runnable&lt;/code&gt; is the right way to follow.</source>
          <target state="translated">&lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はインターフェースですが、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はこのインターフェースを実装するクラスです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設計の観点からは、タスクの定義方法と実行方法の間に明確な違いがあるはずです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;前者は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnalbe&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実装の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;責任で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あり、後者は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仕事です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ほとんどの場合、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実装&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は正しい方法です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b86924146ba68c8bfd370d9c8cbb28aac882d4fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class Thread&lt;/code&gt;, I would say A very special class with the capability of starting a new Thread which actually enables multi-threading through its &lt;code&gt;start()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;class Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、私は言うでしょう&lt;/font&gt;&lt;/font&gt; &lt;code&gt;start()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;介してマルチスレッドを実際に有効にする新しいスレッドを開始する機能を持つ非常に特別なクラス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c15dd2569a57d806fadcddf028f79b29110b61b8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;However, one &lt;strong&gt;significant difference&lt;/strong&gt; between implementing Runnable and extending Thread is that&lt;br/&gt;&lt;/em&gt;&lt;code&gt;by extending Thread, each of your threads has a unique object associated with it, whereas implementing Runnable, many threads can share the same object instance.&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnableの実装とThreadの拡張の&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;大きな違いの&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 1つ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、Threadを拡張することで&lt;/font&gt;&lt;/font&gt;&lt;br/&gt;&lt;/em&gt; &lt;code&gt;by extending Thread, each of your threads has a unique object associated with it, whereas implementing Runnable, many threads can share the same object instance.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b988bc45bc21ad749b545ef24e587c2b5f114b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Inherit less, interface more.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;より少ない継承、より多くのインターフェイス。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="30a1ec52c8acc5aaae9b6547af7f98134ab406ff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Inherit only if you want to override some behavior.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いくつかの動作をオーバーライドしたい場合のみ継承します。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f852eec1c67548328367f539479b598b7a14ec96" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The most common difference is&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最も一般的な違いは&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b223e924ba49f56988aa04f2055a59e975212ebd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;But&lt;/strong&gt; it is possible to create and run a thread only using &lt;code&gt;class Thread&lt;/code&gt; because Class &lt;code&gt;Thread&lt;/code&gt; implements &lt;code&gt;Runnable&lt;/code&gt; so we all know &lt;code&gt;Thread&lt;/code&gt; also is a &lt;code&gt;Runnable&lt;/code&gt; inside.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それだけで使用してスレッドを作成して実行することが可能である&lt;/font&gt;&lt;/font&gt; &lt;code&gt;class Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、クラスの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実装&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべて知っているの私たちは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もある&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内部。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33dfb729fa599af728a752ed201e739a5d966fee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caveat:&lt;/strong&gt; Around here, I strongly discourage the use of raw Threads.  I much prefer the use of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html&quot;&gt;Callables&lt;/a&gt; and &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html&quot;&gt;FutureTasks&lt;/a&gt; (From the javadoc: &quot;A cancellable asynchronous computation&quot;).  The integration of timeouts, proper cancelling and the thread pooling of the modern concurrency support are all much more useful to me than piles of raw Threads.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;警告：この&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;辺りで、生のスレッドの使用はお勧めしません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Callables&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;FutureTasks&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（javadocから：「キャンセル可能な非同期計算」）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の使用を非常に好み&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイムアウトの統合、適切なキャンセル、および最新の同時実行サポートのスレッドプーリングは、生のスレッドの山よりもはるかに便利です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4c85343fff48abdfd37e9a075ad989b17c7bcfbc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Finally &lt;code&gt;Thread&lt;/code&gt; and &lt;code&gt;Runnable&lt;/code&gt; are complement to each other for multithreading  not competitor or replacement.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最後に、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、競合や置換ではなく、マルチスレッド化のために互いに補完し合っています。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0446a2d3bfa32a6642a07c8288096de869a468f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Follow-up:&lt;/strong&gt; there is a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html#FutureTask-java.lang.Runnable-V-&quot;&gt;&lt;code&gt;FutureTask&lt;/code&gt; constructor&lt;/a&gt; that allows you to use Runnables (if that's what you are most comfortable with) and still get the benefit of the modern concurrency tools.  &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html#FutureTask-java.lang.Runnable-V-&quot;&gt;To quote the javadoc&lt;/a&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フォローアップ：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Runnablesを使用することができる&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html#FutureTask-java.lang.Runnable-V-&quot;&gt; &lt;code&gt;FutureTask&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクター&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（それが最も快適な場合）、それでも最新の同時実行ツールの利点を得ることができます。 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html#FutureTask-java.lang.Runnable-V-&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;javadocを引用するには&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="254579b24d70af9cbffecebd938228d377a4f136" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;However, the significant difference is.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、大きな違いがあります。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fe49c0f5735c2402b764994567ccd17720327894" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output of the above program.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記のプログラムの出力。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5300730740365005553c18a35abea43a5b886fd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Runnable:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Runnable:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46f5806762d4667225feed291bd581c3cc082aba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Single inheritance&lt;/strong&gt;: If you extend Thread you cannot extend from any other class, so if that is what you need to do, you have to use Runnable.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;単一継承&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：スレッドを拡張する場合、他のクラスから拡張することはできないため、それが必要な場合は、Runnableを使用する必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e3b390bbd2f268235c45e0aab537a5330726679c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The following example will help you to understand more clearly&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次の例は、より明確に理解するのに役立ちます&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="385cd01aebb4efad5824ac0762cc2e1fa2699741" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The most common difference is&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最も一般的な違いは&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c55c19a3f218b2f4994d24908e37e4f7e7a0dba3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Thread:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Thread:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60dcf72cf52ecad4e2613a990dd2c8d245e153ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;When to use Runnable?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnableを使用する場合&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8dbac19e5f4c4ce89943b920969b5d590ef94fb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why not wise to compare?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比較するのが賢明ではありませんか？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a8977199b77ba714127ba9ccd60a24bc4d94016" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tl;dr: implements Runnable is better.  However, the caveat is important&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tl; dr：Runnableの実装の方が優れています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、警告は重要です&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e28fab52450edf730501a2469988b5fa9d89f14c" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;thread&lt;/em&gt; embodies the &lt;strong&gt;running context&lt;/strong&gt; (as in execution context: stack frame, thread id, etc.) of the &lt;em&gt;asynchronous execution&lt;/em&gt; of a piece of code. That &lt;em&gt;piece of code&lt;/em&gt; ideally should be the same implementation, whether &lt;em&gt;synchronous&lt;/em&gt; or &lt;em&gt;asynchronous&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スレッドが&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;具現&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実行コンテキスト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の：（スタックフレーム、スレッドID、等の実行コンテキストのように）&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非同期実行&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コードの一部の。&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同期で&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あれ&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非同期&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;であれ、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コードは&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;理想的には同じ実装である必要があり&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dd27ec3a109b191a2b4337d0e189ff11a09daa24" translate="yes" xml:space="preserve">
          <source>A class that implements Runnable is not a thread and just a class. For a Runnable to become a Thread, You need to create an instance of Thread and passing itself in as the target.</source>
          <target state="translated">Runnableを実装したクラスはスレッドではなく、ただのクラスです。Runnableがスレッドになるためには、Threadのインスタンスを作成し、それ自身をターゲットとして渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="135959f92ccea58dd0ae914dbd2b7e95c97465fe" translate="yes" xml:space="preserve">
          <source>A) might give it a more useful name for debugging purposes</source>
          <target state="translated">A)デバッグ目的のためにもっと便利な名前をつけるかもしれません。</target>
        </trans-unit>
        <trans-unit id="8f75a870d262f786db6d8ecd48442db110ed4409" translate="yes" xml:space="preserve">
          <source>Actually, It is not wise to compare &lt;code&gt;Runnable&lt;/code&gt; and &lt;code&gt;Thread&lt;/code&gt; with each other.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を互いに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比較することは賢明ではありません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49c48e3500611ab4c25b532be6a67db336ad4144" translate="yes" xml:space="preserve">
          <source>Adding my two cents here -
&lt;strong&gt;Always whenever possible use &lt;code&gt;implements Runnable&lt;/code&gt; . Below are two caveats on why you should not use 
&lt;code&gt;extends Thread&lt;/code&gt;s&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここに私の2セントを追加します- &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可能な限り常に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;implements Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下は使用はならない理由上の2つの点に注意している &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sが&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e21ccd7ef72f4e2238fd70d36dd64f5606395ac" translate="yes" xml:space="preserve">
          <source>Allows you to run your
runnable from a Thread Pool, the
event thread, or in any other way in
the future.</source>
          <target state="translated">スレッドプール、イベントスレッド、またはその他の方法で、将来的にランナブルを実行できるようにします。</target>
        </trans-unit>
        <trans-unit id="c0eacf29e8e5fc23869b004f56ea19fe3149cb3d" translate="yes" xml:space="preserve">
          <source>Always remember &lt;code&gt;implements&lt;/code&gt; is specially used to impart a behaviour and &lt;code&gt;extends&lt;/code&gt; is used to impart a feature/property.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必ず覚えて&lt;/font&gt;&lt;/font&gt; &lt;code&gt;implements&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;特別な行動を付与するために使用され&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機能/性能を付与するために使用されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="41932dab476ae54b2ba9663f01438a39888a91f3" translate="yes" xml:space="preserve">
          <source>Another option that allows you to stay closer to Runnables is a &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html&quot;&gt;ThreadPoolExecutor&lt;/a&gt;.  You can use the &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html#execute%28java.lang.Runnable%29&quot;&gt;execute&lt;/a&gt; method to pass in a Runnable to execute &quot;the given task sometime in the future.&quot;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnablesにより近い状態を維持できる別のオプションは、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ThreadPoolExecutor&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html#execute%28java.lang.Runnable%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;execute&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;してRunnableを渡し、「将来の特定のタスク」を実行できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26a30ff47e3f0bd898dc6328f6bd6e16780bde5b" translate="yes" xml:space="preserve">
          <source>B) are forcing that that name be used for all instances of that class (unless you ignore the fact that it is a thread and do the above with it as if it is a Runnable but we are talking about convention here in any case so can ignore that possibility I feel).</source>
          <target state="translated">B)は、そのクラスのすべてのインスタンスに使用される名前を強制しています (スレッドであるという事実を無視して、それが Runnable であるかのように上記を行う場合を除きますが、我々 はここで規約について話しているので、その可能性を無視することができますので、私は感じる)。</target>
        </trans-unit>
        <trans-unit id="9c33e4b992bcd5ad5f1c70acf00ed1d2876f6bf9" translate="yes" xml:space="preserve">
          <source>Because we need both of them for multi-threading.</source>
          <target state="translated">マルチスレッドには両方必要だから。</target>
        </trans-unit>
        <trans-unit id="d79bf5095fe6c49cabb42938911118237ccae20d" translate="yes" xml:space="preserve">
          <source>Both approaches do the same job but there have been some differences.</source>
          <target state="translated">どちらのアプローチも同じ仕事をしていますが、いくつかの違いがありました。</target>
        </trans-unit>
        <trans-unit id="e47335bb4fee1525429811ff1fc770416433d4c1" translate="yes" xml:space="preserve">
          <source>Can we re-visit the basic reason we wanted our class to behave as a &lt;code&gt;Thread&lt;/code&gt;?
There is no reason at all, we just wanted to execute a task, most likely in an asynchronous mode, which precisely means that the execution of the task must branch from our main thread and the main thread if finishes early, may or may not wait for the branched path(task).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;として動作させたいという基本的な理由を再確認できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;か？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;理由はまったくありません。おそらく非同期モードでタスクを実行したかっただけです。つまり、タスクの実行はメインスレッドから分岐しなければならず、早く終了した場合、メインスレッドから分岐する必要があります。分岐パス（タスク）用。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8be41cdea7c33cb4adc7250b989a0c2044687900" translate="yes" xml:space="preserve">
          <source>Courtesy from &lt;a href=&quot;http://javarevisited.blogspot.com/2012/01/difference-thread-vs-runnable-interface.html&quot;&gt;javarevisited.blogspot.com&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;http://javarevisited.blogspot.com/2012/01/difference-thread-vs-runnable-interface.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;javarevisited.blogspot.com&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;からの礼儀&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c9f7d1da0ff0684e9567952b066f07f4297dd22f" translate="yes" xml:space="preserve">
          <source>Difference between Extending Thread and Implementing Runnable are:</source>
          <target state="translated">スレッドの拡張とランナブルの実装の違いは、以下の通りです。</target>
        </trans-unit>
        <trans-unit id="74dcd980d3973daacec13a025b6f485731d7df7e" translate="yes" xml:space="preserve">
          <source>Difference between Thread and runnable
.If  we are creating Thread using Thread class then Number of thread equal to number of object we created  .
If we are creating thread  by implementing the runnable interface then we can use single object for creating multiple thread.So single object is shared by multiple Thread.So it will take less memory</source>
          <target state="translated">スレッドとランナブルの違い .スレッドクラスを使用してスレッドを作成する場合、スレッドの数は作成したオブジェクトの数と同じになります。runnableインターフェースを実装してスレッドを作成している場合は、単一のオブジェクトを使用して複数のスレッドを作成することができます。</target>
        </trans-unit>
        <trans-unit id="a7c47f8b2ce8dea4b0409949c8129ad4c6aedfc2" translate="yes" xml:space="preserve">
          <source>Edit: This originally said &quot;Implementing an interface requires less resources.&quot; as well, but you need to create a new Thread instance either way, so this was wrong.</source>
          <target state="translated">編集:これは元々「インターフェイスを実装するとリソースが少なくて済む」とも書いてあったのですが、どちらにしても新しいスレッドインスタンスを作成する必要があるので、これは間違っていました。</target>
        </trans-unit>
        <trans-unit id="de2f5151cd39d59bda01ca84b744dabe74b89f7a" translate="yes" xml:space="preserve">
          <source>Even if you don't need any of this now, you may in the future. Since there is no benefit to overriding Thread, Runnable is a better solution.</source>
          <target state="translated">今は必要ないとしても、将来的には必要になるかもしれません。Threadをオーバーライドしても何のメリットもないので、Runnableの方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="db728c13fa2fea56c5941384a6f027e4f3d57e52" translate="yes" xml:space="preserve">
          <source>Everyone here seems to think that implementing Runnable is the way to go and I don't really disagree with them but there is also a case for extending Thread in my opinion, in fact you have sort of demonstrated it in your code.</source>
          <target state="translated">ここでは誰もがRunnableを実装するのが良いと考えているようですが、私はそれに反対はしませんが、私の考えではThreadを拡張するケースもあります。</target>
        </trans-unit>
        <trans-unit id="e327a40b4b2ef97c716273219e936462bc2ac116" translate="yes" xml:space="preserve">
          <source>ExecutorService vs Casual Thread Spawner</source>
          <target state="translated">ExecutorService と Casual Thread Spawner の比較</target>
        </trans-unit>
        <trans-unit id="873e43ca5da7a236c58074640430b89a7c6e98c1" translate="yes" xml:space="preserve">
          <source>Extends binds two class files very closely and can cause some pretty hard to deal with code.</source>
          <target state="translated">Extends は 2 つのクラスファイルを非常に密接にバインドしているため、コードを扱うのが非常に困難な場合があります。</target>
        </trans-unit>
        <trans-unit id="72c557fcc430efa3db736e13c6d814068b4763ce" translate="yes" xml:space="preserve">
          <source>For Example: If you create an applet then it must extends Applet class so here the only way to create thread is by implementing Runnable interface</source>
          <target state="translated">例を挙げてみましょう。アプレットを作成する場合、それはAppletクラスを拡張しなければならないので、ここではスレッドを作成する唯一の方法はRunnableインターフェースを実装することです。</target>
        </trans-unit>
        <trans-unit id="4e0db58a3276b57e311061e331b51a908b0fdec0" translate="yes" xml:space="preserve">
          <source>For Multi-threading we need two things:</source>
          <target state="translated">マルチスレッドには2つのものが必要です。</target>
        </trans-unit>
        <trans-unit id="ad0dd8459fdd20171f50f23ce34e179caa3828b9" translate="yes" xml:space="preserve">
          <source>For example, suppose there are two threads, &lt;strong&gt;thread1&lt;/strong&gt; puts an integer in an array and &lt;strong&gt;thread2&lt;/strong&gt; takes integers from the array when the array is filled up. Notice that in order for &lt;strong&gt;thread2&lt;/strong&gt; to work it needs to know the state of array, whether &lt;strong&gt;thread1&lt;/strong&gt; has filled it up or not.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例えば、二つのスレッドがあると仮定&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スレッド1つの&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アレイとを入れ整数&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スレッド2は&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アレイが充填されている配列から整数値をとります。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;thread2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が機能するためには、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;thread1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を満たした&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かどうかにかかわらず、配列の状態を知る必要があることに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="027fc99eb14610b99442ecf66068ebe52172ab64" translate="yes" xml:space="preserve">
          <source>From what time I've spent with threads in Java, I've found these two ways to write threads:</source>
          <target state="translated">Javaでスレッドと過ごしてきた時間から、この2つのスレッドの書き方を見つけました。</target>
        </trans-unit>
        <trans-unit id="324d3a5aa1c2638d183de831f76dc3e117b5a876" translate="yes" xml:space="preserve">
          <source>Generally you don't need to override Thread behaviour. So &lt;strong&gt;implements Runnable&lt;/strong&gt; is preferred for most of the times.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常、スレッドの動作をオーバーライドする必要はありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、ほとんどの場合、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnableの実装&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が推奨されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a1e0bf4d5d4a889893d51a1a1f5f32748103403" translate="yes" xml:space="preserve">
          <source>Have a look at this SE Question:</source>
          <target state="translated">このSEの質問を見てみてください。</target>
        </trans-unit>
        <trans-unit id="4a92b6fe7283d99b84d9efb43b57c328c5537197" translate="yes" xml:space="preserve">
          <source>Having said that you could of course also do the above in a generic way by creating an extension of the thread class which sets its name to a stack trace of its creation call and then use that with your Runnable implementations instead of the standard java Thread class (see below) but in addition to the stack trace there might be more context specific information that would be useful in the thread name for debugging (a reference to one of many queues or sockets it could processing for example in which case you might prefer to extend Thread specifically for that case so that you can have the compiler force you (or others using your libraries) to pass in certain info (e.g. the queue/socket in question) for use in the name).</source>
          <target state="translated">もちろん、スレッドクラスの拡張子を作成して、その名前をその作成呼び出しのスタックトレースに設定し、標準の java Thread クラスの代わりに Runnable 実装でそれを使用することで、一般的な方法で上記を行うこともできますが(以下を参照)、スタックトレースに加えて、より多くの デバッグのためにスレッド名に有用なコンテキスト固有の情報 (例えば、多くのキューやソケットのうちの一つへの参照など)をスレッド名に含めることができるように、その場合のために Thread を特別に拡張することを好むかもしれません。 例えば、問題のキューソケットのようなもの)を名前で使用するようにコンパイラに強制させることができるようになります)。</target>
        </trans-unit>
        <trans-unit id="08c2a23ab0fb11ecbf096de100a93e5d6df911bf" translate="yes" xml:space="preserve">
          <source>Here's an example of the generic thread with the calling stack trace as its name:</source>
          <target state="translated">呼び出しスタックトレースを名前にしたジェネリックスレッドの例です。</target>
        </trans-unit>
        <trans-unit id="85c6fc0c437b526c125958f58dea7f0a6304bc9d" translate="yes" xml:space="preserve">
          <source>I find it is most useful to use Runnable for all the reasons mentioned, but sometimes I like to extend Thread so I can create my own thread stopping method and call it directly on the thread I have created.</source>
          <target state="translated">上記の理由でRunnableを使うのが一番便利だと思っていますが、たまにはThreadを拡張して自分でスレッドを止めるメソッドを作って、作ったスレッド上で直接呼び出すのもいいですね。</target>
        </trans-unit>
        <trans-unit id="65e5522b9e1d0900d5cb4c27b63d9563294a2ca8" translate="yes" xml:space="preserve">
          <source>I hope this will help!</source>
          <target state="translated">これがお役に立てれば幸いです!</target>
        </trans-unit>
        <trans-unit id="ac79c883e4ced0595548e43e7b91c190d465117f" translate="yes" xml:space="preserve">
          <source>I would say there is a third way:</source>
          <target state="translated">第三の道があると言ってもいいでしょう。</target>
        </trans-unit>
        <trans-unit id="a5b37ac8da09cf214b5f808911594fe6e0322540" translate="yes" xml:space="preserve">
          <source>I would say, there is only one way for multi-threading with two steps. Let me make my point.</source>
          <target state="translated">私が言いたいのは、2段階でマルチスレッドを実現する方法は1つしかないということです。私の主張を述べさせていただきます。</target>
        </trans-unit>
        <trans-unit id="0ffd9431249fb87edb68e5ca0e5eadd333491c1d" translate="yes" xml:space="preserve">
          <source>I'm not an expert, but I can think of one reason to implement Runnable instead of extend Thread: Java only supports single inheritance, so you can only extend one class.</source>
          <target state="translated">私は専門家ではありませんが、スレッドを拡張するのではなく、Runnableを実装する理由が一つ思いつきます。Javaは単一継承しかサポートしていないので、1つのクラスしか拡張できない。</target>
        </trans-unit>
        <trans-unit id="3d18427aa094ab6f29978b9fefeb6265b1bc5ba5" translate="yes" xml:space="preserve">
          <source>Ideally you should never extend the Thread class; the &lt;code&gt;Thread&lt;/code&gt; class should be made &lt;code&gt;final&lt;/code&gt;.
At least its methods like &lt;code&gt;thread.getId()&lt;/code&gt;. 
See &lt;a href=&quot;http://jsr166-concurrency.10961.n7.nabble.com/RRWL-with-bad-Thread-getId-implementations-tc9754.html&quot;&gt;this&lt;/a&gt; discussion for a bug related to extending &lt;code&gt;Thread&lt;/code&gt;s.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;理想的には、Threadクラスを拡張しないでください。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスがなされるべきで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;final&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;少なくとも&lt;/font&gt;&lt;/font&gt; &lt;code&gt;thread.getId()&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ようなメソッド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;拡張に関連するバグについては、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsr166-concurrency.10961.n7.nabble.com/RRWL-with-bad-Thread-getId-implementations-tc9754.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;説明を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f44e3a1488fb5cf36acdf48aa499bffe3b7c9eea" translate="yes" xml:space="preserve">
          <source>If I am not wrong, it's more or less similar to</source>
          <target state="translated">私が間違っていなければ、多かれ少なかれ似たようなものです。</target>
        </trans-unit>
        <trans-unit id="fc4df36da4c1e2f7c07b23a2de59954222a5db54" translate="yes" xml:space="preserve">
          <source>If You are already extending another class</source>
          <target state="translated">すでに他のクラスを拡張している場合</target>
        </trans-unit>
        <trans-unit id="6342a47eeea1ceaf847f21eddecb3fe8da59af40" translate="yes" xml:space="preserve">
          <source>If the language you use supports partial classes or multiple inheritance, then you can segregate each cause in its own super class, but it boils down to the same as composing the two objects, since their feature sets don't overlap. That's for the theory.</source>
          <target state="translated">使用している言語が部分クラスや多重継承をサポートしている場合は、それぞれの原因をそれ自身のスーパークラスに分離することができますが、それは2つのオブジェクトの特徴セットが重複していないので、2つのオブジェクトを合成するのと同じに煮詰まっています。理論的には以上です。</target>
        </trans-unit>
        <trans-unit id="b122904374814680e0c87c8ebb323dabf5fab2d4" translate="yes" xml:space="preserve">
          <source>If this is the whole purpose, then where do I see the need of a specialized Thread. This can be accomplished by picking up a RAW Thread from the System's Thread Pool and assigning it our task (may be an instance of our class) and that is it.</source>
          <target state="translated">これが全体の目的であるならば、どこに特化したスレッドの必要性があるのでしょうか。これは、システムのスレッドプールから RAW スレッドをピックアップして、それにタスク(クラスのインスタンスかもしれません)を割り当てることで実現できます。</target>
        </trans-unit>
        <trans-unit id="ef11e5e55d83ab9d5ce38a2d8df28f84ce13289e" translate="yes" xml:space="preserve">
          <source>If you are executing a fire and forget command</source>
          <target state="translated">fire and forgetコマンドを実行している場合</target>
        </trans-unit>
        <trans-unit id="a150e16e712299b680363d48a4671c90d3457795" translate="yes" xml:space="preserve">
          <source>If you are interested in this question, you might be also interested in the &lt;a href=&quot;https://stackoverflow.com/questions/141284/the-difference-between-the-runnable-and-callable-interfaces-in-java&quot;&gt;difference between Callable and Runnable&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この質問に興味がある&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/141284/the-difference-between-the-runnable-and-callable-interfaces-in-java&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合は、CallableとRunnableの違いに&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も興味があるかもしれません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95cb8c47af9fbbf31a40163a2329471f34c2e617" translate="yes" xml:space="preserve">
          <source>If you bundle them together in one implementation, you give the resulting object two &lt;em&gt;unrelated&lt;/em&gt; causes of change:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それらを1つの実装にまとめると、結果のオブジェクトに2つの&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;無関係な&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変更の原因が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与えられます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f39c6fd9d3033b1b085b0b29ced0065c77ca5abd" translate="yes" xml:space="preserve">
          <source>If you develop your task as Runnable, you have &lt;strong&gt;all flexibility how to use it now and in the future&lt;/strong&gt;. You can have it run concurrently via Executors but also via Thread. And you still could also use/call it non-concurrently within the same thread just as any other ordinary type/object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タスクをRunnableとして開発する場合、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;現在および将来の使用方法にあらゆる柔軟性があります&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エグゼキューターだけでなくスレッドからも同時に実行できます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、他の通常のタイプ/オブジェクトと同じように、同じスレッド内で非並行で使用/呼び出すこともできます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b06233f340315d59abea0994a2ed12b611e3a1c" translate="yes" xml:space="preserve">
          <source>If you don't have to extend Thread class and modify Thread API default implementation</source>
          <target state="translated">スレッドクラスを拡張してスレッドAPIのデフォルト実装を変更する必要がない場合</target>
        </trans-unit>
        <trans-unit id="22ee7e19c4800fd711a27680a44778c07383aeee" translate="yes" xml:space="preserve">
          <source>If you don't need a particular result, consider using constructions of the form:</source>
          <target state="translated">特定の結果を必要としない場合は、その形式の構文を使用することを検討してください。</target>
        </trans-unit>
        <trans-unit id="759d8c161af67860e42c2161b3f08627956f146f" translate="yes" xml:space="preserve">
          <source>If you extend Thread, you're basically preventing your logic to be executed by any other thread than 'this'. If you only want &lt;em&gt;some&lt;/em&gt; thread to execute your logic, it's better to just implement Runnable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スレッドを拡張すると、基本的に、ロジックが 'this'以外のスレッドによって実行されるのを防ぎます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたが唯一たい場合は&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、いくつかの&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スレッドがあなたのロジックを実行するために、それだけでRunnableをを実装する方が良いでしょう。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="60811860db91d34de647218919147c3c05adb03c" translate="yes" xml:space="preserve">
          <source>If you extend thread then the action you're doing is always going to be in a thread.  However, if you implement &lt;code&gt;Runnable&lt;/code&gt; it doesn't have to be.  You can run it in a thread, or pass it to some kind of executor service, or just pass it around as a task within a single threaded application (maybe to be run at a later time, but within the same thread).  The options are a lot more open if you just use &lt;code&gt;Runnable&lt;/code&gt; than if you bind yourself to &lt;code&gt;Thread&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スレッドを拡張すると、実行しているアクションは常にスレッド内になります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を実装する場合は、そうである必要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スレッドで実行したり、何らかのエグゼキューターサービスに渡したり、単一のスレッド化されたアプリケーション内でタスクとして渡したりすることができます（後で実行する可能性がありますが、同じスレッド内で実行する場合があります）。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用した方が、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バインドするよりも、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オプションがはるかにオープンになります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="219f8fa29339e9ae2c73575ff9e7a44eb262ccff" translate="yes" xml:space="preserve">
          <source>If you have to override any of these &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html&quot;&gt;Thread&lt;/a&gt; methods as listed in oracle documentation page</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Oracleのドキュメントページにリストされている&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらの&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スレッド&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いずれかをオーバーライドする必要がある場合&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31e4b9a37e12329f07844fa1cd37f135389dc5c9" translate="yes" xml:space="preserve">
          <source>If you implement Runnable then the class that implements Runnable has no control over the thread name, it is the calling code that can set the thread name, like so:</source>
          <target state="translated">Runnableを実装した場合、Runnableを実装したクラスはスレッド名を制御することができません。</target>
        </trans-unit>
        <trans-unit id="13165552b81af3b7fdc922c6439175665b42c4cc" translate="yes" xml:space="preserve">
          <source>If you want to implements or extends any other class then &lt;code&gt;Runnable&lt;/code&gt; interface is most preferable, otherwise, if you do not want any other class to extend or implement then &lt;code&gt;Thread&lt;/code&gt; class is preferable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他のクラスを実装または拡張する場合は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インターフェースが最も適しています。それ以外の場合は、他のクラスが拡張または実装しないようにする場合は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスが推奨されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="673d5926ca53942d7d830b2c33d0112b5231ecb4" translate="yes" xml:space="preserve">
          <source>If you'd like to try using a thread pool, the code fragment above would become something like the following (using the &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool%28%29&quot;&gt;Executors.newCachedThreadPool()&lt;/a&gt; factory method):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スレッドプールを使用したい場合、上記のコードフラグメントは次のようになります（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool%28%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Executors.newCachedThreadPool（）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ファクトリメソッドを使用）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f727775939919c6a445d2a7f83a71083b2d3a1b" translate="yes" xml:space="preserve">
          <source>Implementing &lt;code&gt;Runnable&lt;/code&gt; lets you to have this flexibility to share the object whereas &lt;code&gt;extends Thread&lt;/code&gt; makes you to create new objects for each threads therefore any update that is done by thread1 is lost to thread2.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実装&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すると、オブジェクトを共有する柔軟性が得られますが、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Extended &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用すると、スレッドごとに新しいオブジェクトを作成できるため、thread1によって行われた更新はすべてthread2に失われます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="452b22406c5a2c292e1d0351d7ee4d811df4b494" translate="yes" xml:space="preserve">
          <source>In &lt;em&gt;practical&lt;/em&gt; terms, it means you can implement &lt;code&gt;Runnable&lt;/code&gt; and extend from another class as well.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実用的な&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;観点から、それはあなたが実装することができることを意味し&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、別のクラスから拡張にも。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a917cf04e57360b680a976afe6c96e361e3d6f8" translate="yes" xml:space="preserve">
          <source>In Object-oriented programming, extending a class generally means, adding new functionality, and modifying or improving behaviors. If we are not making any modification on Thread then use Runnable interface instead.</source>
          <target state="translated">オブジェクト指向プログラミングでは、クラスを拡張することは一般的に、新しい機能を追加したり、動作を修正したり改善したりすることを意味します。スレッド上で何も変更を加えない場合は、代わりにRunnableインターフェースを使用します。</target>
        </trans-unit>
        <trans-unit id="073b55d5a0e2df99685e6167d705af287162c7a1" translate="yes" xml:space="preserve">
          <source>In general, I would recommend using something like &lt;code&gt;Runnable&lt;/code&gt; rather than &lt;code&gt;Thread&lt;/code&gt; because it allows you to keep your work only loosely coupled with your choice of concurrency.  For example, if you use a &lt;code&gt;Runnable&lt;/code&gt; and decide later on that this doesn't in fact require it's own &lt;code&gt;Thread&lt;/code&gt;, you can just call threadA.run().</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一般的に、&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ではなく&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ようなものを使用することをお勧めし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。これにより、作業を並行性の選択と疎結合に保つことができるためです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用し、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;後でこれが実際には独自の&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要としないと決定した&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合は、単にthreadA.run（）を呼び出すことができます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bce6d6dd7d4b58843b88abe31ec528c6228faba4" translate="yes" xml:space="preserve">
          <source>In most cases, the Runnable interface should be used if you are only planning to override the &lt;code&gt;run()&lt;/code&gt; method and no other Thread methods. This is important because classes should not be subclassed unless the programmer intends on modifying or enhancing the fundamental behavior of the class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ほとんどの場合、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;run()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のみをオーバーライドし、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他のスレッドメソッドは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オーバーライドしない場合は、Runnableインターフェースを使用する必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プログラマーがクラスの基本的な動作を変更または拡張するつもりでない限り、クラスをサブクラス化してはならないため、これは重要です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49f3b20c1e64e8c4a79f4f7894f0ca27d29de597" translate="yes" xml:space="preserve">
          <source>In other words, implementing &lt;code&gt;Runnable&lt;/code&gt; will work in scenarios where your class extends a class other than &lt;code&gt;Thread&lt;/code&gt;. Java does not support multiple inheritance. Also, extending &lt;code&gt;Thread&lt;/code&gt; will not be possible when using some of the high-level thread management APIs. The only scenario where extending &lt;code&gt;Thread&lt;/code&gt; is preferable is in a small application that won't be subject to updates in future. It is almost always better to implement &lt;code&gt;Runnable&lt;/code&gt; as it is more flexible as your project grows. A design change won't have a major impact as you can implement many interfaces in java, but only extend one class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実装&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、クラスが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以外のクラスを拡張するシナリオで機能します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。 Javaは多重継承をサポートしていません。また、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一部の高レベルスレッド管理APIを使用している場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;拡張&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;できません。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;拡張&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が望ましい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;唯一のシナリオは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、将来の更新の対象とならない小さなアプリケーションです。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、プロジェクトの成長に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;応じ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;てより柔軟になるため、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ほとんどの場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、それ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を実装する方が適切&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。多くのインターフェースをJavaで実装できるため、設計変更は大きな影響を与えませんが、1つのクラスのみを拡張します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a06c6d743450813788e9cb962ba45b9527d1353e" translate="yes" xml:space="preserve">
          <source>In practice, generally speaking, a programme does not need to carry more complexity than necessary. If you have one thread working on a specific task, without ever changing that task, there is probably no point in making the tasks separate classes, and your code remains simpler.</source>
          <target state="translated">実際には、一般的には、プログラムは必要以上に複雑になる必要はありません。もし、特定のタスクに1つのスレッドがあり、そのタスクを変更することなく作業しているのであれば、タスクを別のクラスにする意味はないでしょうし、コードはよりシンプルなままです。</target>
        </trans-unit>
        <trans-unit id="d75b75d2d148a11490f00c2bfaf95f291215fdf5" translate="yes" xml:space="preserve">
          <source>In the Runnable interface approach, only one instance of a class is being created and it has been shared by different threads. So the value of counter is incremented for each and every thread access.</source>
          <target state="translated">Runnableインターフェースのアプローチでは、クラスのインスタンスは1つだけ作成されており、それは異なるスレッドによって共有されています。そのため、スレッドがアクセスするたびにカウンタの値がインクリメントされます。</target>
        </trans-unit>
        <trans-unit id="2e0dbceaef5b924d0e8913609ad6fc3576fc58c5" translate="yes" xml:space="preserve">
          <source>In the context of &lt;em&gt;Java&lt;/em&gt;, since the facility is &lt;strong&gt;already there&lt;/strong&gt;, it is probably easier to start directly with stand alone &lt;code&gt;Runnable&lt;/code&gt; classes, and pass their instances to &lt;code&gt;Thread&lt;/code&gt; (or &lt;code&gt;Executor&lt;/code&gt;) instances. Once &lt;em&gt;used&lt;/em&gt; to that pattern, it is not harder to use (or even read) than the simple runnable thread case.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のコンテキストで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、この機能は&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すでに存在しているため&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、スタンドアロンの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から直接開始し、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それらのインスタンスを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）インスタンスに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;渡す&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方がおそらく簡単&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一度&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用さ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのパターンに、簡単な実行可能なスレッドの場合よりも使用（あるいは読み出し）しないように硬いです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b57f0fd65a56e6310fbd2e370e043b419ea1c2d" translate="yes" xml:space="preserve">
          <source>In the same light, &lt;em&gt;if you don't need&lt;/em&gt; to &lt;strong&gt;inherit&lt;/strong&gt; thread methods, you can do without that &lt;strong&gt;overhead&lt;/strong&gt; by using Runnable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同様に、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スレッドメソッド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;継承する&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要がない場合は&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnableを使用する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことで、&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オーバーヘッド&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なしで実行できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31dbde8d6d470fc93d0c6d746cadb9b08d447951" translate="yes" xml:space="preserve">
          <source>Inheriting all Thread methods are additional overhead just for representing a Task which can be done easily with Runnable.</source>
          <target state="translated">すべてのスレッドメソッドを継承することは、Runnableで簡単にできるタスクを表現するためだけのオーバーヘッドです。</target>
        </trans-unit>
        <trans-unit id="df0990131adc5c941ff4ae4bbd6a8a50be484743" translate="yes" xml:space="preserve">
          <source>Instantiating an interface gives a cleaner separation between your code and the implementation of threads, so I'd prefer to implement Runnable in this case.</source>
          <target state="translated">インターフェイスをインスタンス化することで、コードとスレッドの実装をすっきりと分離することができます。</target>
        </trans-unit>
        <trans-unit id="65f261489cb14059bf817628e87a457e1819026d" translate="yes" xml:space="preserve">
          <source>Is there any significant difference in these two blocks of code ?</source>
          <target state="translated">コードのこれらの2つのブロックに有意な違いはありますか?</target>
        </trans-unit>
        <trans-unit id="75d953bf184515f7db37b042665869e721abb6ca" translate="yes" xml:space="preserve">
          <source>It is good design to separate domain logic from technical means, in that sense it is better to have a Runnable task &lt;strong&gt;isolating&lt;/strong&gt; your &lt;strong&gt;task from&lt;/strong&gt; your &lt;strong&gt;runner&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、その意味では、実行可能タスク持っている方が良い、技術的手段とは別のドメインロジックに良いデザインである&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;分離&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなた&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;からタスクを&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたの&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ランナーを&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f74b9bbd8cab7122e230a1598d5c5ced2960aa7" translate="yes" xml:space="preserve">
          <source>Java designer recognizes this and that's why Executors accept Runnable as Task and they have worker thread which executes those task.</source>
          <target state="translated">Javaの設計者はこれを認識しているので、ExecutorsはRunnableをタスクとして受け入れ、それらのタスクを実行するワーカースレッドを持っています。</target>
        </trans-unit>
        <trans-unit id="4447dcd2d3436db5024494dcd6f613fbd89e3c36" translate="yes" xml:space="preserve">
          <source>Java does not support multiple inheritence so if you extends Thread class then no other class will be extended.</source>
          <target state="translated">Javaは多重継承をサポートしていないので、Threadクラスを拡張しても他のクラスは拡張されません。</target>
        </trans-unit>
        <trans-unit id="913e8e6cdbb4c34a3e226960b7e54039100ca3cd" translate="yes" xml:space="preserve">
          <source>Java doesn't support multiple inheritances, which means you can only extend one class in Java so once you extended Thread class you lost your chance and cannot extend or inherit another class in Java.</source>
          <target state="translated">Javaは複数継承をサポートしていません。つまり、Javaでは1つのクラスしか拡張できないので、一度Threadクラスを拡張してしまうとチャンスを失ってしまい、Javaの他のクラスを拡張したり継承したりすることができません。</target>
        </trans-unit>
        <trans-unit id="5d044bcb58e5016154e1cad7fca27ce7ed4fc5e8" translate="yes" xml:space="preserve">
          <source>Leaves more flexibility for the
Runnable implementation to extend
another class</source>
          <target state="translated">他のクラスを拡張するためのRunnable実装の柔軟性が向上します。</target>
        </trans-unit>
        <trans-unit id="98425613abed9e740647c2930f1763994c890654" translate="yes" xml:space="preserve">
          <source>Maybe this is influenced a bit by my recent heavy usage of Javascript and Actionscript 3, but this way your class doesn't need to implement a pretty vague interface like &lt;code&gt;Runnable&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たぶん、これは最近のJavaScriptとActionscript 3の多用に少し影響されていますが、この方法では、クラスは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ようなかなり漠然としたインターフェースを実装する必要がありません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="21293106cdf6ab6f3aba39c897fb3eb39df7ff25" translate="yes" xml:space="preserve">
          <source>Moral of the story:</source>
          <target state="translated">ストーリーのモラル。</target>
        </trans-unit>
        <trans-unit id="b09331c5ece2c70336bb710a450b8995b6bbf69c" translate="yes" xml:space="preserve">
          <source>On a different note, using advanced &lt;code&gt;ExecutorService&lt;/code&gt; or &lt;code&gt;ThreadPoolExecutorService&lt;/code&gt; API provides more flexibility and control.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;別の&lt;/font&gt; &lt;code&gt;ThreadPoolExecutorService&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;をすると、高度な&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExecutorService&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ThreadPoolExecutorService&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; APIを使用すると、柔軟性と制御が向上します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b72999a34ff38fba9e9f0fc91f3c9b60b6ccd67d" translate="yes" xml:space="preserve">
          <source>One reason you'd want to implement an interface rather than extend a base class is that you are already extending some other class. You can only extend one class, but you can implement any number of interfaces.</source>
          <target state="translated">基底クラスを拡張するのではなくインターフェースを実装したいと思う理由の一つは、すでに他のクラスを拡張しているからです。1つのクラスしか拡張できませんが、いくつでもインターフェースを実装することができます。</target>
        </trans-unit>
        <trans-unit id="e24c9399fb337a187f29d1b874c7dc1426f3c801" translate="yes" xml:space="preserve">
          <source>One thing that I'm surprised hasn't been mentioned yet is that implementing &lt;code&gt;Runnable&lt;/code&gt; makes your class more flexible.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;驚いたことに、まだ言及されていないことの1つは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を実装&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するとクラスがより柔軟になることです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e75803398e702c291b3769ca1fef0d0192f61423" translate="yes" xml:space="preserve">
          <source>Or rather it should be read as:</source>
          <target state="translated">というか、こう読むべきでしょう。</target>
        </trans-unit>
        <trans-unit id="6642beda0a630021ef91d010a61f8536e7c8420b" translate="yes" xml:space="preserve">
          <source>Or, with &lt;code&gt;extends Thread&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; を使用し&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4f97ddaf0f12b6b4b1fe92d9e1887b45c3bdf8d" translate="yes" xml:space="preserve">
          <source>Please see  &lt;a href=&quot;http://pastebin.com/BjKNNs2G&quot;&gt;http://pastebin.com/BjKNNs2G&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://pastebin.com/BjKNNs2G&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://pastebin.com/BjKNNs2Gを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aacd16ba0e272c55cc554ff9a6a907b81af5b8aa" translate="yes" xml:space="preserve">
          <source>Prefer &quot;&lt;strong&gt;&lt;em&gt;extends Thread&lt;/em&gt;&lt;/strong&gt;&quot; :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スレッドの拡張&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」を&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;優先&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b4cfb91a85e37aa98063528cdc4477e8ecf7747" translate="yes" xml:space="preserve">
          <source>Prefer &lt;strong&gt;&lt;em&gt;implements Runnable&lt;/em&gt;&lt;/strong&gt; :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;優先&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実装にRunnableをします&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a503247ab3ac13abed963a23dc3f49ed043cfe87" translate="yes" xml:space="preserve">
          <source>Runnable because:</source>
          <target state="translated">実行可能だから。</target>
        </trans-unit>
        <trans-unit id="96c8e4642e9d898ac2b452c9a7f1abc772be5375" translate="yes" xml:space="preserve">
          <source>Runnable interface represents a Task which can be executed by either plain Thread or Executors or any other means. so logical separation of Task as Runnable than Thread is a good design decision.</source>
          <target state="translated">実行可能なインターフェイスは、プレーンなスレッドやエグゼキュータ、その他の手段で実行可能なタスクを表します。</target>
        </trans-unit>
        <trans-unit id="31a1077c4c1517e991c6895311d2a20b0384f711" translate="yes" xml:space="preserve">
          <source>Separates the code from
execution</source>
          <target state="translated">コードと実行を分離する</target>
        </trans-unit>
        <trans-unit id="3c0e7a1b5e34fd0115bf7d439c7677c9d16459dd" translate="yes" xml:space="preserve">
          <source>Separating task as Runnable means we can reuse the task and also has the liberty to execute it from different means. since you can not restart a Thread once it completes. again Runnable vs Thread for task, Runnable is winner.</source>
          <target state="translated">タスクをRunnableとして分離することは、タスクを再利用できるだけでなく、別の方法で実行する自由があることを意味します。</target>
        </trans-unit>
        <trans-unit id="410028c9b92c6e44e7a330f143b936d87c5fd5c1" translate="yes" xml:space="preserve">
          <source>Separating the Thread class from the Runnable implementation also avoids potential synchronization problems between the thread and the run() method. A separate Runnable generally gives greater flexibility in the way that runnable code is referenced and executed.</source>
          <target state="translated">また、Thread クラスを Runnable 実装から分離することで、スレッドと run()メソッド間の同期の問題を回避することができます。Runnable を分離することで、一般的には、Runnable コードの参照と実行の方法をより柔軟にすることができます。</target>
        </trans-unit>
        <trans-unit id="0daa17e77c542f541e21348f4cf8d158b7678ed4" translate="yes" xml:space="preserve">
          <source>Since this is a very popular topic and the good answers are spread all over and dealt with in great depth, I felt it is justifiable to compile the good answers from the others into a more concise form, so newcomers have an easy overview upfront:</source>
          <target state="translated">これは非常に人気のあるトピックであり、良い回答があちこちに散りばめられていて、深く扱われているので、他の人の良い回答をもっと簡潔な形にまとめて、初めての人が簡単に概要を知ることができるようにしておくのが妥当だと思いました。</target>
        </trans-unit>
        <trans-unit id="5b75e54af566c3e4cac465449dcdd22070551de1" translate="yes" xml:space="preserve">
          <source>So depending upon the requirement if our data is not senstive. So It can be shared between multiple Thread we can used Runnable interface.</source>
          <target state="translated">そのため、データがセンシティブでない場合には、要件に応じて、複数のスレッド間で共有することができます。そのため、複数のスレッド間で共有することができ、実行可能なインターフェイスを使用することができます。</target>
        </trans-unit>
        <trans-unit id="cc2f18f715f887a38db2fac1b1241ec481846a98" translate="yes" xml:space="preserve">
          <source>So let us obey the OOPs concept and write a class of the type we need. There are many ways to do things, doing it in the right way matters.</source>
          <target state="translated">ということで、OOPsの概念に従って、必要な型のクラスを書いてみましょう。いろいろな方法がありますが、正しい方法でやることが重要です。</target>
        </trans-unit>
        <trans-unit id="35d398a4b9b18fdc7eca96bc37d83626d17c05ac" translate="yes" xml:space="preserve">
          <source>So technically and theoretically  both of them is necessary to start a thread, one will &lt;strong&gt;run&lt;/strong&gt; and one will &lt;strong&gt;make it run&lt;/strong&gt; (Like &lt;strong&gt;&lt;code&gt;Wheel and Engine&lt;/code&gt;&lt;/strong&gt; of motor vehicle).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;だから、技術的、理論的にはそれらの両方のスレッドを開始する必要があり、一つはなり&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実行&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;し、一つはなります&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、それが実行します&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（同様に&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;Wheel and Engine&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自動車のを）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b545a2434898cfb8782ccf0a8d7e029fdb34da3" translate="yes" xml:space="preserve">
          <source>So the class &lt;code&gt;MyRunnable&lt;/code&gt; is nothing but a ordinary class with a &lt;code&gt;void run&lt;/code&gt; method.
And it's objects will be some ordinary objects with only a method &lt;code&gt;run&lt;/code&gt; which will execute normally when called.  (unless we pass the object in a thread).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、クラス&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyRunnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;void run&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;持つ通常のクラスにすぎません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そして、そのオブジェクトは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、呼び出されたときに正常に実行される&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;run&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のみを持ついくつかの通常のオブジェクトになります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（オブジェクトをスレッドで渡さない限り）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b54d7f8050854b9eb5a81cddc9af26dfd4b0ba6" translate="yes" xml:space="preserve">
          <source>So, if we replace their &lt;code&gt;runnable&lt;/code&gt; with your &lt;code&gt;threadA&lt;/code&gt;, we get the following:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我々は彼らの交換するのであれば、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;threadA&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、我々は次を得ます：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6400be6697fb840195678151fd7d93ac9d86eebe" translate="yes" xml:space="preserve">
          <source>Something That can start a new Thread (Thread).</source>
          <target state="translated">新しいスレッド(スレッド)を立ち上げることができる何か。</target>
        </trans-unit>
        <trans-unit id="fe268f9a806c7a97d6d78b294bdf3e80f71c44dd" translate="yes" xml:space="preserve">
          <source>Something that can run inside a Thread (Runnable).</source>
          <target state="translated">スレッドの中で実行できるもの(Runnable)。</target>
        </trans-unit>
        <trans-unit id="40efdd35ec1623fee9be759660a8c39ed3f0a7e0" translate="yes" xml:space="preserve">
          <source>That's the &lt;a href=&quot;http://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;S&lt;/a&gt; of &lt;a href=&quot;http://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29&quot;&gt;SOLID&lt;/a&gt;: Single responsibility.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SOLID&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;S&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：単一の責任。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad94796fb9f06c4d895e1c4991e7e6d3798f3795" translate="yes" xml:space="preserve">
          <source>That's why you can not start a thread with &lt;code&gt;MyRunnable&lt;/code&gt; you need to pass it to a instance of &lt;code&gt;Thread&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;MyRunnable&lt;/code&gt; で&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スレッドを開始できないのはそのためです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンスに渡す必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6aad014664026933196b93fc54db59834f16f791" translate="yes" xml:space="preserve">
          <source>The simplest explanation would be by implementing &lt;code&gt;Runnable&lt;/code&gt; we can assign the same object to multiple threads and each &lt;code&gt;Thread&lt;/code&gt; shares the same object states and behavior.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最も簡単な説明は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実装&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;することで、同じオブジェクトを複数のスレッドに割り当てることができ、各&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は同じオブジェクトの状態と動作を共有します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="df15d0f39c87e4500ca0893016552e9b7102d207" translate="yes" xml:space="preserve">
          <source>These are not only much shorter than your examples, but also come with many of the advantages stated in other answers of using &lt;code&gt;Runnable&lt;/code&gt; over &lt;code&gt;Thread&lt;/code&gt;, such as single responsibility and using composition because you're not specializing the thread's behaviour. This way also avoids creating an extra class if all you need is a &lt;code&gt;Runnable&lt;/code&gt; as you do in your examples.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらはあなたの例よりだけでなく、はるかに短いですが、また、使用しての他の回答に記載された利点の多くが付属してい&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かけ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、単一の責任として、そしてあなたがスレッドの振る舞いを専門としていないため、組成物を用いました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;では、例で行うように&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要なものがすべて&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; で&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ある場合にも、追加のクラスの作成を回避でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d96ffb505d8310ea93cce480e6ec5f788584907" translate="yes" xml:space="preserve">
          <source>These were some of the notable differences between Thread and Runnable in Java. If you know any other differences on Thread vs Runnable than please share it via comments. I personally use Runnable over Thread for this scenario and recommends to use Runnable or Callable interface based on your requirement.</source>
          <target state="translated">以上が Java における Thread と Runnable の顕著な違いの一部です。他にもThreadとRunnableの違いをご存知の方は、コメントで共有してください。個人的には、このシナリオではThreadよりもRunnableを使用していますが、要件に応じてRunnableまたはCallableインターフェイスを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="1d5f2ab080cd9280dace153cfc8f38854287fa20" translate="yes" xml:space="preserve">
          <source>This is discussed in Oracle's &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/essential/concurrency/runthread.html&quot;&gt;Defining and Starting a Thread&lt;/a&gt; tutorial:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これについては、Oracleの&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/essential/concurrency/runthread.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スレッド&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義と開始の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チュートリアルで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;説明されています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c3cbfd343caf7d647d887a68ac7b8a4a7d179d6" translate="yes" xml:space="preserve">
          <source>This makes it also easier to &lt;strong&gt;separate&lt;/strong&gt; task-logic and concurrency &lt;strong&gt;aspects in&lt;/strong&gt; your &lt;strong&gt;unit tests&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これにより&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ユニットテスト&lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タスクロジックと同時実行の&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;側面&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;分離&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するのも簡単になり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="17fc026b83d7e393a11f6a13c3426f6521cd7eac" translate="yes" xml:space="preserve">
          <source>This might seem like a small thing but where you have a very complex application with a lot of threads and all of a sudden things 'have stopped' (either for reasons of deadlock or possibly because of a flaw in a network protocol which would be less obvious - or other endless reasons) then getting a stack dump from Java where all the threads are called 'Thread-1','Thread-2','Thread-3' is not always very useful (it depends on how your threads are structured and whether you can usefully tell which is which just by their stack trace - not always possible if you are using groups of multiple threads all running the same code).</source>
          <target state="translated">これは小さなことのように思えるかもしれませんが、たくさんのスレッドを持つ非常に複雑なアプリケーションを持っていて、突然「止まってしまった」(デッドロックの理由か、あるいはネットワークプロトコルの欠陥のためか、それほど明白ではないでしょうが-その他の無限の理由)場合、すべてのスレッドが「Thread-1」と呼ばれているJavaからスタックダンプを取得しています。 'Thread-2','Thread-3' は必ずしも有用ではありません (スレッドがどのように構成されているか、またスタックトレースだけでどれがどれなのかがわかるかどうかによります-同じコードを実行している複数のスレッドのグループを使用している場合は必ずしも不可能です)。</target>
        </trans-unit>
        <trans-unit id="87abb7dd8e4d3d728598faa0e9340d014165ffb3" translate="yes" xml:space="preserve">
          <source>This two have a dependency and relationship in multi-threading just like &lt;code&gt;Wheel and Engine&lt;/code&gt; relationship of motor vehicle.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この2つは、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自動車の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Wheel and Engine&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関係&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同様に、マルチスレッドで依存関係を持ってい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="373daad7e9321644f3a446ea6144ee0baecf6a48" translate="yes" xml:space="preserve">
          <source>Those who like to solve puzzles can see another side effect of extending Thread. The below code 
will print unreachable code when nobody is notifying them.</source>
          <target state="translated">謎解きが好きな人はThreadを拡張することでもう一つの副作用を見ることができます。以下のコードは、誰も通知していないときに到達不可能なコードを表示します。</target>
        </trans-unit>
        <trans-unit id="06e005b4dac28bdf9b9f2e738e74f67830824baf" translate="yes" xml:space="preserve">
          <source>Use Runnable interface when you want to access the same resources from the group of threads. Avoid using Thread class here, because multiple objects creation consumes more memory and it becomes a big performance overhead.</source>
          <target state="translated">スレッドのグループから同じリソースにアクセスしたい場合は、Runnableインターフェースを使用します。複数のオブジェクトを作成するとメモリを多く消費し、大きなパフォーマンスオーバーヘッドになるので、ここでの Thread クラスの使用は避けてください。</target>
        </trans-unit>
        <trans-unit id="eae2c2b67ec1f551dfa203ea142e948ae61b60a7" translate="yes" xml:space="preserve">
          <source>We do not want the thread's property, instead we want our class to behave as a task which can be run.</source>
          <target state="translated">スレッドのプロパティではなく、実行可能なタスクとして振る舞うようにしたいのです。</target>
        </trans-unit>
        <trans-unit id="2004802c1def0bfbaa1871673f394eaa9ff880af" translate="yes" xml:space="preserve">
          <source>We need a task, so write a task definition which can be run on a Thread. So use Runnable.</source>
          <target state="translated">タスクが必要なので、スレッド上で実行できるタスク定義を書きます。そこで、Runnableを使います。</target>
        </trans-unit>
        <trans-unit id="78e7a8e6346110b062184eb90a63bd6b750dbc8b" translate="yes" xml:space="preserve">
          <source>Well so many good Answers, I want to add more on this. This will help to understand &lt;code&gt;Extending v/s Implementing Thread&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;良い答えがたくさんあるので、これについてさらに説明したいと思います。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Extending v/s Implementing Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;理解に役立ちます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b82c489f872b085a7ad003127345364fb69ed884" translate="yes" xml:space="preserve">
          <source>What is the difference between an interface and abstract class?</source>
          <target state="translated">インターフェースと抽象クラスの違いは?</target>
        </trans-unit>
        <trans-unit id="236d5cd63182e755c22e19a5adeee2748111f58c" translate="yes" xml:space="preserve">
          <source>When implementing &lt;code&gt;interface Runnable&lt;/code&gt; it means you are creating something which is &lt;code&gt;run able&lt;/code&gt; in a different thread. Now creating something which can run inside a thread (runnable inside a thread), doesn't mean to creating a Thread.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;interface Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実装&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するときは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、別のスレッドで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;run able&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なものを作成していることを意味します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スレッド内で実行できるもの（スレッド内で実行可能）を作成しても、スレッドを作成することにはなりません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3745fb71989a4e044c210feba42f4bf044bd3030" translate="yes" xml:space="preserve">
          <source>When there is a need to extend a superclass, implementing the Runnable interface is more appropriate than using the Thread class. Because we can extend another class while implementing Runnable interface to make a thread.</source>
          <target state="translated">スーパークラスを拡張する必要がある場合、Threadクラスを使うよりもRunnableインターフェースを実装した方が適切です。なぜなら、Runnableインターフェースを実装しながら他のクラスを拡張してスレッドを作ることができるからです。</target>
        </trans-unit>
        <trans-unit id="c5ff3968cb8985044c47e00b5cba9cc0fe8c5c1e" translate="yes" xml:space="preserve">
          <source>When you &lt;code&gt;extends Thread&lt;/code&gt; class, after that you can&amp;rsquo;t extend any other class which you required. (As you know, Java does not allow inheriting more than one class).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;拡張&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すると&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、その後は必要な他のクラスを拡張できなくなります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（ご存じのとおり、Javaでは複数のクラスを継承できません）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e17cab664efc85689b2242508d229076966d7955" translate="yes" xml:space="preserve">
          <source>When you &lt;code&gt;extends Thread&lt;/code&gt; class, each of your thread creates a unique object and associate with it.
When you &lt;code&gt;implements Runnable&lt;/code&gt;, it shares the same object to multiple threads.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;拡張&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すると&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、各スレッドが一意のオブジェクトを作成し、それに関連付けます。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;implements Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実装&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すると、同じオブジェクトを複数のスレッドで共有します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f2a76d24f44f7ae9e03bb03f42c6e15b134a771" translate="yes" xml:space="preserve">
          <source>When you &lt;code&gt;implements Runnable&lt;/code&gt;, you can save space for your class to extend any other class in the future or now.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;implements Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実装&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すると、クラスのスペースを節約して、将来または今すぐ他のクラスを拡張できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a128f112ee99f36368476f18bd5378db4c60d872" translate="yes" xml:space="preserve">
          <source>When you extend Thread class, after that you can&amp;rsquo;t extend any other class which you required. (As you know, Java does not allow inheriting more than one class).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Threadクラスを拡張すると、その後は必要な他のクラスを拡張できなくなります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（ご存じのとおり、Javaでは複数のクラスを継承できません）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd51cd51a205c0fcca4745df3354f5e1ab449908" translate="yes" xml:space="preserve">
          <source>When you implement Runnable, you can save space for your class to extend any other class in the future or now.</source>
          <target state="translated">Runnableを実装すると、将来的にも今からでも他のクラスを拡張するためのスペースを確保することができます。</target>
        </trans-unit>
        <trans-unit id="0e0e6973934c399e783b81b4042172920b877a88" translate="yes" xml:space="preserve">
          <source>Whereas, Thread class approach, you must have to create separate instance for every thread access. Hence different memory is allocated for every class instances and each has separate counter, the value remains same, which means no increment will happen because none of the object reference is same.</source>
          <target state="translated">一方、スレッドクラスのアプローチでは、スレッドアクセスごとに別々のインスタンスを作成しなければなりません。そのため、クラスインスタンスごとに異なるメモリが割り当てられ、それぞれが別々のカウンタを持っているため、値は同じままです。</target>
        </trans-unit>
        <trans-unit id="0ffdc76564caf2c123c9ca2dce9891279792861c" translate="yes" xml:space="preserve">
          <source>Which of these idioms should you use? The first idiom, which employs a
  Runnable object, is more general, because the Runnable object can
  subclass a class other than Thread. The second idiom is easier to use
  in simple applications, but is limited by the fact that your task
  class must be a descendant of Thread. This lesson focuses on the first
  approach, which separates the Runnable task from the Thread object
  that executes the task. Not only is this approach more flexible, but
  it is applicable to the high-level thread management APIs covered
  later.</source>
          <target state="translated">これらのイディオムのうち、どれを使うべきでしょうか?最初のイディオムは、Runnable オブジェクトを使用していますが、Runnable オブジェクトは Thread 以外のクラスをサブクラス化できるので、より一般的です。2 番目のイディオムはシンプルなアプリケーションで使いやすいですが、タスククラスが Thread の子孫でなければならないという事実によって制限されています。このレッスンでは、タスクを実行する Thread オブジェクトから Runnable タスクを分離する 1 番目のアプローチに焦点を当てます。このアプローチはより柔軟性が高いだけでなく、後述する高レベルのスレッド管理 API にも適用できます。</target>
        </trans-unit>
        <trans-unit id="ff77565865db636f68fb467b8723798b53763440" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;implements Runnable&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;implements Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="853fa9256b5a0955063f44f7f3c0fb638d4ab72b" translate="yes" xml:space="preserve">
          <source>With the release of Java 8, there is now a third option.</source>
          <target state="translated">Java 8のリリースに伴い、3つ目のオプションが追加されました。</target>
        </trans-unit>
        <trans-unit id="a4d2dd0a50a02054e9052afd60821e047d2d17f3" translate="yes" xml:space="preserve">
          <source>Yes,
If you call ThreadA call , then  not need to call the start method and run method is call after call the ThreadA class only.
But If use the ThreadB call then need to necessary the start thread for call run method.
If you have any more help, reply me.</source>
          <target state="translated">はい、ThreadAを呼び出す場合は、スタートメソッドを呼び出す必要はなく、ThreadAクラスを呼び出した後にランメソッドを呼び出すだけです。しかし、スレッドBの呼び出しを使用する場合は、実行メソッドを呼び出すために必要な起動スレッドを必要とします。あなたがより多くの助けを持っている場合は、私を返信してください。</target>
        </trans-unit>
        <trans-unit id="c203d4090e273e2d4aba99a65662a708ee1a406f" translate="yes" xml:space="preserve">
          <source>Yes: implements &lt;code&gt;Runnable&lt;/code&gt; is the preferred way to do it, IMO. You're not really specialising the thread's behaviour.  You're just giving it something to run. That means &lt;a href=&quot;http://en.wikipedia.org/wiki/Object_composition&quot;&gt;composition&lt;/a&gt; is the &lt;em&gt;philosophically&lt;/em&gt; &quot;purer&quot; way to go.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はい：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実装することをお&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;勧め&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します（IMO）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スレッドの動作に特化しているわけではありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実行する何かを与えるだけです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Object_composition&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作曲&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;哲学的に&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「より純粋な」方法であるということです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d7535bb12b09b60b4eaa34abc75b026915b88b7" translate="yes" xml:space="preserve">
          <source>You can &lt;strong&gt;execute&lt;/strong&gt; the same Runnable &lt;strong&gt;object multiple times&lt;/strong&gt;, a Thread object, however, can only be started once. (Maybe the reason, why Executors do accept Runnables, but not Threads.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同じRunnable &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトを複数回&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実行&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;できますが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、Threadオブジェクトは1回しか開始できません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（多分理由は、ExecutorsがRunnableを受け入れるが、スレッドを受け入れない理由です。）&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10b3f87aede523f4acf1b8326dd109f256a041ff" translate="yes" xml:space="preserve">
          <source>You might even for example take a stack trace of its creation and use that as the thread name.  This might seem odd but depending on how your code is structured it can be very useful for debugging purposes.</source>
          <target state="translated">例えば、作成時のスタックトレースをスレッド名として使用することもできます。これは奇妙に思えるかもしれませんが、あなたのコードの構造によっては、デバッグの目的に非常に役立ちます。</target>
        </trans-unit>
        <trans-unit id="c7ea60dfce8ee7cc8cc687888edf4b04532f8f6a" translate="yes" xml:space="preserve">
          <source>You should implement Runnable, but if you are running on Java 5 or higher, you should not start it with &lt;code&gt;new Thread&lt;/code&gt; but use an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html&quot;&gt;ExecutorService&lt;/a&gt; instead. For details see: &lt;a href=&quot;https://stackoverflow.com/questions/125333/how-to-implement-simple-threading-in-java&quot;&gt;How to implement simple threading in Java&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnableを実装する必要がありますが、Java 5以降で実行している場合は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;起動せずに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ExecutorService&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細については&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/125333/how-to-implement-simple-threading-in-java&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、Javaで単純なスレッドを実装する方法を&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00e264d4c0d3056d3f62ecbb163750347e769810" translate="yes" xml:space="preserve">
          <source>You usually extend a class to add or modify functionality. So, &lt;em&gt;if you don't want&lt;/em&gt; to &lt;strong&gt;overwrite&lt;/strong&gt; any &lt;strong&gt;Thread behavior&lt;/strong&gt;, then use Runnable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常、クラスを拡張して機能を追加または変更します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;だから、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたがしたくない場合は&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上書き&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;任意の&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スレッドの動作を&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、その後のRunnableを使用しています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b52ab0bbdc36fa3ce8200d348176405633795fd4" translate="yes" xml:space="preserve">
          <source>Your example can be replaced with:</source>
          <target state="translated">あなたの例は次のように置き換えられます。</target>
        </trans-unit>
        <trans-unit id="889fbbe3190eae4f82286aac9145244b9f720d11" translate="yes" xml:space="preserve">
          <source>algorithm implemented by the piece of code (the runnable part)</source>
          <target state="translated">コードで実装されたアルゴリズム</target>
        </trans-unit>
        <trans-unit id="831283a4238416a712158b2f309e2619a8e56f24" translate="yes" xml:space="preserve">
          <source>and here's a sample of the output comparing the two names:</source>
          <target state="translated">と、2つの名前を比較した出力のサンプルです。</target>
        </trans-unit>
        <trans-unit id="5a408b341b31218147e3d07a1b8bcf1d2dddf347" translate="yes" xml:space="preserve">
          <source>but if you extend Thread then you get to manage this within the class itself (just like in your example you name the thread 'ThreadB').  In this case you:</source>
          <target state="translated">しかし、Thread を拡張した場合は、クラス自体で管理できるようになります (この例ではスレッドに 'ThreadB' という名前をつけています)。この場合は</target>
        </trans-unit>
        <trans-unit id="bcc7a7abbf820d9dc66f259bff8b86536c17ffa6" translate="yes" xml:space="preserve">
          <source>extends establishes &quot;&lt;strong&gt;Is A&lt;/strong&gt;&quot; relation &amp;amp; interface provides &quot;&lt;strong&gt;Has a&lt;/strong&gt;&quot; capability.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;extendsは、「&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Is A&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」関係を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;確立し、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インターフェースは「&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Has&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」機能を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;提供し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e52aaa5198aa8b1154e2f65db0ea2273d0bc235" translate="yes" xml:space="preserve">
          <source>if you use runnable you can save the space to extend to any of your other class.</source>
          <target state="translated">runnableを使えば、他のクラスに拡張するためのスペースを節約できます。</target>
        </trans-unit>
        <trans-unit id="fbce27d51b99de0c79be3f3c9f8364605a9d2088" translate="yes" xml:space="preserve">
          <source>or if you want to use an &lt;code&gt;ExecutorService&lt;/code&gt; and a method reference:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExecutorService&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とメソッド参照&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7fabc7ad01f56a22be539223a1585398a01c5e4a" translate="yes" xml:space="preserve">
          <source>thread handling in your application (ie. querying and modifying the execution context)</source>
          <target state="translated">アプリケーションでのスレッド処理 (実行コンテキストの問い合わせや変更など)</target>
        </trans-unit>
        <trans-unit id="48daf3a4108e0153576830925850ba9eb4db5204" translate="yes" xml:space="preserve">
          <source>“implements Runnable” vs “extends Thread” in Java</source>
          <target state="translated">Javaにおける &quot;実行可能な実装 &quot;と &quot;スレッドを拡張する &quot;の比較</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
