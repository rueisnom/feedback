<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/541487">
    <body>
      <group id="541487">
        <trans-unit id="62d7599ad22b415fd81a46bb984ace574bdb41cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Runnable&lt;/code&gt; is a &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se8/html/jls-9.html#jls-9.8&quot;&gt;functional interface&lt;/a&gt;, which means that instances of it can be created with lambda expressions or method references.</source>
          <target state="translated">&lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se8/html/jls-9.html#jls-9.8&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기능적인 인터페이스로&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 람다 식이나 메서드 참조로 인스턴스를 만들 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="116c0e349c8adf71e2851bf8b8e246107e3f91ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Runnable&lt;/code&gt; is an interface, while &lt;code&gt;Thread&lt;/code&gt; is a class which implements this interface. From a design point of view, there should be a clean separation between how a task is defined and between how it is executed. The former is the responsibility of a &lt;code&gt;Runnalbe&lt;/code&gt; implementation, and the latter is job of the &lt;code&gt;Thread&lt;/code&gt; class. In most of the cases implementing &lt;code&gt;Runnable&lt;/code&gt; is the right way to follow.</source>
          <target state="translated">&lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 인터페이스이고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는이 인터페이스를 구현하는 클래스입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;디자인 관점에서 작업을 정의하는 방법과 실행 방법을 명확하게 분리해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전자는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnalbe&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구현 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 책임이며 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;후자는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스의 역할입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대부분의 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구현하는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것이 올바른 방법입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b86924146ba68c8bfd370d9c8cbb28aac882d4fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class Thread&lt;/code&gt;, I would say A very special class with the capability of starting a new Thread which actually enables multi-threading through its &lt;code&gt;start()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;class Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;start()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;통해 멀티 스레딩을 실제로 가능하게하는 새 Thread를 시작할 수있는 매우 특별한 클래스라고 말할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c15dd2569a57d806fadcddf028f79b29110b61b8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;However, one &lt;strong&gt;significant difference&lt;/strong&gt; between implementing Runnable and extending Thread is that&lt;br/&gt;&lt;/em&gt;&lt;code&gt;by extending Thread, each of your threads has a unique object associated with it, whereas implementing Runnable, many threads can share the same object instance.&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnable 구현과 Thread 확장의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한 가지 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;중요한 차이점&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 Thread &lt;/font&gt;&lt;/font&gt;&lt;br/&gt;&lt;/em&gt; &lt;code&gt;by extending Thread, each of your threads has a unique object associated with it, whereas implementing Runnable, many threads can share the same object instance.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b988bc45bc21ad749b545ef24e587c2b5f114b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Inherit less, interface more.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;상속이 적고 인터페이스가 더 많습니다.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="30a1ec52c8acc5aaae9b6547af7f98134ab406ff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Inherit only if you want to override some behavior.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부 동작을 재정의하려는 경우에만 상속하십시오.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f852eec1c67548328367f539479b598b7a14ec96" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The most common difference is&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가장 일반적인 차이점은&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b223e924ba49f56988aa04f2055a59e975212ebd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;But&lt;/strong&gt; it is possible to create and run a thread only using &lt;code&gt;class Thread&lt;/code&gt; because Class &lt;code&gt;Thread&lt;/code&gt; implements &lt;code&gt;Runnable&lt;/code&gt; so we all know &lt;code&gt;Thread&lt;/code&gt; also is a &lt;code&gt;Runnable&lt;/code&gt; inside.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;class Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 &lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구현 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하므로 &lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 내부 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이기 때문에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 만 사용하여 스레드를 작성하고 실행할 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33dfb729fa599af728a752ed201e739a5d966fee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caveat:&lt;/strong&gt; Around here, I strongly discourage the use of raw Threads.  I much prefer the use of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html&quot;&gt;Callables&lt;/a&gt; and &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html&quot;&gt;FutureTasks&lt;/a&gt; (From the javadoc: &quot;A cancellable asynchronous computation&quot;).  The integration of timeouts, proper cancelling and the thread pooling of the modern concurrency support are all much more useful to me than piles of raw Threads.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주의 사항 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 여기에서는 원시 스레드를 사용하지 않는 것이 좋습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Callables&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;FutureTasks를&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하는 것을 선호한다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(javadoc에서 : &quot;취소 가능한 비동기 계산&quot;). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;타임 아웃의 통합, 적절한 취소 및 현대 동시성 지원의 스레드 풀링은 원시 스레드 더미보다 훨씬 유용합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4c85343fff48abdfd37e9a075ad989b17c7bcfbc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Finally &lt;code&gt;Thread&lt;/code&gt; and &lt;code&gt;Runnable&lt;/code&gt; are complement to each other for multithreading  not competitor or replacement.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마지막으로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 경쟁 업체 나 교체가 아닌 멀티 스레딩을 위해 서로 보완됩니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0446a2d3bfa32a6642a07c8288096de869a468f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Follow-up:&lt;/strong&gt; there is a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html#FutureTask-java.lang.Runnable-V-&quot;&gt;&lt;code&gt;FutureTask&lt;/code&gt; constructor&lt;/a&gt; that allows you to use Runnables (if that's what you are most comfortable with) and still get the benefit of the modern concurrency tools.  &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html#FutureTask-java.lang.Runnable-V-&quot;&gt;To quote the javadoc&lt;/a&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;후속 조치 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Runnables (가장 편리한 경우)를 사용하고 최신 동시성 도구의 이점을 얻을 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html#FutureTask-java.lang.Runnable-V-&quot;&gt; &lt;code&gt;FutureTask&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 생성자&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 있습니다. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html#FutureTask-java.lang.Runnable-V-&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;javadoc을 인용하려면&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="254579b24d70af9cbffecebd938228d377a4f136" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;However, the significant difference is.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 중요한 차이점입니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fe49c0f5735c2402b764994567ccd17720327894" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output of the above program.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위 프로그램의 출력.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5300730740365005553c18a35abea43a5b886fd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Runnable:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Runnable:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46f5806762d4667225feed291bd581c3cc082aba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Single inheritance&lt;/strong&gt;: If you extend Thread you cannot extend from any other class, so if that is what you need to do, you have to use Runnable.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;단일 상속&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : Thread를 확장하면 다른 클래스에서 확장 할 수 없으므로 필요한 경우 Runnable을 사용해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e3b390bbd2f268235c45e0aab537a5330726679c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The following example will help you to understand more clearly&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 예제는 더 명확하게 이해하는 데 도움이됩니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="385cd01aebb4efad5824ac0762cc2e1fa2699741" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The most common difference is&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가장 일반적인 차이점은&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c55c19a3f218b2f4994d24908e37e4f7e7a0dba3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Thread:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Thread:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60dcf72cf52ecad4e2613a990dd2c8d245e153ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;When to use Runnable?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnable을 언제 사용해야합니까?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8dbac19e5f4c4ce89943b920969b5d590ef94fb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why not wise to compare?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;왜 현명하게 비교하지 않습니까?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a8977199b77ba714127ba9ccd60a24bc4d94016" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tl;dr: implements Runnable is better.  However, the caveat is important&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tl; dr : Runnable이 더 좋습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나주의 사항은 중요합니다&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e28fab52450edf730501a2469988b5fa9d89f14c" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;thread&lt;/em&gt; embodies the &lt;strong&gt;running context&lt;/strong&gt; (as in execution context: stack frame, thread id, etc.) of the &lt;em&gt;asynchronous execution&lt;/em&gt; of a piece of code. That &lt;em&gt;piece of code&lt;/em&gt; ideally should be the same implementation, whether &lt;em&gt;synchronous&lt;/em&gt; or &lt;em&gt;asynchronous&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구체화 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실행 컨텍스트&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 (스택 프레임 스레드 ID 등의 실행 환경에서와 같이) &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비동기 실행&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 코드의 조각. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동기식&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이든 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비동기식&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이든 동일한 구현이 이상적 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dd27ec3a109b191a2b4337d0e189ff11a09daa24" translate="yes" xml:space="preserve">
          <source>A class that implements Runnable is not a thread and just a class. For a Runnable to become a Thread, You need to create an instance of Thread and passing itself in as the target.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnable을 구현하는 클래스는 스레드가 아니라 클래스입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnable이 스레드가 되려면 Thread 인스턴스를 작성하고 대상으로 전달해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="135959f92ccea58dd0ae914dbd2b7e95c97465fe" translate="yes" xml:space="preserve">
          <source>A) might give it a more useful name for debugging purposes</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A) 디버깅 목적으로 더 유용한 이름을 줄 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f75a870d262f786db6d8ecd48442db110ed4409" translate="yes" xml:space="preserve">
          <source>Actually, It is not wise to compare &lt;code&gt;Runnable&lt;/code&gt; and &lt;code&gt;Thread&lt;/code&gt; with each other.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 서로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비교하는 것은 현명하지 않습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49c48e3500611ab4c25b532be6a67db336ad4144" translate="yes" xml:space="preserve">
          <source>Adding my two cents here -
&lt;strong&gt;Always whenever possible use &lt;code&gt;implements Runnable&lt;/code&gt; . Below are two caveats on why you should not use 
&lt;code&gt;extends Thread&lt;/code&gt;s&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 두 센트를 여기에 추가- &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가능하면 항상 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;implements Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 사용하지 말아야하는 이유에 대한 두 가지주의 사항이 있습니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 들&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e21ccd7ef72f4e2238fd70d36dd64f5606395ac" translate="yes" xml:space="preserve">
          <source>Allows you to run your
runnable from a Thread Pool, the
event thread, or in any other way in
the future.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드 풀, 이벤트 스레드 또는 향후 다른 방법으로 실행 가능 파일을 실행할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0eacf29e8e5fc23869b004f56ea19fe3149cb3d" translate="yes" xml:space="preserve">
          <source>Always remember &lt;code&gt;implements&lt;/code&gt; is specially used to impart a behaviour and &lt;code&gt;extends&lt;/code&gt; is used to impart a feature/property.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;항상 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;implements&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 동작 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 부여하는 데 사용 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 기능 / 속성을 부여하는 데 사용됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="41932dab476ae54b2ba9663f01438a39888a91f3" translate="yes" xml:space="preserve">
          <source>Another option that allows you to stay closer to Runnables is a &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html&quot;&gt;ThreadPoolExecutor&lt;/a&gt;.  You can use the &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html#execute%28java.lang.Runnable%29&quot;&gt;execute&lt;/a&gt; method to pass in a Runnable to execute &quot;the given task sometime in the future.&quot;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnables에 더 가까이 머물 수있는 또 다른 옵션은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ThreadPoolExecutor&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html#execute%28java.lang.Runnable%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;execute&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하여 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnable을 전달하여 &quot;언제나 주어진 작업을 실행&quot;할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26a30ff47e3f0bd898dc6328f6bd6e16780bde5b" translate="yes" xml:space="preserve">
          <source>B) are forcing that that name be used for all instances of that class (unless you ignore the fact that it is a thread and do the above with it as if it is a Runnable but we are talking about convention here in any case so can ignore that possibility I feel).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;B) 그 이름을 해당 클래스의 모든 인스턴스에 사용하도록 강요하고 있습니다 (스레드라는 사실을 무시하고 Runnable 인 것처럼 위와 같이 수행하지는 않지만 여기서는 관습에 대해 이야기하고 있습니다) 내가 느끼는 그 가능성을 무시하십시오).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9c33e4b992bcd5ad5f1c70acf00ed1d2876f6bf9" translate="yes" xml:space="preserve">
          <source>Because we need both of them for multi-threading.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;멀티 스레딩에는 둘 다 필요하기 때문입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d79bf5095fe6c49cabb42938911118237ccae20d" translate="yes" xml:space="preserve">
          <source>Both approaches do the same job but there have been some differences.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 방법 모두 동일한 작업을 수행하지만 약간의 차이가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e47335bb4fee1525429811ff1fc770416433d4c1" translate="yes" xml:space="preserve">
          <source>Can we re-visit the basic reason we wanted our class to behave as a &lt;code&gt;Thread&lt;/code&gt;?
There is no reason at all, we just wanted to execute a task, most likely in an asynchronous mode, which precisely means that the execution of the task must branch from our main thread and the main thread if finishes early, may or may not wait for the branched path(task).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 동작하기를 원하는 기본 이유를 다시 방문 할 수 있습니까 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전혀 이유가 없습니다. 우리는 단지 비동기 모드에서 작업을 실행하고 싶었습니다. 정확히 작업이 실행되면 기본 스레드와 기본 스레드에서 분기되어야하며 조기에 완료되면 대기하거나 대기하지 않을 수 있습니다 분기 경로 (작업).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8be41cdea7c33cb4adc7250b989a0c2044687900" translate="yes" xml:space="preserve">
          <source>Courtesy from &lt;a href=&quot;http://javarevisited.blogspot.com/2012/01/difference-thread-vs-runnable-interface.html&quot;&gt;javarevisited.blogspot.com&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;http://javarevisited.blogspot.com/2012/01/difference-thread-vs-runnable-interface.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;javarevisited.blogspot.com의&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의례&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c9f7d1da0ff0684e9567952b066f07f4297dd22f" translate="yes" xml:space="preserve">
          <source>Difference between Extending Thread and Implementing Runnable are:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;확장 스레드와 Runnable 구현의 차이점은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="74dcd980d3973daacec13a025b6f485731d7df7e" translate="yes" xml:space="preserve">
          <source>Difference between Thread and runnable
.If  we are creating Thread using Thread class then Number of thread equal to number of object we created  .
If we are creating thread  by implementing the runnable interface then we can use single object for creating multiple thread.So single object is shared by multiple Thread.So it will take less memory</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Thread와 runnable의 차이점 Thread 클래스를 사용하여 Thread를 생성하는 경우 생성 한 객체 수와 동일한 Thread 수입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실행 가능한 인터페이스를 구현하여 스레드를 만드는 경우 단일 스레드를 사용하여 여러 스레드를 만들 수 있습니다. 따라서 단일 개체는 여러 스레드에서 공유되므로 메모리가 적게 걸립니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a7c47f8b2ce8dea4b0409949c8129ad4c6aedfc2" translate="yes" xml:space="preserve">
          <source>Edit: This originally said &quot;Implementing an interface requires less resources.&quot; as well, but you need to create a new Thread instance either way, so this was wrong.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;편집 : 원래는 &quot;인터페이스를 구현하는 데 적은 리소스가 필요합니다.&quot;라고 말했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 어느 쪽이든 새 Thread 인스턴스를 만들어야하므로 잘못되었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de2f5151cd39d59bda01ca84b744dabe74b89f7a" translate="yes" xml:space="preserve">
          <source>Even if you don't need any of this now, you may in the future. Since there is no benefit to overriding Thread, Runnable is a better solution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;지금은이 중 어느 것도 필요하지 않더라도 앞으로있을 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Thread를 재정의하는 데는 이점이 없으므로 Runnable이 더 나은 솔루션입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db728c13fa2fea56c5941384a6f027e4f3d57e52" translate="yes" xml:space="preserve">
          <source>Everyone here seems to think that implementing Runnable is the way to go and I don't really disagree with them but there is also a case for extending Thread in my opinion, in fact you have sort of demonstrated it in your code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에있는 모든 사람들은 Runnable을 구현하는 것이 갈 길이라고 생각하고 실제로 의견에 동의하지 않지만 내 의견으로는 Thread를 확장하는 경우도 있습니다. 실제로 코드에서 설명했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e327a40b4b2ef97c716273219e936462bc2ac116" translate="yes" xml:space="preserve">
          <source>ExecutorService vs Casual Thread Spawner</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ExecutorService 및 캐주얼 스레드 생성기&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="873e43ca5da7a236c58074640430b89a7c6e98c1" translate="yes" xml:space="preserve">
          <source>Extends binds two class files very closely and can cause some pretty hard to deal with code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Extends는 두 클래스 파일을 매우 밀접하게 바인딩하며 코드를 다루기가 다소 어려울 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="72c557fcc430efa3db736e13c6d814068b4763ce" translate="yes" xml:space="preserve">
          <source>For Example: If you create an applet then it must extends Applet class so here the only way to create thread is by implementing Runnable interface</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 : 애플릿을 작성하는 경우 애플릿 클래스를 확장해야하므로 여기에서 스레드를 작성하는 유일한 방법은 Runnable 인터페이스를 구현하는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e0db58a3276b57e311061e331b51a908b0fdec0" translate="yes" xml:space="preserve">
          <source>For Multi-threading we need two things:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;멀티 스레딩에는 두 가지가 필요합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad0dd8459fdd20171f50f23ce34e179caa3828b9" translate="yes" xml:space="preserve">
          <source>For example, suppose there are two threads, &lt;strong&gt;thread1&lt;/strong&gt; puts an integer in an array and &lt;strong&gt;thread2&lt;/strong&gt; takes integers from the array when the array is filled up. Notice that in order for &lt;strong&gt;thread2&lt;/strong&gt; to work it needs to know the state of array, whether &lt;strong&gt;thread1&lt;/strong&gt; has filled it up or not.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 스레드가 두 개 있다고 가정합니다. &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;thread1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 배열에 정수를 넣고 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;thread2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 배열이 채워질 때 배열에서 정수를 가져옵니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;순서에 대한 통지 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;thread2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 작동 할 수는 있는지, 배열의 상태를 알 필요가 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;thread1이&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 그것을 채워지거나하지 않았다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="027fc99eb14610b99442ecf66068ebe52172ab64" translate="yes" xml:space="preserve">
          <source>From what time I've spent with threads in Java, I've found these two ways to write threads:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java에서 스레드를 사용한 시간부터 스레드를 작성하는 다음 두 가지 방법을 찾았습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="324d3a5aa1c2638d183de831f76dc3e117b5a876" translate="yes" xml:space="preserve">
          <source>Generally you don't need to override Thread behaviour. So &lt;strong&gt;implements Runnable&lt;/strong&gt; is preferred for most of the times.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적으로 스레드 동작을 재정의 할 필요는 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대부분의 경우 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnable&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 선호됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a1e0bf4d5d4a889893d51a1a1f5f32748103403" translate="yes" xml:space="preserve">
          <source>Have a look at this SE Question:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 SE 질문을 살펴보십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a92b6fe7283d99b84d9efb43b57c328c5537197" translate="yes" xml:space="preserve">
          <source>Having said that you could of course also do the above in a generic way by creating an extension of the thread class which sets its name to a stack trace of its creation call and then use that with your Runnable implementations instead of the standard java Thread class (see below) but in addition to the stack trace there might be more context specific information that would be useful in the thread name for debugging (a reference to one of many queues or sockets it could processing for example in which case you might prefer to extend Thread specifically for that case so that you can have the compiler force you (or others using your libraries) to pass in certain info (e.g. the queue/socket in question) for use in the name).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;물론 이름을 생성 호출의 스택 추적으로 설정하고 표준 Java Thread 클래스 대신 Runnable 구현과 함께 사용하는 스레드 클래스의 확장을 작성하여 일반적인 방법으로 위의 작업을 수행 할 수 있다고 말 했음 (아래 참조) 스택 추적 외에도 디버깅을 위해 스레드 이름에 유용한 더 많은 컨텍스트 특정 정보가있을 수 있습니다 (예 : 처리 할 수있는 많은 대기열 또는 소켓 중 하나에 대한 참조) 이 경우 스레드를 구체적으로 확장하여 컴파일러가 (또는 라이브러리를 사용하는 다른 사람들이) 이름에 사용하기 위해 특정 정보 (예 : 해당 큐 / 소켓)를 전달하도록 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="08c2a23ab0fb11ecbf096de100a93e5d6df911bf" translate="yes" xml:space="preserve">
          <source>Here's an example of the generic thread with the calling stack trace as its name:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 호출 스택 추적을 이름으로 사용하는 일반 스레드의 예입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="85c6fc0c437b526c125958f58dea7f0a6304bc9d" translate="yes" xml:space="preserve">
          <source>I find it is most useful to use Runnable for all the reasons mentioned, but sometimes I like to extend Thread so I can create my own thread stopping method and call it directly on the thread I have created.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;언급 한 모든 이유로 Runnable을 사용하는 것이 가장 유용하다는 것을 알지만 때로는 스레드를 확장하여 자체 스레드 중지 메소드를 작성하고 작성한 스레드에서 직접 호출 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65e5522b9e1d0900d5cb4c27b63d9563294a2ca8" translate="yes" xml:space="preserve">
          <source>I hope this will help!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 도움이되기를 바랍니다!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac79c883e4ced0595548e43e7b91c190d465117f" translate="yes" xml:space="preserve">
          <source>I would say there is a third way:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;세 번째 방법이 있다고 말할 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a5b37ac8da09cf214b5f808911594fe6e0322540" translate="yes" xml:space="preserve">
          <source>I would say, there is only one way for multi-threading with two steps. Let me make my point.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 두 단계로 멀티 스레딩을위한 한 가지 방법 만 있다고 말합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 요점을 알려 드리겠습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ffd9431249fb87edb68e5ca0e5eadd333491c1d" translate="yes" xml:space="preserve">
          <source>I'm not an expert, but I can think of one reason to implement Runnable instead of extend Thread: Java only supports single inheritance, so you can only extend one class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 전문가가 아니지만 확장 스레드 대신 Runnable을 구현 해야하는 한 가지 이유를 생각할 수 있습니다 .Java는 단일 상속 만 지원하므로 하나의 클래스 만 확장 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3d18427aa094ab6f29978b9fefeb6265b1bc5ba5" translate="yes" xml:space="preserve">
          <source>Ideally you should never extend the Thread class; the &lt;code&gt;Thread&lt;/code&gt; class should be made &lt;code&gt;final&lt;/code&gt;.
At least its methods like &lt;code&gt;thread.getId()&lt;/code&gt;. 
See &lt;a href=&quot;http://jsr166-concurrency.10961.n7.nabble.com/RRWL-with-bad-Thread-getId-implementations-tc9754.html&quot;&gt;this&lt;/a&gt; discussion for a bug related to extending &lt;code&gt;Thread&lt;/code&gt;s.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이상적으로 Thread 클래스를 확장해서는 안됩니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스는해야한다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;final&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;최소한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;thread.getId()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 같은 메소드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 확장과 관련된 버그에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대해서는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsr166-concurrency.10961.n7.nabble.com/RRWL-with-bad-Thread-getId-implementations-tc9754.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 토론을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f44e3a1488fb5cf36acdf48aa499bffe3b7c9eea" translate="yes" xml:space="preserve">
          <source>If I am not wrong, it's more or less similar to</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 틀리지 않으면, 그것은 다소 비슷합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc4df36da4c1e2f7c07b23a2de59954222a5db54" translate="yes" xml:space="preserve">
          <source>If You are already extending another class</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이미 다른 수업을 연장하고 있다면&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6342a47eeea1ceaf847f21eddecb3fe8da59af40" translate="yes" xml:space="preserve">
          <source>If the language you use supports partial classes or multiple inheritance, then you can segregate each cause in its own super class, but it boils down to the same as composing the two objects, since their feature sets don't overlap. That's for the theory.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하는 언어가 부분 클래스 또는 다중 상속을 지원하는 경우 각 원인을 자체 수퍼 클래스로 분리 할 수 ​​있지만 기능 세트가 겹치지 않기 때문에 두 객체를 구성하는 것과 동일하게 요약됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 이론을위한 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b122904374814680e0c87c8ebb323dabf5fab2d4" translate="yes" xml:space="preserve">
          <source>If this is the whole purpose, then where do I see the need of a specialized Thread. This can be accomplished by picking up a RAW Thread from the System's Thread Pool and assigning it our task (may be an instance of our class) and that is it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 전체 목적이라면 특수 스레드가 필요한 곳은 어디입니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 시스템의 스레드 풀에서 RAW 스레드를 선택하여 태스크 (클래스의 인스턴스 일 수 있음)를 지정하여 수행 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ef11e5e55d83ab9d5ce38a2d8df28f84ce13289e" translate="yes" xml:space="preserve">
          <source>If you are executing a fire and forget command</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;화재를 실행하고 명령을 잊어 버린 경우&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a150e16e712299b680363d48a4671c90d3457795" translate="yes" xml:space="preserve">
          <source>If you are interested in this question, you might be also interested in the &lt;a href=&quot;https://stackoverflow.com/questions/141284/the-difference-between-the-runnable-and-callable-interfaces-in-java&quot;&gt;difference between Callable and Runnable&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 질문에 관심이 있다면 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/141284/the-difference-between-the-runnable-and-callable-interfaces-in-java&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Callable과 Runnable&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;차이점에&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 관심이있을 수도 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95cb8c47af9fbbf31a40163a2329471f34c2e617" translate="yes" xml:space="preserve">
          <source>If you bundle them together in one implementation, you give the resulting object two &lt;em&gt;unrelated&lt;/em&gt; causes of change:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하나의 구현으로 함께 묶으면 결과 객체에 두 가지 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;관련없는&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변경 원인이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f39c6fd9d3033b1b085b0b29ced0065c77ca5abd" translate="yes" xml:space="preserve">
          <source>If you develop your task as Runnable, you have &lt;strong&gt;all flexibility how to use it now and in the future&lt;/strong&gt;. You can have it run concurrently via Executors but also via Thread. And you still could also use/call it non-concurrently within the same thread just as any other ordinary type/object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnable로 작업을 개발 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 현재와 미래에&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 작업 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 사용할 수있는 유연성이 있습니다&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실행기를 통해 동시에 스레드를 통해 실행할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 다른 일반 유형 / 객체와 마찬가지로 동일한 스레드 내에서 비동 시적으로 사용 / 호출 할 수도 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b06233f340315d59abea0994a2ed12b611e3a1c" translate="yes" xml:space="preserve">
          <source>If you don't have to extend Thread class and modify Thread API default implementation</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Thread 클래스를 확장하고 Thread API 기본 구현을 수정할 필요가없는 경우&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="22ee7e19c4800fd711a27680a44778c07383aeee" translate="yes" xml:space="preserve">
          <source>If you don't need a particular result, consider using constructions of the form:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;특정 결과가 필요하지 않은 경우 다음 형식의 구성을 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="759d8c161af67860e42c2161b3f08627956f146f" translate="yes" xml:space="preserve">
          <source>If you extend Thread, you're basically preventing your logic to be executed by any other thread than 'this'. If you only want &lt;em&gt;some&lt;/em&gt; thread to execute your logic, it's better to just implement Runnable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Thread를 확장하면 기본적으로 'this'이외의 다른 스레드에서 논리를 실행하지 못하게됩니다. &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 스레드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서만 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;논리를 실행하려면 Runnable을 구현하는 것이 좋습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="60811860db91d34de647218919147c3c05adb03c" translate="yes" xml:space="preserve">
          <source>If you extend thread then the action you're doing is always going to be in a thread.  However, if you implement &lt;code&gt;Runnable&lt;/code&gt; it doesn't have to be.  You can run it in a thread, or pass it to some kind of executor service, or just pass it around as a task within a single threaded application (maybe to be run at a later time, but within the same thread).  The options are a lot more open if you just use &lt;code&gt;Runnable&lt;/code&gt; than if you bind yourself to &lt;code&gt;Thread&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드를 확장하면 수행중인 작업은 항상 스레드에 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 구현하면 반드시 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그럴 필요는 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드에서 실행하거나 일종의 executor 서비스에 전달하거나 단일 스레드 응용 프로그램 내에서 작업으로 전달할 수 있습니다 (나중에 동일한 스레드 내에서 실행될 수도 있음). &lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 바인딩하는 것보다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하면 옵션이 훨씬 더 개방적 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="219f8fa29339e9ae2c73575ff9e7a44eb262ccff" translate="yes" xml:space="preserve">
          <source>If you have to override any of these &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html&quot;&gt;Thread&lt;/a&gt; methods as listed in oracle documentation page</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Oracle 설명서 페이지에 나열된 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이러한 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 방법 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 재정의해야하는 경우&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31e4b9a37e12329f07844fa1cd37f135389dc5c9" translate="yes" xml:space="preserve">
          <source>If you implement Runnable then the class that implements Runnable has no control over the thread name, it is the calling code that can set the thread name, like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnable을 구현하면 Runnable을 구현하는 클래스는 스레드 이름을 제어 할 수 없으며 스레드 이름을 설정할 수있는 호출 코드입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="13165552b81af3b7fdc922c6439175665b42c4cc" translate="yes" xml:space="preserve">
          <source>If you want to implements or extends any other class then &lt;code&gt;Runnable&lt;/code&gt; interface is most preferable, otherwise, if you do not want any other class to extend or implement then &lt;code&gt;Thread&lt;/code&gt; class is preferable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 클래스를 구현하거나 확장하려면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인터페이스가 가장 바람직합니다. 그렇지 않으면 다른 클래스를 확장하거나 구현하지 않으려면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스가 바람직합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="673d5926ca53942d7d830b2c33d0112b5231ecb4" translate="yes" xml:space="preserve">
          <source>If you'd like to try using a thread pool, the code fragment above would become something like the following (using the &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool%28%29&quot;&gt;Executors.newCachedThreadPool()&lt;/a&gt; factory method):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드 풀을 사용하려면 위의 코드 조각이 다음과 같이됩니다 ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool%28%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Executors.newCachedThreadPool ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 팩토리 메소드 사용).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f727775939919c6a445d2a7f83a71083b2d3a1b" translate="yes" xml:space="preserve">
          <source>Implementing &lt;code&gt;Runnable&lt;/code&gt; lets you to have this flexibility to share the object whereas &lt;code&gt;extends Thread&lt;/code&gt; makes you to create new objects for each threads therefore any update that is done by thread1 is lost to thread2.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구현 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 객체를 공유 할 수있는 유연성을 가지게되지만 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Threads를 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하면 각 스레드에 대해 새 객체를 만들 수 있으므로 thread1에 의해 수행 된 모든 업데이트가 thread2에 손실됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="452b22406c5a2c292e1d0351d7ee4d811df4b494" translate="yes" xml:space="preserve">
          <source>In &lt;em&gt;practical&lt;/em&gt; terms, it means you can implement &lt;code&gt;Runnable&lt;/code&gt; and extend from another class as well.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제적인&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 용어, 당신이 구현할 수있는 의미 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 다른 클래스에서 확장뿐만 아니라.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a917cf04e57360b680a976afe6c96e361e3d6f8" translate="yes" xml:space="preserve">
          <source>In Object-oriented programming, extending a class generally means, adding new functionality, and modifying or improving behaviors. If we are not making any modification on Thread then use Runnable interface instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체 지향 프로그래밍에서 클래스 확장은 일반적으로 새로운 기능 추가, 동작 수정 또는 개선을 의미합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Thread를 수정하지 않으면 Runnable 인터페이스를 대신 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="073b55d5a0e2df99685e6167d705af287162c7a1" translate="yes" xml:space="preserve">
          <source>In general, I would recommend using something like &lt;code&gt;Runnable&lt;/code&gt; rather than &lt;code&gt;Thread&lt;/code&gt; because it allows you to keep your work only loosely coupled with your choice of concurrency.  For example, if you use a &lt;code&gt;Runnable&lt;/code&gt; and decide later on that this doesn't in fact require it's own &lt;code&gt;Thread&lt;/code&gt;, you can just call threadA.run().</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적으로 &lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대신 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 같은 것을 사용하는 것이 좋습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작업을 선택한 동시성에만 느슨하게 결합 할 수 있기 때문입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 &lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 사용하고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나중에 이것이 실제로 &lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; 가&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 필요하지 않다고 결정한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;threadA.run ()을 호출하면됩니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bce6d6dd7d4b58843b88abe31ec528c6228faba4" translate="yes" xml:space="preserve">
          <source>In most cases, the Runnable interface should be used if you are only planning to override the &lt;code&gt;run()&lt;/code&gt; method and no other Thread methods. This is important because classes should not be subclassed unless the programmer intends on modifying or enhancing the fundamental behavior of the class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대부분의 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;run()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메서드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;만 재정의하고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 Thread 메서드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 무시하려는 경우 Runnable 인터페이스를 사용해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로그래머가 클래스의 기본 동작을 수정하거나 향상시키려는 경우가 아니라면 클래스를 서브 클래스 화해서는 안되므로 이것은 중요합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49f3b20c1e64e8c4a79f4f7894f0ca27d29de597" translate="yes" xml:space="preserve">
          <source>In other words, implementing &lt;code&gt;Runnable&lt;/code&gt; will work in scenarios where your class extends a class other than &lt;code&gt;Thread&lt;/code&gt;. Java does not support multiple inheritance. Also, extending &lt;code&gt;Thread&lt;/code&gt; will not be possible when using some of the high-level thread management APIs. The only scenario where extending &lt;code&gt;Thread&lt;/code&gt; is preferable is in a small application that won't be subject to updates in future. It is almost always better to implement &lt;code&gt;Runnable&lt;/code&gt; as it is more flexible as your project grows. A design change won't have a major impact as you can implement many interfaces in java, but only extend one class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;구현 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 클래스가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이외의 클래스를 확장하는 시나리오에서 작동합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. Java는 다중 상속을 지원하지 않습니다. 또한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부 고급 스레드 관리 API를 사용할 때는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;확장 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;할 수 없습니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 확장하는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것이 바람직한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유일한 시나리오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 나중에 업데이트되지 않을 작은 응용 프로그램입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로젝트가 성장함에 따라 유연성이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;뛰어나 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;므로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 구현하는 것이 거의 항상 좋습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 자바에서 많은 인터페이스를 구현할 수 있기 때문에 디자인 변경은 큰 영향을 미치지 않지만 하나의 클래스 만 확장합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a06c6d743450813788e9cb962ba45b9527d1353e" translate="yes" xml:space="preserve">
          <source>In practice, generally speaking, a programme does not need to carry more complexity than necessary. If you have one thread working on a specific task, without ever changing that task, there is probably no point in making the tasks separate classes, and your code remains simpler.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로, 일반적으로 말해서, 프로그램은 필요 이상으로 더 복잡한 것을 수행 할 필요가 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;특정 작업에 대해 하나의 스레드가 작업을 변경하지 않고 작업을 수행하는 경우 작업을 별도의 클래스로 만들 필요가 없으며 코드가 더 간단합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d75b75d2d148a11490f00c2bfaf95f291215fdf5" translate="yes" xml:space="preserve">
          <source>In the Runnable interface approach, only one instance of a class is being created and it has been shared by different threads. So the value of counter is incremented for each and every thread access.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnable 인터페이스 방식에서는 하나의 클래스 인스턴스 만 작성되며 다른 스레드가 공유했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 카운터 값은 모든 스레드 액세스마다 증가합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2e0dbceaef5b924d0e8913609ad6fc3576fc58c5" translate="yes" xml:space="preserve">
          <source>In the context of &lt;em&gt;Java&lt;/em&gt;, since the facility is &lt;strong&gt;already there&lt;/strong&gt;, it is probably easier to start directly with stand alone &lt;code&gt;Runnable&lt;/code&gt; classes, and pass their instances to &lt;code&gt;Thread&lt;/code&gt; (or &lt;code&gt;Executor&lt;/code&gt;) instances. Once &lt;em&gt;used&lt;/em&gt; to that pattern, it is not harder to use (or even read) than the simple runnable thread case.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 맥락에서 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자바&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 시설이기 때문에, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이미&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 독립적으로 직접 시작하는 것이 더 쉬울 것입니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스 및 자신의 인스턴스를 전달 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) 인스턴스를. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 패턴에 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;익숙해&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 지면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;간단한 실행 가능한 스레드 케이스보다 사용하기가 어렵거나 읽기가 어렵지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b57f0fd65a56e6310fbd2e370e043b419ea1c2d" translate="yes" xml:space="preserve">
          <source>In the same light, &lt;em&gt;if you don't need&lt;/em&gt; to &lt;strong&gt;inherit&lt;/strong&gt; thread methods, you can do without that &lt;strong&gt;overhead&lt;/strong&gt; by using Runnable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;같은 관점에서, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이 필요하지 않은 경우&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;상속&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 스레드 방법, 당신은없이 할 수있는 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오버 헤드&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 Runnable를 사용하여.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31dbde8d6d470fc93d0c6d746cadb9b08d447951" translate="yes" xml:space="preserve">
          <source>Inheriting all Thread methods are additional overhead just for representing a Task which can be done easily with Runnable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 Thread 메소드를 상속하는 것은 Runnable로 쉽게 수행 할 수있는 Task를 나타 내기위한 추가 오버 헤드입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="df0990131adc5c941ff4ae4bbd6a8a50be484743" translate="yes" xml:space="preserve">
          <source>Instantiating an interface gives a cleaner separation between your code and the implementation of threads, so I'd prefer to implement Runnable in this case.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인터페이스를 인스턴스화하면 코드와 스레드 구현을 명확하게 분리 할 수 ​​있으므로이 경우 Runnable을 구현하는 것이 좋습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65f261489cb14059bf817628e87a457e1819026d" translate="yes" xml:space="preserve">
          <source>Is there any significant difference in these two blocks of code ?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 두 코드 블록에 큰 차이가 있습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75d953bf184515f7db37b042665869e721abb6ca" translate="yes" xml:space="preserve">
          <source>It is good design to separate domain logic from technical means, in that sense it is better to have a Runnable task &lt;strong&gt;isolating&lt;/strong&gt; your &lt;strong&gt;task from&lt;/strong&gt; your &lt;strong&gt;runner&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 그런 의미에서가의 Runnable 태스크 가지고하는 것이 좋습니다, 기술적 수단에서 별도의 도메인 로직에 좋은 디자인입니다 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;분리&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하여 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 작업을&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하여 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주자&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f74b9bbd8cab7122e230a1598d5c5ced2960aa7" translate="yes" xml:space="preserve">
          <source>Java designer recognizes this and that's why Executors accept Runnable as Task and they have worker thread which executes those task.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java 디자이너는 이것을 인식하고 Executor가 Runnable을 Task로 받아들이고 그 작업을 실행하는 작업자 스레드가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4447dcd2d3436db5024494dcd6f613fbd89e3c36" translate="yes" xml:space="preserve">
          <source>Java does not support multiple inheritence so if you extends Thread class then no other class will be extended.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java는 다중 상속을 지원하지 않으므로 Thread 클래스를 확장하면 다른 클래스가 확장되지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="913e8e6cdbb4c34a3e226960b7e54039100ca3cd" translate="yes" xml:space="preserve">
          <source>Java doesn't support multiple inheritances, which means you can only extend one class in Java so once you extended Thread class you lost your chance and cannot extend or inherit another class in Java.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java는 다중 상속을 지원하지 않으므로 Java에서 하나의 클래스 만 확장 할 수 있으므로 스레드 클래스를 확장 한 후에는 기회를 잃었고 Java에서 다른 클래스를 확장하거나 상속 할 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d044bcb58e5016154e1cad7fca27ce7ed4fc5e8" translate="yes" xml:space="preserve">
          <source>Leaves more flexibility for the
Runnable implementation to extend
another class</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnable 구현이 다른 클래스를 확장 할 수 있도록 더 많은 유연성을 제공합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="98425613abed9e740647c2930f1763994c890654" translate="yes" xml:space="preserve">
          <source>Maybe this is influenced a bit by my recent heavy usage of Javascript and Actionscript 3, but this way your class doesn't need to implement a pretty vague interface like &lt;code&gt;Runnable&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어쩌면 이것은 최근 Javascript 및 Actionscript 3을 많이 사용하여 약간 영향을받지 만 클래스에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 같은 모호한 인터페이스를 구현할 필요는 없습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="21293106cdf6ab6f3aba39c897fb3eb39df7ff25" translate="yes" xml:space="preserve">
          <source>Moral of the story:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이야기의 교훈:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b09331c5ece2c70336bb710a450b8995b6bbf69c" translate="yes" xml:space="preserve">
          <source>On a different note, using advanced &lt;code&gt;ExecutorService&lt;/code&gt; or &lt;code&gt;ThreadPoolExecutorService&lt;/code&gt; API provides more flexibility and control.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 말로, 고급 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExecutorService&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ThreadPoolExecutorService&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; API를 사용하면 더 많은 유연성과 제어 기능을 제공합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b72999a34ff38fba9e9f0fc91f3c9b60b6ccd67d" translate="yes" xml:space="preserve">
          <source>One reason you'd want to implement an interface rather than extend a base class is that you are already extending some other class. You can only extend one class, but you can implement any number of interfaces.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본 클래스를 확장하는 대신 인터페이스를 구현하려는 한 가지 이유는 이미 다른 클래스를 확장하고 있기 때문입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하나의 클래스 만 확장 할 수 있지만 여러 인터페이스를 구현할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e24c9399fb337a187f29d1b874c7dc1426f3c801" translate="yes" xml:space="preserve">
          <source>One thing that I'm surprised hasn't been mentioned yet is that implementing &lt;code&gt;Runnable&lt;/code&gt; makes your class more flexible.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;놀랍게도 한 가지 언급 된 바는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 구현 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 수업의 유연성이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;높아진다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e75803398e702c291b3769ca1fef0d0192f61423" translate="yes" xml:space="preserve">
          <source>Or rather it should be read as:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 오히려 다음과 같이 읽어야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6642beda0a630021ef91d010a61f8536e7c8420b" translate="yes" xml:space="preserve">
          <source>Or, with &lt;code&gt;extends Thread&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 Threads를 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4f97ddaf0f12b6b4b1fe92d9e1887b45c3bdf8d" translate="yes" xml:space="preserve">
          <source>Please see  &lt;a href=&quot;http://pastebin.com/BjKNNs2G&quot;&gt;http://pastebin.com/BjKNNs2G&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://pastebin.com/BjKNNs2G&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://pastebin.com/BjKNNs2G를&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 참조 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하십시오&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aacd16ba0e272c55cc554ff9a6a907b81af5b8aa" translate="yes" xml:space="preserve">
          <source>Prefer &quot;&lt;strong&gt;&lt;em&gt;extends Thread&lt;/em&gt;&lt;/strong&gt;&quot; :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드 확장&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;선호 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b4cfb91a85e37aa98063528cdc4477e8ecf7747" translate="yes" xml:space="preserve">
          <source>Prefer &lt;strong&gt;&lt;em&gt;implements Runnable&lt;/em&gt;&lt;/strong&gt; :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnable 구현을&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 선호하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a503247ab3ac13abed963a23dc3f49ed043cfe87" translate="yes" xml:space="preserve">
          <source>Runnable because:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같은 이유로 실행할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="96c8e4642e9d898ac2b452c9a7f1abc772be5375" translate="yes" xml:space="preserve">
          <source>Runnable interface represents a Task which can be executed by either plain Thread or Executors or any other means. so logical separation of Task as Runnable than Thread is a good design decision.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실행 가능 인터페이스는 일반 스레드 또는 실행자 또는 다른 방법으로 실행할 수있는 작업을 나타냅니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 Thread보다 Runnable로 Task를 논리적으로 분리하는 것이 좋은 디자인 결정입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31a1077c4c1517e991c6895311d2a20b0384f711" translate="yes" xml:space="preserve">
          <source>Separates the code from
execution</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드를 실행에서 분리&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3c0e7a1b5e34fd0115bf7d439c7677c9d16459dd" translate="yes" xml:space="preserve">
          <source>Separating task as Runnable means we can reuse the task and also has the liberty to execute it from different means. since you can not restart a Thread once it completes. again Runnable vs Thread for task, Runnable is winner.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작업을 실행 가능으로 분리한다는 것은 작업을 재사용 할 수 있고 다른 방법으로 작업을 수행 할 자유가 있다는 것을 의미합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드가 완료되면 다시 시작할 수 없으므로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnable vs Thread for task, Runnable이 승자입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="410028c9b92c6e44e7a330f143b936d87c5fd5c1" translate="yes" xml:space="preserve">
          <source>Separating the Thread class from the Runnable implementation also avoids potential synchronization problems between the thread and the run() method. A separate Runnable generally gives greater flexibility in the way that runnable code is referenced and executed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnable 구현에서 Thread 클래스를 분리하면 스레드와 run () 메소드 간의 잠재적 동기화 문제를 피할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;별도의 Runnable은 일반적으로 실행 가능한 코드를 참조하고 실행하는 방식에서 더 큰 유연성을 제공합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0daa17e77c542f541e21348f4cf8d158b7678ed4" translate="yes" xml:space="preserve">
          <source>Since this is a very popular topic and the good answers are spread all over and dealt with in great depth, I felt it is justifiable to compile the good answers from the others into a more concise form, so newcomers have an easy overview upfront:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 주제는 매우 인기있는 주제이고 좋은 답변이 널리 퍼져 있고 심층적으로 다루어 졌기 때문에 다른 사람들의 좋은 답변을보다 간결한 형식으로 컴파일하는 것이 타당하다고 생각했기 때문에 신규 이민자들은 쉽게 개관 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5b75e54af566c3e4cac465449dcdd22070551de1" translate="yes" xml:space="preserve">
          <source>So depending upon the requirement if our data is not senstive. So It can be shared between multiple Thread we can used Runnable interface.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리의 데이터가 민감하지 않은 경우 요구 사항에 따라. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 Runnable 인터페이스를 사용할 수있는 여러 스레드간에 공유 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc2f18f715f887a38db2fac1b1241ec481846a98" translate="yes" xml:space="preserve">
          <source>So let us obey the OOPs concept and write a class of the type we need. There are many ways to do things, doing it in the right way matters.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;OOP의 개념을 따르고 필요한 유형의 클래스를 작성해 봅시다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;올바른 방법으로 작업을 수행하는 방법에는 여러 가지가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="35d398a4b9b18fdc7eca96bc37d83626d17c05ac" translate="yes" xml:space="preserve">
          <source>So technically and theoretically  both of them is necessary to start a thread, one will &lt;strong&gt;run&lt;/strong&gt; and one will &lt;strong&gt;make it run&lt;/strong&gt; (Like &lt;strong&gt;&lt;code&gt;Wheel and Engine&lt;/code&gt;&lt;/strong&gt; of motor vehicle).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래서 기술적으로 이론적으로 둘 다의 스레드를 시작하는 것이 필요하다, 하나가됩니다 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실행&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하고 하나가됩니다 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것을 실행하기&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (처럼 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;Wheel and Engine&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 자동차의)을.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b545a2434898cfb8782ccf0a8d7e029fdb34da3" translate="yes" xml:space="preserve">
          <source>So the class &lt;code&gt;MyRunnable&lt;/code&gt; is nothing but a ordinary class with a &lt;code&gt;void run&lt;/code&gt; method.
And it's objects will be some ordinary objects with only a method &lt;code&gt;run&lt;/code&gt; which will execute normally when called.  (unless we pass the object in a thread).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyRunnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;void run&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있는 일반 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일뿐&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 객체는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;호출 될 때 정상적으로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;run&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 되는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메소드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실행&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 만있는 일반 객체입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(객체를 스레드로 전달하지 않는 한).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b54d7f8050854b9eb5a81cddc9af26dfd4b0ba6" translate="yes" xml:space="preserve">
          <source>So, if we replace their &lt;code&gt;runnable&lt;/code&gt; with your &lt;code&gt;threadA&lt;/code&gt;, we get the following:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;threadA&lt;/code&gt; 로 바꾸면&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 다음과 같은 결과를 얻습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6400be6697fb840195678151fd7d93ac9d86eebe" translate="yes" xml:space="preserve">
          <source>Something That can start a new Thread (Thread).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;새로운 스레드 (Thread)를 시작할 수있는 것.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fe268f9a806c7a97d6d78b294bdf3e80f71c44dd" translate="yes" xml:space="preserve">
          <source>Something that can run inside a Thread (Runnable).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드 내에서 실행할 수있는 것 (실행 가능).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="40efdd35ec1623fee9be759660a8c39ed3f0a7e0" translate="yes" xml:space="preserve">
          <source>That's the &lt;a href=&quot;http://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;S&lt;/a&gt; of &lt;a href=&quot;http://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29&quot;&gt;SOLID&lt;/a&gt;: Single responsibility.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 바로 &lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SOLID&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;S&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 단일 책임.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad94796fb9f06c4d895e1c4991e7e6d3798f3795" translate="yes" xml:space="preserve">
          <source>That's why you can not start a thread with &lt;code&gt;MyRunnable&lt;/code&gt; you need to pass it to a instance of &lt;code&gt;Thread&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇기 때문에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyRunnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 스레드를 시작할 수 없으므로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인스턴스에 전달해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6aad014664026933196b93fc54db59834f16f791" translate="yes" xml:space="preserve">
          <source>The simplest explanation would be by implementing &lt;code&gt;Runnable&lt;/code&gt; we can assign the same object to multiple threads and each &lt;code&gt;Thread&lt;/code&gt; shares the same object states and behavior.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가장 간단한 설명은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 구현 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 동일한 객체를 여러 스레드에 할당 할 수 있으며 각 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 동일한 객체 상태와 동작을 공유한다는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="df15d0f39c87e4500ca0893016552e9b7102d207" translate="yes" xml:space="preserve">
          <source>These are not only much shorter than your examples, but also come with many of the advantages stated in other answers of using &lt;code&gt;Runnable&lt;/code&gt; over &lt;code&gt;Thread&lt;/code&gt;, such as single responsibility and using composition because you're not specializing the thread's behaviour. This way also avoids creating an extra class if all you need is a &lt;code&gt;Runnable&lt;/code&gt; as you do in your examples.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것들은 예제보다 훨씬 짧을뿐만 아니라 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드의 동작을 전문화하지 않기 때문에 단일 책임 및 컴포지션과 같은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; over &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용에 대한 다른 답변에 언급 된 많은 이점을 제공합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 방법은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예제에서와 같이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; 만&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있으면 추가 클래스를 만들지 않아도 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d96ffb505d8310ea93cce480e6ec5f788584907" translate="yes" xml:space="preserve">
          <source>These were some of the notable differences between Thread and Runnable in Java. If you know any other differences on Thread vs Runnable than please share it via comments. I personally use Runnable over Thread for this scenario and recommends to use Runnable or Callable interface based on your requirement.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것들은 Java에서 Thread와 Runnable의 주목할만한 차이점 중 일부였습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Thread vs Runnable의 다른 차이점을 알고 있다면 의견을 통해 공유하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 시나리오에서는 개인적으로 스레드 위의 Runnable을 사용하며 요구 사항에 따라 Runnable 또는 Callable 인터페이스를 사용하는 것이 좋습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d5f2ab080cd9280dace153cfc8f38854287fa20" translate="yes" xml:space="preserve">
          <source>This is discussed in Oracle's &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/essential/concurrency/runthread.html&quot;&gt;Defining and Starting a Thread&lt;/a&gt; tutorial:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이는 Oracle의 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/essential/concurrency/runthread.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드 정의 및 시작&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 학습서에서 설명합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c3cbfd343caf7d647d887a68ac7b8a4a7d179d6" translate="yes" xml:space="preserve">
          <source>This makes it also easier to &lt;strong&gt;separate&lt;/strong&gt; task-logic and concurrency &lt;strong&gt;aspects in&lt;/strong&gt; your &lt;strong&gt;unit tests&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은에 그것은 또한 쉽게 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;별도의&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 태스크 논리와 동시성 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 측면&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 당신의 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;단위 테스트&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="17fc026b83d7e393a11f6a13c3426f6521cd7eac" translate="yes" xml:space="preserve">
          <source>This might seem like a small thing but where you have a very complex application with a lot of threads and all of a sudden things 'have stopped' (either for reasons of deadlock or possibly because of a flaw in a network protocol which would be less obvious - or other endless reasons) then getting a stack dump from Java where all the threads are called 'Thread-1','Thread-2','Thread-3' is not always very useful (it depends on how your threads are structured and whether you can usefully tell which is which just by their stack trace - not always possible if you are using groups of multiple threads all running the same code).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 작은 것처럼 보일 수 있지만 많은 스레드가있는 매우 복잡한 응용 프로그램이 있고 갑작스런 일이 '중지되었습니다'(교착 상태 또는 네트워크 프로토콜의 결함으로 인해) 명백한-또는 다른 끝없는 이유) 그런 다음 모든 스레드가 'Thread-1', 'Thread-2', 'Thread-3'이라고하는 Java에서 스택 덤프를 얻는 것이 항상 유용한 것은 아닙니다 (스레드가 어떻게 작동하는지에 달려 있습니다) 스택 추적으로 어떤 것을 추적 할 수 있는지 유용하게 알 수 있는지 여부-동일한 코드를 실행하는 여러 스레드 그룹을 사용하는 경우 항상 가능하지는 않습니다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87abb7dd8e4d3d728598faa0e9340d014165ffb3" translate="yes" xml:space="preserve">
          <source>This two have a dependency and relationship in multi-threading just like &lt;code&gt;Wheel and Engine&lt;/code&gt; relationship of motor vehicle.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 두 가지는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자동차의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Wheel and Engine&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 관계 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;와&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 마찬가지로 멀티 스레딩에서 종속성과 관계를 갖습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="373daad7e9321644f3a446ea6144ee0baecf6a48" translate="yes" xml:space="preserve">
          <source>Those who like to solve puzzles can see another side effect of extending Thread. The below code 
will print unreachable code when nobody is notifying them.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;퍼즐을 풀고 싶은 사람들은 스레드를 확장하는 또 다른 부작용을 볼 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래 코드는 아무도 알리지 않으면 도달 할 수없는 코드를 인쇄합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="06e005b4dac28bdf9b9f2e738e74f67830824baf" translate="yes" xml:space="preserve">
          <source>Use Runnable interface when you want to access the same resources from the group of threads. Avoid using Thread class here, because multiple objects creation consumes more memory and it becomes a big performance overhead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드 그룹에서 동일한 자원에 액세스하려는 경우 실행 가능 인터페이스를 사용하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여러 객체를 만들 때 더 많은 메모리를 사용하고 성능 오버 헤드가 커지므로 여기서 Thread 클래스를 사용하지 마십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eae2c2b67ec1f551dfa203ea142e948ae61b60a7" translate="yes" xml:space="preserve">
          <source>We do not want the thread's property, instead we want our class to behave as a task which can be run.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 스레드의 속성을 원하지 않고 대신 클래스가 실행될 수있는 작업으로 동작하기를 원합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2004802c1def0bfbaa1871673f394eaa9ff880af" translate="yes" xml:space="preserve">
          <source>We need a task, so write a task definition which can be run on a Thread. So use Runnable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작업이 필요하므로 스레드에서 실행할 수있는 작업 정의를 작성하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnable을 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="78e7a8e6346110b062184eb90a63bd6b750dbc8b" translate="yes" xml:space="preserve">
          <source>Well so many good Answers, I want to add more on this. This will help to understand &lt;code&gt;Extending v/s Implementing Thread&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;좋은 답변이 너무 많아서 더 추가하고 싶습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Extending v/s Implementing Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 이해하는 데 도움이됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b82c489f872b085a7ad003127345364fb69ed884" translate="yes" xml:space="preserve">
          <source>What is the difference between an interface and abstract class?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인터페이스와 추상 클래스의 차이점은 무엇입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="236d5cd63182e755c22e19a5adeee2748111f58c" translate="yes" xml:space="preserve">
          <source>When implementing &lt;code&gt;interface Runnable&lt;/code&gt; it means you are creating something which is &lt;code&gt;run able&lt;/code&gt; in a different thread. Now creating something which can run inside a thread (runnable inside a thread), doesn't mean to creating a Thread.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;interface Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구현할 때 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 스레드에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;run able&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것을 작성하고 있음을 의미합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 스레드 내부에서 실행할 수있는 무언가 (스레드 내부에서 실행 가능)를 생성한다고해서 스레드를 생성하는 것은 아닙니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3745fb71989a4e044c210feba42f4bf044bd3030" translate="yes" xml:space="preserve">
          <source>When there is a need to extend a superclass, implementing the Runnable interface is more appropriate than using the Thread class. Because we can extend another class while implementing Runnable interface to make a thread.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수퍼 클래스를 확장해야하는 경우 Thread 클래스를 사용하는 것보다 Runnable 인터페이스를 구현하는 것이 더 적합합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnable 인터페이스를 구현하는 동안 다른 클래스를 확장하여 스레드를 만들 수 있기 때문입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c5ff3968cb8985044c47e00b5cba9cc0fe8c5c1e" translate="yes" xml:space="preserve">
          <source>When you &lt;code&gt;extends Thread&lt;/code&gt; class, after that you can&amp;rsquo;t extend any other class which you required. (As you know, Java does not allow inheriting more than one class).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;확장&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 한 후에는 필요한 다른 클래스를 확장 할 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아시다시피, Java는 둘 이상의 클래스 상속을 허용하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e17cab664efc85689b2242508d229076966d7955" translate="yes" xml:space="preserve">
          <source>When you &lt;code&gt;extends Thread&lt;/code&gt; class, each of your thread creates a unique object and associate with it.
When you &lt;code&gt;implements Runnable&lt;/code&gt;, it shares the same object to multiple threads.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;확장&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;각 스레드가 고유 한 객체를 만들어 관련시킵니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;implements Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;구현&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하면 동일한 객체를 여러 스레드와 공유합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f2a76d24f44f7ae9e03bb03f42c6e15b134a771" translate="yes" xml:space="preserve">
          <source>When you &lt;code&gt;implements Runnable&lt;/code&gt;, you can save space for your class to extend any other class in the future or now.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;implements Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;구현&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스가 미래 또는 현재 다른 클래스를 확장 할 수있는 공간을 절약 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a128f112ee99f36368476f18bd5378db4c60d872" translate="yes" xml:space="preserve">
          <source>When you extend Thread class, after that you can&amp;rsquo;t extend any other class which you required. (As you know, Java does not allow inheriting more than one class).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Thread 클래스를 확장하면 그 후에 필요한 다른 클래스를 확장 할 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아시다시피, Java는 둘 이상의 클래스 상속을 허용하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd51cd51a205c0fcca4745df3354f5e1ab449908" translate="yes" xml:space="preserve">
          <source>When you implement Runnable, you can save space for your class to extend any other class in the future or now.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnable을 구현하면 나중에 또는 지금 다른 클래스를 확장 할 수있는 클래스 공간을 절약 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0e0e6973934c399e783b81b4042172920b877a88" translate="yes" xml:space="preserve">
          <source>Whereas, Thread class approach, you must have to create separate instance for every thread access. Hence different memory is allocated for every class instances and each has separate counter, the value remains same, which means no increment will happen because none of the object reference is same.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;반면 스레드 클래스 접근 방식에서는 모든 스레드 액세스에 대해 별도의 인스턴스를 만들어야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 모든 클래스 인스턴스에 대해 서로 다른 메모리가 할당되고 각각에 별도의 카운터가 있으며 값은 동일하게 유지되므로 개체 참조가 같지 않으므로 증분이 발생하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ffdc76564caf2c123c9ca2dce9891279792861c" translate="yes" xml:space="preserve">
          <source>Which of these idioms should you use? The first idiom, which employs a
  Runnable object, is more general, because the Runnable object can
  subclass a class other than Thread. The second idiom is easier to use
  in simple applications, but is limited by the fact that your task
  class must be a descendant of Thread. This lesson focuses on the first
  approach, which separates the Runnable task from the Thread object
  that executes the task. Not only is this approach more flexible, but
  it is applicable to the high-level thread management APIs covered
  later.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 관용구 중 어느 것을 사용해야합니까? Runnable 객체를 사용하는 첫 번째 관용구가 더 일반적입니다. Runnable 객체는 Thread 이외의 클래스를 서브 클래스화할 수 있기 때문입니다. 두 번째 관용구는 간단한 응용 프로그램에서 사용하기 쉽지만 작업 클래스가 Thread의 자손이어야한다는 사실에 의해 제한됩니다. 이 레슨에서는 실행 가능한 태스크를 태스크를 실행하는 Thread 오브젝트와 분리하는 첫 번째 접근법에 중점을 둡니다. 이 접근 방식은보다 유연 할뿐만 아니라 나중에 다루는 고급 스레드 관리 API에도 적용 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff77565865db636f68fb467b8723798b53763440" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;implements Runnable&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;implements Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="853fa9256b5a0955063f44f7f3c0fb638d4ab72b" translate="yes" xml:space="preserve">
          <source>With the release of Java 8, there is now a third option.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java 8 릴리스에는 세 번째 옵션이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a4d2dd0a50a02054e9052afd60821e047d2d17f3" translate="yes" xml:space="preserve">
          <source>Yes,
If you call ThreadA call , then  not need to call the start method and run method is call after call the ThreadA class only.
But If use the ThreadB call then need to necessary the start thread for call run method.
If you have any more help, reply me.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예, ThreadA call을 호출하면 start 메소드를 호출 할 필요가 없으며 ThreadA 클래스 만 호출 한 후 run 메소드가 호출됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 ThreadB 호출을 사용하는 경우 호출 실행 메소드의 시작 스레드가 필요합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 도움이 필요하면 답장 해주세요.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c203d4090e273e2d4aba99a65662a708ee1a406f" translate="yes" xml:space="preserve">
          <source>Yes: implements &lt;code&gt;Runnable&lt;/code&gt; is the preferred way to do it, IMO. You're not really specialising the thread's behaviour.  You're just giving it something to run. That means &lt;a href=&quot;http://en.wikipedia.org/wiki/Object_composition&quot;&gt;composition&lt;/a&gt; is the &lt;em&gt;philosophically&lt;/em&gt; &quot;purer&quot; way to go.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 IMO를 선호하는 방법입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드의 동작을 실제로 전문화하지는 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 그것을 실행할 무언가를주고 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Object_composition&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;구성&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;철학적으로&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;순결한&quot;방법 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;임을 의미 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d7535bb12b09b60b4eaa34abc75b026915b88b7" translate="yes" xml:space="preserve">
          <source>You can &lt;strong&gt;execute&lt;/strong&gt; the same Runnable &lt;strong&gt;object multiple times&lt;/strong&gt;, a Thread object, however, can only be started once. (Maybe the reason, why Executors do accept Runnables, but not Threads.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동일한 Runnable &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체를 여러 번 &lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실행할&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있지만 Thread 객체는 한 번만 시작할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(이유로 Executor가 Runnable을 허용하지만 Thread는 허용하지 않는 이유 일 수 있습니다.)&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10b3f87aede523f4acf1b8326dd109f256a041ff" translate="yes" xml:space="preserve">
          <source>You might even for example take a stack trace of its creation and use that as the thread name.  This might seem odd but depending on how your code is structured it can be very useful for debugging purposes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 생성의 스택 추적을 가져와 스레드 이름으로 사용할 수도 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 이상하게 보일 수 있지만 코드 구성 방식에 따라 디버깅 목적으로 매우 유용 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c7ea60dfce8ee7cc8cc687888edf4b04532f8f6a" translate="yes" xml:space="preserve">
          <source>You should implement Runnable, but if you are running on Java 5 or higher, you should not start it with &lt;code&gt;new Thread&lt;/code&gt; but use an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html&quot;&gt;ExecutorService&lt;/a&gt; instead. For details see: &lt;a href=&quot;https://stackoverflow.com/questions/125333/how-to-implement-simple-threading-in-java&quot;&gt;How to implement simple threading in Java&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnable을 구현해야하지만 Java 5 이상에서 실행중인 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 시작하지 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;말고 대신 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ExecutorService&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 내용은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/125333/how-to-implement-simple-threading-in-java&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java에서 단순 스레딩을 구현하는 방법을&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 참조하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00e264d4c0d3056d3f62ecbb163750347e769810" translate="yes" xml:space="preserve">
          <source>You usually extend a class to add or modify functionality. So, &lt;em&gt;if you don't want&lt;/em&gt; to &lt;strong&gt;overwrite&lt;/strong&gt; any &lt;strong&gt;Thread behavior&lt;/strong&gt;, then use Runnable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적으로 클래스를 확장하여 기능을 추가하거나 수정합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래서, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이 원하지 않는 경우&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;덮어&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 어떤 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스레드 동작을&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 다음의 Runnable을 사용합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b52ab0bbdc36fa3ce8200d348176405633795fd4" translate="yes" xml:space="preserve">
          <source>Your example can be replaced with:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;귀하의 예는 다음과 같이 대체 될 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="889fbbe3190eae4f82286aac9145244b9f720d11" translate="yes" xml:space="preserve">
          <source>algorithm implemented by the piece of code (the runnable part)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드 조각에 의해 구현되는 알고리즘 (실행 가능한 부분)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="831283a4238416a712158b2f309e2619a8e56f24" translate="yes" xml:space="preserve">
          <source>and here's a sample of the output comparing the two names:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 두 이름을 비교 한 출력 샘플입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5a408b341b31218147e3d07a1b8bcf1d2dddf347" translate="yes" xml:space="preserve">
          <source>but if you extend Thread then you get to manage this within the class itself (just like in your example you name the thread 'ThreadB').  In this case you:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 Thread를 확장하면 클래스 자체에서이를 관리하게됩니다 (예와 같이 스레드 이름을 'ThreadB'로 지정). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우에는&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bcc7a7abbf820d9dc66f259bff8b86536c17ffa6" translate="yes" xml:space="preserve">
          <source>extends establishes &quot;&lt;strong&gt;Is A&lt;/strong&gt;&quot; relation &amp;amp; interface provides &quot;&lt;strong&gt;Has a&lt;/strong&gt;&quot; capability.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;extends는 &quot; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Is A&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;관계를 설정하고 인터페이스는 &quot; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Has&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;기능을 제공합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e52aaa5198aa8b1154e2f65db0ea2273d0bc235" translate="yes" xml:space="preserve">
          <source>if you use runnable you can save the space to extend to any of your other class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실행 가능을 사용하는 경우 다른 클래스로 확장 할 공간을 절약 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fbce27d51b99de0c79be3f3c9f8364605a9d2088" translate="yes" xml:space="preserve">
          <source>or if you want to use an &lt;code&gt;ExecutorService&lt;/code&gt; and a method reference:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExecutorService&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 메소드 참조 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 사용하려는 경우 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7fabc7ad01f56a22be539223a1585398a01c5e4a" translate="yes" xml:space="preserve">
          <source>thread handling in your application (ie. querying and modifying the execution context)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;응용 프로그램에서 스레드 처리 (예 : 실행 컨텍스트 쿼리 및 수정)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="48daf3a4108e0153576830925850ba9eb4db5204" translate="yes" xml:space="preserve">
          <source>“implements Runnable” vs “extends Thread” in Java</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java에서 &quot;실행 가능 구현&quot;과 &quot;스레드 확장&quot;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
