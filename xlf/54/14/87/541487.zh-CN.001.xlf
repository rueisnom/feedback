<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/541487">
    <body>
      <group id="541487">
        <trans-unit id="62d7599ad22b415fd81a46bb984ace574bdb41cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Runnable&lt;/code&gt; is a &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se8/html/jls-9.html#jls-9.8&quot;&gt;functional interface&lt;/a&gt;, which means that instances of it can be created with lambda expressions or method references.</source>
          <target state="translated">&lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是一个&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se8/html/jls-9.html#jls-9.8&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;功能性接口&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，这意味着可以使用lambda表达式或方法引用创建其实例。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="116c0e349c8adf71e2851bf8b8e246107e3f91ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Runnable&lt;/code&gt; is an interface, while &lt;code&gt;Thread&lt;/code&gt; is a class which implements this interface. From a design point of view, there should be a clean separation between how a task is defined and between how it is executed. The former is the responsibility of a &lt;code&gt;Runnalbe&lt;/code&gt; implementation, and the latter is job of the &lt;code&gt;Thread&lt;/code&gt; class. In most of the cases implementing &lt;code&gt;Runnable&lt;/code&gt; is the right way to follow.</source>
          <target state="translated">&lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是一个接口，而&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是实现此接口的类。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从设计的角度来看，应该在如何定义任务与如何执行任务之间有明确的区分。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;前者是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnalbe&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实现&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的责任，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;后者是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的职责&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在大多数情况下，实现&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是遵循的正确方法。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b86924146ba68c8bfd370d9c8cbb28aac882d4fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class Thread&lt;/code&gt;, I would say A very special class with the capability of starting a new Thread which actually enables multi-threading through its &lt;code&gt;start()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;class Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，我会说这是一个非常特殊的类，具有启动新的Thread的能力，该线程实际上可以通过其&lt;/font&gt;&lt;/font&gt; &lt;code&gt;start()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;启用多线程&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c15dd2569a57d806fadcddf028f79b29110b61b8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;However, one &lt;strong&gt;significant difference&lt;/strong&gt; between implementing Runnable and extending Thread is that&lt;br/&gt;&lt;/em&gt;&lt;code&gt;by extending Thread, each of your threads has a unique object associated with it, whereas implementing Runnable, many threads can share the same object instance.&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实现Runnable和扩展Thread之间的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;显着区别&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是，&lt;/font&gt;&lt;/font&gt;&lt;br/&gt;&lt;/em&gt; &lt;code&gt;by extending Thread, each of your threads has a unique object associated with it, whereas implementing Runnable, many threads can share the same object instance.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b988bc45bc21ad749b545ef24e587c2b5f114b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Inherit less, interface more.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;继承较少，接口更多。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="30a1ec52c8acc5aaae9b6547af7f98134ab406ff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Inherit only if you want to override some behavior.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仅在要覆盖某些行为时才继承。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f852eec1c67548328367f539479b598b7a14ec96" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The most common difference is&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最常见的区别是&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b223e924ba49f56988aa04f2055a59e975212ebd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;But&lt;/strong&gt; it is possible to create and run a thread only using &lt;code&gt;class Thread&lt;/code&gt; because Class &lt;code&gt;Thread&lt;/code&gt; implements &lt;code&gt;Runnable&lt;/code&gt; so we all know &lt;code&gt;Thread&lt;/code&gt; also is a &lt;code&gt;Runnable&lt;/code&gt; inside.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以仅使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;class Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来创建和运行&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;线程，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因为Class &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实现了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此我们都知道&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在内部&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;也是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33dfb729fa599af728a752ed201e739a5d966fee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caveat:&lt;/strong&gt; Around here, I strongly discourage the use of raw Threads.  I much prefer the use of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html&quot;&gt;Callables&lt;/a&gt; and &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html&quot;&gt;FutureTasks&lt;/a&gt; (From the javadoc: &quot;A cancellable asynchronous computation&quot;).  The integration of timeouts, proper cancelling and the thread pooling of the modern concurrency support are all much more useful to me than piles of raw Threads.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;警告：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在这里，我强烈建议不要使用原始线程。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我更喜欢使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Callables&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;FutureTasks&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（来自javadoc：&amp;ldquo;可取消的异步计算&amp;rdquo;）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与大量原始线程相比，超时的集成，适当的取消以及现代并发支持的线程池对我来说都更加有用。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4c85343fff48abdfd37e9a075ad989b17c7bcfbc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Finally &lt;code&gt;Thread&lt;/code&gt; and &lt;code&gt;Runnable&lt;/code&gt; are complement to each other for multithreading  not competitor or replacement.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最后，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相互补充，形成了多线程而不是竞争者或替代者。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0446a2d3bfa32a6642a07c8288096de869a468f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Follow-up:&lt;/strong&gt; there is a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html#FutureTask-java.lang.Runnable-V-&quot;&gt;&lt;code&gt;FutureTask&lt;/code&gt; constructor&lt;/a&gt; that allows you to use Runnables (if that's what you are most comfortable with) and still get the benefit of the modern concurrency tools.  &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html#FutureTask-java.lang.Runnable-V-&quot;&gt;To quote the javadoc&lt;/a&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;后续：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有一个&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html#FutureTask-java.lang.Runnable-V-&quot;&gt; &lt;code&gt;FutureTask&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造函数&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，使您可以使用Runnables（如果您对此最满意），并且仍然可以从现代并发工具中受益。 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html#FutureTask-java.lang.Runnable-V-&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引用javadoc&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="254579b24d70af9cbffecebd938228d377a4f136" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;However, the significant difference is.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，明显的区别是。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fe49c0f5735c2402b764994567ccd17720327894" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output of the above program.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上面程序的输出。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5300730740365005553c18a35abea43a5b886fd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Runnable:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Runnable:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46f5806762d4667225feed291bd581c3cc082aba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Single inheritance&lt;/strong&gt;: If you extend Thread you cannot extend from any other class, so if that is what you need to do, you have to use Runnable.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;单继承&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：如果扩展Thread，则不能从任何其他类扩展，因此如果需要这样做，则必须使用Runnable。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e3b390bbd2f268235c45e0aab537a5330726679c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The following example will help you to understand more clearly&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下示例将帮助您更清楚地了解&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="385cd01aebb4efad5824ac0762cc2e1fa2699741" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The most common difference is&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最常见的区别是&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c55c19a3f218b2f4994d24908e37e4f7e7a0dba3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Thread:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Thread:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60dcf72cf52ecad4e2613a990dd2c8d245e153ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;When to use Runnable?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;何时使用Runnable？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8dbac19e5f4c4ce89943b920969b5d590ef94fb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why not wise to compare?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为什么不明智地进行比较？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a8977199b77ba714127ba9ccd60a24bc4d94016" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tl;dr: implements Runnable is better.  However, the caveat is important&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tl; dr：实现Runnable更好。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，警告很重要&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e28fab52450edf730501a2469988b5fa9d89f14c" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;thread&lt;/em&gt; embodies the &lt;strong&gt;running context&lt;/strong&gt; (as in execution context: stack frame, thread id, etc.) of the &lt;em&gt;asynchronous execution&lt;/em&gt; of a piece of code. That &lt;em&gt;piece of code&lt;/em&gt; ideally should be the same implementation, whether &lt;em&gt;synchronous&lt;/em&gt; or &lt;em&gt;asynchronous&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;甲&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;螺纹&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;体现了&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运行的历境&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（如在执行上下文：堆栈帧，线程ID等）的&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;异步执行&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一段代码的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一段代码，&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;理想情况下应该是相同的实现，无论是&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同步&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;异步的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dd27ec3a109b191a2b4337d0e189ff11a09daa24" translate="yes" xml:space="preserve">
          <source>A class that implements Runnable is not a thread and just a class. For a Runnable to become a Thread, You need to create an instance of Thread and passing itself in as the target.</source>
          <target state="translated">一个实现了Runnable的类不是一个线程,只是一个类。要想让Runnable成为一个线程,你需要创建一个Thread的实例,并将自己作为目标传递进来。</target>
        </trans-unit>
        <trans-unit id="135959f92ccea58dd0ae914dbd2b7e95c97465fe" translate="yes" xml:space="preserve">
          <source>A) might give it a more useful name for debugging purposes</source>
          <target state="translated">A)可能会给它起一个更有用的名字来调试</target>
        </trans-unit>
        <trans-unit id="8f75a870d262f786db6d8ecd48442db110ed4409" translate="yes" xml:space="preserve">
          <source>Actually, It is not wise to compare &lt;code&gt;Runnable&lt;/code&gt; and &lt;code&gt;Thread&lt;/code&gt; with each other.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实际上，将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相互&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比较是不明智的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49c48e3500611ab4c25b532be6a67db336ad4144" translate="yes" xml:space="preserve">
          <source>Adding my two cents here -
&lt;strong&gt;Always whenever possible use &lt;code&gt;implements Runnable&lt;/code&gt; . Below are two caveats on why you should not use 
&lt;code&gt;extends Thread&lt;/code&gt;s&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在这里加两分钱- &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;始终在可能的情况下使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;implements Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下是有关为什么不应该使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;两个警告： &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e21ccd7ef72f4e2238fd70d36dd64f5606395ac" translate="yes" xml:space="preserve">
          <source>Allows you to run your
runnable from a Thread Pool, the
event thread, or in any other way in
the future.</source>
          <target state="translated">允许你从线程池、事件线程或未来的任何其他方式来运行你的可运行性。</target>
        </trans-unit>
        <trans-unit id="c0eacf29e8e5fc23869b004f56ea19fe3149cb3d" translate="yes" xml:space="preserve">
          <source>Always remember &lt;code&gt;implements&lt;/code&gt; is specially used to impart a behaviour and &lt;code&gt;extends&lt;/code&gt; is used to impart a feature/property.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;永远记住，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;implements&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;专门用于赋予行为，而&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;则用于赋予功能/特性。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="41932dab476ae54b2ba9663f01438a39888a91f3" translate="yes" xml:space="preserve">
          <source>Another option that allows you to stay closer to Runnables is a &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html&quot;&gt;ThreadPoolExecutor&lt;/a&gt;.  You can use the &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html#execute%28java.lang.Runnable%29&quot;&gt;execute&lt;/a&gt; method to pass in a Runnable to execute &quot;the given task sometime in the future.&quot;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;允许您更接近Runnables的另一个选项是&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ThreadPoolExecutor&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html#execute%28java.lang.Runnable%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;execute&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法来传递Runnable以执行&amp;ldquo;将来某个时间执行给定的任务&amp;rdquo;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26a30ff47e3f0bd898dc6328f6bd6e16780bde5b" translate="yes" xml:space="preserve">
          <source>B) are forcing that that name be used for all instances of that class (unless you ignore the fact that it is a thread and do the above with it as if it is a Runnable but we are talking about convention here in any case so can ignore that possibility I feel).</source>
          <target state="translated">B)强制将该名称用于该类的所有实例(除非你忽略了它是一个线程的事实,并将其作为一个Runnable来进行上述操作,但我们在这里讨论的是惯例,所以我觉得可以忽略这种可能性)。</target>
        </trans-unit>
        <trans-unit id="9c33e4b992bcd5ad5f1c70acf00ed1d2876f6bf9" translate="yes" xml:space="preserve">
          <source>Because we need both of them for multi-threading.</source>
          <target state="translated">因为我们需要这两样东西来实现多线程。</target>
        </trans-unit>
        <trans-unit id="d79bf5095fe6c49cabb42938911118237ccae20d" translate="yes" xml:space="preserve">
          <source>Both approaches do the same job but there have been some differences.</source>
          <target state="translated">这两种方法的作用是一样的,但也有一些不同。</target>
        </trans-unit>
        <trans-unit id="e47335bb4fee1525429811ff1fc770416433d4c1" translate="yes" xml:space="preserve">
          <source>Can we re-visit the basic reason we wanted our class to behave as a &lt;code&gt;Thread&lt;/code&gt;?
There is no reason at all, we just wanted to execute a task, most likely in an asynchronous mode, which precisely means that the execution of the task must branch from our main thread and the main thread if finishes early, may or may not wait for the branched path(task).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们是否可以重新访问我们希望类充当&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的基本原因&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;根本没有理由，我们只想执行一个任务，很可能是在异步模式下执行，这恰好意味着该任务的执行必须从我们的主线程中进行分支，并且如果提早完成，主线程可能会或可能不会等待用于分支路径（任务）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8be41cdea7c33cb4adc7250b989a0c2044687900" translate="yes" xml:space="preserve">
          <source>Courtesy from &lt;a href=&quot;http://javarevisited.blogspot.com/2012/01/difference-thread-vs-runnable-interface.html&quot;&gt;javarevisited.blogspot.com&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://javarevisited.blogspot.com/2012/01/difference-thread-vs-runnable-interface.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;javarevisited.blogspot.com提供&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9f7d1da0ff0684e9567952b066f07f4297dd22f" translate="yes" xml:space="preserve">
          <source>Difference between Extending Thread and Implementing Runnable are:</source>
          <target state="translated">扩展线程和实现Runnable的区别在于。</target>
        </trans-unit>
        <trans-unit id="74dcd980d3973daacec13a025b6f485731d7df7e" translate="yes" xml:space="preserve">
          <source>Difference between Thread and runnable
.If  we are creating Thread using Thread class then Number of thread equal to number of object we created  .
If we are creating thread  by implementing the runnable interface then we can use single object for creating multiple thread.So single object is shared by multiple Thread.So it will take less memory</source>
          <target state="translated">Thread和runnable的区别.如果我们使用Thread类创建线程,那么线程的数量等于我们创建的对象数量。如果我们使用runnable接口创建线程,那么我们可以使用单个对象来创建多个线程。</target>
        </trans-unit>
        <trans-unit id="a7c47f8b2ce8dea4b0409949c8129ad4c6aedfc2" translate="yes" xml:space="preserve">
          <source>Edit: This originally said &quot;Implementing an interface requires less resources.&quot; as well, but you need to create a new Thread instance either way, so this was wrong.</source>
          <target state="translated">编辑:这句话原本也是说的 &quot;实现一个接口需要较少的资源&quot;,但无论哪种方式,你都需要创建一个新的Thread实例,所以这句话是错的。</target>
        </trans-unit>
        <trans-unit id="de2f5151cd39d59bda01ca84b744dabe74b89f7a" translate="yes" xml:space="preserve">
          <source>Even if you don't need any of this now, you may in the future. Since there is no benefit to overriding Thread, Runnable is a better solution.</source>
          <target state="translated">即使你现在不需要这些,将来也可能需要。既然覆盖Thread没有任何好处,Runnable是一个更好的解决方案。</target>
        </trans-unit>
        <trans-unit id="db728c13fa2fea56c5941384a6f027e4f3d57e52" translate="yes" xml:space="preserve">
          <source>Everyone here seems to think that implementing Runnable is the way to go and I don't really disagree with them but there is also a case for extending Thread in my opinion, in fact you have sort of demonstrated it in your code.</source>
          <target state="translated">这里的每个人似乎都认为实现Runnable才是王道,我也不太同意他们的观点,但在我看来,扩展Thread也是有道理的,事实上,你在你的代码中已经证明了这一点。</target>
        </trans-unit>
        <trans-unit id="e327a40b4b2ef97c716273219e936462bc2ac116" translate="yes" xml:space="preserve">
          <source>ExecutorService vs Casual Thread Spawner</source>
          <target state="translated">ExecutorService vs Casual Thread Spawner</target>
        </trans-unit>
        <trans-unit id="873e43ca5da7a236c58074640430b89a7c6e98c1" translate="yes" xml:space="preserve">
          <source>Extends binds two class files very closely and can cause some pretty hard to deal with code.</source>
          <target state="translated">扩展将两个类文件绑定得非常紧密,会导致一些相当难处理的代码。</target>
        </trans-unit>
        <trans-unit id="72c557fcc430efa3db736e13c6d814068b4763ce" translate="yes" xml:space="preserve">
          <source>For Example: If you create an applet then it must extends Applet class so here the only way to create thread is by implementing Runnable interface</source>
          <target state="translated">比如说例子。如果你创建了一个applet,那么它必须扩展Applet类,所以这里唯一的方法是通过实现Runnable接口来创建线程。</target>
        </trans-unit>
        <trans-unit id="4e0db58a3276b57e311061e331b51a908b0fdec0" translate="yes" xml:space="preserve">
          <source>For Multi-threading we need two things:</source>
          <target state="translated">对于多线程,我们需要两样东西。</target>
        </trans-unit>
        <trans-unit id="ad0dd8459fdd20171f50f23ce34e179caa3828b9" translate="yes" xml:space="preserve">
          <source>For example, suppose there are two threads, &lt;strong&gt;thread1&lt;/strong&gt; puts an integer in an array and &lt;strong&gt;thread2&lt;/strong&gt; takes integers from the array when the array is filled up. Notice that in order for &lt;strong&gt;thread2&lt;/strong&gt; to work it needs to know the state of array, whether &lt;strong&gt;thread1&lt;/strong&gt; has filled it up or not.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如，假设有两个线程，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当数组被填满时&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;thread1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在数组中放置一个整数，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;thread2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从数组中获取整数。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请注意，为了使&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;线程2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;工作，它需要知道数组的状态，无论&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;线程1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是否&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;已将&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;其填满。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="027fc99eb14610b99442ecf66068ebe52172ab64" translate="yes" xml:space="preserve">
          <source>From what time I've spent with threads in Java, I've found these two ways to write threads:</source>
          <target state="translated">从我在Java中接触线程的时间来看,我发现了这两种写线程的方法。</target>
        </trans-unit>
        <trans-unit id="324d3a5aa1c2638d183de831f76dc3e117b5a876" translate="yes" xml:space="preserve">
          <source>Generally you don't need to override Thread behaviour. So &lt;strong&gt;implements Runnable&lt;/strong&gt; is preferred for most of the times.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常，您不需要重写线程行为。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在大多数情况下，首选使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnable工具&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a1e0bf4d5d4a889893d51a1a1f5f32748103403" translate="yes" xml:space="preserve">
          <source>Have a look at this SE Question:</source>
          <target state="translated">看一看这个SE的问题。</target>
        </trans-unit>
        <trans-unit id="4a92b6fe7283d99b84d9efb43b57c328c5537197" translate="yes" xml:space="preserve">
          <source>Having said that you could of course also do the above in a generic way by creating an extension of the thread class which sets its name to a stack trace of its creation call and then use that with your Runnable implementations instead of the standard java Thread class (see below) but in addition to the stack trace there might be more context specific information that would be useful in the thread name for debugging (a reference to one of many queues or sockets it could processing for example in which case you might prefer to extend Thread specifically for that case so that you can have the compiler force you (or others using your libraries) to pass in certain info (e.g. the queue/socket in question) for use in the name).</source>
          <target state="translated">当然,你也可以通过创建一个线程类的扩展,将其名称设置为创建调用的堆栈跟踪,然后在你的Runnable实现中使用它,而不是标准的java Thread类(见下文),但除了堆栈跟踪之外,可能还有更多的 线程名称中的特定上下文信息对调试有用(例如,在这种情况下,你可能更愿意专门为这种情况扩展Thread,以便让编译器强迫你(或其他使用你的库的人)在名称中传递某些信息(例如,在该名称中使用的队列或套接字)。 如:队列套接字库),以便在名称中使用。)</target>
        </trans-unit>
        <trans-unit id="08c2a23ab0fb11ecbf096de100a93e5d6df911bf" translate="yes" xml:space="preserve">
          <source>Here's an example of the generic thread with the calling stack trace as its name:</source>
          <target state="translated">下面是一个以调用栈跟踪为名称的通用线程的例子。</target>
        </trans-unit>
        <trans-unit id="85c6fc0c437b526c125958f58dea7f0a6304bc9d" translate="yes" xml:space="preserve">
          <source>I find it is most useful to use Runnable for all the reasons mentioned, but sometimes I like to extend Thread so I can create my own thread stopping method and call it directly on the thread I have created.</source>
          <target state="translated">我发现使用Runnable是最有用的,因为上述的所有原因,但有时我喜欢扩展Thread,这样我就可以创建自己的线程停止方法,直接在我创建的线程上调用它。</target>
        </trans-unit>
        <trans-unit id="65e5522b9e1d0900d5cb4c27b63d9563294a2ca8" translate="yes" xml:space="preserve">
          <source>I hope this will help!</source>
          <target state="translated">希望对大家有所帮助!</target>
        </trans-unit>
        <trans-unit id="ac79c883e4ced0595548e43e7b91c190d465117f" translate="yes" xml:space="preserve">
          <source>I would say there is a third way:</source>
          <target state="translated">我想说的是,还有第三种方法。</target>
        </trans-unit>
        <trans-unit id="a5b37ac8da09cf214b5f808911594fe6e0322540" translate="yes" xml:space="preserve">
          <source>I would say, there is only one way for multi-threading with two steps. Let me make my point.</source>
          <target state="translated">我想说的是,多线程只有一个方法,有两个步骤。让我来说说我的观点。</target>
        </trans-unit>
        <trans-unit id="0ffd9431249fb87edb68e5ca0e5eadd333491c1d" translate="yes" xml:space="preserve">
          <source>I'm not an expert, but I can think of one reason to implement Runnable instead of extend Thread: Java only supports single inheritance, so you can only extend one class.</source>
          <target state="translated">我不是专家,但我可以想到一个理由,就是实现Runnable而不是扩展Thread。Java只支持单继承,所以你只能扩展一个类。</target>
        </trans-unit>
        <trans-unit id="3d18427aa094ab6f29978b9fefeb6265b1bc5ba5" translate="yes" xml:space="preserve">
          <source>Ideally you should never extend the Thread class; the &lt;code&gt;Thread&lt;/code&gt; class should be made &lt;code&gt;final&lt;/code&gt;.
At least its methods like &lt;code&gt;thread.getId()&lt;/code&gt;. 
See &lt;a href=&quot;http://jsr166-concurrency.10961.n7.nabble.com/RRWL-with-bad-Thread-getId-implementations-tc9754.html&quot;&gt;this&lt;/a&gt; discussion for a bug related to extending &lt;code&gt;Thread&lt;/code&gt;s.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;理想情况下，您永远不要扩展Thread类。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类应作出&lt;/font&gt;&lt;/font&gt; &lt;code&gt;final&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;至少它的方法如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;thread.getId()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有关&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;扩展&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;错误，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请参&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsr166-concurrency.10961.n7.nabble.com/RRWL-with-bad-Thread-getId-implementations-tc9754.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;见此&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;讨论&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f44e3a1488fb5cf36acdf48aa499bffe3b7c9eea" translate="yes" xml:space="preserve">
          <source>If I am not wrong, it's more or less similar to</source>
          <target state="translated">如果我没猜错的话,这和 &quot;我 &quot;差不多。</target>
        </trans-unit>
        <trans-unit id="fc4df36da4c1e2f7c07b23a2de59954222a5db54" translate="yes" xml:space="preserve">
          <source>If You are already extending another class</source>
          <target state="translated">如果你已经在扩展另一个类</target>
        </trans-unit>
        <trans-unit id="6342a47eeea1ceaf847f21eddecb3fe8da59af40" translate="yes" xml:space="preserve">
          <source>If the language you use supports partial classes or multiple inheritance, then you can segregate each cause in its own super class, but it boils down to the same as composing the two objects, since their feature sets don't overlap. That's for the theory.</source>
          <target state="translated">如果你使用的语言支持部分类或多继承,那么你可以将每个原因隔离在自己的超级类中,但归结起来就相当于将这两个对象合成了,因为它们的特征集并不重叠。这是为理论上的。</target>
        </trans-unit>
        <trans-unit id="b122904374814680e0c87c8ebb323dabf5fab2d4" translate="yes" xml:space="preserve">
          <source>If this is the whole purpose, then where do I see the need of a specialized Thread. This can be accomplished by picking up a RAW Thread from the System's Thread Pool and assigning it our task (may be an instance of our class) and that is it.</source>
          <target state="translated">如果这就是全部目的,那么我觉得哪里需要一个专门的线程。这可以通过从系统的线程池中拿起一个RAW线程,然后给它分配我们的任务(可能是我们的类的一个实例),就可以实现。</target>
        </trans-unit>
        <trans-unit id="ef11e5e55d83ab9d5ce38a2d8df28f84ce13289e" translate="yes" xml:space="preserve">
          <source>If you are executing a fire and forget command</source>
          <target state="translated">如果你执行的是 &quot;火烧和遗忘 &quot;命令</target>
        </trans-unit>
        <trans-unit id="a150e16e712299b680363d48a4671c90d3457795" translate="yes" xml:space="preserve">
          <source>If you are interested in this question, you might be also interested in the &lt;a href=&quot;https://stackoverflow.com/questions/141284/the-difference-between-the-runnable-and-callable-interfaces-in-java&quot;&gt;difference between Callable and Runnable&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您对此问题感兴趣，则可能还对&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/141284/the-difference-between-the-runnable-and-callable-interfaces-in-java&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Callable和Runnable之间&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;区别&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;感兴趣&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95cb8c47af9fbbf31a40163a2329471f34c2e617" translate="yes" xml:space="preserve">
          <source>If you bundle them together in one implementation, you give the resulting object two &lt;em&gt;unrelated&lt;/em&gt; causes of change:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果将它们捆绑在一起在一个实现中，则会为生成的对象提供两个&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不相关&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的更改原因：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f39c6fd9d3033b1b085b0b29ced0065c77ca5abd" translate="yes" xml:space="preserve">
          <source>If you develop your task as Runnable, you have &lt;strong&gt;all flexibility how to use it now and in the future&lt;/strong&gt;. You can have it run concurrently via Executors but also via Thread. And you still could also use/call it non-concurrently within the same thread just as any other ordinary type/object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您将任务开发为Runnable，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;则现在和将来&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;都有&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用它的全部灵活性&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以通过Executors和Thread同时运行它。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而且您仍然可以像在任何其他普通类型/对象中一样在同一线程中非并行使用/调用它。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b06233f340315d59abea0994a2ed12b611e3a1c" translate="yes" xml:space="preserve">
          <source>If you don't have to extend Thread class and modify Thread API default implementation</source>
          <target state="translated">如果你不需要扩展Thread类,并修改Thread API的默认实现</target>
        </trans-unit>
        <trans-unit id="22ee7e19c4800fd711a27680a44778c07383aeee" translate="yes" xml:space="preserve">
          <source>If you don't need a particular result, consider using constructions of the form:</source>
          <target state="translated">如果你不需要特定的结果,可以考虑使用构造的形式。</target>
        </trans-unit>
        <trans-unit id="759d8c161af67860e42c2161b3f08627956f146f" translate="yes" xml:space="preserve">
          <source>If you extend Thread, you're basically preventing your logic to be executed by any other thread than 'this'. If you only want &lt;em&gt;some&lt;/em&gt; thread to execute your logic, it's better to just implement Runnable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果扩展Thread，则基本上是在阻止逻辑由&amp;ldquo; this&amp;rdquo;以外的任何其他线程执行。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果只希望&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;某个&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;线程执行您的逻辑，则最好只实现Runnable。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="60811860db91d34de647218919147c3c05adb03c" translate="yes" xml:space="preserve">
          <source>If you extend thread then the action you're doing is always going to be in a thread.  However, if you implement &lt;code&gt;Runnable&lt;/code&gt; it doesn't have to be.  You can run it in a thread, or pass it to some kind of executor service, or just pass it around as a task within a single threaded application (maybe to be run at a later time, but within the same thread).  The options are a lot more open if you just use &lt;code&gt;Runnable&lt;/code&gt; than if you bind yourself to &lt;code&gt;Thread&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果扩展线程，那么您正在执行的操作将始终处于线程中。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，如果您实现&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则不必如此。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以在线程中运行它，或将其传递给某种执行服务，或仅作为任务在单个线程应用程序中传递（可能在以后的时间，但在同一线程中运行）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您仅使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这些选项&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比将自己绑定到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; 时&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要开放&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;得多&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="219f8fa29339e9ae2c73575ff9e7a44eb262ccff" translate="yes" xml:space="preserve">
          <source>If you have to override any of these &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html&quot;&gt;Thread&lt;/a&gt; methods as listed in oracle documentation page</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您必须覆盖&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;oracle文档页面中列出的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有这些&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Thread&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31e4b9a37e12329f07844fa1cd37f135389dc5c9" translate="yes" xml:space="preserve">
          <source>If you implement Runnable then the class that implements Runnable has no control over the thread name, it is the calling code that can set the thread name, like so:</source>
          <target state="translated">如果你实现了Runnable,那么实现Runnable的类就没有控制线程名,是调用代码可以设置线程名,就像这样。</target>
        </trans-unit>
        <trans-unit id="13165552b81af3b7fdc922c6439175665b42c4cc" translate="yes" xml:space="preserve">
          <source>If you want to implements or extends any other class then &lt;code&gt;Runnable&lt;/code&gt; interface is most preferable, otherwise, if you do not want any other class to extend or implement then &lt;code&gt;Thread&lt;/code&gt; class is preferable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果要实现或扩展任何其他类，则&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最好使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;接口，否则，如果不希望扩展或实现任何其他类，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;则最好使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="673d5926ca53942d7d830b2c33d0112b5231ecb4" translate="yes" xml:space="preserve">
          <source>If you'd like to try using a thread pool, the code fragment above would become something like the following (using the &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool%28%29&quot;&gt;Executors.newCachedThreadPool()&lt;/a&gt; factory method):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您想尝试使用线程池，则上面的代码片段将变为以下内容（使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool%28%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Executors.newCachedThreadPool（）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;工厂方法）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f727775939919c6a445d2a7f83a71083b2d3a1b" translate="yes" xml:space="preserve">
          <source>Implementing &lt;code&gt;Runnable&lt;/code&gt; lets you to have this flexibility to share the object whereas &lt;code&gt;extends Thread&lt;/code&gt; makes you to create new objects for each threads therefore any update that is done by thread1 is lost to thread2.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实施&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使您可以灵活地共享对象，而&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使您可以为每个线程创建新对象，因此，由thread1完成的所有更新都将丢失到thread2中。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="452b22406c5a2c292e1d0351d7ee4d811df4b494" translate="yes" xml:space="preserve">
          <source>In &lt;em&gt;practical&lt;/em&gt; terms, it means you can implement &lt;code&gt;Runnable&lt;/code&gt; and extend from another class as well.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实践&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方面，它意味着你能实现&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; 接口&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，并从其他类扩展为好。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a917cf04e57360b680a976afe6c96e361e3d6f8" translate="yes" xml:space="preserve">
          <source>In Object-oriented programming, extending a class generally means, adding new functionality, and modifying or improving behaviors. If we are not making any modification on Thread then use Runnable interface instead.</source>
          <target state="translated">在面向对象编程中,扩展一个类通常意味着,增加新的功能,并修改或改进行为。如果我们不对Thread进行任何修改,那么就用Runnable接口来代替。</target>
        </trans-unit>
        <trans-unit id="073b55d5a0e2df99685e6167d705af287162c7a1" translate="yes" xml:space="preserve">
          <source>In general, I would recommend using something like &lt;code&gt;Runnable&lt;/code&gt; rather than &lt;code&gt;Thread&lt;/code&gt; because it allows you to keep your work only loosely coupled with your choice of concurrency.  For example, if you use a &lt;code&gt;Runnable&lt;/code&gt; and decide later on that this doesn't in fact require it's own &lt;code&gt;Thread&lt;/code&gt;, you can just call threadA.run().</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常，我建议使用类似&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而不是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; 的方法,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因为它可以使您的工作与并发选择保持松散耦合。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如，如果您使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并在以后决定实际上不需要它自己的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则可以只调用threadA.run（）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bce6d6dd7d4b58843b88abe31ec528c6228faba4" translate="yes" xml:space="preserve">
          <source>In most cases, the Runnable interface should be used if you are only planning to override the &lt;code&gt;run()&lt;/code&gt; method and no other Thread methods. This is important because classes should not be subclassed unless the programmer intends on modifying or enhancing the fundamental behavior of the class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在大多数情况下，如果您仅打算覆盖&lt;/font&gt;&lt;/font&gt; &lt;code&gt;run()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法而没有其他Thread方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则应使用Runnable接口&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这很重要，因为除非程序员打算修改或增强类的基本行为，否则不应将类归为子类。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49f3b20c1e64e8c4a79f4f7894f0ca27d29de597" translate="yes" xml:space="preserve">
          <source>In other words, implementing &lt;code&gt;Runnable&lt;/code&gt; will work in scenarios where your class extends a class other than &lt;code&gt;Thread&lt;/code&gt;. Java does not support multiple inheritance. Also, extending &lt;code&gt;Thread&lt;/code&gt; will not be possible when using some of the high-level thread management APIs. The only scenario where extending &lt;code&gt;Thread&lt;/code&gt; is preferable is in a small application that won't be subject to updates in future. It is almost always better to implement &lt;code&gt;Runnable&lt;/code&gt; as it is more flexible as your project grows. A design change won't have a major impact as you can implement many interfaces in java, but only extend one class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;换句话说，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在您的类扩展了&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; 之外的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;其他类的情况下&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，实现&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将起作用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。 Java不支持多重继承。另外，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用某些高级线程管理API时，无法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;扩展&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最好使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;扩展&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;的唯一情况&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是在小型应用程序中，该应用程序将来将不会进行更新。实施&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;几乎总是更好，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因为随着项目的增长它更加灵活。设计更改不会产生重大影响，因为您可以在Java中实现许多接口，而仅扩展一个类。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a06c6d743450813788e9cb962ba45b9527d1353e" translate="yes" xml:space="preserve">
          <source>In practice, generally speaking, a programme does not need to carry more complexity than necessary. If you have one thread working on a specific task, without ever changing that task, there is probably no point in making the tasks separate classes, and your code remains simpler.</source>
          <target state="translated">在实践中,一般来说,一个程序不需要承载更多的复杂性。如果你有一个线程处理一个特定的任务,而不曾改变过这个任务,那么可能就没有必要把任务分成不同的类,你的代码仍然是比较简单的。</target>
        </trans-unit>
        <trans-unit id="d75b75d2d148a11490f00c2bfaf95f291215fdf5" translate="yes" xml:space="preserve">
          <source>In the Runnable interface approach, only one instance of a class is being created and it has been shared by different threads. So the value of counter is incremented for each and every thread access.</source>
          <target state="translated">在Runnable接口方法中,一个类的实例只有一个,而且被不同的线程共享。所以每一个线程访问一次,计数器的值就会递增。</target>
        </trans-unit>
        <trans-unit id="2e0dbceaef5b924d0e8913609ad6fc3576fc58c5" translate="yes" xml:space="preserve">
          <source>In the context of &lt;em&gt;Java&lt;/em&gt;, since the facility is &lt;strong&gt;already there&lt;/strong&gt;, it is probably easier to start directly with stand alone &lt;code&gt;Runnable&lt;/code&gt; classes, and pass their instances to &lt;code&gt;Thread&lt;/code&gt; (or &lt;code&gt;Executor&lt;/code&gt;) instances. Once &lt;em&gt;used&lt;/em&gt; to that pattern, it is not harder to use (or even read) than the simple runnable thread case.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上下文中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，由于该功能&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;已经存在&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，因此直接从独立的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;开始&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并将它们的实例传递给&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）实例&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可能更容易&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一旦&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;习惯&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;了这种模式，使用（甚至读取）就不会比简单的可运行线程的情况更难。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b57f0fd65a56e6310fbd2e370e043b419ea1c2d" translate="yes" xml:space="preserve">
          <source>In the same light, &lt;em&gt;if you don't need&lt;/em&gt; to &lt;strong&gt;inherit&lt;/strong&gt; thread methods, you can do without that &lt;strong&gt;overhead&lt;/strong&gt; by using Runnable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在相同的光，&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果你不需要&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;继承&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Thread方法，你可以做而没有&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;开销&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用Runnable接口。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31dbde8d6d470fc93d0c6d746cadb9b08d447951" translate="yes" xml:space="preserve">
          <source>Inheriting all Thread methods are additional overhead just for representing a Task which can be done easily with Runnable.</source>
          <target state="translated">继承所有的Thread方法都是额外的开销,仅仅是为了表示一个Task,用Runnable就可以轻松完成。</target>
        </trans-unit>
        <trans-unit id="df0990131adc5c941ff4ae4bbd6a8a50be484743" translate="yes" xml:space="preserve">
          <source>Instantiating an interface gives a cleaner separation between your code and the implementation of threads, so I'd prefer to implement Runnable in this case.</source>
          <target state="translated">实例化一个接口,让你的代码和线程的实现之间有了更干净的分离,所以在这种情况下,我更喜欢实现Runnable。</target>
        </trans-unit>
        <trans-unit id="65f261489cb14059bf817628e87a457e1819026d" translate="yes" xml:space="preserve">
          <source>Is there any significant difference in these two blocks of code ?</source>
          <target state="translated">这两段代码是否有明显区别?</target>
        </trans-unit>
        <trans-unit id="75d953bf184515f7db37b042665869e721abb6ca" translate="yes" xml:space="preserve">
          <source>It is good design to separate domain logic from technical means, in that sense it is better to have a Runnable task &lt;strong&gt;isolating&lt;/strong&gt; your &lt;strong&gt;task from&lt;/strong&gt; your &lt;strong&gt;runner&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是很好的设计，从技术手段单独的域的逻辑，在这个意义上，最好是有一个Runnable任务&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;隔离&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从任务&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;亚军&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f74b9bbd8cab7122e230a1598d5c5ced2960aa7" translate="yes" xml:space="preserve">
          <source>Java designer recognizes this and that's why Executors accept Runnable as Task and they have worker thread which executes those task.</source>
          <target state="translated">Java设计者认识到这一点,这就是为什么执行者接受Runnable作为任务,他们有worker线程来执行这些任务。</target>
        </trans-unit>
        <trans-unit id="4447dcd2d3436db5024494dcd6f613fbd89e3c36" translate="yes" xml:space="preserve">
          <source>Java does not support multiple inheritence so if you extends Thread class then no other class will be extended.</source>
          <target state="translated">Java不支持多重继承,所以如果你扩展了Thread类,那么其他类都不会被扩展。</target>
        </trans-unit>
        <trans-unit id="913e8e6cdbb4c34a3e226960b7e54039100ca3cd" translate="yes" xml:space="preserve">
          <source>Java doesn't support multiple inheritances, which means you can only extend one class in Java so once you extended Thread class you lost your chance and cannot extend or inherit another class in Java.</source>
          <target state="translated">Java不支持多重继承,这意味着你只能在Java中扩展一个类,所以一旦你扩展了Thread类,你就失去了机会,无法在Java中扩展或继承另一个类。</target>
        </trans-unit>
        <trans-unit id="5d044bcb58e5016154e1cad7fca27ce7ed4fc5e8" translate="yes" xml:space="preserve">
          <source>Leaves more flexibility for the
Runnable implementation to extend
another class</source>
          <target state="translated">给Runnable实现留出更多的灵活性来扩展另一个类。</target>
        </trans-unit>
        <trans-unit id="98425613abed9e740647c2930f1763994c890654" translate="yes" xml:space="preserve">
          <source>Maybe this is influenced a bit by my recent heavy usage of Javascript and Actionscript 3, but this way your class doesn't need to implement a pretty vague interface like &lt;code&gt;Runnable&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;也许这受我最近大量使用Javascript和Actionscript 3的影响，但是通过这种方式，您的类不需要实现像&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这样的模糊接口&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="21293106cdf6ab6f3aba39c897fb3eb39df7ff25" translate="yes" xml:space="preserve">
          <source>Moral of the story:</source>
          <target state="translated">故事的道义。</target>
        </trans-unit>
        <trans-unit id="b09331c5ece2c70336bb710a450b8995b6bbf69c" translate="yes" xml:space="preserve">
          <source>On a different note, using advanced &lt;code&gt;ExecutorService&lt;/code&gt; or &lt;code&gt;ThreadPoolExecutorService&lt;/code&gt; API provides more flexibility and control.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;另外，使用高级&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExecutorService&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ThreadPoolExecutorService&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; API可提供更大的灵活性和控制力。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b72999a34ff38fba9e9f0fc91f3c9b60b6ccd67d" translate="yes" xml:space="preserve">
          <source>One reason you'd want to implement an interface rather than extend a base class is that you are already extending some other class. You can only extend one class, but you can implement any number of interfaces.</source>
          <target state="translated">你想实现一个接口而不是扩展一个基类的原因之一是你已经在扩展一些其他类。你只能扩展一个类,但你可以实现任意数量的接口。</target>
        </trans-unit>
        <trans-unit id="e24c9399fb337a187f29d1b874c7dc1426f3c801" translate="yes" xml:space="preserve">
          <source>One thing that I'm surprised hasn't been mentioned yet is that implementing &lt;code&gt;Runnable&lt;/code&gt; makes your class more flexible.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;尚未引起我惊讶的一件事是实现&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使您的类更加灵活。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e75803398e702c291b3769ca1fef0d0192f61423" translate="yes" xml:space="preserve">
          <source>Or rather it should be read as:</source>
          <target state="translated">或者说,应该读作:</target>
        </trans-unit>
        <trans-unit id="6642beda0a630021ef91d010a61f8536e7c8420b" translate="yes" xml:space="preserve">
          <source>Or, with &lt;code&gt;extends Thread&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或者，使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4f97ddaf0f12b6b4b1fe92d9e1887b45c3bdf8d" translate="yes" xml:space="preserve">
          <source>Please see  &lt;a href=&quot;http://pastebin.com/BjKNNs2G&quot;&gt;http://pastebin.com/BjKNNs2G&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请参阅 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://pastebin.com/BjKNNs2G&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://pastebin.com/BjKNNs2G&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aacd16ba0e272c55cc554ff9a6a907b81af5b8aa" translate="yes" xml:space="preserve">
          <source>Prefer &quot;&lt;strong&gt;&lt;em&gt;extends Thread&lt;/em&gt;&lt;/strong&gt;&quot; :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;首选&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;扩展线程&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rdquo;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b4cfb91a85e37aa98063528cdc4477e8ecf7747" translate="yes" xml:space="preserve">
          <source>Prefer &lt;strong&gt;&lt;em&gt;implements Runnable&lt;/em&gt;&lt;/strong&gt; :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;首选&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实现Runnable&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a503247ab3ac13abed963a23dc3f49ed043cfe87" translate="yes" xml:space="preserve">
          <source>Runnable because:</source>
          <target state="translated">可运行,因为。</target>
        </trans-unit>
        <trans-unit id="96c8e4642e9d898ac2b452c9a7f1abc772be5375" translate="yes" xml:space="preserve">
          <source>Runnable interface represents a Task which can be executed by either plain Thread or Executors or any other means. so logical separation of Task as Runnable than Thread is a good design decision.</source>
          <target state="translated">Runnable接口代表一个Task,它可以由普通的Thread或Executors或其他任何方式执行。</target>
        </trans-unit>
        <trans-unit id="31a1077c4c1517e991c6895311d2a20b0384f711" translate="yes" xml:space="preserve">
          <source>Separates the code from
execution</source>
          <target state="translated">将代码与执行分开</target>
        </trans-unit>
        <trans-unit id="3c0e7a1b5e34fd0115bf7d439c7677c9d16459dd" translate="yes" xml:space="preserve">
          <source>Separating task as Runnable means we can reuse the task and also has the liberty to execute it from different means. since you can not restart a Thread once it completes. again Runnable vs Thread for task, Runnable is winner.</source>
          <target state="translated">将任务分离为Runnable,意味着我们可以重复使用任务,也可以自由地从不同的方式执行它。</target>
        </trans-unit>
        <trans-unit id="410028c9b92c6e44e7a330f143b936d87c5fd5c1" translate="yes" xml:space="preserve">
          <source>Separating the Thread class from the Runnable implementation also avoids potential synchronization problems between the thread and the run() method. A separate Runnable generally gives greater flexibility in the way that runnable code is referenced and executed.</source>
          <target state="translated">将Thread类与Runnable实现分开也避免了线程和run()方法之间潜在的同步问题。一个独立的Runnable通常可以让Runnable代码的引用和执行方式更加灵活。</target>
        </trans-unit>
        <trans-unit id="0daa17e77c542f541e21348f4cf8d158b7678ed4" translate="yes" xml:space="preserve">
          <source>Since this is a very popular topic and the good answers are spread all over and dealt with in great depth, I felt it is justifiable to compile the good answers from the others into a more concise form, so newcomers have an easy overview upfront:</source>
          <target state="translated">由于这是一个非常热门的话题,而且好的答案遍布各地,涉及的内容也很深入,所以我觉得有必要把其他的好的答案整理成一个比较简练的形式,让新人在前期有一个简单的概述。</target>
        </trans-unit>
        <trans-unit id="5b75e54af566c3e4cac465449dcdd22070551de1" translate="yes" xml:space="preserve">
          <source>So depending upon the requirement if our data is not senstive. So It can be shared between multiple Thread we can used Runnable interface.</source>
          <target state="translated">所以根据需求,如果我们的数据不是很敏感,那么可以根据需求。所以我们可以使用Runnable接口来实现多个线程之间的共享。</target>
        </trans-unit>
        <trans-unit id="cc2f18f715f887a38db2fac1b1241ec481846a98" translate="yes" xml:space="preserve">
          <source>So let us obey the OOPs concept and write a class of the type we need. There are many ways to do things, doing it in the right way matters.</source>
          <target state="translated">所以,让我们服从OOPs的概念,写一个我们需要的类型的类。做事情有很多方法,用正确的方法去做很重要。</target>
        </trans-unit>
        <trans-unit id="35d398a4b9b18fdc7eca96bc37d83626d17c05ac" translate="yes" xml:space="preserve">
          <source>So technically and theoretically  both of them is necessary to start a thread, one will &lt;strong&gt;run&lt;/strong&gt; and one will &lt;strong&gt;make it run&lt;/strong&gt; (Like &lt;strong&gt;&lt;code&gt;Wheel and Engine&lt;/code&gt;&lt;/strong&gt; of motor vehicle).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，从技术上和理论上来说，它们都是启动线程所必需的，一个线程将&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运行&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，一个&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;线程&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使其运行&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（例如，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;Wheel and Engine&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;汽车&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;发动机&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b545a2434898cfb8782ccf0a8d7e029fdb34da3" translate="yes" xml:space="preserve">
          <source>So the class &lt;code&gt;MyRunnable&lt;/code&gt; is nothing but a ordinary class with a &lt;code&gt;void run&lt;/code&gt; method.
And it's objects will be some ordinary objects with only a method &lt;code&gt;run&lt;/code&gt; which will execute normally when called.  (unless we pass the object in a thread).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，类&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyRunnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;只是具有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;void run&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的普通类&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它的对象将是一些普通对象，只&lt;/font&gt;&lt;/font&gt; &lt;code&gt;run&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在调用时将正常执行。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（除非我们在线程中传递对象）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b54d7f8050854b9eb5a81cddc9af26dfd4b0ba6" translate="yes" xml:space="preserve">
          <source>So, if we replace their &lt;code&gt;runnable&lt;/code&gt; with your &lt;code&gt;threadA&lt;/code&gt;, we get the following:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，如果我们将它们的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;替换&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为您的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;threadA&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;则会&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;得到以下信息：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6400be6697fb840195678151fd7d93ac9d86eebe" translate="yes" xml:space="preserve">
          <source>Something That can start a new Thread (Thread).</source>
          <target state="translated">可以启动一个新的线程(线程)的东西。</target>
        </trans-unit>
        <trans-unit id="fe268f9a806c7a97d6d78b294bdf3e80f71c44dd" translate="yes" xml:space="preserve">
          <source>Something that can run inside a Thread (Runnable).</source>
          <target state="translated">可以在线程(Runnable)内运行的东西。</target>
        </trans-unit>
        <trans-unit id="40efdd35ec1623fee9be759660a8c39ed3f0a7e0" translate="yes" xml:space="preserve">
          <source>That's the &lt;a href=&quot;http://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;S&lt;/a&gt; of &lt;a href=&quot;http://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29&quot;&gt;SOLID&lt;/a&gt;: Single responsibility.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这就是&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;小号&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SOLID&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：单一职责。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad94796fb9f06c4d895e1c4991e7e6d3798f3795" translate="yes" xml:space="preserve">
          <source>That's why you can not start a thread with &lt;code&gt;MyRunnable&lt;/code&gt; you need to pass it to a instance of &lt;code&gt;Thread&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这就是为什么不能使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyRunnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;启动线程，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;需要将其传递给&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实例的原因&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6aad014664026933196b93fc54db59834f16f791" translate="yes" xml:space="preserve">
          <source>The simplest explanation would be by implementing &lt;code&gt;Runnable&lt;/code&gt; we can assign the same object to multiple threads and each &lt;code&gt;Thread&lt;/code&gt; shares the same object states and behavior.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最简单的解释是通过实现&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们可以将同一对象分配给多个线程，并且每个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;共享相同的对象状态和行为。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="df15d0f39c87e4500ca0893016552e9b7102d207" translate="yes" xml:space="preserve">
          <source>These are not only much shorter than your examples, but also come with many of the advantages stated in other answers of using &lt;code&gt;Runnable&lt;/code&gt; over &lt;code&gt;Thread&lt;/code&gt;, such as single responsibility and using composition because you're not specializing the thread's behaviour. This way also avoids creating an extra class if all you need is a &lt;code&gt;Runnable&lt;/code&gt; as you do in your examples.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这些不仅比您的示例短很多，而且还具有使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; 而&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thread&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;其他答案所陈述的许多优点&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，例如单一职责和使用组合，因为您没有专门研究线程的行为。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您只需要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;像示例中那样运行&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这种方法还可以避免创建额外的类&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d96ffb505d8310ea93cce480e6ec5f788584907" translate="yes" xml:space="preserve">
          <source>These were some of the notable differences between Thread and Runnable in Java. If you know any other differences on Thread vs Runnable than please share it via comments. I personally use Runnable over Thread for this scenario and recommends to use Runnable or Callable interface based on your requirement.</source>
          <target state="translated">这些是Java中Thread和Runnable之间的一些显著区别。如果你知道Thread和Runnable的区别,请通过评论分享。我个人在这个场景中使用Runnable而不是Thread,建议根据你的需求使用Runnable或Callable接口。</target>
        </trans-unit>
        <trans-unit id="1d5f2ab080cd9280dace153cfc8f38854287fa20" translate="yes" xml:space="preserve">
          <source>This is discussed in Oracle's &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/essential/concurrency/runthread.html&quot;&gt;Defining and Starting a Thread&lt;/a&gt; tutorial:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Oracle的&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/essential/concurrency/runthread.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义和启动线程&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;教程中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对此进行了讨论&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c3cbfd343caf7d647d887a68ac7b8a4a7d179d6" translate="yes" xml:space="preserve">
          <source>This makes it also easier to &lt;strong&gt;separate&lt;/strong&gt; task-logic and concurrency &lt;strong&gt;aspects in&lt;/strong&gt; your &lt;strong&gt;unit tests&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这使得它也更容易&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;单独&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;任务的逻辑和并发性&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的方面&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;你的&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;单元测试&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="17fc026b83d7e393a11f6a13c3426f6521cd7eac" translate="yes" xml:space="preserve">
          <source>This might seem like a small thing but where you have a very complex application with a lot of threads and all of a sudden things 'have stopped' (either for reasons of deadlock or possibly because of a flaw in a network protocol which would be less obvious - or other endless reasons) then getting a stack dump from Java where all the threads are called 'Thread-1','Thread-2','Thread-3' is not always very useful (it depends on how your threads are structured and whether you can usefully tell which is which just by their stack trace - not always possible if you are using groups of multiple threads all running the same code).</source>
          <target state="translated">这似乎是一件小事,但如果你有一个非常复杂的应用程序,有很多线程,突然间事情 &quot;停止了&quot;(可能是由于死锁的原因,也可能是网络协议的缺陷,而这个缺陷不那么明显--或者是其他无尽的原因),那么从Java中得到一个堆栈转储,其中所有的线程都被称为 &quot;Thread-1&quot;。 线程-2','线程-3'并不总是非常有用(这取决于你的线程是如何结构的,以及你是否可以通过线程的堆栈跟踪来判断哪个是有用的--如果你使用的是多线程组,所有的线程都在运行相同的代码,那就不一定能做到)。</target>
        </trans-unit>
        <trans-unit id="87abb7dd8e4d3d728598faa0e9340d014165ffb3" translate="yes" xml:space="preserve">
          <source>This two have a dependency and relationship in multi-threading just like &lt;code&gt;Wheel and Engine&lt;/code&gt; relationship of motor vehicle.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这两者在多线程中具有依赖关系，就像汽车的&amp;ldquo; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Wheel and Engine&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关系&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一样&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="373daad7e9321644f3a446ea6144ee0baecf6a48" translate="yes" xml:space="preserve">
          <source>Those who like to solve puzzles can see another side effect of extending Thread. The below code 
will print unreachable code when nobody is notifying them.</source>
          <target state="translated">喜欢解谜的朋友可以看到Thread的另一个副作用,扩展Thread的另一个副作用。下面的代码会在没有人通知他们时打印出无法到达的代码。</target>
        </trans-unit>
        <trans-unit id="06e005b4dac28bdf9b9f2e738e74f67830824baf" translate="yes" xml:space="preserve">
          <source>Use Runnable interface when you want to access the same resources from the group of threads. Avoid using Thread class here, because multiple objects creation consumes more memory and it becomes a big performance overhead.</source>
          <target state="translated">当你想从线程组中访问相同的资源时,请使用Runnable接口。避免在这里使用线程类,因为创建多个对象会消耗更多的内存,而且会成为一个很大的性能开销。</target>
        </trans-unit>
        <trans-unit id="eae2c2b67ec1f551dfa203ea142e948ae61b60a7" translate="yes" xml:space="preserve">
          <source>We do not want the thread's property, instead we want our class to behave as a task which can be run.</source>
          <target state="translated">我们不想要线程的属性,相反,我们希望我们的类能像一个可以运行的任务一样。</target>
        </trans-unit>
        <trans-unit id="2004802c1def0bfbaa1871673f394eaa9ff880af" translate="yes" xml:space="preserve">
          <source>We need a task, so write a task definition which can be run on a Thread. So use Runnable.</source>
          <target state="translated">我们需要一个任务,所以写一个可以在Thread上运行的任务定义。所以使用Runnable。</target>
        </trans-unit>
        <trans-unit id="78e7a8e6346110b062184eb90a63bd6b750dbc8b" translate="yes" xml:space="preserve">
          <source>Well so many good Answers, I want to add more on this. This will help to understand &lt;code&gt;Extending v/s Implementing Thread&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这么多好答案，我想补充一点。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这将有助于了解&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Extending v/s Implementing Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b82c489f872b085a7ad003127345364fb69ed884" translate="yes" xml:space="preserve">
          <source>What is the difference between an interface and abstract class?</source>
          <target state="translated">接口和抽象类有什么区别?</target>
        </trans-unit>
        <trans-unit id="236d5cd63182e755c22e19a5adeee2748111f58c" translate="yes" xml:space="preserve">
          <source>When implementing &lt;code&gt;interface Runnable&lt;/code&gt; it means you are creating something which is &lt;code&gt;run able&lt;/code&gt; in a different thread. Now creating something which can run inside a thread (runnable inside a thread), doesn't mean to creating a Thread.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当实现&lt;/font&gt;&lt;/font&gt; &lt;code&gt;interface Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，意味着您正在创建&lt;/font&gt;&lt;/font&gt; &lt;code&gt;run able&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在其他线程中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运行的对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在创建可以在线程内运行（可在线程内运行）的东西，并不意味着要创建线程。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3745fb71989a4e044c210feba42f4bf044bd3030" translate="yes" xml:space="preserve">
          <source>When there is a need to extend a superclass, implementing the Runnable interface is more appropriate than using the Thread class. Because we can extend another class while implementing Runnable interface to make a thread.</source>
          <target state="translated">当需要扩展一个超类时,实现Runnable接口比使用Thread类更合适。因为我们可以在实现Runnable接口的同时,扩展另一个类来做线程。</target>
        </trans-unit>
        <trans-unit id="c5ff3968cb8985044c47e00b5cba9cc0fe8c5c1e" translate="yes" xml:space="preserve">
          <source>When you &lt;code&gt;extends Thread&lt;/code&gt; class, after that you can&amp;rsquo;t extend any other class which you required. (As you know, Java does not allow inheriting more than one class).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当您&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类时，之后便无法扩展您需要的任何其他类。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（您知道，Java不允许继承多个类）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e17cab664efc85689b2242508d229076966d7955" translate="yes" xml:space="preserve">
          <source>When you &lt;code&gt;extends Thread&lt;/code&gt; class, each of your thread creates a unique object and associate with it.
When you &lt;code&gt;implements Runnable&lt;/code&gt;, it shares the same object to multiple threads.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当你&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类，每个线程创建一个唯一的对象和准它。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当您&lt;/font&gt;&lt;/font&gt; &lt;code&gt;implements Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它将同一对象共享给多个线程。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f2a76d24f44f7ae9e03bb03f42c6e15b134a771" translate="yes" xml:space="preserve">
          <source>When you &lt;code&gt;implements Runnable&lt;/code&gt;, you can save space for your class to extend any other class in the future or now.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当&lt;/font&gt;&lt;/font&gt; &lt;code&gt;implements Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，可以为您的类节省空间，以在将来或现在扩展任何其他类。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a128f112ee99f36368476f18bd5378db4c60d872" translate="yes" xml:space="preserve">
          <source>When you extend Thread class, after that you can&amp;rsquo;t extend any other class which you required. (As you know, Java does not allow inheriting more than one class).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当您扩展Thread类时，此后便无法扩展所需的任何其他类。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（您知道，Java不允许继承多个类）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd51cd51a205c0fcca4745df3354f5e1ab449908" translate="yes" xml:space="preserve">
          <source>When you implement Runnable, you can save space for your class to extend any other class in the future or now.</source>
          <target state="translated">当你实现Runnable的时候,你可以为你的类节省空间,让你的类在未来或现在扩展任何其他类。</target>
        </trans-unit>
        <trans-unit id="0e0e6973934c399e783b81b4042172920b877a88" translate="yes" xml:space="preserve">
          <source>Whereas, Thread class approach, you must have to create separate instance for every thread access. Hence different memory is allocated for every class instances and each has separate counter, the value remains same, which means no increment will happen because none of the object reference is same.</source>
          <target state="translated">而线程类的方法,你必须为每个线程的访问创建单独的实例。因此,每个类的实例都有不同的内存分配,并且每个实例都有单独的计数器,其值保持不变,这意味着不会发生增量,因为没有一个对象引用是相同的。</target>
        </trans-unit>
        <trans-unit id="0ffdc76564caf2c123c9ca2dce9891279792861c" translate="yes" xml:space="preserve">
          <source>Which of these idioms should you use? The first idiom, which employs a
  Runnable object, is more general, because the Runnable object can
  subclass a class other than Thread. The second idiom is easier to use
  in simple applications, but is limited by the fact that your task
  class must be a descendant of Thread. This lesson focuses on the first
  approach, which separates the Runnable task from the Thread object
  that executes the task. Not only is this approach more flexible, but
  it is applicable to the high-level thread management APIs covered
  later.</source>
          <target state="translated">这些成语应该用哪一个?第一个成语,它采用了Runnable对象,比较通用,因为Runnable对象可以子类Thread以外的类。第二种成语在简单的应用中更容易使用,但受限于你的任务类必须是Thread的子类的限制。本课主要讲的是第一种方法,它将Runnable任务与执行任务的Thread对象分开。这种方法不仅更灵活,而且适用于后面所讲的高级线程管理API。</target>
        </trans-unit>
        <trans-unit id="ff77565865db636f68fb467b8723798b53763440" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;implements Runnable&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与&lt;/font&gt;&lt;/font&gt; &lt;code&gt;implements Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="853fa9256b5a0955063f44f7f3c0fb638d4ab72b" translate="yes" xml:space="preserve">
          <source>With the release of Java 8, there is now a third option.</source>
          <target state="translated">随着Java 8的发布,现在有了第三个选择。</target>
        </trans-unit>
        <trans-unit id="a4d2dd0a50a02054e9052afd60821e047d2d17f3" translate="yes" xml:space="preserve">
          <source>Yes,
If you call ThreadA call , then  not need to call the start method and run method is call after call the ThreadA class only.
But If use the ThreadB call then need to necessary the start thread for call run method.
If you have any more help, reply me.</source>
          <target state="translated">是的,如果使用ThreadA调用,那么就不需要调用start方法,运行方法只在调用ThreadA类后调用。但是如果使用ThreadB调用的话,那么需要必要的start线程来调用run方法。如果你还有什么帮助,请回复我。</target>
        </trans-unit>
        <trans-unit id="c203d4090e273e2d4aba99a65662a708ee1a406f" translate="yes" xml:space="preserve">
          <source>Yes: implements &lt;code&gt;Runnable&lt;/code&gt; is the preferred way to do it, IMO. You're not really specialising the thread's behaviour.  You're just giving it something to run. That means &lt;a href=&quot;http://en.wikipedia.org/wiki/Object_composition&quot;&gt;composition&lt;/a&gt; is the &lt;em&gt;philosophically&lt;/em&gt; &quot;purer&quot; way to go.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是的：&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;IMO &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是实现&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的首选方法。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您并不是真的专门研究线程的行为。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您只是给它一些东西来运行。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这意味着&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Object_composition&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;合成&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是从&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;哲学&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上讲&amp;ldquo;更纯净&amp;rdquo;的方式。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d7535bb12b09b60b4eaa34abc75b026915b88b7" translate="yes" xml:space="preserve">
          <source>You can &lt;strong&gt;execute&lt;/strong&gt; the same Runnable &lt;strong&gt;object multiple times&lt;/strong&gt;, a Thread object, however, can only be started once. (Maybe the reason, why Executors do accept Runnables, but not Threads.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;多次&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;执行&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同一Runnable &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但是Thread对象只能启动一次。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（也许是原因，执行器为什么接受Runnable，但不接受Thread。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10b3f87aede523f4acf1b8326dd109f256a041ff" translate="yes" xml:space="preserve">
          <source>You might even for example take a stack trace of its creation and use that as the thread name.  This might seem odd but depending on how your code is structured it can be very useful for debugging purposes.</source>
          <target state="translated">例如,你甚至可以把创建的堆栈跟踪作为线程名。这可能看起来很奇怪,但根据你的代码结构,它对调试来说是非常有用的。</target>
        </trans-unit>
        <trans-unit id="c7ea60dfce8ee7cc8cc687888edf4b04532f8f6a" translate="yes" xml:space="preserve">
          <source>You should implement Runnable, but if you are running on Java 5 or higher, you should not start it with &lt;code&gt;new Thread&lt;/code&gt; but use an &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html&quot;&gt;ExecutorService&lt;/a&gt; instead. For details see: &lt;a href=&quot;https://stackoverflow.com/questions/125333/how-to-implement-simple-threading-in-java&quot;&gt;How to implement simple threading in Java&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您应该实现Runnable，但是如果您在Java 5或更高版本上运行，则不应使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Thread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;启动它，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而应使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ExecutorService&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有关详细信息，请参见：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/125333/how-to-implement-simple-threading-in-java&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如何在Java中实现简单线程&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="00e264d4c0d3056d3f62ecbb163750347e769810" translate="yes" xml:space="preserve">
          <source>You usually extend a class to add or modify functionality. So, &lt;em&gt;if you don't want&lt;/em&gt; to &lt;strong&gt;overwrite&lt;/strong&gt; any &lt;strong&gt;Thread behavior&lt;/strong&gt;, then use Runnable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常，您可以扩展一个类来添加或修改功能。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所以，&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果你不想&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;覆盖&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;任何&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;线程的行为&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，然后使用Runnable接口。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b52ab0bbdc36fa3ce8200d348176405633795fd4" translate="yes" xml:space="preserve">
          <source>Your example can be replaced with:</source>
          <target state="translated">你的例子可以换成:</target>
        </trans-unit>
        <trans-unit id="889fbbe3190eae4f82286aac9145244b9f720d11" translate="yes" xml:space="preserve">
          <source>algorithm implemented by the piece of code (the runnable part)</source>
          <target state="translated">算法实现的代码(可运行部分)。</target>
        </trans-unit>
        <trans-unit id="831283a4238416a712158b2f309e2619a8e56f24" translate="yes" xml:space="preserve">
          <source>and here's a sample of the output comparing the two names:</source>
          <target state="translated">这里是比较这两个名字的输出样本。</target>
        </trans-unit>
        <trans-unit id="5a408b341b31218147e3d07a1b8bcf1d2dddf347" translate="yes" xml:space="preserve">
          <source>but if you extend Thread then you get to manage this within the class itself (just like in your example you name the thread 'ThreadB').  In this case you:</source>
          <target state="translated">但如果你扩展了Thread,那么你就可以在类本身中管理这个问题(就像你的例子中,你给线程命名为'ThreadB')。在这种情况下,你。</target>
        </trans-unit>
        <trans-unit id="bcc7a7abbf820d9dc66f259bff8b86536c17ffa6" translate="yes" xml:space="preserve">
          <source>extends establishes &quot;&lt;strong&gt;Is A&lt;/strong&gt;&quot; relation &amp;amp; interface provides &quot;&lt;strong&gt;Has a&lt;/strong&gt;&quot; capability.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;扩展建立&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rdquo;关系并提供&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;具有&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rdquo;功能。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e52aaa5198aa8b1154e2f65db0ea2273d0bc235" translate="yes" xml:space="preserve">
          <source>if you use runnable you can save the space to extend to any of your other class.</source>
          <target state="translated">如果你使用runnable,你可以节省空间扩展到你的任何其他类。</target>
        </trans-unit>
        <trans-unit id="fbce27d51b99de0c79be3f3c9f8364605a9d2088" translate="yes" xml:space="preserve">
          <source>or if you want to use an &lt;code&gt;ExecutorService&lt;/code&gt; and a method reference:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或者，如果您想使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExecutorService&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和方法参考：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7fabc7ad01f56a22be539223a1585398a01c5e4a" translate="yes" xml:space="preserve">
          <source>thread handling in your application (ie. querying and modifying the execution context)</source>
          <target state="translated">应用程序中的线程处理(即查询和修改执行上下文)。</target>
        </trans-unit>
        <trans-unit id="48daf3a4108e0153576830925850ba9eb4db5204" translate="yes" xml:space="preserve">
          <source>“implements Runnable” vs “extends Thread” in Java</source>
          <target state="translated">Java中的 &quot;实现Runnable &quot;与 &quot;extends Thread &quot;的对比</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
